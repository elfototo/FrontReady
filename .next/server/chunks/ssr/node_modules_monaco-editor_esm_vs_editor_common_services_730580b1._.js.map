{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/model.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/model.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/model.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from '../model.js';\nimport { ILanguageSelection } from '../languages/language.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from '../languages.js';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface IModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget?: boolean): ITextModel;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\treadonly onModelAdded: Event<ITextModel>;\n\n\treadonly onModelRemoved: Event<ITextModel>;\n\n\treadonly onModelLanguageChanged: Event<{ readonly model: ITextModel; readonly oldLanguageId: string }>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../base/common/event.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ITextBufferFactory, ITextModel, ITextModelCreationOptions } from '../model.js';\nimport { ILanguageSelection } from '../languages/language.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from '../languages.js';\n\nexport const IModelService = createDecorator<IModelService>('modelService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface IModelService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget?: boolean): ITextModel;\n\n\tgetModels(): ITextModel[];\n\n\tgetCreationOptions(language: string, resource: URI, isForSimpleWidget: boolean): ITextModelCreationOptions;\n\n\tgetModel(resource: URI): ITextModel | null;\n\n\treadonly onModelAdded: Event<ITextModel>;\n\n\treadonly onModelRemoved: Event<ITextModel>;\n\n\treadonly onModelLanguageChanged: Event<{ readonly model: ITextModel; readonly oldLanguageId: string }>;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAMhG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAGnF,MAAM,aAAa,OAAG,wNAAe,EAAgB,cAAc,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/resolverService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/resolverService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/resolverService.ts"],"sourcesContent":["\nimport { IReference } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ITextModel } from '../model.js';\nimport { IResolvableEditorModel } from '../../../platform/editor/common/editor.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\n\nexport const ITextModelService = createDecorator<ITextModelService>('textModelService');\n\nexport interface ITextModelService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Provided a resource URI, it will return a model reference\n\t * which should be disposed once not needed anymore.\n\t */\n\tcreateModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>>;\n}\n\nexport interface ITextEditorModel extends IResolvableEditorModel {\n\n\t/**\n\t * Provides access to the underlying `ITextModel`.\n\t */\n\treadonly textEditorModel: ITextModel | null;\n}\n\nexport interface IResolvedTextEditorModel extends ITextEditorModel {\n\n\t/**\n\t * Same as ITextEditorModel#textEditorModel, but never null.\n\t */\n\treadonly textEditorModel: ITextModel;\n}\n","\nimport { IReference } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ITextModel } from '../model.js';\nimport { IResolvableEditorModel } from '../../../platform/editor/common/editor.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\n\nexport const ITextModelService = createDecorator<ITextModelService>('textModelService');\n\nexport interface ITextModelService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Provided a resource URI, it will return a model reference\n\t * which should be disposed once not needed anymore.\n\t */\n\tcreateModelReference(resource: URI): Promise<IReference<IResolvedTextEditorModel>>;\n}\n\nexport interface ITextEditorModel extends IResolvableEditorModel {\n\n\t/**\n\t * Provides access to the underlying `ITextModel`.\n\t */\n\treadonly textEditorModel: ITextModel | null;\n}\n\nexport interface IResolvedTextEditorModel extends ITextEditorModel {\n\n\t/**\n\t * Same as ITextEditorModel#textEditorModel, but never null.\n\t */\n\treadonly textEditorModel: ITextModel;\n}\n"],"names":[],"mappings":";;;;AAKA,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAEnF,MAAM,iBAAiB,OAAG,wNAAe,EAAoB,kBAAkB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/markerDecorations.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/markerDecorations.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IModelDecoration } from '../model.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IMarker } from '../../../platform/markers/common/markers.js';\nimport { URI } from '../../../base/common/uri.js';\n\nexport const IMarkerDecorationsService = createDecorator<IMarkerDecorationsService>('markerDecorationsService');\n\nexport interface IMarkerDecorationsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IModelDecoration } from '../model.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { IMarker } from '../../../platform/markers/common/markers.js';\nimport { URI } from '../../../base/common/uri.js';\n\nexport const IMarkerDecorationsService = createDecorator<IMarkerDecorationsService>('markerDecorationsService');\n\nexport interface IMarkerDecorationsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAGhG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAInF,MAAM,yBAAyB,OAAG,wNAAe,EAA4B,0BAA0B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitter/treeSitterThemeService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitter/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/treeSitter/treeSitterThemeService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitter/vs/editor/common/services/treeSitter/treeSitterThemeService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IObservable, IReader } from '../../../../base/common/observable.js';\n\nexport const ITreeSitterThemeService = createDecorator<ITreeSitterThemeService>('treeSitterThemeService');\n\nexport interface ITreeSitterThemeService {\n\treadonly _serviceBrand: undefined;\n\treadonly onChange: IObservable<void>;\n\n\tfindMetadata(captureNames: string[], languageId: number, bracket: boolean, reader: IReader | undefined): number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IObservable, IReader } from '../../../../base/common/observable.js';\n\nexport const ITreeSitterThemeService = createDecorator<ITreeSitterThemeService>('treeSitterThemeService');\n\nexport interface ITreeSitterThemeService {\n\treadonly _serviceBrand: undefined;\n\treadonly onChange: IObservable<void>;\n\n\tfindMetadata(captureNames: string[], languageId: number, bracket: boolean, reader: IReader | undefined): number;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,eAAe,EAAE,MAAM,4DAA4D,CAAC;;AAGtF,MAAM,uBAAuB,OAAG,wNAAe,EAA0B,wBAAwB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitter/treeSitterLibraryService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitter/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/treeSitter/treeSitterLibraryService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/treeSitter/vs/editor/common/services/treeSitter/treeSitterLibraryService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Language, Parser, Query } from '@vscode/tree-sitter-wasm';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IReader } from '../../../../base/common/observable.js';\n\nexport const ITreeSitterLibraryService = createDecorator<ITreeSitterLibraryService>('treeSitterLibraryService');\n\nexport interface ITreeSitterLibraryService {\n\treadonly _serviceBrand: undefined;\n\n\tgetParserClass(): Promise<typeof Parser>;\n\n\tsupportsLanguage(languageId: string, reader: IReader | undefined): boolean;\n\tgetLanguage(languageId: string, reader: IReader | undefined): Language | undefined;\n\t/**\n\t * Return value of null indicates that there are no injection queries for this language.\n\t * @param languageId\n\t * @param reader\n\t */\n\tgetInjectionQueries(languageId: string, reader: IReader | undefined): Query | null | undefined;\n\t/**\n\t * Return value of null indicates that there are no highlights queries for this language.\n\t * @param languageId\n\t * @param reader\n\t */\n\tgetHighlightingQueries(languageId: string, reader: IReader | undefined): Query | null | undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Language, Parser, Query } from '@vscode/tree-sitter-wasm';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IReader } from '../../../../base/common/observable.js';\n\nexport const ITreeSitterLibraryService = createDecorator<ITreeSitterLibraryService>('treeSitterLibraryService');\n\nexport interface ITreeSitterLibraryService {\n\treadonly _serviceBrand: undefined;\n\n\tgetParserClass(): Promise<typeof Parser>;\n\n\tsupportsLanguage(languageId: string, reader: IReader | undefined): boolean;\n\tgetLanguage(languageId: string, reader: IReader | undefined): Language | undefined;\n\t/**\n\t * Return value of null indicates that there are no injection queries for this language.\n\t * @param languageId\n\t * @param reader\n\t */\n\tgetInjectionQueries(languageId: string, reader: IReader | undefined): Query | null | undefined;\n\t/**\n\t * Return value of null indicates that there are no highlights queries for this language.\n\t * @param languageId\n\t * @param reader\n\t */\n\tgetHighlightingQueries(languageId: string, reader: IReader | undefined): Query | null | undefined;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAGhG,OAAO,EAAE,eAAe,EAAE,MAAM,4DAA4D,CAAC;;AAGtF,MAAM,yBAAyB,OAAG,wNAAe,EAA4B,0BAA0B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatures.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/languageFeatures.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/languageFeatures.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { CodeActionProvider, CodeLensProvider, CompletionItemProvider, DeclarationProvider, DefinitionProvider, DocumentColorProvider, DocumentFormattingEditProvider, DocumentHighlightProvider, DocumentDropEditProvider, DocumentPasteEditProvider, DocumentRangeFormattingEditProvider, DocumentRangeSemanticTokensProvider, DocumentSemanticTokensProvider, DocumentSymbolProvider, FoldingRangeProvider, HoverProvider, ImplementationProvider, InlayHintsProvider, InlineCompletionsProvider, LinkedEditingRangeProvider, LinkProvider, MultiDocumentHighlightProvider, NewSymbolNamesProvider, OnTypeFormattingEditProvider, ReferenceProvider, RenameProvider, SelectionRangeProvider, SignatureHelpProvider, TypeDefinitionProvider } from '../languages.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\n\nexport const ILanguageFeaturesService = createDecorator<ILanguageFeaturesService>('ILanguageFeaturesService');\n\nexport interface ILanguageFeaturesService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly referenceProvider: LanguageFeatureRegistry<ReferenceProvider>;\n\n\treadonly definitionProvider: LanguageFeatureRegistry<DefinitionProvider>;\n\n\treadonly typeDefinitionProvider: LanguageFeatureRegistry<TypeDefinitionProvider>;\n\n\treadonly declarationProvider: LanguageFeatureRegistry<DeclarationProvider>;\n\n\treadonly implementationProvider: LanguageFeatureRegistry<ImplementationProvider>;\n\n\treadonly codeActionProvider: LanguageFeatureRegistry<CodeActionProvider>;\n\n\treadonly documentPasteEditProvider: LanguageFeatureRegistry<DocumentPasteEditProvider>;\n\n\treadonly renameProvider: LanguageFeatureRegistry<RenameProvider>;\n\n\treadonly newSymbolNamesProvider: LanguageFeatureRegistry<NewSymbolNamesProvider>;\n\n\treadonly documentFormattingEditProvider: LanguageFeatureRegistry<DocumentFormattingEditProvider>;\n\n\treadonly documentRangeFormattingEditProvider: LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>;\n\n\treadonly onTypeFormattingEditProvider: LanguageFeatureRegistry<OnTypeFormattingEditProvider>;\n\n\treadonly documentSymbolProvider: LanguageFeatureRegistry<DocumentSymbolProvider>;\n\n\treadonly inlayHintsProvider: LanguageFeatureRegistry<InlayHintsProvider>;\n\n\treadonly colorProvider: LanguageFeatureRegistry<DocumentColorProvider>;\n\n\treadonly codeLensProvider: LanguageFeatureRegistry<CodeLensProvider>;\n\n\treadonly signatureHelpProvider: LanguageFeatureRegistry<SignatureHelpProvider>;\n\n\treadonly hoverProvider: LanguageFeatureRegistry<HoverProvider>;\n\n\treadonly documentHighlightProvider: LanguageFeatureRegistry<DocumentHighlightProvider>;\n\n\treadonly multiDocumentHighlightProvider: LanguageFeatureRegistry<MultiDocumentHighlightProvider>;\n\n\treadonly documentRangeSemanticTokensProvider: LanguageFeatureRegistry<DocumentRangeSemanticTokensProvider>;\n\n\treadonly documentSemanticTokensProvider: LanguageFeatureRegistry<DocumentSemanticTokensProvider>;\n\n\treadonly selectionRangeProvider: LanguageFeatureRegistry<SelectionRangeProvider>;\n\n\treadonly foldingRangeProvider: LanguageFeatureRegistry<FoldingRangeProvider>;\n\n\treadonly linkProvider: LanguageFeatureRegistry<LinkProvider>;\n\n\treadonly inlineCompletionsProvider: LanguageFeatureRegistry<InlineCompletionsProvider>;\n\n\treadonly completionProvider: LanguageFeatureRegistry<CompletionItemProvider>;\n\n\treadonly linkedEditingRangeProvider: LanguageFeatureRegistry<LinkedEditingRangeProvider>;\n\n\treadonly documentDropEditProvider: LanguageFeatureRegistry<DocumentDropEditProvider>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { CodeActionProvider, CodeLensProvider, CompletionItemProvider, DeclarationProvider, DefinitionProvider, DocumentColorProvider, DocumentFormattingEditProvider, DocumentHighlightProvider, DocumentDropEditProvider, DocumentPasteEditProvider, DocumentRangeFormattingEditProvider, DocumentRangeSemanticTokensProvider, DocumentSemanticTokensProvider, DocumentSymbolProvider, FoldingRangeProvider, HoverProvider, ImplementationProvider, InlayHintsProvider, InlineCompletionsProvider, LinkedEditingRangeProvider, LinkProvider, MultiDocumentHighlightProvider, NewSymbolNamesProvider, OnTypeFormattingEditProvider, ReferenceProvider, RenameProvider, SelectionRangeProvider, SignatureHelpProvider, TypeDefinitionProvider } from '../languages.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\n\nexport const ILanguageFeaturesService = createDecorator<ILanguageFeaturesService>('ILanguageFeaturesService');\n\nexport interface ILanguageFeaturesService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly referenceProvider: LanguageFeatureRegistry<ReferenceProvider>;\n\n\treadonly definitionProvider: LanguageFeatureRegistry<DefinitionProvider>;\n\n\treadonly typeDefinitionProvider: LanguageFeatureRegistry<TypeDefinitionProvider>;\n\n\treadonly declarationProvider: LanguageFeatureRegistry<DeclarationProvider>;\n\n\treadonly implementationProvider: LanguageFeatureRegistry<ImplementationProvider>;\n\n\treadonly codeActionProvider: LanguageFeatureRegistry<CodeActionProvider>;\n\n\treadonly documentPasteEditProvider: LanguageFeatureRegistry<DocumentPasteEditProvider>;\n\n\treadonly renameProvider: LanguageFeatureRegistry<RenameProvider>;\n\n\treadonly newSymbolNamesProvider: LanguageFeatureRegistry<NewSymbolNamesProvider>;\n\n\treadonly documentFormattingEditProvider: LanguageFeatureRegistry<DocumentFormattingEditProvider>;\n\n\treadonly documentRangeFormattingEditProvider: LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>;\n\n\treadonly onTypeFormattingEditProvider: LanguageFeatureRegistry<OnTypeFormattingEditProvider>;\n\n\treadonly documentSymbolProvider: LanguageFeatureRegistry<DocumentSymbolProvider>;\n\n\treadonly inlayHintsProvider: LanguageFeatureRegistry<InlayHintsProvider>;\n\n\treadonly colorProvider: LanguageFeatureRegistry<DocumentColorProvider>;\n\n\treadonly codeLensProvider: LanguageFeatureRegistry<CodeLensProvider>;\n\n\treadonly signatureHelpProvider: LanguageFeatureRegistry<SignatureHelpProvider>;\n\n\treadonly hoverProvider: LanguageFeatureRegistry<HoverProvider>;\n\n\treadonly documentHighlightProvider: LanguageFeatureRegistry<DocumentHighlightProvider>;\n\n\treadonly multiDocumentHighlightProvider: LanguageFeatureRegistry<MultiDocumentHighlightProvider>;\n\n\treadonly documentRangeSemanticTokensProvider: LanguageFeatureRegistry<DocumentRangeSemanticTokensProvider>;\n\n\treadonly documentSemanticTokensProvider: LanguageFeatureRegistry<DocumentSemanticTokensProvider>;\n\n\treadonly selectionRangeProvider: LanguageFeatureRegistry<SelectionRangeProvider>;\n\n\treadonly foldingRangeProvider: LanguageFeatureRegistry<FoldingRangeProvider>;\n\n\treadonly linkProvider: LanguageFeatureRegistry<LinkProvider>;\n\n\treadonly inlineCompletionsProvider: LanguageFeatureRegistry<InlineCompletionsProvider>;\n\n\treadonly completionProvider: LanguageFeatureRegistry<CompletionItemProvider>;\n\n\treadonly linkedEditingRangeProvider: LanguageFeatureRegistry<LinkedEditingRangeProvider>;\n\n\treadonly documentDropEditProvider: LanguageFeatureRegistry<DocumentDropEditProvider>;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAIhG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAEnF,MAAM,wBAAwB,OAAG,wNAAe,EAA2B,0BAA0B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/editorWorker.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/editorWorker.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/editorWorker.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { IRange } from '../core/range.js';\nimport { IDocumentDiff, IDocumentDiffProviderOptions } from '../diff/documentDiffProvider.js';\nimport { IColorInformation, IInplaceReplaceSupportResult, TextEdit } from '../languages.js';\nimport { UnicodeHighlighterOptions } from './unicodeTextModelHighlighter.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { SectionHeader, FindSectionHeaderOptions } from './findSectionHeaders.js';\n\nexport const IEditorWorkerService = createDecorator<IEditorWorkerService>('editorWorkerService');\n\nexport type DiffAlgorithmName = 'legacy' | 'advanced';\n\nexport interface IEditorWorkerService {\n\treadonly _serviceBrand: undefined;\n\n\tcanComputeUnicodeHighlights(uri: URI): boolean;\n\tcomputedUnicodeHighlights(uri: URI, options: UnicodeHighlighterOptions, range?: IRange): Promise<IUnicodeHighlightsResult>;\n\n\t/** Implementation in {@link EditorWorker.computeDiff} */\n\tcomputeDiff(original: URI, modified: URI, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): Promise<IDocumentDiff | null>;\n\n\tcomputeMoreMinimalEdits(resource: URI, edits: TextEdit[] | null | undefined, pretty?: boolean): Promise<TextEdit[] | undefined>;\n\n\tcanComputeWordRanges(resource: URI): boolean;\n\tcomputeWordRanges(resource: URI, range: IRange): Promise<{ [word: string]: IRange[] } | null>;\n\n\tcanNavigateValueSet(resource: URI): boolean;\n\tnavigateValueSet(resource: URI, range: IRange, up: boolean): Promise<IInplaceReplaceSupportResult | null>;\n\n\tfindSectionHeaders(uri: URI, options: FindSectionHeaderOptions): Promise<SectionHeader[]>;\n\n\tcomputeDefaultDocumentColors(uri: URI): Promise<IColorInformation[] | null>;\n\n}\n\nexport interface IDiffComputationResult {\n\tquitEarly: boolean;\n\tchanges: ILineChange[];\n\tidentical: boolean;\n\tmoves: ITextMove[];\n}\n\nexport type ILineChange = [\n\toriginalStartLine: number,\n\toriginalEndLine: number,\n\tmodifiedStartLine: number,\n\tmodifiedEndLine: number,\n\tcharChanges: ICharChange[] | undefined,\n];\n\nexport type ICharChange = [\n\toriginalStartLine: number,\n\toriginalStartColumn: number,\n\toriginalEndLine: number,\n\toriginalEndColumn: number,\n\n\tmodifiedStartLine: number,\n\tmodifiedStartColumn: number,\n\tmodifiedEndLine: number,\n\tmodifiedEndColumn: number,\n];\n\nexport type ITextMove = [\n\toriginalStartLine: number,\n\toriginalEndLine: number,\n\tmodifiedStartLine: number,\n\tmodifiedEndLine: number,\n\tchanges: ILineChange[],\n];\n\nexport interface IUnicodeHighlightsResult {\n\tranges: IRange[];\n\thasMore: boolean;\n\tnonBasicAsciiCharacterCount: number;\n\tinvisibleCharacterCount: number;\n\tambiguousCharacterCount: number;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { IRange } from '../core/range.js';\nimport { IDocumentDiff, IDocumentDiffProviderOptions } from '../diff/documentDiffProvider.js';\nimport { IColorInformation, IInplaceReplaceSupportResult, TextEdit } from '../languages.js';\nimport { UnicodeHighlighterOptions } from './unicodeTextModelHighlighter.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { SectionHeader, FindSectionHeaderOptions } from './findSectionHeaders.js';\n\nexport const IEditorWorkerService = createDecorator<IEditorWorkerService>('editorWorkerService');\n\nexport type DiffAlgorithmName = 'legacy' | 'advanced';\n\nexport interface IEditorWorkerService {\n\treadonly _serviceBrand: undefined;\n\n\tcanComputeUnicodeHighlights(uri: URI): boolean;\n\tcomputedUnicodeHighlights(uri: URI, options: UnicodeHighlighterOptions, range?: IRange): Promise<IUnicodeHighlightsResult>;\n\n\t/** Implementation in {@link EditorWorker.computeDiff} */\n\tcomputeDiff(original: URI, modified: URI, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): Promise<IDocumentDiff | null>;\n\n\tcomputeMoreMinimalEdits(resource: URI, edits: TextEdit[] | null | undefined, pretty?: boolean): Promise<TextEdit[] | undefined>;\n\n\tcanComputeWordRanges(resource: URI): boolean;\n\tcomputeWordRanges(resource: URI, range: IRange): Promise<{ [word: string]: IRange[] } | null>;\n\n\tcanNavigateValueSet(resource: URI): boolean;\n\tnavigateValueSet(resource: URI, range: IRange, up: boolean): Promise<IInplaceReplaceSupportResult | null>;\n\n\tfindSectionHeaders(uri: URI, options: FindSectionHeaderOptions): Promise<SectionHeader[]>;\n\n\tcomputeDefaultDocumentColors(uri: URI): Promise<IColorInformation[] | null>;\n\n}\n\nexport interface IDiffComputationResult {\n\tquitEarly: boolean;\n\tchanges: ILineChange[];\n\tidentical: boolean;\n\tmoves: ITextMove[];\n}\n\nexport type ILineChange = [\n\toriginalStartLine: number,\n\toriginalEndLine: number,\n\tmodifiedStartLine: number,\n\tmodifiedEndLine: number,\n\tcharChanges: ICharChange[] | undefined,\n];\n\nexport type ICharChange = [\n\toriginalStartLine: number,\n\toriginalStartColumn: number,\n\toriginalEndLine: number,\n\toriginalEndColumn: number,\n\n\tmodifiedStartLine: number,\n\tmodifiedStartColumn: number,\n\tmodifiedEndLine: number,\n\tmodifiedEndColumn: number,\n];\n\nexport type ITextMove = [\n\toriginalStartLine: number,\n\toriginalEndLine: number,\n\tmodifiedStartLine: number,\n\tmodifiedEndLine: number,\n\tchanges: ILineChange[],\n];\n\nexport interface IUnicodeHighlightsResult {\n\tranges: IRange[];\n\thasMore: boolean;\n\tnonBasicAsciiCharacterCount: number;\n\tinvisibleCharacterCount: number;\n\tambiguousCharacterCount: number;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAOhG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAGnF,MAAM,oBAAoB,OAAG,wNAAe,EAAuB,qBAAqB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/languageFeatureDebounce.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/languageFeatureDebounce.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { doHash } from '../../../base/common/hash.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { clamp, MovingAverage, SlidingWindowAverage } from '../../../base/common/numbers.js';\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { ITextModel } from '../model.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { matchesScheme } from '../../../base/common/network.js';\n\n\nexport const ILanguageFeatureDebounceService = createDecorator<ILanguageFeatureDebounceService>('ILanguageFeatureDebounceService');\n\nexport interface ILanguageFeatureDebounceService {\n\n\treadonly _serviceBrand: undefined;\n\n\tfor(feature: LanguageFeatureRegistry<object>, debugName: string, config?: { min?: number; max?: number; salt?: string }): IFeatureDebounceInformation;\n}\n\nexport interface IFeatureDebounceInformation {\n\tget(model: ITextModel): number;\n\tupdate(model: ITextModel, value: number): number;\n\tdefault(): number;\n}\n\nnamespace IdentityHash {\n\tconst _hashes = new WeakMap<object, number>();\n\tlet pool = 0;\n\texport function of(obj: object): number {\n\t\tlet value = _hashes.get(obj);\n\t\tif (value === undefined) {\n\t\t\tvalue = ++pool;\n\t\t\t_hashes.set(obj, value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nclass NullDebounceInformation implements IFeatureDebounceInformation {\n\n\tconstructor(private readonly _default: number) { }\n\n\tget(_model: ITextModel): number {\n\t\treturn this._default;\n\t}\n\tupdate(_model: ITextModel, _value: number): number {\n\t\treturn this._default;\n\t}\n\tdefault(): number {\n\t\treturn this._default;\n\t}\n}\n\nclass FeatureDebounceInformation implements IFeatureDebounceInformation {\n\n\tprivate readonly _cache = new LRUCache<string, SlidingWindowAverage>(50, 0.7);\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _registry: LanguageFeatureRegistry<object>,\n\t\tprivate readonly _default: number,\n\t\tprivate readonly _min: number,\n\t\tprivate readonly _max: number,\n\t) { }\n\n\tprivate _key(model: ITextModel): string {\n\t\treturn model.id + this._registry.all(model).reduce((hashVal, obj) => doHash(IdentityHash.of(obj), hashVal), 0);\n\t}\n\n\tget(model: ITextModel): number {\n\t\tconst key = this._key(model);\n\t\tconst avg = this._cache.get(key);\n\t\treturn avg\n\t\t\t? clamp(avg.value, this._min, this._max)\n\t\t\t: this.default();\n\t}\n\n\tupdate(model: ITextModel, value: number): number {\n\t\tconst key = this._key(model);\n\t\tlet avg = this._cache.get(key);\n\t\tif (!avg) {\n\t\t\tavg = new SlidingWindowAverage(6);\n\t\t\tthis._cache.set(key, avg);\n\t\t}\n\t\tconst newValue = clamp(avg.update(value), this._min, this._max);\n\t\tif (!matchesScheme(model.uri, 'output')) {\n\t\t\tthis._logService.trace(`[DEBOUNCE: ${this._name}] for ${model.uri.toString()} is ${newValue}ms`);\n\t\t}\n\t\treturn newValue;\n\t}\n\n\tprivate _overall(): number {\n\t\tconst result = new MovingAverage();\n\t\tfor (const [, avg] of this._cache) {\n\t\t\tresult.update(avg.value);\n\t\t}\n\t\treturn result.value;\n\t}\n\n\tdefault() {\n\t\tconst value = (this._overall() | 0) || this._default;\n\t\treturn clamp(value, this._min, this._max);\n\t}\n}\n\n\nexport class LanguageFeatureDebounceService implements ILanguageFeatureDebounceService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _data = new Map<string, IFeatureDebounceInformation>();\n\tprivate readonly _isDev: boolean;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEnvironmentService envService: IEnvironmentService,\n\t) {\n\n\t\tthis._isDev = envService.isExtensionDevelopment || !envService.isBuilt;\n\t}\n\n\tfor(feature: LanguageFeatureRegistry<object>, name: string, config?: { min?: number; max?: number; key?: string }): IFeatureDebounceInformation {\n\t\tconst min = config?.min ?? 50;\n\t\tconst max = config?.max ?? min ** 2;\n\t\tconst extra = config?.key ?? undefined;\n\t\tconst key = `${IdentityHash.of(feature)},${min}${extra ? ',' + extra : ''}`;\n\t\tlet info = this._data.get(key);\n\t\tif (!info) {\n\t\t\tif (this._isDev) {\n\t\t\t\tthis._logService.debug(`[DEBOUNCE: ${name}] is disabled in developed mode`);\n\t\t\t\tinfo = new NullDebounceInformation(min * 1.5);\n\t\t\t} else {\n\t\t\t\tinfo = new FeatureDebounceInformation(\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tname,\n\t\t\t\t\tfeature,\n\t\t\t\t\t(this._overallAverage() | 0) || (min * 1.5), // default is overall default or derived from min-value\n\t\t\t\t\tmin,\n\t\t\t\t\tmax\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._data.set(key, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\tprivate _overallAverage(): number {\n\t\t// Average of all language features. Not a great value but an approximation\n\t\tconst result = new MovingAverage();\n\t\tfor (const info of this._data.values()) {\n\t\t\tresult.update(info.default());\n\t\t}\n\t\treturn result.value;\n\t}\n}\n\nregisterSingleton(ILanguageFeatureDebounceService, LanguageFeatureDebounceService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { doHash } from '../../../base/common/hash.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { clamp, MovingAverage, SlidingWindowAverage } from '../../../base/common/numbers.js';\nimport { LanguageFeatureRegistry } from '../languageFeatureRegistry.js';\nimport { ITextModel } from '../model.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { matchesScheme } from '../../../base/common/network.js';\n\n\nexport const ILanguageFeatureDebounceService = createDecorator<ILanguageFeatureDebounceService>('ILanguageFeatureDebounceService');\n\nexport interface ILanguageFeatureDebounceService {\n\n\treadonly _serviceBrand: undefined;\n\n\tfor(feature: LanguageFeatureRegistry<object>, debugName: string, config?: { min?: number; max?: number; salt?: string }): IFeatureDebounceInformation;\n}\n\nexport interface IFeatureDebounceInformation {\n\tget(model: ITextModel): number;\n\tupdate(model: ITextModel, value: number): number;\n\tdefault(): number;\n}\n\nnamespace IdentityHash {\n\tconst _hashes = new WeakMap<object, number>();\n\tlet pool = 0;\n\texport function of(obj: object): number {\n\t\tlet value = _hashes.get(obj);\n\t\tif (value === undefined) {\n\t\t\tvalue = ++pool;\n\t\t\t_hashes.set(obj, value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nclass NullDebounceInformation implements IFeatureDebounceInformation {\n\n\tconstructor(private readonly _default: number) { }\n\n\tget(_model: ITextModel): number {\n\t\treturn this._default;\n\t}\n\tupdate(_model: ITextModel, _value: number): number {\n\t\treturn this._default;\n\t}\n\tdefault(): number {\n\t\treturn this._default;\n\t}\n}\n\nclass FeatureDebounceInformation implements IFeatureDebounceInformation {\n\n\tprivate readonly _cache = new LRUCache<string, SlidingWindowAverage>(50, 0.7);\n\n\tconstructor(\n\t\tprivate readonly _logService: ILogService,\n\t\tprivate readonly _name: string,\n\t\tprivate readonly _registry: LanguageFeatureRegistry<object>,\n\t\tprivate readonly _default: number,\n\t\tprivate readonly _min: number,\n\t\tprivate readonly _max: number,\n\t) { }\n\n\tprivate _key(model: ITextModel): string {\n\t\treturn model.id + this._registry.all(model).reduce((hashVal, obj) => doHash(IdentityHash.of(obj), hashVal), 0);\n\t}\n\n\tget(model: ITextModel): number {\n\t\tconst key = this._key(model);\n\t\tconst avg = this._cache.get(key);\n\t\treturn avg\n\t\t\t? clamp(avg.value, this._min, this._max)\n\t\t\t: this.default();\n\t}\n\n\tupdate(model: ITextModel, value: number): number {\n\t\tconst key = this._key(model);\n\t\tlet avg = this._cache.get(key);\n\t\tif (!avg) {\n\t\t\tavg = new SlidingWindowAverage(6);\n\t\t\tthis._cache.set(key, avg);\n\t\t}\n\t\tconst newValue = clamp(avg.update(value), this._min, this._max);\n\t\tif (!matchesScheme(model.uri, 'output')) {\n\t\t\tthis._logService.trace(`[DEBOUNCE: ${this._name}] for ${model.uri.toString()} is ${newValue}ms`);\n\t\t}\n\t\treturn newValue;\n\t}\n\n\tprivate _overall(): number {\n\t\tconst result = new MovingAverage();\n\t\tfor (const [, avg] of this._cache) {\n\t\t\tresult.update(avg.value);\n\t\t}\n\t\treturn result.value;\n\t}\n\n\tdefault() {\n\t\tconst value = (this._overall() | 0) || this._default;\n\t\treturn clamp(value, this._min, this._max);\n\t}\n}\n\n\nexport class LanguageFeatureDebounceService implements ILanguageFeatureDebounceService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _data = new Map<string, IFeatureDebounceInformation>();\n\tprivate readonly _isDev: boolean;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IEnvironmentService envService: IEnvironmentService,\n\t) {\n\n\t\tthis._isDev = envService.isExtensionDevelopment || !envService.isBuilt;\n\t}\n\n\tfor(feature: LanguageFeatureRegistry<object>, name: string, config?: { min?: number; max?: number; key?: string }): IFeatureDebounceInformation {\n\t\tconst min = config?.min ?? 50;\n\t\tconst max = config?.max ?? min ** 2;\n\t\tconst extra = config?.key ?? undefined;\n\t\tconst key = `${IdentityHash.of(feature)},${min}${extra ? ',' + extra : ''}`;\n\t\tlet info = this._data.get(key);\n\t\tif (!info) {\n\t\t\tif (this._isDev) {\n\t\t\t\tthis._logService.debug(`[DEBOUNCE: ${name}] is disabled in developed mode`);\n\t\t\t\tinfo = new NullDebounceInformation(min * 1.5);\n\t\t\t} else {\n\t\t\t\tinfo = new FeatureDebounceInformation(\n\t\t\t\t\tthis._logService,\n\t\t\t\t\tname,\n\t\t\t\t\tfeature,\n\t\t\t\t\t(this._overallAverage() | 0) || (min * 1.5), // default is overall default or derived from min-value\n\t\t\t\t\tmin,\n\t\t\t\t\tmax\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._data.set(key, info);\n\t\t}\n\t\treturn info;\n\t}\n\n\tprivate _overallAverage(): number {\n\t\t// Average of all language features. Not a great value but an approximation\n\t\tconst result = new MovingAverage();\n\t\tfor (const info of this._data.values()) {\n\t\t\tresult.update(info.default());\n\t\t}\n\t\treturn result.value;\n\t}\n}\n\nregisterSingleton(ILanguageFeatureDebounceService, LanguageFeatureDebounceService, InstantiationType.Delayed);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/treeViewsDnd.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/treeViewsDnd.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITreeViewsDnDService<T> {\n\treadonly _serviceBrand: undefined;\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined;\n}\n\nexport class TreeViewsDnDService<T> implements ITreeViewsDnDService<T> {\n\t_serviceBrand: undefined;\n\tprivate _dragOperations: Map<string, Promise<T | undefined>> = new Map();\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined {\n\t\tif ((uuid && this._dragOperations.has(uuid))) {\n\t\t\tconst operation = this._dragOperations.get(uuid);\n\t\t\tthis._dragOperations.delete(uuid);\n\t\t\treturn operation;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nexport class DraggedTreeItemsIdentifier {\n\n\tconstructor(readonly identifier: string) { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITreeViewsDnDService<T> {\n\treadonly _serviceBrand: undefined;\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined;\n}\n\nexport class TreeViewsDnDService<T> implements ITreeViewsDnDService<T> {\n\t_serviceBrand: undefined;\n\tprivate _dragOperations: Map<string, Promise<T | undefined>> = new Map();\n\n\tremoveDragOperationTransfer(uuid: string | undefined): Promise<T | undefined> | undefined {\n\t\tif ((uuid && this._dragOperations.has(uuid))) {\n\t\t\tconst operation = this._dragOperations.get(uuid);\n\t\t\tthis._dragOperations.delete(uuid);\n\t\t\treturn operation;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\n\nexport class DraggedTreeItemsIdentifier {\n\n\tconstructor(readonly identifier: string) { }\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;AAQ1F,MAAO,mBAAmB;IAAhC,aAAA;QAES,IAAA,CAAA,eAAe,GAAwC,IAAI,GAAG,EAAE,CAAC;IAU1E,CAAC;IARA,2BAA2B,CAAC,IAAwB,EAAA;QACnD,IAAI,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAE,CAAC;YAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAClC,OAAO,SAAS,CAAC;QAClB,CAAC;QACD,OAAO,SAAS,CAAC;IAClB,CAAC;CACD;AAGK,MAAO,0BAA0B;IAEtC,YAAqB,UAAkB,CAAA;QAAlB,IAAA,CAAA,UAAU,GAAV,UAAU,CAAQ;IAAI,CAAC;CAC5C","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/treeViewsDndService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/treeViewsDndService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { VSDataTransfer } from '../../../base/common/dataTransfer.js';\nimport { ITreeViewsDnDService as ITreeViewsDnDServiceCommon, TreeViewsDnDService } from './treeViewsDnd.js';\n\nexport interface ITreeViewsDnDService extends ITreeViewsDnDServiceCommon<VSDataTransfer> { }\nexport const ITreeViewsDnDService = createDecorator<ITreeViewsDnDService>('treeViewsDndService');\nregisterSingleton(ITreeViewsDnDService, TreeViewsDnDService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { VSDataTransfer } from '../../../base/common/dataTransfer.js';\nimport { ITreeViewsDnDService as ITreeViewsDnDServiceCommon, TreeViewsDnDService } from './treeViewsDnd.js';\n\nexport interface ITreeViewsDnDService extends ITreeViewsDnDServiceCommon<VSDataTransfer> { }\nexport const ITreeViewsDnDService = createDecorator<ITreeViewsDnDService>('treeViewsDndService');\nregisterSingleton(ITreeViewsDnDService, TreeViewsDnDService, InstantiationType.Delayed);\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAqB,iBAAiB,EAAE,MAAM,sDAAsD,CAAC;AAC5G,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;AAE1F,OAAO,EAAsD,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;;;;AAGrG,MAAM,oBAAoB,OAAG,wNAAe,EAAuB,qBAAqB,CAAC,CAAC;IACjG,uNAAiB,EAAC,oBAAoB,EAAE,oNAAmB,EAAA,EAAA,6BAAA,GAA4B,CAAC","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/getIconClasses.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/getIconClasses.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/getIconClasses.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from '../../../base/common/network.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { URI, URI as uri } from '../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { IModelService } from './model.js';\nimport { FileKind } from '../../../platform/files/common/files.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\n\nconst fileIconDirectoryRegex = /(?:\\/|^)(?:([^\\/]+)\\/)?([^\\/]+)$/;\n\nexport function getIconClasses(modelService: IModelService, languageService: ILanguageService, resource: uri | undefined, fileKind?: FileKind, icon?: ThemeIcon | URI): string[] {\n\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\treturn [`codicon-${icon.id}`, 'predefined-file-icon'];\n\t}\n\n\tif (URI.isUri(icon)) {\n\t\treturn [];\n\t}\n\n\t// we always set these base classes even if we do not have a path\n\tconst classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\n\tif (resource) {\n\n\t\t// Get the path and name of the resource. For data-URIs, we need to parse specially\n\t\tlet name: string | undefined;\n\t\tif (resource.scheme === Schemas.data) {\n\t\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\t\tname = metadata.get(DataUri.META_DATA_LABEL);\n\t\t} else {\n\t\t\tconst match = resource.path.match(fileIconDirectoryRegex);\n\t\t\tif (match) {\n\t\t\t\tname = fileIconSelectorEscape(match[2].toLowerCase());\n\t\t\t\tif (match[1]) {\n\t\t\t\t\tclasses.push(`${fileIconSelectorEscape(match[1].toLowerCase())}-name-dir-icon`); // parent directory\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tname = fileIconSelectorEscape(resource.authority.toLowerCase());\n\t\t\t}\n\t\t}\n\n\t\t// Root Folders\n\t\tif (fileKind === FileKind.ROOT_FOLDER) {\n\t\t\tclasses.push(`${name}-root-name-folder-icon`);\n\t\t}\n\n\t\t// Folders\n\t\telse if (fileKind === FileKind.FOLDER) {\n\t\t\tclasses.push(`${name}-name-folder-icon`);\n\t\t}\n\n\t\t// Files\n\t\telse {\n\n\t\t\t// Name & Extension(s)\n\t\t\tif (name) {\n\t\t\t\tclasses.push(`${name}-name-file-icon`);\n\t\t\t\tclasses.push(`name-file-icon`); // extra segment to increase file-name score\n\t\t\t\t// Avoid doing an explosive combination of extensions for very long filenames\n\t\t\t\t// (most file systems do not allow files > 255 length) with lots of `.` characters\n\t\t\t\t// https://github.com/microsoft/vscode/issues/116199\n\t\t\t\tif (name.length <= 255) {\n\t\t\t\t\tconst dotSegments = name.split('.');\n\t\t\t\t\tfor (let i = 1; i < dotSegments.length; i++) {\n\t\t\t\t\t\tclasses.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclasses.push(`ext-file-icon`); // extra segment to increase file-ext score\n\t\t\t}\n\n\t\t\t// Detected Mode\n\t\t\tconst detectedLanguageId = detectLanguageId(modelService, languageService, resource);\n\t\t\tif (detectedLanguageId) {\n\t\t\t\tclasses.push(`${fileIconSelectorEscape(detectedLanguageId)}-lang-file-icon`);\n\t\t\t}\n\t\t}\n\t}\n\treturn classes;\n}\n\nfunction detectLanguageId(modelService: IModelService, languageService: ILanguageService, resource: uri): string | null {\n\tif (!resource) {\n\t\treturn null; // we need a resource at least\n\t}\n\n\tlet languageId: string | null = null;\n\n\t// Data URI: check for encoded metadata\n\tif (resource.scheme === Schemas.data) {\n\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\tconst mime = metadata.get(DataUri.META_DATA_MIME);\n\n\t\tif (mime) {\n\t\t\tlanguageId = languageService.getLanguageIdByMimeType(mime);\n\t\t}\n\t}\n\n\t// Any other URI: check for model if existing\n\telse {\n\t\tconst model = modelService.getModel(resource);\n\t\tif (model) {\n\t\t\tlanguageId = model.getLanguageId();\n\t\t}\n\t}\n\n\t// only take if the language id is specific (aka no just plain text)\n\tif (languageId && languageId !== PLAINTEXT_LANGUAGE_ID) {\n\t\treturn languageId;\n\t}\n\n\t// otherwise fallback to path based detection\n\treturn languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n}\n\nexport function fileIconSelectorEscape(str: string): string {\n\treturn str.replace(/[\\s]/g, '/'); // HTML class names can not contain certain whitespace characters (https://dom.spec.whatwg.org/#interface-domtokenlist), use / instead, which doesn't exist in file names.\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from '../../../base/common/network.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { URI, URI as uri } from '../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { IModelService } from './model.js';\nimport { FileKind } from '../../../platform/files/common/files.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\n\nconst fileIconDirectoryRegex = /(?:\\/|^)(?:([^\\/]+)\\/)?([^\\/]+)$/;\n\nexport function getIconClasses(modelService: IModelService, languageService: ILanguageService, resource: uri | undefined, fileKind?: FileKind, icon?: ThemeIcon | URI): string[] {\n\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\treturn [`codicon-${icon.id}`, 'predefined-file-icon'];\n\t}\n\n\tif (URI.isUri(icon)) {\n\t\treturn [];\n\t}\n\n\t// we always set these base classes even if we do not have a path\n\tconst classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\n\tif (resource) {\n\n\t\t// Get the path and name of the resource. For data-URIs, we need to parse specially\n\t\tlet name: string | undefined;\n\t\tif (resource.scheme === Schemas.data) {\n\t\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\t\tname = metadata.get(DataUri.META_DATA_LABEL);\n\t\t} else {\n\t\t\tconst match = resource.path.match(fileIconDirectoryRegex);\n\t\t\tif (match) {\n\t\t\t\tname = fileIconSelectorEscape(match[2].toLowerCase());\n\t\t\t\tif (match[1]) {\n\t\t\t\t\tclasses.push(`${fileIconSelectorEscape(match[1].toLowerCase())}-name-dir-icon`); // parent directory\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tname = fileIconSelectorEscape(resource.authority.toLowerCase());\n\t\t\t}\n\t\t}\n\n\t\t// Root Folders\n\t\tif (fileKind === FileKind.ROOT_FOLDER) {\n\t\t\tclasses.push(`${name}-root-name-folder-icon`);\n\t\t}\n\n\t\t// Folders\n\t\telse if (fileKind === FileKind.FOLDER) {\n\t\t\tclasses.push(`${name}-name-folder-icon`);\n\t\t}\n\n\t\t// Files\n\t\telse {\n\n\t\t\t// Name & Extension(s)\n\t\t\tif (name) {\n\t\t\t\tclasses.push(`${name}-name-file-icon`);\n\t\t\t\tclasses.push(`name-file-icon`); // extra segment to increase file-name score\n\t\t\t\t// Avoid doing an explosive combination of extensions for very long filenames\n\t\t\t\t// (most file systems do not allow files > 255 length) with lots of `.` characters\n\t\t\t\t// https://github.com/microsoft/vscode/issues/116199\n\t\t\t\tif (name.length <= 255) {\n\t\t\t\t\tconst dotSegments = name.split('.');\n\t\t\t\t\tfor (let i = 1; i < dotSegments.length; i++) {\n\t\t\t\t\t\tclasses.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclasses.push(`ext-file-icon`); // extra segment to increase file-ext score\n\t\t\t}\n\n\t\t\t// Detected Mode\n\t\t\tconst detectedLanguageId = detectLanguageId(modelService, languageService, resource);\n\t\t\tif (detectedLanguageId) {\n\t\t\t\tclasses.push(`${fileIconSelectorEscape(detectedLanguageId)}-lang-file-icon`);\n\t\t\t}\n\t\t}\n\t}\n\treturn classes;\n}\n\nfunction detectLanguageId(modelService: IModelService, languageService: ILanguageService, resource: uri): string | null {\n\tif (!resource) {\n\t\treturn null; // we need a resource at least\n\t}\n\n\tlet languageId: string | null = null;\n\n\t// Data URI: check for encoded metadata\n\tif (resource.scheme === Schemas.data) {\n\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\tconst mime = metadata.get(DataUri.META_DATA_MIME);\n\n\t\tif (mime) {\n\t\t\tlanguageId = languageService.getLanguageIdByMimeType(mime);\n\t\t}\n\t}\n\n\t// Any other URI: check for model if existing\n\telse {\n\t\tconst model = modelService.getModel(resource);\n\t\tif (model) {\n\t\t\tlanguageId = model.getLanguageId();\n\t\t}\n\t}\n\n\t// only take if the language id is specific (aka no just plain text)\n\tif (languageId && languageId !== PLAINTEXT_LANGUAGE_ID) {\n\t\treturn languageId;\n\t}\n\n\t// otherwise fallback to path based detection\n\treturn languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n}\n\nexport function fileIconSelectorEscape(str: string): string {\n\treturn str.replace(/[\\s]/g, '/'); // HTML class names can not contain certain whitespace characters (https://dom.spec.whatwg.org/#interface-domtokenlist), use / instead, which doesn't exist in file names.\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/textResourceConfiguration.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/textResourceConfiguration.ts"],"sourcesContent":["\nimport { URI } from '../../../base/common/uri.js';\nimport { IPosition } from '../core/position.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\n\nexport const ITextResourceConfigurationService = createDecorator<ITextResourceConfigurationService>('textResourceConfigurationService');\n\nexport interface ITextResourceConfigurationChangeEvent {\n\n\t/**\n\t * All affected keys. Also includes language overrides and keys changed under language overrides.\n\t */\n\treadonly affectedKeys: ReadonlySet<string>;\n\n\t/**\n\t * Returns `true` if the given section has changed for the given resource.\n\t *\n\t * Example: To check if the configuration section has changed for a given resource use `e.affectsConfiguration(resource, section)`.\n\t *\n\t * @param resource Resource for which the configuration has to be checked.\n\t * @param section Section of the configuration\n\t */\n\taffectsConfiguration(resource: URI | undefined, section: string): boolean;\n}\n\nexport interface ITextResourceConfigurationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Fetches the value of the section for the given resource by applying language overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param resource - Resource for which the configuration has to be fetched.\n\t * @param position - Position in the resource for which configuration has to be fetched.\n\t * @param section - Section of the configuration.\n\t *\n\t */\n\tgetValue<T>(resource: URI | undefined, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, position?: IPosition, section?: string): T;\n\n}\n\nexport const ITextResourcePropertiesService = createDecorator<ITextResourcePropertiesService>('textResourcePropertiesService');\n\nexport interface ITextResourcePropertiesService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Returns the End of Line characters for the given resource\n\t */\n\tgetEOL(resource: URI, language?: string): string;\n}\n","\nimport { URI } from '../../../base/common/uri.js';\nimport { IPosition } from '../core/position.js';\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\n\nexport const ITextResourceConfigurationService = createDecorator<ITextResourceConfigurationService>('textResourceConfigurationService');\n\nexport interface ITextResourceConfigurationChangeEvent {\n\n\t/**\n\t * All affected keys. Also includes language overrides and keys changed under language overrides.\n\t */\n\treadonly affectedKeys: ReadonlySet<string>;\n\n\t/**\n\t * Returns `true` if the given section has changed for the given resource.\n\t *\n\t * Example: To check if the configuration section has changed for a given resource use `e.affectsConfiguration(resource, section)`.\n\t *\n\t * @param resource Resource for which the configuration has to be checked.\n\t * @param section Section of the configuration\n\t */\n\taffectsConfiguration(resource: URI | undefined, section: string): boolean;\n}\n\nexport interface ITextResourceConfigurationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Fetches the value of the section for the given resource by applying language overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param resource - Resource for which the configuration has to be fetched.\n\t * @param position - Position in the resource for which configuration has to be fetched.\n\t * @param section - Section of the configuration.\n\t *\n\t */\n\tgetValue<T>(resource: URI | undefined, section?: string): T;\n\tgetValue<T>(resource: URI | undefined, position?: IPosition, section?: string): T;\n\n}\n\nexport const ITextResourcePropertiesService = createDecorator<ITextResourcePropertiesService>('textResourcePropertiesService');\n\nexport interface ITextResourcePropertiesService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Returns the End of Line characters for the given resource\n\t */\n\tgetEOL(resource: URI, language?: string): string;\n}\n"],"names":[],"mappings":";;;;;;AAGA,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAEnF,MAAM,iCAAiC,OAAG,wNAAe,EAAoC,kCAAkC,CAAC,CAAC;AAsCjI,MAAM,8BAA8B,OAAG,wNAAe,EAAiC,+BAA+B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/semanticTokensProviderStyling.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/semanticTokensProviderStyling.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SemanticTokensLegend, SemanticTokens } from '../languages.js';\nimport { FontStyle, MetadataConsts, TokenMetadata } from '../encodedTokenAttributes.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService, LogLevel } from '../../../platform/log/common/log.js';\nimport { SparseMultilineTokens } from '../tokens/sparseMultilineTokens.js';\nimport { ILanguageService } from '../languages/language.js';\n\nconst enum SemanticTokensProviderStylingConstants {\n\tNO_STYLING = 0b01111111111111111111111111111111\n}\n\nconst ENABLE_TRACE = false;\n\nexport class SemanticTokensProviderStyling {\n\n\tprivate readonly _hashTable: HashTable;\n\tprivate _hasWarnedOverlappingTokens = false;\n\tprivate _hasWarnedInvalidLengthTokens = false;\n\tprivate _hasWarnedInvalidEditStart = false;\n\n\tconstructor(\n\t\tprivate readonly _legend: SemanticTokensLegend,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._hashTable = new HashTable();\n\t}\n\n\tpublic getMetadata(tokenTypeIndex: number, tokenModifierSet: number, languageId: string): number {\n\t\tconst encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\tconst entry = this._hashTable.get(tokenTypeIndex, tokenModifierSet, encodedLanguageId);\n\t\tlet metadata: number;\n\t\tif (entry) {\n\t\t\tmetadata = entry.metadata;\n\t\t\tif (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling [CACHED] ${tokenTypeIndex} / ${tokenModifierSet}: foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n\t\t\t}\n\t\t} else {\n\t\t\tlet tokenType = this._legend.tokenTypes[tokenTypeIndex];\n\t\t\tconst tokenModifiers: string[] = [];\n\t\t\tif (tokenType) {\n\t\t\t\tlet modifierSet = tokenModifierSet;\n\t\t\t\tfor (let modifierIndex = 0; modifierSet > 0 && modifierIndex < this._legend.tokenModifiers.length; modifierIndex++) {\n\t\t\t\t\tif (modifierSet & 1) {\n\t\t\t\t\t\ttokenModifiers.push(this._legend.tokenModifiers[modifierIndex]);\n\t\t\t\t\t}\n\t\t\t\t\tmodifierSet = modifierSet >> 1;\n\t\t\t\t}\n\t\t\t\tif (ENABLE_TRACE && modifierSet > 0 && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${tokenModifierSet.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`);\n\t\t\t\t\ttokenModifiers.push('not-in-legend');\n\t\t\t\t}\n\n\t\t\t\tconst tokenStyle = this._themeService.getColorTheme().getTokenStyleMetadata(tokenType, tokenModifiers, languageId);\n\t\t\t\tif (typeof tokenStyle === 'undefined') {\n\t\t\t\t\tmetadata = SemanticTokensProviderStylingConstants.NO_STYLING;\n\t\t\t\t} else {\n\t\t\t\t\tmetadata = 0;\n\t\t\t\t\tif (typeof tokenStyle.italic !== 'undefined') {\n\t\t\t\t\t\tconst italicBit = (tokenStyle.italic ? FontStyle.Italic : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= italicBit | MetadataConsts.SEMANTIC_USE_ITALIC;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof tokenStyle.bold !== 'undefined') {\n\t\t\t\t\t\tconst boldBit = (tokenStyle.bold ? FontStyle.Bold : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= boldBit | MetadataConsts.SEMANTIC_USE_BOLD;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof tokenStyle.underline !== 'undefined') {\n\t\t\t\t\t\tconst underlineBit = (tokenStyle.underline ? FontStyle.Underline : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= underlineBit | MetadataConsts.SEMANTIC_USE_UNDERLINE;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof tokenStyle.strikethrough !== 'undefined') {\n\t\t\t\t\t\tconst strikethroughBit = (tokenStyle.strikethrough ? FontStyle.Strikethrough : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= strikethroughBit | MetadataConsts.SEMANTIC_USE_STRIKETHROUGH;\n\t\t\t\t\t}\n\t\t\t\t\tif (tokenStyle.foreground) {\n\t\t\t\t\t\tconst foregroundBits = (tokenStyle.foreground) << MetadataConsts.FOREGROUND_OFFSET;\n\t\t\t\t\t\tmetadata |= foregroundBits | MetadataConsts.SEMANTIC_USE_FOREGROUND;\n\t\t\t\t\t}\n\t\t\t\t\tif (metadata === 0) {\n\t\t\t\t\t\t// Nothing!\n\t\t\t\t\t\tmetadata = SemanticTokensProviderStylingConstants.NO_STYLING;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${tokenTypeIndex} for legend: ${JSON.stringify(this._legend.tokenTypes)}`);\n\t\t\t\t}\n\t\t\t\tmetadata = SemanticTokensProviderStylingConstants.NO_STYLING;\n\t\t\t\ttokenType = 'not-in-legend';\n\t\t\t}\n\t\t\tthis._hashTable.add(tokenTypeIndex, tokenModifierSet, encodedLanguageId, metadata);\n\n\t\t\tif (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling ${tokenTypeIndex} (${tokenType}) / ${tokenModifierSet} (${tokenModifiers.join(' ')}): foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n\t\t\t}\n\t\t}\n\n\t\treturn metadata;\n\t}\n\n\tpublic warnOverlappingSemanticTokens(lineNumber: number, startColumn: number): void {\n\t\tif (!this._hasWarnedOverlappingTokens) {\n\t\t\tthis._hasWarnedOverlappingTokens = true;\n\t\t\tthis._logService.warn(`Overlapping semantic tokens detected at lineNumber ${lineNumber}, column ${startColumn}`);\n\t\t}\n\t}\n\n\tpublic warnInvalidLengthSemanticTokens(lineNumber: number, startColumn: number): void {\n\t\tif (!this._hasWarnedInvalidLengthTokens) {\n\t\t\tthis._hasWarnedInvalidLengthTokens = true;\n\t\t\tthis._logService.warn(`Semantic token with invalid length detected at lineNumber ${lineNumber}, column ${startColumn}`);\n\t\t}\n\t}\n\n\tpublic warnInvalidEditStart(previousResultId: string | undefined, resultId: string | undefined, editIndex: number, editStart: number, maxExpectedStart: number): void {\n\t\tif (!this._hasWarnedInvalidEditStart) {\n\t\t\tthis._hasWarnedInvalidEditStart = true;\n\t\t\tthis._logService.warn(`Invalid semantic tokens edit detected (previousResultId: ${previousResultId}, resultId: ${resultId}) at edit #${editIndex}: The provided start offset ${editStart} is outside the previous data (length ${maxExpectedStart}).`);\n\t\t}\n\t}\n\n}\n\nconst enum SemanticColoringConstants {\n\t/**\n\t * Let's aim at having 8KB buffers if possible...\n\t * So that would be 8192 / (5 * 4) = 409.6 tokens per area\n\t */\n\tDesiredTokensPerArea = 400,\n\n\t/**\n\t * Try to keep the total number of areas under 1024 if possible,\n\t * simply compensate by having more tokens per area...\n\t */\n\tDesiredMaxAreas = 1024,\n}\n\nexport function toMultilineTokens2(tokens: SemanticTokens, styling: SemanticTokensProviderStyling, languageId: string): SparseMultilineTokens[] {\n\tconst srcData = tokens.data;\n\tconst tokenCount = (tokens.data.length / 5) | 0;\n\tconst tokensPerArea = Math.max(Math.ceil(tokenCount / SemanticColoringConstants.DesiredMaxAreas), SemanticColoringConstants.DesiredTokensPerArea);\n\tconst result: SparseMultilineTokens[] = [];\n\n\tlet tokenIndex = 0;\n\tlet lastLineNumber = 1;\n\tlet lastStartCharacter = 0;\n\twhile (tokenIndex < tokenCount) {\n\t\tconst tokenStartIndex = tokenIndex;\n\t\tlet tokenEndIndex = Math.min(tokenStartIndex + tokensPerArea, tokenCount);\n\n\t\t// Keep tokens on the same line in the same area...\n\t\tif (tokenEndIndex < tokenCount) {\n\n\t\t\tlet smallTokenEndIndex = tokenEndIndex;\n\t\t\twhile (smallTokenEndIndex - 1 > tokenStartIndex && srcData[5 * smallTokenEndIndex] === 0) {\n\t\t\t\tsmallTokenEndIndex--;\n\t\t\t}\n\n\t\t\tif (smallTokenEndIndex - 1 === tokenStartIndex) {\n\t\t\t\t// there are so many tokens on this line that our area would be empty, we must now go right\n\t\t\t\tlet bigTokenEndIndex = tokenEndIndex;\n\t\t\t\twhile (bigTokenEndIndex + 1 < tokenCount && srcData[5 * bigTokenEndIndex] === 0) {\n\t\t\t\t\tbigTokenEndIndex++;\n\t\t\t\t}\n\t\t\t\ttokenEndIndex = bigTokenEndIndex;\n\t\t\t} else {\n\t\t\t\ttokenEndIndex = smallTokenEndIndex;\n\t\t\t}\n\t\t}\n\n\t\tlet destData = new Uint32Array((tokenEndIndex - tokenStartIndex) * 4);\n\t\tlet destOffset = 0;\n\t\tlet areaLine = 0;\n\t\tlet prevLineNumber = 0;\n\t\tlet prevEndCharacter = 0;\n\t\twhile (tokenIndex < tokenEndIndex) {\n\t\t\tconst srcOffset = 5 * tokenIndex;\n\t\t\tconst deltaLine = srcData[srcOffset];\n\t\t\tconst deltaCharacter = srcData[srcOffset + 1];\n\t\t\t// Casting both `lineNumber`, `startCharacter` and `endCharacter` here to uint32 using `|0`\n\t\t\t// to validate below with the actual values that will be inserted in the Uint32Array result\n\t\t\tconst lineNumber = (lastLineNumber + deltaLine) | 0;\n\t\t\tconst startCharacter = (deltaLine === 0 ? (lastStartCharacter + deltaCharacter) | 0 : deltaCharacter);\n\t\t\tconst length = srcData[srcOffset + 2];\n\t\t\tconst endCharacter = (startCharacter + length) | 0;\n\t\t\tconst tokenTypeIndex = srcData[srcOffset + 3];\n\t\t\tconst tokenModifierSet = srcData[srcOffset + 4];\n\n\t\t\tif (endCharacter <= startCharacter) {\n\t\t\t\t// this token is invalid (most likely a negative length casted to uint32)\n\t\t\t\tstyling.warnInvalidLengthSemanticTokens(lineNumber, startCharacter + 1);\n\t\t\t} else if (prevLineNumber === lineNumber && prevEndCharacter > startCharacter) {\n\t\t\t\t// this token overlaps with the previous token\n\t\t\t\tstyling.warnOverlappingSemanticTokens(lineNumber, startCharacter + 1);\n\t\t\t} else {\n\t\t\t\tconst metadata = styling.getMetadata(tokenTypeIndex, tokenModifierSet, languageId);\n\n\t\t\t\tif (metadata !== SemanticTokensProviderStylingConstants.NO_STYLING) {\n\t\t\t\t\tif (areaLine === 0) {\n\t\t\t\t\t\tareaLine = lineNumber;\n\t\t\t\t\t}\n\t\t\t\t\tdestData[destOffset] = lineNumber - areaLine;\n\t\t\t\t\tdestData[destOffset + 1] = startCharacter;\n\t\t\t\t\tdestData[destOffset + 2] = endCharacter;\n\t\t\t\t\tdestData[destOffset + 3] = metadata;\n\t\t\t\t\tdestOffset += 4;\n\n\t\t\t\t\tprevLineNumber = lineNumber;\n\t\t\t\t\tprevEndCharacter = endCharacter;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastLineNumber = lineNumber;\n\t\t\tlastStartCharacter = startCharacter;\n\t\t\ttokenIndex++;\n\t\t}\n\n\t\tif (destOffset !== destData.length) {\n\t\t\tdestData = destData.subarray(0, destOffset);\n\t\t}\n\n\t\tconst tokens = SparseMultilineTokens.create(areaLine, destData);\n\t\tresult.push(tokens);\n\t}\n\n\treturn result;\n}\n\nclass HashTableEntry {\n\tpublic readonly tokenTypeIndex: number;\n\tpublic readonly tokenModifierSet: number;\n\tpublic readonly languageId: number;\n\tpublic readonly metadata: number;\n\tpublic next: HashTableEntry | null;\n\n\tconstructor(tokenTypeIndex: number, tokenModifierSet: number, languageId: number, metadata: number) {\n\t\tthis.tokenTypeIndex = tokenTypeIndex;\n\t\tthis.tokenModifierSet = tokenModifierSet;\n\t\tthis.languageId = languageId;\n\t\tthis.metadata = metadata;\n\t\tthis.next = null;\n\t}\n}\n\nclass HashTable {\n\n\tprivate static _SIZES = [3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143];\n\n\tprivate _elementsCount: number;\n\tprivate _currentLengthIndex: number;\n\tprivate _currentLength: number;\n\tprivate _growCount: number;\n\tprivate _elements: (HashTableEntry | null)[];\n\n\tconstructor() {\n\t\tthis._elementsCount = 0;\n\t\tthis._currentLengthIndex = 0;\n\t\tthis._currentLength = HashTable._SIZES[this._currentLengthIndex];\n\t\tthis._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n\t\tthis._elements = [];\n\t\tHashTable._nullOutEntries(this._elements, this._currentLength);\n\t}\n\n\tprivate static _nullOutEntries(entries: (HashTableEntry | null)[], length: number): void {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tentries[i] = null;\n\t\t}\n\t}\n\n\tprivate _hash2(n1: number, n2: number): number {\n\t\treturn (((n1 << 5) - n1) + n2) | 0;  // n1 * 31 + n2, keep as int32\n\t}\n\n\tprivate _hashFunc(tokenTypeIndex: number, tokenModifierSet: number, languageId: number): number {\n\t\treturn this._hash2(this._hash2(tokenTypeIndex, tokenModifierSet), languageId) % this._currentLength;\n\t}\n\n\tpublic get(tokenTypeIndex: number, tokenModifierSet: number, languageId: number): HashTableEntry | null {\n\t\tconst hash = this._hashFunc(tokenTypeIndex, tokenModifierSet, languageId);\n\n\t\tlet p = this._elements[hash];\n\t\twhile (p) {\n\t\t\tif (p.tokenTypeIndex === tokenTypeIndex && p.tokenModifierSet === tokenModifierSet && p.languageId === languageId) {\n\t\t\t\treturn p;\n\t\t\t}\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic add(tokenTypeIndex: number, tokenModifierSet: number, languageId: number, metadata: number): void {\n\t\tthis._elementsCount++;\n\t\tif (this._growCount !== 0 && this._elementsCount >= this._growCount) {\n\t\t\t// expand!\n\t\t\tconst oldElements = this._elements;\n\n\t\t\tthis._currentLengthIndex++;\n\t\t\tthis._currentLength = HashTable._SIZES[this._currentLengthIndex];\n\t\t\tthis._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n\t\t\tthis._elements = [];\n\t\t\tHashTable._nullOutEntries(this._elements, this._currentLength);\n\n\t\t\tfor (const first of oldElements) {\n\t\t\t\tlet p = first;\n\t\t\t\twhile (p) {\n\t\t\t\t\tconst oldNext = p.next;\n\t\t\t\t\tp.next = null;\n\t\t\t\t\tthis._add(p);\n\t\t\t\t\tp = oldNext;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._add(new HashTableEntry(tokenTypeIndex, tokenModifierSet, languageId, metadata));\n\t}\n\n\tprivate _add(element: HashTableEntry): void {\n\t\tconst hash = this._hashFunc(element.tokenTypeIndex, element.tokenModifierSet, element.languageId);\n\t\telement.next = this._elements[hash];\n\t\tthis._elements[hash] = element;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SemanticTokensLegend, SemanticTokens } from '../languages.js';\nimport { FontStyle, MetadataConsts, TokenMetadata } from '../encodedTokenAttributes.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService, LogLevel } from '../../../platform/log/common/log.js';\nimport { SparseMultilineTokens } from '../tokens/sparseMultilineTokens.js';\nimport { ILanguageService } from '../languages/language.js';\n\nconst enum SemanticTokensProviderStylingConstants {\n\tNO_STYLING = 0b01111111111111111111111111111111\n}\n\nconst ENABLE_TRACE = false;\n\nexport class SemanticTokensProviderStyling {\n\n\tprivate readonly _hashTable: HashTable;\n\tprivate _hasWarnedOverlappingTokens = false;\n\tprivate _hasWarnedInvalidLengthTokens = false;\n\tprivate _hasWarnedInvalidEditStart = false;\n\n\tconstructor(\n\t\tprivate readonly _legend: SemanticTokensLegend,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tthis._hashTable = new HashTable();\n\t}\n\n\tpublic getMetadata(tokenTypeIndex: number, tokenModifierSet: number, languageId: string): number {\n\t\tconst encodedLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n\t\tconst entry = this._hashTable.get(tokenTypeIndex, tokenModifierSet, encodedLanguageId);\n\t\tlet metadata: number;\n\t\tif (entry) {\n\t\t\tmetadata = entry.metadata;\n\t\t\tif (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling [CACHED] ${tokenTypeIndex} / ${tokenModifierSet}: foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n\t\t\t}\n\t\t} else {\n\t\t\tlet tokenType = this._legend.tokenTypes[tokenTypeIndex];\n\t\t\tconst tokenModifiers: string[] = [];\n\t\t\tif (tokenType) {\n\t\t\t\tlet modifierSet = tokenModifierSet;\n\t\t\t\tfor (let modifierIndex = 0; modifierSet > 0 && modifierIndex < this._legend.tokenModifiers.length; modifierIndex++) {\n\t\t\t\t\tif (modifierSet & 1) {\n\t\t\t\t\t\ttokenModifiers.push(this._legend.tokenModifiers[modifierIndex]);\n\t\t\t\t\t}\n\t\t\t\t\tmodifierSet = modifierSet >> 1;\n\t\t\t\t}\n\t\t\t\tif (ENABLE_TRACE && modifierSet > 0 && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling: unknown token modifier index: ${tokenModifierSet.toString(2)} for legend: ${JSON.stringify(this._legend.tokenModifiers)}`);\n\t\t\t\t\ttokenModifiers.push('not-in-legend');\n\t\t\t\t}\n\n\t\t\t\tconst tokenStyle = this._themeService.getColorTheme().getTokenStyleMetadata(tokenType, tokenModifiers, languageId);\n\t\t\t\tif (typeof tokenStyle === 'undefined') {\n\t\t\t\t\tmetadata = SemanticTokensProviderStylingConstants.NO_STYLING;\n\t\t\t\t} else {\n\t\t\t\t\tmetadata = 0;\n\t\t\t\t\tif (typeof tokenStyle.italic !== 'undefined') {\n\t\t\t\t\t\tconst italicBit = (tokenStyle.italic ? FontStyle.Italic : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= italicBit | MetadataConsts.SEMANTIC_USE_ITALIC;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof tokenStyle.bold !== 'undefined') {\n\t\t\t\t\t\tconst boldBit = (tokenStyle.bold ? FontStyle.Bold : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= boldBit | MetadataConsts.SEMANTIC_USE_BOLD;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof tokenStyle.underline !== 'undefined') {\n\t\t\t\t\t\tconst underlineBit = (tokenStyle.underline ? FontStyle.Underline : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= underlineBit | MetadataConsts.SEMANTIC_USE_UNDERLINE;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof tokenStyle.strikethrough !== 'undefined') {\n\t\t\t\t\t\tconst strikethroughBit = (tokenStyle.strikethrough ? FontStyle.Strikethrough : 0) << MetadataConsts.FONT_STYLE_OFFSET;\n\t\t\t\t\t\tmetadata |= strikethroughBit | MetadataConsts.SEMANTIC_USE_STRIKETHROUGH;\n\t\t\t\t\t}\n\t\t\t\t\tif (tokenStyle.foreground) {\n\t\t\t\t\t\tconst foregroundBits = (tokenStyle.foreground) << MetadataConsts.FOREGROUND_OFFSET;\n\t\t\t\t\t\tmetadata |= foregroundBits | MetadataConsts.SEMANTIC_USE_FOREGROUND;\n\t\t\t\t\t}\n\t\t\t\t\tif (metadata === 0) {\n\t\t\t\t\t\t// Nothing!\n\t\t\t\t\t\tmetadata = SemanticTokensProviderStylingConstants.NO_STYLING;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling: unknown token type index: ${tokenTypeIndex} for legend: ${JSON.stringify(this._legend.tokenTypes)}`);\n\t\t\t\t}\n\t\t\t\tmetadata = SemanticTokensProviderStylingConstants.NO_STYLING;\n\t\t\t\ttokenType = 'not-in-legend';\n\t\t\t}\n\t\t\tthis._hashTable.add(tokenTypeIndex, tokenModifierSet, encodedLanguageId, metadata);\n\n\t\t\tif (ENABLE_TRACE && this._logService.getLevel() === LogLevel.Trace) {\n\t\t\t\tthis._logService.trace(`SemanticTokensProviderStyling ${tokenTypeIndex} (${tokenType}) / ${tokenModifierSet} (${tokenModifiers.join(' ')}): foreground ${TokenMetadata.getForeground(metadata)}, fontStyle ${TokenMetadata.getFontStyle(metadata).toString(2)}`);\n\t\t\t}\n\t\t}\n\n\t\treturn metadata;\n\t}\n\n\tpublic warnOverlappingSemanticTokens(lineNumber: number, startColumn: number): void {\n\t\tif (!this._hasWarnedOverlappingTokens) {\n\t\t\tthis._hasWarnedOverlappingTokens = true;\n\t\t\tthis._logService.warn(`Overlapping semantic tokens detected at lineNumber ${lineNumber}, column ${startColumn}`);\n\t\t}\n\t}\n\n\tpublic warnInvalidLengthSemanticTokens(lineNumber: number, startColumn: number): void {\n\t\tif (!this._hasWarnedInvalidLengthTokens) {\n\t\t\tthis._hasWarnedInvalidLengthTokens = true;\n\t\t\tthis._logService.warn(`Semantic token with invalid length detected at lineNumber ${lineNumber}, column ${startColumn}`);\n\t\t}\n\t}\n\n\tpublic warnInvalidEditStart(previousResultId: string | undefined, resultId: string | undefined, editIndex: number, editStart: number, maxExpectedStart: number): void {\n\t\tif (!this._hasWarnedInvalidEditStart) {\n\t\t\tthis._hasWarnedInvalidEditStart = true;\n\t\t\tthis._logService.warn(`Invalid semantic tokens edit detected (previousResultId: ${previousResultId}, resultId: ${resultId}) at edit #${editIndex}: The provided start offset ${editStart} is outside the previous data (length ${maxExpectedStart}).`);\n\t\t}\n\t}\n\n}\n\nconst enum SemanticColoringConstants {\n\t/**\n\t * Let's aim at having 8KB buffers if possible...\n\t * So that would be 8192 / (5 * 4) = 409.6 tokens per area\n\t */\n\tDesiredTokensPerArea = 400,\n\n\t/**\n\t * Try to keep the total number of areas under 1024 if possible,\n\t * simply compensate by having more tokens per area...\n\t */\n\tDesiredMaxAreas = 1024,\n}\n\nexport function toMultilineTokens2(tokens: SemanticTokens, styling: SemanticTokensProviderStyling, languageId: string): SparseMultilineTokens[] {\n\tconst srcData = tokens.data;\n\tconst tokenCount = (tokens.data.length / 5) | 0;\n\tconst tokensPerArea = Math.max(Math.ceil(tokenCount / SemanticColoringConstants.DesiredMaxAreas), SemanticColoringConstants.DesiredTokensPerArea);\n\tconst result: SparseMultilineTokens[] = [];\n\n\tlet tokenIndex = 0;\n\tlet lastLineNumber = 1;\n\tlet lastStartCharacter = 0;\n\twhile (tokenIndex < tokenCount) {\n\t\tconst tokenStartIndex = tokenIndex;\n\t\tlet tokenEndIndex = Math.min(tokenStartIndex + tokensPerArea, tokenCount);\n\n\t\t// Keep tokens on the same line in the same area...\n\t\tif (tokenEndIndex < tokenCount) {\n\n\t\t\tlet smallTokenEndIndex = tokenEndIndex;\n\t\t\twhile (smallTokenEndIndex - 1 > tokenStartIndex && srcData[5 * smallTokenEndIndex] === 0) {\n\t\t\t\tsmallTokenEndIndex--;\n\t\t\t}\n\n\t\t\tif (smallTokenEndIndex - 1 === tokenStartIndex) {\n\t\t\t\t// there are so many tokens on this line that our area would be empty, we must now go right\n\t\t\t\tlet bigTokenEndIndex = tokenEndIndex;\n\t\t\t\twhile (bigTokenEndIndex + 1 < tokenCount && srcData[5 * bigTokenEndIndex] === 0) {\n\t\t\t\t\tbigTokenEndIndex++;\n\t\t\t\t}\n\t\t\t\ttokenEndIndex = bigTokenEndIndex;\n\t\t\t} else {\n\t\t\t\ttokenEndIndex = smallTokenEndIndex;\n\t\t\t}\n\t\t}\n\n\t\tlet destData = new Uint32Array((tokenEndIndex - tokenStartIndex) * 4);\n\t\tlet destOffset = 0;\n\t\tlet areaLine = 0;\n\t\tlet prevLineNumber = 0;\n\t\tlet prevEndCharacter = 0;\n\t\twhile (tokenIndex < tokenEndIndex) {\n\t\t\tconst srcOffset = 5 * tokenIndex;\n\t\t\tconst deltaLine = srcData[srcOffset];\n\t\t\tconst deltaCharacter = srcData[srcOffset + 1];\n\t\t\t// Casting both `lineNumber`, `startCharacter` and `endCharacter` here to uint32 using `|0`\n\t\t\t// to validate below with the actual values that will be inserted in the Uint32Array result\n\t\t\tconst lineNumber = (lastLineNumber + deltaLine) | 0;\n\t\t\tconst startCharacter = (deltaLine === 0 ? (lastStartCharacter + deltaCharacter) | 0 : deltaCharacter);\n\t\t\tconst length = srcData[srcOffset + 2];\n\t\t\tconst endCharacter = (startCharacter + length) | 0;\n\t\t\tconst tokenTypeIndex = srcData[srcOffset + 3];\n\t\t\tconst tokenModifierSet = srcData[srcOffset + 4];\n\n\t\t\tif (endCharacter <= startCharacter) {\n\t\t\t\t// this token is invalid (most likely a negative length casted to uint32)\n\t\t\t\tstyling.warnInvalidLengthSemanticTokens(lineNumber, startCharacter + 1);\n\t\t\t} else if (prevLineNumber === lineNumber && prevEndCharacter > startCharacter) {\n\t\t\t\t// this token overlaps with the previous token\n\t\t\t\tstyling.warnOverlappingSemanticTokens(lineNumber, startCharacter + 1);\n\t\t\t} else {\n\t\t\t\tconst metadata = styling.getMetadata(tokenTypeIndex, tokenModifierSet, languageId);\n\n\t\t\t\tif (metadata !== SemanticTokensProviderStylingConstants.NO_STYLING) {\n\t\t\t\t\tif (areaLine === 0) {\n\t\t\t\t\t\tareaLine = lineNumber;\n\t\t\t\t\t}\n\t\t\t\t\tdestData[destOffset] = lineNumber - areaLine;\n\t\t\t\t\tdestData[destOffset + 1] = startCharacter;\n\t\t\t\t\tdestData[destOffset + 2] = endCharacter;\n\t\t\t\t\tdestData[destOffset + 3] = metadata;\n\t\t\t\t\tdestOffset += 4;\n\n\t\t\t\t\tprevLineNumber = lineNumber;\n\t\t\t\t\tprevEndCharacter = endCharacter;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastLineNumber = lineNumber;\n\t\t\tlastStartCharacter = startCharacter;\n\t\t\ttokenIndex++;\n\t\t}\n\n\t\tif (destOffset !== destData.length) {\n\t\t\tdestData = destData.subarray(0, destOffset);\n\t\t}\n\n\t\tconst tokens = SparseMultilineTokens.create(areaLine, destData);\n\t\tresult.push(tokens);\n\t}\n\n\treturn result;\n}\n\nclass HashTableEntry {\n\tpublic readonly tokenTypeIndex: number;\n\tpublic readonly tokenModifierSet: number;\n\tpublic readonly languageId: number;\n\tpublic readonly metadata: number;\n\tpublic next: HashTableEntry | null;\n\n\tconstructor(tokenTypeIndex: number, tokenModifierSet: number, languageId: number, metadata: number) {\n\t\tthis.tokenTypeIndex = tokenTypeIndex;\n\t\tthis.tokenModifierSet = tokenModifierSet;\n\t\tthis.languageId = languageId;\n\t\tthis.metadata = metadata;\n\t\tthis.next = null;\n\t}\n}\n\nclass HashTable {\n\n\tprivate static _SIZES = [3, 7, 13, 31, 61, 127, 251, 509, 1021, 2039, 4093, 8191, 16381, 32749, 65521, 131071, 262139, 524287, 1048573, 2097143];\n\n\tprivate _elementsCount: number;\n\tprivate _currentLengthIndex: number;\n\tprivate _currentLength: number;\n\tprivate _growCount: number;\n\tprivate _elements: (HashTableEntry | null)[];\n\n\tconstructor() {\n\t\tthis._elementsCount = 0;\n\t\tthis._currentLengthIndex = 0;\n\t\tthis._currentLength = HashTable._SIZES[this._currentLengthIndex];\n\t\tthis._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n\t\tthis._elements = [];\n\t\tHashTable._nullOutEntries(this._elements, this._currentLength);\n\t}\n\n\tprivate static _nullOutEntries(entries: (HashTableEntry | null)[], length: number): void {\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tentries[i] = null;\n\t\t}\n\t}\n\n\tprivate _hash2(n1: number, n2: number): number {\n\t\treturn (((n1 << 5) - n1) + n2) | 0;  // n1 * 31 + n2, keep as int32\n\t}\n\n\tprivate _hashFunc(tokenTypeIndex: number, tokenModifierSet: number, languageId: number): number {\n\t\treturn this._hash2(this._hash2(tokenTypeIndex, tokenModifierSet), languageId) % this._currentLength;\n\t}\n\n\tpublic get(tokenTypeIndex: number, tokenModifierSet: number, languageId: number): HashTableEntry | null {\n\t\tconst hash = this._hashFunc(tokenTypeIndex, tokenModifierSet, languageId);\n\n\t\tlet p = this._elements[hash];\n\t\twhile (p) {\n\t\t\tif (p.tokenTypeIndex === tokenTypeIndex && p.tokenModifierSet === tokenModifierSet && p.languageId === languageId) {\n\t\t\t\treturn p;\n\t\t\t}\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic add(tokenTypeIndex: number, tokenModifierSet: number, languageId: number, metadata: number): void {\n\t\tthis._elementsCount++;\n\t\tif (this._growCount !== 0 && this._elementsCount >= this._growCount) {\n\t\t\t// expand!\n\t\t\tconst oldElements = this._elements;\n\n\t\t\tthis._currentLengthIndex++;\n\t\t\tthis._currentLength = HashTable._SIZES[this._currentLengthIndex];\n\t\t\tthis._growCount = Math.round(this._currentLengthIndex + 1 < HashTable._SIZES.length ? 2 / 3 * this._currentLength : 0);\n\t\t\tthis._elements = [];\n\t\t\tHashTable._nullOutEntries(this._elements, this._currentLength);\n\n\t\t\tfor (const first of oldElements) {\n\t\t\t\tlet p = first;\n\t\t\t\twhile (p) {\n\t\t\t\t\tconst oldNext = p.next;\n\t\t\t\t\tp.next = null;\n\t\t\t\t\tthis._add(p);\n\t\t\t\t\tp = oldNext;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._add(new HashTableEntry(tokenTypeIndex, tokenModifierSet, languageId, metadata));\n\t}\n\n\tprivate _add(element: HashTableEntry): void {\n\t\tconst hash = this._hashFunc(element.tokenTypeIndex, element.tokenModifierSet, element.languageId);\n\t\telement.next = this._elements[hash];\n\t\tthis._elements[hash] = element;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 736, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/semanticTokensStyling.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/semanticTokensStyling.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from '../languages.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\n\nexport const ISemanticTokensStylingService = createDecorator<ISemanticTokensStylingService>('semanticTokensStylingService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface ISemanticTokensStylingService {\n\treadonly _serviceBrand: undefined;\n\n\tgetStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nimport { DocumentSemanticTokensProvider, DocumentRangeSemanticTokensProvider } from '../languages.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\n\nexport const ISemanticTokensStylingService = createDecorator<ISemanticTokensStylingService>('semanticTokensStylingService');\n\nexport type DocumentTokensProvider = DocumentSemanticTokensProvider | DocumentRangeSemanticTokensProvider;\n\nexport interface ISemanticTokensStylingService {\n\treadonly _serviceBrand: undefined;\n\n\tgetStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;;AAInF,MAAM,6BAA6B,OAAG,wNAAe,EAAgC,8BAA8B,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 750, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/semanticTokensDto.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/semanticTokensDto.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport * as platform from '../../../base/common/platform.js';\n\nexport interface IFullSemanticTokensDto {\n\tid: number;\n\ttype: 'full';\n\tdata: Uint32Array;\n}\n\nexport interface IDeltaSemanticTokensDto {\n\tid: number;\n\ttype: 'delta';\n\tdeltas: { start: number; deleteCount: number; data?: Uint32Array }[];\n}\n\nexport type ISemanticTokensDto = IFullSemanticTokensDto | IDeltaSemanticTokensDto;\n\nconst enum EncodedSemanticTokensType {\n\tFull = 1,\n\tDelta = 2\n}\n\nfunction reverseEndianness(arr: Uint8Array): void {\n\tfor (let i = 0, len = arr.length; i < len; i += 4) {\n\t\t// flip bytes 0<->3 and 1<->2\n\t\tconst b0 = arr[i + 0];\n\t\tconst b1 = arr[i + 1];\n\t\tconst b2 = arr[i + 2];\n\t\tconst b3 = arr[i + 3];\n\t\tarr[i + 0] = b3;\n\t\tarr[i + 1] = b2;\n\t\tarr[i + 2] = b1;\n\t\tarr[i + 3] = b0;\n\t}\n}\n\nfunction toLittleEndianBuffer(arr: Uint32Array): VSBuffer {\n\tconst uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n\tif (!platform.isLittleEndian()) {\n\t\t// the byte order must be changed\n\t\treverseEndianness(uint8Arr);\n\t}\n\treturn VSBuffer.wrap(uint8Arr);\n}\n\nexport function encodeSemanticTokensDto(semanticTokens: ISemanticTokensDto): VSBuffer {\n\tconst dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n\tlet offset = 0;\n\tdest[offset++] = semanticTokens.id;\n\tif (semanticTokens.type === 'full') {\n\t\tdest[offset++] = EncodedSemanticTokensType.Full;\n\t\tdest[offset++] = semanticTokens.data.length;\n\t\tdest.set(semanticTokens.data, offset); offset += semanticTokens.data.length;\n\t} else {\n\t\tdest[offset++] = EncodedSemanticTokensType.Delta;\n\t\tdest[offset++] = semanticTokens.deltas.length;\n\t\tfor (const delta of semanticTokens.deltas) {\n\t\t\tdest[offset++] = delta.start;\n\t\t\tdest[offset++] = delta.deleteCount;\n\t\t\tif (delta.data) {\n\t\t\t\tdest[offset++] = delta.data.length;\n\t\t\t\tdest.set(delta.data, offset); offset += delta.data.length;\n\t\t\t} else {\n\t\t\t\tdest[offset++] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn toLittleEndianBuffer(dest);\n}\n\nfunction encodeSemanticTokensDtoSize(semanticTokens: ISemanticTokensDto): number {\n\tlet result = 0;\n\tresult += (\n\t\t+ 1 // id\n\t\t+ 1 // type\n\t);\n\tif (semanticTokens.type === 'full') {\n\t\tresult += (\n\t\t\t+ 1 // data length\n\t\t\t+ semanticTokens.data.length\n\t\t);\n\t} else {\n\t\tresult += (\n\t\t\t+ 1 // delta count\n\t\t);\n\t\tresult += (\n\t\t\t+ 1 // start\n\t\t\t+ 1 // deleteCount\n\t\t\t+ 1 // data length\n\t\t) * semanticTokens.deltas.length;\n\t\tfor (const delta of semanticTokens.deltas) {\n\t\t\tif (delta.data) {\n\t\t\t\tresult += delta.data.length;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from '../../../base/common/buffer.js';\nimport * as platform from '../../../base/common/platform.js';\n\nexport interface IFullSemanticTokensDto {\n\tid: number;\n\ttype: 'full';\n\tdata: Uint32Array;\n}\n\nexport interface IDeltaSemanticTokensDto {\n\tid: number;\n\ttype: 'delta';\n\tdeltas: { start: number; deleteCount: number; data?: Uint32Array }[];\n}\n\nexport type ISemanticTokensDto = IFullSemanticTokensDto | IDeltaSemanticTokensDto;\n\nconst enum EncodedSemanticTokensType {\n\tFull = 1,\n\tDelta = 2\n}\n\nfunction reverseEndianness(arr: Uint8Array): void {\n\tfor (let i = 0, len = arr.length; i < len; i += 4) {\n\t\t// flip bytes 0<->3 and 1<->2\n\t\tconst b0 = arr[i + 0];\n\t\tconst b1 = arr[i + 1];\n\t\tconst b2 = arr[i + 2];\n\t\tconst b3 = arr[i + 3];\n\t\tarr[i + 0] = b3;\n\t\tarr[i + 1] = b2;\n\t\tarr[i + 2] = b1;\n\t\tarr[i + 3] = b0;\n\t}\n}\n\nfunction toLittleEndianBuffer(arr: Uint32Array): VSBuffer {\n\tconst uint8Arr = new Uint8Array(arr.buffer, arr.byteOffset, arr.length * 4);\n\tif (!platform.isLittleEndian()) {\n\t\t// the byte order must be changed\n\t\treverseEndianness(uint8Arr);\n\t}\n\treturn VSBuffer.wrap(uint8Arr);\n}\n\nexport function encodeSemanticTokensDto(semanticTokens: ISemanticTokensDto): VSBuffer {\n\tconst dest = new Uint32Array(encodeSemanticTokensDtoSize(semanticTokens));\n\tlet offset = 0;\n\tdest[offset++] = semanticTokens.id;\n\tif (semanticTokens.type === 'full') {\n\t\tdest[offset++] = EncodedSemanticTokensType.Full;\n\t\tdest[offset++] = semanticTokens.data.length;\n\t\tdest.set(semanticTokens.data, offset); offset += semanticTokens.data.length;\n\t} else {\n\t\tdest[offset++] = EncodedSemanticTokensType.Delta;\n\t\tdest[offset++] = semanticTokens.deltas.length;\n\t\tfor (const delta of semanticTokens.deltas) {\n\t\t\tdest[offset++] = delta.start;\n\t\t\tdest[offset++] = delta.deleteCount;\n\t\t\tif (delta.data) {\n\t\t\t\tdest[offset++] = delta.data.length;\n\t\t\t\tdest.set(delta.data, offset); offset += delta.data.length;\n\t\t\t} else {\n\t\t\t\tdest[offset++] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn toLittleEndianBuffer(dest);\n}\n\nfunction encodeSemanticTokensDtoSize(semanticTokens: ISemanticTokensDto): number {\n\tlet result = 0;\n\tresult += (\n\t\t+ 1 // id\n\t\t+ 1 // type\n\t);\n\tif (semanticTokens.type === 'full') {\n\t\tresult += (\n\t\t\t+ 1 // data length\n\t\t\t+ semanticTokens.data.length\n\t\t);\n\t} else {\n\t\tresult += (\n\t\t\t+ 1 // delta count\n\t\t);\n\t\tresult += (\n\t\t\t+ 1 // start\n\t\t\t+ 1 // deleteCount\n\t\t\t+ 1 // data length\n\t\t) * semanticTokens.deltas.length;\n\t\tfor (const delta of semanticTokens.deltas) {\n\t\t\tif (delta.data) {\n\t\t\t\tresult += delta.data.length;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 835, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/unicodeTextModelHighlighter.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/unicodeTextModelHighlighter.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange, Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { IUnicodeHighlightsResult } from './editorWorker.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\n\nexport class UnicodeTextModelHighlighter {\n\tpublic static computeUnicodeHighlights(model: IUnicodeCharacterSearcherTarget, options: UnicodeHighlighterOptions, range?: IRange): IUnicodeHighlightsResult {\n\t\tconst startLine = range ? range.startLineNumber : 1;\n\t\tconst endLine = range ? range.endLineNumber : model.getLineCount();\n\n\t\tconst codePointHighlighter = new CodePointHighlighter(options);\n\n\t\tconst candidates = codePointHighlighter.getCandidateCodePoints();\n\t\tlet regex: RegExp;\n\t\tif (candidates === 'allNonBasicAscii') {\n\t\t\tregex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n\t\t} else {\n\t\t\tregex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n\t\t}\n\n\t\tconst searcher = new Searcher(null, regex);\n\t\tconst ranges: Range[] = [];\n\t\tlet hasMore = false;\n\t\tlet m: RegExpExecArray | null;\n\n\t\tlet ambiguousCharacterCount = 0;\n\t\tlet invisibleCharacterCount = 0;\n\t\tlet nonBasicAsciiCharacterCount = 0;\n\n\t\tforLoop:\n\t\tfor (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\t\tconst lineLength = lineContent.length;\n\n\t\t\t// Reset regex to search from the beginning\n\t\t\tsearcher.reset(0);\n\t\t\tdo {\n\t\t\t\tm = searcher.next(lineContent);\n\t\t\t\tif (m) {\n\t\t\t\t\tlet startIndex = m.index;\n\t\t\t\t\tlet endIndex = m.index + m[0].length;\n\n\t\t\t\t\t// Extend range to entire code point\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tconst charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n\t\t\t\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (endIndex + 1 < lineLength) {\n\t\t\t\t\t\tconst charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n\t\t\t\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst str = lineContent.substring(startIndex, endIndex);\n\t\t\t\t\tlet word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n\t\t\t\t\tif (word && word.endColumn <= startIndex + 1) {\n\t\t\t\t\t\t// The word does not include the problematic character, ignore the word\n\t\t\t\t\t\tword = null;\n\t\t\t\t\t}\n\t\t\t\t\tconst highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n\n\t\t\t\t\tif (highlightReason !== SimpleHighlightReason.None) {\n\t\t\t\t\t\tif (highlightReason === SimpleHighlightReason.Ambiguous) {\n\t\t\t\t\t\t\tambiguousCharacterCount++;\n\t\t\t\t\t\t} else if (highlightReason === SimpleHighlightReason.Invisible) {\n\t\t\t\t\t\t\tinvisibleCharacterCount++;\n\t\t\t\t\t\t} else if (highlightReason === SimpleHighlightReason.NonBasicASCII) {\n\t\t\t\t\t\t\tnonBasicAsciiCharacterCount++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassertNever(highlightReason);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst MAX_RESULT_LENGTH = 1000;\n\t\t\t\t\t\tif (ranges.length >= MAX_RESULT_LENGTH) {\n\t\t\t\t\t\t\thasMore = true;\n\t\t\t\t\t\t\tbreak forLoop;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (m);\n\t\t}\n\t\treturn {\n\t\t\tranges,\n\t\t\thasMore,\n\t\t\tambiguousCharacterCount,\n\t\t\tinvisibleCharacterCount,\n\t\t\tnonBasicAsciiCharacterCount\n\t\t};\n\t}\n\n\tpublic static computeUnicodeHighlightReason(char: string, options: UnicodeHighlighterOptions): UnicodeHighlighterReason | null {\n\t\tconst codePointHighlighter = new CodePointHighlighter(options);\n\n\t\tconst reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n\t\tswitch (reason) {\n\t\t\tcase SimpleHighlightReason.None:\n\t\t\t\treturn null;\n\t\t\tcase SimpleHighlightReason.Invisible:\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.Invisible };\n\n\t\t\tcase SimpleHighlightReason.Ambiguous: {\n\t\t\t\tconst codePoint = char.codePointAt(0)!;\n\t\t\t\tconst primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint)!;\n\t\t\t\tconst notAmbiguousInLocales =\n\t\t\t\t\tstrings.AmbiguousCharacters.getLocales().filter(\n\t\t\t\t\t\t(l) =>\n\t\t\t\t\t\t\t!strings.AmbiguousCharacters.getInstance(\n\t\t\t\t\t\t\t\tnew Set([...options.allowedLocales, l])\n\t\t\t\t\t\t\t).isAmbiguous(codePoint)\n\t\t\t\t\t);\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.Ambiguous, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n\t\t\t}\n\t\t\tcase SimpleHighlightReason.NonBasicASCII:\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.NonBasicAscii };\n\t\t}\n\t}\n}\n\nfunction buildRegExpCharClassExpr(codePoints: number[], flags?: string): string {\n\tconst src = `[${strings.escapeRegExpCharacters(\n\t\tcodePoints.map((i) => String.fromCodePoint(i)).join('')\n\t)}]`;\n\treturn src;\n}\n\nexport const enum UnicodeHighlighterReasonKind {\n\tAmbiguous, Invisible, NonBasicAscii\n}\n\nexport type UnicodeHighlighterReason = {\n\tkind: UnicodeHighlighterReasonKind.Ambiguous;\n\tconfusableWith: string;\n\tnotAmbiguousInLocales: string[];\n} | {\n\tkind: UnicodeHighlighterReasonKind.Invisible;\n} | {\n\tkind: UnicodeHighlighterReasonKind.NonBasicAscii;\n};\n\nclass CodePointHighlighter {\n\tprivate readonly allowedCodePoints: Set<number>;\n\tpublic readonly ambiguousCharacters: strings.AmbiguousCharacters;\n\tconstructor(private readonly options: UnicodeHighlighterOptions) {\n\t\tthis.allowedCodePoints = new Set(options.allowedCodePoints);\n\t\tthis.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n\t}\n\n\tpublic getCandidateCodePoints(): Set<number> | 'allNonBasicAscii' {\n\t\tif (this.options.nonBasicASCII) {\n\t\t\treturn 'allNonBasicAscii';\n\t\t}\n\n\t\tconst set = new Set<number>();\n\n\t\tif (this.options.invisibleCharacters) {\n\t\t\tfor (const cp of strings.InvisibleCharacters.codePoints) {\n\t\t\t\tif (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n\t\t\t\t\tset.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.ambiguousCharacters) {\n\t\t\tfor (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n\t\t\t\tset.add(cp);\n\t\t\t}\n\t\t}\n\n\t\tfor (const cp of this.allowedCodePoints) {\n\t\t\tset.delete(cp);\n\t\t}\n\n\t\treturn set;\n\t}\n\n\tpublic shouldHighlightNonBasicASCII(character: string, wordContext: string | null): SimpleHighlightReason {\n\t\tconst codePoint = character.codePointAt(0)!;\n\n\t\tif (this.allowedCodePoints.has(codePoint)) {\n\t\t\treturn SimpleHighlightReason.None;\n\t\t}\n\n\t\tif (this.options.nonBasicASCII) {\n\t\t\treturn SimpleHighlightReason.NonBasicASCII;\n\t\t}\n\n\t\tlet hasBasicASCIICharacters = false;\n\t\tlet hasNonConfusableNonBasicAsciiCharacter = false;\n\t\tif (wordContext) {\n\t\t\tfor (const char of wordContext) {\n\t\t\t\tconst codePoint = char.codePointAt(0)!;\n\t\t\t\tconst isBasicASCII = strings.isBasicASCII(char);\n\t\t\t\thasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n\n\t\t\t\tif (\n\t\t\t\t\t!isBasicASCII &&\n\t\t\t\t\t!this.ambiguousCharacters.isAmbiguous(codePoint) &&\n\t\t\t\t\t!strings.InvisibleCharacters.isInvisibleCharacter(codePoint)\n\t\t\t\t) {\n\t\t\t\t\thasNonConfusableNonBasicAsciiCharacter = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t/* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n\t\t\t/* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter\n\t\t) {\n\t\t\treturn SimpleHighlightReason.None;\n\t\t}\n\n\t\tif (this.options.invisibleCharacters) {\n\t\t\t// TODO check for emojis\n\t\t\tif (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n\t\t\t\treturn SimpleHighlightReason.Invisible;\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.ambiguousCharacters) {\n\t\t\tif (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n\t\t\t\treturn SimpleHighlightReason.Ambiguous;\n\t\t\t}\n\t\t}\n\n\t\treturn SimpleHighlightReason.None;\n\t}\n}\n\nfunction isAllowedInvisibleCharacter(character: string): boolean {\n\treturn character === ' ' || character === '\\n' || character === '\\t';\n}\n\nconst enum SimpleHighlightReason {\n\tNone,\n\tNonBasicASCII,\n\tInvisible,\n\tAmbiguous\n}\n\nexport interface IUnicodeCharacterSearcherTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport interface UnicodeHighlighterOptions {\n\tnonBasicASCII: boolean;\n\tambiguousCharacters: boolean;\n\tinvisibleCharacters: boolean;\n\tincludeComments: boolean;\n\tincludeStrings: boolean;\n\tallowedCodePoints: number[];\n\tallowedLocales: string[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange, Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { IUnicodeHighlightsResult } from './editorWorker.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { DEFAULT_WORD_REGEXP, getWordAtText } from '../core/wordHelper.js';\n\nexport class UnicodeTextModelHighlighter {\n\tpublic static computeUnicodeHighlights(model: IUnicodeCharacterSearcherTarget, options: UnicodeHighlighterOptions, range?: IRange): IUnicodeHighlightsResult {\n\t\tconst startLine = range ? range.startLineNumber : 1;\n\t\tconst endLine = range ? range.endLineNumber : model.getLineCount();\n\n\t\tconst codePointHighlighter = new CodePointHighlighter(options);\n\n\t\tconst candidates = codePointHighlighter.getCandidateCodePoints();\n\t\tlet regex: RegExp;\n\t\tif (candidates === 'allNonBasicAscii') {\n\t\t\tregex = new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g');\n\t\t} else {\n\t\t\tregex = new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g');\n\t\t}\n\n\t\tconst searcher = new Searcher(null, regex);\n\t\tconst ranges: Range[] = [];\n\t\tlet hasMore = false;\n\t\tlet m: RegExpExecArray | null;\n\n\t\tlet ambiguousCharacterCount = 0;\n\t\tlet invisibleCharacterCount = 0;\n\t\tlet nonBasicAsciiCharacterCount = 0;\n\n\t\tforLoop:\n\t\tfor (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n\t\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\t\tconst lineLength = lineContent.length;\n\n\t\t\t// Reset regex to search from the beginning\n\t\t\tsearcher.reset(0);\n\t\t\tdo {\n\t\t\t\tm = searcher.next(lineContent);\n\t\t\t\tif (m) {\n\t\t\t\t\tlet startIndex = m.index;\n\t\t\t\t\tlet endIndex = m.index + m[0].length;\n\n\t\t\t\t\t// Extend range to entire code point\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tconst charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n\t\t\t\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (endIndex + 1 < lineLength) {\n\t\t\t\t\t\tconst charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n\t\t\t\t\t\tif (strings.isHighSurrogate(charCodeBefore)) {\n\t\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst str = lineContent.substring(startIndex, endIndex);\n\t\t\t\t\tlet word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n\t\t\t\t\tif (word && word.endColumn <= startIndex + 1) {\n\t\t\t\t\t\t// The word does not include the problematic character, ignore the word\n\t\t\t\t\t\tword = null;\n\t\t\t\t\t}\n\t\t\t\t\tconst highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n\n\t\t\t\t\tif (highlightReason !== SimpleHighlightReason.None) {\n\t\t\t\t\t\tif (highlightReason === SimpleHighlightReason.Ambiguous) {\n\t\t\t\t\t\t\tambiguousCharacterCount++;\n\t\t\t\t\t\t} else if (highlightReason === SimpleHighlightReason.Invisible) {\n\t\t\t\t\t\t\tinvisibleCharacterCount++;\n\t\t\t\t\t\t} else if (highlightReason === SimpleHighlightReason.NonBasicASCII) {\n\t\t\t\t\t\t\tnonBasicAsciiCharacterCount++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tassertNever(highlightReason);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst MAX_RESULT_LENGTH = 1000;\n\t\t\t\t\t\tif (ranges.length >= MAX_RESULT_LENGTH) {\n\t\t\t\t\t\t\thasMore = true;\n\t\t\t\t\t\t\tbreak forLoop;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tranges.push(new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} while (m);\n\t\t}\n\t\treturn {\n\t\t\tranges,\n\t\t\thasMore,\n\t\t\tambiguousCharacterCount,\n\t\t\tinvisibleCharacterCount,\n\t\t\tnonBasicAsciiCharacterCount\n\t\t};\n\t}\n\n\tpublic static computeUnicodeHighlightReason(char: string, options: UnicodeHighlighterOptions): UnicodeHighlighterReason | null {\n\t\tconst codePointHighlighter = new CodePointHighlighter(options);\n\n\t\tconst reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n\t\tswitch (reason) {\n\t\t\tcase SimpleHighlightReason.None:\n\t\t\t\treturn null;\n\t\t\tcase SimpleHighlightReason.Invisible:\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.Invisible };\n\n\t\t\tcase SimpleHighlightReason.Ambiguous: {\n\t\t\t\tconst codePoint = char.codePointAt(0)!;\n\t\t\t\tconst primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint)!;\n\t\t\t\tconst notAmbiguousInLocales =\n\t\t\t\t\tstrings.AmbiguousCharacters.getLocales().filter(\n\t\t\t\t\t\t(l) =>\n\t\t\t\t\t\t\t!strings.AmbiguousCharacters.getInstance(\n\t\t\t\t\t\t\t\tnew Set([...options.allowedLocales, l])\n\t\t\t\t\t\t\t).isAmbiguous(codePoint)\n\t\t\t\t\t);\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.Ambiguous, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n\t\t\t}\n\t\t\tcase SimpleHighlightReason.NonBasicASCII:\n\t\t\t\treturn { kind: UnicodeHighlighterReasonKind.NonBasicAscii };\n\t\t}\n\t}\n}\n\nfunction buildRegExpCharClassExpr(codePoints: number[], flags?: string): string {\n\tconst src = `[${strings.escapeRegExpCharacters(\n\t\tcodePoints.map((i) => String.fromCodePoint(i)).join('')\n\t)}]`;\n\treturn src;\n}\n\nexport const enum UnicodeHighlighterReasonKind {\n\tAmbiguous, Invisible, NonBasicAscii\n}\n\nexport type UnicodeHighlighterReason = {\n\tkind: UnicodeHighlighterReasonKind.Ambiguous;\n\tconfusableWith: string;\n\tnotAmbiguousInLocales: string[];\n} | {\n\tkind: UnicodeHighlighterReasonKind.Invisible;\n} | {\n\tkind: UnicodeHighlighterReasonKind.NonBasicAscii;\n};\n\nclass CodePointHighlighter {\n\tprivate readonly allowedCodePoints: Set<number>;\n\tpublic readonly ambiguousCharacters: strings.AmbiguousCharacters;\n\tconstructor(private readonly options: UnicodeHighlighterOptions) {\n\t\tthis.allowedCodePoints = new Set(options.allowedCodePoints);\n\t\tthis.ambiguousCharacters = strings.AmbiguousCharacters.getInstance(new Set(options.allowedLocales));\n\t}\n\n\tpublic getCandidateCodePoints(): Set<number> | 'allNonBasicAscii' {\n\t\tif (this.options.nonBasicASCII) {\n\t\t\treturn 'allNonBasicAscii';\n\t\t}\n\n\t\tconst set = new Set<number>();\n\n\t\tif (this.options.invisibleCharacters) {\n\t\t\tfor (const cp of strings.InvisibleCharacters.codePoints) {\n\t\t\t\tif (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n\t\t\t\t\tset.add(cp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.ambiguousCharacters) {\n\t\t\tfor (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n\t\t\t\tset.add(cp);\n\t\t\t}\n\t\t}\n\n\t\tfor (const cp of this.allowedCodePoints) {\n\t\t\tset.delete(cp);\n\t\t}\n\n\t\treturn set;\n\t}\n\n\tpublic shouldHighlightNonBasicASCII(character: string, wordContext: string | null): SimpleHighlightReason {\n\t\tconst codePoint = character.codePointAt(0)!;\n\n\t\tif (this.allowedCodePoints.has(codePoint)) {\n\t\t\treturn SimpleHighlightReason.None;\n\t\t}\n\n\t\tif (this.options.nonBasicASCII) {\n\t\t\treturn SimpleHighlightReason.NonBasicASCII;\n\t\t}\n\n\t\tlet hasBasicASCIICharacters = false;\n\t\tlet hasNonConfusableNonBasicAsciiCharacter = false;\n\t\tif (wordContext) {\n\t\t\tfor (const char of wordContext) {\n\t\t\t\tconst codePoint = char.codePointAt(0)!;\n\t\t\t\tconst isBasicASCII = strings.isBasicASCII(char);\n\t\t\t\thasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII;\n\n\t\t\t\tif (\n\t\t\t\t\t!isBasicASCII &&\n\t\t\t\t\t!this.ambiguousCharacters.isAmbiguous(codePoint) &&\n\t\t\t\t\t!strings.InvisibleCharacters.isInvisibleCharacter(codePoint)\n\t\t\t\t) {\n\t\t\t\t\thasNonConfusableNonBasicAsciiCharacter = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t/* Don't allow mixing weird looking characters with ASCII */ !hasBasicASCIICharacters &&\n\t\t\t/* Is there an obviously weird looking character? */ hasNonConfusableNonBasicAsciiCharacter\n\t\t) {\n\t\t\treturn SimpleHighlightReason.None;\n\t\t}\n\n\t\tif (this.options.invisibleCharacters) {\n\t\t\t// TODO check for emojis\n\t\t\tif (!isAllowedInvisibleCharacter(character) && strings.InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n\t\t\t\treturn SimpleHighlightReason.Invisible;\n\t\t\t}\n\t\t}\n\n\t\tif (this.options.ambiguousCharacters) {\n\t\t\tif (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n\t\t\t\treturn SimpleHighlightReason.Ambiguous;\n\t\t\t}\n\t\t}\n\n\t\treturn SimpleHighlightReason.None;\n\t}\n}\n\nfunction isAllowedInvisibleCharacter(character: string): boolean {\n\treturn character === ' ' || character === '\\n' || character === '\\t';\n}\n\nconst enum SimpleHighlightReason {\n\tNone,\n\tNonBasicASCII,\n\tInvisible,\n\tAmbiguous\n}\n\nexport interface IUnicodeCharacterSearcherTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport interface UnicodeHighlighterOptions {\n\tnonBasicASCII: boolean;\n\tambiguousCharacters: boolean;\n\tinvisibleCharacters: boolean;\n\tincludeComments: boolean;\n\tincludeStrings: boolean;\n\tallowedCodePoints: number[];\n\tallowedLocales: string[];\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1036, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/editorBaseApi.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/editorBaseApi.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/editorBaseApi.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord, KeyMod as ConstKeyMod } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyChord, KeyMod as ConstKeyMod } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport * as standaloneEnums from '../standalone/standaloneEnums.js';\n\nexport class KeyMod {\n\tpublic static readonly CtrlCmd: number = ConstKeyMod.CtrlCmd;\n\tpublic static readonly Shift: number = ConstKeyMod.Shift;\n\tpublic static readonly Alt: number = ConstKeyMod.Alt;\n\tpublic static readonly WinCtrl: number = ConstKeyMod.WinCtrl;\n\n\tpublic static chord(firstPart: number, secondPart: number): number {\n\t\treturn KeyChord(firstPart, secondPart);\n\t}\n}\n\nexport function createMonacoBaseAPI(): typeof monaco {\n\treturn {\n\t\teditor: undefined!, // undefined override expected here\n\t\tlanguages: undefined!, // undefined override expected here\n\t\tCancellationTokenSource: CancellationTokenSource,\n\t\tEmitter: Emitter,\n\t\tKeyCode: standaloneEnums.KeyCode,\n\t\tKeyMod: KeyMod,\n\t\tPosition: Position,\n\t\tRange: Range,\n\t\tSelection: <any>Selection,\n\t\tSelectionDirection: standaloneEnums.SelectionDirection,\n\t\tMarkerSeverity: standaloneEnums.MarkerSeverity,\n\t\tMarkerTag: standaloneEnums.MarkerTag,\n\t\tUri: <any>URI,\n\t\tToken: Token\n\t};\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;AAEhG,OAAO,EAAE,uBAAuB,EAAE,MAAM,sCAAsC,CAAC;AAC/E,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EAAE,QAAQ,EAAyB,MAAM,kCAAkC,CAAC;AACnF,OAAO,EAAE,GAAG,EAAE,MAAM,6BAA6B,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAC/C,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAC;AACjD,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,eAAe,MAAM,kCAAkC,CAAC;;;;;;;;;;AAE9D,MAAO,MAAM;;QACK,IAAA,CAAA,OAAO,GAAA,KAAA,uBAAA,GAA+B;IAAA,CAAA;;QACtC,IAAA,CAAA,KAAK,GAAA,KAAA,qBAAA,GAA6B;IAAA,CAAA;;QAClC,IAAA,CAAA,GAAG,GAAA,IAAA,mBAAA,GAA2B;IAAA,CAAA;;QAC9B,IAAA,CAAA,OAAO,GAAA,IAAA,uBAAA,GAA+B;IAAA,CAAA;IAEtD,MAAM,CAAC,KAAK,CAAC,SAAiB,EAAE,UAAkB,EAAA;QACxD,WAAO,uLAAQ,EAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IACxC,CAAC;;AAGI,SAAU,mBAAmB;IAClC,OAAO;QACN,MAAM,EAAE,SAAU,EAAE,mCAAmC;QACvD,SAAS,EAAE,SAAU,EAAE,mCAAmC;QAC1D,uBAAuB,EAAE,0MAAuB;QAChD,OAAO,EAAE,mLAAO;QAChB,OAAO,EAAE,eAAe,CAAC,6LAAO;QAChC,MAAM,EAAE,MAAM;QACd,QAAQ,EAAE,iMAAQ;QAClB,KAAK,EAAE,2LAAK;QACZ,SAAS,EAAO,mMAAS;QACzB,kBAAkB,EAAE,eAAe,CAAC,wMAAkB;QACtD,cAAc,EAAE,eAAe,CAAC,oMAAc;QAC9C,SAAS,EAAE,eAAe,CAAC,+LAAS;QACpC,GAAG,EAAO,6KAAG;QACb,KAAK,EAAE,uLAAK;KACZ,CAAC;AACH,CAAC","debugId":null}},
    {"offset": {"line": 1102, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/findSectionHeaders.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/findSectionHeaders.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from '../core/range.js';\nimport { FoldingRules } from '../languages/languageConfiguration.js';\nimport { isMultilineRegexSource } from '../model/textModelSearch.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\n\nexport interface ISectionHeaderFinderTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport interface FindSectionHeaderOptions {\n\tfoldingRules?: FoldingRules;\n\tfindRegionSectionHeaders: boolean;\n\tfindMarkSectionHeaders: boolean;\n\tmarkSectionHeaderRegex: string;\n}\n\nexport interface SectionHeader {\n\t/**\n\t * The location of the header text in the text model.\n\t */\n\trange: IRange;\n\t/**\n\t * The section header text.\n\t */\n\ttext: string;\n\t/**\n\t * Whether the section header includes a separator line.\n\t */\n\thasSeparatorLine: boolean;\n\t/**\n\t * This section should be omitted before rendering if it's not in a comment.\n\t */\n\tshouldBeInComments: boolean;\n}\n\nconst trimDashesRegex = /^-+|-+$/g;\n\nconst CHUNK_SIZE = 100;\nconst MAX_SECTION_LINES = 5;\n\n/**\n * Find section headers in the model.\n *\n * @param model the text model to search in\n * @param options options to search with\n * @returns an array of section headers\n */\nexport function findSectionHeaders(model: ISectionHeaderFinderTarget, options: FindSectionHeaderOptions): SectionHeader[] {\n\tlet headers: SectionHeader[] = [];\n\tif (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n\t\tconst regionHeaders = collectRegionHeaders(model, options);\n\t\theaders = headers.concat(regionHeaders);\n\t}\n\tif (options.findMarkSectionHeaders) {\n\t\tconst markHeaders = collectMarkHeaders(model, options);\n\t\theaders = headers.concat(markHeaders);\n\t}\n\treturn headers;\n}\n\nfunction collectRegionHeaders(model: ISectionHeaderFinderTarget, options: FindSectionHeaderOptions): SectionHeader[] {\n\tconst regionHeaders: SectionHeader[] = [];\n\tconst endLineNumber = model.getLineCount();\n\tfor (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst match = lineContent.match(options.foldingRules!.markers!.start);\n\t\tif (match) {\n\t\t\tconst range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n\t\t\tif (range.endColumn > range.startColumn) {\n\t\t\t\tconst sectionHeader = {\n\t\t\t\t\trange,\n\t\t\t\t\t...getHeaderText(lineContent.substring(match[0].length)),\n\t\t\t\t\tshouldBeInComments: false\n\t\t\t\t};\n\t\t\t\tif (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n\t\t\t\t\tregionHeaders.push(sectionHeader);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn regionHeaders;\n}\n\nexport function collectMarkHeaders(model: ISectionHeaderFinderTarget, options: FindSectionHeaderOptions): SectionHeader[] {\n\tconst markHeaders: SectionHeader[] = [];\n\tconst endLineNumber = model.getLineCount();\n\n\t// Validate regex to prevent infinite loops\n\tif (!options.markSectionHeaderRegex || options.markSectionHeaderRegex.trim() === '') {\n\t\treturn markHeaders;\n\t}\n\n\t// Create regex with flags for:\n\t// - 'd' for indices to get proper match positions\n\t// - 'm' for multi-line mode so ^ and $ match line starts/ends\n\t// - 's' for dot-all mode so . matches newlines\n\tconst multiline = isMultilineRegexSource(options.markSectionHeaderRegex);\n\tconst regex = new RegExp(options.markSectionHeaderRegex, `gdm${multiline ? 's' : ''}`);\n\n\t// Check if the regex would lead to an endless loop\n\tif (regExpLeadsToEndlessLoop(regex)) {\n\t\treturn markHeaders;\n\t}\n\n\t// Process text in overlapping chunks for better performance\n\tfor (let startLine = 1; startLine <= endLineNumber; startLine += CHUNK_SIZE - MAX_SECTION_LINES) {\n\t\tconst endLine = Math.min(startLine + CHUNK_SIZE - 1, endLineNumber);\n\t\tconst lines: string[] = [];\n\n\t\t// Collect lines for the current chunk\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tlines.push(model.getLineContent(i));\n\t\t}\n\n\t\tconst text = lines.join('\\n');\n\t\tregex.lastIndex = 0;\n\n\t\tlet match: RegExpExecArray | null;\n\t\twhile ((match = regex.exec(text)) !== null) {\n\t\t\t// Calculate which line this match starts on by counting newlines before it\n\t\t\tconst precedingText = text.substring(0, match.index);\n\t\t\tconst lineOffset = (precedingText.match(/\\n/g) || []).length;\n\t\t\tconst lineNumber = startLine + lineOffset;\n\n\t\t\t// Calculate match height to check overlap properly\n\t\t\tconst matchLines = match[0].split('\\n');\n\t\t\tconst matchHeight = matchLines.length;\n\t\t\tconst matchEndLine = lineNumber + matchHeight - 1;\n\n\t\t\t// Calculate start column - need to find the start of the line containing the match\n\t\t\tconst lineStartIndex = precedingText.lastIndexOf('\\n') + 1;\n\t\t\tconst startColumn = match.index - lineStartIndex + 1;\n\n\t\t\t// Calculate end column - need to handle multi-line matches\n\t\t\tconst lastMatchLine = matchLines[matchLines.length - 1];\n\t\t\tconst endColumn = matchHeight === 1 ? startColumn + match[0].length : lastMatchLine.length + 1;\n\n\t\t\tconst range = {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber: matchEndLine,\n\t\t\t\tendColumn\n\t\t\t};\n\n\t\t\tconst text2 = (match.groups ?? {})['label'] ?? '';\n\t\t\tconst hasSeparatorLine = ((match.groups ?? {})['separator'] ?? '') !== '';\n\n\t\t\tconst sectionHeader = {\n\t\t\t\trange,\n\t\t\t\ttext: text2,\n\t\t\t\thasSeparatorLine,\n\t\t\t\tshouldBeInComments: true\n\t\t\t};\n\n\t\t\tif (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n\t\t\t\t// only push if the previous one doesn't have this same linbe\n\t\t\t\tif (markHeaders.length === 0 || markHeaders[markHeaders.length - 1].range.endLineNumber < sectionHeader.range.startLineNumber) {\n\t\t\t\t\tmarkHeaders.push(sectionHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move lastIndex past the current match to avoid infinite loop\n\t\t\tregex.lastIndex = match.index + match[0].length;\n\t\t}\n\t}\n\n\treturn markHeaders;\n}\n\nfunction getHeaderText(text: string): { text: string; hasSeparatorLine: boolean } {\n\ttext = text.trim();\n\tconst hasSeparatorLine = text.startsWith('-');\n\ttext = text.replace(trimDashesRegex, '');\n\treturn { text, hasSeparatorLine };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IRange } from '../core/range.js';\nimport { FoldingRules } from '../languages/languageConfiguration.js';\nimport { isMultilineRegexSource } from '../model/textModelSearch.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\n\nexport interface ISectionHeaderFinderTarget {\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport interface FindSectionHeaderOptions {\n\tfoldingRules?: FoldingRules;\n\tfindRegionSectionHeaders: boolean;\n\tfindMarkSectionHeaders: boolean;\n\tmarkSectionHeaderRegex: string;\n}\n\nexport interface SectionHeader {\n\t/**\n\t * The location of the header text in the text model.\n\t */\n\trange: IRange;\n\t/**\n\t * The section header text.\n\t */\n\ttext: string;\n\t/**\n\t * Whether the section header includes a separator line.\n\t */\n\thasSeparatorLine: boolean;\n\t/**\n\t * This section should be omitted before rendering if it's not in a comment.\n\t */\n\tshouldBeInComments: boolean;\n}\n\nconst trimDashesRegex = /^-+|-+$/g;\n\nconst CHUNK_SIZE = 100;\nconst MAX_SECTION_LINES = 5;\n\n/**\n * Find section headers in the model.\n *\n * @param model the text model to search in\n * @param options options to search with\n * @returns an array of section headers\n */\nexport function findSectionHeaders(model: ISectionHeaderFinderTarget, options: FindSectionHeaderOptions): SectionHeader[] {\n\tlet headers: SectionHeader[] = [];\n\tif (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n\t\tconst regionHeaders = collectRegionHeaders(model, options);\n\t\theaders = headers.concat(regionHeaders);\n\t}\n\tif (options.findMarkSectionHeaders) {\n\t\tconst markHeaders = collectMarkHeaders(model, options);\n\t\theaders = headers.concat(markHeaders);\n\t}\n\treturn headers;\n}\n\nfunction collectRegionHeaders(model: ISectionHeaderFinderTarget, options: FindSectionHeaderOptions): SectionHeader[] {\n\tconst regionHeaders: SectionHeader[] = [];\n\tconst endLineNumber = model.getLineCount();\n\tfor (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n\t\tconst lineContent = model.getLineContent(lineNumber);\n\t\tconst match = lineContent.match(options.foldingRules!.markers!.start);\n\t\tif (match) {\n\t\t\tconst range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n\t\t\tif (range.endColumn > range.startColumn) {\n\t\t\t\tconst sectionHeader = {\n\t\t\t\t\trange,\n\t\t\t\t\t...getHeaderText(lineContent.substring(match[0].length)),\n\t\t\t\t\tshouldBeInComments: false\n\t\t\t\t};\n\t\t\t\tif (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n\t\t\t\t\tregionHeaders.push(sectionHeader);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn regionHeaders;\n}\n\nexport function collectMarkHeaders(model: ISectionHeaderFinderTarget, options: FindSectionHeaderOptions): SectionHeader[] {\n\tconst markHeaders: SectionHeader[] = [];\n\tconst endLineNumber = model.getLineCount();\n\n\t// Validate regex to prevent infinite loops\n\tif (!options.markSectionHeaderRegex || options.markSectionHeaderRegex.trim() === '') {\n\t\treturn markHeaders;\n\t}\n\n\t// Create regex with flags for:\n\t// - 'd' for indices to get proper match positions\n\t// - 'm' for multi-line mode so ^ and $ match line starts/ends\n\t// - 's' for dot-all mode so . matches newlines\n\tconst multiline = isMultilineRegexSource(options.markSectionHeaderRegex);\n\tconst regex = new RegExp(options.markSectionHeaderRegex, `gdm${multiline ? 's' : ''}`);\n\n\t// Check if the regex would lead to an endless loop\n\tif (regExpLeadsToEndlessLoop(regex)) {\n\t\treturn markHeaders;\n\t}\n\n\t// Process text in overlapping chunks for better performance\n\tfor (let startLine = 1; startLine <= endLineNumber; startLine += CHUNK_SIZE - MAX_SECTION_LINES) {\n\t\tconst endLine = Math.min(startLine + CHUNK_SIZE - 1, endLineNumber);\n\t\tconst lines: string[] = [];\n\n\t\t// Collect lines for the current chunk\n\t\tfor (let i = startLine; i <= endLine; i++) {\n\t\t\tlines.push(model.getLineContent(i));\n\t\t}\n\n\t\tconst text = lines.join('\\n');\n\t\tregex.lastIndex = 0;\n\n\t\tlet match: RegExpExecArray | null;\n\t\twhile ((match = regex.exec(text)) !== null) {\n\t\t\t// Calculate which line this match starts on by counting newlines before it\n\t\t\tconst precedingText = text.substring(0, match.index);\n\t\t\tconst lineOffset = (precedingText.match(/\\n/g) || []).length;\n\t\t\tconst lineNumber = startLine + lineOffset;\n\n\t\t\t// Calculate match height to check overlap properly\n\t\t\tconst matchLines = match[0].split('\\n');\n\t\t\tconst matchHeight = matchLines.length;\n\t\t\tconst matchEndLine = lineNumber + matchHeight - 1;\n\n\t\t\t// Calculate start column - need to find the start of the line containing the match\n\t\t\tconst lineStartIndex = precedingText.lastIndexOf('\\n') + 1;\n\t\t\tconst startColumn = match.index - lineStartIndex + 1;\n\n\t\t\t// Calculate end column - need to handle multi-line matches\n\t\t\tconst lastMatchLine = matchLines[matchLines.length - 1];\n\t\t\tconst endColumn = matchHeight === 1 ? startColumn + match[0].length : lastMatchLine.length + 1;\n\n\t\t\tconst range = {\n\t\t\t\tstartLineNumber: lineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber: matchEndLine,\n\t\t\t\tendColumn\n\t\t\t};\n\n\t\t\tconst text2 = (match.groups ?? {})['label'] ?? '';\n\t\t\tconst hasSeparatorLine = ((match.groups ?? {})['separator'] ?? '') !== '';\n\n\t\t\tconst sectionHeader = {\n\t\t\t\trange,\n\t\t\t\ttext: text2,\n\t\t\t\thasSeparatorLine,\n\t\t\t\tshouldBeInComments: true\n\t\t\t};\n\n\t\t\tif (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n\t\t\t\t// only push if the previous one doesn't have this same linbe\n\t\t\t\tif (markHeaders.length === 0 || markHeaders[markHeaders.length - 1].range.endLineNumber < sectionHeader.range.startLineNumber) {\n\t\t\t\t\tmarkHeaders.push(sectionHeader);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Move lastIndex past the current match to avoid infinite loop\n\t\t\tregex.lastIndex = match.index + match[0].length;\n\t\t}\n\t}\n\n\treturn markHeaders;\n}\n\nfunction getHeaderText(text: string): { text: string; hasSeparatorLine: boolean } {\n\ttext = text.trim();\n\tconst hasSeparatorLine = text.startsWith('-');\n\ttext = text.replace(trimDashesRegex, '');\n\treturn { text, hasSeparatorLine };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1239, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/textModelSync/textModelSync.impl.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/textModelSync/vs/editor/common/services/textModelSync/textModelSync.impl.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IPosition, Position } from '../../core/position.js';\nimport { IRange, Range } from '../../core/range.js';\nimport { ensureValidWordDefinition, getWordAtText, IWordAtPosition } from '../../core/wordHelper.js';\nimport { IDocumentColorComputerTarget } from '../../languages/defaultDocumentColorsComputer.js';\nimport { ILinkComputerTarget } from '../../languages/linkComputer.js';\nimport { MirrorTextModel as BaseMirrorModel, IModelChangedEvent } from '../../model/mirrorTextModel.js';\nimport { IMirrorModel, IWordRange } from '../editorWebWorker.js';\nimport { IModelService } from '../model.js';\nimport { IRawModelData, IWorkerTextModelSyncChannelServer } from './textModelSync.protocol.js';\n\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nexport const STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n\nexport class WorkerTextModelSyncClient extends Disposable {\n\n\tprivate readonly _proxy: IWorkerTextModelSyncChannelServer;\n\tprivate readonly _modelService: IModelService;\n\tprivate _syncedModels: { [modelUrl: string]: IDisposable } = Object.create(null);\n\tprivate _syncedModelsLastUsedTime: { [modelUrl: string]: number } = Object.create(null);\n\n\tconstructor(proxy: IWorkerTextModelSyncChannelServer, modelService: IModelService, keepIdleModels: boolean = false) {\n\t\tsuper();\n\t\tthis._proxy = proxy;\n\t\tthis._modelService = modelService;\n\n\t\tif (!keepIdleModels) {\n\t\t\tconst timer = new IntervalTimer();\n\t\t\ttimer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n\t\t\tthis._register(timer);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tfor (const modelUrl in this._syncedModels) {\n\t\t\tdispose(this._syncedModels[modelUrl]);\n\t\t}\n\t\tthis._syncedModels = Object.create(null);\n\t\tthis._syncedModelsLastUsedTime = Object.create(null);\n\t\tsuper.dispose();\n\t}\n\n\tpublic ensureSyncedResources(resources: URI[], forceLargeModels: boolean = false): void {\n\t\tfor (const resource of resources) {\n\t\t\tconst resourceStr = resource.toString();\n\n\t\t\tif (!this._syncedModels[resourceStr]) {\n\t\t\t\tthis._beginModelSync(resource, forceLargeModels);\n\t\t\t}\n\t\t\tif (this._syncedModels[resourceStr]) {\n\t\t\t\tthis._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _checkStopModelSync(): void {\n\t\tconst currentTime = (new Date()).getTime();\n\n\t\tconst toRemove: string[] = [];\n\t\tfor (const modelUrl in this._syncedModelsLastUsedTime) {\n\t\t\tconst elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n\t\t\tif (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n\t\t\t\ttoRemove.push(modelUrl);\n\t\t\t}\n\t\t}\n\n\t\tfor (const e of toRemove) {\n\t\t\tthis._stopModelSync(e);\n\t\t}\n\t}\n\n\tprivate _beginModelSync(resource: URI, forceLargeModels: boolean): void {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tif (!forceLargeModels && model.isTooLargeForSyncing()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelUrl = resource.toString();\n\n\t\tthis._proxy.$acceptNewModel({\n\t\t\turl: model.uri.toString(),\n\t\t\tlines: model.getLinesContent(),\n\t\t\tEOL: model.getEOL(),\n\t\t\tversionId: model.getVersionId()\n\t\t});\n\n\t\tconst toDispose = new DisposableStore();\n\t\ttoDispose.add(model.onDidChangeContent((e) => {\n\t\t\tthis._proxy.$acceptModelChanged(modelUrl.toString(), e);\n\t\t}));\n\t\ttoDispose.add(model.onWillDispose(() => {\n\t\t\tthis._stopModelSync(modelUrl);\n\t\t}));\n\t\ttoDispose.add(toDisposable(() => {\n\t\t\tthis._proxy.$acceptRemovedModel(modelUrl);\n\t\t}));\n\n\t\tthis._syncedModels[modelUrl] = toDispose;\n\t}\n\n\tprivate _stopModelSync(modelUrl: string): void {\n\t\tconst toDispose = this._syncedModels[modelUrl];\n\t\tdelete this._syncedModels[modelUrl];\n\t\tdelete this._syncedModelsLastUsedTime[modelUrl];\n\t\tdispose(toDispose);\n\t}\n}\n\nexport class WorkerTextModelSyncServer implements IWorkerTextModelSyncChannelServer {\n\n\tprivate readonly _models: { [uri: string]: MirrorModel };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic getModel(uri: string): ICommonModel | undefined {\n\t\treturn this._models[uri];\n\t}\n\n\tpublic getModels(): ICommonModel[] {\n\t\tconst all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\t$acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\t$acceptModelChanged(uri: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[uri]) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._models[uri];\n\t\tmodel.onEvents(e);\n\t}\n\n\t$acceptRemovedModel(uri: string): void {\n\t\tif (!this._models[uri]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[uri];\n\t}\n}\n\nexport class MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic findMatches(regex: RegExp): RegExpMatchArray[] {\n\t\tconst matches = [];\n\t\tfor (let i = 0; i < this._lines.length; i++) {\n\t\t\tconst line = this._lines[i];\n\t\t\tconst offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n\t\t\tconst iteratorOverMatches = line.matchAll(regex);\n\t\t\tfor (const match of iteratorOverMatches) {\n\t\t\t\tif (match.index || match.index === 0) {\n\t\t\t\t\tmatch.index = match.index + offsetToAdd;\n\t\t\t\t}\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\n\n\t\tconst lines = this._lines;\n\t\tconst wordenize = this._wordenize.bind(this);\n\n\t\tlet lineNumber = 0;\n\t\tlet lineText = '';\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\n\t\treturn {\n\t\t\t*[Symbol.iterator]() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\t\t\twordRangesIdx += 1;\n\t\t\t\t\t\tyield value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lineNumber < lines.length) {\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\n\t\t\t\t\t\t\twordRangesIdx = 0;\n\t\t\t\t\t\t\tlineNumber += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tconst content = this._lines[lineNumber - 1];\n\t\tconst ranges = this._wordenize(content, wordDefinition);\n\t\tconst words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tconst lineEnding = this._eol;\n\t\tconst startLineIndex = range.startLineNumber - 1;\n\t\tconst endLineIndex = range.endLineNumber - 1;\n\t\tconst resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tconst maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\nexport interface ICommonModel extends ILinkComputerTarget, IDocumentColorComputerTarget, IMirrorModel {\n\teol: string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\twords(wordDefinition: RegExp): Iterable<string>;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IntervalTimer } from '../../../../base/common/async.js';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IPosition, Position } from '../../core/position.js';\nimport { IRange, Range } from '../../core/range.js';\nimport { ensureValidWordDefinition, getWordAtText, IWordAtPosition } from '../../core/wordHelper.js';\nimport { IDocumentColorComputerTarget } from '../../languages/defaultDocumentColorsComputer.js';\nimport { ILinkComputerTarget } from '../../languages/linkComputer.js';\nimport { MirrorTextModel as BaseMirrorModel, IModelChangedEvent } from '../../model/mirrorTextModel.js';\nimport { IMirrorModel, IWordRange } from '../editorWebWorker.js';\nimport { IModelService } from '../model.js';\nimport { IRawModelData, IWorkerTextModelSyncChannelServer } from './textModelSync.protocol.js';\n\n/**\n * Stop syncing a model to the worker if it was not needed for 1 min.\n */\nexport const STOP_SYNC_MODEL_DELTA_TIME_MS = 60 * 1000;\n\nexport class WorkerTextModelSyncClient extends Disposable {\n\n\tprivate readonly _proxy: IWorkerTextModelSyncChannelServer;\n\tprivate readonly _modelService: IModelService;\n\tprivate _syncedModels: { [modelUrl: string]: IDisposable } = Object.create(null);\n\tprivate _syncedModelsLastUsedTime: { [modelUrl: string]: number } = Object.create(null);\n\n\tconstructor(proxy: IWorkerTextModelSyncChannelServer, modelService: IModelService, keepIdleModels: boolean = false) {\n\t\tsuper();\n\t\tthis._proxy = proxy;\n\t\tthis._modelService = modelService;\n\n\t\tif (!keepIdleModels) {\n\t\t\tconst timer = new IntervalTimer();\n\t\t\ttimer.cancelAndSet(() => this._checkStopModelSync(), Math.round(STOP_SYNC_MODEL_DELTA_TIME_MS / 2));\n\t\t\tthis._register(timer);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tfor (const modelUrl in this._syncedModels) {\n\t\t\tdispose(this._syncedModels[modelUrl]);\n\t\t}\n\t\tthis._syncedModels = Object.create(null);\n\t\tthis._syncedModelsLastUsedTime = Object.create(null);\n\t\tsuper.dispose();\n\t}\n\n\tpublic ensureSyncedResources(resources: URI[], forceLargeModels: boolean = false): void {\n\t\tfor (const resource of resources) {\n\t\t\tconst resourceStr = resource.toString();\n\n\t\t\tif (!this._syncedModels[resourceStr]) {\n\t\t\t\tthis._beginModelSync(resource, forceLargeModels);\n\t\t\t}\n\t\t\tif (this._syncedModels[resourceStr]) {\n\t\t\t\tthis._syncedModelsLastUsedTime[resourceStr] = (new Date()).getTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _checkStopModelSync(): void {\n\t\tconst currentTime = (new Date()).getTime();\n\n\t\tconst toRemove: string[] = [];\n\t\tfor (const modelUrl in this._syncedModelsLastUsedTime) {\n\t\t\tconst elapsedTime = currentTime - this._syncedModelsLastUsedTime[modelUrl];\n\t\t\tif (elapsedTime > STOP_SYNC_MODEL_DELTA_TIME_MS) {\n\t\t\t\ttoRemove.push(modelUrl);\n\t\t\t}\n\t\t}\n\n\t\tfor (const e of toRemove) {\n\t\t\tthis._stopModelSync(e);\n\t\t}\n\t}\n\n\tprivate _beginModelSync(resource: URI, forceLargeModels: boolean): void {\n\t\tconst model = this._modelService.getModel(resource);\n\t\tif (!model) {\n\t\t\treturn;\n\t\t}\n\t\tif (!forceLargeModels && model.isTooLargeForSyncing()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst modelUrl = resource.toString();\n\n\t\tthis._proxy.$acceptNewModel({\n\t\t\turl: model.uri.toString(),\n\t\t\tlines: model.getLinesContent(),\n\t\t\tEOL: model.getEOL(),\n\t\t\tversionId: model.getVersionId()\n\t\t});\n\n\t\tconst toDispose = new DisposableStore();\n\t\ttoDispose.add(model.onDidChangeContent((e) => {\n\t\t\tthis._proxy.$acceptModelChanged(modelUrl.toString(), e);\n\t\t}));\n\t\ttoDispose.add(model.onWillDispose(() => {\n\t\t\tthis._stopModelSync(modelUrl);\n\t\t}));\n\t\ttoDispose.add(toDisposable(() => {\n\t\t\tthis._proxy.$acceptRemovedModel(modelUrl);\n\t\t}));\n\n\t\tthis._syncedModels[modelUrl] = toDispose;\n\t}\n\n\tprivate _stopModelSync(modelUrl: string): void {\n\t\tconst toDispose = this._syncedModels[modelUrl];\n\t\tdelete this._syncedModels[modelUrl];\n\t\tdelete this._syncedModelsLastUsedTime[modelUrl];\n\t\tdispose(toDispose);\n\t}\n}\n\nexport class WorkerTextModelSyncServer implements IWorkerTextModelSyncChannelServer {\n\n\tprivate readonly _models: { [uri: string]: MirrorModel };\n\n\tconstructor() {\n\t\tthis._models = Object.create(null);\n\t}\n\n\tpublic getModel(uri: string): ICommonModel | undefined {\n\t\treturn this._models[uri];\n\t}\n\n\tpublic getModels(): ICommonModel[] {\n\t\tconst all: MirrorModel[] = [];\n\t\tObject.keys(this._models).forEach((key) => all.push(this._models[key]));\n\t\treturn all;\n\t}\n\n\t$acceptNewModel(data: IRawModelData): void {\n\t\tthis._models[data.url] = new MirrorModel(URI.parse(data.url), data.lines, data.EOL, data.versionId);\n\t}\n\n\t$acceptModelChanged(uri: string, e: IModelChangedEvent): void {\n\t\tif (!this._models[uri]) {\n\t\t\treturn;\n\t\t}\n\t\tconst model = this._models[uri];\n\t\tmodel.onEvents(e);\n\t}\n\n\t$acceptRemovedModel(uri: string): void {\n\t\tif (!this._models[uri]) {\n\t\t\treturn;\n\t\t}\n\t\tdelete this._models[uri];\n\t}\n}\n\nexport class MirrorModel extends BaseMirrorModel implements ICommonModel {\n\n\tpublic get uri(): URI {\n\t\treturn this._uri;\n\t}\n\n\tpublic get eol(): string {\n\t\treturn this._eol;\n\t}\n\n\tpublic getValue(): string {\n\t\treturn this.getText();\n\t}\n\n\tpublic findMatches(regex: RegExp): RegExpMatchArray[] {\n\t\tconst matches = [];\n\t\tfor (let i = 0; i < this._lines.length; i++) {\n\t\t\tconst line = this._lines[i];\n\t\t\tconst offsetToAdd = this.offsetAt(new Position(i + 1, 1));\n\t\t\tconst iteratorOverMatches = line.matchAll(regex);\n\t\t\tfor (const match of iteratorOverMatches) {\n\t\t\t\tif (match.index || match.index === 0) {\n\t\t\t\t\tmatch.index = match.index + offsetToAdd;\n\t\t\t\t}\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t}\n\t\treturn matches;\n\t}\n\n\tpublic getLinesContent(): string[] {\n\t\treturn this._lines.slice(0);\n\t}\n\n\tpublic getLineCount(): number {\n\t\treturn this._lines.length;\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\treturn this._lines[lineNumber - 1];\n\t}\n\n\tpublic getWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null {\n\n\t\tconst wordAtText = getWordAtText(\n\t\t\tposition.column,\n\t\t\tensureValidWordDefinition(wordDefinition),\n\t\t\tthis._lines[position.lineNumber - 1],\n\t\t\t0\n\t\t);\n\n\t\tif (wordAtText) {\n\t\t\treturn new Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tpublic words(wordDefinition: RegExp): Iterable<string> {\n\n\t\tconst lines = this._lines;\n\t\tconst wordenize = this._wordenize.bind(this);\n\n\t\tlet lineNumber = 0;\n\t\tlet lineText = '';\n\t\tlet wordRangesIdx = 0;\n\t\tlet wordRanges: IWordRange[] = [];\n\n\t\treturn {\n\t\t\t*[Symbol.iterator]() {\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (wordRangesIdx < wordRanges.length) {\n\t\t\t\t\t\tconst value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n\t\t\t\t\t\twordRangesIdx += 1;\n\t\t\t\t\t\tyield value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (lineNumber < lines.length) {\n\t\t\t\t\t\t\tlineText = lines[lineNumber];\n\t\t\t\t\t\t\twordRanges = wordenize(lineText, wordDefinition);\n\t\t\t\t\t\t\twordRangesIdx = 0;\n\t\t\t\t\t\t\tlineNumber += 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic getLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[] {\n\t\tconst content = this._lines[lineNumber - 1];\n\t\tconst ranges = this._wordenize(content, wordDefinition);\n\t\tconst words: IWordAtPosition[] = [];\n\t\tfor (const range of ranges) {\n\t\t\twords.push({\n\t\t\t\tword: content.substring(range.start, range.end),\n\t\t\t\tstartColumn: range.start + 1,\n\t\t\t\tendColumn: range.end + 1\n\t\t\t});\n\t\t}\n\t\treturn words;\n\t}\n\n\tprivate _wordenize(content: string, wordDefinition: RegExp): IWordRange[] {\n\t\tconst result: IWordRange[] = [];\n\t\tlet match: RegExpExecArray | null;\n\n\t\twordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n\n\t\twhile (match = wordDefinition.exec(content)) {\n\t\t\tif (match[0].length === 0) {\n\t\t\t\t// it did match the empty string\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tresult.push({ start: match.index, end: match.index + match[0].length });\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic getValueInRange(range: IRange): string {\n\t\trange = this._validateRange(range);\n\n\t\tif (range.startLineNumber === range.endLineNumber) {\n\t\t\treturn this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n\t\t}\n\n\t\tconst lineEnding = this._eol;\n\t\tconst startLineIndex = range.startLineNumber - 1;\n\t\tconst endLineIndex = range.endLineNumber - 1;\n\t\tconst resultLines: string[] = [];\n\n\t\tresultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n\t\tfor (let i = startLineIndex + 1; i < endLineIndex; i++) {\n\t\t\tresultLines.push(this._lines[i]);\n\t\t}\n\t\tresultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n\n\t\treturn resultLines.join(lineEnding);\n\t}\n\n\tpublic offsetAt(position: IPosition): number {\n\t\tposition = this._validatePosition(position);\n\t\tthis._ensureLineStarts();\n\t\treturn this._lineStarts!.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n\t}\n\n\tpublic positionAt(offset: number): IPosition {\n\t\toffset = Math.floor(offset);\n\t\toffset = Math.max(0, offset);\n\n\t\tthis._ensureLineStarts();\n\t\tconst out = this._lineStarts!.getIndexOf(offset);\n\t\tconst lineLength = this._lines[out.index].length;\n\n\t\t// Ensure we return a valid position\n\t\treturn {\n\t\t\tlineNumber: 1 + out.index,\n\t\t\tcolumn: 1 + Math.min(out.remainder, lineLength)\n\t\t};\n\t}\n\n\tprivate _validateRange(range: IRange): IRange {\n\n\t\tconst start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\t\tconst end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n\n\t\tif (start.lineNumber !== range.startLineNumber\n\t\t\t|| start.column !== range.startColumn\n\t\t\t|| end.lineNumber !== range.endLineNumber\n\t\t\t|| end.column !== range.endColumn) {\n\n\t\t\treturn {\n\t\t\t\tstartLineNumber: start.lineNumber,\n\t\t\t\tstartColumn: start.column,\n\t\t\t\tendLineNumber: end.lineNumber,\n\t\t\t\tendColumn: end.column\n\t\t\t};\n\t\t}\n\n\t\treturn range;\n\t}\n\n\tprivate _validatePosition(position: IPosition): IPosition {\n\t\tif (!Position.isIPosition(position)) {\n\t\t\tthrow new Error('bad position');\n\t\t}\n\t\tlet { lineNumber, column } = position;\n\t\tlet hasChanged = false;\n\n\t\tif (lineNumber < 1) {\n\t\t\tlineNumber = 1;\n\t\t\tcolumn = 1;\n\t\t\thasChanged = true;\n\n\t\t} else if (lineNumber > this._lines.length) {\n\t\t\tlineNumber = this._lines.length;\n\t\t\tcolumn = this._lines[lineNumber - 1].length + 1;\n\t\t\thasChanged = true;\n\n\t\t} else {\n\t\t\tconst maxCharacter = this._lines[lineNumber - 1].length + 1;\n\t\t\tif (column < 1) {\n\t\t\t\tcolumn = 1;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t\telse if (column > maxCharacter) {\n\t\t\t\tcolumn = maxCharacter;\n\t\t\t\thasChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!hasChanged) {\n\t\t\treturn position;\n\t\t} else {\n\t\t\treturn { lineNumber, column };\n\t\t}\n\t}\n}\n\nexport interface ICommonModel extends ILinkComputerTarget, IDocumentColorComputerTarget, IMirrorModel {\n\teol: string;\n\n\tgetLinesContent(): string[];\n\tgetLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineWords(lineNumber: number, wordDefinition: RegExp): IWordAtPosition[];\n\twords(wordDefinition: RegExp): Iterable<string>;\n\tgetValueInRange(range: IRange): string;\n\tgetWordAtPosition(position: IPosition, wordDefinition: RegExp): Range | null;\n\toffsetAt(position: IPosition): number;\n\tpositionAt(offset: number): IPosition;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1562, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/editorWebWorker.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/editorWebWorker.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/editorWebWorker.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IWebWorkerServerRequestHandler } from '../../../base/common/worker/webWorker.js';\nimport { IRange, Range } from '../core/range.js';\nimport { EndOfLineSequence, ITextModel } from '../model.js';\nimport { IMirrorTextModel, IModelChangedEvent } from '../model/mirrorTextModel.js';\nimport { IColorInformation, IInplaceReplaceSupportResult, ILink, TextEdit } from '../languages.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { DiffAlgorithmName, IDiffComputationResult, ILineChange, IUnicodeHighlightsResult } from './editorWorker.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter, UnicodeHighlighterOptions } from './unicodeTextModelHighlighter.js';\nimport { ILinesDiffComputer } from '../diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping } from '../diff/rangeMapping.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { IDocumentDiffProviderOptions } from '../diff/documentDiffProvider.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { FindSectionHeaderOptions, SectionHeader, findSectionHeaders } from './findSectionHeaders.js';\nimport { IRawModelData, IWorkerTextModelSyncChannelServer } from './textModelSync/textModelSync.protocol.js';\nimport { ICommonModel, WorkerTextModelSyncServer } from './textModelSync/textModelSync.impl.js';\n\nexport interface IMirrorModel extends IMirrorTextModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = {}> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\nexport interface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nexport class EditorWorker implements IDisposable, IWorkerTextModelSyncChannelServer, IWebWorkerServerRequestHandler {\n\t_requestHandlerBrand: any;\n\n\tprivate readonly _workerTextModelSyncServer = new WorkerTextModelSyncServer();\n\n\tconstructor(\n\t\tprivate readonly _foreignModule: any | null = null\n\t) { }\n\n\tdispose(): void {\n\t}\n\n\tpublic async $ping() {\n\t\treturn 'pong';\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel | undefined {\n\t\treturn this._workerTextModelSyncServer.getModel(uri);\n\t}\n\n\tpublic getModels(): ICommonModel[] {\n\t\treturn this._workerTextModelSyncServer.getModels();\n\t}\n\n\tpublic $acceptNewModel(data: IRawModelData): void {\n\t\tthis._workerTextModelSyncServer.$acceptNewModel(data);\n\t}\n\n\tpublic $acceptModelChanged(uri: string, e: IModelChangedEvent): void {\n\t\tthis._workerTextModelSyncServer.$acceptModelChanged(uri, e);\n\t}\n\n\tpublic $acceptRemovedModel(uri: string): void {\n\t\tthis._workerTextModelSyncServer.$acceptRemovedModel(uri);\n\t}\n\n\tpublic async $computeUnicodeHighlights(url: string, options: UnicodeHighlighterOptions, range?: IRange): Promise<IUnicodeHighlightsResult> {\n\t\tconst model = this._getModel(url);\n\t\tif (!model) {\n\t\t\treturn { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n\t\t}\n\t\treturn UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n\t}\n\n\tpublic async $findSectionHeaders(url: string, options: FindSectionHeaderOptions): Promise<SectionHeader[]> {\n\t\tconst model = this._getModel(url);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\t\treturn findSectionHeaders(model, options);\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic async $computeDiff(originalUrl: string, modifiedUrl: string, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = EditorWorker.computeDiff(original, modified, options, algorithm);\n\t\treturn result;\n\t}\n\n\tprivate static computeDiff(originalTextModel: ICommonModel | ITextModel, modifiedTextModel: ICommonModel | ITextModel, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): IDiffComputationResult {\n\t\tconst diffAlgorithm: ILinesDiffComputer = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n\n\t\tconst originalLines = originalTextModel.getLinesContent();\n\t\tconst modifiedLines = modifiedTextModel.getLinesContent();\n\n\t\tconst result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n\n\t\tconst identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n\n\t\tfunction getLineChanges(changes: readonly DetailedLineRangeMapping[]): ILineChange[] {\n\t\t\treturn changes.map(m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n\t\t\t\tm.originalRange.startLineNumber,\n\t\t\t\tm.originalRange.startColumn,\n\t\t\t\tm.originalRange.endLineNumber,\n\t\t\t\tm.originalRange.endColumn,\n\t\t\t\tm.modifiedRange.startLineNumber,\n\t\t\t\tm.modifiedRange.startColumn,\n\t\t\t\tm.modifiedRange.endLineNumber,\n\t\t\t\tm.modifiedRange.endColumn,\n\t\t\t])]));\n\t\t}\n\n\t\treturn {\n\t\t\tidentical,\n\t\t\tquitEarly: result.hitTimeout,\n\t\t\tchanges: getLineChanges(result.changes),\n\t\t\tmoves: result.moves.map(m => ([\n\t\t\t\tm.lineRangeMapping.original.startLineNumber,\n\t\t\t\tm.lineRangeMapping.original.endLineNumberExclusive,\n\t\t\t\tm.lineRangeMapping.modified.startLineNumber,\n\t\t\t\tm.lineRangeMapping.modified.endLineNumberExclusive,\n\t\t\t\tgetLineChanges(m.changes)\n\t\t\t])),\n\t\t};\n\t}\n\n\tprivate static _modelsAreIdentical(original: ICommonModel | ITextModel, modified: ICommonModel | ITextModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic async $computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[], pretty: boolean): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = edits.slice(0).sort((a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tconst aRng = a.range ? 0 : 1;\n\t\t\tconst bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\t// merge adjacent edits\n\t\tlet writeIndex = 0;\n\t\tfor (let readIndex = 1; readIndex < edits.length; readIndex++) {\n\t\t\tif (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n\t\t\t\tedits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n\t\t\t\tedits[writeIndex].text += edits[readIndex].text;\n\t\t\t} else {\n\t\t\t\twriteIndex++;\n\t\t\t\tedits[writeIndex] = edits[readIndex];\n\t\t\t}\n\t\t}\n\t\tedits.length = writeIndex + 1;\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, pretty);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic async $computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn computeLinks(model);\n\t}\n\n\t// --- BEGIN default document colors -----------------------------------------------------------\n\n\tpublic async $computeDefaultDocumentColors(modelUrl: string): Promise<IColorInformation[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\t\treturn computeDefaultDocumentColors(model);\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic async $textualSuggest(modelUrls: string[], leadingWord: string | undefined, wordDef: string, wordDefFlags: string): Promise<{ words: string[]; duration: number } | null> {\n\n\t\tconst sw = new StopWatch();\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst seen = new Set<string>();\n\n\t\touter: for (const url of modelUrls) {\n\t\t\tconst model = this._getModel(url);\n\t\t\tif (!model) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const word of model.words(wordDefRegExp)) {\n\t\t\t\tif (word === leadingWord || !isNaN(Number(word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.add(word);\n\t\t\t\tif (seen.size > EditorWorker._suggestionsLimit) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { words: Array.from(seen), duration: sw.elapsed() };\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tpublic async $computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Object.create(null);\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tconst words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\tpublic async $navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tconst selectionText = model.getValueInRange(range);\n\n\t\tconst wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn null;\n\t\t}\n\t\tconst word = model.getValueInRange(wordRange);\n\t\tconst result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn result;\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\t// foreign method request\n\tpublic $fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobalThis.monaco = createMonacoBaseAPI();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { stringDiff } from '../../../base/common/diff/diff.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IWebWorkerServerRequestHandler } from '../../../base/common/worker/webWorker.js';\nimport { IRange, Range } from '../core/range.js';\nimport { EndOfLineSequence, ITextModel } from '../model.js';\nimport { IMirrorTextModel, IModelChangedEvent } from '../model/mirrorTextModel.js';\nimport { IColorInformation, IInplaceReplaceSupportResult, ILink, TextEdit } from '../languages.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { DiffAlgorithmName, IDiffComputationResult, ILineChange, IUnicodeHighlightsResult } from './editorWorker.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter, UnicodeHighlighterOptions } from './unicodeTextModelHighlighter.js';\nimport { ILinesDiffComputer } from '../diff/linesDiffComputer.js';\nimport { DetailedLineRangeMapping } from '../diff/rangeMapping.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { IDocumentDiffProviderOptions } from '../diff/documentDiffProvider.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { FindSectionHeaderOptions, SectionHeader, findSectionHeaders } from './findSectionHeaders.js';\nimport { IRawModelData, IWorkerTextModelSyncChannelServer } from './textModelSync/textModelSync.protocol.js';\nimport { ICommonModel, WorkerTextModelSyncServer } from './textModelSync/textModelSync.impl.js';\n\nexport interface IMirrorModel extends IMirrorTextModel {\n\treadonly uri: URI;\n\treadonly version: number;\n\tgetValue(): string;\n}\n\nexport interface IWorkerContext<H = {}> {\n\t/**\n\t * A proxy to the main thread host object.\n\t */\n\thost: H;\n\t/**\n\t * Get all available mirror models in this worker.\n\t */\n\tgetMirrorModels(): IMirrorModel[];\n}\n\n/**\n * Range of a word inside a model.\n * @internal\n */\nexport interface IWordRange {\n\t/**\n\t * The index where the word starts.\n\t */\n\treadonly start: number;\n\t/**\n\t * The index where the word ends.\n\t */\n\treadonly end: number;\n}\n\n/**\n * @internal\n */\nexport class EditorWorker implements IDisposable, IWorkerTextModelSyncChannelServer, IWebWorkerServerRequestHandler {\n\t_requestHandlerBrand: any;\n\n\tprivate readonly _workerTextModelSyncServer = new WorkerTextModelSyncServer();\n\n\tconstructor(\n\t\tprivate readonly _foreignModule: any | null = null\n\t) { }\n\n\tdispose(): void {\n\t}\n\n\tpublic async $ping() {\n\t\treturn 'pong';\n\t}\n\n\tprotected _getModel(uri: string): ICommonModel | undefined {\n\t\treturn this._workerTextModelSyncServer.getModel(uri);\n\t}\n\n\tpublic getModels(): ICommonModel[] {\n\t\treturn this._workerTextModelSyncServer.getModels();\n\t}\n\n\tpublic $acceptNewModel(data: IRawModelData): void {\n\t\tthis._workerTextModelSyncServer.$acceptNewModel(data);\n\t}\n\n\tpublic $acceptModelChanged(uri: string, e: IModelChangedEvent): void {\n\t\tthis._workerTextModelSyncServer.$acceptModelChanged(uri, e);\n\t}\n\n\tpublic $acceptRemovedModel(uri: string): void {\n\t\tthis._workerTextModelSyncServer.$acceptRemovedModel(uri);\n\t}\n\n\tpublic async $computeUnicodeHighlights(url: string, options: UnicodeHighlighterOptions, range?: IRange): Promise<IUnicodeHighlightsResult> {\n\t\tconst model = this._getModel(url);\n\t\tif (!model) {\n\t\t\treturn { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n\t\t}\n\t\treturn UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n\t}\n\n\tpublic async $findSectionHeaders(url: string, options: FindSectionHeaderOptions): Promise<SectionHeader[]> {\n\t\tconst model = this._getModel(url);\n\t\tif (!model) {\n\t\t\treturn [];\n\t\t}\n\t\treturn findSectionHeaders(model, options);\n\t}\n\n\t// ---- BEGIN diff --------------------------------------------------------------------------\n\n\tpublic async $computeDiff(originalUrl: string, modifiedUrl: string, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): Promise<IDiffComputationResult | null> {\n\t\tconst original = this._getModel(originalUrl);\n\t\tconst modified = this._getModel(modifiedUrl);\n\t\tif (!original || !modified) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result = EditorWorker.computeDiff(original, modified, options, algorithm);\n\t\treturn result;\n\t}\n\n\tprivate static computeDiff(originalTextModel: ICommonModel | ITextModel, modifiedTextModel: ICommonModel | ITextModel, options: IDocumentDiffProviderOptions, algorithm: DiffAlgorithmName): IDiffComputationResult {\n\t\tconst diffAlgorithm: ILinesDiffComputer = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n\n\t\tconst originalLines = originalTextModel.getLinesContent();\n\t\tconst modifiedLines = modifiedTextModel.getLinesContent();\n\n\t\tconst result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n\n\t\tconst identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n\n\t\tfunction getLineChanges(changes: readonly DetailedLineRangeMapping[]): ILineChange[] {\n\t\t\treturn changes.map(m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n\t\t\t\tm.originalRange.startLineNumber,\n\t\t\t\tm.originalRange.startColumn,\n\t\t\t\tm.originalRange.endLineNumber,\n\t\t\t\tm.originalRange.endColumn,\n\t\t\t\tm.modifiedRange.startLineNumber,\n\t\t\t\tm.modifiedRange.startColumn,\n\t\t\t\tm.modifiedRange.endLineNumber,\n\t\t\t\tm.modifiedRange.endColumn,\n\t\t\t])]));\n\t\t}\n\n\t\treturn {\n\t\t\tidentical,\n\t\t\tquitEarly: result.hitTimeout,\n\t\t\tchanges: getLineChanges(result.changes),\n\t\t\tmoves: result.moves.map(m => ([\n\t\t\t\tm.lineRangeMapping.original.startLineNumber,\n\t\t\t\tm.lineRangeMapping.original.endLineNumberExclusive,\n\t\t\t\tm.lineRangeMapping.modified.startLineNumber,\n\t\t\t\tm.lineRangeMapping.modified.endLineNumberExclusive,\n\t\t\t\tgetLineChanges(m.changes)\n\t\t\t])),\n\t\t};\n\t}\n\n\tprivate static _modelsAreIdentical(original: ICommonModel | ITextModel, modified: ICommonModel | ITextModel): boolean {\n\t\tconst originalLineCount = original.getLineCount();\n\t\tconst modifiedLineCount = modified.getLineCount();\n\t\tif (originalLineCount !== modifiedLineCount) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let line = 1; line <= originalLineCount; line++) {\n\t\t\tconst originalLine = original.getLineContent(line);\n\t\t\tconst modifiedLine = modified.getLineContent(line);\n\t\t\tif (originalLine !== modifiedLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// ---- END diff --------------------------------------------------------------------------\n\n\n\t// ---- BEGIN minimal edits ---------------------------------------------------------------\n\n\tprivate static readonly _diffLimit = 100000;\n\n\tpublic async $computeMoreMinimalEdits(modelUrl: string, edits: TextEdit[], pretty: boolean): Promise<TextEdit[]> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn edits;\n\t\t}\n\n\t\tconst result: TextEdit[] = [];\n\t\tlet lastEol: EndOfLineSequence | undefined = undefined;\n\n\t\tedits = edits.slice(0).sort((a, b) => {\n\t\t\tif (a.range && b.range) {\n\t\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t\t}\n\t\t\t// eol only changes should go to the end\n\t\t\tconst aRng = a.range ? 0 : 1;\n\t\t\tconst bRng = b.range ? 0 : 1;\n\t\t\treturn aRng - bRng;\n\t\t});\n\n\t\t// merge adjacent edits\n\t\tlet writeIndex = 0;\n\t\tfor (let readIndex = 1; readIndex < edits.length; readIndex++) {\n\t\t\tif (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n\t\t\t\tedits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n\t\t\t\tedits[writeIndex].text += edits[readIndex].text;\n\t\t\t} else {\n\t\t\t\twriteIndex++;\n\t\t\t\tedits[writeIndex] = edits[readIndex];\n\t\t\t}\n\t\t}\n\t\tedits.length = writeIndex + 1;\n\n\t\tfor (let { range, text, eol } of edits) {\n\n\t\t\tif (typeof eol === 'number') {\n\t\t\t\tlastEol = eol;\n\t\t\t}\n\n\t\t\tif (Range.isEmpty(range) && !text) {\n\t\t\t\t// empty change\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst original = model.getValueInRange(range);\n\t\t\ttext = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n\n\t\t\tif (original === text) {\n\t\t\t\t// noop\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// make sure diff won't take too long\n\t\t\tif (Math.max(text.length, original.length) > EditorWorker._diffLimit) {\n\t\t\t\tresult.push({ range, text });\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// compute diff between original and edit.text\n\t\t\tconst changes = stringDiff(original, text, pretty);\n\t\t\tconst editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n\n\t\t\tfor (const change of changes) {\n\t\t\t\tconst start = model.positionAt(editOffset + change.originalStart);\n\t\t\t\tconst end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n\t\t\t\tconst newEdit: TextEdit = {\n\t\t\t\t\ttext: text.substr(change.modifiedStart, change.modifiedLength),\n\t\t\t\t\trange: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n\t\t\t\t};\n\n\t\t\t\tif (model.getValueInRange(newEdit.range) !== newEdit.text) {\n\t\t\t\t\tresult.push(newEdit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lastEol === 'number') {\n\t\t\tresult.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// ---- END minimal edits ---------------------------------------------------------------\n\n\tpublic async $computeLinks(modelUrl: string): Promise<ILink[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn computeLinks(model);\n\t}\n\n\t// --- BEGIN default document colors -----------------------------------------------------------\n\n\tpublic async $computeDefaultDocumentColors(modelUrl: string): Promise<IColorInformation[] | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\t\treturn computeDefaultDocumentColors(model);\n\t}\n\n\t// ---- BEGIN suggest --------------------------------------------------------------------------\n\n\tprivate static readonly _suggestionsLimit = 10000;\n\n\tpublic async $textualSuggest(modelUrls: string[], leadingWord: string | undefined, wordDef: string, wordDefFlags: string): Promise<{ words: string[]; duration: number } | null> {\n\n\t\tconst sw = new StopWatch();\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst seen = new Set<string>();\n\n\t\touter: for (const url of modelUrls) {\n\t\t\tconst model = this._getModel(url);\n\t\t\tif (!model) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (const word of model.words(wordDefRegExp)) {\n\t\t\t\tif (word === leadingWord || !isNaN(Number(word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.add(word);\n\t\t\t\tif (seen.size > EditorWorker._suggestionsLimit) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { words: Array.from(seen), duration: sw.elapsed() };\n\t}\n\n\n\t// ---- END suggest --------------------------------------------------------------------------\n\n\t//#region -- word ranges --\n\n\tpublic async $computeWordRanges(modelUrl: string, range: IRange, wordDef: string, wordDefFlags: string): Promise<{ [word: string]: IRange[] }> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn Object.create(null);\n\t\t}\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\t\tconst result: { [word: string]: IRange[] } = Object.create(null);\n\t\tfor (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n\t\t\tconst words = model.getLineWords(line, wordDefRegExp);\n\t\t\tfor (const word of words) {\n\t\t\t\tif (!isNaN(Number(word.word))) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet array = result[word.word];\n\t\t\t\tif (!array) {\n\t\t\t\t\tarray = [];\n\t\t\t\t\tresult[word.word] = array;\n\t\t\t\t}\n\t\t\t\tarray.push({\n\t\t\t\t\tstartLineNumber: line,\n\t\t\t\t\tstartColumn: word.startColumn,\n\t\t\t\t\tendLineNumber: line,\n\t\t\t\t\tendColumn: word.endColumn\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\t//#endregion\n\n\tpublic async $navigateValueSet(modelUrl: string, range: IRange, up: boolean, wordDef: string, wordDefFlags: string): Promise<IInplaceReplaceSupportResult | null> {\n\t\tconst model = this._getModel(modelUrl);\n\t\tif (!model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n\n\t\tif (range.startColumn === range.endColumn) {\n\t\t\trange = {\n\t\t\t\tstartLineNumber: range.startLineNumber,\n\t\t\t\tstartColumn: range.startColumn,\n\t\t\t\tendLineNumber: range.endLineNumber,\n\t\t\t\tendColumn: range.endColumn + 1\n\t\t\t};\n\t\t}\n\n\t\tconst selectionText = model.getValueInRange(range);\n\n\t\tconst wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n\t\tif (!wordRange) {\n\t\t\treturn null;\n\t\t}\n\t\tconst word = model.getValueInRange(wordRange);\n\t\tconst result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n\t\treturn result;\n\t}\n\n\t// ---- BEGIN foreign module support --------------------------------------------------------------------------\n\n\t// foreign method request\n\tpublic $fmr(method: string, args: any[]): Promise<any> {\n\t\tif (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\t// ---- END foreign module support --------------------------------------------------------------------------\n}\n\n// This is only available in a Web Worker\ndeclare function importScripts(...urls: string[]): void;\n\nif (typeof importScripts === 'function') {\n\t// Running in a web worker\n\tglobalThis.monaco = createMonacoBaseAPI();\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/editorWorkerHost.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/editorWorkerHost.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWebWorkerServer, IWebWorkerClient } from '../../../base/common/worker/webWorker.js';\n\nexport abstract class EditorWorkerHost {\n\tpublic static CHANNEL_NAME = 'editorWorkerHost';\n\tpublic static getChannel(workerServer: IWebWorkerServer): EditorWorkerHost {\n\t\treturn workerServer.getChannel<EditorWorkerHost>(EditorWorkerHost.CHANNEL_NAME);\n\t}\n\tpublic static setChannel(workerClient: IWebWorkerClient<any>, obj: EditorWorkerHost): void {\n\t\tworkerClient.setChannel<EditorWorkerHost>(EditorWorkerHost.CHANNEL_NAME, obj);\n\t}\n\n\t// foreign host request\n\tabstract $fhr(method: string, args: any[]): Promise<any>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IWebWorkerServer, IWebWorkerClient } from '../../../base/common/worker/webWorker.js';\n\nexport abstract class EditorWorkerHost {\n\tpublic static CHANNEL_NAME = 'editorWorkerHost';\n\tpublic static getChannel(workerServer: IWebWorkerServer): EditorWorkerHost {\n\t\treturn workerServer.getChannel<EditorWorkerHost>(EditorWorkerHost.CHANNEL_NAME);\n\t}\n\tpublic static setChannel(workerClient: IWebWorkerClient<any>, obj: EditorWorkerHost): void {\n\t\tworkerClient.setChannel<EditorWorkerHost>(EditorWorkerHost.CHANNEL_NAME, obj);\n\t}\n\n\t// foreign host request\n\tabstract $fhr(method: string, args: any[]): Promise<any>;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAI1F,MAAgB,gBAAgB;;QACvB,IAAA,CAAA,YAAY,GAAG,kBAAkB,CAAC;IAAA,CAAA;IACzC,MAAM,CAAC,UAAU,CAAC,YAA8B,EAAA;QACtD,OAAO,YAAY,CAAC,UAAU,CAAmB,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACjF,CAAC;IACM,MAAM,CAAC,UAAU,CAAC,YAAmC,EAAE,GAAqB,EAAA;QAClF,YAAY,CAAC,UAAU,CAAmB,gBAAgB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;IAC/E,CAAC","debugId":null}},
    {"offset": {"line": 1928, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/semanticTokensStylingService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/semanticTokensStylingService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { DocumentTokensProvider } from './model.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from './semanticTokensStyling.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\n\nexport class SemanticTokensStylingService extends Disposable implements ISemanticTokensStylingService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate _caches: WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\t}));\n\t}\n\n\tpublic getStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling {\n\t\tif (!this._caches.has(provider)) {\n\t\t\tthis._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n\t\t}\n\t\treturn this._caches.get(provider)!;\n\t}\n}\n\nregisterSingleton(ISemanticTokensStylingService, SemanticTokensStylingService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILanguageService } from '../languages/language.js';\nimport { DocumentTokensProvider } from './model.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { ILogService } from '../../../platform/log/common/log.js';\nimport { SemanticTokensProviderStyling } from './semanticTokensProviderStyling.js';\nimport { ISemanticTokensStylingService } from './semanticTokensStyling.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\n\nexport class SemanticTokensStylingService extends Disposable implements ISemanticTokensStylingService {\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate _caches: WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>;\n\n\tconstructor(\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\tthis._caches = new WeakMap<DocumentTokensProvider, SemanticTokensProviderStyling>();\n\t\t}));\n\t}\n\n\tpublic getStyling(provider: DocumentTokensProvider): SemanticTokensProviderStyling {\n\t\tif (!this._caches.has(provider)) {\n\t\t\tthis._caches.set(provider, new SemanticTokensProviderStyling(provider.getLegend(), this._themeService, this._languageService, this._logService));\n\t\t}\n\t\treturn this._caches.get(provider)!;\n\t}\n}\n\nregisterSingleton(ISemanticTokensStylingService, SemanticTokensStylingService, InstantiationType.Delayed);\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAC/D,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAC;AAE5D,OAAO,EAAE,aAAa,EAAE,MAAM,gDAAgD,CAAC;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,qCAAqC,CAAC;AAClE,OAAO,EAAE,6BAA6B,EAAE,MAAM,oCAAoC,CAAC;AACnF,OAAO,EAAE,6BAA6B,EAAE,MAAM,4BAA4B,CAAC;AAC3E,OAAO,EAAqB,iBAAiB,EAAE,MAAM,sDAAsD,CAAC;;;;;;;;;;;;;;;;;;;AAErG,IAAM,4BAA4B,GAAlC,MAAM,4BAA6B,SAAQ,0LAAU;IAM3D,YACiC,aAA4B,EAC9B,WAAwB,EACnB,gBAAkC,CAAA;QAErE,KAAK,EAAE,CAAC;QAJwB,IAAA,CAAA,aAAa,GAAb,aAAa,CAAe;QAC9B,IAAA,CAAA,WAAW,GAAX,WAAW,CAAa;QACnB,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB,CAAkB;QAGrE,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAyD,CAAC;QACpF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,GAAG,EAAE;YAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAyD,CAAC;QACrF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,UAAU,CAAC,QAAgC,EAAA;QACjD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,+OAA6B,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAClJ,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAE,CAAC;IACpC,CAAC;CACD,CAAA;AAxBY,4BAA4B,GAAA,WAAA;IAOtC,QAAA,GAAA,6MAAa,CAAA;IACb,QAAA,GAAA,gMAAW,CAAA;IACX,QAAA,GAAA,8MAAgB,CAAA;GATN,4BAA4B,CAwBxC;;IAED,uNAAiB,EAAC,uOAA6B,EAAE,4BAA4B,EAAA,EAAA,6BAAA,GAA4B,CAAC","debugId":null}},
    {"offset": {"line": 1989, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/languageFeaturesService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/languageFeaturesService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { LanguageFeatureRegistry, NotebookInfo, NotebookInfoResolver } from '../languageFeatureRegistry.js';\nimport { CodeActionProvider, CodeLensProvider, CompletionItemProvider, DocumentPasteEditProvider, DeclarationProvider, DefinitionProvider, DocumentColorProvider, DocumentFormattingEditProvider, MultiDocumentHighlightProvider, DocumentHighlightProvider, DocumentDropEditProvider, DocumentRangeFormattingEditProvider, DocumentRangeSemanticTokensProvider, DocumentSemanticTokensProvider, DocumentSymbolProvider, FoldingRangeProvider, HoverProvider, ImplementationProvider, InlayHintsProvider, InlineCompletionsProvider, LinkedEditingRangeProvider, LinkProvider, OnTypeFormattingEditProvider, ReferenceProvider, RenameProvider, SelectionRangeProvider, SignatureHelpProvider, TypeDefinitionProvider, NewSymbolNamesProvider } from '../languages.js';\nimport { ILanguageFeaturesService } from './languageFeatures.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\n\nexport class LanguageFeaturesService implements ILanguageFeaturesService {\n\n\tdeclare _serviceBrand: undefined;\n\n\treadonly referenceProvider = new LanguageFeatureRegistry<ReferenceProvider>(this._score.bind(this));\n\treadonly renameProvider = new LanguageFeatureRegistry<RenameProvider>(this._score.bind(this));\n\treadonly newSymbolNamesProvider = new LanguageFeatureRegistry<NewSymbolNamesProvider>(this._score.bind(this));\n\treadonly codeActionProvider = new LanguageFeatureRegistry<CodeActionProvider>(this._score.bind(this));\n\treadonly definitionProvider = new LanguageFeatureRegistry<DefinitionProvider>(this._score.bind(this));\n\treadonly typeDefinitionProvider = new LanguageFeatureRegistry<TypeDefinitionProvider>(this._score.bind(this));\n\treadonly declarationProvider = new LanguageFeatureRegistry<DeclarationProvider>(this._score.bind(this));\n\treadonly implementationProvider = new LanguageFeatureRegistry<ImplementationProvider>(this._score.bind(this));\n\treadonly documentSymbolProvider = new LanguageFeatureRegistry<DocumentSymbolProvider>(this._score.bind(this));\n\treadonly inlayHintsProvider = new LanguageFeatureRegistry<InlayHintsProvider>(this._score.bind(this));\n\treadonly colorProvider = new LanguageFeatureRegistry<DocumentColorProvider>(this._score.bind(this));\n\treadonly codeLensProvider = new LanguageFeatureRegistry<CodeLensProvider>(this._score.bind(this));\n\treadonly documentFormattingEditProvider = new LanguageFeatureRegistry<DocumentFormattingEditProvider>(this._score.bind(this));\n\treadonly documentRangeFormattingEditProvider = new LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>(this._score.bind(this));\n\treadonly onTypeFormattingEditProvider = new LanguageFeatureRegistry<OnTypeFormattingEditProvider>(this._score.bind(this));\n\treadonly signatureHelpProvider = new LanguageFeatureRegistry<SignatureHelpProvider>(this._score.bind(this));\n\treadonly hoverProvider = new LanguageFeatureRegistry<HoverProvider>(this._score.bind(this));\n\treadonly documentHighlightProvider = new LanguageFeatureRegistry<DocumentHighlightProvider>(this._score.bind(this));\n\treadonly multiDocumentHighlightProvider = new LanguageFeatureRegistry<MultiDocumentHighlightProvider>(this._score.bind(this));\n\treadonly selectionRangeProvider = new LanguageFeatureRegistry<SelectionRangeProvider>(this._score.bind(this));\n\treadonly foldingRangeProvider = new LanguageFeatureRegistry<FoldingRangeProvider>(this._score.bind(this));\n\treadonly linkProvider = new LanguageFeatureRegistry<LinkProvider>(this._score.bind(this));\n\treadonly inlineCompletionsProvider = new LanguageFeatureRegistry<InlineCompletionsProvider>(this._score.bind(this));\n\treadonly completionProvider = new LanguageFeatureRegistry<CompletionItemProvider>(this._score.bind(this));\n\treadonly linkedEditingRangeProvider = new LanguageFeatureRegistry<LinkedEditingRangeProvider>(this._score.bind(this));\n\treadonly documentRangeSemanticTokensProvider = new LanguageFeatureRegistry<DocumentRangeSemanticTokensProvider>(this._score.bind(this));\n\treadonly documentSemanticTokensProvider = new LanguageFeatureRegistry<DocumentSemanticTokensProvider>(this._score.bind(this));\n\treadonly documentDropEditProvider = new LanguageFeatureRegistry<DocumentDropEditProvider>(this._score.bind(this));\n\treadonly documentPasteEditProvider = new LanguageFeatureRegistry<DocumentPasteEditProvider>(this._score.bind(this));\n\n\tprivate _notebookTypeResolver?: NotebookInfoResolver;\n\n\tprivate _score(uri: URI): NotebookInfo | undefined {\n\t\treturn this._notebookTypeResolver?.(uri);\n\t}\n\n}\n\nregisterSingleton(ILanguageFeaturesService, LanguageFeaturesService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../base/common/uri.js';\nimport { LanguageFeatureRegistry, NotebookInfo, NotebookInfoResolver } from '../languageFeatureRegistry.js';\nimport { CodeActionProvider, CodeLensProvider, CompletionItemProvider, DocumentPasteEditProvider, DeclarationProvider, DefinitionProvider, DocumentColorProvider, DocumentFormattingEditProvider, MultiDocumentHighlightProvider, DocumentHighlightProvider, DocumentDropEditProvider, DocumentRangeFormattingEditProvider, DocumentRangeSemanticTokensProvider, DocumentSemanticTokensProvider, DocumentSymbolProvider, FoldingRangeProvider, HoverProvider, ImplementationProvider, InlayHintsProvider, InlineCompletionsProvider, LinkedEditingRangeProvider, LinkProvider, OnTypeFormattingEditProvider, ReferenceProvider, RenameProvider, SelectionRangeProvider, SignatureHelpProvider, TypeDefinitionProvider, NewSymbolNamesProvider } from '../languages.js';\nimport { ILanguageFeaturesService } from './languageFeatures.js';\nimport { InstantiationType, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\n\nexport class LanguageFeaturesService implements ILanguageFeaturesService {\n\n\tdeclare _serviceBrand: undefined;\n\n\treadonly referenceProvider = new LanguageFeatureRegistry<ReferenceProvider>(this._score.bind(this));\n\treadonly renameProvider = new LanguageFeatureRegistry<RenameProvider>(this._score.bind(this));\n\treadonly newSymbolNamesProvider = new LanguageFeatureRegistry<NewSymbolNamesProvider>(this._score.bind(this));\n\treadonly codeActionProvider = new LanguageFeatureRegistry<CodeActionProvider>(this._score.bind(this));\n\treadonly definitionProvider = new LanguageFeatureRegistry<DefinitionProvider>(this._score.bind(this));\n\treadonly typeDefinitionProvider = new LanguageFeatureRegistry<TypeDefinitionProvider>(this._score.bind(this));\n\treadonly declarationProvider = new LanguageFeatureRegistry<DeclarationProvider>(this._score.bind(this));\n\treadonly implementationProvider = new LanguageFeatureRegistry<ImplementationProvider>(this._score.bind(this));\n\treadonly documentSymbolProvider = new LanguageFeatureRegistry<DocumentSymbolProvider>(this._score.bind(this));\n\treadonly inlayHintsProvider = new LanguageFeatureRegistry<InlayHintsProvider>(this._score.bind(this));\n\treadonly colorProvider = new LanguageFeatureRegistry<DocumentColorProvider>(this._score.bind(this));\n\treadonly codeLensProvider = new LanguageFeatureRegistry<CodeLensProvider>(this._score.bind(this));\n\treadonly documentFormattingEditProvider = new LanguageFeatureRegistry<DocumentFormattingEditProvider>(this._score.bind(this));\n\treadonly documentRangeFormattingEditProvider = new LanguageFeatureRegistry<DocumentRangeFormattingEditProvider>(this._score.bind(this));\n\treadonly onTypeFormattingEditProvider = new LanguageFeatureRegistry<OnTypeFormattingEditProvider>(this._score.bind(this));\n\treadonly signatureHelpProvider = new LanguageFeatureRegistry<SignatureHelpProvider>(this._score.bind(this));\n\treadonly hoverProvider = new LanguageFeatureRegistry<HoverProvider>(this._score.bind(this));\n\treadonly documentHighlightProvider = new LanguageFeatureRegistry<DocumentHighlightProvider>(this._score.bind(this));\n\treadonly multiDocumentHighlightProvider = new LanguageFeatureRegistry<MultiDocumentHighlightProvider>(this._score.bind(this));\n\treadonly selectionRangeProvider = new LanguageFeatureRegistry<SelectionRangeProvider>(this._score.bind(this));\n\treadonly foldingRangeProvider = new LanguageFeatureRegistry<FoldingRangeProvider>(this._score.bind(this));\n\treadonly linkProvider = new LanguageFeatureRegistry<LinkProvider>(this._score.bind(this));\n\treadonly inlineCompletionsProvider = new LanguageFeatureRegistry<InlineCompletionsProvider>(this._score.bind(this));\n\treadonly completionProvider = new LanguageFeatureRegistry<CompletionItemProvider>(this._score.bind(this));\n\treadonly linkedEditingRangeProvider = new LanguageFeatureRegistry<LinkedEditingRangeProvider>(this._score.bind(this));\n\treadonly documentRangeSemanticTokensProvider = new LanguageFeatureRegistry<DocumentRangeSemanticTokensProvider>(this._score.bind(this));\n\treadonly documentSemanticTokensProvider = new LanguageFeatureRegistry<DocumentSemanticTokensProvider>(this._score.bind(this));\n\treadonly documentDropEditProvider = new LanguageFeatureRegistry<DocumentDropEditProvider>(this._score.bind(this));\n\treadonly documentPasteEditProvider = new LanguageFeatureRegistry<DocumentPasteEditProvider>(this._score.bind(this));\n\n\tprivate _notebookTypeResolver?: NotebookInfoResolver;\n\n\tprivate _score(uri: URI): NotebookInfo | undefined {\n\t\treturn this._notebookTypeResolver?.(uri);\n\t}\n\n}\n\nregisterSingleton(ILanguageFeaturesService, LanguageFeaturesService, InstantiationType.Delayed);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2043, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/languagesAssociations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/languagesAssociations.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/languagesAssociations.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParsedPattern, parse } from '../../../base/common/glob.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename, posix } from '../../../base/common/path.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { startsWithUTF8BOM } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\n\nexport interface ILanguageAssociation {\n\treadonly id: string;\n\treadonly mime: string;\n\treadonly filename?: string;\n\treadonly extension?: string;\n\treadonly filepattern?: string;\n\treadonly firstline?: RegExp;\n}\n\ninterface ILanguageAssociationItem extends ILanguageAssociation {\n\treadonly userConfigured: boolean;\n\treadonly filenameLowercase?: string;\n\treadonly extensionLowercase?: string;\n\treadonly filepatternLowercase?: ParsedPattern;\n\treadonly filepatternOnPath?: boolean;\n}\n\nlet registeredAssociations: ILanguageAssociationItem[] = [];\nlet nonUserRegisteredAssociations: ILanguageAssociationItem[] = [];\nlet userRegisteredAssociations: ILanguageAssociationItem[] = [];\n\n/**\n * Associate a language to the registry (platform).\n * * **NOTE**: This association will lose over associations registered using `registerConfiguredLanguageAssociation`.\n * * **NOTE**: Use `clearPlatformLanguageAssociations` to remove all associations registered using this function.\n */\nexport function registerPlatformLanguageAssociation(association: ILanguageAssociation, warnOnOverwrite = false): void {\n\t_registerLanguageAssociation(association, false, warnOnOverwrite);\n}\n\nfunction _registerLanguageAssociation(association: ILanguageAssociation, userConfigured: boolean, warnOnOverwrite: boolean): void {\n\n\t// Register\n\tconst associationItem = toLanguageAssociationItem(association, userConfigured);\n\tregisteredAssociations.push(associationItem);\n\tif (!associationItem.userConfigured) {\n\t\tnonUserRegisteredAssociations.push(associationItem);\n\t} else {\n\t\tuserRegisteredAssociations.push(associationItem);\n\t}\n\n\t// Check for conflicts unless this is a user configured association\n\tif (warnOnOverwrite && !associationItem.userConfigured) {\n\t\tregisteredAssociations.forEach(a => {\n\t\t\tif (a.mime === associationItem.mime || a.userConfigured) {\n\t\t\t\treturn; // same mime or userConfigured is ok\n\t\t\t}\n\n\t\t\tif (associationItem.extension && a.extension === associationItem.extension) {\n\t\t\t\tconsole.warn(`Overwriting extension <<${associationItem.extension}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.filename && a.filename === associationItem.filename) {\n\t\t\t\tconsole.warn(`Overwriting filename <<${associationItem.filename}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\n\t\t\t\tconsole.warn(`Overwriting filepattern <<${associationItem.filepattern}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.firstline && a.firstline === associationItem.firstline) {\n\t\t\t\tconsole.warn(`Overwriting firstline <<${associationItem.firstline}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction toLanguageAssociationItem(association: ILanguageAssociation, userConfigured: boolean): ILanguageAssociationItem {\n\treturn {\n\t\tid: association.id,\n\t\tmime: association.mime,\n\t\tfilename: association.filename,\n\t\textension: association.extension,\n\t\tfilepattern: association.filepattern,\n\t\tfirstline: association.firstline,\n\t\tuserConfigured: userConfigured,\n\t\tfilenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\n\t\textensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\n\t\tfilepatternLowercase: association.filepattern ? parse(association.filepattern.toLowerCase()) : undefined,\n\t\tfilepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\n\t};\n}\n\n/**\n * Clear language associations from the registry (platform).\n */\nexport function clearPlatformLanguageAssociations(): void {\n\tregisteredAssociations = registeredAssociations.filter(a => a.userConfigured);\n\tnonUserRegisteredAssociations = [];\n}\n\ninterface IdAndMime {\n\tid: string;\n\tmime: string;\n}\n\n/**\n * @see `getMimeTypes`\n */\nexport function getLanguageIds(resource: URI | null, firstLine?: string): string[] {\n\treturn getAssociations(resource, firstLine).map(item => item.id);\n}\n\nfunction getAssociations(resource: URI | null, firstLine?: string): IdAndMime[] {\n\tlet path: string | undefined;\n\tif (resource) {\n\t\tswitch (resource.scheme) {\n\t\t\tcase Schemas.file:\n\t\t\t\tpath = resource.fsPath;\n\t\t\t\tbreak;\n\t\t\tcase Schemas.data: {\n\t\t\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\t\t\tpath = metadata.get(DataUri.META_DATA_LABEL);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Schemas.vscodeNotebookCell:\n\t\t\t\t// File path not relevant for language detection of cell\n\t\t\t\tpath = undefined;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpath = resource.path;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\treturn [{ id: 'unknown', mime: Mimes.unknown }];\n\t}\n\n\tpath = path.toLowerCase();\n\n\tconst filename = basename(path);\n\n\t// 1.) User configured mappings have highest priority\n\tconst configuredLanguage = getAssociationByPath(path, filename, userRegisteredAssociations);\n\tif (configuredLanguage) {\n\t\treturn [configuredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n\t}\n\n\t// 2.) Registered mappings have middle priority\n\tconst registeredLanguage = getAssociationByPath(path, filename, nonUserRegisteredAssociations);\n\tif (registeredLanguage) {\n\t\treturn [registeredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n\t}\n\n\t// 3.) Firstline has lowest priority\n\tif (firstLine) {\n\t\tconst firstlineLanguage = getAssociationByFirstline(firstLine);\n\t\tif (firstlineLanguage) {\n\t\t\treturn [firstlineLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n\t\t}\n\t}\n\n\treturn [{ id: 'unknown', mime: Mimes.unknown }];\n}\n\nfunction getAssociationByPath(path: string, filename: string, associations: ILanguageAssociationItem[]): ILanguageAssociationItem | undefined {\n\tlet filenameMatch: ILanguageAssociationItem | undefined = undefined;\n\tlet patternMatch: ILanguageAssociationItem | undefined = undefined;\n\tlet extensionMatch: ILanguageAssociationItem | undefined = undefined;\n\n\t// We want to prioritize associations based on the order they are registered so that the last registered\n\t// association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n\tfor (let i = associations.length - 1; i >= 0; i--) {\n\t\tconst association = associations[i];\n\n\t\t// First exact name match\n\t\tif (filename === association.filenameLowercase) {\n\t\t\tfilenameMatch = association;\n\t\t\tbreak; // take it!\n\t\t}\n\n\t\t// Longest pattern match\n\t\tif (association.filepattern) {\n\t\t\tif (!patternMatch || association.filepattern.length > patternMatch.filepattern!.length) {\n\t\t\t\tconst target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\n\t\t\t\tif (association.filepatternLowercase?.(target)) {\n\t\t\t\t\tpatternMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Longest extension match\n\t\tif (association.extension) {\n\t\t\tif (!extensionMatch || association.extension.length > extensionMatch.extension!.length) {\n\t\t\t\tif (filename.endsWith(association.extensionLowercase!)) {\n\t\t\t\t\textensionMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 1.) Exact name match has second highest priority\n\tif (filenameMatch) {\n\t\treturn filenameMatch;\n\t}\n\n\t// 2.) Match on pattern\n\tif (patternMatch) {\n\t\treturn patternMatch;\n\t}\n\n\t// 3.) Match on extension comes next\n\tif (extensionMatch) {\n\t\treturn extensionMatch;\n\t}\n\n\treturn undefined;\n}\n\nfunction getAssociationByFirstline(firstLine: string): ILanguageAssociationItem | undefined {\n\tif (startsWithUTF8BOM(firstLine)) {\n\t\tfirstLine = firstLine.substr(1);\n\t}\n\n\tif (firstLine.length > 0) {\n\n\t\t// We want to prioritize associations based on the order they are registered so that the last registered\n\t\t// association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n\t\tfor (let i = registeredAssociations.length - 1; i >= 0; i--) {\n\t\t\tconst association = registeredAssociations[i];\n\t\t\tif (!association.firstline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst matches = firstLine.match(association.firstline);\n\t\t\tif (matches && matches.length > 0) {\n\t\t\t\treturn association;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParsedPattern, parse } from '../../../base/common/glob.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { basename, posix } from '../../../base/common/path.js';\nimport { DataUri } from '../../../base/common/resources.js';\nimport { startsWithUTF8BOM } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\n\nexport interface ILanguageAssociation {\n\treadonly id: string;\n\treadonly mime: string;\n\treadonly filename?: string;\n\treadonly extension?: string;\n\treadonly filepattern?: string;\n\treadonly firstline?: RegExp;\n}\n\ninterface ILanguageAssociationItem extends ILanguageAssociation {\n\treadonly userConfigured: boolean;\n\treadonly filenameLowercase?: string;\n\treadonly extensionLowercase?: string;\n\treadonly filepatternLowercase?: ParsedPattern;\n\treadonly filepatternOnPath?: boolean;\n}\n\nlet registeredAssociations: ILanguageAssociationItem[] = [];\nlet nonUserRegisteredAssociations: ILanguageAssociationItem[] = [];\nlet userRegisteredAssociations: ILanguageAssociationItem[] = [];\n\n/**\n * Associate a language to the registry (platform).\n * * **NOTE**: This association will lose over associations registered using `registerConfiguredLanguageAssociation`.\n * * **NOTE**: Use `clearPlatformLanguageAssociations` to remove all associations registered using this function.\n */\nexport function registerPlatformLanguageAssociation(association: ILanguageAssociation, warnOnOverwrite = false): void {\n\t_registerLanguageAssociation(association, false, warnOnOverwrite);\n}\n\nfunction _registerLanguageAssociation(association: ILanguageAssociation, userConfigured: boolean, warnOnOverwrite: boolean): void {\n\n\t// Register\n\tconst associationItem = toLanguageAssociationItem(association, userConfigured);\n\tregisteredAssociations.push(associationItem);\n\tif (!associationItem.userConfigured) {\n\t\tnonUserRegisteredAssociations.push(associationItem);\n\t} else {\n\t\tuserRegisteredAssociations.push(associationItem);\n\t}\n\n\t// Check for conflicts unless this is a user configured association\n\tif (warnOnOverwrite && !associationItem.userConfigured) {\n\t\tregisteredAssociations.forEach(a => {\n\t\t\tif (a.mime === associationItem.mime || a.userConfigured) {\n\t\t\t\treturn; // same mime or userConfigured is ok\n\t\t\t}\n\n\t\t\tif (associationItem.extension && a.extension === associationItem.extension) {\n\t\t\t\tconsole.warn(`Overwriting extension <<${associationItem.extension}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.filename && a.filename === associationItem.filename) {\n\t\t\t\tconsole.warn(`Overwriting filename <<${associationItem.filename}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\n\t\t\t\tconsole.warn(`Overwriting filepattern <<${associationItem.filepattern}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.firstline && a.firstline === associationItem.firstline) {\n\t\t\t\tconsole.warn(`Overwriting firstline <<${associationItem.firstline}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction toLanguageAssociationItem(association: ILanguageAssociation, userConfigured: boolean): ILanguageAssociationItem {\n\treturn {\n\t\tid: association.id,\n\t\tmime: association.mime,\n\t\tfilename: association.filename,\n\t\textension: association.extension,\n\t\tfilepattern: association.filepattern,\n\t\tfirstline: association.firstline,\n\t\tuserConfigured: userConfigured,\n\t\tfilenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\n\t\textensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\n\t\tfilepatternLowercase: association.filepattern ? parse(association.filepattern.toLowerCase()) : undefined,\n\t\tfilepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\n\t};\n}\n\n/**\n * Clear language associations from the registry (platform).\n */\nexport function clearPlatformLanguageAssociations(): void {\n\tregisteredAssociations = registeredAssociations.filter(a => a.userConfigured);\n\tnonUserRegisteredAssociations = [];\n}\n\ninterface IdAndMime {\n\tid: string;\n\tmime: string;\n}\n\n/**\n * @see `getMimeTypes`\n */\nexport function getLanguageIds(resource: URI | null, firstLine?: string): string[] {\n\treturn getAssociations(resource, firstLine).map(item => item.id);\n}\n\nfunction getAssociations(resource: URI | null, firstLine?: string): IdAndMime[] {\n\tlet path: string | undefined;\n\tif (resource) {\n\t\tswitch (resource.scheme) {\n\t\t\tcase Schemas.file:\n\t\t\t\tpath = resource.fsPath;\n\t\t\t\tbreak;\n\t\t\tcase Schemas.data: {\n\t\t\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\t\t\tpath = metadata.get(DataUri.META_DATA_LABEL);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Schemas.vscodeNotebookCell:\n\t\t\t\t// File path not relevant for language detection of cell\n\t\t\t\tpath = undefined;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpath = resource.path;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\treturn [{ id: 'unknown', mime: Mimes.unknown }];\n\t}\n\n\tpath = path.toLowerCase();\n\n\tconst filename = basename(path);\n\n\t// 1.) User configured mappings have highest priority\n\tconst configuredLanguage = getAssociationByPath(path, filename, userRegisteredAssociations);\n\tif (configuredLanguage) {\n\t\treturn [configuredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n\t}\n\n\t// 2.) Registered mappings have middle priority\n\tconst registeredLanguage = getAssociationByPath(path, filename, nonUserRegisteredAssociations);\n\tif (registeredLanguage) {\n\t\treturn [registeredLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n\t}\n\n\t// 3.) Firstline has lowest priority\n\tif (firstLine) {\n\t\tconst firstlineLanguage = getAssociationByFirstline(firstLine);\n\t\tif (firstlineLanguage) {\n\t\t\treturn [firstlineLanguage, { id: PLAINTEXT_LANGUAGE_ID, mime: Mimes.text }];\n\t\t}\n\t}\n\n\treturn [{ id: 'unknown', mime: Mimes.unknown }];\n}\n\nfunction getAssociationByPath(path: string, filename: string, associations: ILanguageAssociationItem[]): ILanguageAssociationItem | undefined {\n\tlet filenameMatch: ILanguageAssociationItem | undefined = undefined;\n\tlet patternMatch: ILanguageAssociationItem | undefined = undefined;\n\tlet extensionMatch: ILanguageAssociationItem | undefined = undefined;\n\n\t// We want to prioritize associations based on the order they are registered so that the last registered\n\t// association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n\tfor (let i = associations.length - 1; i >= 0; i--) {\n\t\tconst association = associations[i];\n\n\t\t// First exact name match\n\t\tif (filename === association.filenameLowercase) {\n\t\t\tfilenameMatch = association;\n\t\t\tbreak; // take it!\n\t\t}\n\n\t\t// Longest pattern match\n\t\tif (association.filepattern) {\n\t\t\tif (!patternMatch || association.filepattern.length > patternMatch.filepattern!.length) {\n\t\t\t\tconst target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\n\t\t\t\tif (association.filepatternLowercase?.(target)) {\n\t\t\t\t\tpatternMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Longest extension match\n\t\tif (association.extension) {\n\t\t\tif (!extensionMatch || association.extension.length > extensionMatch.extension!.length) {\n\t\t\t\tif (filename.endsWith(association.extensionLowercase!)) {\n\t\t\t\t\textensionMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 1.) Exact name match has second highest priority\n\tif (filenameMatch) {\n\t\treturn filenameMatch;\n\t}\n\n\t// 2.) Match on pattern\n\tif (patternMatch) {\n\t\treturn patternMatch;\n\t}\n\n\t// 3.) Match on extension comes next\n\tif (extensionMatch) {\n\t\treturn extensionMatch;\n\t}\n\n\treturn undefined;\n}\n\nfunction getAssociationByFirstline(firstLine: string): ILanguageAssociationItem | undefined {\n\tif (startsWithUTF8BOM(firstLine)) {\n\t\tfirstLine = firstLine.substr(1);\n\t}\n\n\tif (firstLine.length > 0) {\n\n\t\t// We want to prioritize associations based on the order they are registered so that the last registered\n\t\t// association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n\t\tfor (let i = registeredAssociations.length - 1; i >= 0; i--) {\n\t\t\tconst association = registeredAssociations[i];\n\t\t\tif (!association.firstline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst matches = firstLine.match(association.firstline);\n\t\t\tif (matches && matches.length > 0) {\n\t\t\t\treturn association;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn undefined;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2268, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/languagesRegistry.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/languagesRegistry.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/languagesRegistry.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from './languagesAssociations.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ILanguageIdCodec } from '../languages.js';\nimport { LanguageId } from '../encodedTokenAttributes.js';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageExtensionPoint, ILanguageIcon } from '../languages/language.js';\nimport { Extensions, IConfigurationRegistry } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\n\ninterface IResolvedLanguage {\n\tidentifier: string;\n\tname: string | null;\n\tmimetypes: string[];\n\taliases: string[];\n\textensions: string[];\n\tfilenames: string[];\n\tconfigurationFiles: URI[];\n\ticons: ILanguageIcon[];\n}\n\nexport class LanguageIdCodec implements ILanguageIdCodec {\n\n\tprivate _nextLanguageId: number;\n\tprivate readonly _languageIdToLanguage: string[] = [];\n\tprivate readonly _languageToLanguageId = new Map<string, number>();\n\n\tconstructor() {\n\t\tthis._register(NULL_LANGUAGE_ID, LanguageId.Null);\n\t\tthis._register(PLAINTEXT_LANGUAGE_ID, LanguageId.PlainText);\n\t\tthis._nextLanguageId = 2;\n\t}\n\n\tprivate _register(language: string, languageId: LanguageId): void {\n\t\tthis._languageIdToLanguage[languageId] = language;\n\t\tthis._languageToLanguageId.set(language, languageId);\n\t}\n\n\tpublic register(language: string): void {\n\t\tif (this._languageToLanguageId.has(language)) {\n\t\t\treturn;\n\t\t}\n\t\tconst languageId = this._nextLanguageId++;\n\t\tthis._register(language, languageId);\n\t}\n\n\tpublic encodeLanguageId(languageId: string): LanguageId {\n\t\treturn this._languageToLanguageId.get(languageId) || LanguageId.Null;\n\t}\n\n\tpublic decodeLanguageId(languageId: LanguageId): string {\n\t\treturn this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n\t}\n}\n\nexport class LanguagesRegistry extends Disposable {\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _warnOnOverwrite: boolean;\n\tpublic readonly languageIdCodec: LanguageIdCodec;\n\tprivate _dynamicLanguages: ILanguageExtensionPoint[];\n\tprivate _languages: { [id: string]: IResolvedLanguage };\n\tprivate _mimeTypesMap: { [mimeType: string]: string };\n\tprivate _nameMap: { [name: string]: string };\n\tprivate _lowercaseNameMap: { [name: string]: string };\n\n\tconstructor(useModesRegistry = true, warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguagesRegistry.instanceCount++;\n\n\t\tthis._warnOnOverwrite = warnOnOverwrite;\n\t\tthis.languageIdCodec = new LanguageIdCodec();\n\t\tthis._dynamicLanguages = [];\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tif (useModesRegistry) {\n\t\t\tthis._initializeFromRegistry();\n\t\t\tthis._register(ModesRegistry.onDidChangeLanguages((m) => {\n\t\t\t\tthis._initializeFromRegistry();\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tLanguagesRegistry.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tprivate _initializeFromRegistry(): void {\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tclearPlatformLanguageAssociations();\n\t\tconst desc = (<ILanguageExtensionPoint[]>[]).concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n\t\tthis._registerLanguages(desc);\n\t}\n\n\t_registerLanguages(desc: ILanguageExtensionPoint[]): void {\n\n\t\tfor (const d of desc) {\n\t\t\tthis._registerLanguage(d);\n\t\t}\n\n\t\t// Rebuild fast path maps\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\t\tObject.keys(this._languages).forEach((langId) => {\n\t\t\tconst language = this._languages[langId];\n\t\t\tif (language.name) {\n\t\t\t\tthis._nameMap[language.name] = language.identifier;\n\t\t\t}\n\t\t\tlanguage.aliases.forEach((alias) => {\n\t\t\t\tthis._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n\t\t\t});\n\t\t\tlanguage.mimetypes.forEach((mimetype) => {\n\t\t\t\tthis._mimeTypesMap[mimetype] = language.identifier;\n\t\t\t});\n\t\t});\n\n\t\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _registerLanguage(lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet resolvedLanguage: IResolvedLanguage;\n\t\tif (hasOwnProperty.call(this._languages, langId)) {\n\t\t\tresolvedLanguage = this._languages[langId];\n\t\t} else {\n\t\t\tthis.languageIdCodec.register(langId);\n\t\t\tresolvedLanguage = {\n\t\t\t\tidentifier: langId,\n\t\t\t\tname: null,\n\t\t\t\tmimetypes: [],\n\t\t\t\taliases: [],\n\t\t\t\textensions: [],\n\t\t\t\tfilenames: [],\n\t\t\t\tconfigurationFiles: [],\n\t\t\t\ticons: []\n\t\t\t};\n\t\t\tthis._languages[langId] = resolvedLanguage;\n\t\t}\n\n\t\tthis._mergeLanguage(resolvedLanguage, lang);\n\t}\n\n\tprivate _mergeLanguage(resolvedLanguage: IResolvedLanguage, lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet primaryMime: string | null = null;\n\n\t\tif (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n\t\t\tresolvedLanguage.mimetypes.push(...lang.mimetypes);\n\t\t\tprimaryMime = lang.mimetypes[0];\n\t\t}\n\n\t\tif (!primaryMime) {\n\t\t\tprimaryMime = `text/x-${langId}`;\n\t\t\tresolvedLanguage.mimetypes.push(primaryMime);\n\t\t}\n\n\t\tif (Array.isArray(lang.extensions)) {\n\t\t\tif (lang.configuration) {\n\t\t\t\t// insert first as this appears to be the 'primary' language definition\n\t\t\t\tresolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n\t\t\t} else {\n\t\t\t\tresolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n\t\t\t}\n\t\t\tfor (const extension of lang.extensions) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenames)) {\n\t\t\tfor (const filename of lang.filenames) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n\t\t\t\tresolvedLanguage.filenames.push(filename);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenamePatterns)) {\n\t\t\tfor (const filenamePattern of lang.filenamePatterns) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n\t\t\tlet firstLineRegexStr = lang.firstLine;\n\t\t\tif (firstLineRegexStr.charAt(0) !== '^') {\n\t\t\t\tfirstLineRegexStr = '^' + firstLineRegexStr;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst firstLineRegex = new RegExp(firstLineRegexStr);\n\t\t\t\tif (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n\t\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// Most likely, the regex was bad\n\t\t\t\tconsole.warn(`[${lang.id}]: Invalid regular expression \\`${firstLineRegexStr}\\`: `, err);\n\t\t\t}\n\t\t}\n\n\t\tresolvedLanguage.aliases.push(langId);\n\n\t\tlet langAliases: Array<string | null> | null = null;\n\t\tif (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n\t\t\tif (lang.aliases.length === 0) {\n\t\t\t\t// signal that this language should not get a name\n\t\t\t\tlangAliases = [null];\n\t\t\t} else {\n\t\t\t\tlangAliases = lang.aliases;\n\t\t\t}\n\t\t}\n\n\t\tif (langAliases !== null) {\n\t\t\tfor (const langAlias of langAliases) {\n\t\t\t\tif (!langAlias || langAlias.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedLanguage.aliases.push(langAlias);\n\t\t\t}\n\t\t}\n\n\t\tconst containsAliases = (langAliases !== null && langAliases.length > 0);\n\t\tif (containsAliases && langAliases![0] === null) {\n\t\t\t// signal that this language should not get a name\n\t\t} else {\n\t\t\tconst bestName = (containsAliases ? langAliases![0] : null) || langId;\n\t\t\tif (containsAliases || !resolvedLanguage.name) {\n\t\t\t\tresolvedLanguage.name = bestName;\n\t\t\t}\n\t\t}\n\n\t\tif (lang.configuration) {\n\t\t\tresolvedLanguage.configurationFiles.push(lang.configuration);\n\t\t}\n\n\t\tif (lang.icon) {\n\t\t\tresolvedLanguage.icons.push(lang.icon);\n\t\t}\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\tif (!languageId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn hasOwnProperty.call(this._languages, languageId);\n\t}\n\n\tpublic getRegisteredLanguageIds(): string[] {\n\t\treturn Object.keys(this._languages);\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\tconst languageNameLower = languageName.toLowerCase();\n\t\tif (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._lowercaseNameMap[languageNameLower];\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\tif (!mimeType) {\n\t\t\treturn null;\n\t\t}\n\t\tif (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n\t\t\treturn this._mimeTypesMap[mimeType];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string[] {\n\t\tif (!resource && !firstLine) {\n\t\t\treturn [];\n\t\t}\n\t\treturn getLanguageIds(resource, firstLine);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { regExpLeadsToEndlessLoop } from '../../../base/common/strings.js';\nimport { clearPlatformLanguageAssociations, getLanguageIds, registerPlatformLanguageAssociation } from './languagesAssociations.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { ILanguageIdCodec } from '../languages.js';\nimport { LanguageId } from '../encodedTokenAttributes.js';\nimport { ModesRegistry, PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageExtensionPoint, ILanguageIcon } from '../languages/language.js';\nimport { Extensions, IConfigurationRegistry } from '../../../platform/configuration/common/configurationRegistry.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst NULL_LANGUAGE_ID = 'vs.editor.nullLanguage';\n\ninterface IResolvedLanguage {\n\tidentifier: string;\n\tname: string | null;\n\tmimetypes: string[];\n\taliases: string[];\n\textensions: string[];\n\tfilenames: string[];\n\tconfigurationFiles: URI[];\n\ticons: ILanguageIcon[];\n}\n\nexport class LanguageIdCodec implements ILanguageIdCodec {\n\n\tprivate _nextLanguageId: number;\n\tprivate readonly _languageIdToLanguage: string[] = [];\n\tprivate readonly _languageToLanguageId = new Map<string, number>();\n\n\tconstructor() {\n\t\tthis._register(NULL_LANGUAGE_ID, LanguageId.Null);\n\t\tthis._register(PLAINTEXT_LANGUAGE_ID, LanguageId.PlainText);\n\t\tthis._nextLanguageId = 2;\n\t}\n\n\tprivate _register(language: string, languageId: LanguageId): void {\n\t\tthis._languageIdToLanguage[languageId] = language;\n\t\tthis._languageToLanguageId.set(language, languageId);\n\t}\n\n\tpublic register(language: string): void {\n\t\tif (this._languageToLanguageId.has(language)) {\n\t\t\treturn;\n\t\t}\n\t\tconst languageId = this._nextLanguageId++;\n\t\tthis._register(language, languageId);\n\t}\n\n\tpublic encodeLanguageId(languageId: string): LanguageId {\n\t\treturn this._languageToLanguageId.get(languageId) || LanguageId.Null;\n\t}\n\n\tpublic decodeLanguageId(languageId: LanguageId): string {\n\t\treturn this._languageIdToLanguage[languageId] || NULL_LANGUAGE_ID;\n\t}\n}\n\nexport class LanguagesRegistry extends Disposable {\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _warnOnOverwrite: boolean;\n\tpublic readonly languageIdCodec: LanguageIdCodec;\n\tprivate _dynamicLanguages: ILanguageExtensionPoint[];\n\tprivate _languages: { [id: string]: IResolvedLanguage };\n\tprivate _mimeTypesMap: { [mimeType: string]: string };\n\tprivate _nameMap: { [name: string]: string };\n\tprivate _lowercaseNameMap: { [name: string]: string };\n\n\tconstructor(useModesRegistry = true, warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguagesRegistry.instanceCount++;\n\n\t\tthis._warnOnOverwrite = warnOnOverwrite;\n\t\tthis.languageIdCodec = new LanguageIdCodec();\n\t\tthis._dynamicLanguages = [];\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tif (useModesRegistry) {\n\t\t\tthis._initializeFromRegistry();\n\t\t\tthis._register(ModesRegistry.onDidChangeLanguages((m) => {\n\t\t\t\tthis._initializeFromRegistry();\n\t\t\t}));\n\t\t}\n\t}\n\n\toverride dispose() {\n\t\tLanguagesRegistry.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tprivate _initializeFromRegistry(): void {\n\t\tthis._languages = {};\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\n\t\tclearPlatformLanguageAssociations();\n\t\tconst desc = (<ILanguageExtensionPoint[]>[]).concat(ModesRegistry.getLanguages()).concat(this._dynamicLanguages);\n\t\tthis._registerLanguages(desc);\n\t}\n\n\t_registerLanguages(desc: ILanguageExtensionPoint[]): void {\n\n\t\tfor (const d of desc) {\n\t\t\tthis._registerLanguage(d);\n\t\t}\n\n\t\t// Rebuild fast path maps\n\t\tthis._mimeTypesMap = {};\n\t\tthis._nameMap = {};\n\t\tthis._lowercaseNameMap = {};\n\t\tObject.keys(this._languages).forEach((langId) => {\n\t\t\tconst language = this._languages[langId];\n\t\t\tif (language.name) {\n\t\t\t\tthis._nameMap[language.name] = language.identifier;\n\t\t\t}\n\t\t\tlanguage.aliases.forEach((alias) => {\n\t\t\t\tthis._lowercaseNameMap[alias.toLowerCase()] = language.identifier;\n\t\t\t});\n\t\t\tlanguage.mimetypes.forEach((mimetype) => {\n\t\t\t\tthis._mimeTypesMap[mimetype] = language.identifier;\n\t\t\t});\n\t\t});\n\n\t\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerOverrideIdentifiers(this.getRegisteredLanguageIds());\n\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate _registerLanguage(lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet resolvedLanguage: IResolvedLanguage;\n\t\tif (hasOwnProperty.call(this._languages, langId)) {\n\t\t\tresolvedLanguage = this._languages[langId];\n\t\t} else {\n\t\t\tthis.languageIdCodec.register(langId);\n\t\t\tresolvedLanguage = {\n\t\t\t\tidentifier: langId,\n\t\t\t\tname: null,\n\t\t\t\tmimetypes: [],\n\t\t\t\taliases: [],\n\t\t\t\textensions: [],\n\t\t\t\tfilenames: [],\n\t\t\t\tconfigurationFiles: [],\n\t\t\t\ticons: []\n\t\t\t};\n\t\t\tthis._languages[langId] = resolvedLanguage;\n\t\t}\n\n\t\tthis._mergeLanguage(resolvedLanguage, lang);\n\t}\n\n\tprivate _mergeLanguage(resolvedLanguage: IResolvedLanguage, lang: ILanguageExtensionPoint): void {\n\t\tconst langId = lang.id;\n\n\t\tlet primaryMime: string | null = null;\n\n\t\tif (Array.isArray(lang.mimetypes) && lang.mimetypes.length > 0) {\n\t\t\tresolvedLanguage.mimetypes.push(...lang.mimetypes);\n\t\t\tprimaryMime = lang.mimetypes[0];\n\t\t}\n\n\t\tif (!primaryMime) {\n\t\t\tprimaryMime = `text/x-${langId}`;\n\t\t\tresolvedLanguage.mimetypes.push(primaryMime);\n\t\t}\n\n\t\tif (Array.isArray(lang.extensions)) {\n\t\t\tif (lang.configuration) {\n\t\t\t\t// insert first as this appears to be the 'primary' language definition\n\t\t\t\tresolvedLanguage.extensions = lang.extensions.concat(resolvedLanguage.extensions);\n\t\t\t} else {\n\t\t\t\tresolvedLanguage.extensions = resolvedLanguage.extensions.concat(lang.extensions);\n\t\t\t}\n\t\t\tfor (const extension of lang.extensions) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, extension: extension }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenames)) {\n\t\t\tfor (const filename of lang.filenames) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, filename: filename }, this._warnOnOverwrite);\n\t\t\t\tresolvedLanguage.filenames.push(filename);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(lang.filenamePatterns)) {\n\t\t\tfor (const filenamePattern of lang.filenamePatterns) {\n\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, filepattern: filenamePattern }, this._warnOnOverwrite);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof lang.firstLine === 'string' && lang.firstLine.length > 0) {\n\t\t\tlet firstLineRegexStr = lang.firstLine;\n\t\t\tif (firstLineRegexStr.charAt(0) !== '^') {\n\t\t\t\tfirstLineRegexStr = '^' + firstLineRegexStr;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst firstLineRegex = new RegExp(firstLineRegexStr);\n\t\t\t\tif (!regExpLeadsToEndlessLoop(firstLineRegex)) {\n\t\t\t\t\tregisterPlatformLanguageAssociation({ id: langId, mime: primaryMime, firstline: firstLineRegex }, this._warnOnOverwrite);\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// Most likely, the regex was bad\n\t\t\t\tconsole.warn(`[${lang.id}]: Invalid regular expression \\`${firstLineRegexStr}\\`: `, err);\n\t\t\t}\n\t\t}\n\n\t\tresolvedLanguage.aliases.push(langId);\n\n\t\tlet langAliases: Array<string | null> | null = null;\n\t\tif (typeof lang.aliases !== 'undefined' && Array.isArray(lang.aliases)) {\n\t\t\tif (lang.aliases.length === 0) {\n\t\t\t\t// signal that this language should not get a name\n\t\t\t\tlangAliases = [null];\n\t\t\t} else {\n\t\t\t\tlangAliases = lang.aliases;\n\t\t\t}\n\t\t}\n\n\t\tif (langAliases !== null) {\n\t\t\tfor (const langAlias of langAliases) {\n\t\t\t\tif (!langAlias || langAlias.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedLanguage.aliases.push(langAlias);\n\t\t\t}\n\t\t}\n\n\t\tconst containsAliases = (langAliases !== null && langAliases.length > 0);\n\t\tif (containsAliases && langAliases![0] === null) {\n\t\t\t// signal that this language should not get a name\n\t\t} else {\n\t\t\tconst bestName = (containsAliases ? langAliases![0] : null) || langId;\n\t\t\tif (containsAliases || !resolvedLanguage.name) {\n\t\t\t\tresolvedLanguage.name = bestName;\n\t\t\t}\n\t\t}\n\n\t\tif (lang.configuration) {\n\t\t\tresolvedLanguage.configurationFiles.push(lang.configuration);\n\t\t}\n\n\t\tif (lang.icon) {\n\t\t\tresolvedLanguage.icons.push(lang.icon);\n\t\t}\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\tif (!languageId) {\n\t\t\treturn false;\n\t\t}\n\t\treturn hasOwnProperty.call(this._languages, languageId);\n\t}\n\n\tpublic getRegisteredLanguageIds(): string[] {\n\t\treturn Object.keys(this._languages);\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\tconst languageNameLower = languageName.toLowerCase();\n\t\tif (!hasOwnProperty.call(this._lowercaseNameMap, languageNameLower)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._lowercaseNameMap[languageNameLower];\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\tif (!mimeType) {\n\t\t\treturn null;\n\t\t}\n\t\tif (hasOwnProperty.call(this._mimeTypesMap, mimeType)) {\n\t\t\treturn this._mimeTypesMap[mimeType];\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string[] {\n\t\tif (!resource && !firstLine) {\n\t\t\treturn [];\n\t\t}\n\t\treturn getLanguageIds(resource, firstLine);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2535, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/languageService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/languageService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/languageService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { ILanguageSelection, ILanguageService } from '../languages/language.js';\nimport { ILanguageIdCodec, TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { IObservable, observableFromEvent } from '../../../base/common/observable.js';\n\nexport class LanguageService extends Disposable implements ILanguageService {\n\tpublic _serviceBrand: undefined;\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidRequestBasicLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n\n\tprivate readonly _onDidRequestRichLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n\n\tprotected readonly _onDidChange = this._register(new Emitter<void>({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _requestedBasicLanguages = new Set<string>();\n\tprivate readonly _requestedRichLanguages = new Set<string>();\n\n\tprotected readonly _registry: LanguagesRegistry;\n\tpublic readonly languageIdCodec: ILanguageIdCodec;\n\n\tconstructor(warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguageService.instanceCount++;\n\t\tthis._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n\t\tthis.languageIdCodec = this._registry.languageIdCodec;\n\t\tthis._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n\t}\n\n\tpublic override dispose(): void {\n\t\tLanguageService.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\treturn this._registry.isRegisteredLanguageId(languageId);\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\treturn this._registry.getLanguageIdByLanguageName(languageName);\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\treturn this._registry.getLanguageIdByMimeType(mimeType);\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string | null {\n\t\tconst languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\treturn languageIds.at(0) ?? null;\n\t}\n\n\tpublic createById(languageId: string | null | undefined): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tpublic createByFilepathOrFirstLine(resource: URI | null, firstLine?: string): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\tconst languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tprivate _createAndGetLanguageIdentifier(languageId: string | null | undefined): string {\n\t\tif (!languageId || !this.isRegisteredLanguageId(languageId)) {\n\t\t\t// Fall back to plain text if language is unknown\n\t\t\tlanguageId = PLAINTEXT_LANGUAGE_ID;\n\t\t}\n\n\t\treturn languageId;\n\t}\n\n\tpublic requestBasicLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedBasicLanguages.has(languageId)) {\n\t\t\tthis._requestedBasicLanguages.add(languageId);\n\t\t\tthis._onDidRequestBasicLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n\n\tpublic requestRichLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedRichLanguages.has(languageId)) {\n\t\t\tthis._requestedRichLanguages.add(languageId);\n\n\t\t\t// Ensure basic features are requested\n\t\t\tthis.requestBasicLanguageFeatures(languageId);\n\n\t\t\t// Ensure tokenizers are created\n\t\t\tTokenizationRegistry.getOrCreate(languageId);\n\n\t\t\tthis._onDidRequestRichLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n}\n\nclass LanguageSelection implements ILanguageSelection {\n\tprivate readonly _value: IObservable<string>;\n\tpublic readonly onDidChange: Event<string>;\n\n\tconstructor(onDidChangeLanguages: Event<void>, selector: () => string) {\n\t\tthis._value = observableFromEvent(this, onDidChangeLanguages, () => selector());\n\t\tthis.onDidChange = Event.fromObservable(this._value);\n\t}\n\n\tpublic get languageId(): string {\n\t\treturn this._value.get();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { LanguagesRegistry } from './languagesRegistry.js';\nimport { ILanguageSelection, ILanguageService } from '../languages/language.js';\nimport { ILanguageIdCodec, TokenizationRegistry } from '../languages.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { IObservable, observableFromEvent } from '../../../base/common/observable.js';\n\nexport class LanguageService extends Disposable implements ILanguageService {\n\tpublic _serviceBrand: undefined;\n\n\tstatic instanceCount = 0;\n\n\tprivate readonly _onDidRequestBasicLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestBasicLanguageFeatures = this._onDidRequestBasicLanguageFeatures.event;\n\n\tprivate readonly _onDidRequestRichLanguageFeatures = this._register(new Emitter<string>());\n\tpublic readonly onDidRequestRichLanguageFeatures = this._onDidRequestRichLanguageFeatures.event;\n\n\tprotected readonly _onDidChange = this._register(new Emitter<void>({ leakWarningThreshold: 200 /* https://github.com/microsoft/vscode/issues/119968 */ }));\n\tpublic readonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate readonly _requestedBasicLanguages = new Set<string>();\n\tprivate readonly _requestedRichLanguages = new Set<string>();\n\n\tprotected readonly _registry: LanguagesRegistry;\n\tpublic readonly languageIdCodec: ILanguageIdCodec;\n\n\tconstructor(warnOnOverwrite = false) {\n\t\tsuper();\n\t\tLanguageService.instanceCount++;\n\t\tthis._registry = this._register(new LanguagesRegistry(true, warnOnOverwrite));\n\t\tthis.languageIdCodec = this._registry.languageIdCodec;\n\t\tthis._register(this._registry.onDidChange(() => this._onDidChange.fire()));\n\t}\n\n\tpublic override dispose(): void {\n\t\tLanguageService.instanceCount--;\n\t\tsuper.dispose();\n\t}\n\n\tpublic isRegisteredLanguageId(languageId: string | null | undefined): boolean {\n\t\treturn this._registry.isRegisteredLanguageId(languageId);\n\t}\n\n\tpublic getLanguageIdByLanguageName(languageName: string): string | null {\n\t\treturn this._registry.getLanguageIdByLanguageName(languageName);\n\t}\n\n\tpublic getLanguageIdByMimeType(mimeType: string | null | undefined): string | null {\n\t\treturn this._registry.getLanguageIdByMimeType(mimeType);\n\t}\n\n\tpublic guessLanguageIdByFilepathOrFirstLine(resource: URI | null, firstLine?: string): string | null {\n\t\tconst languageIds = this._registry.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\treturn languageIds.at(0) ?? null;\n\t}\n\n\tpublic createById(languageId: string | null | undefined): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tpublic createByFilepathOrFirstLine(resource: URI | null, firstLine?: string): ILanguageSelection {\n\t\treturn new LanguageSelection(this.onDidChange, () => {\n\t\t\tconst languageId = this.guessLanguageIdByFilepathOrFirstLine(resource, firstLine);\n\t\t\treturn this._createAndGetLanguageIdentifier(languageId);\n\t\t});\n\t}\n\n\tprivate _createAndGetLanguageIdentifier(languageId: string | null | undefined): string {\n\t\tif (!languageId || !this.isRegisteredLanguageId(languageId)) {\n\t\t\t// Fall back to plain text if language is unknown\n\t\t\tlanguageId = PLAINTEXT_LANGUAGE_ID;\n\t\t}\n\n\t\treturn languageId;\n\t}\n\n\tpublic requestBasicLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedBasicLanguages.has(languageId)) {\n\t\t\tthis._requestedBasicLanguages.add(languageId);\n\t\t\tthis._onDidRequestBasicLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n\n\tpublic requestRichLanguageFeatures(languageId: string): void {\n\t\tif (!this._requestedRichLanguages.has(languageId)) {\n\t\t\tthis._requestedRichLanguages.add(languageId);\n\n\t\t\t// Ensure basic features are requested\n\t\t\tthis.requestBasicLanguageFeatures(languageId);\n\n\t\t\t// Ensure tokenizers are created\n\t\t\tTokenizationRegistry.getOrCreate(languageId);\n\n\t\t\tthis._onDidRequestRichLanguageFeatures.fire(languageId);\n\t\t}\n\t}\n}\n\nclass LanguageSelection implements ILanguageSelection {\n\tprivate readonly _value: IObservable<string>;\n\tpublic readonly onDidChange: Event<string>;\n\n\tconstructor(onDidChangeLanguages: Event<void>, selector: () => string) {\n\t\tthis._value = observableFromEvent(this, onDidChangeLanguages, () => selector());\n\t\tthis.onDidChange = Event.fromObservable(this._value);\n\t}\n\n\tpublic get languageId(): string {\n\t\treturn this._value.get();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2641, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/markerDecorationsService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/markerDecorationsService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMarkerService, IMarker, MarkerSeverity, MarkerTag } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IModelDeltaDecoration, ITextModel, IModelDecorationOptions, TrackedRangeStickiness, OverviewRulerLane, IModelDecoration, MinimapPosition, IModelDecorationMinimapOptions } from '../model.js';\nimport { ClassName } from '../model/intervalTree.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { ThemeColor } from '../../../base/common/themables.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { IMarkerDecorationsService } from './markerDecorations.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nimport { Iterable } from '../../../base/common/iterator.js';\n\nexport class MarkerDecorationsService extends Disposable implements IMarkerDecorationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeMarker = this._register(new Emitter<ITextModel>());\n\n\tprivate readonly _suppressedRanges = new ResourceMap<Set<Range>>();\n\n\tprivate readonly _markerDecorations = new ResourceMap<MarkerDecorations>();\n\n\tconstructor(\n\t\t@IModelService modelService: IModelService,\n\t\t@IMarkerService private readonly _markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tmodelService.getModels().forEach(model => this._onModelAdded(model));\n\t\tthis._register(modelService.onModelAdded(this._onModelAdded, this));\n\t\tthis._register(modelService.onModelRemoved(this._onModelRemoved, this));\n\t\tthis._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._markerDecorations.forEach(value => value.dispose());\n\t\tthis._markerDecorations.clear();\n\t}\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null {\n\t\tconst markerDecorations = this._markerDecorations.get(uri);\n\t\treturn markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n\t}\n\n\tprivate _handleMarkerChange(changedResources: readonly URI[]): void {\n\t\tchangedResources.forEach((resource) => {\n\t\t\tconst markerDecorations = this._markerDecorations.get(resource);\n\t\t\tif (markerDecorations) {\n\t\t\t\tthis._updateDecorations(markerDecorations);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onModelAdded(model: ITextModel): void {\n\t\tconst markerDecorations = new MarkerDecorations(model);\n\t\tthis._markerDecorations.set(model.uri, markerDecorations);\n\t\tthis._updateDecorations(markerDecorations);\n\t}\n\n\tprivate _onModelRemoved(model: ITextModel): void {\n\t\tconst markerDecorations = this._markerDecorations.get(model.uri);\n\t\tif (markerDecorations) {\n\t\t\tmarkerDecorations.dispose();\n\t\t\tthis._markerDecorations.delete(model.uri);\n\t\t}\n\n\t\t// clean up markers for internal, transient models\n\t\tif (model.uri.scheme === Schemas.inMemory\n\t\t\t|| model.uri.scheme === Schemas.internal\n\t\t\t|| model.uri.scheme === Schemas.vscode) {\n\t\t\tthis._markerService?.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n\t\t}\n\t}\n\n\tprivate _updateDecorations(markerDecorations: MarkerDecorations): void {\n\t\t// Limit to the first 500 errors/warnings\n\t\tlet markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n\n\t\t// filter markers from suppressed ranges\n\t\tconst suppressedRanges = this._suppressedRanges.get(markerDecorations.model.uri);\n\t\tif (suppressedRanges) {\n\t\t\tmarkers = markers.filter(marker => {\n\t\t\t\treturn !Iterable.some(suppressedRanges, candidate => Range.areIntersectingOrTouching(candidate, marker));\n\t\t\t});\n\t\t}\n\n\t\tif (markerDecorations.update(markers)) {\n\t\t\tthis._onDidChangeMarker.fire(markerDecorations.model);\n\t\t}\n\t}\n}\n\nclass MarkerDecorations extends Disposable {\n\n\tprivate readonly _map = new BidirectionalMap<IMarker, /*decoration id*/string>();\n\n\tconstructor(\n\t\treadonly model: ITextModel\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.model.deltaDecorations([...this._map.values()], []);\n\t\t\tthis._map.clear();\n\t\t}));\n\t}\n\n\tpublic update(markers: IMarker[]): boolean {\n\n\t\t// We use the fact that marker instances are not recreated when different owners\n\t\t// update. So we can compare references to find out what changed since the last update.\n\n\t\tconst { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldIds: string[] = removed.map(marker => this._map.get(marker)!);\n\t\tconst newDecorations: IModelDeltaDecoration[] = added.map(marker => {\n\t\t\treturn {\n\t\t\t\trange: this._createDecorationRange(this.model, marker),\n\t\t\t\toptions: this._createDecorationOption(marker)\n\t\t\t};\n\t\t});\n\n\t\tconst ids = this.model.deltaDecorations(oldIds, newDecorations);\n\t\tfor (const removedMarker of removed) {\n\t\t\tthis._map.delete(removedMarker);\n\t\t}\n\t\tfor (let index = 0; index < ids.length; index++) {\n\t\t\tthis._map.set(added[index], ids[index]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tgetMarker(decoration: IModelDecoration): IMarker | undefined {\n\t\treturn this._map.getKey(decoration.id);\n\t}\n\n\tprivate _createDecorationRange(model: ITextModel, rawMarker: IMarker): Range {\n\n\t\tlet ret = Range.lift(rawMarker);\n\n\t\tif (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, MarkerTag.Unnecessary) && !this._hasMarkerTag(rawMarker, MarkerTag.Deprecated)) {\n\t\t\t// * never render hints on multiple lines\n\t\t\t// * make enough space for three dots\n\t\t\tret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n\t\t}\n\n\t\tret = model.validateRange(ret);\n\n\t\tif (ret.isEmpty()) {\n\t\t\tconst maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n\t\t\t\tmodel.getLineMaxColumn(ret.startLineNumber);\n\n\t\t\tif (maxColumn === 1 || ret.endColumn >= maxColumn) {\n\t\t\t\t// empty line or behind eol\n\t\t\t\t// keep the range as is, it will be rendered 1ch wide\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tconst word = model.getWordAtPosition(ret.getStartPosition());\n\t\t\tif (word) {\n\t\t\t\tret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n\t\t\t}\n\t\t} else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n\t\t\tconst minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n\t\t\tif (minColumn < ret.endColumn) {\n\t\t\t\tret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n\t\t\t\trawMarker.startColumn = minColumn;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate _createDecorationOption(marker: IMarker): IModelDecorationOptions {\n\n\t\tlet className: string | undefined;\n\t\tlet color: ThemeColor | undefined = undefined;\n\t\tlet zIndex: number;\n\t\tlet inlineClassName: string | undefined = undefined;\n\t\tlet minimap: IModelDecorationMinimapOptions | undefined;\n\n\t\tswitch (marker.severity) {\n\t\t\tcase MarkerSeverity.Hint:\n\t\t\t\tif (this._hasMarkerTag(marker, MarkerTag.Deprecated)) {\n\t\t\t\t\tclassName = undefined;\n\t\t\t\t} else if (this._hasMarkerTag(marker, MarkerTag.Unnecessary)) {\n\t\t\t\t\tclassName = ClassName.EditorUnnecessaryDecoration;\n\t\t\t\t} else {\n\t\t\t\t\tclassName = ClassName.EditorHintDecoration;\n\t\t\t\t}\n\t\t\t\tzIndex = 0;\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\tclassName = ClassName.EditorInfoDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerInfo);\n\t\t\t\tzIndex = 10;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapInfo),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\tclassName = ClassName.EditorWarningDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerWarning);\n\t\t\t\tzIndex = 20;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapWarning),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Error:\n\t\t\tdefault:\n\t\t\t\tclassName = ClassName.EditorErrorDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerError);\n\t\t\t\tzIndex = 30;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapError),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (marker.tags) {\n\t\t\tif (marker.tags.indexOf(MarkerTag.Unnecessary) !== -1) {\n\t\t\t\tinlineClassName = ClassName.EditorUnnecessaryInlineDecoration;\n\t\t\t}\n\t\t\tif (marker.tags.indexOf(MarkerTag.Deprecated) !== -1) {\n\t\t\t\tinlineClassName = ClassName.EditorDeprecatedInlineDecoration;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdescription: 'marker-decoration',\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName,\n\t\t\tshowIfCollapsed: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor,\n\t\t\t\tposition: OverviewRulerLane.Right\n\t\t\t},\n\t\t\tminimap,\n\t\t\tzIndex,\n\t\t\tinlineClassName,\n\t\t};\n\t}\n\n\tprivate _hasMarkerTag(marker: IMarker, tag: MarkerTag): boolean {\n\t\tif (marker.tags) {\n\t\t\treturn marker.tags.indexOf(tag) >= 0;\n\t\t}\n\t\treturn false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMarkerService, IMarker, MarkerSeverity, MarkerTag } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IModelDeltaDecoration, ITextModel, IModelDecorationOptions, TrackedRangeStickiness, OverviewRulerLane, IModelDecoration, MinimapPosition, IModelDecorationMinimapOptions } from '../model.js';\nimport { ClassName } from '../model/intervalTree.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { ThemeColor } from '../../../base/common/themables.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { IMarkerDecorationsService } from './markerDecorations.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nimport { Iterable } from '../../../base/common/iterator.js';\n\nexport class MarkerDecorationsService extends Disposable implements IMarkerDecorationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeMarker = this._register(new Emitter<ITextModel>());\n\n\tprivate readonly _suppressedRanges = new ResourceMap<Set<Range>>();\n\n\tprivate readonly _markerDecorations = new ResourceMap<MarkerDecorations>();\n\n\tconstructor(\n\t\t@IModelService modelService: IModelService,\n\t\t@IMarkerService private readonly _markerService: IMarkerService\n\t) {\n\t\tsuper();\n\t\tmodelService.getModels().forEach(model => this._onModelAdded(model));\n\t\tthis._register(modelService.onModelAdded(this._onModelAdded, this));\n\t\tthis._register(modelService.onModelRemoved(this._onModelRemoved, this));\n\t\tthis._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._markerDecorations.forEach(value => value.dispose());\n\t\tthis._markerDecorations.clear();\n\t}\n\n\tgetMarker(uri: URI, decoration: IModelDecoration): IMarker | null {\n\t\tconst markerDecorations = this._markerDecorations.get(uri);\n\t\treturn markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n\t}\n\n\tprivate _handleMarkerChange(changedResources: readonly URI[]): void {\n\t\tchangedResources.forEach((resource) => {\n\t\t\tconst markerDecorations = this._markerDecorations.get(resource);\n\t\t\tif (markerDecorations) {\n\t\t\t\tthis._updateDecorations(markerDecorations);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onModelAdded(model: ITextModel): void {\n\t\tconst markerDecorations = new MarkerDecorations(model);\n\t\tthis._markerDecorations.set(model.uri, markerDecorations);\n\t\tthis._updateDecorations(markerDecorations);\n\t}\n\n\tprivate _onModelRemoved(model: ITextModel): void {\n\t\tconst markerDecorations = this._markerDecorations.get(model.uri);\n\t\tif (markerDecorations) {\n\t\t\tmarkerDecorations.dispose();\n\t\t\tthis._markerDecorations.delete(model.uri);\n\t\t}\n\n\t\t// clean up markers for internal, transient models\n\t\tif (model.uri.scheme === Schemas.inMemory\n\t\t\t|| model.uri.scheme === Schemas.internal\n\t\t\t|| model.uri.scheme === Schemas.vscode) {\n\t\t\tthis._markerService?.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n\t\t}\n\t}\n\n\tprivate _updateDecorations(markerDecorations: MarkerDecorations): void {\n\t\t// Limit to the first 500 errors/warnings\n\t\tlet markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n\n\t\t// filter markers from suppressed ranges\n\t\tconst suppressedRanges = this._suppressedRanges.get(markerDecorations.model.uri);\n\t\tif (suppressedRanges) {\n\t\t\tmarkers = markers.filter(marker => {\n\t\t\t\treturn !Iterable.some(suppressedRanges, candidate => Range.areIntersectingOrTouching(candidate, marker));\n\t\t\t});\n\t\t}\n\n\t\tif (markerDecorations.update(markers)) {\n\t\t\tthis._onDidChangeMarker.fire(markerDecorations.model);\n\t\t}\n\t}\n}\n\nclass MarkerDecorations extends Disposable {\n\n\tprivate readonly _map = new BidirectionalMap<IMarker, /*decoration id*/string>();\n\n\tconstructor(\n\t\treadonly model: ITextModel\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.model.deltaDecorations([...this._map.values()], []);\n\t\t\tthis._map.clear();\n\t\t}));\n\t}\n\n\tpublic update(markers: IMarker[]): boolean {\n\n\t\t// We use the fact that marker instances are not recreated when different owners\n\t\t// update. So we can compare references to find out what changed since the last update.\n\n\t\tconst { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n\n\t\tif (added.length === 0 && removed.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst oldIds: string[] = removed.map(marker => this._map.get(marker)!);\n\t\tconst newDecorations: IModelDeltaDecoration[] = added.map(marker => {\n\t\t\treturn {\n\t\t\t\trange: this._createDecorationRange(this.model, marker),\n\t\t\t\toptions: this._createDecorationOption(marker)\n\t\t\t};\n\t\t});\n\n\t\tconst ids = this.model.deltaDecorations(oldIds, newDecorations);\n\t\tfor (const removedMarker of removed) {\n\t\t\tthis._map.delete(removedMarker);\n\t\t}\n\t\tfor (let index = 0; index < ids.length; index++) {\n\t\t\tthis._map.set(added[index], ids[index]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tgetMarker(decoration: IModelDecoration): IMarker | undefined {\n\t\treturn this._map.getKey(decoration.id);\n\t}\n\n\tprivate _createDecorationRange(model: ITextModel, rawMarker: IMarker): Range {\n\n\t\tlet ret = Range.lift(rawMarker);\n\n\t\tif (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, MarkerTag.Unnecessary) && !this._hasMarkerTag(rawMarker, MarkerTag.Deprecated)) {\n\t\t\t// * never render hints on multiple lines\n\t\t\t// * make enough space for three dots\n\t\t\tret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n\t\t}\n\n\t\tret = model.validateRange(ret);\n\n\t\tif (ret.isEmpty()) {\n\t\t\tconst maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n\t\t\t\tmodel.getLineMaxColumn(ret.startLineNumber);\n\n\t\t\tif (maxColumn === 1 || ret.endColumn >= maxColumn) {\n\t\t\t\t// empty line or behind eol\n\t\t\t\t// keep the range as is, it will be rendered 1ch wide\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\tconst word = model.getWordAtPosition(ret.getStartPosition());\n\t\t\tif (word) {\n\t\t\t\tret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n\t\t\t}\n\t\t} else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n\t\t\tconst minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n\t\t\tif (minColumn < ret.endColumn) {\n\t\t\t\tret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n\t\t\t\trawMarker.startColumn = minColumn;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate _createDecorationOption(marker: IMarker): IModelDecorationOptions {\n\n\t\tlet className: string | undefined;\n\t\tlet color: ThemeColor | undefined = undefined;\n\t\tlet zIndex: number;\n\t\tlet inlineClassName: string | undefined = undefined;\n\t\tlet minimap: IModelDecorationMinimapOptions | undefined;\n\n\t\tswitch (marker.severity) {\n\t\t\tcase MarkerSeverity.Hint:\n\t\t\t\tif (this._hasMarkerTag(marker, MarkerTag.Deprecated)) {\n\t\t\t\t\tclassName = undefined;\n\t\t\t\t} else if (this._hasMarkerTag(marker, MarkerTag.Unnecessary)) {\n\t\t\t\t\tclassName = ClassName.EditorUnnecessaryDecoration;\n\t\t\t\t} else {\n\t\t\t\t\tclassName = ClassName.EditorHintDecoration;\n\t\t\t\t}\n\t\t\t\tzIndex = 0;\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Info:\n\t\t\t\tclassName = ClassName.EditorInfoDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerInfo);\n\t\t\t\tzIndex = 10;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapInfo),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Warning:\n\t\t\t\tclassName = ClassName.EditorWarningDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerWarning);\n\t\t\t\tzIndex = 20;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapWarning),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\tcase MarkerSeverity.Error:\n\t\t\tdefault:\n\t\t\t\tclassName = ClassName.EditorErrorDecoration;\n\t\t\t\tcolor = themeColorFromId(overviewRulerError);\n\t\t\t\tzIndex = 30;\n\t\t\t\tminimap = {\n\t\t\t\t\tcolor: themeColorFromId(minimapError),\n\t\t\t\t\tposition: MinimapPosition.Inline\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (marker.tags) {\n\t\t\tif (marker.tags.indexOf(MarkerTag.Unnecessary) !== -1) {\n\t\t\t\tinlineClassName = ClassName.EditorUnnecessaryInlineDecoration;\n\t\t\t}\n\t\t\tif (marker.tags.indexOf(MarkerTag.Deprecated) !== -1) {\n\t\t\t\tinlineClassName = ClassName.EditorDeprecatedInlineDecoration;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdescription: 'marker-decoration',\n\t\t\tstickiness: TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges,\n\t\t\tclassName,\n\t\t\tshowIfCollapsed: true,\n\t\t\toverviewRuler: {\n\t\t\t\tcolor,\n\t\t\t\tposition: OverviewRulerLane.Right\n\t\t\t},\n\t\t\tminimap,\n\t\t\tzIndex,\n\t\t\tinlineClassName,\n\t\t};\n\t}\n\n\tprivate _hasMarkerTag(marker: IMarker, tag: MarkerTag): boolean {\n\t\tif (marker.tags) {\n\t\t\treturn marker.tags.indexOf(tag) >= 0;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2903, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/common/services/modelService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/common/services/modelService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/common/services/vs/editor/common/services/modelService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, IDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { DefaultEndOfLine, EndOfLineSequence, ITextBufferFactory, ITextModel, ITextModelCreationOptions } from '../model.js';\nimport { TextModel } from '../model/textModel.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/misc/textModelDefaults.js';\nimport { IModelLanguageChangedEvent } from '../textModelEvents.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageSelection } from '../languages/language.js';\nimport { IModelService } from './model.js';\nimport { ITextResourcePropertiesService } from './textResourceConfiguration.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { equals } from '../../../base/common/objects.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\n\nfunction MODEL_ID(resource: URI): string {\n\treturn resource.toString();\n}\n\nclass ModelData implements IDisposable {\n\n\tprivate readonly _modelEventListeners = new DisposableStore();\n\n\tconstructor(\n\t\tpublic readonly model: TextModel,\n\t\tonWillDispose: (model: ITextModel) => void,\n\t\tonDidChangeLanguage: (model: ITextModel, e: IModelLanguageChangedEvent) => void\n\t) {\n\t\tthis.model = model;\n\t\tthis._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n\t\tthis._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._modelEventListeners.dispose();\n\t}\n}\n\ninterface IRawEditorConfig {\n\ttabSize?: any;\n\tindentSize?: any;\n\tinsertSpaces?: any;\n\tdetectIndentation?: any;\n\ttrimAutoWhitespace?: any;\n\tlargeFileOptimizations?: any;\n\tbracketPairColorization?: any;\n}\n\ninterface IRawConfig {\n\teol?: any;\n\teditor?: IRawEditorConfig;\n}\n\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? DefaultEndOfLine.LF : DefaultEndOfLine.CRLF;\n\nclass DisposedModelInfo {\n\tconstructor(\n\t\tpublic readonly uri: URI,\n\t\tpublic readonly initialUndoRedoSnapshot: ResourceEditStackSnapshot | null,\n\t\tpublic readonly time: number,\n\t\tpublic readonly sharesUndoRedoStack: boolean,\n\t\tpublic readonly heapSize: number,\n\t\tpublic readonly sha1: string,\n\t\tpublic readonly versionId: number,\n\t\tpublic readonly alternativeVersionId: number,\n\t) { }\n}\n\nexport class ModelService extends Disposable implements IModelService {\n\n\tpublic static MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate readonly _onModelAdded: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onModelAdded: Event<ITextModel> = this._onModelAdded.event;\n\n\tprivate readonly _onModelRemoved: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onModelRemoved: Event<ITextModel> = this._onModelRemoved.event;\n\n\tprivate readonly _onModelModeChanged = this._register(new Emitter<{ model: ITextModel; oldLanguageId: string }>());\n\tpublic readonly onModelLanguageChanged = this._onModelModeChanged.event;\n\n\tprivate _modelCreationOptionsByLanguageAndResource: { [languageAndResource: string]: ITextModelCreationOptions };\n\n\t/**\n\t * All the models known in the system.\n\t */\n\tprivate readonly _models: { [modelId: string]: ModelData };\n\tprivate readonly _disposedModels: Map<string, DisposedModelInfo>;\n\tprivate _disposedModelsHeapSize: number;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService private readonly _resourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._modelCreationOptionsByLanguageAndResource = Object.create(null);\n\t\tthis._models = {};\n\t\tthis._disposedModels = new Map<string, DisposedModelInfo>();\n\t\tthis._disposedModelsHeapSize = 0;\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => this._updateModelOptions(e)));\n\t\tthis._updateModelOptions(undefined);\n\t}\n\n\tprivate static _readModelOptions(config: IRawConfig, isForSimpleWidget: boolean): ITextModelCreationOptions {\n\t\tlet tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n\t\tif (config.editor && typeof config.editor.tabSize !== 'undefined') {\n\t\t\tconst parsedTabSize = parseInt(config.editor.tabSize, 10);\n\t\t\tif (!isNaN(parsedTabSize)) {\n\t\t\t\ttabSize = parsedTabSize;\n\t\t\t}\n\t\t\tif (tabSize < 1) {\n\t\t\t\ttabSize = 1;\n\t\t\t}\n\t\t}\n\n\t\tlet indentSize: number | 'tabSize' = 'tabSize';\n\t\tif (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n\t\t\tconst parsedIndentSize = parseInt(config.editor.indentSize, 10);\n\t\t\tif (!isNaN(parsedIndentSize)) {\n\t\t\t\tindentSize = Math.max(parsedIndentSize, 1);\n\t\t\t}\n\t\t}\n\n\t\tlet insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n\t\tif (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n\t\t\tinsertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n\t\t}\n\n\t\tlet newDefaultEOL = DEFAULT_EOL;\n\t\tconst eol = config.eol;\n\t\tif (eol === '\\r\\n') {\n\t\t\tnewDefaultEOL = DefaultEndOfLine.CRLF;\n\t\t} else if (eol === '\\n') {\n\t\t\tnewDefaultEOL = DefaultEndOfLine.LF;\n\t\t}\n\n\t\tlet trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n\t\tif (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n\t\t\ttrimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\n\t\t}\n\n\t\tlet detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n\t\tif (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n\t\t\tdetectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n\t\t}\n\n\t\tlet largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n\t\tif (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n\t\t\tlargeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\n\t\t}\n\t\tlet bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n\t\tif (config.editor?.bracketPairColorization && typeof config.editor.bracketPairColorization === 'object') {\n\t\t\tbracketPairColorizationOptions = {\n\t\t\t\tenabled: !!config.editor.bracketPairColorization.enabled,\n\t\t\t\tindependentColorPoolPerBracketType: !!config.editor.bracketPairColorization.independentColorPoolPerBracketType\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tisForSimpleWidget: isForSimpleWidget,\n\t\t\ttabSize: tabSize,\n\t\t\tindentSize: indentSize,\n\t\t\tinsertSpaces: insertSpaces,\n\t\t\tdetectIndentation: detectIndentation,\n\t\t\tdefaultEOL: newDefaultEOL,\n\t\t\ttrimAutoWhitespace: trimAutoWhitespace,\n\t\t\tlargeFileOptimizations: largeFileOptimizations,\n\t\t\tbracketPairColorizationOptions\n\t\t};\n\t}\n\n\tprivate _getEOL(resource: URI | undefined, language: string): string {\n\t\tif (resource) {\n\t\t\treturn this._resourcePropertiesService.getEOL(resource, language);\n\t\t}\n\t\tconst eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn platform.OS === platform.OperatingSystem.Linux || platform.OS === platform.OperatingSystem.Macintosh ? '\\n' : '\\r\\n';\n\t}\n\n\tprivate _shouldRestoreUndoStack(): boolean {\n\t\tconst result = this._configurationService.getValue('files.restoreUndoStack');\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getCreationOptions(languageIdOrSelection: string | ILanguageSelection, resource: URI | undefined, isForSimpleWidget: boolean): ITextModelCreationOptions {\n\t\tconst language = (typeof languageIdOrSelection === 'string' ? languageIdOrSelection : languageIdOrSelection.languageId);\n\t\tlet creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n\t\tif (!creationOptions) {\n\t\t\tconst editor = this._configurationService.getValue<IRawEditorConfig>('editor', { overrideIdentifier: language, resource });\n\t\t\tconst eol = this._getEOL(resource, language);\n\t\t\tcreationOptions = ModelService._readModelOptions({ editor, eol }, isForSimpleWidget);\n\t\t\tthis._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n\t\t}\n\t\treturn creationOptions;\n\t}\n\n\tprivate _updateModelOptions(e: IConfigurationChangeEvent | undefined): void {\n\t\tconst oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n\t\tthis._modelCreationOptionsByLanguageAndResource = Object.create(null);\n\n\t\t// Update options on all models\n\t\tconst keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst modelId = keys[i];\n\t\t\tconst modelData = this._models[modelId];\n\t\t\tconst language = modelData.model.getLanguageId();\n\t\t\tconst uri = modelData.model.uri;\n\n\t\t\tif (e && !e.affectsConfiguration('editor', { overrideIdentifier: language, resource: uri }) && !e.affectsConfiguration('files.eol', { overrideIdentifier: language, resource: uri })) {\n\t\t\t\tcontinue; // perf: skip if this model is not affected by configuration change\n\t\t\t}\n\n\t\t\tconst oldOptions = oldOptionsByLanguageAndResource[language + uri];\n\t\t\tconst newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n\t\t\tModelService._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n\t\t}\n\t}\n\n\tprivate static _setModelOptionsForModel(model: ITextModel, newOptions: ITextModelCreationOptions, currentOptions: ITextModelCreationOptions): void {\n\t\tif (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n\t\t\tmodel.setEOL(newOptions.defaultEOL === DefaultEndOfLine.LF ? EndOfLineSequence.LF : EndOfLineSequence.CRLF);\n\t\t}\n\n\t\tif (currentOptions\n\t\t\t&& (currentOptions.detectIndentation === newOptions.detectIndentation)\n\t\t\t&& (currentOptions.insertSpaces === newOptions.insertSpaces)\n\t\t\t&& (currentOptions.tabSize === newOptions.tabSize)\n\t\t\t&& (currentOptions.indentSize === newOptions.indentSize)\n\t\t\t&& (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)\n\t\t\t&& equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)\n\t\t) {\n\t\t\t// Same indent opts, no need to touch the model\n\t\t\treturn;\n\t\t}\n\n\t\tif (newOptions.detectIndentation) {\n\t\t\tmodel.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n\t\t\tmodel.updateOptions({\n\t\t\t\ttrimAutoWhitespace: newOptions.trimAutoWhitespace,\n\t\t\t\tbracketColorizationOptions: newOptions.bracketPairColorizationOptions\n\t\t\t});\n\t\t} else {\n\t\t\tmodel.updateOptions({\n\t\t\t\tinsertSpaces: newOptions.insertSpaces,\n\t\t\t\ttabSize: newOptions.tabSize,\n\t\t\t\tindentSize: newOptions.indentSize,\n\t\t\t\ttrimAutoWhitespace: newOptions.trimAutoWhitespace,\n\t\t\t\tbracketColorizationOptions: newOptions.bracketPairColorizationOptions\n\t\t\t});\n\t\t}\n\t}\n\n\t// --- begin IModelService\n\n\tprivate _insertDisposedModel(disposedModelData: DisposedModelInfo): void {\n\t\tthis._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n\t\tthis._disposedModelsHeapSize += disposedModelData.heapSize;\n\t}\n\n\tprivate _removeDisposedModel(resource: URI): DisposedModelInfo | undefined {\n\t\tconst disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n\t\tif (disposedModelData) {\n\t\t\tthis._disposedModelsHeapSize -= disposedModelData.heapSize;\n\t\t}\n\t\tthis._disposedModels.delete(MODEL_ID(resource));\n\t\treturn disposedModelData;\n\t}\n\n\tprivate _ensureDisposedModelsHeapSize(maxModelsHeapSize: number): void {\n\t\tif (this._disposedModelsHeapSize > maxModelsHeapSize) {\n\t\t\t// we must remove some old undo stack elements to free up some memory\n\t\t\tconst disposedModels: DisposedModelInfo[] = [];\n\t\t\tthis._disposedModels.forEach(entry => {\n\t\t\t\tif (!entry.sharesUndoRedoStack) {\n\t\t\t\t\tdisposedModels.push(entry);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdisposedModels.sort((a, b) => a.time - b.time);\n\t\t\twhile (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n\t\t\t\tconst disposedModel = disposedModels.shift()!;\n\t\t\t\tthis._removeDisposedModel(disposedModel.uri);\n\t\t\t\tif (disposedModel.initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _createModelData(value: string | ITextBufferFactory, languageIdOrSelection: string | ILanguageSelection, resource: URI | undefined, isForSimpleWidget: boolean): ModelData {\n\t\t// create & save the model\n\t\tconst options = this.getCreationOptions(languageIdOrSelection, resource, isForSimpleWidget);\n\t\tconst model: TextModel = this._instantiationService.createInstance(TextModel,\n\t\t\tvalue,\n\t\t\tlanguageIdOrSelection,\n\t\t\toptions,\n\t\t\tresource\n\t\t);\n\t\tif (resource && this._disposedModels.has(MODEL_ID(resource))) {\n\t\t\tconst disposedModelData = this._removeDisposedModel(resource)!;\n\t\t\tconst elements = this._undoRedoService.getElements(resource);\n\t\t\tconst sha1Computer = this._getSHA1Computer();\n\t\t\tconst sha1IsEqual = (\n\t\t\t\tsha1Computer.canComputeSHA1(model)\n\t\t\t\t\t? sha1Computer.computeSHA1(model) === disposedModelData.sha1\n\t\t\t\t\t: false\n\t\t\t);\n\t\t\tif (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n\t\t\t\tfor (const element of elements.past) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(resource)) {\n\t\t\t\t\t\telement.setModel(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const element of elements.future) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(resource)) {\n\t\t\t\t\t\telement.setModel(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\n\t\t\t\tif (sha1IsEqual) {\n\t\t\t\t\tmodel._overwriteVersionId(disposedModelData.versionId);\n\t\t\t\t\tmodel._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n\t\t\t\t\tmodel._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (disposedModelData.initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst modelId = MODEL_ID(model.uri);\n\n\t\tif (this._models[modelId]) {\n\t\t\t// There already exists a model with this id => this is a programmer error\n\t\t\tthrow new Error('ModelService: Cannot add model because it already exists!');\n\t\t}\n\n\t\tconst modelData = new ModelData(\n\t\t\tmodel,\n\t\t\t(model) => this._onWillDispose(model),\n\t\t\t(model, e) => this._onDidChangeLanguage(model, e)\n\t\t);\n\t\tthis._models[modelId] = modelData;\n\n\t\treturn modelData;\n\t}\n\n\tpublic createModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget: boolean = false): ITextModel {\n\t\tlet modelData: ModelData;\n\n\t\tif (languageSelection) {\n\t\t\tmodelData = this._createModelData(value, languageSelection, resource, isForSimpleWidget);\n\t\t} else {\n\t\t\tmodelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n\t\t}\n\n\t\tthis._onModelAdded.fire(modelData.model);\n\n\t\treturn modelData.model;\n\t}\n\n\tpublic getModels(): ITextModel[] {\n\t\tconst ret: ITextModel[] = [];\n\n\t\tconst keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst modelId = keys[i];\n\t\t\tret.push(this._models[modelId].model);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getModel(resource: URI): ITextModel | null {\n\t\tconst modelId = MODEL_ID(resource);\n\t\tconst modelData = this._models[modelId];\n\t\tif (!modelData) {\n\t\t\treturn null;\n\t\t}\n\t\treturn modelData.model;\n\t}\n\n\t// --- end IModelService\n\n\tprotected _schemaShouldMaintainUndoRedoElements(resource: URI) {\n\t\treturn (\n\t\t\tresource.scheme === Schemas.file\n\t\t\t|| resource.scheme === Schemas.vscodeRemote\n\t\t\t|| resource.scheme === Schemas.vscodeUserData\n\t\t\t|| resource.scheme === Schemas.vscodeNotebookCell\n\t\t\t|| resource.scheme === 'fake-fs' // for tests\n\t\t);\n\t}\n\n\tprivate _onWillDispose(model: ITextModel): void {\n\t\tconst modelId = MODEL_ID(model.uri);\n\t\tconst modelData = this._models[modelId];\n\n\t\tconst sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\n\t\tlet maintainUndoRedoStack = false;\n\t\tlet heapSize = 0;\n\t\tif (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri))) {\n\t\t\tconst elements = this._undoRedoService.getElements(model.uri);\n\t\t\tif (elements.past.length > 0 || elements.future.length > 0) {\n\t\t\t\tfor (const element of elements.past) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(model.uri)) {\n\t\t\t\t\t\tmaintainUndoRedoStack = true;\n\t\t\t\t\t\theapSize += element.heapSize(model.uri);\n\t\t\t\t\t\telement.setModel(model.uri); // remove reference from text buffer instance\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const element of elements.future) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(model.uri)) {\n\t\t\t\t\t\tmaintainUndoRedoStack = true;\n\t\t\t\t\t\theapSize += element.heapSize(model.uri);\n\t\t\t\t\t\telement.setModel(model.uri); // remove reference from text buffer instance\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst maxMemory = ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n\t\tconst sha1Computer = this._getSHA1Computer();\n\t\tif (!maintainUndoRedoStack) {\n\t\t\tif (!sharesUndoRedoStack) {\n\t\t\t\tconst initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\t\t\t\tif (initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!sharesUndoRedoStack && (heapSize > maxMemory || !sha1Computer.canComputeSHA1(model))) {\n\t\t\t// the undo stack for this file would never fit in the configured memory or the file is very large, so don't bother with it.\n\t\t\tconst initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\t\t\tif (initialUndoRedoSnapshot !== null) {\n\t\t\t\tthis._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._ensureDisposedModelsHeapSize(maxMemory - heapSize);\n\t\t\t// We only invalidate the elements, but they remain in the undo-redo service.\n\t\t\tthis._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\n\t\t\tthis._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, sha1Computer.computeSHA1(model), model.getVersionId(), model.getAlternativeVersionId()));\n\t\t}\n\n\t\tdelete this._models[modelId];\n\t\tmodelData.dispose();\n\n\t\t// clean up cache\n\t\tdelete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n\n\t\tthis._onModelRemoved.fire(model);\n\t}\n\n\tprivate _onDidChangeLanguage(model: ITextModel, e: IModelLanguageChangedEvent): void {\n\t\tconst oldLanguageId = e.oldLanguage;\n\t\tconst newLanguageId = model.getLanguageId();\n\t\tconst oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n\t\tconst newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n\t\tModelService._setModelOptionsForModel(model, newOptions, oldOptions);\n\t\tthis._onModelModeChanged.fire({ model, oldLanguageId: oldLanguageId });\n\t}\n\n\tprotected _getSHA1Computer(): ITextModelSHA1Computer {\n\t\treturn new DefaultModelSHA1Computer();\n\t}\n}\n\nexport interface ITextModelSHA1Computer {\n\tcanComputeSHA1(model: ITextModel): boolean;\n\tcomputeSHA1(model: ITextModel): string;\n}\n\nexport class DefaultModelSHA1Computer implements ITextModelSHA1Computer {\n\n\tpublic static MAX_MODEL_SIZE = 10 * 1024 * 1024; // takes 200ms to compute a sha1 on a 10MB model on a new machine\n\n\tcanComputeSHA1(model: ITextModel): boolean {\n\t\treturn (model.getValueLength() <= DefaultModelSHA1Computer.MAX_MODEL_SIZE);\n\t}\n\n\tcomputeSHA1(model: ITextModel): string {\n\t\t// compute the sha1\n\t\tconst shaComputer = new StringSHA1();\n\t\tconst snapshot = model.createSnapshot();\n\t\tlet text: string | null;\n\t\twhile ((text = snapshot.read())) {\n\t\t\tshaComputer.update(text);\n\t\t}\n\t\treturn shaComputer.digest();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable, IDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { DefaultEndOfLine, EndOfLineSequence, ITextBufferFactory, ITextModel, ITextModelCreationOptions } from '../model.js';\nimport { TextModel } from '../model/textModel.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/misc/textModelDefaults.js';\nimport { IModelLanguageChangedEvent } from '../textModelEvents.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../languages/modesRegistry.js';\nimport { ILanguageSelection } from '../languages/language.js';\nimport { IModelService } from './model.js';\nimport { ITextResourcePropertiesService } from './textResourceConfiguration.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot } from '../../../platform/undoRedo/common/undoRedo.js';\nimport { StringSHA1 } from '../../../base/common/hash.js';\nimport { isEditStackElement } from '../model/editStack.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { equals } from '../../../base/common/objects.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\n\nfunction MODEL_ID(resource: URI): string {\n\treturn resource.toString();\n}\n\nclass ModelData implements IDisposable {\n\n\tprivate readonly _modelEventListeners = new DisposableStore();\n\n\tconstructor(\n\t\tpublic readonly model: TextModel,\n\t\tonWillDispose: (model: ITextModel) => void,\n\t\tonDidChangeLanguage: (model: ITextModel, e: IModelLanguageChangedEvent) => void\n\t) {\n\t\tthis.model = model;\n\t\tthis._modelEventListeners.add(model.onWillDispose(() => onWillDispose(model)));\n\t\tthis._modelEventListeners.add(model.onDidChangeLanguage((e) => onDidChangeLanguage(model, e)));\n\t}\n\n\tpublic dispose(): void {\n\t\tthis._modelEventListeners.dispose();\n\t}\n}\n\ninterface IRawEditorConfig {\n\ttabSize?: any;\n\tindentSize?: any;\n\tinsertSpaces?: any;\n\tdetectIndentation?: any;\n\ttrimAutoWhitespace?: any;\n\tlargeFileOptimizations?: any;\n\tbracketPairColorization?: any;\n}\n\ninterface IRawConfig {\n\teol?: any;\n\teditor?: IRawEditorConfig;\n}\n\nconst DEFAULT_EOL = (platform.isLinux || platform.isMacintosh) ? DefaultEndOfLine.LF : DefaultEndOfLine.CRLF;\n\nclass DisposedModelInfo {\n\tconstructor(\n\t\tpublic readonly uri: URI,\n\t\tpublic readonly initialUndoRedoSnapshot: ResourceEditStackSnapshot | null,\n\t\tpublic readonly time: number,\n\t\tpublic readonly sharesUndoRedoStack: boolean,\n\t\tpublic readonly heapSize: number,\n\t\tpublic readonly sha1: string,\n\t\tpublic readonly versionId: number,\n\t\tpublic readonly alternativeVersionId: number,\n\t) { }\n}\n\nexport class ModelService extends Disposable implements IModelService {\n\n\tpublic static MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK = 20 * 1024 * 1024;\n\n\tpublic _serviceBrand: undefined;\n\n\tprivate readonly _onModelAdded: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onModelAdded: Event<ITextModel> = this._onModelAdded.event;\n\n\tprivate readonly _onModelRemoved: Emitter<ITextModel> = this._register(new Emitter<ITextModel>());\n\tpublic readonly onModelRemoved: Event<ITextModel> = this._onModelRemoved.event;\n\n\tprivate readonly _onModelModeChanged = this._register(new Emitter<{ model: ITextModel; oldLanguageId: string }>());\n\tpublic readonly onModelLanguageChanged = this._onModelModeChanged.event;\n\n\tprivate _modelCreationOptionsByLanguageAndResource: { [languageAndResource: string]: ITextModelCreationOptions };\n\n\t/**\n\t * All the models known in the system.\n\t */\n\tprivate readonly _models: { [modelId: string]: ModelData };\n\tprivate readonly _disposedModels: Map<string, DisposedModelInfo>;\n\tprivate _disposedModelsHeapSize: number;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ITextResourcePropertiesService private readonly _resourcePropertiesService: ITextResourcePropertiesService,\n\t\t@IUndoRedoService private readonly _undoRedoService: IUndoRedoService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._modelCreationOptionsByLanguageAndResource = Object.create(null);\n\t\tthis._models = {};\n\t\tthis._disposedModels = new Map<string, DisposedModelInfo>();\n\t\tthis._disposedModelsHeapSize = 0;\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => this._updateModelOptions(e)));\n\t\tthis._updateModelOptions(undefined);\n\t}\n\n\tprivate static _readModelOptions(config: IRawConfig, isForSimpleWidget: boolean): ITextModelCreationOptions {\n\t\tlet tabSize = EDITOR_MODEL_DEFAULTS.tabSize;\n\t\tif (config.editor && typeof config.editor.tabSize !== 'undefined') {\n\t\t\tconst parsedTabSize = parseInt(config.editor.tabSize, 10);\n\t\t\tif (!isNaN(parsedTabSize)) {\n\t\t\t\ttabSize = parsedTabSize;\n\t\t\t}\n\t\t\tif (tabSize < 1) {\n\t\t\t\ttabSize = 1;\n\t\t\t}\n\t\t}\n\n\t\tlet indentSize: number | 'tabSize' = 'tabSize';\n\t\tif (config.editor && typeof config.editor.indentSize !== 'undefined' && config.editor.indentSize !== 'tabSize') {\n\t\t\tconst parsedIndentSize = parseInt(config.editor.indentSize, 10);\n\t\t\tif (!isNaN(parsedIndentSize)) {\n\t\t\t\tindentSize = Math.max(parsedIndentSize, 1);\n\t\t\t}\n\t\t}\n\n\t\tlet insertSpaces = EDITOR_MODEL_DEFAULTS.insertSpaces;\n\t\tif (config.editor && typeof config.editor.insertSpaces !== 'undefined') {\n\t\t\tinsertSpaces = (config.editor.insertSpaces === 'false' ? false : Boolean(config.editor.insertSpaces));\n\t\t}\n\n\t\tlet newDefaultEOL = DEFAULT_EOL;\n\t\tconst eol = config.eol;\n\t\tif (eol === '\\r\\n') {\n\t\t\tnewDefaultEOL = DefaultEndOfLine.CRLF;\n\t\t} else if (eol === '\\n') {\n\t\t\tnewDefaultEOL = DefaultEndOfLine.LF;\n\t\t}\n\n\t\tlet trimAutoWhitespace = EDITOR_MODEL_DEFAULTS.trimAutoWhitespace;\n\t\tif (config.editor && typeof config.editor.trimAutoWhitespace !== 'undefined') {\n\t\t\ttrimAutoWhitespace = (config.editor.trimAutoWhitespace === 'false' ? false : Boolean(config.editor.trimAutoWhitespace));\n\t\t}\n\n\t\tlet detectIndentation = EDITOR_MODEL_DEFAULTS.detectIndentation;\n\t\tif (config.editor && typeof config.editor.detectIndentation !== 'undefined') {\n\t\t\tdetectIndentation = (config.editor.detectIndentation === 'false' ? false : Boolean(config.editor.detectIndentation));\n\t\t}\n\n\t\tlet largeFileOptimizations = EDITOR_MODEL_DEFAULTS.largeFileOptimizations;\n\t\tif (config.editor && typeof config.editor.largeFileOptimizations !== 'undefined') {\n\t\t\tlargeFileOptimizations = (config.editor.largeFileOptimizations === 'false' ? false : Boolean(config.editor.largeFileOptimizations));\n\t\t}\n\t\tlet bracketPairColorizationOptions = EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions;\n\t\tif (config.editor?.bracketPairColorization && typeof config.editor.bracketPairColorization === 'object') {\n\t\t\tbracketPairColorizationOptions = {\n\t\t\t\tenabled: !!config.editor.bracketPairColorization.enabled,\n\t\t\t\tindependentColorPoolPerBracketType: !!config.editor.bracketPairColorization.independentColorPoolPerBracketType\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tisForSimpleWidget: isForSimpleWidget,\n\t\t\ttabSize: tabSize,\n\t\t\tindentSize: indentSize,\n\t\t\tinsertSpaces: insertSpaces,\n\t\t\tdetectIndentation: detectIndentation,\n\t\t\tdefaultEOL: newDefaultEOL,\n\t\t\ttrimAutoWhitespace: trimAutoWhitespace,\n\t\t\tlargeFileOptimizations: largeFileOptimizations,\n\t\t\tbracketPairColorizationOptions\n\t\t};\n\t}\n\n\tprivate _getEOL(resource: URI | undefined, language: string): string {\n\t\tif (resource) {\n\t\t\treturn this._resourcePropertiesService.getEOL(resource, language);\n\t\t}\n\t\tconst eol = this._configurationService.getValue('files.eol', { overrideIdentifier: language });\n\t\tif (eol && typeof eol === 'string' && eol !== 'auto') {\n\t\t\treturn eol;\n\t\t}\n\t\treturn platform.OS === platform.OperatingSystem.Linux || platform.OS === platform.OperatingSystem.Macintosh ? '\\n' : '\\r\\n';\n\t}\n\n\tprivate _shouldRestoreUndoStack(): boolean {\n\t\tconst result = this._configurationService.getValue('files.restoreUndoStack');\n\t\tif (typeof result === 'boolean') {\n\t\t\treturn result;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic getCreationOptions(languageIdOrSelection: string | ILanguageSelection, resource: URI | undefined, isForSimpleWidget: boolean): ITextModelCreationOptions {\n\t\tconst language = (typeof languageIdOrSelection === 'string' ? languageIdOrSelection : languageIdOrSelection.languageId);\n\t\tlet creationOptions = this._modelCreationOptionsByLanguageAndResource[language + resource];\n\t\tif (!creationOptions) {\n\t\t\tconst editor = this._configurationService.getValue<IRawEditorConfig>('editor', { overrideIdentifier: language, resource });\n\t\t\tconst eol = this._getEOL(resource, language);\n\t\t\tcreationOptions = ModelService._readModelOptions({ editor, eol }, isForSimpleWidget);\n\t\t\tthis._modelCreationOptionsByLanguageAndResource[language + resource] = creationOptions;\n\t\t}\n\t\treturn creationOptions;\n\t}\n\n\tprivate _updateModelOptions(e: IConfigurationChangeEvent | undefined): void {\n\t\tconst oldOptionsByLanguageAndResource = this._modelCreationOptionsByLanguageAndResource;\n\t\tthis._modelCreationOptionsByLanguageAndResource = Object.create(null);\n\n\t\t// Update options on all models\n\t\tconst keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst modelId = keys[i];\n\t\t\tconst modelData = this._models[modelId];\n\t\t\tconst language = modelData.model.getLanguageId();\n\t\t\tconst uri = modelData.model.uri;\n\n\t\t\tif (e && !e.affectsConfiguration('editor', { overrideIdentifier: language, resource: uri }) && !e.affectsConfiguration('files.eol', { overrideIdentifier: language, resource: uri })) {\n\t\t\t\tcontinue; // perf: skip if this model is not affected by configuration change\n\t\t\t}\n\n\t\t\tconst oldOptions = oldOptionsByLanguageAndResource[language + uri];\n\t\t\tconst newOptions = this.getCreationOptions(language, uri, modelData.model.isForSimpleWidget);\n\t\t\tModelService._setModelOptionsForModel(modelData.model, newOptions, oldOptions);\n\t\t}\n\t}\n\n\tprivate static _setModelOptionsForModel(model: ITextModel, newOptions: ITextModelCreationOptions, currentOptions: ITextModelCreationOptions): void {\n\t\tif (currentOptions && currentOptions.defaultEOL !== newOptions.defaultEOL && model.getLineCount() === 1) {\n\t\t\tmodel.setEOL(newOptions.defaultEOL === DefaultEndOfLine.LF ? EndOfLineSequence.LF : EndOfLineSequence.CRLF);\n\t\t}\n\n\t\tif (currentOptions\n\t\t\t&& (currentOptions.detectIndentation === newOptions.detectIndentation)\n\t\t\t&& (currentOptions.insertSpaces === newOptions.insertSpaces)\n\t\t\t&& (currentOptions.tabSize === newOptions.tabSize)\n\t\t\t&& (currentOptions.indentSize === newOptions.indentSize)\n\t\t\t&& (currentOptions.trimAutoWhitespace === newOptions.trimAutoWhitespace)\n\t\t\t&& equals(currentOptions.bracketPairColorizationOptions, newOptions.bracketPairColorizationOptions)\n\t\t) {\n\t\t\t// Same indent opts, no need to touch the model\n\t\t\treturn;\n\t\t}\n\n\t\tif (newOptions.detectIndentation) {\n\t\t\tmodel.detectIndentation(newOptions.insertSpaces, newOptions.tabSize);\n\t\t\tmodel.updateOptions({\n\t\t\t\ttrimAutoWhitespace: newOptions.trimAutoWhitespace,\n\t\t\t\tbracketColorizationOptions: newOptions.bracketPairColorizationOptions\n\t\t\t});\n\t\t} else {\n\t\t\tmodel.updateOptions({\n\t\t\t\tinsertSpaces: newOptions.insertSpaces,\n\t\t\t\ttabSize: newOptions.tabSize,\n\t\t\t\tindentSize: newOptions.indentSize,\n\t\t\t\ttrimAutoWhitespace: newOptions.trimAutoWhitespace,\n\t\t\t\tbracketColorizationOptions: newOptions.bracketPairColorizationOptions\n\t\t\t});\n\t\t}\n\t}\n\n\t// --- begin IModelService\n\n\tprivate _insertDisposedModel(disposedModelData: DisposedModelInfo): void {\n\t\tthis._disposedModels.set(MODEL_ID(disposedModelData.uri), disposedModelData);\n\t\tthis._disposedModelsHeapSize += disposedModelData.heapSize;\n\t}\n\n\tprivate _removeDisposedModel(resource: URI): DisposedModelInfo | undefined {\n\t\tconst disposedModelData = this._disposedModels.get(MODEL_ID(resource));\n\t\tif (disposedModelData) {\n\t\t\tthis._disposedModelsHeapSize -= disposedModelData.heapSize;\n\t\t}\n\t\tthis._disposedModels.delete(MODEL_ID(resource));\n\t\treturn disposedModelData;\n\t}\n\n\tprivate _ensureDisposedModelsHeapSize(maxModelsHeapSize: number): void {\n\t\tif (this._disposedModelsHeapSize > maxModelsHeapSize) {\n\t\t\t// we must remove some old undo stack elements to free up some memory\n\t\t\tconst disposedModels: DisposedModelInfo[] = [];\n\t\t\tthis._disposedModels.forEach(entry => {\n\t\t\t\tif (!entry.sharesUndoRedoStack) {\n\t\t\t\t\tdisposedModels.push(entry);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdisposedModels.sort((a, b) => a.time - b.time);\n\t\t\twhile (disposedModels.length > 0 && this._disposedModelsHeapSize > maxModelsHeapSize) {\n\t\t\t\tconst disposedModel = disposedModels.shift()!;\n\t\t\t\tthis._removeDisposedModel(disposedModel.uri);\n\t\t\t\tif (disposedModel.initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(disposedModel.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _createModelData(value: string | ITextBufferFactory, languageIdOrSelection: string | ILanguageSelection, resource: URI | undefined, isForSimpleWidget: boolean): ModelData {\n\t\t// create & save the model\n\t\tconst options = this.getCreationOptions(languageIdOrSelection, resource, isForSimpleWidget);\n\t\tconst model: TextModel = this._instantiationService.createInstance(TextModel,\n\t\t\tvalue,\n\t\t\tlanguageIdOrSelection,\n\t\t\toptions,\n\t\t\tresource\n\t\t);\n\t\tif (resource && this._disposedModels.has(MODEL_ID(resource))) {\n\t\t\tconst disposedModelData = this._removeDisposedModel(resource)!;\n\t\t\tconst elements = this._undoRedoService.getElements(resource);\n\t\t\tconst sha1Computer = this._getSHA1Computer();\n\t\t\tconst sha1IsEqual = (\n\t\t\t\tsha1Computer.canComputeSHA1(model)\n\t\t\t\t\t? sha1Computer.computeSHA1(model) === disposedModelData.sha1\n\t\t\t\t\t: false\n\t\t\t);\n\t\t\tif (sha1IsEqual || disposedModelData.sharesUndoRedoStack) {\n\t\t\t\tfor (const element of elements.past) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(resource)) {\n\t\t\t\t\t\telement.setModel(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const element of elements.future) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(resource)) {\n\t\t\t\t\t\telement.setModel(model);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._undoRedoService.setElementsValidFlag(resource, true, (element) => (isEditStackElement(element) && element.matchesResource(resource)));\n\t\t\t\tif (sha1IsEqual) {\n\t\t\t\t\tmodel._overwriteVersionId(disposedModelData.versionId);\n\t\t\t\t\tmodel._overwriteAlternativeVersionId(disposedModelData.alternativeVersionId);\n\t\t\t\t\tmodel._overwriteInitialUndoRedoSnapshot(disposedModelData.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (disposedModelData.initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(disposedModelData.initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst modelId = MODEL_ID(model.uri);\n\n\t\tif (this._models[modelId]) {\n\t\t\t// There already exists a model with this id => this is a programmer error\n\t\t\tthrow new Error('ModelService: Cannot add model because it already exists!');\n\t\t}\n\n\t\tconst modelData = new ModelData(\n\t\t\tmodel,\n\t\t\t(model) => this._onWillDispose(model),\n\t\t\t(model, e) => this._onDidChangeLanguage(model, e)\n\t\t);\n\t\tthis._models[modelId] = modelData;\n\n\t\treturn modelData;\n\t}\n\n\tpublic createModel(value: string | ITextBufferFactory, languageSelection: ILanguageSelection | null, resource?: URI, isForSimpleWidget: boolean = false): ITextModel {\n\t\tlet modelData: ModelData;\n\n\t\tif (languageSelection) {\n\t\t\tmodelData = this._createModelData(value, languageSelection, resource, isForSimpleWidget);\n\t\t} else {\n\t\t\tmodelData = this._createModelData(value, PLAINTEXT_LANGUAGE_ID, resource, isForSimpleWidget);\n\t\t}\n\n\t\tthis._onModelAdded.fire(modelData.model);\n\n\t\treturn modelData.model;\n\t}\n\n\tpublic getModels(): ITextModel[] {\n\t\tconst ret: ITextModel[] = [];\n\n\t\tconst keys = Object.keys(this._models);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst modelId = keys[i];\n\t\t\tret.push(this._models[modelId].model);\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tpublic getModel(resource: URI): ITextModel | null {\n\t\tconst modelId = MODEL_ID(resource);\n\t\tconst modelData = this._models[modelId];\n\t\tif (!modelData) {\n\t\t\treturn null;\n\t\t}\n\t\treturn modelData.model;\n\t}\n\n\t// --- end IModelService\n\n\tprotected _schemaShouldMaintainUndoRedoElements(resource: URI) {\n\t\treturn (\n\t\t\tresource.scheme === Schemas.file\n\t\t\t|| resource.scheme === Schemas.vscodeRemote\n\t\t\t|| resource.scheme === Schemas.vscodeUserData\n\t\t\t|| resource.scheme === Schemas.vscodeNotebookCell\n\t\t\t|| resource.scheme === 'fake-fs' // for tests\n\t\t);\n\t}\n\n\tprivate _onWillDispose(model: ITextModel): void {\n\t\tconst modelId = MODEL_ID(model.uri);\n\t\tconst modelData = this._models[modelId];\n\n\t\tconst sharesUndoRedoStack = (this._undoRedoService.getUriComparisonKey(model.uri) !== model.uri.toString());\n\t\tlet maintainUndoRedoStack = false;\n\t\tlet heapSize = 0;\n\t\tif (sharesUndoRedoStack || (this._shouldRestoreUndoStack() && this._schemaShouldMaintainUndoRedoElements(model.uri))) {\n\t\t\tconst elements = this._undoRedoService.getElements(model.uri);\n\t\t\tif (elements.past.length > 0 || elements.future.length > 0) {\n\t\t\t\tfor (const element of elements.past) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(model.uri)) {\n\t\t\t\t\t\tmaintainUndoRedoStack = true;\n\t\t\t\t\t\theapSize += element.heapSize(model.uri);\n\t\t\t\t\t\telement.setModel(model.uri); // remove reference from text buffer instance\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const element of elements.future) {\n\t\t\t\t\tif (isEditStackElement(element) && element.matchesResource(model.uri)) {\n\t\t\t\t\t\tmaintainUndoRedoStack = true;\n\t\t\t\t\t\theapSize += element.heapSize(model.uri);\n\t\t\t\t\t\telement.setModel(model.uri); // remove reference from text buffer instance\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst maxMemory = ModelService.MAX_MEMORY_FOR_CLOSED_FILES_UNDO_STACK;\n\t\tconst sha1Computer = this._getSHA1Computer();\n\t\tif (!maintainUndoRedoStack) {\n\t\t\tif (!sharesUndoRedoStack) {\n\t\t\t\tconst initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\t\t\t\tif (initialUndoRedoSnapshot !== null) {\n\t\t\t\t\tthis._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!sharesUndoRedoStack && (heapSize > maxMemory || !sha1Computer.canComputeSHA1(model))) {\n\t\t\t// the undo stack for this file would never fit in the configured memory or the file is very large, so don't bother with it.\n\t\t\tconst initialUndoRedoSnapshot = modelData.model.getInitialUndoRedoSnapshot();\n\t\t\tif (initialUndoRedoSnapshot !== null) {\n\t\t\t\tthis._undoRedoService.restoreSnapshot(initialUndoRedoSnapshot);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._ensureDisposedModelsHeapSize(maxMemory - heapSize);\n\t\t\t// We only invalidate the elements, but they remain in the undo-redo service.\n\t\t\tthis._undoRedoService.setElementsValidFlag(model.uri, false, (element) => (isEditStackElement(element) && element.matchesResource(model.uri)));\n\t\t\tthis._insertDisposedModel(new DisposedModelInfo(model.uri, modelData.model.getInitialUndoRedoSnapshot(), Date.now(), sharesUndoRedoStack, heapSize, sha1Computer.computeSHA1(model), model.getVersionId(), model.getAlternativeVersionId()));\n\t\t}\n\n\t\tdelete this._models[modelId];\n\t\tmodelData.dispose();\n\n\t\t// clean up cache\n\t\tdelete this._modelCreationOptionsByLanguageAndResource[model.getLanguageId() + model.uri];\n\n\t\tthis._onModelRemoved.fire(model);\n\t}\n\n\tprivate _onDidChangeLanguage(model: ITextModel, e: IModelLanguageChangedEvent): void {\n\t\tconst oldLanguageId = e.oldLanguage;\n\t\tconst newLanguageId = model.getLanguageId();\n\t\tconst oldOptions = this.getCreationOptions(oldLanguageId, model.uri, model.isForSimpleWidget);\n\t\tconst newOptions = this.getCreationOptions(newLanguageId, model.uri, model.isForSimpleWidget);\n\t\tModelService._setModelOptionsForModel(model, newOptions, oldOptions);\n\t\tthis._onModelModeChanged.fire({ model, oldLanguageId: oldLanguageId });\n\t}\n\n\tprotected _getSHA1Computer(): ITextModelSHA1Computer {\n\t\treturn new DefaultModelSHA1Computer();\n\t}\n}\n\nexport interface ITextModelSHA1Computer {\n\tcanComputeSHA1(model: ITextModel): boolean;\n\tcomputeSHA1(model: ITextModel): string;\n}\n\nexport class DefaultModelSHA1Computer implements ITextModelSHA1Computer {\n\n\tpublic static MAX_MODEL_SIZE = 10 * 1024 * 1024; // takes 200ms to compute a sha1 on a 10MB model on a new machine\n\n\tcanComputeSHA1(model: ITextModel): boolean {\n\t\treturn (model.getValueLength() <= DefaultModelSHA1Computer.MAX_MODEL_SIZE);\n\t}\n\n\tcomputeSHA1(model: ITextModel): string {\n\t\t// compute the sha1\n\t\tconst shaComputer = new StringSHA1();\n\t\tconst snapshot = model.createSnapshot();\n\t\tlet text: string | null;\n\t\twhile ((text = snapshot.read())) {\n\t\t\tshaComputer.update(text);\n\t\t}\n\t\treturn shaComputer.digest();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}