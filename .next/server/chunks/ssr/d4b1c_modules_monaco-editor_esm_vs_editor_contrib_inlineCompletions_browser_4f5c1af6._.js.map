{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/commandIds.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/controller/commandIds.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/vs/editor/contrib/inlineCompletions/browser/controller/commandIds.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\n\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\n\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n\nexport const jumpToNextInlineEditId = 'editor.action.inlineSuggest.jump';\n\nexport const hideInlineCompletionId = 'editor.action.inlineSuggest.hide';\n\nexport const toggleShowCollapsedId = 'editor.action.inlineSuggest.toggleShowCollapsed';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\n\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\n\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n\nexport const jumpToNextInlineEditId = 'editor.action.inlineSuggest.jump';\n\nexport const hideInlineCompletionId = 'editor.action.inlineSuggest.hide';\n\nexport const toggleShowCollapsedId = 'editor.action.inlineSuggest.toggleShowCollapsed';\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;AAEzF,MAAM,qBAAqB,GAAG,oCAAoC,CAAC;AAEnE,MAAM,oCAAoC,GAAG,0CAA0C,CAAC;AAExF,MAAM,gCAAgC,GAAG,sCAAsC,CAAC;AAEhF,MAAM,sBAAsB,GAAG,kCAAkC,CAAC;AAElE,MAAM,sBAAsB,GAAG,kCAAkC,CAAC;AAElE,MAAM,qBAAqB,GAAG,iDAAiD,CAAC","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hintsWidget/vs/editor/contrib/inlineCompletions/browser/hintsWidget/inlineCompletionsHintsWidget.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h, n } from '../../../../../base/browser/dom.js';\nimport { renderMarkdown } from '../../../../../base/browser/markdownRenderer.js';\nimport { ActionViewItem } from '../../../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, IAction, Separator } from '../../../../../base/common/actions.js';\nimport { equals } from '../../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../../base/common/async.js';\nimport { Codicon } from '../../../../../base/common/codicons.js';\nimport { createHotClass } from '../../../../../base/common/hotReloadHelpers.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, derived, derivedObservableWithCache, observableFromEvent } from '../../../../../base/common/observable.js';\nimport { OS } from '../../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../../base/common/themables.js';\nimport { localize } from '../../../../../nls.js';\nimport { MenuEntryActionViewItem, getActionBarActions } from '../../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { IMenuWorkbenchToolBarOptions, WorkbenchToolBar } from '../../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../../platform/theme/common/iconRegistry.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { InlineCompletionCommand, InlineCompletionTriggerKind, InlineCompletionWarning } from '../../../../common/languages.js';\nimport { PositionAffinity } from '../../../../common/model.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from '../controller/commandIds.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport './inlineCompletionsHintsWidget.css';\n\nexport class InlineCompletionsHintsWidget extends Disposable {\n\tprivate readonly alwaysShowToolbar;\n\n\tprivate sessionPosition: Position | undefined;\n\n\tprivate readonly position;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly model: IObservable<InlineCompletionsModel | undefined>,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis.alwaysShowToolbar = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineSuggest).showToolbar === 'always');\n\t\tthis.sessionPosition = undefined;\n\t\tthis.position = derived(this, reader => {\n\t\t\tconst ghostText = this.model.read(reader)?.primaryGhostText.read(reader);\n\n\t\t\tif (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n\t\t\t\tthis.sessionPosition = undefined;\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst firstColumn = ghostText.parts[0].column;\n\t\t\tif (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n\t\t\t\tthis.sessionPosition = undefined;\n\t\t\t}\n\n\t\t\tconst position = new Position(ghostText.lineNumber, Math.min(firstColumn, this.sessionPosition?.column ?? Number.MAX_SAFE_INTEGER));\n\t\t\tthis.sessionPosition = position;\n\t\t\treturn position;\n\t\t});\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\t/** @description setup content widget */\n\t\t\tconst model = this.model.read(reader);\n\t\t\tif (!model || !this.alwaysShowToolbar.read(reader)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst contentWidgetValue = derived((reader) => {\n\t\t\t\tconst contentWidget = reader.store.add(this.instantiationService.createInstance(\n\t\t\t\t\tInlineSuggestionHintsContentWidget.hot.read(reader),\n\t\t\t\t\tthis.editor,\n\t\t\t\t\ttrue,\n\t\t\t\t\tthis.position,\n\t\t\t\t\tmodel.selectedInlineCompletionIndex,\n\t\t\t\t\tmodel.inlineCompletionsCount,\n\t\t\t\t\tmodel.activeCommands,\n\t\t\t\t\tmodel.warning,\n\t\t\t\t\t() => { },\n\t\t\t\t));\n\t\t\t\teditor.addContentWidget(contentWidget);\n\t\t\t\treader.store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n\n\t\t\t\treader.store.add(autorun(reader => {\n\t\t\t\t\t/** @description request explicit */\n\t\t\t\t\tconst position = this.position.read(reader);\n\t\t\t\t\tif (!position) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n\t\t\t\t\t\tmodel.triggerExplicitly();\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\treturn contentWidget;\n\t\t\t});\n\n\t\t\tconst hadPosition = derivedObservableWithCache(this, (reader, lastValue) => !!this.position.read(reader) || !!lastValue);\n\t\t\tstore.add(autorun(reader => {\n\t\t\t\tif (hadPosition.read(reader)) {\n\t\t\t\t\tcontentWidgetValue.read(reader);\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\t}\n}\n\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\n\nexport class InlineSuggestionHintsContentWidget extends Disposable implements IContentWidget {\n\tpublic static readonly hot = createHotClass(InlineSuggestionHintsContentWidget);\n\n\tprivate static _dropDownVisible = false;\n\tpublic static get dropDownVisible() { return this._dropDownVisible; }\n\n\tprivate static id = 0;\n\n\tprivate readonly id;\n\tpublic readonly allowEditorOverflow;\n\tpublic readonly suppressMouseDown;\n\n\tprivate readonly _warningMessageContentNode;\n\n\tprivate readonly _warningMessageNode;\n\n\tprivate readonly nodes;\n\n\tprivate createCommandAction(commandId: string, label: string, iconClassName: string): Action {\n\t\tconst action = new Action(\n\t\t\tcommandId,\n\t\t\tlabel,\n\t\t\ticonClassName,\n\t\t\ttrue,\n\t\t\t() => this._commandService.executeCommand(commandId),\n\t\t);\n\t\tconst kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n\t\tlet tooltip = label;\n\t\tif (kb) {\n\t\t\ttooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n\t\t}\n\t\taction.tooltip = tooltip;\n\t\treturn action;\n\t}\n\n\tprivate readonly previousAction;\n\tprivate readonly availableSuggestionCountAction;\n\tprivate readonly nextAction;\n\n\tprivate readonly toolBar: CustomizedMenuWorkbenchToolBar;\n\n\t// TODO@hediet: deprecate MenuId.InlineCompletionsActions\n\tprivate readonly inlineCompletionsActionsMenus;\n\n\tprivate readonly clearAvailableSuggestionCountLabelDebounced;\n\n\tprivate readonly disableButtonsDebounced;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly withBorder: boolean,\n\t\tprivate readonly _position: IObservable<Position | null>,\n\t\tprivate readonly _currentSuggestionIdx: IObservable<number>,\n\t\tprivate readonly _suggestionCount: IObservable<number | undefined>,\n\t\tprivate readonly _extraCommands: IObservable<InlineCompletionCommand[]>,\n\t\tprivate readonly _warning: IObservable<InlineCompletionWarning | undefined>,\n\t\tprivate readonly _relayout: () => void,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t) {\n\t\tsuper();\n\t\tthis.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n\t\tthis.allowEditorOverflow = true;\n\t\tthis.suppressMouseDown = false;\n\t\tthis._warningMessageContentNode = derived((reader) => {\n\t\t\tconst warning = this._warning.read(reader);\n\t\t\tif (!warning) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif (typeof warning.message === 'string') {\n\t\t\t\treturn warning.message;\n\t\t\t}\n\t\t\tconst markdownElement = reader.store.add(renderMarkdown(warning.message));\n\t\t\treturn markdownElement.element;\n\t\t});\n\t\tthis._warningMessageNode = n.div({\n\t\t\tclass: 'warningMessage',\n\t\t\tstyle: {\n\t\t\t\tmaxWidth: 400,\n\t\t\t\tmargin: 4,\n\t\t\t\tmarginBottom: 4,\n\t\t\t\tdisplay: derived(reader => this._warning.read(reader) ? 'block' : 'none'),\n\t\t\t}\n\t\t}, [\n\t\t\tthis._warningMessageContentNode,\n\t\t]).keepUpdated(this._store);\n\t\tthis.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? 'monaco-hover monaco-hover-content' : '' }, [\n\t\t\tthis._warningMessageNode.element,\n\t\t\th('div@toolBar'),\n\t\t]);\n\t\tthis.previousAction = this._register(this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon)));\n\t\tthis.availableSuggestionCountAction = this._register(new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false));\n\t\tthis.nextAction = this._register(this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon)));\n\t\tthis.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(\n\t\t\tMenuId.InlineCompletionsActions,\n\t\t\tthis._contextKeyService\n\t\t));\n\t\tthis.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n\t\t\tthis.availableSuggestionCountAction.label = '';\n\t\t}, 100));\n\t\tthis.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n\t\t\tthis.previousAction.enabled = this.nextAction.enabled = false;\n\t\t}, 100));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._warningMessageContentNode.read(reader);\n\t\t\tthis._warningMessageNode.readEffect(reader);\n\t\t\t// Only update after the warning message node has been rendered\n\t\t\tthis._relayout();\n\t\t}));\n\n\t\tthis.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n\t\t\tmenuOptions: { renderShortTitle: true },\n\t\t\ttoolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n\t\t\tactionViewItemProvider: (action, options) => {\n\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\treturn instantiationService.createInstance(StatusBarViewItem, action, undefined);\n\t\t\t\t}\n\t\t\t\tif (action === this.availableSuggestionCountAction) {\n\t\t\t\t\tconst a = new ActionViewItemWithClassName(undefined, action, { label: true, icon: false });\n\t\t\t\t\ta.setClass('availableSuggestionCount');\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\ttelemetrySource: 'InlineSuggestionToolbar',\n\t\t}));\n\n\t\tthis.toolBar.setPrependedPrimaryActions([\n\t\t\tthis.previousAction,\n\t\t\tthis.availableSuggestionCountAction,\n\t\t\tthis.nextAction,\n\t\t]);\n\n\t\tthis._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n\t\t\tInlineSuggestionHintsContentWidget._dropDownVisible = e;\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update position */\n\t\t\tthis._position.read(reader);\n\t\t\tthis.editor.layoutContentWidget(this);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description counts */\n\t\t\tconst suggestionCount = this._suggestionCount.read(reader);\n\t\t\tconst currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n\n\t\t\tif (suggestionCount !== undefined) {\n\t\t\t\tthis.clearAvailableSuggestionCountLabelDebounced.cancel();\n\t\t\t\tthis.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n\t\t\t} else {\n\t\t\t\tthis.clearAvailableSuggestionCountLabelDebounced.schedule();\n\t\t\t}\n\n\t\t\tif (suggestionCount !== undefined && suggestionCount > 1) {\n\t\t\t\tthis.disableButtonsDebounced.cancel();\n\t\t\t\tthis.previousAction.enabled = this.nextAction.enabled = true;\n\t\t\t} else {\n\t\t\t\tthis.disableButtonsDebounced.schedule();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description extra commands */\n\t\t\tconst extraCommands = this._extraCommands.read(reader);\n\t\t\tconst extraActions = extraCommands.map<IAction>(c => ({\n\t\t\t\tclass: undefined,\n\t\t\t\tid: c.command.id,\n\t\t\t\tenabled: true,\n\t\t\t\ttooltip: c.command.tooltip || '',\n\t\t\t\tlabel: c.command.title,\n\t\t\t\trun: (event) => {\n\t\t\t\t\treturn this._commandService.executeCommand(c.command.id);\n\t\t\t\t},\n\t\t\t}));\n\n\t\t\tfor (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n\t\t\t\tfor (const action of group) {\n\t\t\t\t\tif (action instanceof MenuItemAction) {\n\t\t\t\t\t\textraActions.push(action);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extraActions.length > 0) {\n\t\t\t\textraActions.unshift(new Separator());\n\t\t\t}\n\n\t\t\tthis.toolBar.setAdditionalSecondaryActions(extraActions);\n\t\t}));\n\t}\n\n\tgetId(): string { return this.id; }\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.nodes.root;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: this._position.get(),\n\t\t\tpreference: [ContentWidgetPositionPreference.ABOVE, ContentWidgetPositionPreference.BELOW],\n\t\t\tpositionAffinity: PositionAffinity.LeftOfInjectedText,\n\t\t};\n\t}\n}\n\nclass ActionViewItemWithClassName extends ActionViewItem {\n\tprivate _className: string | undefined = undefined;\n\n\tsetClass(className: string | undefined): void {\n\t\tthis._className = className;\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tif (this._className) {\n\t\t\tcontainer.classList.add(this._className);\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\n\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService, true);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst div = h('div.keybinding').root;\n\n\t\t\tconst k = this._register(new KeybindingLabel(div, OS, { disableTitle: true, ...unthemedKeybindingLabelOptions }));\n\t\t\tk.set(kb);\n\t\t\tthis.label.textContent = this._action.label;\n\t\t\tthis.label.appendChild(div);\n\t\t\tthis.label.classList.add('inlineSuggestionStatusBarItemLabel');\n\t\t}\n\t}\n\n\tprotected override updateTooltip(): void {\n\t\t// NOOP, disable tooltip\n\t}\n}\n\nexport class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n\tprivate readonly menu;\n\tprivate additionalActions: IAction[];\n\tprivate prependedPrimaryActions: IAction[];\n\tprivate additionalPrimaryActions: IAction[];\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate readonly menuId: MenuId,\n\t\tprivate readonly options2: IMenuWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService private readonly menuService: IMenuService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(container, { resetMenu: menuId, ...options2 }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n\t\tthis.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n\t\tthis.additionalActions = [];\n\t\tthis.prependedPrimaryActions = [];\n\t\tthis.additionalPrimaryActions = [];\n\n\t\tthis._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n\t\tthis.updateToolbar();\n\t}\n\n\tprivate updateToolbar(): void {\n\t\tconst { primary, secondary } = getActionBarActions(\n\t\t\tthis.menu.getActions(this.options2?.menuOptions),\n\t\t\tthis.options2?.toolbarOptions?.primaryGroup, this.options2?.toolbarOptions?.shouldInlineSubmenu, this.options2?.toolbarOptions?.useSeparatorsInPrimaryActions\n\t\t);\n\n\t\tsecondary.push(...this.additionalActions);\n\t\tprimary.unshift(...this.prependedPrimaryActions);\n\t\tprimary.push(...this.additionalPrimaryActions);\n\t\tthis.setActions(primary, secondary);\n\t}\n\n\tsetPrependedPrimaryActions(actions: IAction[]): void {\n\t\tif (equals(this.prependedPrimaryActions, actions, (a, b) => a === b)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prependedPrimaryActions = actions;\n\t\tthis.updateToolbar();\n\t}\n\n\tsetAdditionalSecondaryActions(actions: IAction[]): void {\n\t\tif (equals(this.additionalActions, actions, (a, b) => a === b)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.additionalActions = actions;\n\t\tthis.updateToolbar();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionContextKeys.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionContextKeys.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RawContextKey } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { localize } from '../../../../../nls.js';\nimport * as nls from '../../../../../nls.js';\n\nexport abstract class InlineCompletionContextKeys {\n\n\tpublic static readonly inlineSuggestionVisible = new RawContextKey<boolean>('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\n\tpublic static readonly inlineSuggestionHasIndentation = new RawContextKey<boolean>('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\n\tpublic static readonly inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey<boolean>('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\n\tpublic static readonly suppressSuggestions = new RawContextKey<boolean | undefined>('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\"));\n\n\tpublic static readonly cursorBeforeGhostText = new RawContextKey<boolean | undefined>('cursorBeforeGhostText', false, localize('cursorBeforeGhostText', \"Whether the cursor is at ghost text\"));\n\n\tpublic static readonly cursorInIndentation = new RawContextKey<boolean | undefined>('cursorInIndentation', false, localize('cursorInIndentation', \"Whether the cursor is in indentation\"));\n\tpublic static readonly hasSelection = new RawContextKey<boolean | undefined>('editor.hasSelection', false, localize('editor.hasSelection', \"Whether the editor has a selection\"));\n\tpublic static readonly cursorAtInlineEdit = new RawContextKey<boolean | undefined>('cursorAtInlineEdit', false, localize('cursorAtInlineEdit', \"Whether the cursor is at an inline edit\"));\n\tpublic static readonly inlineEditVisible = new RawContextKey<boolean>('inlineEditIsVisible', false, localize('inlineEditVisible', \"Whether an inline edit is visible\"));\n\tpublic static readonly tabShouldJumpToInlineEdit = new RawContextKey<boolean | undefined>('tabShouldJumpToInlineEdit', false, localize('tabShouldJumpToInlineEdit', \"Whether tab should jump to an inline edit.\"));\n\tpublic static readonly tabShouldAcceptInlineEdit = new RawContextKey<boolean | undefined>('tabShouldAcceptInlineEdit', false, localize('tabShouldAcceptInlineEdit', \"Whether tab should accept the inline edit.\"));\n\n\tpublic static readonly inInlineEditsPreviewEditor = new RawContextKey<boolean>('inInlineEditsPreviewEditor', true, nls.localize('inInlineEditsPreviewEditor', \"Whether the current code editor is showing an inline edits preview\"));\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,aAAa,EAAE,MAAM,yDAAyD,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;;;;AAG3C,MAAgB,2BAA2B;;QAEzB,IAAA,CAAA,uBAAuB,GAAG,IAAI,gNAAa,CAAU,yBAAyB,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAyB,EAAE,yCAAyC,CAAC,CAAC,CAAC;IAAA,CAAA;;QACvK,IAAA,CAAA,8BAA8B,GAAG,IAAI,gNAAa,CAAU,gCAAgC,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAgC,EAAE,sDAAsD,CAAC,CAAC,CAAC;IAAA,CAAA;;QACzM,IAAA,CAAA,6CAA6C,GAAG,IAAI,gNAAa,CAAU,+CAA+C,EAAE,IAAI,MAAE,gLAAQ,EAAC,IAA+C,EAAE,sGAAsG,CAAC,CAAC,CAAC;IAAA,CAAA;;QACrS,IAAA,CAAA,mBAAmB,GAAG,IAAI,gNAAa,CAAsB,qCAAqC,EAAE,SAAS,MAAE,gLAAQ,EAAC,IAAqB,EAAE,qEAAqE,CAAC,CAAC,CAAC;IAAA,CAAA;;QAEvN,IAAA,CAAA,qBAAqB,GAAG,IAAI,gNAAa,CAAsB,uBAAuB,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAuB,EAAE,qCAAqC,CAAC,CAAC,CAAC;IAAA,CAAA;;QAEzK,IAAA,CAAA,mBAAmB,GAAG,IAAI,gNAAa,CAAsB,qBAAqB,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAqB,EAAE,sCAAsC,CAAC,CAAC,CAAC;IAAA,CAAA;;QACpK,IAAA,CAAA,YAAY,GAAG,IAAI,gNAAa,CAAsB,qBAAqB,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAqB,EAAE,oCAAoC,CAAC,CAAC,CAAC;IAAA,CAAA;;QAC3J,IAAA,CAAA,kBAAkB,GAAG,IAAI,gNAAa,CAAsB,oBAAoB,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAoB,EAAE,yCAAyC,CAAC,CAAC,CAAC;IAAA,CAAA;;QACpK,IAAA,CAAA,iBAAiB,GAAG,IAAI,gNAAa,CAAU,qBAAqB,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAAmB,EAAE,mCAAmC,CAAC,CAAC,CAAC;IAAA,CAAA;;QACjJ,IAAA,CAAA,yBAAyB,GAAG,IAAI,gNAAa,CAAsB,2BAA2B,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAA2B,EAAE,4CAA4C,CAAC,CAAC,CAAC;IAAA,CAAA;;QAC5L,IAAA,CAAA,yBAAyB,GAAG,IAAI,gNAAa,CAAsB,2BAA2B,EAAE,KAAK,MAAE,gLAAQ,EAAC,IAA2B,EAAE,4CAA4C,CAAC,CAAC,CAAC;IAAA,CAAA;;QAE5L,IAAA,CAAA,0BAA0B,GAAG,IAAI,gNAAa,CAAU,4BAA4B,EAAE,IAAI,EAAE,GAAG,CAAC,4KAAQ,CAAC,IAA4B,EAAE,oEAAoE,CAAC,CAAC,CAAC;IAAA,CAAA","debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/structuredLogger.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/structuredLogger.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/vs/editor/contrib/inlineCompletions/browser/structuredLogger.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, observableFromEvent } from '../../../../base/common/observable.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IDataChannelService } from '../../../../platform/dataChannel/common/dataChannel.js';\n\nexport interface IRecordableLogEntry {\n\tsourceId: string;\n\ttime: number;\n}\n\nexport interface IRecordableEditorLogEntry extends IRecordableLogEntry {\n\tmodelUri: URI; // This has to be a URI, so that it gets translated automatically in remote scenarios\n\tmodelVersion: number;\n}\n\nexport interface IDocumentEventDataSetChangeReason {\n\tsourceId: 'TextModel.setChangeReason';\n\tsource: 'inlineSuggestion.accept' | 'snippet' | string;\n}\n\n\n/**\n * The sourceLabel must not contain '@'!\n*/\nexport function formatRecordableLogEntry<T extends IRecordableLogEntry>(entry: T): string {\n\treturn entry.sourceId + ' @@ ' + JSON.stringify({ ...entry, modelUri: (entry as any).modelUri?.toString(), sourceId: undefined });\n}\n\nexport class StructuredLogger<T extends IRecordableLogEntry> extends Disposable {\n\tpublic static cast<T extends IRecordableLogEntry>(): typeof StructuredLogger<T> {\n\t\treturn this as typeof StructuredLogger<T>;\n\t}\n\n\tpublic readonly isEnabled;\n\tprivate readonly _isEnabledContextKeyValue;\n\n\tconstructor(\n\t\tprivate readonly _key: string,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IDataChannelService private readonly _dataChannelService: IDataChannelService,\n\t) {\n\t\tsuper();\n\t\tthis._isEnabledContextKeyValue = observableContextKey<boolean>('structuredLogger.enabled:' + this._key, this._contextKeyService).recomputeInitiallyAndOnChange(this._store);\n\t\tthis.isEnabled = this._isEnabledContextKeyValue.map(v => v !== undefined);\n\t}\n\n\tpublic log(data: T): boolean {\n\t\tconst enabled = this._isEnabledContextKeyValue.get();\n\t\tif (!enabled) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._dataChannelService.getDataChannel<T>('structuredLogger:' + this._key).sendData(data);\n\t\treturn true;\n\t}\n}\n\nfunction observableContextKey<T>(key: string, contextKeyService: IContextKeyService): IObservable<T | undefined> {\n\treturn observableFromEvent(contextKeyService.onDidChangeContext, () => contextKeyService.getContextKeyValue<T>(key));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, observableFromEvent } from '../../../../base/common/observable.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IDataChannelService } from '../../../../platform/dataChannel/common/dataChannel.js';\n\nexport interface IRecordableLogEntry {\n\tsourceId: string;\n\ttime: number;\n}\n\nexport interface IRecordableEditorLogEntry extends IRecordableLogEntry {\n\tmodelUri: URI; // This has to be a URI, so that it gets translated automatically in remote scenarios\n\tmodelVersion: number;\n}\n\nexport interface IDocumentEventDataSetChangeReason {\n\tsourceId: 'TextModel.setChangeReason';\n\tsource: 'inlineSuggestion.accept' | 'snippet' | string;\n}\n\n\n/**\n * The sourceLabel must not contain '@'!\n*/\nexport function formatRecordableLogEntry<T extends IRecordableLogEntry>(entry: T): string {\n\treturn entry.sourceId + ' @@ ' + JSON.stringify({ ...entry, modelUri: (entry as any).modelUri?.toString(), sourceId: undefined });\n}\n\nexport class StructuredLogger<T extends IRecordableLogEntry> extends Disposable {\n\tpublic static cast<T extends IRecordableLogEntry>(): typeof StructuredLogger<T> {\n\t\treturn this as typeof StructuredLogger<T>;\n\t}\n\n\tpublic readonly isEnabled;\n\tprivate readonly _isEnabledContextKeyValue;\n\n\tconstructor(\n\t\tprivate readonly _key: string,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IDataChannelService private readonly _dataChannelService: IDataChannelService,\n\t) {\n\t\tsuper();\n\t\tthis._isEnabledContextKeyValue = observableContextKey<boolean>('structuredLogger.enabled:' + this._key, this._contextKeyService).recomputeInitiallyAndOnChange(this._store);\n\t\tthis.isEnabled = this._isEnabledContextKeyValue.map(v => v !== undefined);\n\t}\n\n\tpublic log(data: T): boolean {\n\t\tconst enabled = this._isEnabledContextKeyValue.get();\n\t\tif (!enabled) {\n\t\t\treturn false;\n\t\t}\n\t\tthis._dataChannelService.getDataChannel<T>('structuredLogger:' + this._key).sendData(data);\n\t\treturn true;\n\t}\n}\n\nfunction observableContextKey<T>(key: string, contextKeyService: IContextKeyService): IObservable<T | undefined> {\n\treturn observableFromEvent(contextKeyService.onDidChangeContext, () => contextKeyService.getContextKeyValue<T>(key));\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;AAEhG,OAAO,EAAE,UAAU,EAAE,MAAM,sCAAsC,CAAC;AAClE,OAAO,EAAe,mBAAmB,EAAE,MAAM,uCAAuC,CAAC;;AAEzF,OAAO,EAAE,kBAAkB,EAAE,MAAM,sDAAsD,CAAC;AAC1F,OAAO,EAAE,mBAAmB,EAAE,MAAM,wDAAwD,CAAC;;;;;;;;;;;;;;;;;AAqBvF,SAAU,wBAAwB,CAAgC,KAAQ;IAC/E,OAAO,KAAK,CAAC,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QAAE,GAAG,KAAK;QAAE,QAAQ,EAAG,KAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE;QAAE,QAAQ,EAAE,SAAS;IAAA,CAAE,CAAC,CAAC;AACnI,CAAC;AAEM,IAAM,gBAAgB,GAAA,qBAAtB,MAAM,gBAAgD,SAAQ,0LAAU;IACvE,MAAM,CAAC,IAAI,GAAA;QACjB,OAAO,IAAkC,CAAC;IAC3C,CAAC;IAKD,YACkB,IAAY,EACQ,kBAAsC,EACrC,mBAAwC,CAAA;QAE9E,KAAK,EAAE,CAAC;QAJS,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAQ;QACQ,IAAA,CAAA,kBAAkB,GAAlB,kBAAkB,CAAoB;QACrC,IAAA,CAAA,mBAAmB,GAAnB,mBAAmB,CAAqB;QAG9E,IAAI,CAAC,yBAAyB,GAAG,oBAAoB,CAAU,2BAA2B,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5K,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,KAAK,SAAS,CAAC,CAAC;IAC3E,CAAC;IAEM,GAAG,CAAC,IAAO,EAAA;QACjB,MAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,KAAK,CAAC;QACd,CAAC;QACD,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAI,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3F,OAAO,IAAI,CAAC;IACb,CAAC;CACD,CAAA;AA1BY,gBAAgB,GAAA,qBAAA,WAAA;IAU1B,QAAA,GAAA,qNAAkB,CAAA;IAClB,QAAA,GAAA,wNAAmB,CAAA;GAXT,gBAAgB,CA0B5B;;AAED,SAAS,oBAAoB,CAAI,GAAW,EAAE,iBAAqC;IAClF,WAAO,qNAAmB,EAAC,iBAAiB,CAAC,kBAAkB,EAAE,GAAG,CAAG,CAAD,gBAAkB,CAAC,kBAAkB,CAAI,GAAG,CAAC,CAAC,CAAC;AACtH,CAAC","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/changeRecorder.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/changeRecorder.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/changeRecorder.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, observableFromEvent } from '../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { canLog, ILoggerService, LogLevel } from '../../../../../platform/log/common/log.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { CodeEditorWidget } from '../../../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { IDocumentEventDataSetChangeReason, IRecordableEditorLogEntry, StructuredLogger } from '../structuredLogger.js';\n\nexport class TextModelChangeRecorder extends Disposable {\n\tprivate readonly _structuredLogger;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILoggerService private readonly _loggerService: ILoggerService,\n\t) {\n\t\tsuper();\n\n\t\tthis._structuredLogger = this._register(this._instantiationService.createInstance(StructuredLogger.cast<IRecordableEditorLogEntry & IDocumentEventDataSetChangeReason>(),\n\t\t\t'editor.inlineSuggest.logChangeReason.commandId'\n\t\t));\n\n\t\tconst logger = this._loggerService?.createLogger('textModelChanges', { hidden: false, name: 'Text Model Changes Reason' });\n\n\t\tconst loggingLevel = observableFromEvent(this, logger.onDidChangeLogLevel, () => logger.getLevel());\n\n\t\tthis._register(autorun(reader => {\n\t\t\tif (!canLog(loggingLevel.read(reader), LogLevel.Trace)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treader.store.add(this._editor.onDidChangeModelContent((e) => {\n\t\t\t\tif (this._editor.getModel()?.uri.scheme === 'output') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.trace('onDidChangeModelContent: ' + e.detailedReasons.map(r => r.toKey(Number.MAX_VALUE)).join(', '));\n\t\t\t}));\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tif (!(this._editor instanceof CodeEditorWidget)) { return; }\n\t\t\tif (!this._structuredLogger.isEnabled.read(reader)) { return; }\n\n\t\t\treader.store.add(this._editor.onDidChangeModelContent(e => {\n\t\t\t\tconst tm = this._editor.getModel();\n\t\t\t\tif (!tm) { return; }\n\n\t\t\t\tconst reason = e.detailedReasons[0];\n\n\t\t\t\tconst data: IRecordableEditorLogEntry & IDocumentEventDataSetChangeReason = {\n\t\t\t\t\t...reason.metadata,\n\t\t\t\t\tsourceId: 'TextModel.setChangeReason',\n\t\t\t\t\tsource: reason.metadata.source,\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\tmodelUri: tm.uri,\n\t\t\t\t\tmodelVersion: tm.getVersionId(),\n\t\t\t\t};\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// To ensure that this reaches the extension host after the content change event.\n\t\t\t\t\t// (Without the setTimeout, I observed this command being called before the content change event arrived)\n\t\t\t\t\tthis._structuredLogger.log(data);\n\t\t\t\t}, 0);\n\t\t\t}));\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, observableFromEvent } from '../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { canLog, ILoggerService, LogLevel } from '../../../../../platform/log/common/log.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { CodeEditorWidget } from '../../../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { IDocumentEventDataSetChangeReason, IRecordableEditorLogEntry, StructuredLogger } from '../structuredLogger.js';\n\nexport class TextModelChangeRecorder extends Disposable {\n\tprivate readonly _structuredLogger;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILoggerService private readonly _loggerService: ILoggerService,\n\t) {\n\t\tsuper();\n\n\t\tthis._structuredLogger = this._register(this._instantiationService.createInstance(StructuredLogger.cast<IRecordableEditorLogEntry & IDocumentEventDataSetChangeReason>(),\n\t\t\t'editor.inlineSuggest.logChangeReason.commandId'\n\t\t));\n\n\t\tconst logger = this._loggerService?.createLogger('textModelChanges', { hidden: false, name: 'Text Model Changes Reason' });\n\n\t\tconst loggingLevel = observableFromEvent(this, logger.onDidChangeLogLevel, () => logger.getLevel());\n\n\t\tthis._register(autorun(reader => {\n\t\t\tif (!canLog(loggingLevel.read(reader), LogLevel.Trace)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treader.store.add(this._editor.onDidChangeModelContent((e) => {\n\t\t\t\tif (this._editor.getModel()?.uri.scheme === 'output') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlogger.trace('onDidChangeModelContent: ' + e.detailedReasons.map(r => r.toKey(Number.MAX_VALUE)).join(', '));\n\t\t\t}));\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tif (!(this._editor instanceof CodeEditorWidget)) { return; }\n\t\t\tif (!this._structuredLogger.isEnabled.read(reader)) { return; }\n\n\t\t\treader.store.add(this._editor.onDidChangeModelContent(e => {\n\t\t\t\tconst tm = this._editor.getModel();\n\t\t\t\tif (!tm) { return; }\n\n\t\t\t\tconst reason = e.detailedReasons[0];\n\n\t\t\t\tconst data: IRecordableEditorLogEntry & IDocumentEventDataSetChangeReason = {\n\t\t\t\t\t...reason.metadata,\n\t\t\t\t\tsourceId: 'TextModel.setChangeReason',\n\t\t\t\t\tsource: reason.metadata.source,\n\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\tmodelUri: tm.uri,\n\t\t\t\t\tmodelVersion: tm.getVersionId(),\n\t\t\t\t};\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// To ensure that this reaches the extension host after the content change event.\n\t\t\t\t\t// (Without the setTimeout, I observed this command being called before the content change event arrived)\n\t\t\t\t\tthis._structuredLogger.log(data);\n\t\t\t\t}, 0);\n\t\t\t}));\n\t\t}));\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/utils.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/vs/editor/contrib/inlineCompletions/browser/utils.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Permutation, compareBy } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, observableValue, ISettableObservable, autorun, transaction, IReader } from '../../../../base/common/observable.js';\nimport { ContextKeyValue, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../common/core/edits/textEdit.js';\nimport { getPositionOffsetTransformerFromTextModel } from '../../../common/core/text/getPositionOffsetTransformerFromTextModel.js';\nimport { ITextModel } from '../../../common/model.js';\n\nconst array: ReadonlyArray<any> = [];\nexport function getReadonlyEmptyArray<T>(): readonly T[] {\n\treturn array;\n}\n\nexport function getEndPositionsAfterApplying(edits: readonly TextReplacement[]): Position[] {\n\tconst newRanges = getModifiedRangesAfterApplying(edits);\n\treturn newRanges.map(range => range.getEndPosition());\n}\n\nexport function getModifiedRangesAfterApplying(edits: readonly TextReplacement[]): Range[] {\n\tconst sortPerm = Permutation.createSortPermutation(edits, compareBy(e => e.range, Range.compareRangesUsingStarts));\n\tconst edit = new TextEdit(sortPerm.apply(edits));\n\tconst sortedNewRanges = edit.getNewRanges();\n\treturn sortPerm.inverse().apply(sortedNewRanges);\n}\n\nexport function removeTextReplacementCommonSuffixPrefix(edits: readonly TextReplacement[], textModel: ITextModel): TextReplacement[] {\n\tconst transformer = getPositionOffsetTransformerFromTextModel(textModel);\n\tconst text = textModel.getValue();\n\tconst stringReplacements = edits.map(edit => transformer.getStringReplacement(edit));\n\tconst minimalStringReplacements = stringReplacements.map(replacement => replacement.removeCommonSuffixPrefix(text));\n\treturn minimalStringReplacements.map(replacement => transformer.getTextReplacement(replacement));\n}\n\nexport function convertItemsToStableObservables<T>(items: IObservable<readonly T[]>, store: DisposableStore): IObservable<IObservable<T>[]> {\n\tconst result = observableValue<IObservable<T>[]>('result', []);\n\tconst innerObservables: ISettableObservable<T>[] = [];\n\n\tstore.add(autorun(reader => {\n\t\tconst itemsValue = items.read(reader);\n\n\t\ttransaction(tx => {\n\t\t\tif (itemsValue.length !== innerObservables.length) {\n\t\t\t\tinnerObservables.length = itemsValue.length;\n\t\t\t\tfor (let i = 0; i < innerObservables.length; i++) {\n\t\t\t\t\tif (!innerObservables[i]) {\n\t\t\t\t\t\tinnerObservables[i] = observableValue<T>('item', itemsValue[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.set([...innerObservables], tx);\n\t\t\t}\n\t\t\tinnerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n\t\t});\n\t}));\n\n\treturn result;\n}\n\nexport class ObservableContextKeyService {\n\tconstructor(\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t) {\n\t}\n\n\tbind<T extends ContextKeyValue>(key: RawContextKey<T>, obs: IObservable<T>): IDisposable;\n\tbind<T extends ContextKeyValue>(key: RawContextKey<T>, fn: (reader: IReader) => T): IDisposable;\n\tbind<T extends ContextKeyValue>(key: RawContextKey<T>, obs: IObservable<T> | ((reader: IReader) => T)): IDisposable {\n\t\treturn bindContextKey(key, this._contextKeyService, obs instanceof Function ? obs : reader => obs.read(reader));\n\t}\n}\n\nexport function wait(ms: number, cancellationToken?: CancellationToken): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tlet d: IDisposable | undefined = undefined;\n\t\tconst handle = setTimeout(() => {\n\t\t\tif (d) { d.dispose(); }\n\t\t\tresolve();\n\t\t}, ms);\n\t\tif (cancellationToken) {\n\t\t\td = cancellationToken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tif (d) { d.dispose(); }\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Permutation, compareBy } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { DisposableStore, IDisposable } from '../../../../base/common/lifecycle.js';\nimport { IObservable, observableValue, ISettableObservable, autorun, transaction, IReader } from '../../../../base/common/observable.js';\nimport { ContextKeyValue, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { bindContextKey } from '../../../../platform/observable/common/platformObservableUtils.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../common/core/edits/textEdit.js';\nimport { getPositionOffsetTransformerFromTextModel } from '../../../common/core/text/getPositionOffsetTransformerFromTextModel.js';\nimport { ITextModel } from '../../../common/model.js';\n\nconst array: ReadonlyArray<any> = [];\nexport function getReadonlyEmptyArray<T>(): readonly T[] {\n\treturn array;\n}\n\nexport function getEndPositionsAfterApplying(edits: readonly TextReplacement[]): Position[] {\n\tconst newRanges = getModifiedRangesAfterApplying(edits);\n\treturn newRanges.map(range => range.getEndPosition());\n}\n\nexport function getModifiedRangesAfterApplying(edits: readonly TextReplacement[]): Range[] {\n\tconst sortPerm = Permutation.createSortPermutation(edits, compareBy(e => e.range, Range.compareRangesUsingStarts));\n\tconst edit = new TextEdit(sortPerm.apply(edits));\n\tconst sortedNewRanges = edit.getNewRanges();\n\treturn sortPerm.inverse().apply(sortedNewRanges);\n}\n\nexport function removeTextReplacementCommonSuffixPrefix(edits: readonly TextReplacement[], textModel: ITextModel): TextReplacement[] {\n\tconst transformer = getPositionOffsetTransformerFromTextModel(textModel);\n\tconst text = textModel.getValue();\n\tconst stringReplacements = edits.map(edit => transformer.getStringReplacement(edit));\n\tconst minimalStringReplacements = stringReplacements.map(replacement => replacement.removeCommonSuffixPrefix(text));\n\treturn minimalStringReplacements.map(replacement => transformer.getTextReplacement(replacement));\n}\n\nexport function convertItemsToStableObservables<T>(items: IObservable<readonly T[]>, store: DisposableStore): IObservable<IObservable<T>[]> {\n\tconst result = observableValue<IObservable<T>[]>('result', []);\n\tconst innerObservables: ISettableObservable<T>[] = [];\n\n\tstore.add(autorun(reader => {\n\t\tconst itemsValue = items.read(reader);\n\n\t\ttransaction(tx => {\n\t\t\tif (itemsValue.length !== innerObservables.length) {\n\t\t\t\tinnerObservables.length = itemsValue.length;\n\t\t\t\tfor (let i = 0; i < innerObservables.length; i++) {\n\t\t\t\t\tif (!innerObservables[i]) {\n\t\t\t\t\t\tinnerObservables[i] = observableValue<T>('item', itemsValue[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.set([...innerObservables], tx);\n\t\t\t}\n\t\t\tinnerObservables.forEach((o, i) => o.set(itemsValue[i], tx));\n\t\t});\n\t}));\n\n\treturn result;\n}\n\nexport class ObservableContextKeyService {\n\tconstructor(\n\t\tprivate readonly _contextKeyService: IContextKeyService,\n\t) {\n\t}\n\n\tbind<T extends ContextKeyValue>(key: RawContextKey<T>, obs: IObservable<T>): IDisposable;\n\tbind<T extends ContextKeyValue>(key: RawContextKey<T>, fn: (reader: IReader) => T): IDisposable;\n\tbind<T extends ContextKeyValue>(key: RawContextKey<T>, obs: IObservable<T> | ((reader: IReader) => T)): IDisposable {\n\t\treturn bindContextKey(key, this._contextKeyService, obs instanceof Function ? obs : reader => obs.read(reader));\n\t}\n}\n\nexport function wait(ms: number, cancellationToken?: CancellationToken): Promise<void> {\n\treturn new Promise(resolve => {\n\t\tlet d: IDisposable | undefined = undefined;\n\t\tconst handle = setTimeout(() => {\n\t\t\tif (d) { d.dispose(); }\n\t\t\tresolve();\n\t\t}, ms);\n\t\tif (cancellationToken) {\n\t\t\td = cancellationToken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(handle);\n\t\t\t\tif (d) { d.dispose(); }\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\t});\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/animation.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/animation.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/animation.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { ISettableObservable, observableValue, IReader, observableSignal } from '../../../../../base/common/observable.js';\n\nexport class AnimatedValue {\n\n\tpublic readonly startTimeMs = Date.now();\n\n\tconstructor(\n\t\tpublic readonly startValue: number,\n\t\tpublic readonly endValue: number,\n\t\tpublic readonly durationMs: number,\n\t\tprivate readonly _interpolationFunction: InterpolationFunction = easeOutExpo,\n\t) {\n\t\tif (startValue === endValue) {\n\t\t\tthis.durationMs = 0;\n\t\t}\n\t}\n\n\tisFinished(): boolean {\n\t\treturn Date.now() >= this.startTimeMs + this.durationMs;\n\t}\n\n\tgetValue(): number {\n\t\tconst timePassed = Date.now() - this.startTimeMs;\n\t\tif (timePassed >= this.durationMs) {\n\t\t\treturn this.endValue;\n\t\t}\n\t\tconst value = this._interpolationFunction(timePassed, this.startValue, this.endValue - this.startValue, this.durationMs);\n\t\treturn value;\n\t}\n}\n\ntype InterpolationFunction = (passedTime: number, start: number, length: number, totalDuration: number) => number;\n\nexport function easeOutExpo(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn passedTime === totalDuration\n\t\t? start + length\n\t\t: length * (-Math.pow(2, -10 * passedTime / totalDuration) + 1) + start;\n}\n\nexport function easeOutCubic(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn length * ((passedTime = passedTime / totalDuration - 1) * passedTime * passedTime + 1) + start;\n}\n\nexport class ObservableAnimatedValue {\n\n\tprivate readonly _value: ISettableObservable<AnimatedValue>;\n\n\tconstructor(\n\t\tinitialValue: AnimatedValue,\n\t) {\n\t\tthis._value = observableValue(this, initialValue);\n\t}\n\n\tgetValue(reader: IReader | undefined): number {\n\t\tconst value = this._value.read(reader);\n\t\tif (!value.isFinished()) {\n\t\t\tAnimationFrameScheduler.instance.invalidateOnNextAnimationFrame(reader);\n\t\t}\n\t\treturn value.getValue();\n\t}\n}\n\nexport class AnimationFrameScheduler {\n\tpublic static instance = new AnimationFrameScheduler();\n\n\tprivate readonly _counter = observableSignal(this);\n\n\tprivate _isScheduled = false;\n\n\tpublic invalidateOnNextAnimationFrame(reader: IReader | undefined): void {\n\t\tthis._counter.read(reader);\n\t\tif (!this._isScheduled) {\n\t\t\tthis._isScheduled = true;\n\t\t\tgetActiveWindow().requestAnimationFrame(() => {\n\t\t\t\tthis._isScheduled = false;\n\t\t\t\tthis._update();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _update(): void {\n\t\tthis._counter.trigger(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { ISettableObservable, observableValue, IReader, observableSignal } from '../../../../../base/common/observable.js';\n\nexport class AnimatedValue {\n\n\tpublic readonly startTimeMs = Date.now();\n\n\tconstructor(\n\t\tpublic readonly startValue: number,\n\t\tpublic readonly endValue: number,\n\t\tpublic readonly durationMs: number,\n\t\tprivate readonly _interpolationFunction: InterpolationFunction = easeOutExpo,\n\t) {\n\t\tif (startValue === endValue) {\n\t\t\tthis.durationMs = 0;\n\t\t}\n\t}\n\n\tisFinished(): boolean {\n\t\treturn Date.now() >= this.startTimeMs + this.durationMs;\n\t}\n\n\tgetValue(): number {\n\t\tconst timePassed = Date.now() - this.startTimeMs;\n\t\tif (timePassed >= this.durationMs) {\n\t\t\treturn this.endValue;\n\t\t}\n\t\tconst value = this._interpolationFunction(timePassed, this.startValue, this.endValue - this.startValue, this.durationMs);\n\t\treturn value;\n\t}\n}\n\ntype InterpolationFunction = (passedTime: number, start: number, length: number, totalDuration: number) => number;\n\nexport function easeOutExpo(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn passedTime === totalDuration\n\t\t? start + length\n\t\t: length * (-Math.pow(2, -10 * passedTime / totalDuration) + 1) + start;\n}\n\nexport function easeOutCubic(passedTime: number, start: number, length: number, totalDuration: number): number {\n\treturn length * ((passedTime = passedTime / totalDuration - 1) * passedTime * passedTime + 1) + start;\n}\n\nexport class ObservableAnimatedValue {\n\n\tprivate readonly _value: ISettableObservable<AnimatedValue>;\n\n\tconstructor(\n\t\tinitialValue: AnimatedValue,\n\t) {\n\t\tthis._value = observableValue(this, initialValue);\n\t}\n\n\tgetValue(reader: IReader | undefined): number {\n\t\tconst value = this._value.read(reader);\n\t\tif (!value.isFinished()) {\n\t\t\tAnimationFrameScheduler.instance.invalidateOnNextAnimationFrame(reader);\n\t\t}\n\t\treturn value.getValue();\n\t}\n}\n\nexport class AnimationFrameScheduler {\n\tpublic static instance = new AnimationFrameScheduler();\n\n\tprivate readonly _counter = observableSignal(this);\n\n\tprivate _isScheduled = false;\n\n\tpublic invalidateOnNextAnimationFrame(reader: IReader | undefined): void {\n\t\tthis._counter.read(reader);\n\t\tif (!this._isScheduled) {\n\t\t\tthis._isScheduled = true;\n\t\t\tgetActiveWindow().requestAnimationFrame(() => {\n\t\t\t\tthis._isScheduled = false;\n\t\t\t\tthis._update();\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _update(): void {\n\t\tthis._counter.trigger(undefined);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/ghostText.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/ghostText.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/ghostText.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from '../../../../../base/common/arrays.js';\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { LineDecoration } from '../../../../common/viewLayout/lineDecorations.js';\nimport { ColumnRange } from '../../../../common/core/ranges/columnRange.js';\nimport { assertFn, checkAdjacentItems } from '../../../../../base/common/assert.js';\nimport { InlineDecoration } from '../../../../common/viewModel/inlineDecorations.js';\n\nexport class GhostText {\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly parts: GhostTextPart[],\n\t) {\n\t\tassertFn(() => checkAdjacentItems(parts, (p1, p2) => p1.column <= p2.column));\n\t}\n\n\tequals(other: GhostText): boolean {\n\t\treturn this.lineNumber === other.lineNumber &&\n\t\t\tthis.parts.length === other.parts.length &&\n\t\t\tthis.parts.every((part, index) => part.equals(other.parts[index]));\n\t}\n\n\trenderForScreenReader(lineText: string): string {\n\t\tif (this.parts.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lastPart = this.parts[this.parts.length - 1];\n\n\t\tconst cappedLineText = lineText.substr(0, lastPart.column - 1);\n\t\tconst text = new TextEdit([\n\t\t\t...this.parts.map(p => new TextReplacement(\n\t\t\t\tRange.fromPositions(new Position(1, p.column)),\n\t\t\t\tp.lines.map(line => line.line).join('\\n')\n\t\t\t)),\n\t\t]).applyToString(cappedLineText);\n\n\t\treturn text.substring(this.parts[0].column - 1);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.parts.every(p => p.lines.length === 0);\n\t}\n\n\tget lineCount(): number {\n\t\treturn 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n\t}\n}\n\nexport interface IGhostTextLine {\n\tline: string;\n\tlineDecorations: LineDecoration[];\n}\n\n\nexport class GhostTextPart {\n\n\treadonly lines: IGhostTextLine[];\n\n\tconstructor(\n\t\treadonly column: number,\n\t\treadonly text: string,\n\t\t/**\n\t\t * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n\t\t*/\n\t\treadonly preview: boolean,\n\t\tprivate _inlineDecorations: InlineDecoration[] = [],\n\t) {\n\t\tthis.lines = splitLines(this.text).map((line, i) => ({\n\t\t\tline,\n\t\t\tlineDecorations: LineDecoration.filter(this._inlineDecorations, i + 1, 1, line.length + 1)\n\t\t}));\n\t}\n\n\tequals(other: GhostTextPart): boolean {\n\t\treturn this.column === other.column &&\n\t\t\tthis.lines.length === other.lines.length &&\n\t\t\tthis.lines.every((line, index) =>\n\t\t\t\tline.line === other.lines[index].line &&\n\t\t\t\tLineDecoration.equalsArr(line.lineDecorations, other.lines[index].lineDecorations)\n\t\t\t);\n\t}\n}\n\nexport class GhostTextReplacement {\n\tpublic readonly parts: ReadonlyArray<GhostTextPart>;\n\treadonly newLines: string[];\n\n\tconstructor(\n\t\treadonly lineNumber: number,\n\t\treadonly columnRange: ColumnRange,\n\t\treadonly text: string,\n\t\tpublic readonly additionalReservedLineCount: number = 0,\n\t) {\n\t\tthis.parts = [\n\t\t\tnew GhostTextPart(\n\t\t\t\tthis.columnRange.endColumnExclusive,\n\t\t\t\tthis.text,\n\t\t\t\tfalse\n\t\t\t),\n\t\t];\n\t\tthis.newLines = splitLines(this.text);\n\t}\n\n\trenderForScreenReader(_lineText: string): string {\n\t\treturn this.newLines.join('\\n');\n\t}\n\n\tget lineCount(): number {\n\t\treturn this.newLines.length;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.parts.every(p => p.lines.length === 0);\n\t}\n\n\tequals(other: GhostTextReplacement): boolean {\n\t\treturn this.lineNumber === other.lineNumber &&\n\t\t\tthis.columnRange.equals(other.columnRange) &&\n\t\t\tthis.newLines.length === other.newLines.length &&\n\t\t\tthis.newLines.every((line, index) => line === other.newLines[index]) &&\n\t\t\tthis.additionalReservedLineCount === other.additionalReservedLineCount;\n\t}\n}\n\nexport type GhostTextOrReplacement = GhostText | GhostTextReplacement;\n\nexport function ghostTextsOrReplacementsEqual(a: readonly GhostTextOrReplacement[] | undefined, b: readonly GhostTextOrReplacement[] | undefined): boolean {\n\treturn equals(a, b, ghostTextOrReplacementEquals);\n}\n\nexport function ghostTextOrReplacementEquals(a: GhostTextOrReplacement | undefined, b: GhostTextOrReplacement | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\tif (a instanceof GhostText && b instanceof GhostText) {\n\t\treturn a.equals(b);\n\t}\n\tif (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n\t\treturn a.equals(b);\n\t}\n\treturn false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from '../../../../../base/common/arrays.js';\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { LineDecoration } from '../../../../common/viewLayout/lineDecorations.js';\nimport { ColumnRange } from '../../../../common/core/ranges/columnRange.js';\nimport { assertFn, checkAdjacentItems } from '../../../../../base/common/assert.js';\nimport { InlineDecoration } from '../../../../common/viewModel/inlineDecorations.js';\n\nexport class GhostText {\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly parts: GhostTextPart[],\n\t) {\n\t\tassertFn(() => checkAdjacentItems(parts, (p1, p2) => p1.column <= p2.column));\n\t}\n\n\tequals(other: GhostText): boolean {\n\t\treturn this.lineNumber === other.lineNumber &&\n\t\t\tthis.parts.length === other.parts.length &&\n\t\t\tthis.parts.every((part, index) => part.equals(other.parts[index]));\n\t}\n\n\trenderForScreenReader(lineText: string): string {\n\t\tif (this.parts.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lastPart = this.parts[this.parts.length - 1];\n\n\t\tconst cappedLineText = lineText.substr(0, lastPart.column - 1);\n\t\tconst text = new TextEdit([\n\t\t\t...this.parts.map(p => new TextReplacement(\n\t\t\t\tRange.fromPositions(new Position(1, p.column)),\n\t\t\t\tp.lines.map(line => line.line).join('\\n')\n\t\t\t)),\n\t\t]).applyToString(cappedLineText);\n\n\t\treturn text.substring(this.parts[0].column - 1);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.parts.every(p => p.lines.length === 0);\n\t}\n\n\tget lineCount(): number {\n\t\treturn 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n\t}\n}\n\nexport interface IGhostTextLine {\n\tline: string;\n\tlineDecorations: LineDecoration[];\n}\n\n\nexport class GhostTextPart {\n\n\treadonly lines: IGhostTextLine[];\n\n\tconstructor(\n\t\treadonly column: number,\n\t\treadonly text: string,\n\t\t/**\n\t\t * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n\t\t*/\n\t\treadonly preview: boolean,\n\t\tprivate _inlineDecorations: InlineDecoration[] = [],\n\t) {\n\t\tthis.lines = splitLines(this.text).map((line, i) => ({\n\t\t\tline,\n\t\t\tlineDecorations: LineDecoration.filter(this._inlineDecorations, i + 1, 1, line.length + 1)\n\t\t}));\n\t}\n\n\tequals(other: GhostTextPart): boolean {\n\t\treturn this.column === other.column &&\n\t\t\tthis.lines.length === other.lines.length &&\n\t\t\tthis.lines.every((line, index) =>\n\t\t\t\tline.line === other.lines[index].line &&\n\t\t\t\tLineDecoration.equalsArr(line.lineDecorations, other.lines[index].lineDecorations)\n\t\t\t);\n\t}\n}\n\nexport class GhostTextReplacement {\n\tpublic readonly parts: ReadonlyArray<GhostTextPart>;\n\treadonly newLines: string[];\n\n\tconstructor(\n\t\treadonly lineNumber: number,\n\t\treadonly columnRange: ColumnRange,\n\t\treadonly text: string,\n\t\tpublic readonly additionalReservedLineCount: number = 0,\n\t) {\n\t\tthis.parts = [\n\t\t\tnew GhostTextPart(\n\t\t\t\tthis.columnRange.endColumnExclusive,\n\t\t\t\tthis.text,\n\t\t\t\tfalse\n\t\t\t),\n\t\t];\n\t\tthis.newLines = splitLines(this.text);\n\t}\n\n\trenderForScreenReader(_lineText: string): string {\n\t\treturn this.newLines.join('\\n');\n\t}\n\n\tget lineCount(): number {\n\t\treturn this.newLines.length;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.parts.every(p => p.lines.length === 0);\n\t}\n\n\tequals(other: GhostTextReplacement): boolean {\n\t\treturn this.lineNumber === other.lineNumber &&\n\t\t\tthis.columnRange.equals(other.columnRange) &&\n\t\t\tthis.newLines.length === other.newLines.length &&\n\t\t\tthis.newLines.every((line, index) => line === other.newLines[index]) &&\n\t\t\tthis.additionalReservedLineCount === other.additionalReservedLineCount;\n\t}\n}\n\nexport type GhostTextOrReplacement = GhostText | GhostTextReplacement;\n\nexport function ghostTextsOrReplacementsEqual(a: readonly GhostTextOrReplacement[] | undefined, b: readonly GhostTextOrReplacement[] | undefined): boolean {\n\treturn equals(a, b, ghostTextOrReplacementEquals);\n}\n\nexport function ghostTextOrReplacementEquals(a: GhostTextOrReplacement | undefined, b: GhostTextOrReplacement | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\tif (a instanceof GhostText && b instanceof GhostText) {\n\t\treturn a.equals(b);\n\t}\n\tif (a instanceof GhostTextReplacement && b instanceof GhostTextReplacement) {\n\t\treturn a.equals(b);\n\t}\n\treturn false;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 981, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/singleTextEditHelpers.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/singleTextEditHelpers.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/singleTextEditHelpers.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { commonPrefixLength } from '../../../../../base/common/strings.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextLength } from '../../../../common/core/text/textLength.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { EndOfLinePreference, ITextModel } from '../../../../common/model.js';\n\nexport function singleTextRemoveCommonPrefix(edit: TextReplacement, model: ITextModel, validModelRange?: Range): TextReplacement {\n\tconst modelRange = validModelRange ? edit.range.intersectRanges(validModelRange) : edit.range;\n\tif (!modelRange) {\n\t\treturn edit;\n\t}\n\tconst normalizedText = edit.text.replaceAll('\\r\\n', '\\n');\n\tconst valueToReplace = model.getValueInRange(modelRange, EndOfLinePreference.LF);\n\tconst commonPrefixLen = commonPrefixLength(valueToReplace, normalizedText);\n\tconst start = TextLength.ofText(valueToReplace.substring(0, commonPrefixLen)).addToPosition(edit.range.getStartPosition());\n\tconst text = normalizedText.substring(commonPrefixLen);\n\tconst range = Range.fromPositions(start, edit.range.getEndPosition());\n\treturn new TextReplacement(range, text);\n}\n\nexport function singleTextEditAugments(edit: TextReplacement, base: TextReplacement): boolean {\n\t// The augmented completion must replace the base range, but can replace even more\n\treturn edit.text.startsWith(base.text) && rangeExtends(edit.range, base.range);\n}\n\nfunction rangeExtends(extendingRange: Range, rangeToExtend: Range): boolean {\n\treturn rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n\t\t&& rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { commonPrefixLength } from '../../../../../base/common/strings.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextLength } from '../../../../common/core/text/textLength.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { EndOfLinePreference, ITextModel } from '../../../../common/model.js';\n\nexport function singleTextRemoveCommonPrefix(edit: TextReplacement, model: ITextModel, validModelRange?: Range): TextReplacement {\n\tconst modelRange = validModelRange ? edit.range.intersectRanges(validModelRange) : edit.range;\n\tif (!modelRange) {\n\t\treturn edit;\n\t}\n\tconst normalizedText = edit.text.replaceAll('\\r\\n', '\\n');\n\tconst valueToReplace = model.getValueInRange(modelRange, EndOfLinePreference.LF);\n\tconst commonPrefixLen = commonPrefixLength(valueToReplace, normalizedText);\n\tconst start = TextLength.ofText(valueToReplace.substring(0, commonPrefixLen)).addToPosition(edit.range.getStartPosition());\n\tconst text = normalizedText.substring(commonPrefixLen);\n\tconst range = Range.fromPositions(start, edit.range.getEndPosition());\n\treturn new TextReplacement(range, text);\n}\n\nexport function singleTextEditAugments(edit: TextReplacement, base: TextReplacement): boolean {\n\t// The augmented completion must replace the base range, but can replace even more\n\treturn edit.text.startsWith(base.text) && rangeExtends(edit.range, base.range);\n}\n\nfunction rangeExtends(extendingRange: Range, rangeToExtend: Range): boolean {\n\treturn rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n\t\t&& rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;AAEhG,OAAO,EAAE,kBAAkB,EAAE,MAAM,uCAAuC,CAAC;AAC3E,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,4CAA4C,CAAC;AACxE,OAAO,EAAE,eAAe,EAAE,MAAM,2CAA2C,CAAC;;;;;AAGtE,SAAU,4BAA4B,CAAC,IAAqB,EAAE,KAAiB,EAAE,eAAuB;IAC7G,MAAM,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IAC9F,IAAI,CAAC,UAAU,EAAE,CAAC;QACjB,OAAO,IAAI,CAAC;IACb,CAAC;IACD,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1D,MAAM,cAAc,GAAG,KAAK,CAAC,eAAe,CAAC,UAAU,EAAA,EAAA,0BAAA,GAAyB,CAAC;IACjF,MAAM,eAAe,OAAG,gMAAkB,EAAC,cAAc,EAAE,cAAc,CAAC,CAAC;IAC3E,MAAM,KAAK,GAAG,6MAAU,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAC3H,MAAM,IAAI,GAAG,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IACvD,MAAM,KAAK,GAAG,2LAAK,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC;IACtE,OAAO,IAAI,iNAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACzC,CAAC;AAEK,SAAU,sBAAsB,CAAC,IAAqB,EAAE,IAAqB;IAClF,kFAAkF;IAClF,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAChF,CAAC;AAED,SAAS,YAAY,CAAC,cAAqB,EAAE,aAAoB;IAChE,OAAO,aAAa,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,IAC7E,aAAa,CAAC,cAAc,EAAE,CAAC,eAAe,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC,CAAC;AACrF,CAAC","debugId":null}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/computeGhostText.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/computeGhostText.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/computeGhostText.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, LcsDiff } from '../../../../../base/common/diff/diff.js';\nimport { getLeadingWhitespace } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\n\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function computeGhostText(\n\tedit: TextReplacement,\n\tmodel: ITextModel,\n\tmode: 'prefix' | 'subword' | 'subwordSmart',\n\tcursorPosition?: Position,\n\tpreviewSuffixLength = 0\n): GhostText | undefined {\n\tlet e = singleTextRemoveCommonPrefix(edit, model);\n\n\tif (e.range.endLineNumber !== e.range.startLineNumber) {\n\t\t// This edit might span multiple lines, but the first lines must be a common prefix.\n\t\treturn undefined;\n\t}\n\n\tconst sourceLine = model.getLineContent(e.range.startLineNumber);\n\tconst sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n\n\tconst suggestionTouchesIndentation = e.range.startColumn - 1 <= sourceIndentationLength;\n\tif (suggestionTouchesIndentation) {\n\t\t// source:      ··········[······abc]\n\t\t//                         ^^^^^^^^^ inlineCompletion.range\n\t\t//              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n\t\t//                         ^^^^^^ replacedIndentation.length\n\t\t//                               ^^^ rangeThatDoesNotReplaceIndentation\n\t\t// inlineCompletion.text: '··foo'\n\t\t//                         ^^ suggestionAddedIndentationLength\n\t\tconst suggestionAddedIndentationLength = getLeadingWhitespace(e.text).length;\n\n\t\tconst replacedIndentation = sourceLine.substring(e.range.startColumn - 1, sourceIndentationLength);\n\n\t\tconst [startPosition, endPosition] = [e.range.getStartPosition(), e.range.getEndPosition()];\n\t\tconst newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n\t\t\t? startPosition.delta(0, replacedIndentation.length)\n\t\t\t: endPosition;\n\t\tconst rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n\n\t\tconst suggestionWithoutIndentationChange = e.text.startsWith(replacedIndentation)\n\t\t\t// Adds more indentation without changing existing indentation: We can add ghost text for this\n\t\t\t? e.text.substring(replacedIndentation.length)\n\t\t\t// Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n\t\t\t: e.text.substring(suggestionAddedIndentationLength);\n\n\t\te = new TextReplacement(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n\t}\n\n\t// This is a single line string\n\tconst valueToBeReplaced = model.getValueInRange(e.range);\n\n\tconst changes = cachingDiff(valueToBeReplaced, e.text);\n\n\tif (!changes) {\n\t\t// No ghost text in case the diff would be too slow to compute\n\t\treturn undefined;\n\t}\n\n\tconst lineNumber = e.range.startLineNumber;\n\n\tconst parts = new Array<GhostTextPart>();\n\n\tif (mode === 'prefix') {\n\t\tconst filteredChanges = changes.filter(c => c.originalLength === 0);\n\t\tif (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n\t\t\t// Prefixes only have a single change.\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconst previewStartInCompletionText = e.text.length - previewSuffixLength;\n\n\tfor (const c of changes) {\n\t\tconst insertColumn = e.range.startColumn + c.originalStart + c.originalLength;\n\n\t\tif (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === e.range.startLineNumber && insertColumn < cursorPosition.column) {\n\t\t\t// No ghost text before cursor\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (c.originalLength > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (c.modifiedLength === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst modifiedEnd = c.modifiedStart + c.modifiedLength;\n\t\tconst nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n\t\tconst nonPreviewText = e.text.substring(c.modifiedStart, nonPreviewTextEnd);\n\t\tconst italicText = e.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n\n\t\tif (nonPreviewText.length > 0) {\n\t\t\tparts.push(new GhostTextPart(insertColumn, nonPreviewText, false));\n\t\t}\n\t\tif (italicText.length > 0) {\n\t\t\tparts.push(new GhostTextPart(insertColumn, italicText, true));\n\t\t}\n\t}\n\n\treturn new GhostText(lineNumber, parts);\n}\n\nlet lastRequest: { originalValue: string; newValue: string; changes: readonly IDiffChange[] | undefined } | undefined = undefined;\nfunction cachingDiff(originalValue: string, newValue: string): readonly IDiffChange[] | undefined {\n\tif (lastRequest?.originalValue === originalValue && lastRequest?.newValue === newValue) {\n\t\treturn lastRequest?.changes;\n\t} else {\n\t\tlet changes = smartDiff(originalValue, newValue, true);\n\t\tif (changes) {\n\t\t\tconst deletedChars = deletedCharacters(changes);\n\t\t\tif (deletedChars > 0) {\n\t\t\t\t// For performance reasons, don't compute diff if there is nothing to improve\n\t\t\t\tconst newChanges = smartDiff(originalValue, newValue, false);\n\t\t\t\tif (newChanges && deletedCharacters(newChanges) < deletedChars) {\n\t\t\t\t\t// Disabling smartness seems to be better here\n\t\t\t\t\tchanges = newChanges;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlastRequest = {\n\t\t\toriginalValue,\n\t\t\tnewValue,\n\t\t\tchanges\n\t\t};\n\t\treturn changes;\n\t}\n}\n\nfunction deletedCharacters(changes: readonly IDiffChange[]): number {\n\tlet sum = 0;\n\tfor (const c of changes) {\n\t\tsum += c.originalLength;\n\t}\n\treturn sum;\n}\n\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nexport function smartDiff(originalValue: string, newValue: string, smartBracketMatching: boolean): (readonly IDiffChange[]) | undefined {\n\tif (originalValue.length > 5000 || newValue.length > 5000) {\n\t\t// We don't want to work on strings that are too big\n\t\treturn undefined;\n\t}\n\n\tfunction getMaxCharCode(val: string): number {\n\t\tlet maxCharCode = 0;\n\t\tfor (let i = 0, len = val.length; i < len; i++) {\n\t\t\tconst charCode = val.charCodeAt(i);\n\t\t\tif (charCode > maxCharCode) {\n\t\t\t\tmaxCharCode = charCode;\n\t\t\t}\n\t\t}\n\t\treturn maxCharCode;\n\t}\n\n\tconst maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n\tfunction getUniqueCharCode(id: number): number {\n\t\tif (id < 0) {\n\t\t\tthrow new Error('unexpected');\n\t\t}\n\t\treturn maxCharCode + id + 1;\n\t}\n\n\tfunction getElements(source: string): Int32Array {\n\t\tlet level = 0;\n\t\tlet group = 0;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\t// TODO support more brackets\n\t\t\tif (smartBracketMatching && source[i] === '(') {\n\t\t\t\tconst id = group * 100 + level;\n\t\t\t\tcharacters[i] = getUniqueCharCode(2 * id);\n\t\t\t\tlevel++;\n\t\t\t} else if (smartBracketMatching && source[i] === ')') {\n\t\t\t\tlevel = Math.max(level - 1, 0);\n\t\t\t\tconst id = group * 100 + level;\n\t\t\t\tcharacters[i] = getUniqueCharCode(2 * id + 1);\n\t\t\t\tif (level === 0) {\n\t\t\t\t\tgroup++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t\t}\n\t\t}\n\t\treturn characters;\n\t}\n\n\tconst elements1 = getElements(originalValue);\n\tconst elements2 = getElements(newValue);\n\n\treturn new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDiffChange, LcsDiff } from '../../../../../base/common/diff/diff.js';\nimport { getLeadingWhitespace } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\n\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function computeGhostText(\n\tedit: TextReplacement,\n\tmodel: ITextModel,\n\tmode: 'prefix' | 'subword' | 'subwordSmart',\n\tcursorPosition?: Position,\n\tpreviewSuffixLength = 0\n): GhostText | undefined {\n\tlet e = singleTextRemoveCommonPrefix(edit, model);\n\n\tif (e.range.endLineNumber !== e.range.startLineNumber) {\n\t\t// This edit might span multiple lines, but the first lines must be a common prefix.\n\t\treturn undefined;\n\t}\n\n\tconst sourceLine = model.getLineContent(e.range.startLineNumber);\n\tconst sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n\n\tconst suggestionTouchesIndentation = e.range.startColumn - 1 <= sourceIndentationLength;\n\tif (suggestionTouchesIndentation) {\n\t\t// source:      ··········[······abc]\n\t\t//                         ^^^^^^^^^ inlineCompletion.range\n\t\t//              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n\t\t//                         ^^^^^^ replacedIndentation.length\n\t\t//                               ^^^ rangeThatDoesNotReplaceIndentation\n\t\t// inlineCompletion.text: '··foo'\n\t\t//                         ^^ suggestionAddedIndentationLength\n\t\tconst suggestionAddedIndentationLength = getLeadingWhitespace(e.text).length;\n\n\t\tconst replacedIndentation = sourceLine.substring(e.range.startColumn - 1, sourceIndentationLength);\n\n\t\tconst [startPosition, endPosition] = [e.range.getStartPosition(), e.range.getEndPosition()];\n\t\tconst newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n\t\t\t? startPosition.delta(0, replacedIndentation.length)\n\t\t\t: endPosition;\n\t\tconst rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n\n\t\tconst suggestionWithoutIndentationChange = e.text.startsWith(replacedIndentation)\n\t\t\t// Adds more indentation without changing existing indentation: We can add ghost text for this\n\t\t\t? e.text.substring(replacedIndentation.length)\n\t\t\t// Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n\t\t\t: e.text.substring(suggestionAddedIndentationLength);\n\n\t\te = new TextReplacement(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n\t}\n\n\t// This is a single line string\n\tconst valueToBeReplaced = model.getValueInRange(e.range);\n\n\tconst changes = cachingDiff(valueToBeReplaced, e.text);\n\n\tif (!changes) {\n\t\t// No ghost text in case the diff would be too slow to compute\n\t\treturn undefined;\n\t}\n\n\tconst lineNumber = e.range.startLineNumber;\n\n\tconst parts = new Array<GhostTextPart>();\n\n\tif (mode === 'prefix') {\n\t\tconst filteredChanges = changes.filter(c => c.originalLength === 0);\n\t\tif (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n\t\t\t// Prefixes only have a single change.\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tconst previewStartInCompletionText = e.text.length - previewSuffixLength;\n\n\tfor (const c of changes) {\n\t\tconst insertColumn = e.range.startColumn + c.originalStart + c.originalLength;\n\n\t\tif (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === e.range.startLineNumber && insertColumn < cursorPosition.column) {\n\t\t\t// No ghost text before cursor\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (c.originalLength > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (c.modifiedLength === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst modifiedEnd = c.modifiedStart + c.modifiedLength;\n\t\tconst nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n\t\tconst nonPreviewText = e.text.substring(c.modifiedStart, nonPreviewTextEnd);\n\t\tconst italicText = e.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n\n\t\tif (nonPreviewText.length > 0) {\n\t\t\tparts.push(new GhostTextPart(insertColumn, nonPreviewText, false));\n\t\t}\n\t\tif (italicText.length > 0) {\n\t\t\tparts.push(new GhostTextPart(insertColumn, italicText, true));\n\t\t}\n\t}\n\n\treturn new GhostText(lineNumber, parts);\n}\n\nlet lastRequest: { originalValue: string; newValue: string; changes: readonly IDiffChange[] | undefined } | undefined = undefined;\nfunction cachingDiff(originalValue: string, newValue: string): readonly IDiffChange[] | undefined {\n\tif (lastRequest?.originalValue === originalValue && lastRequest?.newValue === newValue) {\n\t\treturn lastRequest?.changes;\n\t} else {\n\t\tlet changes = smartDiff(originalValue, newValue, true);\n\t\tif (changes) {\n\t\t\tconst deletedChars = deletedCharacters(changes);\n\t\t\tif (deletedChars > 0) {\n\t\t\t\t// For performance reasons, don't compute diff if there is nothing to improve\n\t\t\t\tconst newChanges = smartDiff(originalValue, newValue, false);\n\t\t\t\tif (newChanges && deletedCharacters(newChanges) < deletedChars) {\n\t\t\t\t\t// Disabling smartness seems to be better here\n\t\t\t\t\tchanges = newChanges;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlastRequest = {\n\t\t\toriginalValue,\n\t\t\tnewValue,\n\t\t\tchanges\n\t\t};\n\t\treturn changes;\n\t}\n}\n\nfunction deletedCharacters(changes: readonly IDiffChange[]): number {\n\tlet sum = 0;\n\tfor (const c of changes) {\n\t\tsum += c.originalLength;\n\t}\n\treturn sum;\n}\n\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nexport function smartDiff(originalValue: string, newValue: string, smartBracketMatching: boolean): (readonly IDiffChange[]) | undefined {\n\tif (originalValue.length > 5000 || newValue.length > 5000) {\n\t\t// We don't want to work on strings that are too big\n\t\treturn undefined;\n\t}\n\n\tfunction getMaxCharCode(val: string): number {\n\t\tlet maxCharCode = 0;\n\t\tfor (let i = 0, len = val.length; i < len; i++) {\n\t\t\tconst charCode = val.charCodeAt(i);\n\t\t\tif (charCode > maxCharCode) {\n\t\t\t\tmaxCharCode = charCode;\n\t\t\t}\n\t\t}\n\t\treturn maxCharCode;\n\t}\n\n\tconst maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n\tfunction getUniqueCharCode(id: number): number {\n\t\tif (id < 0) {\n\t\t\tthrow new Error('unexpected');\n\t\t}\n\t\treturn maxCharCode + id + 1;\n\t}\n\n\tfunction getElements(source: string): Int32Array {\n\t\tlet level = 0;\n\t\tlet group = 0;\n\t\tconst characters = new Int32Array(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\t// TODO support more brackets\n\t\t\tif (smartBracketMatching && source[i] === '(') {\n\t\t\t\tconst id = group * 100 + level;\n\t\t\t\tcharacters[i] = getUniqueCharCode(2 * id);\n\t\t\t\tlevel++;\n\t\t\t} else if (smartBracketMatching && source[i] === ')') {\n\t\t\t\tlevel = Math.max(level - 1, 0);\n\t\t\t\tconst id = group * 100 + level;\n\t\t\t\tcharacters[i] = getUniqueCharCode(2 * id + 1);\n\t\t\t\tif (level === 0) {\n\t\t\t\t\tgroup++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharacters[i] = source.charCodeAt(i);\n\t\t\t}\n\t\t}\n\t\treturn characters;\n\t}\n\n\tconst elements1 = getElements(originalValue);\n\tconst elements2 = getElements(newValue);\n\n\treturn new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1202, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/inlineSuggestionItem.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/inlineSuggestionItem.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/inlineSuggestionItem.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { matchesSubString } from '../../../../../base/common/filters.js';\nimport { observableSignal } from '../../../../../base/common/observable.js';\nimport { commonPrefixLength, commonSuffixLength, splitLines } from '../../../../../base/common/strings.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ISingleEditOperation } from '../../../../common/core/editOperation.js';\nimport { applyEditsToRanges, StringEdit, StringReplacement } from '../../../../common/core/edits/stringEdit.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { PositionOffsetTransformerBase } from '../../../../common/core/text/positionToOffset.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { StringText } from '../../../../common/core/text/abstractText.js';\nimport { TextLength } from '../../../../common/core/text/textLength.js';\nimport { linesDiffComputers } from '../../../../common/diff/linesDiffComputers.js';\nimport { InlineCompletion, InlineCompletionTriggerKind, Command, InlineCompletionWarning, PartialAcceptInfo, InlineCompletionEndOfLifeReason, InlineCompletionDisplayLocationKind } from '../../../../common/languages.js';\nimport { ITextModel, EndOfLinePreference } from '../../../../common/model.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { IDisplayLocation, InlineSuggestData, InlineSuggestionList, PartialAcceptance, SnippetInfo } from './provideInlineCompletions.js';\nimport { singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { getPositionOffsetTransformerFromTextModel } from '../../../../common/core/text/getPositionOffsetTransformerFromTextModel.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from '../view/inlineEdits/inlineEditsViewInterface.js';\n\nexport type InlineSuggestionItem = InlineEditItem | InlineCompletionItem;\n\nexport namespace InlineSuggestionItem {\n\texport function create(\n\t\tdata: InlineSuggestData,\n\t\ttextModel: ITextModel,\n\t): InlineSuggestionItem {\n\t\tif (!data.isInlineEdit) {\n\t\t\treturn InlineCompletionItem.create(data, textModel);\n\t\t} else {\n\t\t\treturn InlineEditItem.create(data, textModel);\n\t\t}\n\t}\n}\n\nabstract class InlineSuggestionItemBase {\n\tconstructor(\n\t\tprotected readonly _data: InlineSuggestData,\n\t\tpublic readonly identity: InlineSuggestionIdentity,\n\t\tpublic readonly displayLocation: InlineSuggestDisplayLocation | undefined\n\t) { }\n\n\t/**\n\t * A reference to the original inline completion list this inline completion has been constructed from.\n\t * Used for event data to ensure referential equality.\n\t*/\n\tpublic get source(): InlineSuggestionList { return this._data.source; }\n\n\tpublic get isFromExplicitRequest(): boolean { return this._data.context.triggerKind === InlineCompletionTriggerKind.Explicit; }\n\tpublic get forwardStable(): boolean { return this.source.inlineSuggestions.enableForwardStability ?? false; }\n\tpublic get editRange(): Range { return this.getSingleTextEdit().range; }\n\tpublic get targetRange(): Range { return this.displayLocation?.range ?? this.editRange; }\n\tpublic get insertText(): string { return this.getSingleTextEdit().text; }\n\tpublic get semanticId(): string { return this.hash; }\n\tpublic get action(): Command | undefined { return this._sourceInlineCompletion.action; }\n\tpublic get command(): Command | undefined { return this._sourceInlineCompletion.command; }\n\tpublic get warning(): InlineCompletionWarning | undefined { return this._sourceInlineCompletion.warning; }\n\tpublic get showInlineEditMenu(): boolean { return !!this._sourceInlineCompletion.showInlineEditMenu; }\n\tpublic get hash() {\n\t\treturn JSON.stringify([\n\t\t\tthis.getSingleTextEdit().text,\n\t\t\tthis.getSingleTextEdit().range.getStartPosition().toString()\n\t\t]);\n\t}\n\n\tpublic get requestUuid(): string { return this._data.context.requestUuid; }\n\n\tpublic get partialAccepts(): PartialAcceptance { return this._data.partialAccepts; }\n\n\t/**\n\t * A reference to the original inline completion this inline completion has been constructed from.\n\t * Used for event data to ensure referential equality.\n\t*/\n\tprivate get _sourceInlineCompletion(): InlineCompletion { return this._data.sourceInlineCompletion; }\n\n\n\tpublic abstract getSingleTextEdit(): TextReplacement;\n\n\tpublic abstract withEdit(userEdit: StringEdit, textModel: ITextModel): InlineSuggestionItem | undefined;\n\n\tpublic abstract withIdentity(identity: InlineSuggestionIdentity): InlineSuggestionItem;\n\tpublic abstract canBeReused(model: ITextModel, position: Position): boolean;\n\n\n\tpublic addRef(): void {\n\t\tthis.identity.addRef();\n\t\tthis.source.addRef();\n\t}\n\n\tpublic removeRef(): void {\n\t\tthis.identity.removeRef();\n\t\tthis.source.removeRef();\n\t}\n\n\tpublic reportInlineEditShown(commandService: ICommandService, viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData) {\n\t\tthis._data.reportInlineEditShown(commandService, this.insertText, viewKind, viewData);\n\t}\n\n\tpublic reportPartialAccept(acceptedCharacters: number, info: PartialAcceptInfo, partialAcceptance: PartialAcceptance) {\n\t\tthis._data.reportPartialAccept(acceptedCharacters, info, partialAcceptance);\n\t}\n\n\tpublic reportEndOfLife(reason: InlineCompletionEndOfLifeReason): void {\n\t\tthis._data.reportEndOfLife(reason);\n\t}\n\n\tpublic setEndOfLifeReason(reason: InlineCompletionEndOfLifeReason): void {\n\t\tthis._data.setEndOfLifeReason(reason);\n\t}\n\n\tpublic reportInlineEditError(reason: string): void {\n\t\tthis._data.reportInlineEditError(reason);\n\t}\n\n\tpublic setIsPreceeded(item: InlineSuggestionItem): void {\n\t\tthis._data.setIsPreceeded(item.partialAccepts);\n\t}\n\n\t/**\n\t * Avoid using this method. Instead introduce getters for the needed properties.\n\t*/\n\tpublic getSourceCompletion(): InlineCompletion {\n\t\treturn this._sourceInlineCompletion;\n\t}\n}\n\nexport class InlineSuggestionIdentity {\n\tprivate static idCounter = 0;\n\tprivate readonly _onDispose = observableSignal(this);\n\n\tprivate _refCount = 1;\n\tpublic readonly id = 'InlineCompletionIdentity' + InlineSuggestionIdentity.idCounter++;\n\n\taddRef() {\n\t\tthis._refCount++;\n\t}\n\n\tremoveRef() {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._onDispose.trigger(undefined);\n\t\t}\n\t}\n}\n\nclass InlineSuggestDisplayLocation implements IDisplayLocation {\n\n\tpublic static create(displayLocation: IDisplayLocation) {\n\t\treturn new InlineSuggestDisplayLocation(\n\t\t\tdisplayLocation.range,\n\t\t\tdisplayLocation.label,\n\t\t\tdisplayLocation.kind\n\t\t);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly label: string,\n\t\tpublic readonly kind: InlineCompletionDisplayLocationKind\n\t) { }\n\n\tpublic withEdit(edit: StringEdit, positionOffsetTransformer: PositionOffsetTransformerBase): InlineSuggestDisplayLocation | undefined {\n\t\tconst offsetRange = new OffsetRange(\n\t\t\tpositionOffsetTransformer.getOffset(this.range.getStartPosition()),\n\t\t\tpositionOffsetTransformer.getOffset(this.range.getEndPosition())\n\t\t);\n\n\t\tconst newOffsetRange = applyEditsToRanges([offsetRange], edit)[0];\n\t\tif (!newOffsetRange) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst newRange = positionOffsetTransformer.getRange(newOffsetRange);\n\n\t\treturn new InlineSuggestDisplayLocation(newRange, this.label, this.kind);\n\t}\n}\n\nexport class InlineCompletionItem extends InlineSuggestionItemBase {\n\tpublic static create(\n\t\tdata: InlineSuggestData,\n\t\ttextModel: ITextModel,\n\t): InlineCompletionItem {\n\t\tconst identity = new InlineSuggestionIdentity();\n\t\tconst transformer = getPositionOffsetTransformerFromTextModel(textModel);\n\n\t\tconst insertText = data.insertText.replace(/\\r\\n|\\r|\\n/g, textModel.getEOL());\n\n\t\tconst edit = reshapeInlineCompletion(new StringReplacement(transformer.getOffsetRange(data.range), insertText), textModel);\n\t\tconst trimmedEdit = edit.removeCommonSuffixAndPrefix(textModel.getValue());\n\t\tconst textEdit = transformer.getTextReplacement(edit);\n\n\t\tconst displayLocation = data.displayLocation ? InlineSuggestDisplayLocation.create(data.displayLocation) : undefined;\n\n\t\treturn new InlineCompletionItem(edit, trimmedEdit, textEdit, textEdit.range, data.snippetInfo, data.additionalTextEdits, data, identity, displayLocation);\n\t}\n\n\tpublic readonly isInlineEdit = false;\n\n\tprivate constructor(\n\t\tprivate readonly _edit: StringReplacement,\n\t\tprivate readonly _trimmedEdit: StringReplacement,\n\t\tprivate readonly _textEdit: TextReplacement,\n\t\tprivate readonly _originalRange: Range,\n\t\tpublic readonly snippetInfo: SnippetInfo | undefined,\n\t\tpublic readonly additionalTextEdits: readonly ISingleEditOperation[],\n\n\t\tdata: InlineSuggestData,\n\t\tidentity: InlineSuggestionIdentity,\n\t\tdisplayLocation: InlineSuggestDisplayLocation | undefined,\n\t) {\n\t\tsuper(data, identity, displayLocation);\n\t}\n\n\toverride get hash(): string {\n\t\treturn JSON.stringify(this._trimmedEdit.toJson());\n\t}\n\n\toverride getSingleTextEdit(): TextReplacement { return this._textEdit; }\n\n\toverride withIdentity(identity: InlineSuggestionIdentity): InlineCompletionItem {\n\t\treturn new InlineCompletionItem(\n\t\t\tthis._edit,\n\t\t\tthis._trimmedEdit,\n\t\t\tthis._textEdit,\n\t\t\tthis._originalRange,\n\t\t\tthis.snippetInfo,\n\t\t\tthis.additionalTextEdits,\n\t\t\tthis._data,\n\t\t\tidentity,\n\t\t\tthis.displayLocation\n\t\t);\n\t}\n\n\toverride withEdit(textModelEdit: StringEdit, textModel: ITextModel): InlineCompletionItem | undefined {\n\t\tconst newEditRange = applyEditsToRanges([this._edit.replaceRange], textModelEdit);\n\t\tif (newEditRange.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst newEdit = new StringReplacement(newEditRange[0], this._textEdit.text);\n\t\tconst positionOffsetTransformer = getPositionOffsetTransformerFromTextModel(textModel);\n\t\tconst newTextEdit = positionOffsetTransformer.getTextReplacement(newEdit);\n\n\t\tlet newDisplayLocation = this.displayLocation;\n\t\tif (newDisplayLocation) {\n\t\t\tnewDisplayLocation = newDisplayLocation.withEdit(textModelEdit, positionOffsetTransformer);\n\t\t\tif (!newDisplayLocation) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\tconst trimmedEdit = newEdit.removeCommonSuffixAndPrefix(textModel.getValue());\n\n\t\treturn new InlineCompletionItem(\n\t\t\tnewEdit,\n\t\t\ttrimmedEdit,\n\t\t\tnewTextEdit,\n\t\t\tthis._originalRange,\n\t\t\tthis.snippetInfo,\n\t\t\tthis.additionalTextEdits,\n\t\t\tthis._data,\n\t\t\tthis.identity,\n\t\t\tnewDisplayLocation\n\t\t);\n\t}\n\n\toverride canBeReused(model: ITextModel, position: Position): boolean {\n\t\t// TODO@hediet I believe this can be simplified to `return true;`, as applying an edit should kick out this suggestion.\n\t\tconst updatedRange = this._textEdit.range;\n\t\tconst result = !!updatedRange\n\t\t\t&& updatedRange.containsPosition(position)\n\t\t\t&& this.isVisible(model, position)\n\t\t\t&& TextLength.ofRange(updatedRange).isGreaterThanOrEqualTo(TextLength.ofRange(this._originalRange));\n\t\treturn result;\n\t}\n\n\tpublic isVisible(model: ITextModel, cursorPosition: Position): boolean {\n\t\tconst singleTextEdit = this.getSingleTextEdit();\n\t\treturn inlineCompletionIsVisible(singleTextEdit, this._originalRange, model, cursorPosition);\n\t}\n}\n\nexport function inlineCompletionIsVisible(singleTextEdit: TextReplacement, originalRange: Range | undefined, model: ITextModel, cursorPosition: Position): boolean {\n\tconst minimizedReplacement = singleTextRemoveCommonPrefix(singleTextEdit, model);\n\tconst editRange = singleTextEdit.range;\n\tif (!editRange\n\t\t|| (originalRange && !originalRange.getStartPosition().equals(editRange.getStartPosition()))\n\t\t|| cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber\n\t\t|| minimizedReplacement.isEmpty // if the completion is empty after removing the common prefix of the completion and the model, the completion item would not be visible\n\t) {\n\t\treturn false;\n\t}\n\n\t// We might consider comparing by .toLowerText, but this requires GhostTextReplacement\n\tconst originalValue = model.getValueInRange(minimizedReplacement.range, EndOfLinePreference.LF);\n\tconst filterText = minimizedReplacement.text;\n\n\tconst cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n\n\tlet filterTextBefore = filterText.substring(0, cursorPosIndex);\n\tlet filterTextAfter = filterText.substring(cursorPosIndex);\n\n\tlet originalValueBefore = originalValue.substring(0, cursorPosIndex);\n\tlet originalValueAfter = originalValue.substring(cursorPosIndex);\n\n\tconst originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n\tif (minimizedReplacement.range.startColumn <= originalValueIndent) {\n\t\t// Remove indentation\n\t\toriginalValueBefore = originalValueBefore.trimStart();\n\t\tif (originalValueBefore.length === 0) {\n\t\t\toriginalValueAfter = originalValueAfter.trimStart();\n\t\t}\n\t\tfilterTextBefore = filterTextBefore.trimStart();\n\t\tif (filterTextBefore.length === 0) {\n\t\t\tfilterTextAfter = filterTextAfter.trimStart();\n\t\t}\n\t}\n\n\treturn filterTextBefore.startsWith(originalValueBefore)\n\t\t&& !!matchesSubString(originalValueAfter, filterTextAfter);\n}\n\nexport class InlineEditItem extends InlineSuggestionItemBase {\n\tpublic static create(\n\t\tdata: InlineSuggestData,\n\t\ttextModel: ITextModel,\n\t): InlineEditItem {\n\t\tconst offsetEdit = getStringEdit(textModel, data.range, data.insertText);\n\t\tconst text = new TextModelText(textModel);\n\t\tconst textEdit = TextEdit.fromStringEdit(offsetEdit, text);\n\t\tconst singleTextEdit = textEdit.toReplacement(text);\n\t\tconst identity = new InlineSuggestionIdentity();\n\n\t\tconst edits = offsetEdit.replacements.map(edit => {\n\t\t\tconst replacedRange = Range.fromPositions(textModel.getPositionAt(edit.replaceRange.start), textModel.getPositionAt(edit.replaceRange.endExclusive));\n\t\t\tconst replacedText = textModel.getValueInRange(replacedRange);\n\t\t\treturn SingleUpdatedNextEdit.create(edit, replacedText);\n\t\t});\n\t\tconst displayLocation = data.displayLocation ? InlineSuggestDisplayLocation.create(data.displayLocation) : undefined;\n\t\treturn new InlineEditItem(offsetEdit, singleTextEdit, data, identity, edits, displayLocation, false, textModel.getVersionId());\n\t}\n\n\tpublic readonly snippetInfo: SnippetInfo | undefined = undefined;\n\tpublic readonly additionalTextEdits: readonly ISingleEditOperation[] = [];\n\tpublic readonly isInlineEdit = true;\n\n\tprivate constructor(\n\t\tprivate readonly _edit: StringEdit,\n\t\tprivate readonly _textEdit: TextReplacement,\n\n\t\tdata: InlineSuggestData,\n\n\t\tidentity: InlineSuggestionIdentity,\n\t\tprivate readonly _edits: readonly SingleUpdatedNextEdit[],\n\t\tdisplayLocation: InlineSuggestDisplayLocation | undefined,\n\t\tprivate readonly _lastChangePartOfInlineEdit = false,\n\t\tprivate readonly _inlineEditModelVersion: number,\n\t) {\n\t\tsuper(data, identity, displayLocation);\n\t}\n\n\tpublic get updatedEditModelVersion(): number { return this._inlineEditModelVersion; }\n\tpublic get updatedEdit(): StringEdit { return this._edit; }\n\n\toverride getSingleTextEdit(): TextReplacement {\n\t\treturn this._textEdit;\n\t}\n\n\toverride withIdentity(identity: InlineSuggestionIdentity): InlineEditItem {\n\t\treturn new InlineEditItem(\n\t\t\tthis._edit,\n\t\t\tthis._textEdit,\n\t\t\tthis._data,\n\t\t\tidentity,\n\t\t\tthis._edits,\n\t\t\tthis.displayLocation,\n\t\t\tthis._lastChangePartOfInlineEdit,\n\t\t\tthis._inlineEditModelVersion,\n\t\t);\n\t}\n\n\toverride canBeReused(model: ITextModel, position: Position): boolean {\n\t\t// TODO@hediet I believe this can be simplified to `return true;`, as applying an edit should kick out this suggestion.\n\t\treturn this._lastChangePartOfInlineEdit && this.updatedEditModelVersion === model.getVersionId();\n\t}\n\n\toverride withEdit(textModelChanges: StringEdit, textModel: ITextModel): InlineEditItem | undefined {\n\t\tconst edit = this._applyTextModelChanges(textModelChanges, this._edits, textModel);\n\t\treturn edit;\n\t}\n\n\tprivate _applyTextModelChanges(textModelChanges: StringEdit, edits: readonly SingleUpdatedNextEdit[], textModel: ITextModel): InlineEditItem | undefined {\n\t\tedits = edits.map(innerEdit => innerEdit.applyTextModelChanges(textModelChanges));\n\n\t\tif (edits.some(edit => edit.edit === undefined)) {\n\t\t\treturn undefined; // change is invalid, so we will have to drop the completion\n\t\t}\n\n\t\tconst newTextModelVersion = textModel.getVersionId();\n\n\t\tlet inlineEditModelVersion = this._inlineEditModelVersion;\n\t\tconst lastChangePartOfInlineEdit = edits.some(edit => edit.lastChangeUpdatedEdit);\n\t\tif (lastChangePartOfInlineEdit) {\n\t\t\tinlineEditModelVersion = newTextModelVersion ?? -1;\n\t\t}\n\n\t\tif (newTextModelVersion === null || inlineEditModelVersion + 20 < newTextModelVersion) {\n\t\t\treturn undefined; // the completion has been ignored for a while, remove it\n\t\t}\n\n\t\tedits = edits.filter(innerEdit => !innerEdit.edit!.isEmpty);\n\t\tif (edits.length === 0) {\n\t\t\treturn undefined; // the completion has been typed by the user\n\t\t}\n\n\t\tconst newEdit = new StringEdit(edits.map(edit => edit.edit!));\n\t\tconst positionOffsetTransformer = getPositionOffsetTransformerFromTextModel(textModel);\n\t\tconst newTextEdit = positionOffsetTransformer.getTextEdit(newEdit).toReplacement(new TextModelText(textModel));\n\n\t\tlet newDisplayLocation = this.displayLocation;\n\t\tif (newDisplayLocation) {\n\t\t\tnewDisplayLocation = newDisplayLocation.withEdit(textModelChanges, positionOffsetTransformer);\n\t\t\tif (!newDisplayLocation) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn new InlineEditItem(\n\t\t\tnewEdit,\n\t\t\tnewTextEdit,\n\t\t\tthis._data,\n\t\t\tthis.identity,\n\t\t\tedits,\n\t\t\tnewDisplayLocation,\n\t\t\tlastChangePartOfInlineEdit,\n\t\t\tinlineEditModelVersion,\n\t\t);\n\t}\n}\n\nfunction getStringEdit(textModel: ITextModel, editRange: Range, replaceText: string): StringEdit {\n\tconst eol = textModel.getEOL();\n\tconst editOriginalText = textModel.getValueInRange(editRange);\n\tconst editReplaceText = replaceText.replace(/\\r\\n|\\r|\\n/g, eol);\n\n\tconst diffAlgorithm = linesDiffComputers.getDefault();\n\tconst lineDiffs = diffAlgorithm.computeDiff(\n\t\tsplitLines(editOriginalText),\n\t\tsplitLines(editReplaceText),\n\t\t{\n\t\t\tignoreTrimWhitespace: false,\n\t\t\tcomputeMoves: false,\n\t\t\textendToSubwords: true,\n\t\t\tmaxComputationTimeMs: 500,\n\t\t}\n\t);\n\n\tconst innerChanges = lineDiffs.changes.flatMap(c => c.innerChanges ?? []);\n\n\tfunction addRangeToPos(pos: Position, range: Range): Range {\n\t\tconst start = TextLength.fromPosition(range.getStartPosition());\n\t\treturn TextLength.ofRange(range).createRange(start.addToPosition(pos));\n\t}\n\n\tconst modifiedText = new StringText(editReplaceText);\n\n\tconst offsetEdit = new StringEdit(\n\t\tinnerChanges.map(c => {\n\t\t\tconst rangeInModel = addRangeToPos(editRange.getStartPosition(), c.originalRange);\n\t\t\tconst originalRange = getPositionOffsetTransformerFromTextModel(textModel).getOffsetRange(rangeInModel);\n\n\t\t\tconst replaceText = modifiedText.getValueOfRange(c.modifiedRange);\n\t\t\tconst edit = new StringReplacement(originalRange, replaceText);\n\n\t\t\tconst originalText = textModel.getValueInRange(rangeInModel);\n\t\t\treturn reshapeInlineEdit(edit, originalText, innerChanges.length, textModel);\n\t\t})\n\t);\n\n\treturn offsetEdit;\n}\n\nclass SingleUpdatedNextEdit {\n\tpublic static create(\n\t\tedit: StringReplacement,\n\t\treplacedText: string,\n\t): SingleUpdatedNextEdit {\n\t\tconst prefixLength = commonPrefixLength(edit.newText, replacedText);\n\t\tconst suffixLength = commonSuffixLength(edit.newText, replacedText);\n\t\tconst trimmedNewText = edit.newText.substring(prefixLength, edit.newText.length - suffixLength);\n\t\treturn new SingleUpdatedNextEdit(edit, trimmedNewText, prefixLength, suffixLength);\n\t}\n\n\tpublic get edit() { return this._edit; }\n\tpublic get lastChangeUpdatedEdit() { return this._lastChangeUpdatedEdit; }\n\n\tconstructor(\n\t\tprivate _edit: StringReplacement | undefined,\n\t\tprivate _trimmedNewText: string,\n\t\tprivate _prefixLength: number,\n\t\tprivate _suffixLength: number,\n\t\tprivate _lastChangeUpdatedEdit: boolean = false,\n\t) {\n\t}\n\n\tpublic applyTextModelChanges(textModelChanges: StringEdit) {\n\t\tconst c = this._clone();\n\t\tc._applyTextModelChanges(textModelChanges);\n\t\treturn c;\n\t}\n\n\tprivate _clone(): SingleUpdatedNextEdit {\n\t\treturn new SingleUpdatedNextEdit(\n\t\t\tthis._edit,\n\t\t\tthis._trimmedNewText,\n\t\t\tthis._prefixLength,\n\t\t\tthis._suffixLength,\n\t\t\tthis._lastChangeUpdatedEdit,\n\t\t);\n\t}\n\n\tprivate _applyTextModelChanges(textModelChanges: StringEdit) {\n\t\tthis._lastChangeUpdatedEdit = false;\n\n\t\tif (!this._edit) {\n\t\t\tthrow new BugIndicatingError('UpdatedInnerEdits: No edit to apply changes to');\n\t\t}\n\n\t\tconst result = this._applyChanges(this._edit, textModelChanges);\n\t\tif (!result) {\n\t\t\tthis._edit = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._edit = result.edit;\n\t\tthis._lastChangeUpdatedEdit = result.editHasChanged;\n\t}\n\n\tprivate _applyChanges(edit: StringReplacement, textModelChanges: StringEdit): { edit: StringReplacement; editHasChanged: boolean } | undefined {\n\t\tlet editStart = edit.replaceRange.start;\n\t\tlet editEnd = edit.replaceRange.endExclusive;\n\t\tlet editReplaceText = edit.newText;\n\t\tlet editHasChanged = false;\n\n\t\tconst shouldPreserveEditShape = this._prefixLength > 0 || this._suffixLength > 0;\n\n\t\tfor (let i = textModelChanges.replacements.length - 1; i >= 0; i--) {\n\t\t\tconst change = textModelChanges.replacements[i];\n\n\t\t\t// INSERTIONS (only support inserting at start of edit)\n\t\t\tconst isInsertion = change.newText.length > 0 && change.replaceRange.isEmpty;\n\n\t\t\tif (isInsertion && !shouldPreserveEditShape && change.replaceRange.start === editStart && editReplaceText.startsWith(change.newText)) {\n\t\t\t\teditStart += change.newText.length;\n\t\t\t\teditReplaceText = editReplaceText.substring(change.newText.length);\n\t\t\t\teditEnd = Math.max(editStart, editEnd);\n\t\t\t\teditHasChanged = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (isInsertion && shouldPreserveEditShape && change.replaceRange.start === editStart + this._prefixLength && this._trimmedNewText.startsWith(change.newText)) {\n\t\t\t\teditEnd += change.newText.length;\n\t\t\t\teditHasChanged = true;\n\t\t\t\tthis._prefixLength += change.newText.length;\n\t\t\t\tthis._trimmedNewText = this._trimmedNewText.substring(change.newText.length);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// DELETIONS\n\t\t\tconst isDeletion = change.newText.length === 0 && change.replaceRange.length > 0;\n\t\t\tif (isDeletion && change.replaceRange.start >= editStart + this._prefixLength && change.replaceRange.endExclusive <= editEnd - this._suffixLength) {\n\t\t\t\t// user deleted text IN-BETWEEN the deletion range\n\t\t\t\teditEnd -= change.replaceRange.length;\n\t\t\t\teditHasChanged = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// user did exactly the edit\n\t\t\tif (change.equals(edit)) {\n\t\t\t\teditHasChanged = true;\n\t\t\t\teditStart = change.replaceRange.endExclusive;\n\t\t\t\teditReplaceText = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// MOVE EDIT\n\t\t\tif (change.replaceRange.start > editEnd) {\n\t\t\t\t// the change happens after the completion range\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (change.replaceRange.endExclusive < editStart) {\n\t\t\t\t// the change happens before the completion range\n\t\t\t\teditStart += change.newText.length - change.replaceRange.length;\n\t\t\t\teditEnd += change.newText.length - change.replaceRange.length;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// The change intersects the completion, so we will have to drop the completion\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// the resulting edit is a noop as the original and new text are the same\n\t\tif (this._trimmedNewText.length === 0 && editStart + this._prefixLength === editEnd - this._suffixLength) {\n\t\t\treturn { edit: new StringReplacement(new OffsetRange(editStart + this._prefixLength, editStart + this._prefixLength), ''), editHasChanged: true };\n\t\t}\n\n\t\treturn { edit: new StringReplacement(new OffsetRange(editStart, editEnd), editReplaceText), editHasChanged };\n\t}\n}\n\nfunction reshapeInlineCompletion(edit: StringReplacement, textModel: ITextModel): StringReplacement {\n\t// If the insertion is a multi line insertion starting on the next line\n\t// Move it forwards so that the multi line insertion starts on the current line\n\tconst eol = textModel.getEOL();\n\tif (edit.replaceRange.isEmpty && edit.newText.includes(eol)) {\n\t\tedit = reshapeMultiLineInsertion(edit, textModel);\n\t}\n\n\treturn edit;\n}\n\nfunction reshapeInlineEdit(edit: StringReplacement, originalText: string, totalInnerEdits: number, textModel: ITextModel): StringReplacement {\n\t// TODO: EOL are not properly trimmed by the diffAlgorithm #12680\n\tconst eol = textModel.getEOL();\n\tif (edit.newText.endsWith(eol) && originalText.endsWith(eol)) {\n\t\tedit = new StringReplacement(edit.replaceRange.deltaEnd(-eol.length), edit.newText.slice(0, -eol.length));\n\t}\n\n\t// INSERTION\n\t// If the insertion ends with a new line and is inserted at the start of a line which has text,\n\t// we move the insertion to the end of the previous line if possible\n\tif (totalInnerEdits === 1 && edit.replaceRange.isEmpty && edit.newText.includes(eol)) {\n\t\tconst startPosition = textModel.getPositionAt(edit.replaceRange.start);\n\t\tconst hasTextOnInsertionLine = textModel.getLineLength(startPosition.lineNumber) !== 0;\n\t\tif (hasTextOnInsertionLine) {\n\t\t\tedit = reshapeMultiLineInsertion(edit, textModel);\n\t\t}\n\t}\n\n\t// The diff algorithm extended a simple edit to the entire word\n\t// shrink it back to a simple edit if it is deletion/insertion only\n\tif (totalInnerEdits === 1) {\n\t\tconst prefixLength = commonPrefixLength(originalText, edit.newText);\n\t\tconst suffixLength = commonSuffixLength(originalText.slice(prefixLength), edit.newText.slice(prefixLength));\n\n\t\t// reshape it back to an insertion\n\t\tif (prefixLength + suffixLength === originalText.length) {\n\t\t\treturn new StringReplacement(edit.replaceRange.deltaStart(prefixLength).deltaEnd(-suffixLength), edit.newText.substring(prefixLength, edit.newText.length - suffixLength));\n\t\t}\n\n\t\t// reshape it back to a deletion\n\t\tif (prefixLength + suffixLength === edit.newText.length) {\n\t\t\treturn new StringReplacement(edit.replaceRange.deltaStart(prefixLength).deltaEnd(-suffixLength), '');\n\t\t}\n\t}\n\n\treturn edit;\n}\n\nfunction reshapeMultiLineInsertion(edit: StringReplacement, textModel: ITextModel): StringReplacement {\n\tif (!edit.replaceRange.isEmpty) {\n\t\tthrow new BugIndicatingError('Unexpected original range');\n\t}\n\n\tif (edit.replaceRange.start === 0) {\n\t\treturn edit;\n\t}\n\n\tconst eol = textModel.getEOL();\n\tconst startPosition = textModel.getPositionAt(edit.replaceRange.start);\n\tconst startColumn = startPosition.column;\n\tconst startLineNumber = startPosition.lineNumber;\n\n\t// If the insertion ends with a new line and is inserted at the start of a line which has text,\n\t// we move the insertion to the end of the previous line if possible\n\tif (startColumn === 1 && startLineNumber > 1 && edit.newText.endsWith(eol) && !edit.newText.startsWith(eol)) {\n\t\treturn new StringReplacement(edit.replaceRange.delta(-1), eol + edit.newText.slice(0, -eol.length));\n\t}\n\n\treturn edit;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { matchesSubString } from '../../../../../base/common/filters.js';\nimport { observableSignal } from '../../../../../base/common/observable.js';\nimport { commonPrefixLength, commonSuffixLength, splitLines } from '../../../../../base/common/strings.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ISingleEditOperation } from '../../../../common/core/editOperation.js';\nimport { applyEditsToRanges, StringEdit, StringReplacement } from '../../../../common/core/edits/stringEdit.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { PositionOffsetTransformerBase } from '../../../../common/core/text/positionToOffset.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { StringText } from '../../../../common/core/text/abstractText.js';\nimport { TextLength } from '../../../../common/core/text/textLength.js';\nimport { linesDiffComputers } from '../../../../common/diff/linesDiffComputers.js';\nimport { InlineCompletion, InlineCompletionTriggerKind, Command, InlineCompletionWarning, PartialAcceptInfo, InlineCompletionEndOfLifeReason, InlineCompletionDisplayLocationKind } from '../../../../common/languages.js';\nimport { ITextModel, EndOfLinePreference } from '../../../../common/model.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { IDisplayLocation, InlineSuggestData, InlineSuggestionList, PartialAcceptance, SnippetInfo } from './provideInlineCompletions.js';\nimport { singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { getPositionOffsetTransformerFromTextModel } from '../../../../common/core/text/getPositionOffsetTransformerFromTextModel.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from '../view/inlineEdits/inlineEditsViewInterface.js';\n\nexport type InlineSuggestionItem = InlineEditItem | InlineCompletionItem;\n\nexport namespace InlineSuggestionItem {\n\texport function create(\n\t\tdata: InlineSuggestData,\n\t\ttextModel: ITextModel,\n\t): InlineSuggestionItem {\n\t\tif (!data.isInlineEdit) {\n\t\t\treturn InlineCompletionItem.create(data, textModel);\n\t\t} else {\n\t\t\treturn InlineEditItem.create(data, textModel);\n\t\t}\n\t}\n}\n\nabstract class InlineSuggestionItemBase {\n\tconstructor(\n\t\tprotected readonly _data: InlineSuggestData,\n\t\tpublic readonly identity: InlineSuggestionIdentity,\n\t\tpublic readonly displayLocation: InlineSuggestDisplayLocation | undefined\n\t) { }\n\n\t/**\n\t * A reference to the original inline completion list this inline completion has been constructed from.\n\t * Used for event data to ensure referential equality.\n\t*/\n\tpublic get source(): InlineSuggestionList { return this._data.source; }\n\n\tpublic get isFromExplicitRequest(): boolean { return this._data.context.triggerKind === InlineCompletionTriggerKind.Explicit; }\n\tpublic get forwardStable(): boolean { return this.source.inlineSuggestions.enableForwardStability ?? false; }\n\tpublic get editRange(): Range { return this.getSingleTextEdit().range; }\n\tpublic get targetRange(): Range { return this.displayLocation?.range ?? this.editRange; }\n\tpublic get insertText(): string { return this.getSingleTextEdit().text; }\n\tpublic get semanticId(): string { return this.hash; }\n\tpublic get action(): Command | undefined { return this._sourceInlineCompletion.action; }\n\tpublic get command(): Command | undefined { return this._sourceInlineCompletion.command; }\n\tpublic get warning(): InlineCompletionWarning | undefined { return this._sourceInlineCompletion.warning; }\n\tpublic get showInlineEditMenu(): boolean { return !!this._sourceInlineCompletion.showInlineEditMenu; }\n\tpublic get hash() {\n\t\treturn JSON.stringify([\n\t\t\tthis.getSingleTextEdit().text,\n\t\t\tthis.getSingleTextEdit().range.getStartPosition().toString()\n\t\t]);\n\t}\n\n\tpublic get requestUuid(): string { return this._data.context.requestUuid; }\n\n\tpublic get partialAccepts(): PartialAcceptance { return this._data.partialAccepts; }\n\n\t/**\n\t * A reference to the original inline completion this inline completion has been constructed from.\n\t * Used for event data to ensure referential equality.\n\t*/\n\tprivate get _sourceInlineCompletion(): InlineCompletion { return this._data.sourceInlineCompletion; }\n\n\n\tpublic abstract getSingleTextEdit(): TextReplacement;\n\n\tpublic abstract withEdit(userEdit: StringEdit, textModel: ITextModel): InlineSuggestionItem | undefined;\n\n\tpublic abstract withIdentity(identity: InlineSuggestionIdentity): InlineSuggestionItem;\n\tpublic abstract canBeReused(model: ITextModel, position: Position): boolean;\n\n\n\tpublic addRef(): void {\n\t\tthis.identity.addRef();\n\t\tthis.source.addRef();\n\t}\n\n\tpublic removeRef(): void {\n\t\tthis.identity.removeRef();\n\t\tthis.source.removeRef();\n\t}\n\n\tpublic reportInlineEditShown(commandService: ICommandService, viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData) {\n\t\tthis._data.reportInlineEditShown(commandService, this.insertText, viewKind, viewData);\n\t}\n\n\tpublic reportPartialAccept(acceptedCharacters: number, info: PartialAcceptInfo, partialAcceptance: PartialAcceptance) {\n\t\tthis._data.reportPartialAccept(acceptedCharacters, info, partialAcceptance);\n\t}\n\n\tpublic reportEndOfLife(reason: InlineCompletionEndOfLifeReason): void {\n\t\tthis._data.reportEndOfLife(reason);\n\t}\n\n\tpublic setEndOfLifeReason(reason: InlineCompletionEndOfLifeReason): void {\n\t\tthis._data.setEndOfLifeReason(reason);\n\t}\n\n\tpublic reportInlineEditError(reason: string): void {\n\t\tthis._data.reportInlineEditError(reason);\n\t}\n\n\tpublic setIsPreceeded(item: InlineSuggestionItem): void {\n\t\tthis._data.setIsPreceeded(item.partialAccepts);\n\t}\n\n\t/**\n\t * Avoid using this method. Instead introduce getters for the needed properties.\n\t*/\n\tpublic getSourceCompletion(): InlineCompletion {\n\t\treturn this._sourceInlineCompletion;\n\t}\n}\n\nexport class InlineSuggestionIdentity {\n\tprivate static idCounter = 0;\n\tprivate readonly _onDispose = observableSignal(this);\n\n\tprivate _refCount = 1;\n\tpublic readonly id = 'InlineCompletionIdentity' + InlineSuggestionIdentity.idCounter++;\n\n\taddRef() {\n\t\tthis._refCount++;\n\t}\n\n\tremoveRef() {\n\t\tthis._refCount--;\n\t\tif (this._refCount === 0) {\n\t\t\tthis._onDispose.trigger(undefined);\n\t\t}\n\t}\n}\n\nclass InlineSuggestDisplayLocation implements IDisplayLocation {\n\n\tpublic static create(displayLocation: IDisplayLocation) {\n\t\treturn new InlineSuggestDisplayLocation(\n\t\t\tdisplayLocation.range,\n\t\t\tdisplayLocation.label,\n\t\t\tdisplayLocation.kind\n\t\t);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly label: string,\n\t\tpublic readonly kind: InlineCompletionDisplayLocationKind\n\t) { }\n\n\tpublic withEdit(edit: StringEdit, positionOffsetTransformer: PositionOffsetTransformerBase): InlineSuggestDisplayLocation | undefined {\n\t\tconst offsetRange = new OffsetRange(\n\t\t\tpositionOffsetTransformer.getOffset(this.range.getStartPosition()),\n\t\t\tpositionOffsetTransformer.getOffset(this.range.getEndPosition())\n\t\t);\n\n\t\tconst newOffsetRange = applyEditsToRanges([offsetRange], edit)[0];\n\t\tif (!newOffsetRange) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst newRange = positionOffsetTransformer.getRange(newOffsetRange);\n\n\t\treturn new InlineSuggestDisplayLocation(newRange, this.label, this.kind);\n\t}\n}\n\nexport class InlineCompletionItem extends InlineSuggestionItemBase {\n\tpublic static create(\n\t\tdata: InlineSuggestData,\n\t\ttextModel: ITextModel,\n\t): InlineCompletionItem {\n\t\tconst identity = new InlineSuggestionIdentity();\n\t\tconst transformer = getPositionOffsetTransformerFromTextModel(textModel);\n\n\t\tconst insertText = data.insertText.replace(/\\r\\n|\\r|\\n/g, textModel.getEOL());\n\n\t\tconst edit = reshapeInlineCompletion(new StringReplacement(transformer.getOffsetRange(data.range), insertText), textModel);\n\t\tconst trimmedEdit = edit.removeCommonSuffixAndPrefix(textModel.getValue());\n\t\tconst textEdit = transformer.getTextReplacement(edit);\n\n\t\tconst displayLocation = data.displayLocation ? InlineSuggestDisplayLocation.create(data.displayLocation) : undefined;\n\n\t\treturn new InlineCompletionItem(edit, trimmedEdit, textEdit, textEdit.range, data.snippetInfo, data.additionalTextEdits, data, identity, displayLocation);\n\t}\n\n\tpublic readonly isInlineEdit = false;\n\n\tprivate constructor(\n\t\tprivate readonly _edit: StringReplacement,\n\t\tprivate readonly _trimmedEdit: StringReplacement,\n\t\tprivate readonly _textEdit: TextReplacement,\n\t\tprivate readonly _originalRange: Range,\n\t\tpublic readonly snippetInfo: SnippetInfo | undefined,\n\t\tpublic readonly additionalTextEdits: readonly ISingleEditOperation[],\n\n\t\tdata: InlineSuggestData,\n\t\tidentity: InlineSuggestionIdentity,\n\t\tdisplayLocation: InlineSuggestDisplayLocation | undefined,\n\t) {\n\t\tsuper(data, identity, displayLocation);\n\t}\n\n\toverride get hash(): string {\n\t\treturn JSON.stringify(this._trimmedEdit.toJson());\n\t}\n\n\toverride getSingleTextEdit(): TextReplacement { return this._textEdit; }\n\n\toverride withIdentity(identity: InlineSuggestionIdentity): InlineCompletionItem {\n\t\treturn new InlineCompletionItem(\n\t\t\tthis._edit,\n\t\t\tthis._trimmedEdit,\n\t\t\tthis._textEdit,\n\t\t\tthis._originalRange,\n\t\t\tthis.snippetInfo,\n\t\t\tthis.additionalTextEdits,\n\t\t\tthis._data,\n\t\t\tidentity,\n\t\t\tthis.displayLocation\n\t\t);\n\t}\n\n\toverride withEdit(textModelEdit: StringEdit, textModel: ITextModel): InlineCompletionItem | undefined {\n\t\tconst newEditRange = applyEditsToRanges([this._edit.replaceRange], textModelEdit);\n\t\tif (newEditRange.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst newEdit = new StringReplacement(newEditRange[0], this._textEdit.text);\n\t\tconst positionOffsetTransformer = getPositionOffsetTransformerFromTextModel(textModel);\n\t\tconst newTextEdit = positionOffsetTransformer.getTextReplacement(newEdit);\n\n\t\tlet newDisplayLocation = this.displayLocation;\n\t\tif (newDisplayLocation) {\n\t\t\tnewDisplayLocation = newDisplayLocation.withEdit(textModelEdit, positionOffsetTransformer);\n\t\t\tif (!newDisplayLocation) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\tconst trimmedEdit = newEdit.removeCommonSuffixAndPrefix(textModel.getValue());\n\n\t\treturn new InlineCompletionItem(\n\t\t\tnewEdit,\n\t\t\ttrimmedEdit,\n\t\t\tnewTextEdit,\n\t\t\tthis._originalRange,\n\t\t\tthis.snippetInfo,\n\t\t\tthis.additionalTextEdits,\n\t\t\tthis._data,\n\t\t\tthis.identity,\n\t\t\tnewDisplayLocation\n\t\t);\n\t}\n\n\toverride canBeReused(model: ITextModel, position: Position): boolean {\n\t\t// TODO@hediet I believe this can be simplified to `return true;`, as applying an edit should kick out this suggestion.\n\t\tconst updatedRange = this._textEdit.range;\n\t\tconst result = !!updatedRange\n\t\t\t&& updatedRange.containsPosition(position)\n\t\t\t&& this.isVisible(model, position)\n\t\t\t&& TextLength.ofRange(updatedRange).isGreaterThanOrEqualTo(TextLength.ofRange(this._originalRange));\n\t\treturn result;\n\t}\n\n\tpublic isVisible(model: ITextModel, cursorPosition: Position): boolean {\n\t\tconst singleTextEdit = this.getSingleTextEdit();\n\t\treturn inlineCompletionIsVisible(singleTextEdit, this._originalRange, model, cursorPosition);\n\t}\n}\n\nexport function inlineCompletionIsVisible(singleTextEdit: TextReplacement, originalRange: Range | undefined, model: ITextModel, cursorPosition: Position): boolean {\n\tconst minimizedReplacement = singleTextRemoveCommonPrefix(singleTextEdit, model);\n\tconst editRange = singleTextEdit.range;\n\tif (!editRange\n\t\t|| (originalRange && !originalRange.getStartPosition().equals(editRange.getStartPosition()))\n\t\t|| cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber\n\t\t|| minimizedReplacement.isEmpty // if the completion is empty after removing the common prefix of the completion and the model, the completion item would not be visible\n\t) {\n\t\treturn false;\n\t}\n\n\t// We might consider comparing by .toLowerText, but this requires GhostTextReplacement\n\tconst originalValue = model.getValueInRange(minimizedReplacement.range, EndOfLinePreference.LF);\n\tconst filterText = minimizedReplacement.text;\n\n\tconst cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n\n\tlet filterTextBefore = filterText.substring(0, cursorPosIndex);\n\tlet filterTextAfter = filterText.substring(cursorPosIndex);\n\n\tlet originalValueBefore = originalValue.substring(0, cursorPosIndex);\n\tlet originalValueAfter = originalValue.substring(cursorPosIndex);\n\n\tconst originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n\tif (minimizedReplacement.range.startColumn <= originalValueIndent) {\n\t\t// Remove indentation\n\t\toriginalValueBefore = originalValueBefore.trimStart();\n\t\tif (originalValueBefore.length === 0) {\n\t\t\toriginalValueAfter = originalValueAfter.trimStart();\n\t\t}\n\t\tfilterTextBefore = filterTextBefore.trimStart();\n\t\tif (filterTextBefore.length === 0) {\n\t\t\tfilterTextAfter = filterTextAfter.trimStart();\n\t\t}\n\t}\n\n\treturn filterTextBefore.startsWith(originalValueBefore)\n\t\t&& !!matchesSubString(originalValueAfter, filterTextAfter);\n}\n\nexport class InlineEditItem extends InlineSuggestionItemBase {\n\tpublic static create(\n\t\tdata: InlineSuggestData,\n\t\ttextModel: ITextModel,\n\t): InlineEditItem {\n\t\tconst offsetEdit = getStringEdit(textModel, data.range, data.insertText);\n\t\tconst text = new TextModelText(textModel);\n\t\tconst textEdit = TextEdit.fromStringEdit(offsetEdit, text);\n\t\tconst singleTextEdit = textEdit.toReplacement(text);\n\t\tconst identity = new InlineSuggestionIdentity();\n\n\t\tconst edits = offsetEdit.replacements.map(edit => {\n\t\t\tconst replacedRange = Range.fromPositions(textModel.getPositionAt(edit.replaceRange.start), textModel.getPositionAt(edit.replaceRange.endExclusive));\n\t\t\tconst replacedText = textModel.getValueInRange(replacedRange);\n\t\t\treturn SingleUpdatedNextEdit.create(edit, replacedText);\n\t\t});\n\t\tconst displayLocation = data.displayLocation ? InlineSuggestDisplayLocation.create(data.displayLocation) : undefined;\n\t\treturn new InlineEditItem(offsetEdit, singleTextEdit, data, identity, edits, displayLocation, false, textModel.getVersionId());\n\t}\n\n\tpublic readonly snippetInfo: SnippetInfo | undefined = undefined;\n\tpublic readonly additionalTextEdits: readonly ISingleEditOperation[] = [];\n\tpublic readonly isInlineEdit = true;\n\n\tprivate constructor(\n\t\tprivate readonly _edit: StringEdit,\n\t\tprivate readonly _textEdit: TextReplacement,\n\n\t\tdata: InlineSuggestData,\n\n\t\tidentity: InlineSuggestionIdentity,\n\t\tprivate readonly _edits: readonly SingleUpdatedNextEdit[],\n\t\tdisplayLocation: InlineSuggestDisplayLocation | undefined,\n\t\tprivate readonly _lastChangePartOfInlineEdit = false,\n\t\tprivate readonly _inlineEditModelVersion: number,\n\t) {\n\t\tsuper(data, identity, displayLocation);\n\t}\n\n\tpublic get updatedEditModelVersion(): number { return this._inlineEditModelVersion; }\n\tpublic get updatedEdit(): StringEdit { return this._edit; }\n\n\toverride getSingleTextEdit(): TextReplacement {\n\t\treturn this._textEdit;\n\t}\n\n\toverride withIdentity(identity: InlineSuggestionIdentity): InlineEditItem {\n\t\treturn new InlineEditItem(\n\t\t\tthis._edit,\n\t\t\tthis._textEdit,\n\t\t\tthis._data,\n\t\t\tidentity,\n\t\t\tthis._edits,\n\t\t\tthis.displayLocation,\n\t\t\tthis._lastChangePartOfInlineEdit,\n\t\t\tthis._inlineEditModelVersion,\n\t\t);\n\t}\n\n\toverride canBeReused(model: ITextModel, position: Position): boolean {\n\t\t// TODO@hediet I believe this can be simplified to `return true;`, as applying an edit should kick out this suggestion.\n\t\treturn this._lastChangePartOfInlineEdit && this.updatedEditModelVersion === model.getVersionId();\n\t}\n\n\toverride withEdit(textModelChanges: StringEdit, textModel: ITextModel): InlineEditItem | undefined {\n\t\tconst edit = this._applyTextModelChanges(textModelChanges, this._edits, textModel);\n\t\treturn edit;\n\t}\n\n\tprivate _applyTextModelChanges(textModelChanges: StringEdit, edits: readonly SingleUpdatedNextEdit[], textModel: ITextModel): InlineEditItem | undefined {\n\t\tedits = edits.map(innerEdit => innerEdit.applyTextModelChanges(textModelChanges));\n\n\t\tif (edits.some(edit => edit.edit === undefined)) {\n\t\t\treturn undefined; // change is invalid, so we will have to drop the completion\n\t\t}\n\n\t\tconst newTextModelVersion = textModel.getVersionId();\n\n\t\tlet inlineEditModelVersion = this._inlineEditModelVersion;\n\t\tconst lastChangePartOfInlineEdit = edits.some(edit => edit.lastChangeUpdatedEdit);\n\t\tif (lastChangePartOfInlineEdit) {\n\t\t\tinlineEditModelVersion = newTextModelVersion ?? -1;\n\t\t}\n\n\t\tif (newTextModelVersion === null || inlineEditModelVersion + 20 < newTextModelVersion) {\n\t\t\treturn undefined; // the completion has been ignored for a while, remove it\n\t\t}\n\n\t\tedits = edits.filter(innerEdit => !innerEdit.edit!.isEmpty);\n\t\tif (edits.length === 0) {\n\t\t\treturn undefined; // the completion has been typed by the user\n\t\t}\n\n\t\tconst newEdit = new StringEdit(edits.map(edit => edit.edit!));\n\t\tconst positionOffsetTransformer = getPositionOffsetTransformerFromTextModel(textModel);\n\t\tconst newTextEdit = positionOffsetTransformer.getTextEdit(newEdit).toReplacement(new TextModelText(textModel));\n\n\t\tlet newDisplayLocation = this.displayLocation;\n\t\tif (newDisplayLocation) {\n\t\t\tnewDisplayLocation = newDisplayLocation.withEdit(textModelChanges, positionOffsetTransformer);\n\t\t\tif (!newDisplayLocation) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\treturn new InlineEditItem(\n\t\t\tnewEdit,\n\t\t\tnewTextEdit,\n\t\t\tthis._data,\n\t\t\tthis.identity,\n\t\t\tedits,\n\t\t\tnewDisplayLocation,\n\t\t\tlastChangePartOfInlineEdit,\n\t\t\tinlineEditModelVersion,\n\t\t);\n\t}\n}\n\nfunction getStringEdit(textModel: ITextModel, editRange: Range, replaceText: string): StringEdit {\n\tconst eol = textModel.getEOL();\n\tconst editOriginalText = textModel.getValueInRange(editRange);\n\tconst editReplaceText = replaceText.replace(/\\r\\n|\\r|\\n/g, eol);\n\n\tconst diffAlgorithm = linesDiffComputers.getDefault();\n\tconst lineDiffs = diffAlgorithm.computeDiff(\n\t\tsplitLines(editOriginalText),\n\t\tsplitLines(editReplaceText),\n\t\t{\n\t\t\tignoreTrimWhitespace: false,\n\t\t\tcomputeMoves: false,\n\t\t\textendToSubwords: true,\n\t\t\tmaxComputationTimeMs: 500,\n\t\t}\n\t);\n\n\tconst innerChanges = lineDiffs.changes.flatMap(c => c.innerChanges ?? []);\n\n\tfunction addRangeToPos(pos: Position, range: Range): Range {\n\t\tconst start = TextLength.fromPosition(range.getStartPosition());\n\t\treturn TextLength.ofRange(range).createRange(start.addToPosition(pos));\n\t}\n\n\tconst modifiedText = new StringText(editReplaceText);\n\n\tconst offsetEdit = new StringEdit(\n\t\tinnerChanges.map(c => {\n\t\t\tconst rangeInModel = addRangeToPos(editRange.getStartPosition(), c.originalRange);\n\t\t\tconst originalRange = getPositionOffsetTransformerFromTextModel(textModel).getOffsetRange(rangeInModel);\n\n\t\t\tconst replaceText = modifiedText.getValueOfRange(c.modifiedRange);\n\t\t\tconst edit = new StringReplacement(originalRange, replaceText);\n\n\t\t\tconst originalText = textModel.getValueInRange(rangeInModel);\n\t\t\treturn reshapeInlineEdit(edit, originalText, innerChanges.length, textModel);\n\t\t})\n\t);\n\n\treturn offsetEdit;\n}\n\nclass SingleUpdatedNextEdit {\n\tpublic static create(\n\t\tedit: StringReplacement,\n\t\treplacedText: string,\n\t): SingleUpdatedNextEdit {\n\t\tconst prefixLength = commonPrefixLength(edit.newText, replacedText);\n\t\tconst suffixLength = commonSuffixLength(edit.newText, replacedText);\n\t\tconst trimmedNewText = edit.newText.substring(prefixLength, edit.newText.length - suffixLength);\n\t\treturn new SingleUpdatedNextEdit(edit, trimmedNewText, prefixLength, suffixLength);\n\t}\n\n\tpublic get edit() { return this._edit; }\n\tpublic get lastChangeUpdatedEdit() { return this._lastChangeUpdatedEdit; }\n\n\tconstructor(\n\t\tprivate _edit: StringReplacement | undefined,\n\t\tprivate _trimmedNewText: string,\n\t\tprivate _prefixLength: number,\n\t\tprivate _suffixLength: number,\n\t\tprivate _lastChangeUpdatedEdit: boolean = false,\n\t) {\n\t}\n\n\tpublic applyTextModelChanges(textModelChanges: StringEdit) {\n\t\tconst c = this._clone();\n\t\tc._applyTextModelChanges(textModelChanges);\n\t\treturn c;\n\t}\n\n\tprivate _clone(): SingleUpdatedNextEdit {\n\t\treturn new SingleUpdatedNextEdit(\n\t\t\tthis._edit,\n\t\t\tthis._trimmedNewText,\n\t\t\tthis._prefixLength,\n\t\t\tthis._suffixLength,\n\t\t\tthis._lastChangeUpdatedEdit,\n\t\t);\n\t}\n\n\tprivate _applyTextModelChanges(textModelChanges: StringEdit) {\n\t\tthis._lastChangeUpdatedEdit = false;\n\n\t\tif (!this._edit) {\n\t\t\tthrow new BugIndicatingError('UpdatedInnerEdits: No edit to apply changes to');\n\t\t}\n\n\t\tconst result = this._applyChanges(this._edit, textModelChanges);\n\t\tif (!result) {\n\t\t\tthis._edit = undefined;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._edit = result.edit;\n\t\tthis._lastChangeUpdatedEdit = result.editHasChanged;\n\t}\n\n\tprivate _applyChanges(edit: StringReplacement, textModelChanges: StringEdit): { edit: StringReplacement; editHasChanged: boolean } | undefined {\n\t\tlet editStart = edit.replaceRange.start;\n\t\tlet editEnd = edit.replaceRange.endExclusive;\n\t\tlet editReplaceText = edit.newText;\n\t\tlet editHasChanged = false;\n\n\t\tconst shouldPreserveEditShape = this._prefixLength > 0 || this._suffixLength > 0;\n\n\t\tfor (let i = textModelChanges.replacements.length - 1; i >= 0; i--) {\n\t\t\tconst change = textModelChanges.replacements[i];\n\n\t\t\t// INSERTIONS (only support inserting at start of edit)\n\t\t\tconst isInsertion = change.newText.length > 0 && change.replaceRange.isEmpty;\n\n\t\t\tif (isInsertion && !shouldPreserveEditShape && change.replaceRange.start === editStart && editReplaceText.startsWith(change.newText)) {\n\t\t\t\teditStart += change.newText.length;\n\t\t\t\teditReplaceText = editReplaceText.substring(change.newText.length);\n\t\t\t\teditEnd = Math.max(editStart, editEnd);\n\t\t\t\teditHasChanged = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (isInsertion && shouldPreserveEditShape && change.replaceRange.start === editStart + this._prefixLength && this._trimmedNewText.startsWith(change.newText)) {\n\t\t\t\teditEnd += change.newText.length;\n\t\t\t\teditHasChanged = true;\n\t\t\t\tthis._prefixLength += change.newText.length;\n\t\t\t\tthis._trimmedNewText = this._trimmedNewText.substring(change.newText.length);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// DELETIONS\n\t\t\tconst isDeletion = change.newText.length === 0 && change.replaceRange.length > 0;\n\t\t\tif (isDeletion && change.replaceRange.start >= editStart + this._prefixLength && change.replaceRange.endExclusive <= editEnd - this._suffixLength) {\n\t\t\t\t// user deleted text IN-BETWEEN the deletion range\n\t\t\t\teditEnd -= change.replaceRange.length;\n\t\t\t\teditHasChanged = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// user did exactly the edit\n\t\t\tif (change.equals(edit)) {\n\t\t\t\teditHasChanged = true;\n\t\t\t\teditStart = change.replaceRange.endExclusive;\n\t\t\t\teditReplaceText = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// MOVE EDIT\n\t\t\tif (change.replaceRange.start > editEnd) {\n\t\t\t\t// the change happens after the completion range\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (change.replaceRange.endExclusive < editStart) {\n\t\t\t\t// the change happens before the completion range\n\t\t\t\teditStart += change.newText.length - change.replaceRange.length;\n\t\t\t\teditEnd += change.newText.length - change.replaceRange.length;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// The change intersects the completion, so we will have to drop the completion\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// the resulting edit is a noop as the original and new text are the same\n\t\tif (this._trimmedNewText.length === 0 && editStart + this._prefixLength === editEnd - this._suffixLength) {\n\t\t\treturn { edit: new StringReplacement(new OffsetRange(editStart + this._prefixLength, editStart + this._prefixLength), ''), editHasChanged: true };\n\t\t}\n\n\t\treturn { edit: new StringReplacement(new OffsetRange(editStart, editEnd), editReplaceText), editHasChanged };\n\t}\n}\n\nfunction reshapeInlineCompletion(edit: StringReplacement, textModel: ITextModel): StringReplacement {\n\t// If the insertion is a multi line insertion starting on the next line\n\t// Move it forwards so that the multi line insertion starts on the current line\n\tconst eol = textModel.getEOL();\n\tif (edit.replaceRange.isEmpty && edit.newText.includes(eol)) {\n\t\tedit = reshapeMultiLineInsertion(edit, textModel);\n\t}\n\n\treturn edit;\n}\n\nfunction reshapeInlineEdit(edit: StringReplacement, originalText: string, totalInnerEdits: number, textModel: ITextModel): StringReplacement {\n\t// TODO: EOL are not properly trimmed by the diffAlgorithm #12680\n\tconst eol = textModel.getEOL();\n\tif (edit.newText.endsWith(eol) && originalText.endsWith(eol)) {\n\t\tedit = new StringReplacement(edit.replaceRange.deltaEnd(-eol.length), edit.newText.slice(0, -eol.length));\n\t}\n\n\t// INSERTION\n\t// If the insertion ends with a new line and is inserted at the start of a line which has text,\n\t// we move the insertion to the end of the previous line if possible\n\tif (totalInnerEdits === 1 && edit.replaceRange.isEmpty && edit.newText.includes(eol)) {\n\t\tconst startPosition = textModel.getPositionAt(edit.replaceRange.start);\n\t\tconst hasTextOnInsertionLine = textModel.getLineLength(startPosition.lineNumber) !== 0;\n\t\tif (hasTextOnInsertionLine) {\n\t\t\tedit = reshapeMultiLineInsertion(edit, textModel);\n\t\t}\n\t}\n\n\t// The diff algorithm extended a simple edit to the entire word\n\t// shrink it back to a simple edit if it is deletion/insertion only\n\tif (totalInnerEdits === 1) {\n\t\tconst prefixLength = commonPrefixLength(originalText, edit.newText);\n\t\tconst suffixLength = commonSuffixLength(originalText.slice(prefixLength), edit.newText.slice(prefixLength));\n\n\t\t// reshape it back to an insertion\n\t\tif (prefixLength + suffixLength === originalText.length) {\n\t\t\treturn new StringReplacement(edit.replaceRange.deltaStart(prefixLength).deltaEnd(-suffixLength), edit.newText.substring(prefixLength, edit.newText.length - suffixLength));\n\t\t}\n\n\t\t// reshape it back to a deletion\n\t\tif (prefixLength + suffixLength === edit.newText.length) {\n\t\t\treturn new StringReplacement(edit.replaceRange.deltaStart(prefixLength).deltaEnd(-suffixLength), '');\n\t\t}\n\t}\n\n\treturn edit;\n}\n\nfunction reshapeMultiLineInsertion(edit: StringReplacement, textModel: ITextModel): StringReplacement {\n\tif (!edit.replaceRange.isEmpty) {\n\t\tthrow new BugIndicatingError('Unexpected original range');\n\t}\n\n\tif (edit.replaceRange.start === 0) {\n\t\treturn edit;\n\t}\n\n\tconst eol = textModel.getEOL();\n\tconst startPosition = textModel.getPositionAt(edit.replaceRange.start);\n\tconst startColumn = startPosition.column;\n\tconst startLineNumber = startPosition.lineNumber;\n\n\t// If the insertion ends with a new line and is inserted at the start of a line which has text,\n\t// we move the insertion to the end of the previous line if possible\n\tif (startColumn === 1 && startLineNumber > 1 && edit.newText.endsWith(eol) && !edit.newText.startsWith(eol)) {\n\t\treturn new StringReplacement(edit.replaceRange.delta(-1), eol + edit.newText.slice(0, -eol.length));\n\t}\n\n\treturn edit;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1754, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/graph.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/graph.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/graph.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class DirectedGraph<T> {\n\tprivate readonly _nodes = new Set<T>();\n\tprivate readonly _outgoingEdges = new Map<T, Set<T>>();\n\n\tpublic static from<T>(nodes: readonly T[], getOutgoing: (node: T) => readonly T[]): DirectedGraph<T> {\n\t\tconst graph = new DirectedGraph<T>();\n\n\t\tfor (const node of nodes) {\n\t\t\tgraph._nodes.add(node);\n\t\t}\n\n\t\tfor (const node of nodes) {\n\t\t\tconst outgoing = getOutgoing(node);\n\t\t\tif (outgoing.length > 0) {\n\t\t\t\tconst outgoingSet = new Set<T>();\n\t\t\t\tfor (const target of outgoing) {\n\t\t\t\t\toutgoingSet.add(target);\n\t\t\t\t}\n\t\t\t\tgraph._outgoingEdges.set(node, outgoingSet);\n\t\t\t}\n\t\t}\n\n\t\treturn graph;\n\t}\n\n\t/**\n\t * After this, the graph is guaranteed to have no cycles.\n\t */\n\tremoveCycles(): { foundCycles: T[] } {\n\t\tconst foundCycles: T[] = [];\n\t\tconst visited = new Set<T>();\n\t\tconst recursionStack = new Set<T>();\n\t\tconst toRemove: Array<{ from: T; to: T }> = [];\n\n\t\tconst dfs = (node: T): void => {\n\t\t\tvisited.add(node);\n\t\t\trecursionStack.add(node);\n\n\t\t\tconst outgoing = this._outgoingEdges.get(node);\n\t\t\tif (outgoing) {\n\t\t\t\tfor (const neighbor of outgoing) {\n\t\t\t\t\tif (!visited.has(neighbor)) {\n\t\t\t\t\t\tdfs(neighbor);\n\t\t\t\t\t} else if (recursionStack.has(neighbor)) {\n\t\t\t\t\t\t// Found a cycle\n\t\t\t\t\t\tfoundCycles.push(neighbor);\n\t\t\t\t\t\ttoRemove.push({ from: node, to: neighbor });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecursionStack.delete(node);\n\t\t};\n\n\t\t// Run DFS from all unvisited nodes\n\t\tfor (const node of this._nodes) {\n\t\t\tif (!visited.has(node)) {\n\t\t\t\tdfs(node);\n\t\t\t}\n\t\t}\n\n\t\t// Remove edges that cause cycles\n\t\tfor (const { from, to } of toRemove) {\n\t\t\tconst outgoingSet = this._outgoingEdges.get(from);\n\t\t\tif (outgoingSet) {\n\t\t\t\toutgoingSet.delete(to);\n\t\t\t}\n\t\t}\n\n\t\treturn { foundCycles };\n\t}\n\n\tgetOutgoing(node: T): readonly T[] {\n\t\tconst outgoing = this._outgoingEdges.get(node);\n\t\treturn outgoing ? Array.from(outgoing) : [];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class DirectedGraph<T> {\n\tprivate readonly _nodes = new Set<T>();\n\tprivate readonly _outgoingEdges = new Map<T, Set<T>>();\n\n\tpublic static from<T>(nodes: readonly T[], getOutgoing: (node: T) => readonly T[]): DirectedGraph<T> {\n\t\tconst graph = new DirectedGraph<T>();\n\n\t\tfor (const node of nodes) {\n\t\t\tgraph._nodes.add(node);\n\t\t}\n\n\t\tfor (const node of nodes) {\n\t\t\tconst outgoing = getOutgoing(node);\n\t\t\tif (outgoing.length > 0) {\n\t\t\t\tconst outgoingSet = new Set<T>();\n\t\t\t\tfor (const target of outgoing) {\n\t\t\t\t\toutgoingSet.add(target);\n\t\t\t\t}\n\t\t\t\tgraph._outgoingEdges.set(node, outgoingSet);\n\t\t\t}\n\t\t}\n\n\t\treturn graph;\n\t}\n\n\t/**\n\t * After this, the graph is guaranteed to have no cycles.\n\t */\n\tremoveCycles(): { foundCycles: T[] } {\n\t\tconst foundCycles: T[] = [];\n\t\tconst visited = new Set<T>();\n\t\tconst recursionStack = new Set<T>();\n\t\tconst toRemove: Array<{ from: T; to: T }> = [];\n\n\t\tconst dfs = (node: T): void => {\n\t\t\tvisited.add(node);\n\t\t\trecursionStack.add(node);\n\n\t\t\tconst outgoing = this._outgoingEdges.get(node);\n\t\t\tif (outgoing) {\n\t\t\t\tfor (const neighbor of outgoing) {\n\t\t\t\t\tif (!visited.has(neighbor)) {\n\t\t\t\t\t\tdfs(neighbor);\n\t\t\t\t\t} else if (recursionStack.has(neighbor)) {\n\t\t\t\t\t\t// Found a cycle\n\t\t\t\t\t\tfoundCycles.push(neighbor);\n\t\t\t\t\t\ttoRemove.push({ from: node, to: neighbor });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\trecursionStack.delete(node);\n\t\t};\n\n\t\t// Run DFS from all unvisited nodes\n\t\tfor (const node of this._nodes) {\n\t\t\tif (!visited.has(node)) {\n\t\t\t\tdfs(node);\n\t\t\t}\n\t\t}\n\n\t\t// Remove edges that cause cycles\n\t\tfor (const { from, to } of toRemove) {\n\t\t\tconst outgoingSet = this._outgoingEdges.get(from);\n\t\t\tif (outgoingSet) {\n\t\t\t\toutgoingSet.delete(to);\n\t\t\t}\n\t\t}\n\n\t\treturn { foundCycles };\n\t}\n\n\tgetOutgoing(node: T): readonly T[] {\n\t\tconst outgoing = this._outgoingEdges.get(node);\n\t\treturn outgoing ? Array.from(outgoing) : [];\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewInterface.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewInterface.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewInterface.ts"],"sourcesContent":["\nimport { Event } from '../../../../../../base/common/event.js';\nimport { IObservable } from '../../../../../../base/common/observable.js';\nimport { Command, InlineCompletionCommand, InlineCompletionDisplayLocation } from '../../../../../common/languages.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\n\nexport enum InlineEditTabAction {\n\tJump = 'jump',\n\tAccept = 'accept',\n\tInactive = 'inactive'\n}\n\nexport interface IInlineEditsView {\n}\n\nexport interface IInlineEditHost {\n\treadonly onDidAccept: Event<void>;\n}\n\nexport interface IInlineEditModel {\n\tdisplayName: string;\n\taction: Command | undefined;\n\textensionCommands: InlineCompletionCommand[];\n\tisInDiffEditor: boolean;\n\tinlineEdit: InlineEditWithChanges;\n\ttabAction: IObservable<InlineEditTabAction>;\n\tdisplayLocation: InlineCompletionDisplayLocation | undefined;\n\taccept(): void;\n\tjump(): void;\n}\n\n// TODO: Move this out of here as it is also includes ghosttext\nexport enum InlineCompletionViewKind {\n\tGhostText = 'ghostText',\n\tCustom = 'custom',\n\tSideBySide = 'sideBySide',\n\tDeletion = 'deletion',\n\tInsertionInline = 'insertionInline',\n\tInsertionMultiLine = 'insertionMultiLine',\n\tWordReplacements = 'wordReplacements',\n\tLineReplacement = 'lineReplacement',\n\tCollapsed = 'collapsed'\n}\n\nexport type InlineCompletionViewData = {\n\tcursorColumnDistance: number;\n\tcursorLineDistance: number;\n\tlineCountOriginal: number;\n\tlineCountModified: number;\n\tcharacterCountOriginal: number;\n\tcharacterCountModified: number;\n\tdisjointReplacements: number;\n\tsameShapeReplacements?: boolean;\n};\n","\nimport { Event } from '../../../../../../base/common/event.js';\nimport { IObservable } from '../../../../../../base/common/observable.js';\nimport { Command, InlineCompletionCommand, InlineCompletionDisplayLocation } from '../../../../../common/languages.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\n\nexport enum InlineEditTabAction {\n\tJump = 'jump',\n\tAccept = 'accept',\n\tInactive = 'inactive'\n}\n\nexport interface IInlineEditsView {\n}\n\nexport interface IInlineEditHost {\n\treadonly onDidAccept: Event<void>;\n}\n\nexport interface IInlineEditModel {\n\tdisplayName: string;\n\taction: Command | undefined;\n\textensionCommands: InlineCompletionCommand[];\n\tisInDiffEditor: boolean;\n\tinlineEdit: InlineEditWithChanges;\n\ttabAction: IObservable<InlineEditTabAction>;\n\tdisplayLocation: InlineCompletionDisplayLocation | undefined;\n\taccept(): void;\n\tjump(): void;\n}\n\n// TODO: Move this out of here as it is also includes ghosttext\nexport enum InlineCompletionViewKind {\n\tGhostText = 'ghostText',\n\tCustom = 'custom',\n\tSideBySide = 'sideBySide',\n\tDeletion = 'deletion',\n\tInsertionInline = 'insertionInline',\n\tInsertionMultiLine = 'insertionMultiLine',\n\tWordReplacements = 'wordReplacements',\n\tLineReplacement = 'lineReplacement',\n\tCollapsed = 'collapsed'\n}\n\nexport type InlineCompletionViewData = {\n\tcursorColumnDistance: number;\n\tcursorLineDistance: number;\n\tlineCountOriginal: number;\n\tlineCountModified: number;\n\tcharacterCountOriginal: number;\n\tcharacterCountModified: number;\n\tdisjointReplacements: number;\n\tsameShapeReplacements?: boolean;\n};\n"],"names":[],"mappings":";;;;;;AAMA,IAAY,mBAIX;AAJD,CAAA,SAAY,mBAAmB;IAC9B,mBAAA,CAAA,OAAA,GAAA,MAAa,CAAA;IACb,mBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,mBAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;AACtB,CAAC,EAJW,mBAAmB,IAAA,CAAnB,mBAAmB,GAAA,CAAA,CAAA,GAI9B;AAsBD,IAAY,wBAUX;AAVD,CAAA,SAAY,wBAAwB;IACnC,wBAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;IACvB,wBAAA,CAAA,SAAA,GAAA,QAAiB,CAAA;IACjB,wBAAA,CAAA,aAAA,GAAA,YAAyB,CAAA;IACzB,wBAAA,CAAA,WAAA,GAAA,UAAqB,CAAA;IACrB,wBAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;IACnC,wBAAA,CAAA,qBAAA,GAAA,oBAAyC,CAAA;IACzC,wBAAA,CAAA,mBAAA,GAAA,kBAAqC,CAAA;IACrC,wBAAA,CAAA,kBAAA,GAAA,iBAAmC,CAAA;IACnC,wBAAA,CAAA,YAAA,GAAA,WAAuB,CAAA;AACxB,CAAC,EAVW,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAUnC","debugId":null}},
    {"offset": {"line": 1864, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/provideInlineCompletions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/provideInlineCompletions.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/provideInlineCompletions.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertNever } from '../../../../../base/common/assert.js';\nimport { AsyncIterableObject } from '../../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../../base/common/errors.js';\nimport { Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { prefixedUuid } from '../../../../../base/common/uuid.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ISingleEditOperation } from '../../../../common/core/editOperation.js';\nimport { StringReplacement } from '../../../../common/core/edits/stringEdit.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { InlineCompletionEndOfLifeReason, InlineCompletionEndOfLifeReasonKind, InlineCompletionDisplayLocationKind, InlineCompletion, InlineCompletionContext, InlineCompletions, InlineCompletionsProvider, PartialAcceptInfo, InlineCompletionsDisposeReason, LifetimeSummary } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { fixBracketsInLine } from '../../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { SnippetParser, Text } from '../../../snippet/browser/snippetParser.js';\nimport { getReadonlyEmptyArray } from '../utils.js';\nimport { groupByMap } from '../../../../../base/common/collections.js';\nimport { DirectedGraph } from './graph.js';\nimport { CachedFunction } from '../../../../../base/common/cache.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from '../view/inlineEdits/inlineEditsViewInterface.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { inlineCompletionIsVisible } from './inlineSuggestionItem.js';\n\nexport type InlineCompletionContextWithoutUuid = Omit<InlineCompletionContext, 'requestUuid'>;\n\nexport function provideInlineCompletions(\n\tproviders: InlineCompletionsProvider[],\n\tposition: Position,\n\tmodel: ITextModel,\n\tcontext: InlineCompletionContextWithoutUuid,\n\trequestInfo: InlineSuggestRequestInfo,\n\tlanguageConfigurationService?: ILanguageConfigurationService,\n): IInlineCompletionProviderResult {\n\tconst requestUuid = prefixedUuid('icr');\n\n\tconst cancellationTokenSource = new CancellationTokenSource();\n\tlet cancelReason: InlineCompletionsDisposeReason | undefined = undefined;\n\n\tconst contextWithUuid: InlineCompletionContext = { ...context, requestUuid: requestUuid };\n\n\tconst defaultReplaceRange = getDefaultRange(position, model);\n\n\tconst providersByGroupId = groupByMap(providers, p => p.groupId);\n\tconst yieldsToGraph = DirectedGraph.from(providers, p => {\n\t\treturn p.yieldsToGroupIds?.flatMap(groupId => providersByGroupId.get(groupId) ?? []) ?? [];\n\t});\n\tconst { foundCycles } = yieldsToGraph.removeCycles();\n\tif (foundCycles.length > 0) {\n\t\tonUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected.`\n\t\t\t+ ` Path: ${foundCycles.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n\t}\n\n\tlet runningCount = 0;\n\n\tconst queryProvider = new CachedFunction(async (provider: InlineCompletionsProvider<InlineCompletions>): Promise<InlineSuggestionList | undefined> => {\n\t\ttry {\n\t\t\trunningCount++;\n\t\t\tif (cancellationTokenSource.token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst yieldsTo = yieldsToGraph.getOutgoing(provider);\n\t\t\tfor (const p of yieldsTo) {\n\t\t\t\t// We know there is no cycle, so no recursion here\n\t\t\t\tconst result = await queryProvider.get(p);\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const item of result.inlineSuggestions.items) {\n\t\t\t\t\t\tif (item.isInlineEdit || typeof item.insertText !== 'string') {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = new TextReplacement(Range.lift(item.range) ?? defaultReplaceRange, item.insertText);\n\t\t\t\t\t\tif (inlineCompletionIsVisible(t, undefined, model, position)) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// else: inline completion is not visible, so lets not block\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet result: InlineCompletions | null | undefined;\n\t\t\tconst providerStartTime = Date.now();\n\t\t\ttry {\n\t\t\t\tresult = await provider.provideInlineCompletions(model, position, contextWithUuid, cancellationTokenSource.token);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst providerEndTime = Date.now();\n\n\t\t\tif (!result) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst data: InlineSuggestData[] = [];\n\t\t\tconst list = new InlineSuggestionList(result, data, provider);\n\t\t\tlist.addRef();\n\t\t\trunWhenCancelled(cancellationTokenSource.token, () => {\n\t\t\t\treturn list.removeRef(cancelReason);\n\t\t\t});\n\t\t\tif (cancellationTokenSource.token.isCancellationRequested) {\n\t\t\t\treturn undefined; // The list is disposed now, so we cannot return the items!\n\t\t\t}\n\n\t\t\tfor (const item of result.items) {\n\t\t\t\tdata.push(toInlineSuggestData(item, list, defaultReplaceRange, model, languageConfigurationService, contextWithUuid, requestInfo, { startTime: providerStartTime, endTime: providerEndTime }));\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} finally {\n\t\t\trunningCount--;\n\t\t}\n\t});\n\n\tconst inlineCompletionLists = AsyncIterableObject.fromPromisesResolveOrder(providers.map(p => queryProvider.get(p))).filter(isDefined);\n\n\treturn {\n\t\tget didAllProvidersReturn() { return runningCount === 0; },\n\t\tlists: inlineCompletionLists,\n\t\tcancelAndDispose: reason => {\n\t\t\tif (cancelReason !== undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcancelReason = reason;\n\t\t\tcancellationTokenSource.dispose(true);\n\t\t}\n\t};\n}\n\n/** If the token is eventually cancelled, this will not leak either. */\nexport function runWhenCancelled(token: CancellationToken, callback: () => void): IDisposable {\n\tif (token.isCancellationRequested) {\n\t\tcallback();\n\t\treturn Disposable.None;\n\t} else {\n\t\tconst listener = token.onCancellationRequested(() => {\n\t\t\tlistener.dispose();\n\t\t\tcallback();\n\t\t});\n\t\treturn { dispose: () => listener.dispose() };\n\t}\n}\n\nexport interface IInlineCompletionProviderResult {\n\tget didAllProvidersReturn(): boolean;\n\n\tcancelAndDispose(reason: InlineCompletionsDisposeReason): void;\n\n\tlists: AsyncIterableObject<InlineSuggestionList>;\n}\n\nfunction toInlineSuggestData(\n\tinlineCompletion: InlineCompletion,\n\tsource: InlineSuggestionList,\n\tdefaultReplaceRange: Range,\n\ttextModel: ITextModel,\n\tlanguageConfigurationService: ILanguageConfigurationService | undefined,\n\tcontext: InlineCompletionContext,\n\trequestInfo: InlineSuggestRequestInfo,\n\tproviderRequestInfo: InlineSuggestProviderRequestInfo,\n): InlineSuggestData {\n\tlet insertText: string;\n\tlet snippetInfo: SnippetInfo | undefined;\n\tlet range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n\n\tif (typeof inlineCompletion.insertText === 'string') {\n\t\tinsertText = inlineCompletion.insertText;\n\n\t\tif (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n\t\t\tinsertText = closeBrackets(\n\t\t\t\tinsertText,\n\t\t\t\trange.getStartPosition(),\n\t\t\t\ttextModel,\n\t\t\t\tlanguageConfigurationService\n\t\t\t);\n\n\t\t\t// Modify range depending on if brackets are added or removed\n\t\t\tconst diff = insertText.length - inlineCompletion.insertText.length;\n\t\t\tif (diff !== 0) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n\t\t\t}\n\t\t}\n\n\t\tsnippetInfo = undefined;\n\t} else if ('snippet' in inlineCompletion.insertText) {\n\t\tconst preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n\n\t\tif (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n\t\t\tinlineCompletion.insertText.snippet = closeBrackets(\n\t\t\t\tinlineCompletion.insertText.snippet,\n\t\t\t\trange.getStartPosition(),\n\t\t\t\ttextModel,\n\t\t\t\tlanguageConfigurationService\n\t\t\t);\n\n\t\t\t// Modify range depending on if brackets are added or removed\n\t\t\tconst diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n\t\t\tif (diff !== 0) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n\t\t\t}\n\t\t}\n\n\t\tconst snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n\n\t\tif (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n\t\t\tinsertText = snippet.children[0].value;\n\t\t\tsnippetInfo = undefined;\n\t\t} else {\n\t\t\tinsertText = snippet.toString();\n\t\t\tsnippetInfo = {\n\t\t\t\tsnippet: inlineCompletion.insertText.snippet,\n\t\t\t\trange: range\n\t\t\t};\n\t\t}\n\t} else {\n\t\tassertNever(inlineCompletion.insertText);\n\t}\n\n\tconst displayLocation = inlineCompletion.displayLocation ? {\n\t\trange: Range.lift(inlineCompletion.displayLocation.range),\n\t\tlabel: inlineCompletion.displayLocation.label,\n\t\tkind: inlineCompletion.displayLocation.kind\n\t} : undefined;\n\n\treturn new InlineSuggestData(\n\t\trange,\n\t\tinsertText,\n\t\tsnippetInfo,\n\t\tdisplayLocation,\n\t\tinlineCompletion.additionalTextEdits || getReadonlyEmptyArray(),\n\t\tinlineCompletion,\n\t\tsource,\n\t\tcontext,\n\t\tinlineCompletion.isInlineEdit ?? false,\n\t\trequestInfo,\n\t\tproviderRequestInfo,\n\t\tinlineCompletion.correlationId,\n\t);\n}\n\nexport type InlineSuggestRequestInfo = {\n\tstartTime: number;\n\teditorType: InlineCompletionEditorType;\n\tlanguageId: string;\n\treason: string;\n\ttypingInterval: number;\n\ttypingIntervalCharacterCount: number;\n};\n\nexport type InlineSuggestProviderRequestInfo = {\n\tstartTime: number;\n\tendTime: number;\n};\n\nexport type PartialAcceptance = {\n\tcharacters: number;\n\tcount: number;\n\tratio: number;\n};\n\nexport type InlineSuggestViewData = {\n\teditorType: InlineCompletionEditorType;\n\trenderData?: InlineCompletionViewData;\n\tviewKind?: InlineCompletionViewKind;\n\terror?: string;\n};\n\nexport class InlineSuggestData {\n\tprivate _didShow = false;\n\tprivate _timeUntilShown: number | undefined = undefined;\n\tprivate _showStartTime: number | undefined = undefined;\n\tprivate _shownDuration: number = 0;\n\tprivate _showUncollapsedStartTime: number | undefined = undefined;\n\tprivate _showUncollapsedDuration: number = 0;\n\n\tprivate _viewData: InlineSuggestViewData;\n\tprivate _didReportEndOfLife = false;\n\tprivate _lastSetEndOfLifeReason: InlineCompletionEndOfLifeReason | undefined = undefined;\n\tprivate _isPreceeded = false;\n\tprivate _partiallyAcceptedCount = 0;\n\tprivate _partiallyAcceptedSinceOriginal: PartialAcceptance = { characters: 0, ratio: 0, count: 0 };\n\n\tconstructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly insertText: string,\n\t\tpublic readonly snippetInfo: SnippetInfo | undefined,\n\t\tpublic readonly displayLocation: IDisplayLocation | undefined,\n\t\tpublic readonly additionalTextEdits: readonly ISingleEditOperation[],\n\n\t\tpublic readonly sourceInlineCompletion: InlineCompletion,\n\t\tpublic readonly source: InlineSuggestionList,\n\t\tpublic readonly context: InlineCompletionContext,\n\t\tpublic readonly isInlineEdit: boolean,\n\n\t\tprivate readonly _requestInfo: InlineSuggestRequestInfo,\n\t\tprivate readonly _providerRequestInfo: InlineSuggestProviderRequestInfo,\n\t\tprivate readonly _correlationId: string | undefined,\n\t) {\n\t\tthis._viewData = { editorType: _requestInfo.editorType };\n\t}\n\n\tpublic get showInlineEditMenu() { return this.sourceInlineCompletion.showInlineEditMenu ?? false; }\n\n\tpublic get partialAccepts(): PartialAcceptance { return this._partiallyAcceptedSinceOriginal; }\n\n\tpublic async reportInlineEditShown(commandService: ICommandService, updatedInsertText: string, viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData): Promise<void> {\n\t\tthis.updateShownDuration(viewKind);\n\n\t\tif (this._didShow) {\n\t\t\treturn;\n\t\t}\n\t\tthis._didShow = true;\n\t\tthis._viewData.viewKind = viewKind;\n\t\tthis._viewData.renderData = viewData;\n\t\tthis._timeUntilShown = Date.now() - this._requestInfo.startTime;\n\n\t\tthis.source.provider.handleItemDidShow?.(this.source.inlineSuggestions, this.sourceInlineCompletion, updatedInsertText);\n\n\t\tif (this.sourceInlineCompletion.shownCommand) {\n\t\t\tawait commandService.executeCommand(this.sourceInlineCompletion.shownCommand.id, ...(this.sourceInlineCompletion.shownCommand.arguments || []));\n\t\t}\n\t}\n\n\tpublic reportPartialAccept(acceptedCharacters: number, info: PartialAcceptInfo, partialAcceptance: PartialAcceptance) {\n\t\tthis._partiallyAcceptedCount++;\n\t\tthis._partiallyAcceptedSinceOriginal.characters += partialAcceptance.characters;\n\t\tthis._partiallyAcceptedSinceOriginal.ratio = Math.min(this._partiallyAcceptedSinceOriginal.ratio + (1 - this._partiallyAcceptedSinceOriginal.ratio) * partialAcceptance.ratio, 1);\n\t\tthis._partiallyAcceptedSinceOriginal.count += partialAcceptance.count;\n\n\t\tthis.source.provider.handlePartialAccept?.(\n\t\t\tthis.source.inlineSuggestions,\n\t\t\tthis.sourceInlineCompletion,\n\t\t\tacceptedCharacters,\n\t\t\tinfo\n\t\t);\n\t}\n\n\t/**\n\t * Sends the end of life event to the provider.\n\t * If no reason is provided, the last set reason is used.\n\t * If no reason was set, the default reason is used.\n\t*/\n\tpublic reportEndOfLife(reason?: InlineCompletionEndOfLifeReason): void {\n\t\tif (this._didReportEndOfLife) {\n\t\t\treturn;\n\t\t}\n\t\tthis._didReportEndOfLife = true;\n\t\tthis.reportInlineEditHidden();\n\n\t\tif (!reason) {\n\t\t\treason = this._lastSetEndOfLifeReason ?? { kind: InlineCompletionEndOfLifeReasonKind.Ignored, userTypingDisagreed: false, supersededBy: undefined };\n\t\t}\n\n\t\tif (reason.kind === InlineCompletionEndOfLifeReasonKind.Rejected && this.source.provider.handleRejection) {\n\t\t\tthis.source.provider.handleRejection(this.source.inlineSuggestions, this.sourceInlineCompletion);\n\t\t}\n\n\t\tif (this.source.provider.handleEndOfLifetime) {\n\t\t\tconst summary: LifetimeSummary = {\n\t\t\t\trequestUuid: this.context.requestUuid,\n\t\t\t\tcorrelationId: this._correlationId,\n\t\t\t\tpartiallyAccepted: this._partiallyAcceptedCount,\n\t\t\t\tpartiallyAcceptedCountSinceOriginal: this._partiallyAcceptedSinceOriginal.count,\n\t\t\t\tpartiallyAcceptedRatioSinceOriginal: this._partiallyAcceptedSinceOriginal.ratio,\n\t\t\t\tpartiallyAcceptedCharactersSinceOriginal: this._partiallyAcceptedSinceOriginal.characters,\n\t\t\t\tshown: this._didShow,\n\t\t\t\tshownDuration: this._shownDuration,\n\t\t\t\tshownDurationUncollapsed: this._showUncollapsedDuration,\n\t\t\t\tpreceeded: this._isPreceeded,\n\t\t\t\ttimeUntilShown: this._timeUntilShown,\n\t\t\t\ttimeUntilProviderRequest: this._providerRequestInfo.startTime - this._requestInfo.startTime,\n\t\t\t\ttimeUntilProviderResponse: this._providerRequestInfo.endTime - this._requestInfo.startTime,\n\t\t\t\teditorType: this._viewData.editorType,\n\t\t\t\tlanguageId: this._requestInfo.languageId,\n\t\t\t\trequestReason: this._requestInfo.reason,\n\t\t\t\tviewKind: this._viewData.viewKind,\n\t\t\t\terror: this._viewData.error,\n\t\t\t\ttypingInterval: this._requestInfo.typingInterval,\n\t\t\t\ttypingIntervalCharacterCount: this._requestInfo.typingIntervalCharacterCount,\n\t\t\t\t...this._viewData.renderData,\n\t\t\t};\n\t\t\tthis.source.provider.handleEndOfLifetime(this.source.inlineSuggestions, this.sourceInlineCompletion, reason, summary);\n\t\t}\n\t}\n\n\tpublic reportInlineEditError(message: string): void {\n\t\tif (this._viewData.error) {\n\t\t\tthis._viewData.error += `; ${message}`;\n\t\t} else {\n\t\t\tthis._viewData.error = message;\n\t\t}\n\t}\n\n\tpublic setIsPreceeded(partialAccepts: PartialAcceptance): void {\n\t\tthis._isPreceeded = true;\n\n\t\tif (this._partiallyAcceptedSinceOriginal.characters !== 0 || this._partiallyAcceptedSinceOriginal.ratio !== 0 || this._partiallyAcceptedSinceOriginal.count !== 0) {\n\t\t\tconsole.warn('Expected partiallyAcceptedCountSinceOriginal to be { characters: 0, rate: 0, partialAcceptances: 0 } before setIsPreceeded.');\n\t\t}\n\t\tthis._partiallyAcceptedSinceOriginal = partialAccepts;\n\t}\n\n\t/**\n\t * Sets the end of life reason, but does not send the event to the provider yet.\n\t*/\n\tpublic setEndOfLifeReason(reason: InlineCompletionEndOfLifeReason): void {\n\t\tthis.reportInlineEditHidden();\n\t\tthis._lastSetEndOfLifeReason = reason;\n\t}\n\n\tprivate updateShownDuration(viewKind: InlineCompletionViewKind) {\n\t\tconst timeNow = Date.now();\n\t\tif (!this._showStartTime) {\n\t\t\tthis._showStartTime = timeNow;\n\t\t}\n\n\t\tconst isCollapsed = viewKind === InlineCompletionViewKind.Collapsed;\n\t\tif (!isCollapsed && this._showUncollapsedStartTime === undefined) {\n\t\t\tthis._showUncollapsedStartTime = timeNow;\n\t\t}\n\n\t\tif (isCollapsed && this._showUncollapsedStartTime !== undefined) {\n\t\t\tthis._showUncollapsedDuration += timeNow - this._showUncollapsedStartTime;\n\t\t}\n\t}\n\n\tprivate reportInlineEditHidden() {\n\t\tif (this._showStartTime === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst timeNow = Date.now();\n\t\tthis._shownDuration += timeNow - this._showStartTime;\n\t\tthis._showStartTime = undefined;\n\n\t\tif (this._showUncollapsedStartTime === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._showUncollapsedDuration += timeNow - this._showUncollapsedStartTime;\n\t\tthis._showUncollapsedStartTime = undefined;\n\t}\n}\n\nexport interface SnippetInfo {\n\tsnippet: string;\n\t/* Could be different than the main range */\n\trange: Range;\n}\n\nexport interface IDisplayLocation {\n\trange: Range;\n\tlabel: string;\n\tkind: InlineCompletionDisplayLocationKind;\n}\n\nexport enum InlineCompletionEditorType {\n\tTextEditor = 'textEditor',\n\tDiffEditor = 'diffEditor',\n\tNotebook = 'notebook',\n}\n\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineSuggestionList {\n\tprivate refCount = 0;\n\tconstructor(\n\t\tpublic readonly inlineSuggestions: InlineCompletions,\n\t\tpublic readonly inlineSuggestionsData: readonly InlineSuggestData[],\n\t\tpublic readonly provider: InlineCompletionsProvider,\n\t) { }\n\n\taddRef(): void {\n\t\tthis.refCount++;\n\t}\n\n\tremoveRef(reason: InlineCompletionsDisposeReason = { kind: 'other' }): void {\n\t\tthis.refCount--;\n\t\tif (this.refCount === 0) {\n\t\t\tfor (const item of this.inlineSuggestionsData) {\n\t\t\t\t// Fallback if it has not been called before\n\t\t\t\titem.reportEndOfLife();\n\t\t\t}\n\t\t\tthis.provider.disposeInlineCompletions(this.inlineSuggestions, reason);\n\t\t}\n\t}\n}\n\nfunction getDefaultRange(position: Position, model: ITextModel): Range {\n\tconst word = model.getWordAtPosition(position);\n\tconst maxColumn = model.getLineMaxColumn(position.lineNumber);\n\t// By default, always replace up until the end of the current line.\n\t// This default might be subject to change!\n\treturn word\n\t\t? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n\t\t: Range.fromPositions(position, position.with(undefined, maxColumn));\n}\n\nfunction closeBrackets(text: string, position: Position, model: ITextModel, languageConfigurationService: ILanguageConfigurationService): string {\n\tconst currentLine = model.getLineContent(position.lineNumber);\n\tconst edit = StringReplacement.replace(new OffsetRange(position.column - 1, currentLine.length), text);\n\n\tconst proposedLineTokens = model.tokenization.tokenizeLinesAt(position.lineNumber, [edit.replace(currentLine)]);\n\tconst textTokens = proposedLineTokens?.[0].sliceZeroCopy(edit.getRangeAfterReplace());\n\tif (!textTokens) {\n\t\treturn text;\n\t}\n\n\tconst fixedText = fixBracketsInLine(textTokens, languageConfigurationService);\n\treturn fixedText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertNever } from '../../../../../base/common/assert.js';\nimport { AsyncIterableObject } from '../../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../../base/common/errors.js';\nimport { Disposable, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { prefixedUuid } from '../../../../../base/common/uuid.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { ISingleEditOperation } from '../../../../common/core/editOperation.js';\nimport { StringReplacement } from '../../../../common/core/edits/stringEdit.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { InlineCompletionEndOfLifeReason, InlineCompletionEndOfLifeReasonKind, InlineCompletionDisplayLocationKind, InlineCompletion, InlineCompletionContext, InlineCompletions, InlineCompletionsProvider, PartialAcceptInfo, InlineCompletionsDisposeReason, LifetimeSummary } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { fixBracketsInLine } from '../../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { SnippetParser, Text } from '../../../snippet/browser/snippetParser.js';\nimport { getReadonlyEmptyArray } from '../utils.js';\nimport { groupByMap } from '../../../../../base/common/collections.js';\nimport { DirectedGraph } from './graph.js';\nimport { CachedFunction } from '../../../../../base/common/cache.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from '../view/inlineEdits/inlineEditsViewInterface.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { inlineCompletionIsVisible } from './inlineSuggestionItem.js';\n\nexport type InlineCompletionContextWithoutUuid = Omit<InlineCompletionContext, 'requestUuid'>;\n\nexport function provideInlineCompletions(\n\tproviders: InlineCompletionsProvider[],\n\tposition: Position,\n\tmodel: ITextModel,\n\tcontext: InlineCompletionContextWithoutUuid,\n\trequestInfo: InlineSuggestRequestInfo,\n\tlanguageConfigurationService?: ILanguageConfigurationService,\n): IInlineCompletionProviderResult {\n\tconst requestUuid = prefixedUuid('icr');\n\n\tconst cancellationTokenSource = new CancellationTokenSource();\n\tlet cancelReason: InlineCompletionsDisposeReason | undefined = undefined;\n\n\tconst contextWithUuid: InlineCompletionContext = { ...context, requestUuid: requestUuid };\n\n\tconst defaultReplaceRange = getDefaultRange(position, model);\n\n\tconst providersByGroupId = groupByMap(providers, p => p.groupId);\n\tconst yieldsToGraph = DirectedGraph.from(providers, p => {\n\t\treturn p.yieldsToGroupIds?.flatMap(groupId => providersByGroupId.get(groupId) ?? []) ?? [];\n\t});\n\tconst { foundCycles } = yieldsToGraph.removeCycles();\n\tif (foundCycles.length > 0) {\n\t\tonUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected.`\n\t\t\t+ ` Path: ${foundCycles.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n\t}\n\n\tlet runningCount = 0;\n\n\tconst queryProvider = new CachedFunction(async (provider: InlineCompletionsProvider<InlineCompletions>): Promise<InlineSuggestionList | undefined> => {\n\t\ttry {\n\t\t\trunningCount++;\n\t\t\tif (cancellationTokenSource.token.isCancellationRequested) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst yieldsTo = yieldsToGraph.getOutgoing(provider);\n\t\t\tfor (const p of yieldsTo) {\n\t\t\t\t// We know there is no cycle, so no recursion here\n\t\t\t\tconst result = await queryProvider.get(p);\n\t\t\t\tif (result) {\n\t\t\t\t\tfor (const item of result.inlineSuggestions.items) {\n\t\t\t\t\t\tif (item.isInlineEdit || typeof item.insertText !== 'string') {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst t = new TextReplacement(Range.lift(item.range) ?? defaultReplaceRange, item.insertText);\n\t\t\t\t\t\tif (inlineCompletionIsVisible(t, undefined, model, position)) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// else: inline completion is not visible, so lets not block\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet result: InlineCompletions | null | undefined;\n\t\t\tconst providerStartTime = Date.now();\n\t\t\ttry {\n\t\t\t\tresult = await provider.provideInlineCompletions(model, position, contextWithUuid, cancellationTokenSource.token);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedExternalError(e);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst providerEndTime = Date.now();\n\n\t\t\tif (!result) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst data: InlineSuggestData[] = [];\n\t\t\tconst list = new InlineSuggestionList(result, data, provider);\n\t\t\tlist.addRef();\n\t\t\trunWhenCancelled(cancellationTokenSource.token, () => {\n\t\t\t\treturn list.removeRef(cancelReason);\n\t\t\t});\n\t\t\tif (cancellationTokenSource.token.isCancellationRequested) {\n\t\t\t\treturn undefined; // The list is disposed now, so we cannot return the items!\n\t\t\t}\n\n\t\t\tfor (const item of result.items) {\n\t\t\t\tdata.push(toInlineSuggestData(item, list, defaultReplaceRange, model, languageConfigurationService, contextWithUuid, requestInfo, { startTime: providerStartTime, endTime: providerEndTime }));\n\t\t\t}\n\n\t\t\treturn list;\n\t\t} finally {\n\t\t\trunningCount--;\n\t\t}\n\t});\n\n\tconst inlineCompletionLists = AsyncIterableObject.fromPromisesResolveOrder(providers.map(p => queryProvider.get(p))).filter(isDefined);\n\n\treturn {\n\t\tget didAllProvidersReturn() { return runningCount === 0; },\n\t\tlists: inlineCompletionLists,\n\t\tcancelAndDispose: reason => {\n\t\t\tif (cancelReason !== undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcancelReason = reason;\n\t\t\tcancellationTokenSource.dispose(true);\n\t\t}\n\t};\n}\n\n/** If the token is eventually cancelled, this will not leak either. */\nexport function runWhenCancelled(token: CancellationToken, callback: () => void): IDisposable {\n\tif (token.isCancellationRequested) {\n\t\tcallback();\n\t\treturn Disposable.None;\n\t} else {\n\t\tconst listener = token.onCancellationRequested(() => {\n\t\t\tlistener.dispose();\n\t\t\tcallback();\n\t\t});\n\t\treturn { dispose: () => listener.dispose() };\n\t}\n}\n\nexport interface IInlineCompletionProviderResult {\n\tget didAllProvidersReturn(): boolean;\n\n\tcancelAndDispose(reason: InlineCompletionsDisposeReason): void;\n\n\tlists: AsyncIterableObject<InlineSuggestionList>;\n}\n\nfunction toInlineSuggestData(\n\tinlineCompletion: InlineCompletion,\n\tsource: InlineSuggestionList,\n\tdefaultReplaceRange: Range,\n\ttextModel: ITextModel,\n\tlanguageConfigurationService: ILanguageConfigurationService | undefined,\n\tcontext: InlineCompletionContext,\n\trequestInfo: InlineSuggestRequestInfo,\n\tproviderRequestInfo: InlineSuggestProviderRequestInfo,\n): InlineSuggestData {\n\tlet insertText: string;\n\tlet snippetInfo: SnippetInfo | undefined;\n\tlet range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n\n\tif (typeof inlineCompletion.insertText === 'string') {\n\t\tinsertText = inlineCompletion.insertText;\n\n\t\tif (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n\t\t\tinsertText = closeBrackets(\n\t\t\t\tinsertText,\n\t\t\t\trange.getStartPosition(),\n\t\t\t\ttextModel,\n\t\t\t\tlanguageConfigurationService\n\t\t\t);\n\n\t\t\t// Modify range depending on if brackets are added or removed\n\t\t\tconst diff = insertText.length - inlineCompletion.insertText.length;\n\t\t\tif (diff !== 0) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n\t\t\t}\n\t\t}\n\n\t\tsnippetInfo = undefined;\n\t} else if ('snippet' in inlineCompletion.insertText) {\n\t\tconst preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n\n\t\tif (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n\t\t\tinlineCompletion.insertText.snippet = closeBrackets(\n\t\t\t\tinlineCompletion.insertText.snippet,\n\t\t\t\trange.getStartPosition(),\n\t\t\t\ttextModel,\n\t\t\t\tlanguageConfigurationService\n\t\t\t);\n\n\t\t\t// Modify range depending on if brackets are added or removed\n\t\t\tconst diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n\t\t\tif (diff !== 0) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n\t\t\t}\n\t\t}\n\n\t\tconst snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n\n\t\tif (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n\t\t\tinsertText = snippet.children[0].value;\n\t\t\tsnippetInfo = undefined;\n\t\t} else {\n\t\t\tinsertText = snippet.toString();\n\t\t\tsnippetInfo = {\n\t\t\t\tsnippet: inlineCompletion.insertText.snippet,\n\t\t\t\trange: range\n\t\t\t};\n\t\t}\n\t} else {\n\t\tassertNever(inlineCompletion.insertText);\n\t}\n\n\tconst displayLocation = inlineCompletion.displayLocation ? {\n\t\trange: Range.lift(inlineCompletion.displayLocation.range),\n\t\tlabel: inlineCompletion.displayLocation.label,\n\t\tkind: inlineCompletion.displayLocation.kind\n\t} : undefined;\n\n\treturn new InlineSuggestData(\n\t\trange,\n\t\tinsertText,\n\t\tsnippetInfo,\n\t\tdisplayLocation,\n\t\tinlineCompletion.additionalTextEdits || getReadonlyEmptyArray(),\n\t\tinlineCompletion,\n\t\tsource,\n\t\tcontext,\n\t\tinlineCompletion.isInlineEdit ?? false,\n\t\trequestInfo,\n\t\tproviderRequestInfo,\n\t\tinlineCompletion.correlationId,\n\t);\n}\n\nexport type InlineSuggestRequestInfo = {\n\tstartTime: number;\n\teditorType: InlineCompletionEditorType;\n\tlanguageId: string;\n\treason: string;\n\ttypingInterval: number;\n\ttypingIntervalCharacterCount: number;\n};\n\nexport type InlineSuggestProviderRequestInfo = {\n\tstartTime: number;\n\tendTime: number;\n};\n\nexport type PartialAcceptance = {\n\tcharacters: number;\n\tcount: number;\n\tratio: number;\n};\n\nexport type InlineSuggestViewData = {\n\teditorType: InlineCompletionEditorType;\n\trenderData?: InlineCompletionViewData;\n\tviewKind?: InlineCompletionViewKind;\n\terror?: string;\n};\n\nexport class InlineSuggestData {\n\tprivate _didShow = false;\n\tprivate _timeUntilShown: number | undefined = undefined;\n\tprivate _showStartTime: number | undefined = undefined;\n\tprivate _shownDuration: number = 0;\n\tprivate _showUncollapsedStartTime: number | undefined = undefined;\n\tprivate _showUncollapsedDuration: number = 0;\n\n\tprivate _viewData: InlineSuggestViewData;\n\tprivate _didReportEndOfLife = false;\n\tprivate _lastSetEndOfLifeReason: InlineCompletionEndOfLifeReason | undefined = undefined;\n\tprivate _isPreceeded = false;\n\tprivate _partiallyAcceptedCount = 0;\n\tprivate _partiallyAcceptedSinceOriginal: PartialAcceptance = { characters: 0, ratio: 0, count: 0 };\n\n\tconstructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly insertText: string,\n\t\tpublic readonly snippetInfo: SnippetInfo | undefined,\n\t\tpublic readonly displayLocation: IDisplayLocation | undefined,\n\t\tpublic readonly additionalTextEdits: readonly ISingleEditOperation[],\n\n\t\tpublic readonly sourceInlineCompletion: InlineCompletion,\n\t\tpublic readonly source: InlineSuggestionList,\n\t\tpublic readonly context: InlineCompletionContext,\n\t\tpublic readonly isInlineEdit: boolean,\n\n\t\tprivate readonly _requestInfo: InlineSuggestRequestInfo,\n\t\tprivate readonly _providerRequestInfo: InlineSuggestProviderRequestInfo,\n\t\tprivate readonly _correlationId: string | undefined,\n\t) {\n\t\tthis._viewData = { editorType: _requestInfo.editorType };\n\t}\n\n\tpublic get showInlineEditMenu() { return this.sourceInlineCompletion.showInlineEditMenu ?? false; }\n\n\tpublic get partialAccepts(): PartialAcceptance { return this._partiallyAcceptedSinceOriginal; }\n\n\tpublic async reportInlineEditShown(commandService: ICommandService, updatedInsertText: string, viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData): Promise<void> {\n\t\tthis.updateShownDuration(viewKind);\n\n\t\tif (this._didShow) {\n\t\t\treturn;\n\t\t}\n\t\tthis._didShow = true;\n\t\tthis._viewData.viewKind = viewKind;\n\t\tthis._viewData.renderData = viewData;\n\t\tthis._timeUntilShown = Date.now() - this._requestInfo.startTime;\n\n\t\tthis.source.provider.handleItemDidShow?.(this.source.inlineSuggestions, this.sourceInlineCompletion, updatedInsertText);\n\n\t\tif (this.sourceInlineCompletion.shownCommand) {\n\t\t\tawait commandService.executeCommand(this.sourceInlineCompletion.shownCommand.id, ...(this.sourceInlineCompletion.shownCommand.arguments || []));\n\t\t}\n\t}\n\n\tpublic reportPartialAccept(acceptedCharacters: number, info: PartialAcceptInfo, partialAcceptance: PartialAcceptance) {\n\t\tthis._partiallyAcceptedCount++;\n\t\tthis._partiallyAcceptedSinceOriginal.characters += partialAcceptance.characters;\n\t\tthis._partiallyAcceptedSinceOriginal.ratio = Math.min(this._partiallyAcceptedSinceOriginal.ratio + (1 - this._partiallyAcceptedSinceOriginal.ratio) * partialAcceptance.ratio, 1);\n\t\tthis._partiallyAcceptedSinceOriginal.count += partialAcceptance.count;\n\n\t\tthis.source.provider.handlePartialAccept?.(\n\t\t\tthis.source.inlineSuggestions,\n\t\t\tthis.sourceInlineCompletion,\n\t\t\tacceptedCharacters,\n\t\t\tinfo\n\t\t);\n\t}\n\n\t/**\n\t * Sends the end of life event to the provider.\n\t * If no reason is provided, the last set reason is used.\n\t * If no reason was set, the default reason is used.\n\t*/\n\tpublic reportEndOfLife(reason?: InlineCompletionEndOfLifeReason): void {\n\t\tif (this._didReportEndOfLife) {\n\t\t\treturn;\n\t\t}\n\t\tthis._didReportEndOfLife = true;\n\t\tthis.reportInlineEditHidden();\n\n\t\tif (!reason) {\n\t\t\treason = this._lastSetEndOfLifeReason ?? { kind: InlineCompletionEndOfLifeReasonKind.Ignored, userTypingDisagreed: false, supersededBy: undefined };\n\t\t}\n\n\t\tif (reason.kind === InlineCompletionEndOfLifeReasonKind.Rejected && this.source.provider.handleRejection) {\n\t\t\tthis.source.provider.handleRejection(this.source.inlineSuggestions, this.sourceInlineCompletion);\n\t\t}\n\n\t\tif (this.source.provider.handleEndOfLifetime) {\n\t\t\tconst summary: LifetimeSummary = {\n\t\t\t\trequestUuid: this.context.requestUuid,\n\t\t\t\tcorrelationId: this._correlationId,\n\t\t\t\tpartiallyAccepted: this._partiallyAcceptedCount,\n\t\t\t\tpartiallyAcceptedCountSinceOriginal: this._partiallyAcceptedSinceOriginal.count,\n\t\t\t\tpartiallyAcceptedRatioSinceOriginal: this._partiallyAcceptedSinceOriginal.ratio,\n\t\t\t\tpartiallyAcceptedCharactersSinceOriginal: this._partiallyAcceptedSinceOriginal.characters,\n\t\t\t\tshown: this._didShow,\n\t\t\t\tshownDuration: this._shownDuration,\n\t\t\t\tshownDurationUncollapsed: this._showUncollapsedDuration,\n\t\t\t\tpreceeded: this._isPreceeded,\n\t\t\t\ttimeUntilShown: this._timeUntilShown,\n\t\t\t\ttimeUntilProviderRequest: this._providerRequestInfo.startTime - this._requestInfo.startTime,\n\t\t\t\ttimeUntilProviderResponse: this._providerRequestInfo.endTime - this._requestInfo.startTime,\n\t\t\t\teditorType: this._viewData.editorType,\n\t\t\t\tlanguageId: this._requestInfo.languageId,\n\t\t\t\trequestReason: this._requestInfo.reason,\n\t\t\t\tviewKind: this._viewData.viewKind,\n\t\t\t\terror: this._viewData.error,\n\t\t\t\ttypingInterval: this._requestInfo.typingInterval,\n\t\t\t\ttypingIntervalCharacterCount: this._requestInfo.typingIntervalCharacterCount,\n\t\t\t\t...this._viewData.renderData,\n\t\t\t};\n\t\t\tthis.source.provider.handleEndOfLifetime(this.source.inlineSuggestions, this.sourceInlineCompletion, reason, summary);\n\t\t}\n\t}\n\n\tpublic reportInlineEditError(message: string): void {\n\t\tif (this._viewData.error) {\n\t\t\tthis._viewData.error += `; ${message}`;\n\t\t} else {\n\t\t\tthis._viewData.error = message;\n\t\t}\n\t}\n\n\tpublic setIsPreceeded(partialAccepts: PartialAcceptance): void {\n\t\tthis._isPreceeded = true;\n\n\t\tif (this._partiallyAcceptedSinceOriginal.characters !== 0 || this._partiallyAcceptedSinceOriginal.ratio !== 0 || this._partiallyAcceptedSinceOriginal.count !== 0) {\n\t\t\tconsole.warn('Expected partiallyAcceptedCountSinceOriginal to be { characters: 0, rate: 0, partialAcceptances: 0 } before setIsPreceeded.');\n\t\t}\n\t\tthis._partiallyAcceptedSinceOriginal = partialAccepts;\n\t}\n\n\t/**\n\t * Sets the end of life reason, but does not send the event to the provider yet.\n\t*/\n\tpublic setEndOfLifeReason(reason: InlineCompletionEndOfLifeReason): void {\n\t\tthis.reportInlineEditHidden();\n\t\tthis._lastSetEndOfLifeReason = reason;\n\t}\n\n\tprivate updateShownDuration(viewKind: InlineCompletionViewKind) {\n\t\tconst timeNow = Date.now();\n\t\tif (!this._showStartTime) {\n\t\t\tthis._showStartTime = timeNow;\n\t\t}\n\n\t\tconst isCollapsed = viewKind === InlineCompletionViewKind.Collapsed;\n\t\tif (!isCollapsed && this._showUncollapsedStartTime === undefined) {\n\t\t\tthis._showUncollapsedStartTime = timeNow;\n\t\t}\n\n\t\tif (isCollapsed && this._showUncollapsedStartTime !== undefined) {\n\t\t\tthis._showUncollapsedDuration += timeNow - this._showUncollapsedStartTime;\n\t\t}\n\t}\n\n\tprivate reportInlineEditHidden() {\n\t\tif (this._showStartTime === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst timeNow = Date.now();\n\t\tthis._shownDuration += timeNow - this._showStartTime;\n\t\tthis._showStartTime = undefined;\n\n\t\tif (this._showUncollapsedStartTime === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tthis._showUncollapsedDuration += timeNow - this._showUncollapsedStartTime;\n\t\tthis._showUncollapsedStartTime = undefined;\n\t}\n}\n\nexport interface SnippetInfo {\n\tsnippet: string;\n\t/* Could be different than the main range */\n\trange: Range;\n}\n\nexport interface IDisplayLocation {\n\trange: Range;\n\tlabel: string;\n\tkind: InlineCompletionDisplayLocationKind;\n}\n\nexport enum InlineCompletionEditorType {\n\tTextEditor = 'textEditor',\n\tDiffEditor = 'diffEditor',\n\tNotebook = 'notebook',\n}\n\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineSuggestionList {\n\tprivate refCount = 0;\n\tconstructor(\n\t\tpublic readonly inlineSuggestions: InlineCompletions,\n\t\tpublic readonly inlineSuggestionsData: readonly InlineSuggestData[],\n\t\tpublic readonly provider: InlineCompletionsProvider,\n\t) { }\n\n\taddRef(): void {\n\t\tthis.refCount++;\n\t}\n\n\tremoveRef(reason: InlineCompletionsDisposeReason = { kind: 'other' }): void {\n\t\tthis.refCount--;\n\t\tif (this.refCount === 0) {\n\t\t\tfor (const item of this.inlineSuggestionsData) {\n\t\t\t\t// Fallback if it has not been called before\n\t\t\t\titem.reportEndOfLife();\n\t\t\t}\n\t\t\tthis.provider.disposeInlineCompletions(this.inlineSuggestions, reason);\n\t\t}\n\t}\n}\n\nfunction getDefaultRange(position: Position, model: ITextModel): Range {\n\tconst word = model.getWordAtPosition(position);\n\tconst maxColumn = model.getLineMaxColumn(position.lineNumber);\n\t// By default, always replace up until the end of the current line.\n\t// This default might be subject to change!\n\treturn word\n\t\t? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n\t\t: Range.fromPositions(position, position.with(undefined, maxColumn));\n}\n\nfunction closeBrackets(text: string, position: Position, model: ITextModel, languageConfigurationService: ILanguageConfigurationService): string {\n\tconst currentLine = model.getLineContent(position.lineNumber);\n\tconst edit = StringReplacement.replace(new OffsetRange(position.column - 1, currentLine.length), text);\n\n\tconst proposedLineTokens = model.tokenization.tokenizeLinesAt(position.lineNumber, [edit.replace(currentLine)]);\n\tconst textTokens = proposedLineTokens?.[0].sliceZeroCopy(edit.getRangeAfterReplace());\n\tif (!textTokens) {\n\t\treturn text;\n\t}\n\n\tconst fixedText = fixBracketsInLine(textTokens, languageConfigurationService);\n\treturn fixedText;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2274, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsSource.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsSource.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsSource.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { booleanComparator, compareBy, compareUndefinedSmallest, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findLastMax } from '../../../../../base/common/arraysFind.js';\nimport { CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { equalsIfDefined, itemEquals } from '../../../../../base/common/equals.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { derived, IObservable, IObservableWithChange, ITransaction, observableValue, recordChangesLazy, transaction } from '../../../../../base/common/observable.js';\n// eslint-disable-next-line local/code-no-deep-import-of-internal\nimport { observableReducerSettable } from '../../../../../base/common/observableInternal/experimental/reducer.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { observableConfigValue } from '../../../../../platform/observable/common/platformObservableUtils.js';\nimport { StringEdit } from '../../../../common/core/edits/stringEdit.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { InlineCompletionEndOfLifeReasonKind, InlineCompletionTriggerKind, InlineCompletionsProvider } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { offsetEditFromContentChanges } from '../../../../common/model/textModelStringEdit.js';\nimport { IFeatureDebounceInformation } from '../../../../common/services/languageFeatureDebounce.js';\nimport { IModelContentChangedEvent } from '../../../../common/textModelEvents.js';\nimport { formatRecordableLogEntry, IRecordableEditorLogEntry, IRecordableLogEntry, StructuredLogger } from '../structuredLogger.js';\nimport { wait } from '../utils.js';\nimport { InlineSuggestionIdentity, InlineSuggestionItem } from './inlineSuggestionItem.js';\nimport { InlineCompletionContextWithoutUuid, InlineSuggestRequestInfo, provideInlineCompletions, runWhenCancelled } from './provideInlineCompletions.js';\n\nexport class InlineCompletionsSource extends Disposable {\n\tprivate static _requestId = 0;\n\n\tprivate readonly _updateOperation = this._register(new MutableDisposable<UpdateOperation>());\n\n\tprivate readonly _loggingEnabled;\n\n\tprivate readonly _structuredFetchLogger;\n\n\tprivate readonly _state = observableReducerSettable(this, {\n\t\tinitial: () => ({\n\t\t\tinlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t}),\n\t\tdisposeFinal: (values) => {\n\t\t\tvalues.inlineCompletions.dispose();\n\t\t\tvalues.suggestWidgetInlineCompletions.dispose();\n\t\t},\n\t\tchangeTracker: recordChangesLazy(() => ({ versionId: this._versionId })),\n\t\tupdate: (reader, previousValue, changes) => {\n\t\t\tconst edit = StringEdit.compose(changes.changes.map(c => c.change ? offsetEditFromContentChanges(c.change.changes) : StringEdit.empty).filter(isDefined));\n\n\t\t\tif (edit.isEmpty()) {\n\t\t\t\treturn previousValue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\tinlineCompletions: previousValue.inlineCompletions.createStateWithAppliedEdit(edit, this._textModel),\n\t\t\t\t\tsuggestWidgetInlineCompletions: previousValue.suggestWidgetInlineCompletions.createStateWithAppliedEdit(edit, this._textModel),\n\t\t\t\t};\n\t\t\t} finally {\n\t\t\t\tpreviousValue.inlineCompletions.dispose();\n\t\t\t\tpreviousValue.suggestWidgetInlineCompletions.dispose();\n\t\t\t}\n\t\t}\n\t});\n\n\tpublic readonly inlineCompletions = this._state.map(this, v => v.inlineCompletions);\n\tpublic readonly suggestWidgetInlineCompletions = this._state.map(this, v => v.suggestWidgetInlineCompletions);\n\n\tconstructor(\n\t\tprivate readonly _textModel: ITextModel,\n\t\tprivate readonly _versionId: IObservableWithChange<number | null, IModelContentChangedEvent | undefined>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\tprivate readonly _cursorPosition: IObservable<Position>,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._loggingEnabled = observableConfigValue('editor.inlineSuggest.logFetch', false, this._configurationService).recomputeInitiallyAndOnChange(this._store);\n\t\tthis._structuredFetchLogger = this._register(this._instantiationService.createInstance(StructuredLogger.cast<\n\t\t\t{ kind: 'start'; requestId: number; context: unknown } & IRecordableEditorLogEntry\n\t\t\t| { kind: 'end'; error: unknown; durationMs: number; result: unknown; requestId: number } & IRecordableLogEntry\n\t\t>(),\n\t\t\t'editor.inlineSuggest.logFetch.commandId'\n\t\t));\n\n\t\tthis.clearOperationOnTextModelChange.recomputeInitiallyAndOnChange(this._store);\n\t}\n\n\tpublic readonly clearOperationOnTextModelChange = derived(this, reader => {\n\t\tthis._versionId.read(reader);\n\t\tthis._updateOperation.clear();\n\t\treturn undefined; // always constant\n\t});\n\n\tprivate _log(entry:\n\t\t{ sourceId: string; kind: 'start'; requestId: number; context: unknown; provider: string | undefined } & IRecordableEditorLogEntry\n\t\t| { sourceId: string; kind: 'end'; error: unknown; durationMs: number; result: unknown; requestId: number; didAllProvidersReturn: boolean } & IRecordableLogEntry\n\t) {\n\t\tif (this._loggingEnabled.get()) {\n\t\t\tthis._logService.info(formatRecordableLogEntry(entry));\n\t\t}\n\t\tthis._structuredFetchLogger.log(entry);\n\t}\n\n\tprivate readonly _loadingCount = observableValue(this, 0);\n\n\tpublic fetch(\n\t\tproviders: InlineCompletionsProvider[],\n\t\tprovidersLabel: string | undefined,\n\t\tcontext: InlineCompletionContextWithoutUuid,\n\t\tactiveInlineCompletion: InlineSuggestionIdentity | undefined,\n\t\twithDebounce: boolean,\n\t\tuserJumpedToActiveCompletion: IObservable<boolean>,\n\t\trequestInfo: InlineSuggestRequestInfo\n\t): Promise<boolean> {\n\t\tconst position = this._cursorPosition.get();\n\t\tconst request = new UpdateRequest(position, context, this._textModel.getVersionId(), new Set(providers));\n\n\t\tconst target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions.get() : this.inlineCompletions.get();\n\n\t\tif (this._updateOperation.value?.request.satisfies(request)) {\n\t\t\treturn this._updateOperation.value.promise;\n\t\t} else if (target?.request?.satisfies(request)) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tconst updateOngoing = !!this._updateOperation.value;\n\t\tthis._updateOperation.clear();\n\n\t\tconst source = new CancellationTokenSource();\n\n\t\tconst promise = (async () => {\n\t\t\tthis._loadingCount.set(this._loadingCount.get() + 1, undefined);\n\t\t\tconst store = new DisposableStore();\n\t\t\ttry {\n\t\t\t\tconst recommendedDebounceValue = this._debounceValue.get(this._textModel);\n\t\t\t\tconst debounceValue = findLastMax(\n\t\t\t\t\tproviders.map(p => p.debounceDelayMs),\n\t\t\t\t\tcompareUndefinedSmallest(numberComparator)\n\t\t\t\t) ?? recommendedDebounceValue;\n\n\t\t\t\t// Debounce in any case if update is ongoing\n\t\t\t\tconst shouldDebounce = updateOngoing || (withDebounce && context.triggerKind === InlineCompletionTriggerKind.Automatic);\n\t\t\t\tif (shouldDebounce) {\n\t\t\t\t\t// This debounces the operation\n\t\t\t\t\tawait wait(debounceValue, source.token);\n\t\t\t\t}\n\n\t\t\t\tif (source.token.isCancellationRequested || this._store.isDisposed || this._textModel.getVersionId() !== request.versionId) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst requestId = InlineCompletionsSource._requestId++;\n\t\t\t\tif (this._loggingEnabled.get() || this._structuredFetchLogger.isEnabled.get()) {\n\t\t\t\t\tthis._log({\n\t\t\t\t\t\tsourceId: 'InlineCompletions.fetch',\n\t\t\t\t\t\tkind: 'start',\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\tmodelUri: this._textModel.uri,\n\t\t\t\t\t\tmodelVersion: this._textModel.getVersionId(),\n\t\t\t\t\t\tcontext: { triggerKind: context.triggerKind, suggestInfo: context.selectedSuggestionInfo ? true : undefined },\n\t\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\t\tprovider: providersLabel,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst startTime = new Date();\n\t\t\t\tconst providerResult = provideInlineCompletions(providers, this._cursorPosition.get(), this._textModel, context, requestInfo, this._languageConfigurationService);\n\n\t\t\t\trunWhenCancelled(source.token, () => providerResult.cancelAndDispose({ kind: 'tokenCancellation' }));\n\n\t\t\t\tlet shouldStopEarly = false;\n\n\t\t\t\tconst suggestions: InlineSuggestionItem[] = [];\n\t\t\t\tfor await (const list of providerResult.lists) {\n\t\t\t\t\tif (!list) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlist.addRef();\n\t\t\t\t\tstore.add(toDisposable(() => list.removeRef(list.inlineSuggestionsData.length === 0 ? { kind: 'empty' } : { kind: 'notTaken' })));\n\n\t\t\t\t\tfor (const item of list.inlineSuggestionsData) {\n\t\t\t\t\t\tif (!context.includeInlineEdits && (item.isInlineEdit || item.showInlineEditMenu)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!context.includeInlineCompletions && !(item.isInlineEdit || item.showInlineEditMenu)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst i = InlineSuggestionItem.create(item, this._textModel);\n\t\t\t\t\t\tsuggestions.push(i);\n\t\t\t\t\t\t// Stop after first visible inline completion\n\t\t\t\t\t\tif (!i.isInlineEdit && !i.showInlineEditMenu && context.triggerKind === InlineCompletionTriggerKind.Automatic) {\n\t\t\t\t\t\t\tif (i.isVisible(this._textModel, this._cursorPosition.get())) {\n\t\t\t\t\t\t\t\tshouldStopEarly = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shouldStopEarly) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tproviderResult.cancelAndDispose({ kind: 'lostRace' });\n\n\t\t\t\tif (this._loggingEnabled.get() || this._structuredFetchLogger.isEnabled.get()) {\n\t\t\t\t\tconst didAllProvidersReturn = providerResult.didAllProvidersReturn;\n\t\t\t\t\tlet error: string | undefined = undefined;\n\t\t\t\t\tif (source.token.isCancellationRequested || this._store.isDisposed || this._textModel.getVersionId() !== request.versionId) {\n\t\t\t\t\t\terror = 'canceled';\n\t\t\t\t\t}\n\t\t\t\t\tconst result = suggestions.map(c => ({\n\t\t\t\t\t\trange: c.editRange.toString(),\n\t\t\t\t\t\ttext: c.insertText,\n\t\t\t\t\t\tisInlineEdit: !!c.isInlineEdit,\n\t\t\t\t\t\tsource: c.source.provider.groupId,\n\t\t\t\t\t}));\n\t\t\t\t\tthis._log({ sourceId: 'InlineCompletions.fetch', kind: 'end', requestId, durationMs: (Date.now() - startTime.getTime()), error, result, time: Date.now(), didAllProvidersReturn });\n\t\t\t\t}\n\n\t\t\t\tconst remainingTimeToWait = context.earliestShownDateTime - Date.now();\n\t\t\t\tif (remainingTimeToWait > 0) {\n\t\t\t\t\tawait wait(remainingTimeToWait, source.token);\n\t\t\t\t}\n\n\t\t\t\tif (source.token.isCancellationRequested || this._store.isDisposed || this._textModel.getVersionId() !== request.versionId\n\t\t\t\t\t|| userJumpedToActiveCompletion.get()  /* In the meantime the user showed interest for the active completion so dont hide it */) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst endTime = new Date();\n\t\t\t\tthis._debounceValue.update(this._textModel, endTime.getTime() - startTime.getTime());\n\n\t\t\t\tconst cursorPosition = this._cursorPosition.get();\n\t\t\t\tthis._updateOperation.clear();\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\t/** @description Update completions with provider result */\n\t\t\t\t\tconst v = this._state.get();\n\n\t\t\t\t\tif (context.selectedSuggestionInfo) {\n\t\t\t\t\t\tthis._state.set({\n\t\t\t\t\t\t\tinlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\t\t\t\t\tsuggestWidgetInlineCompletions: v.suggestWidgetInlineCompletions.createStateWithAppliedResults(suggestions, request, this._textModel, cursorPosition, activeInlineCompletion),\n\t\t\t\t\t\t}, tx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._state.set({\n\t\t\t\t\t\t\tinlineCompletions: v.inlineCompletions.createStateWithAppliedResults(suggestions, request, this._textModel, cursorPosition, activeInlineCompletion),\n\t\t\t\t\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\t\t\t\t}, tx);\n\t\t\t\t\t}\n\n\t\t\t\t\tv.inlineCompletions.dispose();\n\t\t\t\t\tv.suggestWidgetInlineCompletions.dispose();\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\tthis._loadingCount.set(this._loadingCount.get() - 1, undefined);\n\t\t\t\tstore.dispose();\n\t\t\t}\n\n\t\t\treturn true;\n\t\t})();\n\n\t\tconst updateOperation = new UpdateOperation(request, source, promise);\n\t\tthis._updateOperation.value = updateOperation;\n\n\t\treturn promise;\n\t}\n\n\tpublic clear(tx: ITransaction): void {\n\t\tthis._updateOperation.clear();\n\t\tconst v = this._state.get();\n\t\tthis._state.set({\n\t\t\tinlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty()\n\t\t}, tx);\n\t\tv.inlineCompletions.dispose();\n\t\tv.suggestWidgetInlineCompletions.dispose();\n\t}\n\n\tpublic seedInlineCompletionsWithSuggestWidget(): void {\n\t\tconst inlineCompletions = this.inlineCompletions.get();\n\t\tconst suggestWidgetInlineCompletions = this.suggestWidgetInlineCompletions.get();\n\t\tif (!suggestWidgetInlineCompletions) {\n\t\t\treturn;\n\t\t}\n\t\ttransaction(tx => {\n\t\t\t/** @description Seed inline completions with (newer) suggest widget inline completions */\n\t\t\tif (!inlineCompletions || (suggestWidgetInlineCompletions.request?.versionId ?? -1) > (inlineCompletions.request?.versionId ?? -1)) {\n\t\t\t\tinlineCompletions?.dispose();\n\t\t\t\tconst s = this._state.get();\n\t\t\t\tthis._state.set({\n\t\t\t\t\tinlineCompletions: suggestWidgetInlineCompletions.clone(),\n\t\t\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\t\t}, tx);\n\t\t\t\ts.inlineCompletions.dispose();\n\t\t\t\ts.suggestWidgetInlineCompletions.dispose();\n\t\t\t}\n\t\t\tthis.clearSuggestWidgetInlineCompletions(tx);\n\t\t});\n\t}\n\n\tpublic clearSuggestWidgetInlineCompletions(tx: ITransaction): void {\n\t\tif (this._updateOperation.value?.request.context.selectedSuggestionInfo) {\n\t\t\tthis._updateOperation.clear();\n\t\t}\n\t}\n\n\tpublic cancelUpdate(): void {\n\t\tthis._updateOperation.clear();\n\t}\n}\n\nclass UpdateRequest {\n\tconstructor(\n\t\tpublic readonly position: Position,\n\t\tpublic readonly context: InlineCompletionContextWithoutUuid,\n\t\tpublic readonly versionId: number,\n\t\tpublic readonly providers: Set<InlineCompletionsProvider>,\n\t) {\n\t}\n\n\tpublic satisfies(other: UpdateRequest): boolean {\n\t\treturn this.position.equals(other.position)\n\t\t\t&& equalsIfDefined(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, itemEquals())\n\t\t\t&& (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n\t\t\t\t|| this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n\t\t\t&& this.versionId === other.versionId\n\t\t\t&& isSubset(other.providers, this.providers);\n\t}\n}\n\nfunction isSubset<T>(set1: Set<T>, set2: Set<T>): boolean {\n\treturn [...set1].every(item => set2.has(item));\n}\n\nclass UpdateOperation implements IDisposable {\n\tconstructor(\n\t\tpublic readonly request: UpdateRequest,\n\t\tpublic readonly cancellationTokenSource: CancellationTokenSource,\n\t\tpublic readonly promise: Promise<boolean>,\n\t) {\n\t}\n\n\tdispose() {\n\t\tthis.cancellationTokenSource.cancel();\n\t}\n}\n\nclass InlineCompletionsState extends Disposable {\n\tpublic static createEmpty(): InlineCompletionsState {\n\t\treturn new InlineCompletionsState([], undefined);\n\t}\n\n\tconstructor(\n\t\tpublic readonly inlineCompletions: readonly InlineSuggestionItem[],\n\t\tpublic readonly request: UpdateRequest | undefined,\n\t) {\n\t\tfor (const inlineCompletion of inlineCompletions) {\n\t\t\tinlineCompletion.addRef();\n\t\t}\n\n\t\tsuper();\n\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tfor (const inlineCompletion of this.inlineCompletions) {\n\t\t\t\t\tinlineCompletion.removeRef();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _findById(id: InlineSuggestionIdentity): InlineSuggestionItem | undefined {\n\t\treturn this.inlineCompletions.find(i => i.identity === id);\n\t}\n\n\tprivate _findByHash(hash: string): InlineSuggestionItem | undefined {\n\t\treturn this.inlineCompletions.find(i => i.hash === hash);\n\t}\n\n\t/**\n\t * Applies the edit on the state.\n\t*/\n\tpublic createStateWithAppliedEdit(edit: StringEdit, textModel: ITextModel): InlineCompletionsState {\n\t\tconst newInlineCompletions = this.inlineCompletions.map(i => i.withEdit(edit, textModel)).filter(isDefined);\n\t\treturn new InlineCompletionsState(newInlineCompletions, this.request);\n\t}\n\n\tpublic createStateWithAppliedResults(updatedSuggestions: InlineSuggestionItem[], request: UpdateRequest, textModel: ITextModel, cursorPosition: Position, itemIdToPreserveAtTop: InlineSuggestionIdentity | undefined): InlineCompletionsState {\n\t\tlet itemToPreserve: InlineSuggestionItem | undefined = undefined;\n\t\tif (itemIdToPreserveAtTop) {\n\t\t\tconst itemToPreserveCandidate = this._findById(itemIdToPreserveAtTop);\n\t\t\tif (itemToPreserveCandidate && itemToPreserveCandidate.canBeReused(textModel, request.position)) {\n\t\t\t\titemToPreserve = itemToPreserveCandidate;\n\n\t\t\t\tconst updatedItemToPreserve = updatedSuggestions.find(i => i.hash === itemToPreserveCandidate.hash);\n\t\t\t\tif (updatedItemToPreserve) {\n\t\t\t\t\tupdatedSuggestions = moveToFront(updatedItemToPreserve, updatedSuggestions);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedSuggestions = [itemToPreserveCandidate, ...updatedSuggestions];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst preferInlineCompletions = itemToPreserve\n\t\t\t// itemToPreserve has precedence\n\t\t\t? !itemToPreserve.isInlineEdit\n\t\t\t// Otherwise: prefer inline completion if there is a visible one\n\t\t\t: updatedSuggestions.some(i => !i.isInlineEdit && i.isVisible(textModel, cursorPosition));\n\n\t\tlet updatedItems: InlineSuggestionItem[] = [];\n\t\tfor (const i of updatedSuggestions) {\n\t\t\tconst oldItem = this._findByHash(i.hash);\n\t\t\tlet item;\n\t\t\tif (oldItem && oldItem !== i) {\n\t\t\t\titem = i.withIdentity(oldItem.identity);\n\t\t\t\ti.setIsPreceeded(oldItem);\n\t\t\t\toldItem.setEndOfLifeReason({ kind: InlineCompletionEndOfLifeReasonKind.Ignored, userTypingDisagreed: false, supersededBy: i.getSourceCompletion() });\n\t\t\t} else {\n\t\t\t\titem = i;\n\t\t\t}\n\t\t\tif (preferInlineCompletions !== item.isInlineEdit) {\n\t\t\t\tupdatedItems.push(item);\n\t\t\t}\n\t\t}\n\n\t\tupdatedItems.sort(compareBy(i => i.showInlineEditMenu, booleanComparator));\n\t\tupdatedItems = distinctByKey(updatedItems, i => i.semanticId);\n\n\t\treturn new InlineCompletionsState(updatedItems, request);\n\t}\n\n\tpublic clone(): InlineCompletionsState {\n\t\treturn new InlineCompletionsState(this.inlineCompletions, this.request);\n\t}\n}\n\n/** Keeps the first item in case of duplicates. */\nfunction distinctByKey<T>(items: T[], key: (item: T) => unknown): T[] {\n\tconst seen = new Set();\n\treturn items.filter(item => {\n\t\tconst k = key(item);\n\t\tif (seen.has(k)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(k);\n\t\treturn true;\n\t});\n}\n\nfunction moveToFront<T>(item: T, items: T[]): T[] {\n\tconst index = items.indexOf(item);\n\tif (index > -1) {\n\t\treturn [item, ...items.slice(0, index), ...items.slice(index + 1)];\n\t}\n\treturn items;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { booleanComparator, compareBy, compareUndefinedSmallest, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findLastMax } from '../../../../../base/common/arraysFind.js';\nimport { CancellationTokenSource } from '../../../../../base/common/cancellation.js';\nimport { equalsIfDefined, itemEquals } from '../../../../../base/common/equals.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { derived, IObservable, IObservableWithChange, ITransaction, observableValue, recordChangesLazy, transaction } from '../../../../../base/common/observable.js';\n// eslint-disable-next-line local/code-no-deep-import-of-internal\nimport { observableReducerSettable } from '../../../../../base/common/observableInternal/experimental/reducer.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\nimport { observableConfigValue } from '../../../../../platform/observable/common/platformObservableUtils.js';\nimport { StringEdit } from '../../../../common/core/edits/stringEdit.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { InlineCompletionEndOfLifeReasonKind, InlineCompletionTriggerKind, InlineCompletionsProvider } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { offsetEditFromContentChanges } from '../../../../common/model/textModelStringEdit.js';\nimport { IFeatureDebounceInformation } from '../../../../common/services/languageFeatureDebounce.js';\nimport { IModelContentChangedEvent } from '../../../../common/textModelEvents.js';\nimport { formatRecordableLogEntry, IRecordableEditorLogEntry, IRecordableLogEntry, StructuredLogger } from '../structuredLogger.js';\nimport { wait } from '../utils.js';\nimport { InlineSuggestionIdentity, InlineSuggestionItem } from './inlineSuggestionItem.js';\nimport { InlineCompletionContextWithoutUuid, InlineSuggestRequestInfo, provideInlineCompletions, runWhenCancelled } from './provideInlineCompletions.js';\n\nexport class InlineCompletionsSource extends Disposable {\n\tprivate static _requestId = 0;\n\n\tprivate readonly _updateOperation = this._register(new MutableDisposable<UpdateOperation>());\n\n\tprivate readonly _loggingEnabled;\n\n\tprivate readonly _structuredFetchLogger;\n\n\tprivate readonly _state = observableReducerSettable(this, {\n\t\tinitial: () => ({\n\t\t\tinlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t}),\n\t\tdisposeFinal: (values) => {\n\t\t\tvalues.inlineCompletions.dispose();\n\t\t\tvalues.suggestWidgetInlineCompletions.dispose();\n\t\t},\n\t\tchangeTracker: recordChangesLazy(() => ({ versionId: this._versionId })),\n\t\tupdate: (reader, previousValue, changes) => {\n\t\t\tconst edit = StringEdit.compose(changes.changes.map(c => c.change ? offsetEditFromContentChanges(c.change.changes) : StringEdit.empty).filter(isDefined));\n\n\t\t\tif (edit.isEmpty()) {\n\t\t\t\treturn previousValue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\treturn {\n\t\t\t\t\tinlineCompletions: previousValue.inlineCompletions.createStateWithAppliedEdit(edit, this._textModel),\n\t\t\t\t\tsuggestWidgetInlineCompletions: previousValue.suggestWidgetInlineCompletions.createStateWithAppliedEdit(edit, this._textModel),\n\t\t\t\t};\n\t\t\t} finally {\n\t\t\t\tpreviousValue.inlineCompletions.dispose();\n\t\t\t\tpreviousValue.suggestWidgetInlineCompletions.dispose();\n\t\t\t}\n\t\t}\n\t});\n\n\tpublic readonly inlineCompletions = this._state.map(this, v => v.inlineCompletions);\n\tpublic readonly suggestWidgetInlineCompletions = this._state.map(this, v => v.suggestWidgetInlineCompletions);\n\n\tconstructor(\n\t\tprivate readonly _textModel: ITextModel,\n\t\tprivate readonly _versionId: IObservableWithChange<number | null, IModelContentChangedEvent | undefined>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\tprivate readonly _cursorPosition: IObservable<Position>,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._loggingEnabled = observableConfigValue('editor.inlineSuggest.logFetch', false, this._configurationService).recomputeInitiallyAndOnChange(this._store);\n\t\tthis._structuredFetchLogger = this._register(this._instantiationService.createInstance(StructuredLogger.cast<\n\t\t\t{ kind: 'start'; requestId: number; context: unknown } & IRecordableEditorLogEntry\n\t\t\t| { kind: 'end'; error: unknown; durationMs: number; result: unknown; requestId: number } & IRecordableLogEntry\n\t\t>(),\n\t\t\t'editor.inlineSuggest.logFetch.commandId'\n\t\t));\n\n\t\tthis.clearOperationOnTextModelChange.recomputeInitiallyAndOnChange(this._store);\n\t}\n\n\tpublic readonly clearOperationOnTextModelChange = derived(this, reader => {\n\t\tthis._versionId.read(reader);\n\t\tthis._updateOperation.clear();\n\t\treturn undefined; // always constant\n\t});\n\n\tprivate _log(entry:\n\t\t{ sourceId: string; kind: 'start'; requestId: number; context: unknown; provider: string | undefined } & IRecordableEditorLogEntry\n\t\t| { sourceId: string; kind: 'end'; error: unknown; durationMs: number; result: unknown; requestId: number; didAllProvidersReturn: boolean } & IRecordableLogEntry\n\t) {\n\t\tif (this._loggingEnabled.get()) {\n\t\t\tthis._logService.info(formatRecordableLogEntry(entry));\n\t\t}\n\t\tthis._structuredFetchLogger.log(entry);\n\t}\n\n\tprivate readonly _loadingCount = observableValue(this, 0);\n\n\tpublic fetch(\n\t\tproviders: InlineCompletionsProvider[],\n\t\tprovidersLabel: string | undefined,\n\t\tcontext: InlineCompletionContextWithoutUuid,\n\t\tactiveInlineCompletion: InlineSuggestionIdentity | undefined,\n\t\twithDebounce: boolean,\n\t\tuserJumpedToActiveCompletion: IObservable<boolean>,\n\t\trequestInfo: InlineSuggestRequestInfo\n\t): Promise<boolean> {\n\t\tconst position = this._cursorPosition.get();\n\t\tconst request = new UpdateRequest(position, context, this._textModel.getVersionId(), new Set(providers));\n\n\t\tconst target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions.get() : this.inlineCompletions.get();\n\n\t\tif (this._updateOperation.value?.request.satisfies(request)) {\n\t\t\treturn this._updateOperation.value.promise;\n\t\t} else if (target?.request?.satisfies(request)) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tconst updateOngoing = !!this._updateOperation.value;\n\t\tthis._updateOperation.clear();\n\n\t\tconst source = new CancellationTokenSource();\n\n\t\tconst promise = (async () => {\n\t\t\tthis._loadingCount.set(this._loadingCount.get() + 1, undefined);\n\t\t\tconst store = new DisposableStore();\n\t\t\ttry {\n\t\t\t\tconst recommendedDebounceValue = this._debounceValue.get(this._textModel);\n\t\t\t\tconst debounceValue = findLastMax(\n\t\t\t\t\tproviders.map(p => p.debounceDelayMs),\n\t\t\t\t\tcompareUndefinedSmallest(numberComparator)\n\t\t\t\t) ?? recommendedDebounceValue;\n\n\t\t\t\t// Debounce in any case if update is ongoing\n\t\t\t\tconst shouldDebounce = updateOngoing || (withDebounce && context.triggerKind === InlineCompletionTriggerKind.Automatic);\n\t\t\t\tif (shouldDebounce) {\n\t\t\t\t\t// This debounces the operation\n\t\t\t\t\tawait wait(debounceValue, source.token);\n\t\t\t\t}\n\n\t\t\t\tif (source.token.isCancellationRequested || this._store.isDisposed || this._textModel.getVersionId() !== request.versionId) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst requestId = InlineCompletionsSource._requestId++;\n\t\t\t\tif (this._loggingEnabled.get() || this._structuredFetchLogger.isEnabled.get()) {\n\t\t\t\t\tthis._log({\n\t\t\t\t\t\tsourceId: 'InlineCompletions.fetch',\n\t\t\t\t\t\tkind: 'start',\n\t\t\t\t\t\trequestId,\n\t\t\t\t\t\tmodelUri: this._textModel.uri,\n\t\t\t\t\t\tmodelVersion: this._textModel.getVersionId(),\n\t\t\t\t\t\tcontext: { triggerKind: context.triggerKind, suggestInfo: context.selectedSuggestionInfo ? true : undefined },\n\t\t\t\t\t\ttime: Date.now(),\n\t\t\t\t\t\tprovider: providersLabel,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst startTime = new Date();\n\t\t\t\tconst providerResult = provideInlineCompletions(providers, this._cursorPosition.get(), this._textModel, context, requestInfo, this._languageConfigurationService);\n\n\t\t\t\trunWhenCancelled(source.token, () => providerResult.cancelAndDispose({ kind: 'tokenCancellation' }));\n\n\t\t\t\tlet shouldStopEarly = false;\n\n\t\t\t\tconst suggestions: InlineSuggestionItem[] = [];\n\t\t\t\tfor await (const list of providerResult.lists) {\n\t\t\t\t\tif (!list) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tlist.addRef();\n\t\t\t\t\tstore.add(toDisposable(() => list.removeRef(list.inlineSuggestionsData.length === 0 ? { kind: 'empty' } : { kind: 'notTaken' })));\n\n\t\t\t\t\tfor (const item of list.inlineSuggestionsData) {\n\t\t\t\t\t\tif (!context.includeInlineEdits && (item.isInlineEdit || item.showInlineEditMenu)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!context.includeInlineCompletions && !(item.isInlineEdit || item.showInlineEditMenu)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst i = InlineSuggestionItem.create(item, this._textModel);\n\t\t\t\t\t\tsuggestions.push(i);\n\t\t\t\t\t\t// Stop after first visible inline completion\n\t\t\t\t\t\tif (!i.isInlineEdit && !i.showInlineEditMenu && context.triggerKind === InlineCompletionTriggerKind.Automatic) {\n\t\t\t\t\t\t\tif (i.isVisible(this._textModel, this._cursorPosition.get())) {\n\t\t\t\t\t\t\t\tshouldStopEarly = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shouldStopEarly) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tproviderResult.cancelAndDispose({ kind: 'lostRace' });\n\n\t\t\t\tif (this._loggingEnabled.get() || this._structuredFetchLogger.isEnabled.get()) {\n\t\t\t\t\tconst didAllProvidersReturn = providerResult.didAllProvidersReturn;\n\t\t\t\t\tlet error: string | undefined = undefined;\n\t\t\t\t\tif (source.token.isCancellationRequested || this._store.isDisposed || this._textModel.getVersionId() !== request.versionId) {\n\t\t\t\t\t\terror = 'canceled';\n\t\t\t\t\t}\n\t\t\t\t\tconst result = suggestions.map(c => ({\n\t\t\t\t\t\trange: c.editRange.toString(),\n\t\t\t\t\t\ttext: c.insertText,\n\t\t\t\t\t\tisInlineEdit: !!c.isInlineEdit,\n\t\t\t\t\t\tsource: c.source.provider.groupId,\n\t\t\t\t\t}));\n\t\t\t\t\tthis._log({ sourceId: 'InlineCompletions.fetch', kind: 'end', requestId, durationMs: (Date.now() - startTime.getTime()), error, result, time: Date.now(), didAllProvidersReturn });\n\t\t\t\t}\n\n\t\t\t\tconst remainingTimeToWait = context.earliestShownDateTime - Date.now();\n\t\t\t\tif (remainingTimeToWait > 0) {\n\t\t\t\t\tawait wait(remainingTimeToWait, source.token);\n\t\t\t\t}\n\n\t\t\t\tif (source.token.isCancellationRequested || this._store.isDisposed || this._textModel.getVersionId() !== request.versionId\n\t\t\t\t\t|| userJumpedToActiveCompletion.get()  /* In the meantime the user showed interest for the active completion so dont hide it */) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst endTime = new Date();\n\t\t\t\tthis._debounceValue.update(this._textModel, endTime.getTime() - startTime.getTime());\n\n\t\t\t\tconst cursorPosition = this._cursorPosition.get();\n\t\t\t\tthis._updateOperation.clear();\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\t/** @description Update completions with provider result */\n\t\t\t\t\tconst v = this._state.get();\n\n\t\t\t\t\tif (context.selectedSuggestionInfo) {\n\t\t\t\t\t\tthis._state.set({\n\t\t\t\t\t\t\tinlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\t\t\t\t\tsuggestWidgetInlineCompletions: v.suggestWidgetInlineCompletions.createStateWithAppliedResults(suggestions, request, this._textModel, cursorPosition, activeInlineCompletion),\n\t\t\t\t\t\t}, tx);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._state.set({\n\t\t\t\t\t\t\tinlineCompletions: v.inlineCompletions.createStateWithAppliedResults(suggestions, request, this._textModel, cursorPosition, activeInlineCompletion),\n\t\t\t\t\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\t\t\t\t}, tx);\n\t\t\t\t\t}\n\n\t\t\t\t\tv.inlineCompletions.dispose();\n\t\t\t\t\tv.suggestWidgetInlineCompletions.dispose();\n\t\t\t\t});\n\t\t\t} finally {\n\t\t\t\tthis._loadingCount.set(this._loadingCount.get() - 1, undefined);\n\t\t\t\tstore.dispose();\n\t\t\t}\n\n\t\t\treturn true;\n\t\t})();\n\n\t\tconst updateOperation = new UpdateOperation(request, source, promise);\n\t\tthis._updateOperation.value = updateOperation;\n\n\t\treturn promise;\n\t}\n\n\tpublic clear(tx: ITransaction): void {\n\t\tthis._updateOperation.clear();\n\t\tconst v = this._state.get();\n\t\tthis._state.set({\n\t\t\tinlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty()\n\t\t}, tx);\n\t\tv.inlineCompletions.dispose();\n\t\tv.suggestWidgetInlineCompletions.dispose();\n\t}\n\n\tpublic seedInlineCompletionsWithSuggestWidget(): void {\n\t\tconst inlineCompletions = this.inlineCompletions.get();\n\t\tconst suggestWidgetInlineCompletions = this.suggestWidgetInlineCompletions.get();\n\t\tif (!suggestWidgetInlineCompletions) {\n\t\t\treturn;\n\t\t}\n\t\ttransaction(tx => {\n\t\t\t/** @description Seed inline completions with (newer) suggest widget inline completions */\n\t\t\tif (!inlineCompletions || (suggestWidgetInlineCompletions.request?.versionId ?? -1) > (inlineCompletions.request?.versionId ?? -1)) {\n\t\t\t\tinlineCompletions?.dispose();\n\t\t\t\tconst s = this._state.get();\n\t\t\t\tthis._state.set({\n\t\t\t\t\tinlineCompletions: suggestWidgetInlineCompletions.clone(),\n\t\t\t\t\tsuggestWidgetInlineCompletions: InlineCompletionsState.createEmpty(),\n\t\t\t\t}, tx);\n\t\t\t\ts.inlineCompletions.dispose();\n\t\t\t\ts.suggestWidgetInlineCompletions.dispose();\n\t\t\t}\n\t\t\tthis.clearSuggestWidgetInlineCompletions(tx);\n\t\t});\n\t}\n\n\tpublic clearSuggestWidgetInlineCompletions(tx: ITransaction): void {\n\t\tif (this._updateOperation.value?.request.context.selectedSuggestionInfo) {\n\t\t\tthis._updateOperation.clear();\n\t\t}\n\t}\n\n\tpublic cancelUpdate(): void {\n\t\tthis._updateOperation.clear();\n\t}\n}\n\nclass UpdateRequest {\n\tconstructor(\n\t\tpublic readonly position: Position,\n\t\tpublic readonly context: InlineCompletionContextWithoutUuid,\n\t\tpublic readonly versionId: number,\n\t\tpublic readonly providers: Set<InlineCompletionsProvider>,\n\t) {\n\t}\n\n\tpublic satisfies(other: UpdateRequest): boolean {\n\t\treturn this.position.equals(other.position)\n\t\t\t&& equalsIfDefined(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, itemEquals())\n\t\t\t&& (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n\t\t\t\t|| this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n\t\t\t&& this.versionId === other.versionId\n\t\t\t&& isSubset(other.providers, this.providers);\n\t}\n}\n\nfunction isSubset<T>(set1: Set<T>, set2: Set<T>): boolean {\n\treturn [...set1].every(item => set2.has(item));\n}\n\nclass UpdateOperation implements IDisposable {\n\tconstructor(\n\t\tpublic readonly request: UpdateRequest,\n\t\tpublic readonly cancellationTokenSource: CancellationTokenSource,\n\t\tpublic readonly promise: Promise<boolean>,\n\t) {\n\t}\n\n\tdispose() {\n\t\tthis.cancellationTokenSource.cancel();\n\t}\n}\n\nclass InlineCompletionsState extends Disposable {\n\tpublic static createEmpty(): InlineCompletionsState {\n\t\treturn new InlineCompletionsState([], undefined);\n\t}\n\n\tconstructor(\n\t\tpublic readonly inlineCompletions: readonly InlineSuggestionItem[],\n\t\tpublic readonly request: UpdateRequest | undefined,\n\t) {\n\t\tfor (const inlineCompletion of inlineCompletions) {\n\t\t\tinlineCompletion.addRef();\n\t\t}\n\n\t\tsuper();\n\n\t\tthis._register({\n\t\t\tdispose: () => {\n\t\t\t\tfor (const inlineCompletion of this.inlineCompletions) {\n\t\t\t\t\tinlineCompletion.removeRef();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _findById(id: InlineSuggestionIdentity): InlineSuggestionItem | undefined {\n\t\treturn this.inlineCompletions.find(i => i.identity === id);\n\t}\n\n\tprivate _findByHash(hash: string): InlineSuggestionItem | undefined {\n\t\treturn this.inlineCompletions.find(i => i.hash === hash);\n\t}\n\n\t/**\n\t * Applies the edit on the state.\n\t*/\n\tpublic createStateWithAppliedEdit(edit: StringEdit, textModel: ITextModel): InlineCompletionsState {\n\t\tconst newInlineCompletions = this.inlineCompletions.map(i => i.withEdit(edit, textModel)).filter(isDefined);\n\t\treturn new InlineCompletionsState(newInlineCompletions, this.request);\n\t}\n\n\tpublic createStateWithAppliedResults(updatedSuggestions: InlineSuggestionItem[], request: UpdateRequest, textModel: ITextModel, cursorPosition: Position, itemIdToPreserveAtTop: InlineSuggestionIdentity | undefined): InlineCompletionsState {\n\t\tlet itemToPreserve: InlineSuggestionItem | undefined = undefined;\n\t\tif (itemIdToPreserveAtTop) {\n\t\t\tconst itemToPreserveCandidate = this._findById(itemIdToPreserveAtTop);\n\t\t\tif (itemToPreserveCandidate && itemToPreserveCandidate.canBeReused(textModel, request.position)) {\n\t\t\t\titemToPreserve = itemToPreserveCandidate;\n\n\t\t\t\tconst updatedItemToPreserve = updatedSuggestions.find(i => i.hash === itemToPreserveCandidate.hash);\n\t\t\t\tif (updatedItemToPreserve) {\n\t\t\t\t\tupdatedSuggestions = moveToFront(updatedItemToPreserve, updatedSuggestions);\n\t\t\t\t} else {\n\t\t\t\t\tupdatedSuggestions = [itemToPreserveCandidate, ...updatedSuggestions];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst preferInlineCompletions = itemToPreserve\n\t\t\t// itemToPreserve has precedence\n\t\t\t? !itemToPreserve.isInlineEdit\n\t\t\t// Otherwise: prefer inline completion if there is a visible one\n\t\t\t: updatedSuggestions.some(i => !i.isInlineEdit && i.isVisible(textModel, cursorPosition));\n\n\t\tlet updatedItems: InlineSuggestionItem[] = [];\n\t\tfor (const i of updatedSuggestions) {\n\t\t\tconst oldItem = this._findByHash(i.hash);\n\t\t\tlet item;\n\t\t\tif (oldItem && oldItem !== i) {\n\t\t\t\titem = i.withIdentity(oldItem.identity);\n\t\t\t\ti.setIsPreceeded(oldItem);\n\t\t\t\toldItem.setEndOfLifeReason({ kind: InlineCompletionEndOfLifeReasonKind.Ignored, userTypingDisagreed: false, supersededBy: i.getSourceCompletion() });\n\t\t\t} else {\n\t\t\t\titem = i;\n\t\t\t}\n\t\t\tif (preferInlineCompletions !== item.isInlineEdit) {\n\t\t\t\tupdatedItems.push(item);\n\t\t\t}\n\t\t}\n\n\t\tupdatedItems.sort(compareBy(i => i.showInlineEditMenu, booleanComparator));\n\t\tupdatedItems = distinctByKey(updatedItems, i => i.semanticId);\n\n\t\treturn new InlineCompletionsState(updatedItems, request);\n\t}\n\n\tpublic clone(): InlineCompletionsState {\n\t\treturn new InlineCompletionsState(this.inlineCompletions, this.request);\n\t}\n}\n\n/** Keeps the first item in case of duplicates. */\nfunction distinctByKey<T>(items: T[], key: (item: T) => unknown): T[] {\n\tconst seen = new Set();\n\treturn items.filter(item => {\n\t\tconst k = key(item);\n\t\tif (seen.has(k)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(k);\n\t\treturn true;\n\t});\n}\n\nfunction moveToFront<T>(item: T, items: T[]): T[] {\n\tconst index = items.indexOf(item);\n\tif (index > -1) {\n\t\treturn [item, ...items.slice(0, index), ...items.slice(index + 1)];\n\t}\n\treturn items;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,wBAAwB,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAChI,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AACvE,OAAO,EAAE,uBAAuB,EAAE,MAAM,4CAA4C,CAAC;AACrF,OAAO,EAAE,eAAe,EAAE,UAAU,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,EAAE,UAAU,EAAE,eAAe,EAAe,iBAAiB,EAAE,YAAY,EAAE,MAAM,yCAAyC,CAAC;;AACpI,OAAO,EAAE,OAAO,EAAoD,eAAe,EAAE,iBAAiB,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AACtK,iEAAiE;AACjE,OAAO,EAAE,yBAAyB,EAAE,MAAM,uEAAuE,CAAC;AAClH,OAAO,EAAE,SAAS,EAAE,MAAM,qCAAqC,CAAC;AAChE,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AACtG,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AACtG,OAAO,EAAE,WAAW,EAAE,MAAM,2CAA2C,CAAC;AACxE,OAAO,EAAE,qBAAqB,EAAE,MAAM,sEAAsE,CAAC;AAC7G,OAAO,EAAE,UAAU,EAAE,MAAM,6CAA6C,CAAC;AAEzE,OAAO,EAAE,mCAAmC,EAAE,2BAA2B,EAA6B,MAAM,iCAAiC,CAAC;AAC9I,OAAO,EAAE,6BAA6B,EAAE,MAAM,+DAA+D,CAAC;AAE9G,OAAO,EAAE,4BAA4B,EAAE,MAAM,iDAAiD,CAAC;AAG/F,OAAO,EAAE,wBAAwB,EAAkD,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AACpI,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,EAA4B,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AAC3F,OAAO,EAAgE,wBAAwB,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElJ,IAAM,uBAAuB,GAA7B,MAAM,uBAAwB,SAAQ,0LAAU;;;;;QACvC,IAAA,CAAA,UAAU,GAAG,CAAH,AAAI,CAAC;IAAA,CAAA;IAuC9B,YACkB,UAAsB,EACtB,UAAuF,EACvF,cAA2C,EAC3C,eAAsC,EACxB,6BAA6E,EAC/F,WAAyC,EAC/B,qBAA6D,EAC7D,qBAA6D,CAAA;QAEpF,KAAK,EAAE,CAAC;QATS,IAAA,CAAA,UAAU,GAAV,UAAU,CAAY;QACtB,IAAA,CAAA,UAAU,GAAV,UAAU,CAA6E;QACvF,IAAA,CAAA,cAAc,GAAd,cAAc,CAA6B;QAC3C,IAAA,CAAA,eAAe,GAAf,eAAe,CAAuB;QACP,IAAA,CAAA,6BAA6B,GAA7B,6BAA6B,CAA+B;QAC9E,IAAA,CAAA,WAAW,GAAX,WAAW,CAAa;QACd,IAAA,CAAA,qBAAqB,GAArB,qBAAqB,CAAuB;QAC5C,IAAA,CAAA,qBAAqB,GAArB,qBAAqB,CAAuB;QA7CpE,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,iMAAiB,EAAmB,CAAC,CAAC;QAM5E,IAAA,CAAA,MAAM,OAAG,6OAAyB,EAAC,IAAI,EAAE;YACzD,OAAO,EAAE,GAAG,CAAG,CAAC,AAAF;oBACb,iBAAiB,EAAE,sBAAsB,CAAC,WAAW,EAAE;oBACvD,8BAA8B,EAAE,sBAAsB,CAAC,WAAW,EAAE;iBACpE,CAAC;YACF,YAAY,EAAE,CAAC,MAAM,EAAE,EAAE;gBACxB,MAAM,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACnC,MAAM,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;YACjD,CAAC;YACD,aAAa,MAAE,mNAAiB,EAAC,GAAG,CAAG,CAAD,AAAE;oBAAE,SAAS,EAAE,IAAI,CAAC,UAAU;gBAAA,CAAE,CAAC,CAAC;YACxE,MAAM,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,EAAE;gBAC1C,MAAM,IAAI,GAAG,8MAAU,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,qOAA4B,EAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,8MAAU,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,qLAAS,CAAC,CAAC,CAAC;gBAE1J,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;oBACpB,OAAO,aAAa,CAAC;gBACtB,CAAC;gBACD,IAAI,CAAC;oBACJ,OAAO;wBACN,iBAAiB,EAAE,aAAa,CAAC,iBAAiB,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;wBACpG,8BAA8B,EAAE,aAAa,CAAC,8BAA8B,CAAC,0BAA0B,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC;qBAC9H,CAAC;gBACH,CAAC,QAAS,CAAC;oBACV,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;oBAC1C,aAAa,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;gBACxD,CAAC;YACF,CAAC;SACD,CAAC,CAAC;QAEa,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;QACpE,IAAA,CAAA,8BAA8B,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC;QAwB9F,IAAA,CAAA,+BAA+B,OAAG,yMAAO,EAAC,IAAI,GAAE,MAAM,CAAC,EAAE;YACxE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAC9B,OAAO,SAAS,CAAC,CAAC,kBAAkB;QACrC,CAAC,CAAC,CAAC;QAYc,IAAA,CAAA,aAAa,OAAG,iNAAe,EAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QA3BzD,IAAI,CAAC,eAAe,GAAG,yOAAqB,EAAC,+BAA+B,EAAE,KAAK,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5J,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,0OAAgB,CAAC,IAAI,EAGzG,EACF,yCAAyC,CACzC,CAAC,CAAC;QAEH,IAAI,CAAC,+BAA+B,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjF,CAAC;IAQO,IAAI,CAAC,KAEqJ,EAAA;QAEjK,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;YAChC,IAAI,CAAC,WAAW,CAAC,IAAI,KAAC,kPAAwB,EAAC,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC;QACD,IAAI,CAAC,sBAAsB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAIM,KAAK,CACX,SAAsC,EACtC,cAAkC,EAClC,OAA2C,EAC3C,sBAA4D,EAC5D,YAAqB,EACrB,4BAAkD,EAClD,WAAqC,EAAA;QAErC,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;QAC5C,MAAM,OAAO,GAAG,IAAI,aAAa,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,EAAE,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QAEzG,MAAM,MAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,8BAA8B,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;QAEzH,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;YAC7D,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5C,CAAC,MAAM,IAAI,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC;YAChD,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC;QAED,MAAM,aAAa,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAE9B,MAAM,MAAM,GAAG,IAAI,0MAAuB,EAAE,CAAC;QAE7C,MAAM,OAAO,GAAG,CAAC,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;YAChE,MAAM,KAAK,GAAG,IAAI,+LAAe,EAAE,CAAC;YACpC,IAAI,CAAC;gBACJ,MAAM,wBAAwB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC1E,MAAM,aAAa,OAAG,4LAAW,EAChC,SAAS,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,eAAe,CAAC,MACrC,qMAAwB,EAAC,6LAAgB,CAAC,CAC1C,IAAI,wBAAwB,CAAC;gBAE9B,4CAA4C;gBAC5C,MAAM,cAAc,GAAG,aAAa,IAAI,AAAC,YAAY,IAAI,OAAO,CAAC,WAAW,KAAK,6MAA2B,CAAC,SAAS,CAAC,CAAC;gBACxH,IAAI,cAAc,EAAE,CAAC;oBACpB,+BAA+B;oBAC/B,UAAM,mNAAI,EAAC,aAAa,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;gBACzC,CAAC;gBAED,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,OAAO,CAAC,SAAS,EAAE,CAAC;oBAC5H,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,SAAS,GAAG,yBAAuB,CAAC,UAAU,EAAE,CAAC;gBACvD,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;oBAC/E,IAAI,CAAC,IAAI,CAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,IAAI,EAAE,OAAO;wBACb,SAAS;wBACT,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG;wBAC7B,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;wBAC5C,OAAO,EAAE;4BAAE,WAAW,EAAE,OAAO,CAAC,WAAW;4BAAE,WAAW,EAAE,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;wBAAA,CAAE;wBAC7G,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;wBAChB,QAAQ,EAAE,cAAc;qBACxB,CAAC,CAAC;gBACJ,CAAC;gBAED,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC7B,MAAM,cAAc,OAAG,mQAAwB,EAAC,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,IAAI,CAAC,6BAA6B,CAAC,CAAC;gBAElK,+PAAgB,EAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAG,CAAD,aAAe,CAAC,gBAAgB,CAAC;wBAAE,IAAI,EAAE,mBAAmB;oBAAA,CAAE,CAAC,CAAC,CAAC;gBAErG,IAAI,eAAe,GAAG,KAAK,CAAC;gBAE5B,MAAM,WAAW,GAA2B,EAAE,CAAC;gBAC/C,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,cAAc,CAAC,KAAK,CAAE,CAAC;oBAC/C,IAAI,CAAC,IAAI,EAAE,CAAC;wBACX,SAAS;oBACV,CAAC;oBACD,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,KAAK,CAAC,GAAG,KAAC,4LAAY,EAAC,GAAG,CAAG,CAAD,GAAK,CAAC,SAAS,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;4BAAE,IAAI,EAAE,OAAO;wBAAA,CAAE,CAAC,CAAC,CAAC;4BAAE,IAAI,EAAE,UAAU;wBAAA,CAAE,CAAC,CAAC,CAAC,CAAC;oBAElI,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAE,CAAC;wBAC/C,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;4BACnF,SAAS;wBACV,CAAC;wBACD,IAAI,CAAC,OAAO,CAAC,wBAAwB,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;4BAC1F,SAAS;wBACV,CAAC;wBAED,MAAM,CAAC,GAAG,2PAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC7D,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBACpB,6CAA6C;wBAC7C,IAAI,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,CAAC,kBAAkB,IAAI,OAAO,CAAC,WAAW,KAAK,6MAA2B,CAAC,SAAS,EAAE,CAAC;4BAC/G,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;gCAC9D,eAAe,GAAG,IAAI,CAAC;4BACxB,CAAC;wBACF,CAAC;oBACF,CAAC;oBAED,IAAI,eAAe,EAAE,CAAC;wBACrB,MAAM;oBACP,CAAC;gBACF,CAAC;gBAED,cAAc,CAAC,gBAAgB,CAAC;oBAAE,IAAI,EAAE,UAAU;gBAAA,CAAE,CAAC,CAAC;gBAEtD,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;oBAC/E,MAAM,qBAAqB,GAAG,cAAc,CAAC,qBAAqB,CAAC;oBACnE,IAAI,KAAK,GAAuB,SAAS,CAAC;oBAC1C,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,OAAO,CAAC,SAAS,EAAE,CAAC;wBAC5H,KAAK,GAAG,UAAU,CAAC;oBACpB,CAAC;oBACD,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE;4BACpC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE;4BAC7B,IAAI,EAAE,CAAC,CAAC,UAAU;4BAClB,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY;4BAC9B,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO;yBACjC,CAAC,CAAC,CAAC;oBACJ,IAAI,CAAC,IAAI,CAAC;wBAAE,QAAQ,EAAE,yBAAyB;wBAAE,IAAI,EAAE,KAAK;wBAAE,SAAS;wBAAE,UAAU,EAAE,AAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;wBAAE,KAAK;wBAAE,MAAM;wBAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE;wBAAE,qBAAqB;oBAAA,CAAE,CAAC,CAAC;gBACpL,CAAC;gBAED,MAAM,mBAAmB,GAAG,OAAO,CAAC,qBAAqB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACvE,IAAI,mBAAmB,GAAG,CAAC,EAAE,CAAC;oBAC7B,UAAM,mNAAI,EAAC,mBAAmB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC/C,CAAC;gBAED,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAuB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,KAAK,OAAO,CAAC,SAAS,IACtH,4BAA4B,CAAC,GAAG,EAAE,CAAE,CAA0F,CAAC,sFAAH;oBAC/H,OAAO,KAAK,CAAC;gBACd,CAAC;gBAED,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC3B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;gBAErF,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,CAAC;gBAClD,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;oBAC9B,6MAAW,GAAC,EAAE,CAAC,EAAE;oBAChB,yDAAA,EAA2D,CAC3D,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBAE5B,IAAI,OAAO,CAAC,sBAAsB,EAAE,CAAC;wBACpC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;4BACf,iBAAiB,EAAE,sBAAsB,CAAC,WAAW,EAAE;4BACvD,8BAA8B,EAAE,CAAC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE,sBAAsB,CAAC;yBAC7K,EAAE,EAAE,CAAC,CAAC;oBACR,CAAC,MAAM,CAAC;wBACP,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;4BACf,iBAAiB,EAAE,CAAC,CAAC,iBAAiB,CAAC,6BAA6B,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE,sBAAsB,CAAC;4BACnJ,8BAA8B,EAAE,sBAAsB,CAAC,WAAW,EAAE;yBACpE,EAAE,EAAE,CAAC,CAAC;oBACR,CAAC;oBAED,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;oBAC9B,CAAC,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;gBAC5C,CAAC,CAAC,CAAC;YACJ,CAAC,QAAS,CAAC;gBACV,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC;gBAChE,KAAK,CAAC,OAAO,EAAE,CAAC;YACjB,CAAC;YAED,OAAO,IAAI,CAAC;QACb,CAAC,CAAC,EAAE,CAAC;QAEL,MAAM,eAAe,GAAG,IAAI,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QACtE,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,eAAe,CAAC;QAE9C,OAAO,OAAO,CAAC;IAChB,CAAC;IAEM,KAAK,CAAC,EAAgB,EAAA;QAC5B,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACf,iBAAiB,EAAE,sBAAsB,CAAC,WAAW,EAAE;YACvD,8BAA8B,EAAE,sBAAsB,CAAC,WAAW,EAAE;SACpE,EAAE,EAAE,CAAC,CAAC;QACP,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QAC9B,CAAC,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;IAC5C,CAAC;IAEM,sCAAsC,GAAA;QAC5C,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;QACvD,MAAM,8BAA8B,GAAG,IAAI,CAAC,8BAA8B,CAAC,GAAG,EAAE,CAAC;QACjF,IAAI,CAAC,8BAA8B,EAAE,CAAC;YACrC,OAAO;QACR,CAAC;YACD,6MAAW,GAAC,EAAE,CAAC,EAAE;YAChB,wFAAA,EAA0F,CAC1F,IAAI,CAAC,iBAAiB,IAAI,CAAC,8BAA8B,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;gBACpI,iBAAiB,EAAE,OAAO,EAAE,CAAC;gBAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAC5B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACf,iBAAiB,EAAE,8BAA8B,CAAC,KAAK,EAAE;oBACzD,8BAA8B,EAAE,sBAAsB,CAAC,WAAW,EAAE;iBACpE,EAAE,EAAE,CAAC,CAAC;gBACP,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBAC9B,CAAC,CAAC,8BAA8B,CAAC,OAAO,EAAE,CAAC;YAC5C,CAAC;YACD,IAAI,CAAC,mCAAmC,CAAC,EAAE,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACJ,CAAC;IAEM,mCAAmC,CAAC,EAAgB,EAAA;QAC1D,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;YACzE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC/B,CAAC;IACF,CAAC;IAEM,YAAY,GAAA;QAClB,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;;AA5RW,uBAAuB,GAAA,4BAAA,WAAA;IA6CjC,QAAA,GAAA,gPAA6B,CAAA;IAC7B,QAAA,GAAA,gMAAW,CAAA;IACX,QAAA,GAAA,8NAAqB,CAAA;IACrB,QAAA,GAAA,8NAAqB,CAAA;GAhDX,uBAAuB,CA6RnC;;AAED,MAAM,aAAa;IAClB,YACiB,QAAkB,EAClB,OAA2C,EAC3C,SAAiB,EACjB,SAAyC,CAAA;QAHzC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAU;QAClB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAoC;QAC3C,IAAA,CAAA,SAAS,GAAT,SAAS,CAAQ;QACjB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAgC;IAE1D,CAAC;IAEM,SAAS,CAAC,KAAoB,EAAA;QACpC,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,QACvC,4LAAe,EAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,KAAK,CAAC,OAAO,CAAC,sBAAsB,MAAE,uLAAU,EAAE,CAAC,KACxG,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,KAAK,6MAA2B,CAAC,SAAS,IACnE,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,6MAA2B,CAAC,QAAQ,CAAC,IACnE,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,IAClC,QAAQ,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;CACD;AAED,SAAS,QAAQ,CAAI,IAAY,EAAE,IAAY;IAC9C,OAAO,CAAC;WAAG,IAAI;KAAC,CAAC,KAAK,EAAC,IAAI,CAAC,EAAE,AAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAChD,CAAC;AAED,MAAM,eAAe;IACpB,YACiB,OAAsB,EACtB,uBAAgD,EAChD,OAAyB,CAAA;QAFzB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAe;QACtB,IAAA,CAAA,uBAAuB,GAAvB,uBAAuB,CAAyB;QAChD,IAAA,CAAA,OAAO,GAAP,OAAO,CAAkB;IAE1C,CAAC;IAED,OAAO,GAAA;QACN,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,CAAC;IACvC,CAAC;CACD;AAED,MAAM,sBAAuB,SAAQ,0LAAU;IACvC,MAAM,CAAC,WAAW,GAAA;QACxB,OAAO,IAAI,sBAAsB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAClD,CAAC;IAED,YACiB,iBAAkD,EAClD,OAAkC,CAAA;QAElD,KAAK,MAAM,gBAAgB,IAAI,iBAAiB,CAAE,CAAC;YAClD,gBAAgB,CAAC,MAAM,EAAE,CAAC;QAC3B,CAAC;QAED,KAAK,EAAE,CAAC;QAPQ,IAAA,CAAA,iBAAiB,GAAjB,iBAAiB,CAAiC;QAClD,IAAA,CAAA,OAAO,GAAP,OAAO,CAA2B;QAQlD,IAAI,CAAC,SAAS,CAAC;YACd,OAAO,EAAE,GAAG,EAAE;gBACb,KAAK,MAAM,gBAAgB,IAAI,IAAI,CAAC,iBAAiB,CAAE,CAAC;oBACvD,gBAAgB,CAAC,SAAS,EAAE,CAAC;gBAC9B,CAAC;YACF,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;IAEO,SAAS,CAAC,EAA4B,EAAA;QAC7C,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;IAC5D,CAAC;IAEO,WAAW,CAAC,IAAY,EAAA;QAC/B,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAC1D,CAAC;IAED;;MAEE,CACK,0BAA0B,CAAC,IAAgB,EAAE,SAAqB,EAAA;QACxE,MAAM,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,qLAAS,CAAC,CAAC;QAC5G,OAAO,IAAI,sBAAsB,CAAC,oBAAoB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACvE,CAAC;IAEM,6BAA6B,CAAC,kBAA0C,EAAE,OAAsB,EAAE,SAAqB,EAAE,cAAwB,EAAE,qBAA2D,EAAA;QACpN,IAAI,cAAc,GAAqC,SAAS,CAAC;QACjE,IAAI,qBAAqB,EAAE,CAAC;YAC3B,MAAM,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YACtE,IAAI,uBAAuB,IAAI,uBAAuB,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACjG,cAAc,GAAG,uBAAuB,CAAC;gBAEzC,MAAM,qBAAqB,GAAG,kBAAkB,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,KAAK,uBAAuB,CAAC,IAAI,CAAC,CAAC;gBACpG,IAAI,qBAAqB,EAAE,CAAC;oBAC3B,kBAAkB,GAAG,WAAW,CAAC,qBAAqB,EAAE,kBAAkB,CAAC,CAAC;gBAC7E,CAAC,MAAM,CAAC;oBACP,kBAAkB,GAAG;wBAAC,uBAAuB,EAAE;2BAAG,kBAAkB;qBAAC,CAAC;gBACvE,CAAC;YACF,CAAC;QACF,CAAC;QAED,MAAM,uBAAuB,GAAG,cAAc,GAE3C,CAAC,cAAc,CAAC,YAAY,GAE5B,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC;QAE3F,IAAI,YAAY,GAA2B,EAAE,CAAC;QAC9C,KAAK,MAAM,CAAC,IAAI,kBAAkB,CAAE,CAAC;YACpC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC;YACT,IAAI,OAAO,IAAI,OAAO,KAAK,CAAC,EAAE,CAAC;gBAC9B,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACxC,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;gBAC1B,OAAO,CAAC,kBAAkB,CAAC;oBAAE,IAAI,EAAE,qNAAmC,CAAC,OAAO;oBAAE,mBAAmB,EAAE,KAAK;oBAAE,YAAY,EAAE,CAAC,CAAC,mBAAmB,EAAE;gBAAA,CAAE,CAAC,CAAC;YACtJ,CAAC,MAAM,CAAC;gBACP,IAAI,GAAG,CAAC,CAAC;YACV,CAAC;YACD,IAAI,uBAAuB,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC;gBACnD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,CAAC;QACF,CAAC;QAED,YAAY,CAAC,IAAI,KAAC,sLAAS,GAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,kBAAkB,EAAE,8LAAiB,CAAC,CAAC,CAAC;QAC3E,YAAY,GAAG,aAAa,CAAC,YAAY,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QAE9D,OAAO,IAAI,sBAAsB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,GAAA;QACX,OAAO,IAAI,sBAAsB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACzE,CAAC;CACD;AAED,gDAAA,EAAkD,CAClD,SAAS,aAAa,CAAI,KAAU,EAAE,GAAyB;IAC9D,MAAM,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;IACvB,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC1B,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACjB,OAAO,KAAK,CAAC;QACd,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACZ,OAAO,IAAI,CAAC;IACb,CAAC,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAI,IAAO,EAAE,KAAU;IAC1C,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAClC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;QAChB,OAAO;YAAC,IAAI,EAAE;eAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;eAAG,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;SAAC,CAAC;IACpE,CAAC;IACD,OAAO,KAAK,CAAC;AACd,CAAC","debugId":null}},
    {"offset": {"line": 2716, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/inlineEdit.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/inlineEdit.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/inlineEdit.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { InlineCompletionCommand } from '../../../../common/languages.js';\nimport { InlineSuggestionItem } from './inlineSuggestionItem.js';\n\nexport class InlineEdit {\n\tconstructor(\n\t\tpublic readonly edit: TextReplacement,\n\t\tpublic readonly commands: readonly InlineCompletionCommand[],\n\t\tpublic readonly inlineCompletion: InlineSuggestionItem,\n\t) { }\n\n\tpublic equals(other: InlineEdit): boolean {\n\t\treturn this.edit.equals(other.edit)\n\t\t\t&& this.inlineCompletion === other.inlineCompletion;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { InlineCompletionCommand } from '../../../../common/languages.js';\nimport { InlineSuggestionItem } from './inlineSuggestionItem.js';\n\nexport class InlineEdit {\n\tconstructor(\n\t\tpublic readonly edit: TextReplacement,\n\t\tpublic readonly commands: readonly InlineCompletionCommand[],\n\t\tpublic readonly inlineCompletion: InlineSuggestionItem,\n\t) { }\n\n\tpublic equals(other: InlineEdit): boolean {\n\t\treturn this.edit.equals(other.edit)\n\t\t\t&& this.inlineCompletion === other.inlineCompletion;\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAM1F,MAAO,UAAU;IACtB,YACiB,IAAqB,EACrB,QAA4C,EAC5C,gBAAsC,CAAA;QAFtC,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAiB;QACrB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAoC;QAC5C,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB,CAAsB;IACnD,CAAC;IAEE,MAAM,CAAC,KAAiB,EAAA;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAC/B,IAAI,CAAC,gBAAgB,KAAK,KAAK,CAAC,gBAAgB,CAAC;IACtD,CAAC;CACD","debugId":null}},
    {"offset": {"line": 2737, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/typingSpeed.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/typingSpeed.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/typingSpeed.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sum } from '../../../../../base/common/arrays.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { IModelContentChangedEvent } from '../../../../common/textModelEvents.js';\n\ninterface TypingSession {\n\tstartTime: number;\n\tendTime: number;\n\tcharacterCount: number; // Effective character count for typing interval calculation\n}\n\ninterface TypingIntervalResult {\n\taverageInterval: number; // Average milliseconds between keystrokes\n\tcharacterCount: number; // Number of characters involved in the computation\n}\n\n/**\n * Tracks typing speed as average milliseconds between keystrokes.\n * Higher values indicate slower typing.\n */\nexport class TypingInterval extends Disposable {\n\n\tprivate readonly _typingSessions: TypingSession[] = [];\n\tprivate _currentSession: TypingSession | null = null;\n\tprivate _lastChangeTime = 0;\n\tprivate _cachedTypingIntervalResult: TypingIntervalResult | null = null;\n\tprivate _cacheInvalidated = true;\n\n\t// Configuration constants\n\tprivate static readonly MAX_SESSION_GAP_MS = 3_000; // 3 seconds max gap between keystrokes in a session\n\tprivate static readonly MIN_SESSION_DURATION_MS = 1_000; // Minimum session duration to consider\n\tprivate static readonly SESSION_HISTORY_LIMIT = 50; // Keep last 50 sessions for calculation\n\tprivate static readonly TYPING_SPEED_WINDOW_MS = 300_000; // 5 minutes window for speed calculation\n\tprivate static readonly MIN_CHARS_FOR_RELIABLE_SPEED = 20; // Minimum characters needed for reliable speed calculation\n\n\t/**\n\t * Gets the current typing interval as average milliseconds between keystrokes\n\t * and the number of characters involved in the computation.\n\t * Higher interval values indicate slower typing.\n\t * Returns { interval: 0, characterCount: 0 } if no typing data is available.\n\t */\n\tpublic getTypingInterval(): TypingIntervalResult {\n\t\tif (this._cacheInvalidated || this._cachedTypingIntervalResult === null) {\n\t\t\tthis._cachedTypingIntervalResult = this._calculateTypingInterval();\n\t\t\tthis._cacheInvalidated = false;\n\t\t}\n\t\treturn this._cachedTypingIntervalResult;\n\t}\n\n\tconstructor(private readonly _textModel: ITextModel) {\n\t\tsuper();\n\n\t\tthis._register(this._textModel.onDidChangeContent(e => this._updateTypingSpeed(e)));\n\t}\n\n\tprivate _updateTypingSpeed(change: IModelContentChangedEvent): void {\n\t\tconst now = Date.now();\n\n\t\tif (!this._isUserTyping(change)) {\n\t\t\tthis._finalizeCurrentSession();\n\t\t\treturn;\n\t\t}\n\n\t\t// If too much time has passed since last change, start a new session\n\t\tif (this._currentSession && (now - this._lastChangeTime) > TypingInterval.MAX_SESSION_GAP_MS) {\n\t\t\tthis._finalizeCurrentSession();\n\t\t}\n\n\t\t// Start new session if none exists\n\t\tif (!this._currentSession) {\n\t\t\tthis._currentSession = {\n\t\t\t\tstartTime: now,\n\t\t\t\tendTime: now,\n\t\t\t\tcharacterCount: 0\n\t\t\t};\n\t\t}\n\n\t\t// Update current session\n\t\tthis._currentSession.endTime = now;\n\t\tthis._currentSession.characterCount += this._getActualCharacterCount(change);\n\n\t\tthis._lastChangeTime = now;\n\t\tthis._cacheInvalidated = true;\n\t}\n\n\tprivate _getActualCharacterCount(change: IModelContentChangedEvent): number {\n\t\tlet totalChars = 0;\n\t\tfor (const c of change.changes) {\n\t\t\t// Count characters added or removed (use the larger of the two)\n\t\t\ttotalChars += Math.max(c.text.length, c.rangeLength);\n\t\t}\n\t\treturn totalChars;\n\t}\n\n\tprivate _isUserTyping(change: IModelContentChangedEvent): boolean {\n\t\t// If no detailed reasons, assume user typing\n\t\tif (!change.detailedReasons || change.detailedReasons.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if any of the reasons indicate actual user typing\n\t\tfor (const reason of change.detailedReasons) {\n\t\t\tif (this._isUserTypingReason(reason)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _isUserTypingReason(reason: any): boolean {\n\t\t// Handle undo/redo - not considered user typing\n\t\tif (reason.metadata.isUndoing || reason.metadata.isRedoing) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Handle different source types\n\t\tswitch (reason.metadata.source) {\n\t\t\tcase 'cursor': {\n\t\t\t\t// Direct user input via cursor\n\t\t\t\tconst kind = reason.metadata.kind;\n\t\t\t\treturn kind === 'type' || kind === 'compositionType' || kind === 'compositionEnd';\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\t// All other sources (paste, suggestions, code actions, etc.) are not user typing\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _finalizeCurrentSession(): void {\n\t\tif (!this._currentSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessionDuration = this._currentSession.endTime - this._currentSession.startTime;\n\n\t\t// Only keep sessions that meet minimum duration and have actual content\n\t\tif (sessionDuration >= TypingInterval.MIN_SESSION_DURATION_MS && this._currentSession.characterCount > 0) {\n\t\t\tthis._typingSessions.push(this._currentSession);\n\n\t\t\t// Limit session history\n\t\t\tif (this._typingSessions.length > TypingInterval.SESSION_HISTORY_LIMIT) {\n\t\t\t\tthis._typingSessions.shift();\n\t\t\t}\n\t\t}\n\n\t\tthis._currentSession = null;\n\t}\n\n\tprivate _calculateTypingInterval(): TypingIntervalResult {\n\t\t// Finalize current session for calculation\n\t\tif (this._currentSession) {\n\t\t\tconst tempSession = { ...this._currentSession };\n\t\t\tconst sessionDuration = tempSession.endTime - tempSession.startTime;\n\t\t\tif (sessionDuration >= TypingInterval.MIN_SESSION_DURATION_MS && tempSession.characterCount > 0) {\n\t\t\t\tconst allSessions = [...this._typingSessions, tempSession];\n\t\t\t\treturn this._calculateSpeedFromSessions(allSessions);\n\t\t\t}\n\t\t}\n\n\t\treturn this._calculateSpeedFromSessions(this._typingSessions);\n\t}\n\n\tprivate _calculateSpeedFromSessions(sessions: TypingSession[]): TypingIntervalResult {\n\t\tif (sessions.length === 0) {\n\t\t\treturn { averageInterval: 0, characterCount: 0 };\n\t\t}\n\n\t\t// Sort sessions by recency (most recent first) to ensure we get the most recent sessions\n\t\tconst sortedSessions = [...sessions].sort((a, b) => b.endTime - a.endTime);\n\n\t\t// First, try the standard window\n\t\tconst cutoffTime = Date.now() - TypingInterval.TYPING_SPEED_WINDOW_MS;\n\t\tconst recentSessions = sortedSessions.filter(session => session.endTime > cutoffTime);\n\t\tconst olderSessions = sortedSessions.splice(recentSessions.length);\n\n\t\tlet totalChars = sum(recentSessions.map(session => session.characterCount));\n\n\t\t// If we don't have enough characters in the standard window, expand to include older sessions\n\t\tfor (let i = 0; i < olderSessions.length && totalChars < TypingInterval.MIN_CHARS_FOR_RELIABLE_SPEED; i++) {\n\t\t\trecentSessions.push(olderSessions[i]);\n\t\t\ttotalChars += olderSessions[i].characterCount;\n\t\t}\n\n\t\tconst totalTime = sum(recentSessions.map(session => session.endTime - session.startTime));\n\t\tif (totalTime === 0 || totalChars <= 1) {\n\t\t\treturn { averageInterval: 0, characterCount: totalChars };\n\t\t}\n\n\t\t// Calculate average milliseconds between keystrokes\n\t\tconst keystrokeIntervals = Math.max(1, totalChars - 1);\n\t\tconst avgMsBetweenKeystrokes = totalTime / keystrokeIntervals;\n\n\t\treturn {\n\t\t\taverageInterval: Math.round(avgMsBetweenKeystrokes),\n\t\t\tcharacterCount: totalChars\n\t\t};\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._finalizeCurrentSession();\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { sum } from '../../../../../base/common/arrays.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { IModelContentChangedEvent } from '../../../../common/textModelEvents.js';\n\ninterface TypingSession {\n\tstartTime: number;\n\tendTime: number;\n\tcharacterCount: number; // Effective character count for typing interval calculation\n}\n\ninterface TypingIntervalResult {\n\taverageInterval: number; // Average milliseconds between keystrokes\n\tcharacterCount: number; // Number of characters involved in the computation\n}\n\n/**\n * Tracks typing speed as average milliseconds between keystrokes.\n * Higher values indicate slower typing.\n */\nexport class TypingInterval extends Disposable {\n\n\tprivate readonly _typingSessions: TypingSession[] = [];\n\tprivate _currentSession: TypingSession | null = null;\n\tprivate _lastChangeTime = 0;\n\tprivate _cachedTypingIntervalResult: TypingIntervalResult | null = null;\n\tprivate _cacheInvalidated = true;\n\n\t// Configuration constants\n\tprivate static readonly MAX_SESSION_GAP_MS = 3_000; // 3 seconds max gap between keystrokes in a session\n\tprivate static readonly MIN_SESSION_DURATION_MS = 1_000; // Minimum session duration to consider\n\tprivate static readonly SESSION_HISTORY_LIMIT = 50; // Keep last 50 sessions for calculation\n\tprivate static readonly TYPING_SPEED_WINDOW_MS = 300_000; // 5 minutes window for speed calculation\n\tprivate static readonly MIN_CHARS_FOR_RELIABLE_SPEED = 20; // Minimum characters needed for reliable speed calculation\n\n\t/**\n\t * Gets the current typing interval as average milliseconds between keystrokes\n\t * and the number of characters involved in the computation.\n\t * Higher interval values indicate slower typing.\n\t * Returns { interval: 0, characterCount: 0 } if no typing data is available.\n\t */\n\tpublic getTypingInterval(): TypingIntervalResult {\n\t\tif (this._cacheInvalidated || this._cachedTypingIntervalResult === null) {\n\t\t\tthis._cachedTypingIntervalResult = this._calculateTypingInterval();\n\t\t\tthis._cacheInvalidated = false;\n\t\t}\n\t\treturn this._cachedTypingIntervalResult;\n\t}\n\n\tconstructor(private readonly _textModel: ITextModel) {\n\t\tsuper();\n\n\t\tthis._register(this._textModel.onDidChangeContent(e => this._updateTypingSpeed(e)));\n\t}\n\n\tprivate _updateTypingSpeed(change: IModelContentChangedEvent): void {\n\t\tconst now = Date.now();\n\n\t\tif (!this._isUserTyping(change)) {\n\t\t\tthis._finalizeCurrentSession();\n\t\t\treturn;\n\t\t}\n\n\t\t// If too much time has passed since last change, start a new session\n\t\tif (this._currentSession && (now - this._lastChangeTime) > TypingInterval.MAX_SESSION_GAP_MS) {\n\t\t\tthis._finalizeCurrentSession();\n\t\t}\n\n\t\t// Start new session if none exists\n\t\tif (!this._currentSession) {\n\t\t\tthis._currentSession = {\n\t\t\t\tstartTime: now,\n\t\t\t\tendTime: now,\n\t\t\t\tcharacterCount: 0\n\t\t\t};\n\t\t}\n\n\t\t// Update current session\n\t\tthis._currentSession.endTime = now;\n\t\tthis._currentSession.characterCount += this._getActualCharacterCount(change);\n\n\t\tthis._lastChangeTime = now;\n\t\tthis._cacheInvalidated = true;\n\t}\n\n\tprivate _getActualCharacterCount(change: IModelContentChangedEvent): number {\n\t\tlet totalChars = 0;\n\t\tfor (const c of change.changes) {\n\t\t\t// Count characters added or removed (use the larger of the two)\n\t\t\ttotalChars += Math.max(c.text.length, c.rangeLength);\n\t\t}\n\t\treturn totalChars;\n\t}\n\n\tprivate _isUserTyping(change: IModelContentChangedEvent): boolean {\n\t\t// If no detailed reasons, assume user typing\n\t\tif (!change.detailedReasons || change.detailedReasons.length === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check if any of the reasons indicate actual user typing\n\t\tfor (const reason of change.detailedReasons) {\n\t\t\tif (this._isUserTypingReason(reason)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _isUserTypingReason(reason: any): boolean {\n\t\t// Handle undo/redo - not considered user typing\n\t\tif (reason.metadata.isUndoing || reason.metadata.isRedoing) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Handle different source types\n\t\tswitch (reason.metadata.source) {\n\t\t\tcase 'cursor': {\n\t\t\t\t// Direct user input via cursor\n\t\t\t\tconst kind = reason.metadata.kind;\n\t\t\t\treturn kind === 'type' || kind === 'compositionType' || kind === 'compositionEnd';\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\t// All other sources (paste, suggestions, code actions, etc.) are not user typing\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _finalizeCurrentSession(): void {\n\t\tif (!this._currentSession) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst sessionDuration = this._currentSession.endTime - this._currentSession.startTime;\n\n\t\t// Only keep sessions that meet minimum duration and have actual content\n\t\tif (sessionDuration >= TypingInterval.MIN_SESSION_DURATION_MS && this._currentSession.characterCount > 0) {\n\t\t\tthis._typingSessions.push(this._currentSession);\n\n\t\t\t// Limit session history\n\t\t\tif (this._typingSessions.length > TypingInterval.SESSION_HISTORY_LIMIT) {\n\t\t\t\tthis._typingSessions.shift();\n\t\t\t}\n\t\t}\n\n\t\tthis._currentSession = null;\n\t}\n\n\tprivate _calculateTypingInterval(): TypingIntervalResult {\n\t\t// Finalize current session for calculation\n\t\tif (this._currentSession) {\n\t\t\tconst tempSession = { ...this._currentSession };\n\t\t\tconst sessionDuration = tempSession.endTime - tempSession.startTime;\n\t\t\tif (sessionDuration >= TypingInterval.MIN_SESSION_DURATION_MS && tempSession.characterCount > 0) {\n\t\t\t\tconst allSessions = [...this._typingSessions, tempSession];\n\t\t\t\treturn this._calculateSpeedFromSessions(allSessions);\n\t\t\t}\n\t\t}\n\n\t\treturn this._calculateSpeedFromSessions(this._typingSessions);\n\t}\n\n\tprivate _calculateSpeedFromSessions(sessions: TypingSession[]): TypingIntervalResult {\n\t\tif (sessions.length === 0) {\n\t\t\treturn { averageInterval: 0, characterCount: 0 };\n\t\t}\n\n\t\t// Sort sessions by recency (most recent first) to ensure we get the most recent sessions\n\t\tconst sortedSessions = [...sessions].sort((a, b) => b.endTime - a.endTime);\n\n\t\t// First, try the standard window\n\t\tconst cutoffTime = Date.now() - TypingInterval.TYPING_SPEED_WINDOW_MS;\n\t\tconst recentSessions = sortedSessions.filter(session => session.endTime > cutoffTime);\n\t\tconst olderSessions = sortedSessions.splice(recentSessions.length);\n\n\t\tlet totalChars = sum(recentSessions.map(session => session.characterCount));\n\n\t\t// If we don't have enough characters in the standard window, expand to include older sessions\n\t\tfor (let i = 0; i < olderSessions.length && totalChars < TypingInterval.MIN_CHARS_FOR_RELIABLE_SPEED; i++) {\n\t\t\trecentSessions.push(olderSessions[i]);\n\t\t\ttotalChars += olderSessions[i].characterCount;\n\t\t}\n\n\t\tconst totalTime = sum(recentSessions.map(session => session.endTime - session.startTime));\n\t\tif (totalTime === 0 || totalChars <= 1) {\n\t\t\treturn { averageInterval: 0, characterCount: totalChars };\n\t\t}\n\n\t\t// Calculate average milliseconds between keystrokes\n\t\tconst keystrokeIntervals = Math.max(1, totalChars - 1);\n\t\tconst avgMsBetweenKeystrokes = totalTime / keystrokeIntervals;\n\n\t\treturn {\n\t\t\taverageInterval: Math.round(avgMsBetweenKeystrokes),\n\t\t\tcharacterCount: totalChars\n\t\t};\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._finalizeCurrentSession();\n\t\tsuper.dispose();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2927, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsModel.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsModel.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/inlineCompletionsModel.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mapFindFirst } from '../../../../../base/common/arraysFind.js';\nimport { itemsEquals } from '../../../../../base/common/equals.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../../base/common/errors.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, IObservableWithChange, IReader, ITransaction, autorun, constObservable, derived, derivedHandleChanges, derivedOpts, mapObservableArrayCached, observableFromEvent, observableSignal, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../../base/common/strings.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../../../common/core/cursorColumns.js';\nimport { LineRange } from '../../../../common/core/ranges/lineRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { TextReplacement, TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { TextLength } from '../../../../common/core/text/textLength.js';\nimport { ScrollType } from '../../../../common/editorCommon.js';\nimport { InlineCompletionEndOfLifeReasonKind, InlineCompletion, InlineCompletionTriggerKind, PartialAcceptTriggerKind, InlineCompletionsProvider, InlineCompletionCommand, InlineCompletions } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { EndOfLinePreference, IModelDeltaDecoration, ITextModel } from '../../../../common/model.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { IFeatureDebounceInformation } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { IModelContentChangedEvent } from '../../../../common/textModelEvents.js';\nimport { SnippetController2 } from '../../../snippet/browser/snippetController2.js';\nimport { getEndPositionsAfterApplying, removeTextReplacementCommonSuffixPrefix } from '../utils.js';\nimport { AnimatedValue, easeOutCubic, ObservableAnimatedValue } from './animation.js';\nimport { computeGhostText } from './computeGhostText.js';\nimport { GhostText, GhostTextOrReplacement, ghostTextOrReplacementEquals, ghostTextsOrReplacementsEqual } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { InlineEdit } from './inlineEdit.js';\nimport { InlineCompletionItem, InlineEditItem, InlineSuggestionItem } from './inlineSuggestionItem.js';\nimport { InlineCompletionContextWithoutUuid, InlineCompletionEditorType, InlineSuggestRequestInfo } from './provideInlineCompletions.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { SuggestItemInfo } from './suggestWidgetAdapter.js';\nimport { TextModelEditSource, EditSources } from '../../../../common/textModelEditSource.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from '../view/inlineEdits/inlineEditsViewInterface.js';\nimport { IInlineCompletionsService } from '../../../../browser/services/inlineCompletionsService.js';\nimport { TypingInterval } from './typingSpeed.js';\nimport { StringReplacement } from '../../../../common/core/edits/stringEdit.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { URI } from '../../../../../base/common/uri.js';\n\nexport class InlineCompletionsModel extends Disposable {\n\tprivate readonly _source;\n\tprivate readonly _isActive = observableValue<boolean>(this, false);\n\tprivate readonly _onlyRequestInlineEditsSignal = observableSignal(this);\n\tprivate readonly _forceUpdateExplicitlySignal = observableSignal(this);\n\tprivate readonly _noDelaySignal = observableSignal(this);\n\n\tprivate readonly _fetchSpecificProviderSignal = observableSignal<InlineCompletionsProvider | undefined>(this);\n\n\t// We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n\tprivate readonly _selectedInlineCompletionId = observableValue<string | undefined>(this, undefined);\n\tpublic readonly primaryPosition = derived(this, reader => this._positions.read(reader)[0] ?? new Position(1, 1));\n\n\tprivate _isAcceptingPartially = false;\n\tprivate readonly _appearedInsideViewport = derived<boolean>(this, reader => {\n\t\tconst state = this.state.read(reader);\n\t\tif (!state || !state.inlineCompletion) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst targetRange = state.inlineCompletion.targetRange;\n\t\tconst visibleRanges = this._editorObs.editor.getVisibleRanges();\n\t\tif (visibleRanges.length < 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewportRange = new Range(visibleRanges[0].startLineNumber, visibleRanges[0].startColumn, visibleRanges[visibleRanges.length - 1].endLineNumber, visibleRanges[visibleRanges.length - 1].endColumn);\n\t\treturn viewportRange.containsRange(targetRange);\n\t});\n\tpublic get isAcceptingPartially() { return this._isAcceptingPartially; }\n\n\tprivate readonly _onDidAccept = new Emitter<void>();\n\tpublic readonly onDidAccept = this._onDidAccept.event;\n\n\tprivate readonly _editorObs;\n\n\tprivate readonly _typing: TypingInterval;\n\n\tprivate readonly _suggestPreviewEnabled;\n\tprivate readonly _suggestPreviewMode;\n\tprivate readonly _inlineSuggestMode;\n\tprivate readonly _suppressedInlineCompletionGroupIds;\n\tprivate readonly _inlineEditsEnabled;\n\tprivate readonly _inlineEditsShowCollapsedEnabled;\n\tprivate readonly _triggerCommandOnProviderChange;\n\tprivate readonly _minShowDelay;\n\tprivate readonly _showOnSuggestConflict;\n\n\tconstructor(\n\t\tpublic readonly textModel: ITextModel,\n\t\tprivate readonly _selectedSuggestItem: IObservable<SuggestItemInfo | undefined>,\n\t\tpublic readonly _textModelVersionId: IObservableWithChange<number | null, IModelContentChangedEvent | undefined>,\n\t\tprivate readonly _positions: IObservable<readonly Position[]>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\tprivate readonly _enabled: IObservable<boolean>,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IInlineCompletionsService private readonly _inlineCompletionsService: IInlineCompletionsService\n\t) {\n\t\tsuper();\n\t\tthis._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this._textModelVersionId, this._debounceValue, this.primaryPosition));\n\t\tthis.lastTriggerKind = this._source.inlineCompletions.map(this, v => v?.request?.context.triggerKind);\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst suggest = this._editorObs.getOption(EditorOption.suggest);\n\t\tthis._suggestPreviewEnabled = suggest.map(v => v.preview);\n\t\tthis._suggestPreviewMode = suggest.map(v => v.previewMode);\n\n\t\tconst inlineSuggest = this._editorObs.getOption(EditorOption.inlineSuggest);\n\t\tthis._inlineSuggestMode = inlineSuggest.map(v => v.mode);\n\t\tthis._suppressedInlineCompletionGroupIds = inlineSuggest.map(v => new Set(v.experimental.suppressInlineSuggestions.split(',')));\n\t\tthis._inlineEditsEnabled = inlineSuggest.map(v => !!v.edits.enabled);\n\t\tthis._inlineEditsShowCollapsedEnabled = inlineSuggest.map(s => s.edits.showCollapsed);\n\t\tthis._triggerCommandOnProviderChange = inlineSuggest.map(s => s.triggerCommandOnProviderChange);\n\t\tthis._minShowDelay = inlineSuggest.map(s => s.minShowDelay);\n\t\tthis._showOnSuggestConflict = inlineSuggest.map(s => s.experimental.showOnSuggestConflict);\n\n\t\tthis._typing = this._register(new TypingInterval(this.textModel));\n\n\t\tthis._register(this._inlineCompletionsService.onDidChangeIsSnoozing((isSnoozing) => {\n\t\t\tif (isSnoozing) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\t\t}));\n\n\t\t{ // Determine editor type\n\t\t\tconst isNotebook = this.textModel.uri.scheme === 'vscode-notebook-cell';\n\t\t\tconst [diffEditor] = this._codeEditorService.listDiffEditors()\n\t\t\t\t.filter(d =>\n\t\t\t\t\td.getOriginalEditor().getId() === this._editor.getId() ||\n\t\t\t\t\td.getModifiedEditor().getId() === this._editor.getId());\n\n\t\t\tthis.isInDiffEditor = !!diffEditor;\n\t\t\tthis.editorType = isNotebook ? InlineCompletionEditorType.Notebook\n\t\t\t\t: this.isInDiffEditor ? InlineCompletionEditorType.DiffEditor\n\t\t\t\t\t: InlineCompletionEditorType.TextEditor;\n\t\t}\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this.state, (s) => {\n\t\t\tif (s && s.inlineCompletion) {\n\t\t\t\tthis._inlineCompletionsService.reportNewCompletion(s.inlineCompletion.requestUuid);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletionsPromise));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._editorObs.versionId.read(reader);\n\t\t\tthis._inAcceptFlow.set(false, undefined);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst jumpToReset = this.state.map((s, reader) => !s || s.kind === 'inlineEdit' && !s.cursorAtInlineEdit.read(reader)).read(reader);\n\t\t\tif (jumpToReset) {\n\t\t\t\tthis._jumpedToId.set(undefined, undefined);\n\t\t\t}\n\t\t}));\n\n\t\tconst inlineEditSemanticId = this.inlineEditState.map(s => s?.inlineCompletion.semanticId);\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst id = inlineEditSemanticId.read(reader);\n\t\t\tif (id) {\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._lastShownInlineCompletionInfo = {\n\t\t\t\t\talternateTextModelVersionId: this.textModel.getAlternativeVersionId(),\n\t\t\t\t\tinlineCompletion: this.state.get()!.inlineCompletion!,\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\t// TODO: should use getAvailableProviders and update on _suppressedInlineCompletionGroupIds change\n\t\tconst inlineCompletionProviders = observableFromEvent(this._languageFeaturesService.inlineCompletionsProvider.onDidChange, () => this._languageFeaturesService.inlineCompletionsProvider.all(textModel));\n\t\tmapObservableArrayCached(this, inlineCompletionProviders, (provider, store) => {\n\t\t\tif (!provider.onDidChangeInlineCompletions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstore.add(provider.onDidChangeInlineCompletions(() => {\n\t\t\t\tif (!this._enabled.get()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Only update the active editor\n\t\t\t\tconst activeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n\t\t\t\tif (activeEditor !== this._editor) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._triggerCommandOnProviderChange.get()) {\n\t\t\t\t\t// TODO@hediet remove this and always do the else branch.\n\t\t\t\t\tthis.trigger(undefined, { onlyFetchInlineEdits: true });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\t// If there is an active suggestion from a different provider, we ignore the update\n\t\t\t\tconst activeState = this.state.get();\n\t\t\t\tif (activeState && (activeState.inlineCompletion || activeState.edits) && activeState.inlineCompletion?.source.provider !== provider) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\tthis._fetchSpecificProviderSignal.trigger(tx, provider);\n\t\t\t\t\tthis.trigger(tx);\n\t\t\t\t});\n\n\t\t\t}));\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tthis._didUndoInlineEdits.recomputeInitiallyAndOnChange(this._store);\n\t}\n\n\tprivate _lastShownInlineCompletionInfo: { alternateTextModelVersionId: number; /* already freed! */ inlineCompletion: InlineSuggestionItem } | undefined = undefined;\n\tprivate _lastAcceptedInlineCompletionInfo: { textModelVersionIdAfter: number; /* already freed! */ inlineCompletion: InlineSuggestionItem } | undefined = undefined;\n\tprivate readonly _didUndoInlineEdits = derivedHandleChanges({\n\t\towner: this,\n\t\tchangeTracker: {\n\t\t\tcreateChangeSummary: () => ({ didUndo: false }),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\tchangeSummary.didUndo = ctx.didChange(this._textModelVersionId) && !!ctx.change?.isUndoing;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}, (reader, changeSummary) => {\n\t\tconst versionId = this._textModelVersionId.read(reader);\n\t\tif (versionId !== null\n\t\t\t&& this._lastAcceptedInlineCompletionInfo\n\t\t\t&& this._lastAcceptedInlineCompletionInfo.textModelVersionIdAfter === versionId - 1\n\t\t\t&& this._lastAcceptedInlineCompletionInfo.inlineCompletion.isInlineEdit\n\t\t\t&& changeSummary.didUndo\n\t\t) {\n\t\t\tthis._lastAcceptedInlineCompletionInfo = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\tpublic getIndentationInfo(reader: IReader) {\n\t\tlet startsWithIndentation = false;\n\t\tlet startsWithIndentationLessThanTabSize = true;\n\t\tconst ghostText = this?.primaryGhostText.read(reader);\n\t\tif (!!this?._selectedSuggestItem && ghostText && ghostText.parts.length > 0) {\n\t\t\tconst { column, lines } = ghostText.parts[0];\n\n\t\t\tconst firstLine = lines[0].line;\n\n\t\t\tconst indentationEndColumn = this.textModel.getLineIndentColumn(ghostText.lineNumber);\n\t\t\tconst inIndentation = column <= indentationEndColumn;\n\n\t\t\tif (inIndentation) {\n\t\t\t\tlet firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n\t\t\t\tif (firstNonWsIdx === -1) {\n\t\t\t\t\tfirstNonWsIdx = firstLine.length - 1;\n\t\t\t\t}\n\t\t\t\tstartsWithIndentation = firstNonWsIdx > 0;\n\n\t\t\t\tconst tabSize = this.textModel.getOptions().tabSize;\n\t\t\t\tconst visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n\t\t\t\tstartsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tstartsWithIndentation,\n\t\t\tstartsWithIndentationLessThanTabSize,\n\t\t};\n\t}\n\n\tprivate readonly _preserveCurrentCompletionReasons = new Set([\n\t\tVersionIdChangeReason.Redo,\n\t\tVersionIdChangeReason.Undo,\n\t\tVersionIdChangeReason.AcceptWord,\n\t]);\n\n\tprivate _getReason(e: IModelContentChangedEvent | undefined): VersionIdChangeReason {\n\t\tif (e?.isUndoing) { return VersionIdChangeReason.Undo; }\n\t\tif (e?.isRedoing) { return VersionIdChangeReason.Redo; }\n\t\tif (this.isAcceptingPartially) { return VersionIdChangeReason.AcceptWord; }\n\t\treturn VersionIdChangeReason.Other;\n\t}\n\n\tpublic readonly dontRefetchSignal = observableSignal(this);\n\n\tprivate readonly _fetchInlineCompletionsPromise = derivedHandleChanges({\n\t\towner: this,\n\t\tchangeTracker: {\n\t\t\tcreateChangeSummary: () => ({\n\t\t\t\tdontRefetch: false,\n\t\t\t\tpreserveCurrentCompletion: false,\n\t\t\t\tinlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic,\n\t\t\t\tonlyRequestInlineEdits: false,\n\t\t\t\tshouldDebounce: true,\n\t\t\t\tprovider: undefined as InlineCompletionsProvider | undefined,\n\t\t\t\ttextChange: false,\n\t\t\t\tchangeReason: '',\n\t\t\t}),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\t/** @description fetch inline completions */\n\t\t\t\tif (ctx.didChange(this._textModelVersionId)) {\n\t\t\t\t\tif (this._preserveCurrentCompletionReasons.has(this._getReason(ctx.change))) {\n\t\t\t\t\t\tchangeSummary.preserveCurrentCompletion = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst detailedReasons = ctx.change?.detailedReasons ?? [];\n\t\t\t\t\tchangeSummary.changeReason = detailedReasons.length > 0 ? detailedReasons[0].getType() : '';\n\t\t\t\t\tchangeSummary.textChange = true;\n\t\t\t\t} else if (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n\t\t\t\t\tchangeSummary.preserveCurrentCompletion = true;\n\t\t\t\t\tchangeSummary.inlineCompletionTriggerKind = InlineCompletionTriggerKind.Explicit;\n\t\t\t\t} else if (ctx.didChange(this.dontRefetchSignal)) {\n\t\t\t\t\tchangeSummary.dontRefetch = true;\n\t\t\t\t} else if (ctx.didChange(this._onlyRequestInlineEditsSignal)) {\n\t\t\t\t\tchangeSummary.onlyRequestInlineEdits = true;\n\t\t\t\t} else if (ctx.didChange(this._fetchSpecificProviderSignal)) {\n\t\t\t\t\tchangeSummary.provider = ctx.change;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t}, (reader, changeSummary) => {\n\t\tthis._source.clearOperationOnTextModelChange.read(reader); // Make sure the clear operation runs before the fetch operation\n\t\tthis._noDelaySignal.read(reader);\n\t\tthis.dontRefetchSignal.read(reader);\n\t\tthis._onlyRequestInlineEditsSignal.read(reader);\n\t\tthis._forceUpdateExplicitlySignal.read(reader);\n\t\tthis._fetchSpecificProviderSignal.read(reader);\n\t\tconst shouldUpdate = ((this._enabled.read(reader) && this._selectedSuggestItem.read(reader)) || this._isActive.read(reader))\n\t\t\t&& (!this._inlineCompletionsService.isSnoozing() || changeSummary.inlineCompletionTriggerKind === InlineCompletionTriggerKind.Explicit);\n\t\tif (!shouldUpdate) {\n\t\t\tthis._source.cancelUpdate();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._textModelVersionId.read(reader); // Refetch on text change\n\n\t\tconst suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n\t\tlet suggestItem = this._selectedSuggestItem.read(reader);\n\t\tif (this._shouldShowOnSuggestConflict.get()) {\n\t\t\tsuggestItem = undefined;\n\t\t}\n\t\tif (suggestWidgetInlineCompletions && !suggestItem) {\n\t\t\tthis._source.seedInlineCompletionsWithSuggestWidget();\n\t\t}\n\n\t\tif (changeSummary.dontRefetch) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (this._didUndoInlineEdits.read(reader) && changeSummary.inlineCompletionTriggerKind !== InlineCompletionTriggerKind.Explicit) {\n\t\t\ttransaction(tx => {\n\t\t\t\tthis._source.clear(tx);\n\t\t\t});\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet reason: string = '';\n\t\tif (changeSummary.provider) {\n\t\t\treason += 'providerOnDidChange';\n\t\t} else if (changeSummary.inlineCompletionTriggerKind === InlineCompletionTriggerKind.Explicit) {\n\t\t\treason += 'explicit';\n\t\t}\n\t\tif (changeSummary.changeReason) {\n\t\t\treason += reason.length > 0 ? `:${changeSummary.changeReason}` : changeSummary.changeReason;\n\t\t}\n\n\t\tconst typingInterval = this._typing.getTypingInterval();\n\t\tconst requestInfo: InlineSuggestRequestInfo = {\n\t\t\teditorType: this.editorType,\n\t\t\tstartTime: Date.now(),\n\t\t\tlanguageId: this.textModel.getLanguageId(),\n\t\t\treason,\n\t\t\ttypingInterval: typingInterval.averageInterval,\n\t\t\ttypingIntervalCharacterCount: typingInterval.characterCount,\n\t\t};\n\n\t\tlet context: InlineCompletionContextWithoutUuid = {\n\t\t\ttriggerKind: changeSummary.inlineCompletionTriggerKind,\n\t\t\tselectedSuggestionInfo: suggestItem?.toSelectedSuggestionInfo(),\n\t\t\tincludeInlineCompletions: !changeSummary.onlyRequestInlineEdits,\n\t\t\tincludeInlineEdits: this._inlineEditsEnabled.read(reader),\n\t\t\trequestIssuedDateTime: requestInfo.startTime,\n\t\t\tearliestShownDateTime: requestInfo.startTime + (changeSummary.inlineCompletionTriggerKind === InlineCompletionTriggerKind.Explicit || this.inAcceptFlow.get() ? 0 : this._minShowDelay.get()),\n\t\t};\n\n\t\tif (context.triggerKind === InlineCompletionTriggerKind.Automatic && changeSummary.textChange) {\n\t\t\tif (this.textModel.getAlternativeVersionId() === this._lastShownInlineCompletionInfo?.alternateTextModelVersionId) {\n\t\t\t\t// When undoing back to a version where an inline edit/completion was shown,\n\t\t\t\t// we want to show an inline edit (or completion) again if it was originally an inline edit (or completion).\n\t\t\t\tcontext = {\n\t\t\t\t\t...context,\n\t\t\t\t\tincludeInlineCompletions: !this._lastShownInlineCompletionInfo.inlineCompletion.isInlineEdit,\n\t\t\t\t\tincludeInlineEdits: this._lastShownInlineCompletionInfo.inlineCompletion.isInlineEdit,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst itemToPreserveCandidate = this.selectedInlineCompletion.get() ?? this._inlineCompletionItems.get()?.inlineEdit;\n\t\tconst itemToPreserve = changeSummary.preserveCurrentCompletion || itemToPreserveCandidate?.forwardStable\n\t\t\t? itemToPreserveCandidate : undefined;\n\t\tconst userJumpedToActiveCompletion = this._jumpedToId.map(jumpedTo => !!jumpedTo && jumpedTo === this._inlineCompletionItems.get()?.inlineEdit?.semanticId);\n\n\t\tconst providers = changeSummary.provider\n\t\t\t? { providers: [changeSummary.provider], label: 'single:' + changeSummary.provider.providerId?.toString() }\n\t\t\t: { providers: this._languageFeaturesService.inlineCompletionsProvider.all(this.textModel), label: undefined }; // TODO: should use inlineCompletionProviders\n\t\tconst availableProviders = this.getAvailableProviders(providers.providers);\n\n\t\treturn this._source.fetch(availableProviders, providers.label, context, itemToPreserve?.identity, changeSummary.shouldDebounce, userJumpedToActiveCompletion, requestInfo);\n\t});\n\n\t// TODO: This is not an ideal implementation of excludesGroupIds, however as this is currently still behind proposed API\n\t// and due to the time constraints, we are using a simplified approach\n\tprivate getAvailableProviders(providers: InlineCompletionsProvider<InlineCompletions<InlineCompletion>>[]): InlineCompletionsProvider[] {\n\t\tconst suppressedProviderGroupIds = this._suppressedInlineCompletionGroupIds.get();\n\t\tconst unsuppressedProviders = providers.filter(provider => !(provider.groupId && suppressedProviderGroupIds.has(provider.groupId)));\n\n\t\tconst excludedGroupIds = new Set<string>();\n\t\tfor (const provider of unsuppressedProviders) {\n\t\t\tprovider.excludesGroupIds?.forEach(p => excludedGroupIds.add(p));\n\t\t}\n\n\t\tconst availableProviders: InlineCompletionsProvider<InlineCompletions<InlineCompletion>>[] = [];\n\t\tfor (const provider of unsuppressedProviders) {\n\t\t\tif (provider.groupId && excludedGroupIds.has(provider.groupId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tavailableProviders.push(provider);\n\t\t}\n\n\t\treturn availableProviders;\n\t}\n\n\tpublic async trigger(tx?: ITransaction, options?: { onlyFetchInlineEdits?: boolean; noDelay?: boolean }): Promise<void> {\n\t\tsubtransaction(tx, tx => {\n\t\t\tif (options?.onlyFetchInlineEdits) {\n\t\t\t\tthis._onlyRequestInlineEditsSignal.trigger(tx);\n\t\t\t}\n\t\t\tif (options?.noDelay) {\n\t\t\t\tthis._noDelaySignal.trigger(tx);\n\t\t\t}\n\t\t\tthis._isActive.set(true, tx);\n\t\t});\n\t\tawait this._fetchInlineCompletionsPromise.get();\n\t}\n\n\tpublic async triggerExplicitly(tx?: ITransaction, onlyFetchInlineEdits: boolean = false): Promise<void> {\n\t\tsubtransaction(tx, tx => {\n\t\t\tif (onlyFetchInlineEdits) {\n\t\t\t\tthis._onlyRequestInlineEditsSignal.trigger(tx);\n\t\t\t}\n\t\t\tthis._isActive.set(true, tx);\n\t\t\tthis._inAcceptFlow.set(true, tx);\n\t\t\tthis._forceUpdateExplicitlySignal.trigger(tx);\n\t\t});\n\t\tawait this._fetchInlineCompletionsPromise.get();\n\t}\n\n\tpublic stop(stopReason: 'explicitCancel' | 'automatic' = 'automatic', tx?: ITransaction): void {\n\t\tsubtransaction(tx, tx => {\n\t\t\tif (stopReason === 'explicitCancel') {\n\t\t\t\tconst inlineCompletion = this.state.get()?.inlineCompletion;\n\t\t\t\tif (inlineCompletion) {\n\t\t\t\t\tinlineCompletion.reportEndOfLife({ kind: InlineCompletionEndOfLifeReasonKind.Rejected });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._isActive.set(false, tx);\n\t\t\tthis._source.clear(tx);\n\t\t});\n\t}\n\n\tprivate readonly _inlineCompletionItems = derivedOpts({ owner: this }, reader => {\n\t\tconst c = this._source.inlineCompletions.read(reader);\n\t\tif (!c) { return undefined; }\n\t\tconst cursorPosition = this.primaryPosition.read(reader);\n\t\tlet inlineEdit: InlineEditItem | undefined = undefined;\n\t\tconst visibleCompletions: InlineCompletionItem[] = [];\n\t\tfor (const completion of c.inlineCompletions) {\n\t\t\tif (!completion.isInlineEdit) {\n\t\t\t\tif (completion.isVisible(this.textModel, cursorPosition)) {\n\t\t\t\t\tvisibleCompletions.push(completion);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinlineEdit = completion;\n\t\t\t}\n\t\t}\n\n\t\tif (visibleCompletions.length !== 0) {\n\t\t\t// Don't show the inline edit if there is a visible completion\n\t\t\tinlineEdit = undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tinlineCompletions: visibleCompletions,\n\t\t\tinlineEdit,\n\t\t};\n\t});\n\n\tprivate readonly _filteredInlineCompletionItems = derivedOpts({ owner: this, equalsFn: itemsEquals() }, reader => {\n\t\tconst c = this._inlineCompletionItems.read(reader);\n\t\treturn c?.inlineCompletions ?? [];\n\t});\n\n\tpublic readonly selectedInlineCompletionIndex = derived<number>(this, (reader) => {\n\t\tconst selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n\t\tconst filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this._selectedInlineCompletionId === undefined ? -1\n\t\t\t: filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n\t\tif (idx === -1) {\n\t\t\t// Reset the selection so that the selection does not jump back when it appears again\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t\treturn 0;\n\t\t}\n\t\treturn idx;\n\t});\n\n\tpublic readonly selectedInlineCompletion = derived<InlineCompletionItem | undefined>(this, (reader) => {\n\t\tconst filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this.selectedInlineCompletionIndex.read(reader);\n\t\treturn filteredCompletions[idx];\n\t});\n\n\tpublic readonly activeCommands = derivedOpts<InlineCompletionCommand[]>({ owner: this, equalsFn: itemsEquals() },\n\t\tr => this.selectedInlineCompletion.read(r)?.source.inlineSuggestions.commands ?? []\n\t);\n\n\tpublic readonly lastTriggerKind: IObservable<InlineCompletionTriggerKind | undefined>;\n\n\tpublic readonly inlineCompletionsCount = derived<number | undefined>(this, reader => {\n\t\tif (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n\t\t\treturn this._filteredInlineCompletionItems.read(reader).length;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t});\n\n\tprivate readonly _hasVisiblePeekWidgets = derived(this, reader => this._editorObs.openedPeekWidgets.read(reader) > 0);\n\n\tprivate readonly _shouldShowOnSuggestConflict = derived(this, reader => {\n\t\tconst showOnSuggestConflict = this._showOnSuggestConflict.read(reader);\n\t\tif (showOnSuggestConflict !== 'never') {\n\t\t\tconst hasInlineCompletion = !!this.selectedInlineCompletion.read(reader);\n\t\t\tif (hasInlineCompletion) {\n\t\t\t\tconst item = this._selectedSuggestItem.read(reader);\n\t\t\t\tif (!item) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (showOnSuggestConflict === 'whenSuggestListIsIncomplete') {\n\t\t\t\t\treturn item.listIncomplete;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t});\n\n\tpublic readonly state = derivedOpts<{\n\t\tkind: 'ghostText';\n\t\tedits: readonly TextReplacement[];\n\t\tprimaryGhostText: GhostTextOrReplacement;\n\t\tghostTexts: readonly GhostTextOrReplacement[];\n\t\tsuggestItem: SuggestItemInfo | undefined;\n\t\tinlineCompletion: InlineCompletionItem | undefined;\n\t} | {\n\t\tkind: 'inlineEdit';\n\t\tedits: readonly TextReplacement[];\n\t\tinlineEdit: InlineEdit;\n\t\tinlineCompletion: InlineEditItem;\n\t\tcursorAtInlineEdit: IObservable<boolean>;\n\t\tnextEditUri: URI | undefined;\n\t} | undefined>({\n\t\towner: this,\n\t\tequalsFn: (a, b) => {\n\t\t\tif (!a || !b) { return a === b; }\n\n\t\t\tif (a.kind === 'ghostText' && b.kind === 'ghostText') {\n\t\t\t\treturn ghostTextsOrReplacementsEqual(a.ghostTexts, b.ghostTexts)\n\t\t\t\t\t&& a.inlineCompletion === b.inlineCompletion\n\t\t\t\t\t&& a.suggestItem === b.suggestItem;\n\t\t\t} else if (a.kind === 'inlineEdit' && b.kind === 'inlineEdit') {\n\t\t\t\treturn a.inlineEdit.equals(b.inlineEdit);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}, (reader) => {\n\t\tconst model = this.textModel;\n\n\t\tconst item = this._inlineCompletionItems.read(reader);\n\t\tconst inlineEditResult = item?.inlineEdit;\n\t\tif (inlineEditResult) {\n\t\t\tif (this._hasVisiblePeekWidgets.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet edit = inlineEditResult.getSingleTextEdit();\n\t\t\tedit = singleTextRemoveCommonPrefix(edit, model);\n\n\t\t\tconst cursorAtInlineEdit = this.primaryPosition.map(cursorPos => LineRange.fromRangeInclusive(inlineEditResult.targetRange).addMargin(1, 1).contains(cursorPos.lineNumber));\n\n\t\t\tconst commands = inlineEditResult.source.inlineSuggestions.commands;\n\t\t\tconst inlineEdit = new InlineEdit(edit, commands ?? [], inlineEditResult);\n\n\t\t\tconst edits = inlineEditResult.updatedEdit;\n\t\t\tconst e = edits ? TextEdit.fromStringEdit(edits, new TextModelText(this.textModel)).replacements : [edit];\n\t\t\tconst nextEditUri = (item.inlineEdit?.command?.id === 'vscode.open' || item.inlineEdit?.command?.id === '_workbench.open') &&\n\t\t\t\titem.inlineEdit?.command.arguments?.length ? URI.from(item.inlineEdit?.command.arguments[0]) : undefined;\n\t\t\treturn { kind: 'inlineEdit', inlineEdit, inlineCompletion: inlineEditResult, edits: e, cursorAtInlineEdit, nextEditUri };\n\t\t}\n\n\t\tconst suggestItem = this._selectedSuggestItem.read(reader);\n\t\tif (!this._shouldShowOnSuggestConflict.read(reader) && suggestItem) {\n\t\t\tconst suggestCompletionEdit = singleTextRemoveCommonPrefix(suggestItem.getSingleTextEdit(), model);\n\t\t\tconst augmentation = this._computeAugmentation(suggestCompletionEdit, reader);\n\n\t\t\tconst isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n\t\t\tif (!isSuggestionPreviewEnabled && !augmentation) { return undefined; }\n\n\t\t\tconst fullEdit = augmentation?.edit ?? suggestCompletionEdit;\n\t\t\tconst fullEditPreviewLength = augmentation ? augmentation.edit.text.length - suggestCompletionEdit.text.length : 0;\n\n\t\t\tconst mode = this._suggestPreviewMode.read(reader);\n\t\t\tconst positions = this._positions.read(reader);\n\t\t\tconst allPotentialEdits = [fullEdit, ...getSecondaryEdits(this.textModel, positions, fullEdit)];\n\t\t\tconst validEditsAndGhostTexts = allPotentialEdits\n\t\t\t\t.map((edit, idx) => ({ edit, ghostText: edit ? computeGhostText(edit, model, mode, positions[idx], fullEditPreviewLength) : undefined }))\n\t\t\t\t.filter(({ edit, ghostText }) => edit !== undefined && ghostText !== undefined);\n\t\t\tconst edits = validEditsAndGhostTexts.map(({ edit }) => edit!);\n\t\t\tconst ghostTexts = validEditsAndGhostTexts.map(({ ghostText }) => ghostText!);\n\t\t\tconst primaryGhostText = ghostTexts[0] ?? new GhostText(fullEdit.range.endLineNumber, []);\n\t\t\treturn { kind: 'ghostText', edits, primaryGhostText, ghostTexts, inlineCompletion: augmentation?.completion, suggestItem };\n\t\t} else {\n\t\t\tif (!this._isActive.read(reader)) { return undefined; }\n\t\t\tconst inlineCompletion = this.selectedInlineCompletion.read(reader);\n\t\t\tif (!inlineCompletion) { return undefined; }\n\n\t\t\tconst replacement = inlineCompletion.getSingleTextEdit();\n\t\t\tconst mode = this._inlineSuggestMode.read(reader);\n\t\t\tconst positions = this._positions.read(reader);\n\t\t\tconst allPotentialEdits = [replacement, ...getSecondaryEdits(this.textModel, positions, replacement)];\n\t\t\tconst validEditsAndGhostTexts = allPotentialEdits\n\t\t\t\t.map((edit, idx) => ({ edit, ghostText: edit ? computeGhostText(edit, model, mode, positions[idx], 0) : undefined }))\n\t\t\t\t.filter(({ edit, ghostText }) => edit !== undefined && ghostText !== undefined);\n\t\t\tconst edits = validEditsAndGhostTexts.map(({ edit }) => edit!);\n\t\t\tconst ghostTexts = validEditsAndGhostTexts.map(({ ghostText }) => ghostText!);\n\t\t\tif (!ghostTexts[0]) { return undefined; }\n\t\t\treturn { kind: 'ghostText', edits, primaryGhostText: ghostTexts[0], ghostTexts, inlineCompletion, suggestItem: undefined };\n\t\t}\n\t});\n\n\tpublic readonly inlineCompletionState = derived(this, reader => {\n\t\tconst s = this.state.read(reader);\n\t\tif (!s || s.kind !== 'ghostText') {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (this._editorObs.inComposition.read(reader)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn s;\n\t});\n\n\tpublic readonly inlineEditState = derived(this, reader => {\n\t\tconst s = this.state.read(reader);\n\t\tif (!s || s.kind !== 'inlineEdit') {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn s;\n\t});\n\n\tpublic readonly inlineEditAvailable = derived(this, reader => {\n\t\tconst s = this.inlineEditState.read(reader);\n\t\treturn !!s;\n\t});\n\n\tprivate _computeAugmentation(suggestCompletion: TextReplacement, reader: IReader | undefined) {\n\t\tconst model = this.textModel;\n\t\tconst suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n\t\tconst candidateInlineCompletions = suggestWidgetInlineCompletions\n\t\t\t? suggestWidgetInlineCompletions.inlineCompletions.filter(c => !c.isInlineEdit)\n\t\t\t: [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n\n\t\tconst augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n\t\t\tlet r = completion.getSingleTextEdit();\n\t\t\tr = singleTextRemoveCommonPrefix(\n\t\t\t\tr,\n\t\t\t\tmodel,\n\t\t\t\tRange.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition())\n\t\t\t);\n\t\t\treturn singleTextEditAugments(r, suggestCompletion) ? { completion, edit: r } : undefined;\n\t\t});\n\n\t\treturn augmentedCompletion;\n\t}\n\n\tpublic readonly warning = derived(this, reader => {\n\t\treturn this.inlineCompletionState.read(reader)?.inlineCompletion?.warning;\n\t});\n\n\tpublic readonly ghostTexts = derivedOpts({ owner: this, equalsFn: ghostTextsOrReplacementsEqual }, reader => {\n\t\tconst v = this.inlineCompletionState.read(reader);\n\t\tif (!v) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn v.ghostTexts;\n\t});\n\n\tpublic readonly primaryGhostText = derivedOpts({ owner: this, equalsFn: ghostTextOrReplacementEquals }, reader => {\n\t\tconst v = this.inlineCompletionState.read(reader);\n\t\tif (!v) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn v?.primaryGhostText;\n\t});\n\n\tpublic readonly showCollapsed = derived<boolean>(this, reader => {\n\t\tconst state = this.state.read(reader);\n\t\tif (!state || state.kind !== 'inlineEdit') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (state.inlineCompletion.displayLocation) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst isCurrentModelVersion = state.inlineCompletion.updatedEditModelVersion === this._textModelVersionId.read(reader);\n\t\treturn (this._inlineEditsShowCollapsedEnabled.read(reader) || !isCurrentModelVersion)\n\t\t\t&& this._jumpedToId.read(reader) !== state.inlineCompletion.semanticId\n\t\t\t&& !this._inAcceptFlow.read(reader);\n\t});\n\n\tprivate readonly _tabShouldIndent = derived(this, reader => {\n\t\tif (this._inAcceptFlow.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction isMultiLine(range: Range): boolean {\n\t\t\treturn range.startLineNumber !== range.endLineNumber;\n\t\t}\n\n\t\tfunction getNonIndentationRange(model: ITextModel, lineNumber: number): Range {\n\t\t\tconst columnStart = model.getLineIndentColumn(lineNumber);\n\t\t\tconst lastNonWsColumn = model.getLineLastNonWhitespaceColumn(lineNumber);\n\t\t\tconst columnEnd = Math.max(lastNonWsColumn, columnStart);\n\t\t\treturn new Range(lineNumber, columnStart, lineNumber, columnEnd);\n\t\t}\n\n\t\tconst selections = this._editorObs.selections.read(reader);\n\t\treturn selections?.some(s => {\n\t\t\tif (s.isEmpty()) {\n\t\t\t\treturn this.textModel.getLineLength(s.startLineNumber) === 0;\n\t\t\t} else {\n\t\t\t\treturn isMultiLine(s) || s.containsRange(getNonIndentationRange(this.textModel, s.startLineNumber));\n\t\t\t}\n\t\t});\n\t});\n\n\tpublic readonly tabShouldJumpToInlineEdit = derived(this, reader => {\n\t\tif (this._tabShouldIndent.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst s = this.inlineEditState.read(reader);\n\t\tif (!s) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.showCollapsed.read(reader)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._inAcceptFlow.read(reader) && this._appearedInsideViewport.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !s.cursorAtInlineEdit.read(reader);\n\t});\n\n\tpublic readonly tabShouldAcceptInlineEdit = derived(this, reader => {\n\t\tconst s = this.inlineEditState.read(reader);\n\t\tif (!s) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.showCollapsed.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._inAcceptFlow.read(reader) && this._appearedInsideViewport.read(reader)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (s.inlineCompletion.targetRange.startLineNumber === this._editorObs.cursorLineNumber.read(reader)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._jumpedToId.read(reader) === s.inlineCompletion.semanticId) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._tabShouldIndent.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn s.cursorAtInlineEdit.read(reader);\n\t});\n\n\tpublic readonly isInDiffEditor;\n\n\tpublic readonly editorType: InlineCompletionEditorType;\n\n\tprivate async _deltaSelectedInlineCompletionIndex(delta: 1 | -1): Promise<void> {\n\t\tawait this.triggerExplicitly();\n\n\t\tconst completions = this._filteredInlineCompletionItems.get() || [];\n\t\tif (completions.length > 0) {\n\t\t\tconst newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n\t\t\tthis._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n\t\t} else {\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t}\n\t}\n\n\tpublic async next(): Promise<void> { await this._deltaSelectedInlineCompletionIndex(1); }\n\n\tpublic async previous(): Promise<void> { await this._deltaSelectedInlineCompletionIndex(-1); }\n\n\tprivate _getMetadata(completion: InlineSuggestionItem, languageId: string, type: 'word' | 'line' | undefined = undefined): TextModelEditSource {\n\t\tif (type) {\n\t\t\treturn EditSources.inlineCompletionPartialAccept({\n\t\t\t\tnes: completion.isInlineEdit,\n\t\t\t\trequestUuid: completion.requestUuid,\n\t\t\t\tproviderId: completion.source.provider.providerId,\n\t\t\t\tlanguageId,\n\t\t\t\ttype,\n\t\t\t});\n\t\t} else {\n\t\t\treturn EditSources.inlineCompletionAccept({\n\t\t\t\tnes: completion.isInlineEdit,\n\t\t\t\trequestUuid: completion.requestUuid,\n\t\t\t\tproviderId: completion.source.provider.providerId,\n\t\t\t\tlanguageId\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async accept(editor: ICodeEditor = this._editor): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tlet completion: InlineSuggestionItem;\n\t\tlet isNextEditUri = false;\n\t\tconst state = this.state.get();\n\t\tif (state?.kind === 'ghostText') {\n\t\t\tif (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcompletion = state.inlineCompletion;\n\t\t} else if (state?.kind === 'inlineEdit') {\n\t\t\tcompletion = state.inlineCompletion;\n\t\t\tisNextEditUri = !!state.nextEditUri;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the completion list will not be disposed before the text change is sent.\n\t\tcompletion.addRef();\n\n\t\ttry {\n\t\t\teditor.pushUndoStop();\n\t\t\tif (isNextEditUri) {\n\t\t\t\t// Do nothing\n\t\t\t} else if (completion.snippetInfo) {\n\t\t\t\tconst mainEdit = TextReplacement.delete(completion.editRange);\n\t\t\t\tconst additionalEdits = completion.additionalTextEdits.map(e => new TextReplacement(Range.lift(e.range), e.text ?? ''));\n\t\t\t\tconst edit = TextEdit.fromParallelReplacementsUnsorted([mainEdit, ...additionalEdits]);\n\t\t\t\teditor.edit(edit, this._getMetadata(completion, this.textModel.getLanguageId()));\n\n\t\t\t\teditor.setPosition(completion.snippetInfo.range.getStartPosition(), 'inlineCompletionAccept');\n\t\t\t\tSnippetController2.get(editor)?.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n\t\t\t} else {\n\t\t\t\tconst edits = state.edits;\n\n\t\t\t\t// The cursor should move to the end of the edit, not the end of the range provided by the extension\n\t\t\t\t// Inline Edit diffs (human readable) the suggestion from the extension so it already removes common suffix/prefix\n\t\t\t\t// Inline Completions does diff the suggestion so it may contain common suffix\n\t\t\t\tlet minimalEdits = edits;\n\t\t\t\tif (state.kind === 'ghostText') {\n\t\t\t\t\tminimalEdits = removeTextReplacementCommonSuffixPrefix(edits, this.textModel);\n\t\t\t\t}\n\t\t\t\tconst selections = getEndPositionsAfterApplying(minimalEdits).map(p => Selection.fromPositions(p));\n\n\t\t\t\tconst additionalEdits = completion.additionalTextEdits.map(e => new TextReplacement(Range.lift(e.range), e.text ?? ''));\n\t\t\t\tconst edit = TextEdit.fromParallelReplacementsUnsorted([...edits, ...additionalEdits]);\n\n\t\t\t\teditor.edit(edit, this._getMetadata(completion, this.textModel.getLanguageId()));\n\n\t\t\t\tif (completion.displayLocation === undefined) {\n\t\t\t\t\t// do not move the cursor when the completion is displayed in a different location\n\t\t\t\t\teditor.setSelections(state.kind === 'inlineEdit' ? selections.slice(-1) : selections, 'inlineCompletionAccept');\n\t\t\t\t}\n\n\t\t\t\tif (state.kind === 'inlineEdit' && !this._accessibilityService.isMotionReduced()) {\n\t\t\t\t\tconst editRanges = edit.getNewRanges();\n\t\t\t\t\tconst dec = this._store.add(new FadeoutDecoration(editor, editRanges, () => {\n\t\t\t\t\t\tthis._store.delete(dec);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidAccept.fire();\n\n\t\t\t// Reset before invoking the command, as the command might cause a follow up trigger (which we don't want to reset).\n\t\t\tthis.stop();\n\n\t\t\tif (completion.command) {\n\t\t\t\tawait this._commandService\n\t\t\t\t\t.executeCommand(completion.command.id, ...(completion.command.arguments || []))\n\t\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t\t}\n\n\t\t\tcompletion.reportEndOfLife({ kind: InlineCompletionEndOfLifeReasonKind.Accepted });\n\t\t} finally {\n\t\t\tcompletion.removeRef();\n\t\t\tthis._inAcceptFlow.set(true, undefined);\n\t\t\tthis._lastAcceptedInlineCompletionInfo = { textModelVersionIdAfter: this.textModel.getVersionId(), inlineCompletion: completion };\n\t\t}\n\t}\n\n\tpublic async acceptNextWord(): Promise<void> {\n\t\tawait this._acceptNext(this._editor, 'word', (pos, text) => {\n\t\t\tconst langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n\t\t\tconst config = this._languageConfigurationService.getLanguageConfiguration(langId);\n\t\t\tconst wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n\n\t\t\tconst m1 = text.match(wordRegExp);\n\t\t\tlet acceptUntilIndexExclusive = 0;\n\t\t\tif (m1 && m1.index !== undefined) {\n\t\t\t\tif (m1.index === 0) {\n\t\t\t\t\tacceptUntilIndexExclusive = m1[0].length;\n\t\t\t\t} else {\n\t\t\t\t\tacceptUntilIndexExclusive = m1.index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tacceptUntilIndexExclusive = text.length;\n\t\t\t}\n\n\t\t\tconst wsRegExp = /\\s+/g;\n\t\t\tconst m2 = wsRegExp.exec(text);\n\t\t\tif (m2 && m2.index !== undefined) {\n\t\t\t\tif (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n\t\t\t\t\tacceptUntilIndexExclusive = m2.index + m2[0].length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acceptUntilIndexExclusive;\n\t\t}, PartialAcceptTriggerKind.Word);\n\t}\n\n\tpublic async acceptNextLine(): Promise<void> {\n\t\tawait this._acceptNext(this._editor, 'line', (pos, text) => {\n\t\t\tconst m = text.match(/\\n/);\n\t\t\tif (m && m.index !== undefined) {\n\t\t\t\treturn m.index + 1;\n\t\t\t}\n\t\t\treturn text.length;\n\t\t}, PartialAcceptTriggerKind.Line);\n\t}\n\n\tprivate async _acceptNext(editor: ICodeEditor, type: 'word' | 'line', getAcceptUntilIndex: (position: Position, text: string) => number, kind: PartialAcceptTriggerKind): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst state = this.inlineCompletionState.get();\n\t\tif (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n\t\t\treturn;\n\t\t}\n\t\tconst ghostText = state.primaryGhostText;\n\t\tconst completion = state.inlineCompletion;\n\n\t\tif (completion.snippetInfo) {\n\t\t\t// not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n\t\t\tawait this.accept(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstPart = ghostText.parts[0];\n\t\tconst ghostTextPos = new Position(ghostText.lineNumber, firstPart.column);\n\t\tconst ghostTextVal = firstPart.text;\n\t\tconst acceptUntilIndexExclusive = getAcceptUntilIndex(ghostTextPos, ghostTextVal);\n\t\tif (acceptUntilIndexExclusive === ghostTextVal.length && ghostText.parts.length === 1) {\n\t\t\tthis.accept(editor);\n\t\t\treturn;\n\t\t}\n\t\tconst partialGhostTextVal = ghostTextVal.substring(0, acceptUntilIndexExclusive);\n\n\t\tconst positions = this._positions.get();\n\t\tconst cursorPosition = positions[0];\n\n\t\t// Executing the edit might free the completion, so we have to hold a reference on it.\n\t\tcompletion.addRef();\n\t\ttry {\n\t\t\tthis._isAcceptingPartially = true;\n\t\t\ttry {\n\t\t\t\teditor.pushUndoStop();\n\t\t\t\tconst replaceRange = Range.fromPositions(cursorPosition, ghostTextPos);\n\t\t\t\tconst newText = editor.getModel()!.getValueInRange(replaceRange) + partialGhostTextVal;\n\t\t\t\tconst primaryEdit = new TextReplacement(replaceRange, newText);\n\t\t\t\tconst edits = [primaryEdit, ...getSecondaryEdits(this.textModel, positions, primaryEdit)].filter(isDefined);\n\t\t\t\tconst selections = getEndPositionsAfterApplying(edits).map(p => Selection.fromPositions(p));\n\n\t\t\t\teditor.edit(TextEdit.fromParallelReplacementsUnsorted(edits), this._getMetadata(completion, type));\n\t\t\t\teditor.setSelections(selections, 'inlineCompletionPartialAccept');\n\t\t\t\teditor.revealPositionInCenterIfOutsideViewport(editor.getPosition()!, ScrollType.Immediate);\n\t\t\t} finally {\n\t\t\t\tthis._isAcceptingPartially = false;\n\t\t\t}\n\n\t\t\tconst acceptedRange = Range.fromPositions(completion.editRange.getStartPosition(), TextLength.ofText(partialGhostTextVal).addToPosition(ghostTextPos));\n\t\t\t// This assumes that the inline completion and the model use the same EOL style.\n\t\t\tconst text = editor.getModel()!.getValueInRange(acceptedRange, EndOfLinePreference.LF);\n\t\t\tconst acceptedLength = text.length;\n\t\t\tcompletion.reportPartialAccept(\n\t\t\t\tacceptedLength,\n\t\t\t\t{ kind, acceptedLength: acceptedLength },\n\t\t\t\t{ characters: acceptUntilIndexExclusive, ratio: acceptUntilIndexExclusive / ghostTextVal.length, count: 1 }\n\t\t\t);\n\n\t\t} finally {\n\t\t\tcompletion.removeRef();\n\t\t}\n\t}\n\n\tpublic handleSuggestAccepted(item: SuggestItemInfo) {\n\t\tconst itemEdit = singleTextRemoveCommonPrefix(item.getSingleTextEdit(), this.textModel);\n\t\tconst augmentedCompletion = this._computeAugmentation(itemEdit, undefined);\n\t\tif (!augmentedCompletion) { return; }\n\n\t\t// This assumes that the inline completion and the model use the same EOL style.\n\t\tconst alreadyAcceptedLength = this.textModel.getValueInRange(augmentedCompletion.completion.editRange, EndOfLinePreference.LF).length;\n\t\tconst acceptedLength = alreadyAcceptedLength + itemEdit.text.length;\n\n\t\taugmentedCompletion.completion.reportPartialAccept(itemEdit.text.length, {\n\t\t\tkind: PartialAcceptTriggerKind.Suggest,\n\t\t\tacceptedLength,\n\t\t}, {\n\t\t\tcharacters: itemEdit.text.length,\n\t\t\tcount: 1,\n\t\t\tratio: 1\n\t\t});\n\t}\n\n\tpublic extractReproSample(): Repro {\n\t\tconst value = this.textModel.getValue();\n\t\tconst item = this.state.get()?.inlineCompletion;\n\t\treturn {\n\t\t\tdocumentValue: value,\n\t\t\tinlineCompletion: item?.getSourceCompletion(),\n\t\t};\n\t}\n\n\tprivate readonly _jumpedToId = observableValue<undefined | string>(this, undefined);\n\tprivate readonly _inAcceptFlow = observableValue(this, false);\n\tpublic readonly inAcceptFlow: IObservable<boolean> = this._inAcceptFlow;\n\n\tpublic jump(): void {\n\t\tconst s = this.inlineEditState.get();\n\t\tif (!s) { return; }\n\n\t\ttransaction(tx => {\n\t\t\tthis._jumpedToId.set(s.inlineCompletion.semanticId, tx);\n\t\t\tthis.dontRefetchSignal.trigger(tx);\n\t\t\tconst targetRange = s.inlineCompletion.targetRange;\n\t\t\tconst targetPosition = targetRange.getStartPosition();\n\t\t\tthis._editor.setPosition(targetPosition, 'inlineCompletions.jump');\n\n\t\t\t// TODO: consider using view information to reveal it\n\t\t\tconst isSingleLineChange = targetRange.isSingleLine() && (s.inlineCompletion.displayLocation || !s.inlineCompletion.insertText.includes('\\n'));\n\t\t\tif (isSingleLineChange) {\n\t\t\t\tthis._editor.revealPosition(targetPosition);\n\t\t\t} else {\n\t\t\t\tconst revealRange = new Range(targetRange.startLineNumber - 1, 1, targetRange.endLineNumber + 1, 1);\n\t\t\t\tthis._editor.revealRange(revealRange, ScrollType.Immediate);\n\t\t\t}\n\n\t\t\tthis._editor.focus();\n\t\t});\n\t}\n\n\tpublic async handleInlineSuggestionShown(inlineCompletion: InlineSuggestionItem, viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData): Promise<void> {\n\t\tawait inlineCompletion.reportInlineEditShown(this._commandService, viewKind, viewData);\n\t}\n}\n\ninterface Repro {\n\tdocumentValue: string;\n\tinlineCompletion: InlineCompletion | undefined;\n}\n\nexport enum VersionIdChangeReason {\n\tUndo,\n\tRedo,\n\tAcceptWord,\n\tOther,\n}\n\nexport function getSecondaryEdits(textModel: ITextModel, positions: readonly Position[], primaryTextRepl: TextReplacement): (TextReplacement | undefined)[] {\n\tif (positions.length === 1) {\n\t\t// No secondary cursor positions\n\t\treturn [];\n\t}\n\tconst text = new TextModelText(textModel);\n\tconst textTransformer = text.getTransformer();\n\tconst primaryOffset = textTransformer.getOffset(positions[0]);\n\tconst secondaryOffsets = positions.slice(1).map(pos => textTransformer.getOffset(pos));\n\n\tprimaryTextRepl = primaryTextRepl.removeCommonPrefixAndSuffix(text);\n\tconst primaryStringRepl = textTransformer.getStringReplacement(primaryTextRepl);\n\n\tconst deltaFromOffsetToRangeStart = primaryStringRepl.replaceRange.start - primaryOffset;\n\tconst primaryContextRange = primaryStringRepl.replaceRange.join(OffsetRange.emptyAt(primaryOffset));\n\tconst primaryContextValue = text.getValueOfOffsetRange(primaryContextRange);\n\n\tconst replacements = secondaryOffsets.map(secondaryOffset => {\n\t\tconst newRangeStart = secondaryOffset + deltaFromOffsetToRangeStart;\n\t\tconst newRangeEnd = newRangeStart + primaryStringRepl.replaceRange.length;\n\t\tconst range = new OffsetRange(newRangeStart, newRangeEnd);\n\n\t\tconst contextRange = range.join(OffsetRange.emptyAt(secondaryOffset));\n\t\tconst contextValue = text.getValueOfOffsetRange(contextRange);\n\t\tif (contextValue !== primaryContextValue) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst stringRepl = new StringReplacement(range, primaryStringRepl.newText);\n\t\tconst repl = textTransformer.getTextReplacement(stringRepl);\n\t\treturn repl;\n\t}).filter(isDefined);\n\n\treturn replacements;\n}\n\nclass FadeoutDecoration extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tranges: Range[],\n\t\tonDispose?: () => void,\n\t) {\n\t\tsuper();\n\n\t\tif (onDispose) {\n\t\t\tthis._register({ dispose: () => onDispose() });\n\t\t}\n\n\t\tthis._register(observableCodeEditor(editor).setDecorations(constObservable(ranges.map<IModelDeltaDecoration>(range => ({\n\t\t\trange: range,\n\t\t\toptions: {\n\t\t\t\tdescription: 'animation',\n\t\t\t\tclassName: 'edits-fadeout-decoration',\n\t\t\t\tzIndex: 1,\n\t\t\t}\n\t\t})))));\n\n\t\tconst animation = new AnimatedValue(1, 0, 1000, easeOutCubic);\n\t\tconst val = new ObservableAnimatedValue(animation);\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst opacity = val.getValue(reader);\n\t\t\teditor.getContainerDomNode().style.setProperty('--animation-opacity', opacity.toString());\n\t\t\tif (animation.isFinished()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { mapFindFirst } from '../../../../../base/common/arraysFind.js';\nimport { itemsEquals } from '../../../../../base/common/equals.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../../base/common/errors.js';\nimport { Emitter } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { IObservable, IObservableWithChange, IReader, ITransaction, autorun, constObservable, derived, derivedHandleChanges, derivedOpts, mapObservableArrayCached, observableFromEvent, observableSignal, observableValue, recomputeInitiallyAndOnChange, subtransaction, transaction } from '../../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../../base/common/strings.js';\nimport { isDefined } from '../../../../../base/common/types.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../../../common/core/cursorColumns.js';\nimport { LineRange } from '../../../../common/core/ranges/lineRange.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { TextReplacement, TextEdit } from '../../../../common/core/edits/textEdit.js';\nimport { TextLength } from '../../../../common/core/text/textLength.js';\nimport { ScrollType } from '../../../../common/editorCommon.js';\nimport { InlineCompletionEndOfLifeReasonKind, InlineCompletion, InlineCompletionTriggerKind, PartialAcceptTriggerKind, InlineCompletionsProvider, InlineCompletionCommand, InlineCompletions } from '../../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../../common/languages/languageConfigurationRegistry.js';\nimport { EndOfLinePreference, IModelDeltaDecoration, ITextModel } from '../../../../common/model.js';\nimport { TextModelText } from '../../../../common/model/textModelText.js';\nimport { IFeatureDebounceInformation } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { IModelContentChangedEvent } from '../../../../common/textModelEvents.js';\nimport { SnippetController2 } from '../../../snippet/browser/snippetController2.js';\nimport { getEndPositionsAfterApplying, removeTextReplacementCommonSuffixPrefix } from '../utils.js';\nimport { AnimatedValue, easeOutCubic, ObservableAnimatedValue } from './animation.js';\nimport { computeGhostText } from './computeGhostText.js';\nimport { GhostText, GhostTextOrReplacement, ghostTextOrReplacementEquals, ghostTextsOrReplacementsEqual } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { InlineEdit } from './inlineEdit.js';\nimport { InlineCompletionItem, InlineEditItem, InlineSuggestionItem } from './inlineSuggestionItem.js';\nimport { InlineCompletionContextWithoutUuid, InlineCompletionEditorType, InlineSuggestRequestInfo } from './provideInlineCompletions.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { SuggestItemInfo } from './suggestWidgetAdapter.js';\nimport { TextModelEditSource, EditSources } from '../../../../common/textModelEditSource.js';\nimport { ICodeEditorService } from '../../../../browser/services/codeEditorService.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from '../view/inlineEdits/inlineEditsViewInterface.js';\nimport { IInlineCompletionsService } from '../../../../browser/services/inlineCompletionsService.js';\nimport { TypingInterval } from './typingSpeed.js';\nimport { StringReplacement } from '../../../../common/core/edits/stringEdit.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { URI } from '../../../../../base/common/uri.js';\n\nexport class InlineCompletionsModel extends Disposable {\n\tprivate readonly _source;\n\tprivate readonly _isActive = observableValue<boolean>(this, false);\n\tprivate readonly _onlyRequestInlineEditsSignal = observableSignal(this);\n\tprivate readonly _forceUpdateExplicitlySignal = observableSignal(this);\n\tprivate readonly _noDelaySignal = observableSignal(this);\n\n\tprivate readonly _fetchSpecificProviderSignal = observableSignal<InlineCompletionsProvider | undefined>(this);\n\n\t// We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n\tprivate readonly _selectedInlineCompletionId = observableValue<string | undefined>(this, undefined);\n\tpublic readonly primaryPosition = derived(this, reader => this._positions.read(reader)[0] ?? new Position(1, 1));\n\n\tprivate _isAcceptingPartially = false;\n\tprivate readonly _appearedInsideViewport = derived<boolean>(this, reader => {\n\t\tconst state = this.state.read(reader);\n\t\tif (!state || !state.inlineCompletion) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst targetRange = state.inlineCompletion.targetRange;\n\t\tconst visibleRanges = this._editorObs.editor.getVisibleRanges();\n\t\tif (visibleRanges.length < 1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst viewportRange = new Range(visibleRanges[0].startLineNumber, visibleRanges[0].startColumn, visibleRanges[visibleRanges.length - 1].endLineNumber, visibleRanges[visibleRanges.length - 1].endColumn);\n\t\treturn viewportRange.containsRange(targetRange);\n\t});\n\tpublic get isAcceptingPartially() { return this._isAcceptingPartially; }\n\n\tprivate readonly _onDidAccept = new Emitter<void>();\n\tpublic readonly onDidAccept = this._onDidAccept.event;\n\n\tprivate readonly _editorObs;\n\n\tprivate readonly _typing: TypingInterval;\n\n\tprivate readonly _suggestPreviewEnabled;\n\tprivate readonly _suggestPreviewMode;\n\tprivate readonly _inlineSuggestMode;\n\tprivate readonly _suppressedInlineCompletionGroupIds;\n\tprivate readonly _inlineEditsEnabled;\n\tprivate readonly _inlineEditsShowCollapsedEnabled;\n\tprivate readonly _triggerCommandOnProviderChange;\n\tprivate readonly _minShowDelay;\n\tprivate readonly _showOnSuggestConflict;\n\n\tconstructor(\n\t\tpublic readonly textModel: ITextModel,\n\t\tprivate readonly _selectedSuggestItem: IObservable<SuggestItemInfo | undefined>,\n\t\tpublic readonly _textModelVersionId: IObservableWithChange<number | null, IModelContentChangedEvent | undefined>,\n\t\tprivate readonly _positions: IObservable<readonly Position[]>,\n\t\tprivate readonly _debounceValue: IFeatureDebounceInformation,\n\t\tprivate readonly _enabled: IObservable<boolean>,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ILanguageConfigurationService private readonly _languageConfigurationService: ILanguageConfigurationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IInlineCompletionsService private readonly _inlineCompletionsService: IInlineCompletionsService\n\t) {\n\t\tsuper();\n\t\tthis._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this._textModelVersionId, this._debounceValue, this.primaryPosition));\n\t\tthis.lastTriggerKind = this._source.inlineCompletions.map(this, v => v?.request?.context.triggerKind);\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst suggest = this._editorObs.getOption(EditorOption.suggest);\n\t\tthis._suggestPreviewEnabled = suggest.map(v => v.preview);\n\t\tthis._suggestPreviewMode = suggest.map(v => v.previewMode);\n\n\t\tconst inlineSuggest = this._editorObs.getOption(EditorOption.inlineSuggest);\n\t\tthis._inlineSuggestMode = inlineSuggest.map(v => v.mode);\n\t\tthis._suppressedInlineCompletionGroupIds = inlineSuggest.map(v => new Set(v.experimental.suppressInlineSuggestions.split(',')));\n\t\tthis._inlineEditsEnabled = inlineSuggest.map(v => !!v.edits.enabled);\n\t\tthis._inlineEditsShowCollapsedEnabled = inlineSuggest.map(s => s.edits.showCollapsed);\n\t\tthis._triggerCommandOnProviderChange = inlineSuggest.map(s => s.triggerCommandOnProviderChange);\n\t\tthis._minShowDelay = inlineSuggest.map(s => s.minShowDelay);\n\t\tthis._showOnSuggestConflict = inlineSuggest.map(s => s.experimental.showOnSuggestConflict);\n\n\t\tthis._typing = this._register(new TypingInterval(this.textModel));\n\n\t\tthis._register(this._inlineCompletionsService.onDidChangeIsSnoozing((isSnoozing) => {\n\t\t\tif (isSnoozing) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\t\t}));\n\n\t\t{ // Determine editor type\n\t\t\tconst isNotebook = this.textModel.uri.scheme === 'vscode-notebook-cell';\n\t\t\tconst [diffEditor] = this._codeEditorService.listDiffEditors()\n\t\t\t\t.filter(d =>\n\t\t\t\t\td.getOriginalEditor().getId() === this._editor.getId() ||\n\t\t\t\t\td.getModifiedEditor().getId() === this._editor.getId());\n\n\t\t\tthis.isInDiffEditor = !!diffEditor;\n\t\t\tthis.editorType = isNotebook ? InlineCompletionEditorType.Notebook\n\t\t\t\t: this.isInDiffEditor ? InlineCompletionEditorType.DiffEditor\n\t\t\t\t\t: InlineCompletionEditorType.TextEditor;\n\t\t}\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this.state, (s) => {\n\t\t\tif (s && s.inlineCompletion) {\n\t\t\t\tthis._inlineCompletionsService.reportNewCompletion(s.inlineCompletion.requestUuid);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(recomputeInitiallyAndOnChange(this._fetchInlineCompletionsPromise));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._editorObs.versionId.read(reader);\n\t\t\tthis._inAcceptFlow.set(false, undefined);\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst jumpToReset = this.state.map((s, reader) => !s || s.kind === 'inlineEdit' && !s.cursorAtInlineEdit.read(reader)).read(reader);\n\t\t\tif (jumpToReset) {\n\t\t\t\tthis._jumpedToId.set(undefined, undefined);\n\t\t\t}\n\t\t}));\n\n\t\tconst inlineEditSemanticId = this.inlineEditState.map(s => s?.inlineCompletion.semanticId);\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst id = inlineEditSemanticId.read(reader);\n\t\t\tif (id) {\n\t\t\t\tthis._editor.pushUndoStop();\n\t\t\t\tthis._lastShownInlineCompletionInfo = {\n\t\t\t\t\talternateTextModelVersionId: this.textModel.getAlternativeVersionId(),\n\t\t\t\t\tinlineCompletion: this.state.get()!.inlineCompletion!,\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\t// TODO: should use getAvailableProviders and update on _suppressedInlineCompletionGroupIds change\n\t\tconst inlineCompletionProviders = observableFromEvent(this._languageFeaturesService.inlineCompletionsProvider.onDidChange, () => this._languageFeaturesService.inlineCompletionsProvider.all(textModel));\n\t\tmapObservableArrayCached(this, inlineCompletionProviders, (provider, store) => {\n\t\t\tif (!provider.onDidChangeInlineCompletions) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstore.add(provider.onDidChangeInlineCompletions(() => {\n\t\t\t\tif (!this._enabled.get()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Only update the active editor\n\t\t\t\tconst activeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n\t\t\t\tif (activeEditor !== this._editor) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this._triggerCommandOnProviderChange.get()) {\n\t\t\t\t\t// TODO@hediet remove this and always do the else branch.\n\t\t\t\t\tthis.trigger(undefined, { onlyFetchInlineEdits: true });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\t// If there is an active suggestion from a different provider, we ignore the update\n\t\t\t\tconst activeState = this.state.get();\n\t\t\t\tif (activeState && (activeState.inlineCompletion || activeState.edits) && activeState.inlineCompletion?.source.provider !== provider) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\tthis._fetchSpecificProviderSignal.trigger(tx, provider);\n\t\t\t\t\tthis.trigger(tx);\n\t\t\t\t});\n\n\t\t\t}));\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tthis._didUndoInlineEdits.recomputeInitiallyAndOnChange(this._store);\n\t}\n\n\tprivate _lastShownInlineCompletionInfo: { alternateTextModelVersionId: number; /* already freed! */ inlineCompletion: InlineSuggestionItem } | undefined = undefined;\n\tprivate _lastAcceptedInlineCompletionInfo: { textModelVersionIdAfter: number; /* already freed! */ inlineCompletion: InlineSuggestionItem } | undefined = undefined;\n\tprivate readonly _didUndoInlineEdits = derivedHandleChanges({\n\t\towner: this,\n\t\tchangeTracker: {\n\t\t\tcreateChangeSummary: () => ({ didUndo: false }),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\tchangeSummary.didUndo = ctx.didChange(this._textModelVersionId) && !!ctx.change?.isUndoing;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}, (reader, changeSummary) => {\n\t\tconst versionId = this._textModelVersionId.read(reader);\n\t\tif (versionId !== null\n\t\t\t&& this._lastAcceptedInlineCompletionInfo\n\t\t\t&& this._lastAcceptedInlineCompletionInfo.textModelVersionIdAfter === versionId - 1\n\t\t\t&& this._lastAcceptedInlineCompletionInfo.inlineCompletion.isInlineEdit\n\t\t\t&& changeSummary.didUndo\n\t\t) {\n\t\t\tthis._lastAcceptedInlineCompletionInfo = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t});\n\n\tpublic getIndentationInfo(reader: IReader) {\n\t\tlet startsWithIndentation = false;\n\t\tlet startsWithIndentationLessThanTabSize = true;\n\t\tconst ghostText = this?.primaryGhostText.read(reader);\n\t\tif (!!this?._selectedSuggestItem && ghostText && ghostText.parts.length > 0) {\n\t\t\tconst { column, lines } = ghostText.parts[0];\n\n\t\t\tconst firstLine = lines[0].line;\n\n\t\t\tconst indentationEndColumn = this.textModel.getLineIndentColumn(ghostText.lineNumber);\n\t\t\tconst inIndentation = column <= indentationEndColumn;\n\n\t\t\tif (inIndentation) {\n\t\t\t\tlet firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n\t\t\t\tif (firstNonWsIdx === -1) {\n\t\t\t\t\tfirstNonWsIdx = firstLine.length - 1;\n\t\t\t\t}\n\t\t\t\tstartsWithIndentation = firstNonWsIdx > 0;\n\n\t\t\t\tconst tabSize = this.textModel.getOptions().tabSize;\n\t\t\t\tconst visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n\t\t\t\tstartsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tstartsWithIndentation,\n\t\t\tstartsWithIndentationLessThanTabSize,\n\t\t};\n\t}\n\n\tprivate readonly _preserveCurrentCompletionReasons = new Set([\n\t\tVersionIdChangeReason.Redo,\n\t\tVersionIdChangeReason.Undo,\n\t\tVersionIdChangeReason.AcceptWord,\n\t]);\n\n\tprivate _getReason(e: IModelContentChangedEvent | undefined): VersionIdChangeReason {\n\t\tif (e?.isUndoing) { return VersionIdChangeReason.Undo; }\n\t\tif (e?.isRedoing) { return VersionIdChangeReason.Redo; }\n\t\tif (this.isAcceptingPartially) { return VersionIdChangeReason.AcceptWord; }\n\t\treturn VersionIdChangeReason.Other;\n\t}\n\n\tpublic readonly dontRefetchSignal = observableSignal(this);\n\n\tprivate readonly _fetchInlineCompletionsPromise = derivedHandleChanges({\n\t\towner: this,\n\t\tchangeTracker: {\n\t\t\tcreateChangeSummary: () => ({\n\t\t\t\tdontRefetch: false,\n\t\t\t\tpreserveCurrentCompletion: false,\n\t\t\t\tinlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic,\n\t\t\t\tonlyRequestInlineEdits: false,\n\t\t\t\tshouldDebounce: true,\n\t\t\t\tprovider: undefined as InlineCompletionsProvider | undefined,\n\t\t\t\ttextChange: false,\n\t\t\t\tchangeReason: '',\n\t\t\t}),\n\t\t\thandleChange: (ctx, changeSummary) => {\n\t\t\t\t/** @description fetch inline completions */\n\t\t\t\tif (ctx.didChange(this._textModelVersionId)) {\n\t\t\t\t\tif (this._preserveCurrentCompletionReasons.has(this._getReason(ctx.change))) {\n\t\t\t\t\t\tchangeSummary.preserveCurrentCompletion = true;\n\t\t\t\t\t}\n\t\t\t\t\tconst detailedReasons = ctx.change?.detailedReasons ?? [];\n\t\t\t\t\tchangeSummary.changeReason = detailedReasons.length > 0 ? detailedReasons[0].getType() : '';\n\t\t\t\t\tchangeSummary.textChange = true;\n\t\t\t\t} else if (ctx.didChange(this._forceUpdateExplicitlySignal)) {\n\t\t\t\t\tchangeSummary.preserveCurrentCompletion = true;\n\t\t\t\t\tchangeSummary.inlineCompletionTriggerKind = InlineCompletionTriggerKind.Explicit;\n\t\t\t\t} else if (ctx.didChange(this.dontRefetchSignal)) {\n\t\t\t\t\tchangeSummary.dontRefetch = true;\n\t\t\t\t} else if (ctx.didChange(this._onlyRequestInlineEditsSignal)) {\n\t\t\t\t\tchangeSummary.onlyRequestInlineEdits = true;\n\t\t\t\t} else if (ctx.didChange(this._fetchSpecificProviderSignal)) {\n\t\t\t\t\tchangeSummary.provider = ctx.change;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t},\n\t\t},\n\t}, (reader, changeSummary) => {\n\t\tthis._source.clearOperationOnTextModelChange.read(reader); // Make sure the clear operation runs before the fetch operation\n\t\tthis._noDelaySignal.read(reader);\n\t\tthis.dontRefetchSignal.read(reader);\n\t\tthis._onlyRequestInlineEditsSignal.read(reader);\n\t\tthis._forceUpdateExplicitlySignal.read(reader);\n\t\tthis._fetchSpecificProviderSignal.read(reader);\n\t\tconst shouldUpdate = ((this._enabled.read(reader) && this._selectedSuggestItem.read(reader)) || this._isActive.read(reader))\n\t\t\t&& (!this._inlineCompletionsService.isSnoozing() || changeSummary.inlineCompletionTriggerKind === InlineCompletionTriggerKind.Explicit);\n\t\tif (!shouldUpdate) {\n\t\t\tthis._source.cancelUpdate();\n\t\t\treturn undefined;\n\t\t}\n\n\t\tthis._textModelVersionId.read(reader); // Refetch on text change\n\n\t\tconst suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n\t\tlet suggestItem = this._selectedSuggestItem.read(reader);\n\t\tif (this._shouldShowOnSuggestConflict.get()) {\n\t\t\tsuggestItem = undefined;\n\t\t}\n\t\tif (suggestWidgetInlineCompletions && !suggestItem) {\n\t\t\tthis._source.seedInlineCompletionsWithSuggestWidget();\n\t\t}\n\n\t\tif (changeSummary.dontRefetch) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (this._didUndoInlineEdits.read(reader) && changeSummary.inlineCompletionTriggerKind !== InlineCompletionTriggerKind.Explicit) {\n\t\t\ttransaction(tx => {\n\t\t\t\tthis._source.clear(tx);\n\t\t\t});\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet reason: string = '';\n\t\tif (changeSummary.provider) {\n\t\t\treason += 'providerOnDidChange';\n\t\t} else if (changeSummary.inlineCompletionTriggerKind === InlineCompletionTriggerKind.Explicit) {\n\t\t\treason += 'explicit';\n\t\t}\n\t\tif (changeSummary.changeReason) {\n\t\t\treason += reason.length > 0 ? `:${changeSummary.changeReason}` : changeSummary.changeReason;\n\t\t}\n\n\t\tconst typingInterval = this._typing.getTypingInterval();\n\t\tconst requestInfo: InlineSuggestRequestInfo = {\n\t\t\teditorType: this.editorType,\n\t\t\tstartTime: Date.now(),\n\t\t\tlanguageId: this.textModel.getLanguageId(),\n\t\t\treason,\n\t\t\ttypingInterval: typingInterval.averageInterval,\n\t\t\ttypingIntervalCharacterCount: typingInterval.characterCount,\n\t\t};\n\n\t\tlet context: InlineCompletionContextWithoutUuid = {\n\t\t\ttriggerKind: changeSummary.inlineCompletionTriggerKind,\n\t\t\tselectedSuggestionInfo: suggestItem?.toSelectedSuggestionInfo(),\n\t\t\tincludeInlineCompletions: !changeSummary.onlyRequestInlineEdits,\n\t\t\tincludeInlineEdits: this._inlineEditsEnabled.read(reader),\n\t\t\trequestIssuedDateTime: requestInfo.startTime,\n\t\t\tearliestShownDateTime: requestInfo.startTime + (changeSummary.inlineCompletionTriggerKind === InlineCompletionTriggerKind.Explicit || this.inAcceptFlow.get() ? 0 : this._minShowDelay.get()),\n\t\t};\n\n\t\tif (context.triggerKind === InlineCompletionTriggerKind.Automatic && changeSummary.textChange) {\n\t\t\tif (this.textModel.getAlternativeVersionId() === this._lastShownInlineCompletionInfo?.alternateTextModelVersionId) {\n\t\t\t\t// When undoing back to a version where an inline edit/completion was shown,\n\t\t\t\t// we want to show an inline edit (or completion) again if it was originally an inline edit (or completion).\n\t\t\t\tcontext = {\n\t\t\t\t\t...context,\n\t\t\t\t\tincludeInlineCompletions: !this._lastShownInlineCompletionInfo.inlineCompletion.isInlineEdit,\n\t\t\t\t\tincludeInlineEdits: this._lastShownInlineCompletionInfo.inlineCompletion.isInlineEdit,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tconst itemToPreserveCandidate = this.selectedInlineCompletion.get() ?? this._inlineCompletionItems.get()?.inlineEdit;\n\t\tconst itemToPreserve = changeSummary.preserveCurrentCompletion || itemToPreserveCandidate?.forwardStable\n\t\t\t? itemToPreserveCandidate : undefined;\n\t\tconst userJumpedToActiveCompletion = this._jumpedToId.map(jumpedTo => !!jumpedTo && jumpedTo === this._inlineCompletionItems.get()?.inlineEdit?.semanticId);\n\n\t\tconst providers = changeSummary.provider\n\t\t\t? { providers: [changeSummary.provider], label: 'single:' + changeSummary.provider.providerId?.toString() }\n\t\t\t: { providers: this._languageFeaturesService.inlineCompletionsProvider.all(this.textModel), label: undefined }; // TODO: should use inlineCompletionProviders\n\t\tconst availableProviders = this.getAvailableProviders(providers.providers);\n\n\t\treturn this._source.fetch(availableProviders, providers.label, context, itemToPreserve?.identity, changeSummary.shouldDebounce, userJumpedToActiveCompletion, requestInfo);\n\t});\n\n\t// TODO: This is not an ideal implementation of excludesGroupIds, however as this is currently still behind proposed API\n\t// and due to the time constraints, we are using a simplified approach\n\tprivate getAvailableProviders(providers: InlineCompletionsProvider<InlineCompletions<InlineCompletion>>[]): InlineCompletionsProvider[] {\n\t\tconst suppressedProviderGroupIds = this._suppressedInlineCompletionGroupIds.get();\n\t\tconst unsuppressedProviders = providers.filter(provider => !(provider.groupId && suppressedProviderGroupIds.has(provider.groupId)));\n\n\t\tconst excludedGroupIds = new Set<string>();\n\t\tfor (const provider of unsuppressedProviders) {\n\t\t\tprovider.excludesGroupIds?.forEach(p => excludedGroupIds.add(p));\n\t\t}\n\n\t\tconst availableProviders: InlineCompletionsProvider<InlineCompletions<InlineCompletion>>[] = [];\n\t\tfor (const provider of unsuppressedProviders) {\n\t\t\tif (provider.groupId && excludedGroupIds.has(provider.groupId)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tavailableProviders.push(provider);\n\t\t}\n\n\t\treturn availableProviders;\n\t}\n\n\tpublic async trigger(tx?: ITransaction, options?: { onlyFetchInlineEdits?: boolean; noDelay?: boolean }): Promise<void> {\n\t\tsubtransaction(tx, tx => {\n\t\t\tif (options?.onlyFetchInlineEdits) {\n\t\t\t\tthis._onlyRequestInlineEditsSignal.trigger(tx);\n\t\t\t}\n\t\t\tif (options?.noDelay) {\n\t\t\t\tthis._noDelaySignal.trigger(tx);\n\t\t\t}\n\t\t\tthis._isActive.set(true, tx);\n\t\t});\n\t\tawait this._fetchInlineCompletionsPromise.get();\n\t}\n\n\tpublic async triggerExplicitly(tx?: ITransaction, onlyFetchInlineEdits: boolean = false): Promise<void> {\n\t\tsubtransaction(tx, tx => {\n\t\t\tif (onlyFetchInlineEdits) {\n\t\t\t\tthis._onlyRequestInlineEditsSignal.trigger(tx);\n\t\t\t}\n\t\t\tthis._isActive.set(true, tx);\n\t\t\tthis._inAcceptFlow.set(true, tx);\n\t\t\tthis._forceUpdateExplicitlySignal.trigger(tx);\n\t\t});\n\t\tawait this._fetchInlineCompletionsPromise.get();\n\t}\n\n\tpublic stop(stopReason: 'explicitCancel' | 'automatic' = 'automatic', tx?: ITransaction): void {\n\t\tsubtransaction(tx, tx => {\n\t\t\tif (stopReason === 'explicitCancel') {\n\t\t\t\tconst inlineCompletion = this.state.get()?.inlineCompletion;\n\t\t\t\tif (inlineCompletion) {\n\t\t\t\t\tinlineCompletion.reportEndOfLife({ kind: InlineCompletionEndOfLifeReasonKind.Rejected });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._isActive.set(false, tx);\n\t\t\tthis._source.clear(tx);\n\t\t});\n\t}\n\n\tprivate readonly _inlineCompletionItems = derivedOpts({ owner: this }, reader => {\n\t\tconst c = this._source.inlineCompletions.read(reader);\n\t\tif (!c) { return undefined; }\n\t\tconst cursorPosition = this.primaryPosition.read(reader);\n\t\tlet inlineEdit: InlineEditItem | undefined = undefined;\n\t\tconst visibleCompletions: InlineCompletionItem[] = [];\n\t\tfor (const completion of c.inlineCompletions) {\n\t\t\tif (!completion.isInlineEdit) {\n\t\t\t\tif (completion.isVisible(this.textModel, cursorPosition)) {\n\t\t\t\t\tvisibleCompletions.push(completion);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinlineEdit = completion;\n\t\t\t}\n\t\t}\n\n\t\tif (visibleCompletions.length !== 0) {\n\t\t\t// Don't show the inline edit if there is a visible completion\n\t\t\tinlineEdit = undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tinlineCompletions: visibleCompletions,\n\t\t\tinlineEdit,\n\t\t};\n\t});\n\n\tprivate readonly _filteredInlineCompletionItems = derivedOpts({ owner: this, equalsFn: itemsEquals() }, reader => {\n\t\tconst c = this._inlineCompletionItems.read(reader);\n\t\treturn c?.inlineCompletions ?? [];\n\t});\n\n\tpublic readonly selectedInlineCompletionIndex = derived<number>(this, (reader) => {\n\t\tconst selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n\t\tconst filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this._selectedInlineCompletionId === undefined ? -1\n\t\t\t: filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n\t\tif (idx === -1) {\n\t\t\t// Reset the selection so that the selection does not jump back when it appears again\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t\treturn 0;\n\t\t}\n\t\treturn idx;\n\t});\n\n\tpublic readonly selectedInlineCompletion = derived<InlineCompletionItem | undefined>(this, (reader) => {\n\t\tconst filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n\t\tconst idx = this.selectedInlineCompletionIndex.read(reader);\n\t\treturn filteredCompletions[idx];\n\t});\n\n\tpublic readonly activeCommands = derivedOpts<InlineCompletionCommand[]>({ owner: this, equalsFn: itemsEquals() },\n\t\tr => this.selectedInlineCompletion.read(r)?.source.inlineSuggestions.commands ?? []\n\t);\n\n\tpublic readonly lastTriggerKind: IObservable<InlineCompletionTriggerKind | undefined>;\n\n\tpublic readonly inlineCompletionsCount = derived<number | undefined>(this, reader => {\n\t\tif (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n\t\t\treturn this._filteredInlineCompletionItems.read(reader).length;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t});\n\n\tprivate readonly _hasVisiblePeekWidgets = derived(this, reader => this._editorObs.openedPeekWidgets.read(reader) > 0);\n\n\tprivate readonly _shouldShowOnSuggestConflict = derived(this, reader => {\n\t\tconst showOnSuggestConflict = this._showOnSuggestConflict.read(reader);\n\t\tif (showOnSuggestConflict !== 'never') {\n\t\t\tconst hasInlineCompletion = !!this.selectedInlineCompletion.read(reader);\n\t\t\tif (hasInlineCompletion) {\n\t\t\t\tconst item = this._selectedSuggestItem.read(reader);\n\t\t\t\tif (!item) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (showOnSuggestConflict === 'whenSuggestListIsIncomplete') {\n\t\t\t\t\treturn item.listIncomplete;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t});\n\n\tpublic readonly state = derivedOpts<{\n\t\tkind: 'ghostText';\n\t\tedits: readonly TextReplacement[];\n\t\tprimaryGhostText: GhostTextOrReplacement;\n\t\tghostTexts: readonly GhostTextOrReplacement[];\n\t\tsuggestItem: SuggestItemInfo | undefined;\n\t\tinlineCompletion: InlineCompletionItem | undefined;\n\t} | {\n\t\tkind: 'inlineEdit';\n\t\tedits: readonly TextReplacement[];\n\t\tinlineEdit: InlineEdit;\n\t\tinlineCompletion: InlineEditItem;\n\t\tcursorAtInlineEdit: IObservable<boolean>;\n\t\tnextEditUri: URI | undefined;\n\t} | undefined>({\n\t\towner: this,\n\t\tequalsFn: (a, b) => {\n\t\t\tif (!a || !b) { return a === b; }\n\n\t\t\tif (a.kind === 'ghostText' && b.kind === 'ghostText') {\n\t\t\t\treturn ghostTextsOrReplacementsEqual(a.ghostTexts, b.ghostTexts)\n\t\t\t\t\t&& a.inlineCompletion === b.inlineCompletion\n\t\t\t\t\t&& a.suggestItem === b.suggestItem;\n\t\t\t} else if (a.kind === 'inlineEdit' && b.kind === 'inlineEdit') {\n\t\t\t\treturn a.inlineEdit.equals(b.inlineEdit);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t}, (reader) => {\n\t\tconst model = this.textModel;\n\n\t\tconst item = this._inlineCompletionItems.read(reader);\n\t\tconst inlineEditResult = item?.inlineEdit;\n\t\tif (inlineEditResult) {\n\t\t\tif (this._hasVisiblePeekWidgets.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet edit = inlineEditResult.getSingleTextEdit();\n\t\t\tedit = singleTextRemoveCommonPrefix(edit, model);\n\n\t\t\tconst cursorAtInlineEdit = this.primaryPosition.map(cursorPos => LineRange.fromRangeInclusive(inlineEditResult.targetRange).addMargin(1, 1).contains(cursorPos.lineNumber));\n\n\t\t\tconst commands = inlineEditResult.source.inlineSuggestions.commands;\n\t\t\tconst inlineEdit = new InlineEdit(edit, commands ?? [], inlineEditResult);\n\n\t\t\tconst edits = inlineEditResult.updatedEdit;\n\t\t\tconst e = edits ? TextEdit.fromStringEdit(edits, new TextModelText(this.textModel)).replacements : [edit];\n\t\t\tconst nextEditUri = (item.inlineEdit?.command?.id === 'vscode.open' || item.inlineEdit?.command?.id === '_workbench.open') &&\n\t\t\t\titem.inlineEdit?.command.arguments?.length ? URI.from(item.inlineEdit?.command.arguments[0]) : undefined;\n\t\t\treturn { kind: 'inlineEdit', inlineEdit, inlineCompletion: inlineEditResult, edits: e, cursorAtInlineEdit, nextEditUri };\n\t\t}\n\n\t\tconst suggestItem = this._selectedSuggestItem.read(reader);\n\t\tif (!this._shouldShowOnSuggestConflict.read(reader) && suggestItem) {\n\t\t\tconst suggestCompletionEdit = singleTextRemoveCommonPrefix(suggestItem.getSingleTextEdit(), model);\n\t\t\tconst augmentation = this._computeAugmentation(suggestCompletionEdit, reader);\n\n\t\t\tconst isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n\t\t\tif (!isSuggestionPreviewEnabled && !augmentation) { return undefined; }\n\n\t\t\tconst fullEdit = augmentation?.edit ?? suggestCompletionEdit;\n\t\t\tconst fullEditPreviewLength = augmentation ? augmentation.edit.text.length - suggestCompletionEdit.text.length : 0;\n\n\t\t\tconst mode = this._suggestPreviewMode.read(reader);\n\t\t\tconst positions = this._positions.read(reader);\n\t\t\tconst allPotentialEdits = [fullEdit, ...getSecondaryEdits(this.textModel, positions, fullEdit)];\n\t\t\tconst validEditsAndGhostTexts = allPotentialEdits\n\t\t\t\t.map((edit, idx) => ({ edit, ghostText: edit ? computeGhostText(edit, model, mode, positions[idx], fullEditPreviewLength) : undefined }))\n\t\t\t\t.filter(({ edit, ghostText }) => edit !== undefined && ghostText !== undefined);\n\t\t\tconst edits = validEditsAndGhostTexts.map(({ edit }) => edit!);\n\t\t\tconst ghostTexts = validEditsAndGhostTexts.map(({ ghostText }) => ghostText!);\n\t\t\tconst primaryGhostText = ghostTexts[0] ?? new GhostText(fullEdit.range.endLineNumber, []);\n\t\t\treturn { kind: 'ghostText', edits, primaryGhostText, ghostTexts, inlineCompletion: augmentation?.completion, suggestItem };\n\t\t} else {\n\t\t\tif (!this._isActive.read(reader)) { return undefined; }\n\t\t\tconst inlineCompletion = this.selectedInlineCompletion.read(reader);\n\t\t\tif (!inlineCompletion) { return undefined; }\n\n\t\t\tconst replacement = inlineCompletion.getSingleTextEdit();\n\t\t\tconst mode = this._inlineSuggestMode.read(reader);\n\t\t\tconst positions = this._positions.read(reader);\n\t\t\tconst allPotentialEdits = [replacement, ...getSecondaryEdits(this.textModel, positions, replacement)];\n\t\t\tconst validEditsAndGhostTexts = allPotentialEdits\n\t\t\t\t.map((edit, idx) => ({ edit, ghostText: edit ? computeGhostText(edit, model, mode, positions[idx], 0) : undefined }))\n\t\t\t\t.filter(({ edit, ghostText }) => edit !== undefined && ghostText !== undefined);\n\t\t\tconst edits = validEditsAndGhostTexts.map(({ edit }) => edit!);\n\t\t\tconst ghostTexts = validEditsAndGhostTexts.map(({ ghostText }) => ghostText!);\n\t\t\tif (!ghostTexts[0]) { return undefined; }\n\t\t\treturn { kind: 'ghostText', edits, primaryGhostText: ghostTexts[0], ghostTexts, inlineCompletion, suggestItem: undefined };\n\t\t}\n\t});\n\n\tpublic readonly inlineCompletionState = derived(this, reader => {\n\t\tconst s = this.state.read(reader);\n\t\tif (!s || s.kind !== 'ghostText') {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (this._editorObs.inComposition.read(reader)) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn s;\n\t});\n\n\tpublic readonly inlineEditState = derived(this, reader => {\n\t\tconst s = this.state.read(reader);\n\t\tif (!s || s.kind !== 'inlineEdit') {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn s;\n\t});\n\n\tpublic readonly inlineEditAvailable = derived(this, reader => {\n\t\tconst s = this.inlineEditState.read(reader);\n\t\treturn !!s;\n\t});\n\n\tprivate _computeAugmentation(suggestCompletion: TextReplacement, reader: IReader | undefined) {\n\t\tconst model = this.textModel;\n\t\tconst suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n\t\tconst candidateInlineCompletions = suggestWidgetInlineCompletions\n\t\t\t? suggestWidgetInlineCompletions.inlineCompletions.filter(c => !c.isInlineEdit)\n\t\t\t: [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n\n\t\tconst augmentedCompletion = mapFindFirst(candidateInlineCompletions, completion => {\n\t\t\tlet r = completion.getSingleTextEdit();\n\t\t\tr = singleTextRemoveCommonPrefix(\n\t\t\t\tr,\n\t\t\t\tmodel,\n\t\t\t\tRange.fromPositions(r.range.getStartPosition(), suggestCompletion.range.getEndPosition())\n\t\t\t);\n\t\t\treturn singleTextEditAugments(r, suggestCompletion) ? { completion, edit: r } : undefined;\n\t\t});\n\n\t\treturn augmentedCompletion;\n\t}\n\n\tpublic readonly warning = derived(this, reader => {\n\t\treturn this.inlineCompletionState.read(reader)?.inlineCompletion?.warning;\n\t});\n\n\tpublic readonly ghostTexts = derivedOpts({ owner: this, equalsFn: ghostTextsOrReplacementsEqual }, reader => {\n\t\tconst v = this.inlineCompletionState.read(reader);\n\t\tif (!v) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn v.ghostTexts;\n\t});\n\n\tpublic readonly primaryGhostText = derivedOpts({ owner: this, equalsFn: ghostTextOrReplacementEquals }, reader => {\n\t\tconst v = this.inlineCompletionState.read(reader);\n\t\tif (!v) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn v?.primaryGhostText;\n\t});\n\n\tpublic readonly showCollapsed = derived<boolean>(this, reader => {\n\t\tconst state = this.state.read(reader);\n\t\tif (!state || state.kind !== 'inlineEdit') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (state.inlineCompletion.displayLocation) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst isCurrentModelVersion = state.inlineCompletion.updatedEditModelVersion === this._textModelVersionId.read(reader);\n\t\treturn (this._inlineEditsShowCollapsedEnabled.read(reader) || !isCurrentModelVersion)\n\t\t\t&& this._jumpedToId.read(reader) !== state.inlineCompletion.semanticId\n\t\t\t&& !this._inAcceptFlow.read(reader);\n\t});\n\n\tprivate readonly _tabShouldIndent = derived(this, reader => {\n\t\tif (this._inAcceptFlow.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction isMultiLine(range: Range): boolean {\n\t\t\treturn range.startLineNumber !== range.endLineNumber;\n\t\t}\n\n\t\tfunction getNonIndentationRange(model: ITextModel, lineNumber: number): Range {\n\t\t\tconst columnStart = model.getLineIndentColumn(lineNumber);\n\t\t\tconst lastNonWsColumn = model.getLineLastNonWhitespaceColumn(lineNumber);\n\t\t\tconst columnEnd = Math.max(lastNonWsColumn, columnStart);\n\t\t\treturn new Range(lineNumber, columnStart, lineNumber, columnEnd);\n\t\t}\n\n\t\tconst selections = this._editorObs.selections.read(reader);\n\t\treturn selections?.some(s => {\n\t\t\tif (s.isEmpty()) {\n\t\t\t\treturn this.textModel.getLineLength(s.startLineNumber) === 0;\n\t\t\t} else {\n\t\t\t\treturn isMultiLine(s) || s.containsRange(getNonIndentationRange(this.textModel, s.startLineNumber));\n\t\t\t}\n\t\t});\n\t});\n\n\tpublic readonly tabShouldJumpToInlineEdit = derived(this, reader => {\n\t\tif (this._tabShouldIndent.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst s = this.inlineEditState.read(reader);\n\t\tif (!s) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.showCollapsed.read(reader)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (this._inAcceptFlow.read(reader) && this._appearedInsideViewport.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !s.cursorAtInlineEdit.read(reader);\n\t});\n\n\tpublic readonly tabShouldAcceptInlineEdit = derived(this, reader => {\n\t\tconst s = this.inlineEditState.read(reader);\n\t\tif (!s) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.showCollapsed.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this._inAcceptFlow.read(reader) && this._appearedInsideViewport.read(reader)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (s.inlineCompletion.targetRange.startLineNumber === this._editorObs.cursorLineNumber.read(reader)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._jumpedToId.read(reader) === s.inlineCompletion.semanticId) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._tabShouldIndent.read(reader)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn s.cursorAtInlineEdit.read(reader);\n\t});\n\n\tpublic readonly isInDiffEditor;\n\n\tpublic readonly editorType: InlineCompletionEditorType;\n\n\tprivate async _deltaSelectedInlineCompletionIndex(delta: 1 | -1): Promise<void> {\n\t\tawait this.triggerExplicitly();\n\n\t\tconst completions = this._filteredInlineCompletionItems.get() || [];\n\t\tif (completions.length > 0) {\n\t\t\tconst newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n\t\t\tthis._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n\t\t} else {\n\t\t\tthis._selectedInlineCompletionId.set(undefined, undefined);\n\t\t}\n\t}\n\n\tpublic async next(): Promise<void> { await this._deltaSelectedInlineCompletionIndex(1); }\n\n\tpublic async previous(): Promise<void> { await this._deltaSelectedInlineCompletionIndex(-1); }\n\n\tprivate _getMetadata(completion: InlineSuggestionItem, languageId: string, type: 'word' | 'line' | undefined = undefined): TextModelEditSource {\n\t\tif (type) {\n\t\t\treturn EditSources.inlineCompletionPartialAccept({\n\t\t\t\tnes: completion.isInlineEdit,\n\t\t\t\trequestUuid: completion.requestUuid,\n\t\t\t\tproviderId: completion.source.provider.providerId,\n\t\t\t\tlanguageId,\n\t\t\t\ttype,\n\t\t\t});\n\t\t} else {\n\t\t\treturn EditSources.inlineCompletionAccept({\n\t\t\t\tnes: completion.isInlineEdit,\n\t\t\t\trequestUuid: completion.requestUuid,\n\t\t\t\tproviderId: completion.source.provider.providerId,\n\t\t\t\tlanguageId\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic async accept(editor: ICodeEditor = this._editor): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tlet completion: InlineSuggestionItem;\n\t\tlet isNextEditUri = false;\n\t\tconst state = this.state.get();\n\t\tif (state?.kind === 'ghostText') {\n\t\t\tif (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcompletion = state.inlineCompletion;\n\t\t} else if (state?.kind === 'inlineEdit') {\n\t\t\tcompletion = state.inlineCompletion;\n\t\t\tisNextEditUri = !!state.nextEditUri;\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure the completion list will not be disposed before the text change is sent.\n\t\tcompletion.addRef();\n\n\t\ttry {\n\t\t\teditor.pushUndoStop();\n\t\t\tif (isNextEditUri) {\n\t\t\t\t// Do nothing\n\t\t\t} else if (completion.snippetInfo) {\n\t\t\t\tconst mainEdit = TextReplacement.delete(completion.editRange);\n\t\t\t\tconst additionalEdits = completion.additionalTextEdits.map(e => new TextReplacement(Range.lift(e.range), e.text ?? ''));\n\t\t\t\tconst edit = TextEdit.fromParallelReplacementsUnsorted([mainEdit, ...additionalEdits]);\n\t\t\t\teditor.edit(edit, this._getMetadata(completion, this.textModel.getLanguageId()));\n\n\t\t\t\teditor.setPosition(completion.snippetInfo.range.getStartPosition(), 'inlineCompletionAccept');\n\t\t\t\tSnippetController2.get(editor)?.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n\t\t\t} else {\n\t\t\t\tconst edits = state.edits;\n\n\t\t\t\t// The cursor should move to the end of the edit, not the end of the range provided by the extension\n\t\t\t\t// Inline Edit diffs (human readable) the suggestion from the extension so it already removes common suffix/prefix\n\t\t\t\t// Inline Completions does diff the suggestion so it may contain common suffix\n\t\t\t\tlet minimalEdits = edits;\n\t\t\t\tif (state.kind === 'ghostText') {\n\t\t\t\t\tminimalEdits = removeTextReplacementCommonSuffixPrefix(edits, this.textModel);\n\t\t\t\t}\n\t\t\t\tconst selections = getEndPositionsAfterApplying(minimalEdits).map(p => Selection.fromPositions(p));\n\n\t\t\t\tconst additionalEdits = completion.additionalTextEdits.map(e => new TextReplacement(Range.lift(e.range), e.text ?? ''));\n\t\t\t\tconst edit = TextEdit.fromParallelReplacementsUnsorted([...edits, ...additionalEdits]);\n\n\t\t\t\teditor.edit(edit, this._getMetadata(completion, this.textModel.getLanguageId()));\n\n\t\t\t\tif (completion.displayLocation === undefined) {\n\t\t\t\t\t// do not move the cursor when the completion is displayed in a different location\n\t\t\t\t\teditor.setSelections(state.kind === 'inlineEdit' ? selections.slice(-1) : selections, 'inlineCompletionAccept');\n\t\t\t\t}\n\n\t\t\t\tif (state.kind === 'inlineEdit' && !this._accessibilityService.isMotionReduced()) {\n\t\t\t\t\tconst editRanges = edit.getNewRanges();\n\t\t\t\t\tconst dec = this._store.add(new FadeoutDecoration(editor, editRanges, () => {\n\t\t\t\t\t\tthis._store.delete(dec);\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidAccept.fire();\n\n\t\t\t// Reset before invoking the command, as the command might cause a follow up trigger (which we don't want to reset).\n\t\t\tthis.stop();\n\n\t\t\tif (completion.command) {\n\t\t\t\tawait this._commandService\n\t\t\t\t\t.executeCommand(completion.command.id, ...(completion.command.arguments || []))\n\t\t\t\t\t.then(undefined, onUnexpectedExternalError);\n\t\t\t}\n\n\t\t\tcompletion.reportEndOfLife({ kind: InlineCompletionEndOfLifeReasonKind.Accepted });\n\t\t} finally {\n\t\t\tcompletion.removeRef();\n\t\t\tthis._inAcceptFlow.set(true, undefined);\n\t\t\tthis._lastAcceptedInlineCompletionInfo = { textModelVersionIdAfter: this.textModel.getVersionId(), inlineCompletion: completion };\n\t\t}\n\t}\n\n\tpublic async acceptNextWord(): Promise<void> {\n\t\tawait this._acceptNext(this._editor, 'word', (pos, text) => {\n\t\t\tconst langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n\t\t\tconst config = this._languageConfigurationService.getLanguageConfiguration(langId);\n\t\t\tconst wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n\n\t\t\tconst m1 = text.match(wordRegExp);\n\t\t\tlet acceptUntilIndexExclusive = 0;\n\t\t\tif (m1 && m1.index !== undefined) {\n\t\t\t\tif (m1.index === 0) {\n\t\t\t\t\tacceptUntilIndexExclusive = m1[0].length;\n\t\t\t\t} else {\n\t\t\t\t\tacceptUntilIndexExclusive = m1.index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tacceptUntilIndexExclusive = text.length;\n\t\t\t}\n\n\t\t\tconst wsRegExp = /\\s+/g;\n\t\t\tconst m2 = wsRegExp.exec(text);\n\t\t\tif (m2 && m2.index !== undefined) {\n\t\t\t\tif (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n\t\t\t\t\tacceptUntilIndexExclusive = m2.index + m2[0].length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acceptUntilIndexExclusive;\n\t\t}, PartialAcceptTriggerKind.Word);\n\t}\n\n\tpublic async acceptNextLine(): Promise<void> {\n\t\tawait this._acceptNext(this._editor, 'line', (pos, text) => {\n\t\t\tconst m = text.match(/\\n/);\n\t\t\tif (m && m.index !== undefined) {\n\t\t\t\treturn m.index + 1;\n\t\t\t}\n\t\t\treturn text.length;\n\t\t}, PartialAcceptTriggerKind.Line);\n\t}\n\n\tprivate async _acceptNext(editor: ICodeEditor, type: 'word' | 'line', getAcceptUntilIndex: (position: Position, text: string) => number, kind: PartialAcceptTriggerKind): Promise<void> {\n\t\tif (editor.getModel() !== this.textModel) {\n\t\t\tthrow new BugIndicatingError();\n\t\t}\n\n\t\tconst state = this.inlineCompletionState.get();\n\t\tif (!state || state.primaryGhostText.isEmpty() || !state.inlineCompletion) {\n\t\t\treturn;\n\t\t}\n\t\tconst ghostText = state.primaryGhostText;\n\t\tconst completion = state.inlineCompletion;\n\n\t\tif (completion.snippetInfo) {\n\t\t\t// not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n\t\t\tawait this.accept(editor);\n\t\t\treturn;\n\t\t}\n\n\t\tconst firstPart = ghostText.parts[0];\n\t\tconst ghostTextPos = new Position(ghostText.lineNumber, firstPart.column);\n\t\tconst ghostTextVal = firstPart.text;\n\t\tconst acceptUntilIndexExclusive = getAcceptUntilIndex(ghostTextPos, ghostTextVal);\n\t\tif (acceptUntilIndexExclusive === ghostTextVal.length && ghostText.parts.length === 1) {\n\t\t\tthis.accept(editor);\n\t\t\treturn;\n\t\t}\n\t\tconst partialGhostTextVal = ghostTextVal.substring(0, acceptUntilIndexExclusive);\n\n\t\tconst positions = this._positions.get();\n\t\tconst cursorPosition = positions[0];\n\n\t\t// Executing the edit might free the completion, so we have to hold a reference on it.\n\t\tcompletion.addRef();\n\t\ttry {\n\t\t\tthis._isAcceptingPartially = true;\n\t\t\ttry {\n\t\t\t\teditor.pushUndoStop();\n\t\t\t\tconst replaceRange = Range.fromPositions(cursorPosition, ghostTextPos);\n\t\t\t\tconst newText = editor.getModel()!.getValueInRange(replaceRange) + partialGhostTextVal;\n\t\t\t\tconst primaryEdit = new TextReplacement(replaceRange, newText);\n\t\t\t\tconst edits = [primaryEdit, ...getSecondaryEdits(this.textModel, positions, primaryEdit)].filter(isDefined);\n\t\t\t\tconst selections = getEndPositionsAfterApplying(edits).map(p => Selection.fromPositions(p));\n\n\t\t\t\teditor.edit(TextEdit.fromParallelReplacementsUnsorted(edits), this._getMetadata(completion, type));\n\t\t\t\teditor.setSelections(selections, 'inlineCompletionPartialAccept');\n\t\t\t\teditor.revealPositionInCenterIfOutsideViewport(editor.getPosition()!, ScrollType.Immediate);\n\t\t\t} finally {\n\t\t\t\tthis._isAcceptingPartially = false;\n\t\t\t}\n\n\t\t\tconst acceptedRange = Range.fromPositions(completion.editRange.getStartPosition(), TextLength.ofText(partialGhostTextVal).addToPosition(ghostTextPos));\n\t\t\t// This assumes that the inline completion and the model use the same EOL style.\n\t\t\tconst text = editor.getModel()!.getValueInRange(acceptedRange, EndOfLinePreference.LF);\n\t\t\tconst acceptedLength = text.length;\n\t\t\tcompletion.reportPartialAccept(\n\t\t\t\tacceptedLength,\n\t\t\t\t{ kind, acceptedLength: acceptedLength },\n\t\t\t\t{ characters: acceptUntilIndexExclusive, ratio: acceptUntilIndexExclusive / ghostTextVal.length, count: 1 }\n\t\t\t);\n\n\t\t} finally {\n\t\t\tcompletion.removeRef();\n\t\t}\n\t}\n\n\tpublic handleSuggestAccepted(item: SuggestItemInfo) {\n\t\tconst itemEdit = singleTextRemoveCommonPrefix(item.getSingleTextEdit(), this.textModel);\n\t\tconst augmentedCompletion = this._computeAugmentation(itemEdit, undefined);\n\t\tif (!augmentedCompletion) { return; }\n\n\t\t// This assumes that the inline completion and the model use the same EOL style.\n\t\tconst alreadyAcceptedLength = this.textModel.getValueInRange(augmentedCompletion.completion.editRange, EndOfLinePreference.LF).length;\n\t\tconst acceptedLength = alreadyAcceptedLength + itemEdit.text.length;\n\n\t\taugmentedCompletion.completion.reportPartialAccept(itemEdit.text.length, {\n\t\t\tkind: PartialAcceptTriggerKind.Suggest,\n\t\t\tacceptedLength,\n\t\t}, {\n\t\t\tcharacters: itemEdit.text.length,\n\t\t\tcount: 1,\n\t\t\tratio: 1\n\t\t});\n\t}\n\n\tpublic extractReproSample(): Repro {\n\t\tconst value = this.textModel.getValue();\n\t\tconst item = this.state.get()?.inlineCompletion;\n\t\treturn {\n\t\t\tdocumentValue: value,\n\t\t\tinlineCompletion: item?.getSourceCompletion(),\n\t\t};\n\t}\n\n\tprivate readonly _jumpedToId = observableValue<undefined | string>(this, undefined);\n\tprivate readonly _inAcceptFlow = observableValue(this, false);\n\tpublic readonly inAcceptFlow: IObservable<boolean> = this._inAcceptFlow;\n\n\tpublic jump(): void {\n\t\tconst s = this.inlineEditState.get();\n\t\tif (!s) { return; }\n\n\t\ttransaction(tx => {\n\t\t\tthis._jumpedToId.set(s.inlineCompletion.semanticId, tx);\n\t\t\tthis.dontRefetchSignal.trigger(tx);\n\t\t\tconst targetRange = s.inlineCompletion.targetRange;\n\t\t\tconst targetPosition = targetRange.getStartPosition();\n\t\t\tthis._editor.setPosition(targetPosition, 'inlineCompletions.jump');\n\n\t\t\t// TODO: consider using view information to reveal it\n\t\t\tconst isSingleLineChange = targetRange.isSingleLine() && (s.inlineCompletion.displayLocation || !s.inlineCompletion.insertText.includes('\\n'));\n\t\t\tif (isSingleLineChange) {\n\t\t\t\tthis._editor.revealPosition(targetPosition);\n\t\t\t} else {\n\t\t\t\tconst revealRange = new Range(targetRange.startLineNumber - 1, 1, targetRange.endLineNumber + 1, 1);\n\t\t\t\tthis._editor.revealRange(revealRange, ScrollType.Immediate);\n\t\t\t}\n\n\t\t\tthis._editor.focus();\n\t\t});\n\t}\n\n\tpublic async handleInlineSuggestionShown(inlineCompletion: InlineSuggestionItem, viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData): Promise<void> {\n\t\tawait inlineCompletion.reportInlineEditShown(this._commandService, viewKind, viewData);\n\t}\n}\n\ninterface Repro {\n\tdocumentValue: string;\n\tinlineCompletion: InlineCompletion | undefined;\n}\n\nexport enum VersionIdChangeReason {\n\tUndo,\n\tRedo,\n\tAcceptWord,\n\tOther,\n}\n\nexport function getSecondaryEdits(textModel: ITextModel, positions: readonly Position[], primaryTextRepl: TextReplacement): (TextReplacement | undefined)[] {\n\tif (positions.length === 1) {\n\t\t// No secondary cursor positions\n\t\treturn [];\n\t}\n\tconst text = new TextModelText(textModel);\n\tconst textTransformer = text.getTransformer();\n\tconst primaryOffset = textTransformer.getOffset(positions[0]);\n\tconst secondaryOffsets = positions.slice(1).map(pos => textTransformer.getOffset(pos));\n\n\tprimaryTextRepl = primaryTextRepl.removeCommonPrefixAndSuffix(text);\n\tconst primaryStringRepl = textTransformer.getStringReplacement(primaryTextRepl);\n\n\tconst deltaFromOffsetToRangeStart = primaryStringRepl.replaceRange.start - primaryOffset;\n\tconst primaryContextRange = primaryStringRepl.replaceRange.join(OffsetRange.emptyAt(primaryOffset));\n\tconst primaryContextValue = text.getValueOfOffsetRange(primaryContextRange);\n\n\tconst replacements = secondaryOffsets.map(secondaryOffset => {\n\t\tconst newRangeStart = secondaryOffset + deltaFromOffsetToRangeStart;\n\t\tconst newRangeEnd = newRangeStart + primaryStringRepl.replaceRange.length;\n\t\tconst range = new OffsetRange(newRangeStart, newRangeEnd);\n\n\t\tconst contextRange = range.join(OffsetRange.emptyAt(secondaryOffset));\n\t\tconst contextValue = text.getValueOfOffsetRange(contextRange);\n\t\tif (contextValue !== primaryContextValue) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst stringRepl = new StringReplacement(range, primaryStringRepl.newText);\n\t\tconst repl = textTransformer.getTextReplacement(stringRepl);\n\t\treturn repl;\n\t}).filter(isDefined);\n\n\treturn replacements;\n}\n\nclass FadeoutDecoration extends Disposable {\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tranges: Range[],\n\t\tonDispose?: () => void,\n\t) {\n\t\tsuper();\n\n\t\tif (onDispose) {\n\t\t\tthis._register({ dispose: () => onDispose() });\n\t\t}\n\n\t\tthis._register(observableCodeEditor(editor).setDecorations(constObservable(ranges.map<IModelDeltaDecoration>(range => ({\n\t\t\trange: range,\n\t\t\toptions: {\n\t\t\t\tdescription: 'animation',\n\t\t\t\tclassName: 'edits-fadeout-decoration',\n\t\t\t\tzIndex: 1,\n\t\t\t}\n\t\t})))));\n\n\t\tconst animation = new AnimatedValue(1, 0, 1000, easeOutCubic);\n\t\tconst val = new ObservableAnimatedValue(animation);\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst opacity = val.getValue(reader);\n\t\t\teditor.getContainerDomNode().style.setProperty('--animation-opacity', opacity.toString());\n\t\t\tif (animation.isFinished()) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}));\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4055, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/suggestWidgetAdapter.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/model/suggestWidgetAdapter.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/model/vs/editor/contrib/inlineCompletions/browser/model/suggestWidgetAdapter.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findFirstMax } from '../../../../../base/common/arraysFind.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { CompletionItemInsertTextRule, CompletionItemKind, SelectedSuggestionInfo } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { SnippetParser } from '../../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../../snippet/browser/snippetSession.js';\nimport { CompletionItem } from '../../../suggest/browser/suggest.js';\nimport { SuggestController } from '../../../suggest/browser/suggestController.js';\nimport { ObservableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { observableFromEvent } from '../../../../../base/common/observable.js';\n\nexport class SuggestWidgetAdaptor extends Disposable {\n\tprivate isSuggestWidgetVisible: boolean = false;\n\tprivate isShiftKeyPressed = false;\n\tprivate _isActive = false;\n\tprivate _currentSuggestItemInfo: SuggestItemInfo | undefined = undefined;\n\tpublic get selectedItem(): SuggestItemInfo | undefined {\n\t\treturn this._currentSuggestItemInfo;\n\t}\n\tprivate _onDidSelectedItemChange = this._register(new Emitter<void>());\n\tpublic readonly onDidSelectedItemChange: Event<void> = this._onDidSelectedItemChange.event;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly suggestControllerPreselector: () => TextReplacement | undefined,\n\t\tprivate readonly onWillAccept: (item: SuggestItemInfo) => void,\n\t) {\n\t\tsuper();\n\n\t\t// See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n\t\tthis._register(editor.onKeyDown(e => {\n\t\t\tif (e.shiftKey && !this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = true;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\t\tthis._register(editor.onKeyUp(e => {\n\t\t\tif (e.shiftKey && this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = false;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (suggestController) {\n\t\t\tthis._register(suggestController.registerSelector({\n\t\t\t\tpriority: 100,\n\t\t\t\tselect: (model, pos, suggestItems) => {\n\t\t\t\t\tconst textModel = this.editor.getModel();\n\t\t\t\t\tif (!textModel) {\n\t\t\t\t\t\t// Should not happen\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst i = this.suggestControllerPreselector();\n\t\t\t\t\tconst itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n\t\t\t\t\tif (!itemToPreselect) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tconst position = Position.lift(pos);\n\n\t\t\t\t\tconst candidates = suggestItems\n\t\t\t\t\t\t.map((suggestItem, index) => {\n\t\t\t\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n\t\t\t\t\t\t\tconst suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.getSingleTextEdit(), textModel);\n\t\t\t\t\t\t\tconst valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n\t\t\t\t\t\t\treturn { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(item => item && item.valid && item.prefixLength > 0);\n\n\t\t\t\t\tconst result = findFirstMax(\n\t\t\t\t\t\tcandidates,\n\t\t\t\t\t\tcompareBy(s => s!.prefixLength, numberComparator)\n\t\t\t\t\t);\n\t\t\t\t\treturn result ? result.index : - 1;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet isBoundToSuggestWidget = false;\n\t\t\tconst bindToSuggestWidget = () => {\n\t\t\t\tif (isBoundToSuggestWidget) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tisBoundToSuggestWidget = true;\n\n\t\t\t\tthis._register(suggestController.widget.value.onDidShow(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidHide(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = false;\n\t\t\t\t\tthis.update(false);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidFocus(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t};\n\n\t\t\tthis._register(Event.once(suggestController.model.onDidTrigger)(e => {\n\t\t\t\tbindToSuggestWidget();\n\t\t\t}));\n\n\t\t\tthis._register(suggestController.onWillInsertSuggestItem(e => {\n\t\t\t\tconst position = this.editor.getPosition();\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (!position || !model) { return undefined; }\n\n\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(\n\t\t\t\t\tsuggestController,\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t\te.item,\n\t\t\t\t\tthis.isShiftKeyPressed\n\t\t\t\t);\n\n\t\t\t\tthis.onWillAccept(suggestItemInfo);\n\t\t\t}));\n\t\t}\n\t\tthis.update(this._isActive);\n\t}\n\n\tprivate update(newActive: boolean): void {\n\t\tconst newInlineCompletion = this.getSuggestItemInfo();\n\n\t\tif (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n\t\t\tthis._isActive = newActive;\n\t\t\tthis._currentSuggestItemInfo = newInlineCompletion;\n\n\t\t\tthis._onDidSelectedItemChange.fire();\n\t\t}\n\t}\n\n\tprivate getSuggestItemInfo(): SuggestItemInfo | undefined {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (!suggestController || !this.isSuggestWidgetVisible) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst focusedItem = suggestController.widget.value.getFocusedItem();\n\t\tconst position = this.editor.getPosition();\n\t\tconst model = this.editor.getModel();\n\n\t\tif (!focusedItem || !position || !model) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn SuggestItemInfo.fromSuggestion(\n\t\t\tsuggestController,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tfocusedItem.item,\n\t\t\tthis.isShiftKeyPressed\n\t\t);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.forceRenderingAbove();\n\t}\n}\n\nexport class SuggestItemInfo {\n\tpublic static fromSuggestion(suggestController: SuggestController, model: ITextModel, position: Position, item: CompletionItem, toggleMode: boolean): SuggestItemInfo {\n\t\tlet { insertText } = item.completion;\n\t\tlet isSnippetText = false;\n\t\tif (item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tconst snippet = new SnippetParser().parse(insertText);\n\n\t\t\tif (snippet.children.length < 100) {\n\t\t\t\t// Adjust whitespace is expensive.\n\t\t\t\tSnippetSession.adjustWhitespace(model, position, true, snippet);\n\t\t\t}\n\n\t\t\tinsertText = snippet.toString();\n\t\t\tisSnippetText = true;\n\t\t}\n\n\t\tconst info = suggestController.getOverwriteInfo(item, toggleMode);\n\n\t\treturn new SuggestItemInfo(\n\t\t\tRange.fromPositions(\n\t\t\t\tposition.delta(0, -info.overwriteBefore),\n\t\t\t\tposition.delta(0, Math.max(info.overwriteAfter, 0))\n\t\t\t),\n\t\t\tinsertText,\n\t\t\titem.completion.kind,\n\t\t\tisSnippetText,\n\t\t\titem.container.incomplete ?? false,\n\t\t);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly insertText: string,\n\t\tpublic readonly completionItemKind: CompletionItemKind,\n\t\tpublic readonly isSnippetText: boolean,\n\t\tpublic readonly listIncomplete: boolean,\n\t) { }\n\n\tpublic equals(other: SuggestItemInfo): boolean {\n\t\treturn this.range.equalsRange(other.range)\n\t\t\t&& this.insertText === other.insertText\n\t\t\t&& this.completionItemKind === other.completionItemKind\n\t\t\t&& this.isSnippetText === other.isSnippetText;\n\t}\n\n\tpublic toSelectedSuggestionInfo(): SelectedSuggestionInfo {\n\t\treturn new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n\t}\n\n\tpublic getSingleTextEdit(): TextReplacement {\n\t\treturn new TextReplacement(this.range, this.insertText);\n\t}\n}\n\nfunction suggestItemInfoEquals(a: SuggestItemInfo | undefined, b: SuggestItemInfo | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\treturn a.equals(b);\n}\n\nexport class ObservableSuggestWidgetAdapter extends Disposable {\n\tprivate readonly _suggestWidgetAdaptor;\n\n\tpublic readonly selectedItem;\n\n\tconstructor(\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\n\t\tprivate readonly _handleSuggestAccepted: (item: SuggestItemInfo) => void,\n\t\tprivate readonly _suggestControllerPreselector: () => TextReplacement | undefined,\n\t) {\n\t\tsuper();\n\t\tthis._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(\n\t\t\tthis._editorObs.editor,\n\t\t\t() => {\n\t\t\t\tthis._editorObs.forceUpdate();\n\t\t\t\treturn this._suggestControllerPreselector();\n\t\t\t},\n\t\t\t(item) => this._editorObs.forceUpdate(_tx => {\n\t\t\t\t/** @description InlineCompletionsController.handleSuggestAccepted */\n\t\t\t\tthis._handleSuggestAccepted(item);\n\t\t\t})\n\t\t));\n\t\tthis.selectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n\t\t\tthis._editorObs.forceUpdate(_tx => cb(undefined));\n\t\t}), () => this._suggestWidgetAdaptor.selectedItem);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.forceRenderingAbove();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy, numberComparator } from '../../../../../base/common/arrays.js';\nimport { findFirstMax } from '../../../../../base/common/arraysFind.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../common/core/edits/textEdit.js';\nimport { CompletionItemInsertTextRule, CompletionItemKind, SelectedSuggestionInfo } from '../../../../common/languages.js';\nimport { ITextModel } from '../../../../common/model.js';\nimport { singleTextEditAugments, singleTextRemoveCommonPrefix } from './singleTextEditHelpers.js';\nimport { SnippetParser } from '../../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../../snippet/browser/snippetSession.js';\nimport { CompletionItem } from '../../../suggest/browser/suggest.js';\nimport { SuggestController } from '../../../suggest/browser/suggestController.js';\nimport { ObservableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { observableFromEvent } from '../../../../../base/common/observable.js';\n\nexport class SuggestWidgetAdaptor extends Disposable {\n\tprivate isSuggestWidgetVisible: boolean = false;\n\tprivate isShiftKeyPressed = false;\n\tprivate _isActive = false;\n\tprivate _currentSuggestItemInfo: SuggestItemInfo | undefined = undefined;\n\tpublic get selectedItem(): SuggestItemInfo | undefined {\n\t\treturn this._currentSuggestItemInfo;\n\t}\n\tprivate _onDidSelectedItemChange = this._register(new Emitter<void>());\n\tpublic readonly onDidSelectedItemChange: Event<void> = this._onDidSelectedItemChange.event;\n\n\tconstructor(\n\t\tprivate readonly editor: ICodeEditor,\n\t\tprivate readonly suggestControllerPreselector: () => TextReplacement | undefined,\n\t\tprivate readonly onWillAccept: (item: SuggestItemInfo) => void,\n\t) {\n\t\tsuper();\n\n\t\t// See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n\t\tthis._register(editor.onKeyDown(e => {\n\t\t\tif (e.shiftKey && !this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = true;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\t\tthis._register(editor.onKeyUp(e => {\n\t\t\tif (e.shiftKey && this.isShiftKeyPressed) {\n\t\t\t\tthis.isShiftKeyPressed = false;\n\t\t\t\tthis.update(this._isActive);\n\t\t\t}\n\t\t}));\n\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (suggestController) {\n\t\t\tthis._register(suggestController.registerSelector({\n\t\t\t\tpriority: 100,\n\t\t\t\tselect: (model, pos, suggestItems) => {\n\t\t\t\t\tconst textModel = this.editor.getModel();\n\t\t\t\t\tif (!textModel) {\n\t\t\t\t\t\t// Should not happen\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst i = this.suggestControllerPreselector();\n\t\t\t\t\tconst itemToPreselect = i ? singleTextRemoveCommonPrefix(i, textModel) : undefined;\n\t\t\t\t\tif (!itemToPreselect) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t\tconst position = Position.lift(pos);\n\n\t\t\t\t\tconst candidates = suggestItems\n\t\t\t\t\t\t.map((suggestItem, index) => {\n\t\t\t\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n\t\t\t\t\t\t\tconst suggestItemTextEdit = singleTextRemoveCommonPrefix(suggestItemInfo.getSingleTextEdit(), textModel);\n\t\t\t\t\t\t\tconst valid = singleTextEditAugments(itemToPreselect, suggestItemTextEdit);\n\t\t\t\t\t\t\treturn { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.filter(item => item && item.valid && item.prefixLength > 0);\n\n\t\t\t\t\tconst result = findFirstMax(\n\t\t\t\t\t\tcandidates,\n\t\t\t\t\t\tcompareBy(s => s!.prefixLength, numberComparator)\n\t\t\t\t\t);\n\t\t\t\t\treturn result ? result.index : - 1;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tlet isBoundToSuggestWidget = false;\n\t\t\tconst bindToSuggestWidget = () => {\n\t\t\t\tif (isBoundToSuggestWidget) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tisBoundToSuggestWidget = true;\n\n\t\t\t\tthis._register(suggestController.widget.value.onDidShow(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidHide(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = false;\n\t\t\t\t\tthis.update(false);\n\t\t\t\t}));\n\t\t\t\tthis._register(suggestController.widget.value.onDidFocus(() => {\n\t\t\t\t\tthis.isSuggestWidgetVisible = true;\n\t\t\t\t\tthis.update(true);\n\t\t\t\t}));\n\t\t\t};\n\n\t\t\tthis._register(Event.once(suggestController.model.onDidTrigger)(e => {\n\t\t\t\tbindToSuggestWidget();\n\t\t\t}));\n\n\t\t\tthis._register(suggestController.onWillInsertSuggestItem(e => {\n\t\t\t\tconst position = this.editor.getPosition();\n\t\t\t\tconst model = this.editor.getModel();\n\t\t\t\tif (!position || !model) { return undefined; }\n\n\t\t\t\tconst suggestItemInfo = SuggestItemInfo.fromSuggestion(\n\t\t\t\t\tsuggestController,\n\t\t\t\t\tmodel,\n\t\t\t\t\tposition,\n\t\t\t\t\te.item,\n\t\t\t\t\tthis.isShiftKeyPressed\n\t\t\t\t);\n\n\t\t\t\tthis.onWillAccept(suggestItemInfo);\n\t\t\t}));\n\t\t}\n\t\tthis.update(this._isActive);\n\t}\n\n\tprivate update(newActive: boolean): void {\n\t\tconst newInlineCompletion = this.getSuggestItemInfo();\n\n\t\tif (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n\t\t\tthis._isActive = newActive;\n\t\t\tthis._currentSuggestItemInfo = newInlineCompletion;\n\n\t\t\tthis._onDidSelectedItemChange.fire();\n\t\t}\n\t}\n\n\tprivate getSuggestItemInfo(): SuggestItemInfo | undefined {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tif (!suggestController || !this.isSuggestWidgetVisible) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst focusedItem = suggestController.widget.value.getFocusedItem();\n\t\tconst position = this.editor.getPosition();\n\t\tconst model = this.editor.getModel();\n\n\t\tif (!focusedItem || !position || !model) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn SuggestItemInfo.fromSuggestion(\n\t\t\tsuggestController,\n\t\t\tmodel,\n\t\t\tposition,\n\t\t\tfocusedItem.item,\n\t\t\tthis.isShiftKeyPressed\n\t\t);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tconst suggestController = SuggestController.get(this.editor);\n\t\tsuggestController?.forceRenderingAbove();\n\t}\n}\n\nexport class SuggestItemInfo {\n\tpublic static fromSuggestion(suggestController: SuggestController, model: ITextModel, position: Position, item: CompletionItem, toggleMode: boolean): SuggestItemInfo {\n\t\tlet { insertText } = item.completion;\n\t\tlet isSnippetText = false;\n\t\tif (item.completion.insertTextRules! & CompletionItemInsertTextRule.InsertAsSnippet) {\n\t\t\tconst snippet = new SnippetParser().parse(insertText);\n\n\t\t\tif (snippet.children.length < 100) {\n\t\t\t\t// Adjust whitespace is expensive.\n\t\t\t\tSnippetSession.adjustWhitespace(model, position, true, snippet);\n\t\t\t}\n\n\t\t\tinsertText = snippet.toString();\n\t\t\tisSnippetText = true;\n\t\t}\n\n\t\tconst info = suggestController.getOverwriteInfo(item, toggleMode);\n\n\t\treturn new SuggestItemInfo(\n\t\t\tRange.fromPositions(\n\t\t\t\tposition.delta(0, -info.overwriteBefore),\n\t\t\t\tposition.delta(0, Math.max(info.overwriteAfter, 0))\n\t\t\t),\n\t\t\tinsertText,\n\t\t\titem.completion.kind,\n\t\t\tisSnippetText,\n\t\t\titem.container.incomplete ?? false,\n\t\t);\n\t}\n\n\tprivate constructor(\n\t\tpublic readonly range: Range,\n\t\tpublic readonly insertText: string,\n\t\tpublic readonly completionItemKind: CompletionItemKind,\n\t\tpublic readonly isSnippetText: boolean,\n\t\tpublic readonly listIncomplete: boolean,\n\t) { }\n\n\tpublic equals(other: SuggestItemInfo): boolean {\n\t\treturn this.range.equalsRange(other.range)\n\t\t\t&& this.insertText === other.insertText\n\t\t\t&& this.completionItemKind === other.completionItemKind\n\t\t\t&& this.isSnippetText === other.isSnippetText;\n\t}\n\n\tpublic toSelectedSuggestionInfo(): SelectedSuggestionInfo {\n\t\treturn new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n\t}\n\n\tpublic getSingleTextEdit(): TextReplacement {\n\t\treturn new TextReplacement(this.range, this.insertText);\n\t}\n}\n\nfunction suggestItemInfoEquals(a: SuggestItemInfo | undefined, b: SuggestItemInfo | undefined): boolean {\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (!a || !b) {\n\t\treturn false;\n\t}\n\treturn a.equals(b);\n}\n\nexport class ObservableSuggestWidgetAdapter extends Disposable {\n\tprivate readonly _suggestWidgetAdaptor;\n\n\tpublic readonly selectedItem;\n\n\tconstructor(\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\n\t\tprivate readonly _handleSuggestAccepted: (item: SuggestItemInfo) => void,\n\t\tprivate readonly _suggestControllerPreselector: () => TextReplacement | undefined,\n\t) {\n\t\tsuper();\n\t\tthis._suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(\n\t\t\tthis._editorObs.editor,\n\t\t\t() => {\n\t\t\t\tthis._editorObs.forceUpdate();\n\t\t\t\treturn this._suggestControllerPreselector();\n\t\t\t},\n\t\t\t(item) => this._editorObs.forceUpdate(_tx => {\n\t\t\t\t/** @description InlineCompletionsController.handleSuggestAccepted */\n\t\t\t\tthis._handleSuggestAccepted(item);\n\t\t\t})\n\t\t));\n\t\tthis.selectedItem = observableFromEvent(this, cb => this._suggestWidgetAdaptor.onDidSelectedItemChange(() => {\n\t\t\tthis._editorObs.forceUpdate(_tx => cb(undefined));\n\t\t}), () => this._suggestWidgetAdaptor.selectedItem);\n\t}\n\n\tpublic stopForceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.stopForceRenderingAbove();\n\t}\n\n\tpublic forceRenderingAbove(): void {\n\t\tthis._suggestWidgetAdaptor.forceRenderingAbove();\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;AAEhG,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,EAAE,YAAY,EAAE,MAAM,0CAA0C,CAAC;AACxE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,qCAAqC,CAAC;AACrE,OAAO,EAAE,UAAU,EAAE,MAAM,yCAAyC,CAAC;AAErE,OAAO,EAAE,QAAQ,EAAE,MAAM,qCAAqC,CAAC;AAC/D,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,eAAe,EAAE,MAAM,2CAA2C,CAAC;AAC5E,OAAO,EAAoD,sBAAsB,EAAE,MAAM,iCAAiC,CAAC;AAE3H,OAAO,EAAE,sBAAsB,EAAE,4BAA4B,EAAE,MAAM,4BAA4B,CAAC;AAClG,OAAO,EAAE,aAAa,EAAE,MAAM,2CAA2C,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,4CAA4C,CAAC;AAE5E,OAAO,EAAE,iBAAiB,EAAE,MAAM,+CAA+C,CAAC;;AAElF,OAAO,EAAE,mBAAmB,EAAE,MAAM,0CAA0C,CAAC;;;;;;;;;;;;;;AAEzE,MAAO,oBAAqB,SAAQ,0LAAU;IAKnD,IAAW,YAAY,GAAA;QACtB,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACrC,CAAC;IAID,YACkB,MAAmB,EACnB,4BAA+D,EAC/D,YAA6C,CAAA;QAE9D,KAAK,EAAE,CAAC;QAJS,IAAA,CAAA,MAAM,GAAN,MAAM,CAAa;QACnB,IAAA,CAAA,4BAA4B,GAA5B,4BAA4B,CAAmC;QAC/D,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAiC;QAbvD,IAAA,CAAA,sBAAsB,GAAY,KAAK,CAAC;QACxC,IAAA,CAAA,iBAAiB,GAAG,KAAK,CAAC;QAC1B,IAAA,CAAA,SAAS,GAAG,KAAK,CAAC;QAClB,IAAA,CAAA,uBAAuB,GAAgC,SAAS,CAAC;QAIjE,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,mLAAO,EAAQ,CAAC,CAAC;QACvD,IAAA,CAAA,uBAAuB,GAAgB,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;QAS1F,iFAAiF;QACjF,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,EAAC,CAAC,CAAC,EAAE;YACnC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7B,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC,CAAC,EAAE;YACjC,IAAI,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC1C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7B,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,MAAM,iBAAiB,GAAG,kOAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,iBAAiB,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;gBACjD,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE;oBACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACzC,IAAI,CAAC,SAAS,EAAE,CAAC;wBAChB,oBAAoB;wBACpB,OAAO,CAAC,CAAC,CAAC;oBACX,CAAC;oBAED,MAAM,CAAC,GAAG,IAAI,CAAC,4BAA4B,EAAE,CAAC;oBAC9C,MAAM,eAAe,GAAG,CAAC,CAAC,CAAC,KAAC,oQAA4B,EAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnF,IAAI,CAAC,eAAe,EAAE,CAAC;wBACtB,OAAO,CAAC,CAAC,CAAC;oBACX,CAAC;oBACD,MAAM,QAAQ,GAAG,iMAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAEpC,MAAM,UAAU,GAAG,YAAY,CAC7B,GAAG,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE;wBAC3B,MAAM,eAAe,GAAG,eAAe,CAAC,cAAc,CAAC,iBAAiB,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBACpI,MAAM,mBAAmB,OAAG,oQAA4B,EAAC,eAAe,CAAC,iBAAiB,EAAE,EAAE,SAAS,CAAC,CAAC;wBACzG,MAAM,KAAK,OAAG,8PAAsB,EAAC,eAAe,EAAE,mBAAmB,CAAC,CAAC;wBAC3E,OAAO;4BAAE,KAAK;4BAAE,KAAK;4BAAE,YAAY,EAAE,mBAAmB,CAAC,IAAI,CAAC,MAAM;4BAAE,WAAW;wBAAA,CAAE,CAAC;oBACrF,CAAC,CAAC,CACD,MAAM,EAAC,IAAI,CAAC,EAAG,AAAD,IAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;oBAE9D,MAAM,MAAM,OAAG,6LAAY,EAC1B,UAAU,MACV,sLAAS,GAAC,CAAC,CAAC,EAAE,AAAC,CAAE,CAAC,YAAY,EAAE,6LAAgB,CAAC,CACjD,CAAC;oBACF,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC,CAAC;gBACpC,CAAC;aACD,CAAC,CAAC,CAAC;YAEJ,IAAI,sBAAsB,GAAG,KAAK,CAAC;YACnC,MAAM,mBAAmB,GAAG,GAAG,EAAE;gBAChC,IAAI,sBAAsB,EAAE,CAAC;oBAC5B,OAAO;gBACR,CAAC;gBACD,sBAAsB,GAAG,IAAI,CAAC;gBAE9B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;oBAC5D,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,EAAE;oBAC5D,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE;oBAC7D,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,IAAI,CAAC,SAAS,CAAC,iLAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC,EAAE;gBACnE,mBAAmB,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,uBAAuB,EAAC,CAAC,CAAC,EAAE;gBAC5D,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;gBAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrC,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;oBAAC,OAAO,SAAS,CAAC;gBAAC,CAAC;gBAE9C,MAAM,eAAe,GAAG,eAAe,CAAC,cAAc,CACrD,iBAAiB,EACjB,KAAK,EACL,QAAQ,EACR,CAAC,CAAC,IAAI,EACN,IAAI,CAAC,iBAAiB,CACtB,CAAC;gBAEF,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7B,CAAC;IAEO,MAAM,CAAC,SAAkB,EAAA;QAChC,MAAM,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAEtD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,EAAE,CAAC;YAC/G,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,uBAAuB,GAAG,mBAAmB,CAAC;YAEnD,IAAI,CAAC,wBAAwB,CAAC,IAAI,EAAE,CAAC;QACtC,CAAC;IACF,CAAC;IAEO,kBAAkB,GAAA;QACzB,MAAM,iBAAiB,GAAG,kOAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACxD,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,MAAM,WAAW,GAAG,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QACpE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAErC,IAAI,CAAC,WAAW,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;YACzC,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO,eAAe,CAAC,cAAc,CACpC,iBAAiB,EACjB,KAAK,EACL,QAAQ,EACR,WAAW,CAAC,IAAI,EAChB,IAAI,CAAC,iBAAiB,CACtB,CAAC;IACH,CAAC;IAEM,uBAAuB,GAAA;QAC7B,MAAM,iBAAiB,GAAG,kOAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,iBAAiB,EAAE,uBAAuB,EAAE,CAAC;IAC9C,CAAC;IAEM,mBAAmB,GAAA;QACzB,MAAM,iBAAiB,GAAG,kOAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,iBAAiB,EAAE,mBAAmB,EAAE,CAAC;IAC1C,CAAC;CACD;AAEK,MAAO,eAAe;IACpB,MAAM,CAAC,cAAc,CAAC,iBAAoC,EAAE,KAAiB,EAAE,QAAkB,EAAE,IAAoB,EAAE,UAAmB,EAAA;QAClJ,IAAI,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,IAAI,aAAa,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,UAAU,CAAC,eAAgB,GAAA,EAAA,gDAAA,EAA+C,GAAE,CAAC;YACrF,MAAM,OAAO,GAAG,IAAI,0NAAa,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAEtD,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,EAAE,CAAC;gBACnC,kCAAkC;gBAClC,4NAAc,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YACjE,CAAC;YAED,UAAU,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;YAChC,aAAa,GAAG,IAAI,CAAC;QACtB,CAAC;QAED,MAAM,IAAI,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAElE,OAAO,IAAI,eAAe,CACzB,2LAAK,CAAC,aAAa,CAClB,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,EACxC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CACnD,EACD,UAAU,EACV,IAAI,CAAC,UAAU,CAAC,IAAI,EACpB,aAAa,EACb,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,KAAK,CAClC,CAAC;IACH,CAAC;IAED,YACiB,KAAY,EACZ,UAAkB,EAClB,kBAAsC,EACtC,aAAsB,EACtB,cAAuB,CAAA;QAJvB,IAAA,CAAA,KAAK,GAAL,KAAK,CAAO;QACZ,IAAA,CAAA,UAAU,GAAV,UAAU,CAAQ;QAClB,IAAA,CAAA,kBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,IAAA,CAAA,aAAa,GAAb,aAAa,CAAS;QACtB,IAAA,CAAA,cAAc,GAAd,cAAc,CAAS;IACpC,CAAC;IAEE,MAAM,CAAC,KAAsB,EAAA;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,IACtC,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACpC,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,kBAAkB,IACpD,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,CAAC;IAChD,CAAC;IAEM,wBAAwB,GAAA;QAC9B,OAAO,IAAI,wMAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7G,CAAC;IAEM,iBAAiB,GAAA;QACvB,OAAO,IAAI,iNAAe,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;CACD;AAED,SAAS,qBAAqB,CAAC,CAA8B,EAAE,CAA8B;IAC5F,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IACb,CAAC;IACD,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;QACd,OAAO,KAAK,CAAC;IACd,CAAC;IACD,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC;AAEK,MAAO,8BAA+B,SAAQ,0LAAU;IAK7D,YACkB,UAAgC,EAEhC,sBAAuD,EACvD,6BAAgE,CAAA;QAEjF,KAAK,EAAE,CAAC;QALS,IAAA,CAAA,UAAU,GAAV,UAAU,CAAsB;QAEhC,IAAA,CAAA,sBAAsB,GAAtB,sBAAsB,CAAiC;QACvD,IAAA,CAAA,6BAA6B,GAA7B,6BAA6B,CAAmC;QAGjF,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,oBAAoB,CACnE,IAAI,CAAC,UAAU,CAAC,MAAM,EACtB,GAAG,EAAE;YACJ,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC,6BAA6B,EAAE,CAAC;QAC7C,CAAC,EACD,CAAC,IAAI,EAAE,CAAG,CAAD,GAAK,CAAC,UAAU,CAAC,WAAW,EAAC,GAAG,CAAC,EAAE;gBAC3C,mEAAA,EAAqE,CACrE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACnC,CAAC,CAAC,CACF,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,OAAG,qNAAmB,EAAC,IAAI,GAAE,EAAE,CAAC,EAAE,AAAC,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBAC3G,IAAI,CAAC,UAAU,CAAC,WAAW,EAAC,GAAG,CAAC,EAAE,AAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,EAAE,GAAG,CAAG,CAAD,GAAK,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;IACpD,CAAC;IAEM,uBAAuB,GAAA;QAC7B,IAAI,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,CAAC;IACtD,CAAC;IAEM,mBAAmB,GAAA;QACzB,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,EAAE,CAAC;IAClD,CAAC;CACD","debugId":null}},
    {"offset": {"line": 4285, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/ghostText/ghostTextView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/ghostText/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/ghostText/ghostTextView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/ghostText/vs/editor/contrib/inlineCompletions/browser/view/ghostText/ghostTextView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createTrustedTypesPolicy } from '../../../../../../base/browser/trustedTypes.js';\nimport { renderIcon } from '../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../../../base/common/event.js';\nimport { createHotClass } from '../../../../../../base/common/hotReloadHelpers.js';\nimport { Disposable, DisposableStore, MutableDisposable, toDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, constObservable, derived, observableSignalFromEvent, observableValue } from '../../../../../../base/common/observable.js';\nimport * as strings from '../../../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../../../../browser/config/domFontInfo.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition, IViewZoneChangeAccessor, MouseTargetType } from '../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { EditorFontLigatures, EditorOption, IComputedEditorOptions } from '../../../../../common/config/editorOptions.js';\nimport { StringEdit, StringReplacement } from '../../../../../common/core/edits/stringEdit.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { StringBuilder } from '../../../../../common/core/stringBuilder.js';\nimport { IconPath } from '../../../../../common/languages.js';\nimport { ILanguageService } from '../../../../../common/languages/language.js';\nimport { IModelDeltaDecoration, ITextModel, InjectedTextCursorStops, PositionAffinity } from '../../../../../common/model.js';\nimport { LineTokens } from '../../../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostText, GhostTextReplacement, IGhostTextLine } from '../../model/ghostText.js';\nimport { RangeSingleLine } from '../../../../../common/core/ranges/rangeSingleLine.js';\nimport { ColumnRange } from '../../../../../common/core/ranges/columnRange.js';\nimport { addDisposableListener, getWindow, isHTMLElement, n } from '../../../../../../base/browser/dom.js';\nimport './ghostTextView.css';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../base/browser/mouseEvent.js';\nimport { CodeEditorWidget } from '../../../../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { TokenWithTextArray } from '../../../../../common/tokens/tokenWithTextArray.js';\nimport { InlineCompletionViewData } from '../inlineEdits/inlineEditsViewInterface.js';\nimport { InlineDecorationType } from '../../../../../common/viewModel/inlineDecorations.js';\nimport { sum } from '../../../../../../base/common/arrays.js';\n\nexport interface IGhostTextWidgetModel {\n\treadonly targetTextModel: IObservable<ITextModel | undefined>;\n\treadonly ghostText: IObservable<GhostText | GhostTextReplacement | undefined>;\n\treadonly warning: IObservable<{ icon: IconPath | undefined } | undefined>;\n\treadonly minReservedLineCount: IObservable<number>;\n\n\treadonly handleInlineCompletionShown: IObservable<(viewData: InlineCompletionViewData) => void>;\n}\n\nconst USE_SQUIGGLES_FOR_WARNING = true;\nconst GHOST_TEXT_CLASS_NAME = 'ghost-text';\n\nexport class GhostTextView extends Disposable {\n\tprivate readonly _isDisposed;\n\tprivate readonly _editorObs;\n\tpublic static hot = createHotClass(GhostTextView);\n\n\tprivate _warningState;\n\n\tprivate readonly _onDidClick;\n\tpublic readonly onDidClick;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _model: IGhostTextWidgetModel,\n\t\tprivate readonly _options: IObservable<{\n\t\t\textraClasses?: string[];\n\t\t\tsyntaxHighlightingEnabled: boolean;\n\t\t}>,\n\t\tprivate readonly _shouldKeepCursorStable: boolean,\n\t\tprivate readonly _isClickable: boolean,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._isDisposed = observableValue(this, false);\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._warningState = derived(reader => {\n\t\t\tconst gt = this._model.ghostText.read(reader);\n\t\t\tif (!gt) { return undefined; }\n\t\t\tconst warning = this._model.warning.read(reader);\n\t\t\tif (!warning) { return undefined; }\n\t\t\treturn { lineNumber: gt.lineNumber, position: new Position(gt.lineNumber, gt.parts[0].column), icon: warning.icon };\n\t\t});\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._useSyntaxHighlighting = this._options.map(o => o.syntaxHighlightingEnabled);\n\t\tthis._extraClassNames = derived(this, reader => {\n\t\t\tconst extraClasses = [...this._options.read(reader).extraClasses ?? []];\n\t\t\tif (this._useSyntaxHighlighting.read(reader)) {\n\t\t\t\textraClasses.push('syntax-highlighted');\n\t\t\t}\n\t\t\tif (USE_SQUIGGLES_FOR_WARNING && this._warningState.read(reader)) {\n\t\t\t\textraClasses.push('warning');\n\t\t\t}\n\t\t\tconst extraClassNames = extraClasses.map(c => ` ${c}`).join('');\n\t\t\treturn extraClassNames;\n\t\t});\n\t\tthis.uiState = derived(this, reader => {\n\t\t\tif (this._isDisposed.read(reader)) { return undefined; }\n\t\t\tconst textModel = this._editorObs.model.read(reader);\n\t\t\tif (textModel !== this._model.targetTextModel.read(reader)) { return undefined; }\n\t\t\tconst ghostText = this._model.ghostText.read(reader);\n\t\t\tif (!ghostText) { return undefined; }\n\n\t\t\tconst replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n\n\t\t\tconst syntaxHighlightingEnabled = this._useSyntaxHighlighting.read(reader);\n\t\t\tconst extraClassNames = this._extraClassNames.read(reader);\n\t\t\tconst { inlineTexts, additionalLines, hiddenRange, additionalLinesOriginalSuffix } = computeGhostTextViewData(ghostText, textModel, GHOST_TEXT_CLASS_NAME + extraClassNames);\n\n\t\t\tconst currentLine = textModel.getLineContent(ghostText.lineNumber);\n\t\t\tconst edit = new StringEdit(inlineTexts.map(t => StringReplacement.insert(t.column - 1, t.text)));\n\t\t\tconst tokens = syntaxHighlightingEnabled ? textModel.tokenization.tokenizeLinesAt(ghostText.lineNumber, [edit.apply(currentLine), ...additionalLines.map(l => l.content)]) : undefined;\n\t\t\tconst newRanges = edit.getNewRanges();\n\t\t\tconst inlineTextsWithTokens = inlineTexts.map((t, idx) => ({ ...t, tokens: tokens?.[0]?.getTokensInRange(newRanges[idx]) }));\n\n\t\t\tconst tokenizedAdditionalLines: LineData[] = additionalLines.map((l, idx) => {\n\t\t\t\tlet content = tokens?.[idx + 1] ?? LineTokens.createEmpty(l.content, this._languageService.languageIdCodec);\n\t\t\t\tif (idx === additionalLines.length - 1 && additionalLinesOriginalSuffix) {\n\t\t\t\t\tconst t = TokenWithTextArray.fromLineTokens(textModel.tokenization.getLineTokens(additionalLinesOriginalSuffix.lineNumber));\n\t\t\t\t\tconst existingContent = t.slice(additionalLinesOriginalSuffix.columnRange.toZeroBasedOffsetRange());\n\t\t\t\t\tcontent = TokenWithTextArray.fromLineTokens(content).append(existingContent).toLineTokens(content.languageIdCodec);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tdecorations: l.decorations,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst cursorColumn = this._editor.getSelection()?.getStartPosition().column!;\n\t\t\tconst disjointInlineTexts = inlineTextsWithTokens.filter(inline => inline.text !== '');\n\t\t\tconst hasInsertionOnCurrentLine = disjointInlineTexts.length !== 0;\n\t\t\tconst renderData: InlineCompletionViewData = {\n\t\t\t\tcursorColumnDistance: (hasInsertionOnCurrentLine ? disjointInlineTexts[0].column : 1) - cursorColumn,\n\t\t\t\tcursorLineDistance: hasInsertionOnCurrentLine ? 0 : (additionalLines.findIndex(line => line.content !== '') + 1),\n\t\t\t\tlineCountOriginal: hasInsertionOnCurrentLine ? 1 : 0,\n\t\t\t\tlineCountModified: additionalLines.length + (hasInsertionOnCurrentLine ? 1 : 0),\n\t\t\t\tcharacterCountOriginal: 0,\n\t\t\t\tcharacterCountModified: sum(disjointInlineTexts.map(inline => inline.text.length)) + sum(tokenizedAdditionalLines.map(line => line.content.getTextLength())),\n\t\t\t\tdisjointReplacements: disjointInlineTexts.length + (additionalLines.length > 0 ? 1 : 0),\n\t\t\t\tsameShapeReplacements: disjointInlineTexts.length > 1 && tokenizedAdditionalLines.length === 0 ? disjointInlineTexts.every(inline => inline.text === disjointInlineTexts[0].text) : undefined,\n\t\t\t};\n\t\t\tthis._model.handleInlineCompletionShown.read(reader)?.(renderData);\n\n\t\t\treturn {\n\t\t\t\treplacedRange,\n\t\t\t\tinlineTexts: inlineTextsWithTokens,\n\t\t\t\tadditionalLines: tokenizedAdditionalLines,\n\t\t\t\thiddenRange,\n\t\t\t\tlineNumber: ghostText.lineNumber,\n\t\t\t\tadditionalReservedLineCount: this._model.minReservedLineCount.read(reader),\n\t\t\t\ttargetTextModel: textModel,\n\t\t\t\tsyntaxHighlightingEnabled,\n\t\t\t};\n\t\t});\n\t\tthis.decorations = derived(this, reader => {\n\t\t\tconst uiState = this.uiState.read(reader);\n\t\t\tif (!uiState) { return []; }\n\n\t\t\tconst decorations: IModelDeltaDecoration[] = [];\n\n\t\t\tconst extraClassNames = this._extraClassNames.read(reader);\n\n\t\t\tif (uiState.replacedRange) {\n\t\t\t\tdecorations.push({\n\t\t\t\t\trange: uiState.replacedRange.toRange(uiState.lineNumber),\n\t\t\t\t\toptions: { inlineClassName: 'inline-completion-text-to-replace' + extraClassNames, description: 'GhostTextReplacement' }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (uiState.hiddenRange) {\n\t\t\t\tdecorations.push({\n\t\t\t\t\trange: uiState.hiddenRange.toRange(uiState.lineNumber),\n\t\t\t\t\toptions: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const p of uiState.inlineTexts) {\n\t\t\t\tdecorations.push({\n\t\t\t\t\trange: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tdescription: 'ghost-text-decoration',\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontent: p.text,\n\t\t\t\t\t\t\ttokens: p.tokens,\n\t\t\t\t\t\t\tinlineClassName: (p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration')\n\t\t\t\t\t\t\t\t+ (this._isClickable ? ' clickable' : '')\n\t\t\t\t\t\t\t\t+ extraClassNames\n\t\t\t\t\t\t\t\t+ p.lineDecorations.map(d => ' ' + d.className).join(' '), // TODO: take the ranges into account for line decorations\n\t\t\t\t\t\t\tcursorStops: InjectedTextCursorStops.Left,\n\t\t\t\t\t\t\tattachedData: new GhostTextAttachedData(this),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn decorations;\n\t\t});\n\t\tthis._additionalLinesWidget = this._register(\n\t\t\tnew AdditionalLinesWidget(\n\t\t\t\tthis._editor,\n\t\t\t\tderived(reader => {\n\t\t\t\t\t/** @description lines */\n\t\t\t\t\tconst uiState = this.uiState.read(reader);\n\t\t\t\t\treturn uiState ? {\n\t\t\t\t\t\tlineNumber: uiState.lineNumber,\n\t\t\t\t\t\tadditionalLines: uiState.additionalLines,\n\t\t\t\t\t\tminReservedLineCount: uiState.additionalReservedLineCount,\n\t\t\t\t\t\ttargetTextModel: uiState.targetTextModel,\n\t\t\t\t\t} : undefined;\n\t\t\t\t}),\n\t\t\t\tthis._shouldKeepCursorStable,\n\t\t\t\tthis._isClickable\n\t\t\t)\n\t\t);\n\t\tthis._isInlineTextHovered = this._editorObs.isTargetHovered(\n\t\t\tp => p.target.type === MouseTargetType.CONTENT_TEXT &&\n\t\t\t\tp.target.detail.injectedText?.options.attachedData instanceof GhostTextAttachedData &&\n\t\t\t\tp.target.detail.injectedText.options.attachedData.owner === this,\n\t\t\tthis._store\n\t\t);\n\t\tthis.isHovered = derived(this, reader => {\n\t\t\tif (this._isDisposed.read(reader)) { return false; }\n\t\t\treturn this._isInlineTextHovered.read(reader) || this._additionalLinesWidget.isHovered.read(reader);\n\t\t});\n\t\tthis.height = derived(this, reader => {\n\t\t\tconst lineHeight = this._editorObs.getOption(EditorOption.lineHeight).read(reader);\n\t\t\treturn lineHeight + (this._additionalLinesWidget.viewZoneHeight.read(reader) ?? 0);\n\t\t});\n\n\t\tthis._register(toDisposable(() => { this._isDisposed.set(true, undefined); }));\n\t\tthis._register(this._editorObs.setDecorations(this.decorations));\n\n\t\tif (this._isClickable) {\n\t\t\tthis._register(this._additionalLinesWidget.onDidClick((e) => this._onDidClick.fire(e)));\n\t\t\tthis._register(this._editor.onMouseUp(e => {\n\t\t\t\tif (e.target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst a = e.target.detail.injectedText?.options.attachedData;\n\t\t\t\tif (a instanceof GhostTextAttachedData && a.owner === this) {\n\t\t\t\t\tthis._onDidClick.fire(e.event);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tif (USE_SQUIGGLES_FOR_WARNING) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst state = this._warningState.read(reader);\n\t\t\tif (!state) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lineHeight = this._editorObs.getOption(EditorOption.lineHeight);\n\t\t\tstore.add(this._editorObs.createContentWidget({\n\t\t\t\tposition: constObservable<IContentWidgetPosition>({\n\t\t\t\t\tposition: new Position(state.lineNumber, Number.MAX_SAFE_INTEGER),\n\t\t\t\t\tpreference: [ContentWidgetPositionPreference.EXACT],\n\t\t\t\t\tpositionAffinity: PositionAffinity.Right,\n\t\t\t\t}),\n\t\t\t\tallowEditorOverflow: false,\n\t\t\t\tdomNode: n.div({\n\t\t\t\t\tclass: 'ghost-text-view-warning-widget',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: lineHeight,\n\t\t\t\t\t\theight: lineHeight,\n\t\t\t\t\t\tmarginLeft: 4,\n\t\t\t\t\t\tcolor: 'orange',\n\t\t\t\t\t},\n\t\t\t\t\tref: (dom) => {\n\t\t\t\t\t\t(dom as any as WidgetDomElement).ghostTextViewWarningWidgetData = { range: Range.fromPositions(state.position) };\n\t\t\t\t\t}\n\t\t\t\t}, [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tclass: 'ghost-text-view-warning-widget-icon',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\trenderIcon((state.icon && 'id' in state.icon) ? state.icon : Codicon.warning),\n\t\t\t\t\t])\n\t\t\t\t]).keepUpdated(store).element,\n\t\t\t}));\n\t\t}));\n\t}\n\n\tpublic static getWarningWidgetContext(domNode: HTMLElement): { range: Range } | undefined {\n\t\tconst data = (domNode as any as WidgetDomElement).ghostTextViewWarningWidgetData;\n\t\tif (data) {\n\t\t\treturn data;\n\t\t} else if (domNode.parentElement) {\n\t\t\treturn this.getWarningWidgetContext(domNode.parentElement);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _useSyntaxHighlighting;\n\n\tprivate readonly _extraClassNames;\n\n\tprivate readonly uiState;\n\n\tprivate readonly decorations;\n\n\tprivate readonly _additionalLinesWidget;\n\n\tprivate readonly _isInlineTextHovered;\n\n\tpublic readonly isHovered;\n\n\tpublic readonly height;\n\n\tpublic ownsViewZone(viewZoneId: string): boolean {\n\t\treturn this._additionalLinesWidget.viewZoneId === viewZoneId;\n\t}\n}\n\nclass GhostTextAttachedData {\n\tconstructor(public readonly owner: GhostTextView) { }\n}\n\ninterface WidgetDomElement {\n\tghostTextViewWarningWidgetData?: {\n\t\trange: Range;\n\t};\n}\n\nfunction computeGhostTextViewData(ghostText: GhostText | GhostTextReplacement, textModel: ITextModel, ghostTextClassName: string) {\n\tconst inlineTexts: { column: number; text: string; preview: boolean; lineDecorations: LineDecoration[] }[] = [];\n\tconst additionalLines: { content: string; decorations: LineDecoration[] }[] = [];\n\n\tfunction addToAdditionalLines(ghLines: readonly IGhostTextLine[], className: string | undefined) {\n\t\tif (additionalLines.length > 0) {\n\t\t\tconst lastLine = additionalLines[additionalLines.length - 1];\n\t\t\tif (className) {\n\t\t\t\tlastLine.decorations.push(new LineDecoration(\n\t\t\t\t\tlastLine.content.length + 1,\n\t\t\t\t\tlastLine.content.length + 1 + ghLines[0].line.length,\n\t\t\t\t\tclassName,\n\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t));\n\t\t\t}\n\t\t\tlastLine.content += ghLines[0].line;\n\n\t\t\tghLines = ghLines.slice(1);\n\t\t}\n\t\tfor (const ghLine of ghLines) {\n\t\t\tadditionalLines.push({\n\t\t\t\tcontent: ghLine.line,\n\t\t\t\tdecorations: className ? [new LineDecoration(\n\t\t\t\t\t1,\n\t\t\t\t\tghLine.line.length + 1,\n\t\t\t\t\tclassName,\n\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t), ...ghLine.lineDecorations] : [...ghLine.lineDecorations]\n\t\t\t});\n\t\t}\n\t}\n\n\tconst textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n\n\tlet hiddenTextStartColumn: number | undefined = undefined;\n\tlet lastIdx = 0;\n\tfor (const part of ghostText.parts) {\n\t\tlet ghLines = part.lines;\n\t\tif (hiddenTextStartColumn === undefined) {\n\t\t\tinlineTexts.push({ column: part.column, text: ghLines[0].line, preview: part.preview, lineDecorations: ghLines[0].lineDecorations });\n\t\t\tghLines = ghLines.slice(1);\n\t\t} else {\n\t\t\taddToAdditionalLines([{ line: textBufferLine.substring(lastIdx, part.column - 1), lineDecorations: [] }], undefined);\n\t\t}\n\n\t\tif (ghLines.length > 0) {\n\t\t\taddToAdditionalLines(ghLines, ghostTextClassName);\n\t\t\tif (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n\t\t\t\thiddenTextStartColumn = part.column;\n\t\t\t}\n\t\t}\n\n\t\tlastIdx = part.column - 1;\n\t}\n\tlet additionalLinesOriginalSuffix: RangeSingleLine | undefined = undefined;\n\tif (hiddenTextStartColumn !== undefined) {\n\t\tadditionalLinesOriginalSuffix = new RangeSingleLine(ghostText.lineNumber, new ColumnRange(lastIdx + 1, textBufferLine.length + 1));\n\t}\n\n\tconst hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n\n\treturn {\n\t\tinlineTexts,\n\t\tadditionalLines,\n\t\thiddenRange,\n\t\tadditionalLinesOriginalSuffix,\n\t};\n}\n\nexport class AdditionalLinesWidget extends Disposable {\n\tprivate _viewZoneInfo: { viewZoneId: string; heightInLines: number; lineNumber: number } | undefined;\n\tpublic get viewZoneId(): string | undefined { return this._viewZoneInfo?.viewZoneId; }\n\n\tprivate _viewZoneHeight;\n\tpublic get viewZoneHeight(): IObservable<number | undefined> { return this._viewZoneHeight; }\n\n\tprivate readonly editorOptionsChanged;\n\n\tprivate readonly _onDidClick;\n\tpublic readonly onDidClick;\n\n\tprivate readonly _viewZoneListener;\n\n\treadonly isHovered;\n\n\tprivate hasBeenAccepted;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _lines: IObservable<{\n\t\t\ttargetTextModel: ITextModel;\n\t\t\tlineNumber: number;\n\t\t\tadditionalLines: LineData[];\n\t\t\tminReservedLineCount: number;\n\t\t} | undefined>,\n\t\tprivate readonly _shouldKeepCursorStable: boolean,\n\t\tprivate readonly _isClickable: boolean,\n\t) {\n\t\tsuper();\n\t\tthis._viewZoneHeight = observableValue<undefined | number>('viewZoneHeight', undefined);\n\t\tthis.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(\n\t\t\tthis._editor.onDidChangeConfiguration,\n\t\t\te => e.hasChanged(EditorOption.disableMonospaceOptimizations)\n\t\t\t\t|| e.hasChanged(EditorOption.stopRenderingLineAfter)\n\t\t\t\t|| e.hasChanged(EditorOption.renderWhitespace)\n\t\t\t\t|| e.hasChanged(EditorOption.renderControlCharacters)\n\t\t\t\t|| e.hasChanged(EditorOption.fontLigatures)\n\t\t\t\t|| e.hasChanged(EditorOption.fontInfo)\n\t\t\t\t|| e.hasChanged(EditorOption.lineHeight)\n\t\t));\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._viewZoneListener = this._register(new MutableDisposable());\n\t\tthis.isHovered = observableCodeEditor(this._editor).isTargetHovered(\n\t\t\tp => isTargetGhostText(p.target.element),\n\t\t\tthis._store\n\t\t);\n\t\tthis.hasBeenAccepted = false;\n\n\t\tif (this._editor instanceof CodeEditorWidget && this._shouldKeepCursorStable) {\n\t\t\tthis._register(this._editor.onBeforeExecuteEdit(e => this.hasBeenAccepted = e.source === 'inlineSuggestion.accept'));\n\t\t}\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update view zone */\n\t\t\tconst lines = this._lines.read(reader);\n\t\t\tthis.editorOptionsChanged.read(reader);\n\n\t\t\tif (lines) {\n\t\t\t\tthis.hasBeenAccepted = false;\n\t\t\t\tthis.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.clear();\n\t}\n\n\tprivate clear(): void {\n\t\tthis._viewZoneListener.clear();\n\n\t\tthis._editor.changeViewZones((changeAccessor) => {\n\t\t\tthis.removeActiveViewZone(changeAccessor);\n\t\t});\n\t}\n\n\tprivate updateLines(lineNumber: number, additionalLines: LineData[], minReservedLineCount: number): void {\n\t\tconst textModel = this._editor.getModel();\n\t\tif (!textModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { tabSize } = textModel.getOptions();\n\n\t\tthis._editor.changeViewZones((changeAccessor) => {\n\t\t\tconst store = new DisposableStore();\n\n\t\t\tthis.removeActiveViewZone(changeAccessor);\n\n\t\t\tconst heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n\t\t\tif (heightInLines > 0) {\n\t\t\t\tconst domNode = document.createElement('div');\n\t\t\t\trenderLines(domNode, tabSize, additionalLines, this._editor.getOptions(), this._isClickable);\n\n\t\t\t\tif (this._isClickable) {\n\t\t\t\t\tstore.add(addDisposableListener(domNode, 'mousedown', (e) => {\n\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t}));\n\t\t\t\t\tstore.add(addDisposableListener(domNode, 'click', (e) => {\n\t\t\t\t\t\tif (isTargetGhostText(e.target)) {\n\t\t\t\t\t\t\tthis._onDidClick.fire(new StandardMouseEvent(getWindow(e), e));\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis.addViewZone(changeAccessor, lineNumber, heightInLines, domNode);\n\t\t\t}\n\n\t\t\tthis._viewZoneListener.value = store;\n\t\t});\n\t}\n\n\tprivate addViewZone(changeAccessor: IViewZoneChangeAccessor, afterLineNumber: number, heightInLines: number, domNode: HTMLElement): void {\n\t\tconst id = changeAccessor.addZone({\n\t\t\tafterLineNumber: afterLineNumber,\n\t\t\theightInLines: heightInLines,\n\t\t\tdomNode,\n\t\t\tafterColumnAffinity: PositionAffinity.Right,\n\t\t\tonComputedHeight: (height: number) => {\n\t\t\t\tthis._viewZoneHeight.set(height, undefined); // TODO: can a transaction be used to avoid flickering?\n\t\t\t}\n\t\t});\n\n\t\tthis.keepCursorStable(afterLineNumber, heightInLines);\n\n\t\tthis._viewZoneInfo = { viewZoneId: id, heightInLines, lineNumber: afterLineNumber };\n\t}\n\n\tprivate removeActiveViewZone(changeAccessor: IViewZoneChangeAccessor): void {\n\t\tif (this._viewZoneInfo) {\n\t\t\tchangeAccessor.removeZone(this._viewZoneInfo.viewZoneId);\n\n\t\t\tif (!this.hasBeenAccepted) {\n\t\t\t\tthis.keepCursorStable(this._viewZoneInfo.lineNumber, -this._viewZoneInfo.heightInLines);\n\t\t\t}\n\n\t\t\tthis._viewZoneInfo = undefined;\n\t\t\tthis._viewZoneHeight.set(undefined, undefined);\n\t\t}\n\t}\n\n\tprivate keepCursorStable(lineNumber: number, heightInLines: number): void {\n\t\tif (!this._shouldKeepCursorStable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cursorLineNumber = this._editor.getSelection()?.getStartPosition()?.lineNumber;\n\t\tif (cursorLineNumber !== undefined && lineNumber < cursorLineNumber) {\n\t\t\tthis._editor.setScrollTop(this._editor.getScrollTop() + heightInLines * this._editor.getOption(EditorOption.lineHeight));\n\t\t}\n\t}\n}\n\nfunction isTargetGhostText(target: EventTarget | null): boolean {\n\treturn isHTMLElement(target) && target.classList.contains(GHOST_TEXT_CLASS_NAME);\n}\n\nexport interface LineData {\n\tcontent: LineTokens; // Must not contain a linebreak!\n\tdecorations: LineDecoration[];\n}\n\nfunction renderLines(domNode: HTMLElement, tabSize: number, lines: LineData[], opts: IComputedEditorOptions, isClickable: boolean): void {\n\tconst disableMonospaceOptimizations = opts.get(EditorOption.disableMonospaceOptimizations);\n\tconst stopRenderingLineAfter = opts.get(EditorOption.stopRenderingLineAfter);\n\t// To avoid visual confusion, we don't want to render visible whitespace\n\tconst renderWhitespace = 'none';\n\tconst renderControlCharacters = opts.get(EditorOption.renderControlCharacters);\n\tconst fontLigatures = opts.get(EditorOption.fontLigatures);\n\tconst fontInfo = opts.get(EditorOption.fontInfo);\n\tconst lineHeight = opts.get(EditorOption.lineHeight);\n\n\tlet classNames = 'suggest-preview-text';\n\tif (isClickable) {\n\t\tclassNames += ' clickable';\n\t}\n\n\tconst sb = new StringBuilder(10000);\n\tsb.appendString(`<div class=\"${classNames}\">`);\n\n\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\tconst lineData = lines[i];\n\t\tconst lineTokens = lineData.content;\n\t\tsb.appendString('<div class=\"view-line');\n\t\tsb.appendString('\" style=\"top:');\n\t\tsb.appendString(String(i * lineHeight));\n\t\tsb.appendString('px;width:1000000px;\">');\n\n\t\tconst line = lineTokens.getLineContent();\n\t\tconst isBasicASCII = strings.isBasicASCII(line);\n\t\tconst containsRTL = strings.containsRTL(line);\n\n\t\trenderViewLine(new RenderLineInput(\n\t\t\t(fontInfo.isMonospace && !disableMonospaceOptimizations),\n\t\t\tfontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tline,\n\t\t\tfalse,\n\t\t\tisBasicASCII,\n\t\t\tcontainsRTL,\n\t\t\t0,\n\t\t\tlineTokens,\n\t\t\tlineData.decorations,\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\tfontInfo.spaceWidth,\n\t\t\tfontInfo.middotWidth,\n\t\t\tfontInfo.wsmiddotWidth,\n\t\t\tstopRenderingLineAfter,\n\t\t\trenderWhitespace,\n\t\t\trenderControlCharacters,\n\t\t\tfontLigatures !== EditorFontLigatures.OFF,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t0\n\t\t), sb);\n\n\t\tsb.appendString('</div>');\n\t}\n\tsb.appendString('</div>');\n\n\tapplyFontInfo(domNode, fontInfo);\n\tconst html = sb.build();\n\tconst trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n\tdomNode.innerHTML = trustedhtml as string;\n}\n\nexport const ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createTrustedTypesPolicy } from '../../../../../../base/browser/trustedTypes.js';\nimport { renderIcon } from '../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Codicon } from '../../../../../../base/common/codicons.js';\nimport { Emitter, Event } from '../../../../../../base/common/event.js';\nimport { createHotClass } from '../../../../../../base/common/hotReloadHelpers.js';\nimport { Disposable, DisposableStore, MutableDisposable, toDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { IObservable, autorun, autorunWithStore, constObservable, derived, observableSignalFromEvent, observableValue } from '../../../../../../base/common/observable.js';\nimport * as strings from '../../../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../../../../browser/config/domFontInfo.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidgetPosition, IViewZoneChangeAccessor, MouseTargetType } from '../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { EditorFontLigatures, EditorOption, IComputedEditorOptions } from '../../../../../common/config/editorOptions.js';\nimport { StringEdit, StringReplacement } from '../../../../../common/core/edits/stringEdit.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { StringBuilder } from '../../../../../common/core/stringBuilder.js';\nimport { IconPath } from '../../../../../common/languages.js';\nimport { ILanguageService } from '../../../../../common/languages/language.js';\nimport { IModelDeltaDecoration, ITextModel, InjectedTextCursorStops, PositionAffinity } from '../../../../../common/model.js';\nimport { LineTokens } from '../../../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostText, GhostTextReplacement, IGhostTextLine } from '../../model/ghostText.js';\nimport { RangeSingleLine } from '../../../../../common/core/ranges/rangeSingleLine.js';\nimport { ColumnRange } from '../../../../../common/core/ranges/columnRange.js';\nimport { addDisposableListener, getWindow, isHTMLElement, n } from '../../../../../../base/browser/dom.js';\nimport './ghostTextView.css';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../base/browser/mouseEvent.js';\nimport { CodeEditorWidget } from '../../../../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { TokenWithTextArray } from '../../../../../common/tokens/tokenWithTextArray.js';\nimport { InlineCompletionViewData } from '../inlineEdits/inlineEditsViewInterface.js';\nimport { InlineDecorationType } from '../../../../../common/viewModel/inlineDecorations.js';\nimport { sum } from '../../../../../../base/common/arrays.js';\n\nexport interface IGhostTextWidgetModel {\n\treadonly targetTextModel: IObservable<ITextModel | undefined>;\n\treadonly ghostText: IObservable<GhostText | GhostTextReplacement | undefined>;\n\treadonly warning: IObservable<{ icon: IconPath | undefined } | undefined>;\n\treadonly minReservedLineCount: IObservable<number>;\n\n\treadonly handleInlineCompletionShown: IObservable<(viewData: InlineCompletionViewData) => void>;\n}\n\nconst USE_SQUIGGLES_FOR_WARNING = true;\nconst GHOST_TEXT_CLASS_NAME = 'ghost-text';\n\nexport class GhostTextView extends Disposable {\n\tprivate readonly _isDisposed;\n\tprivate readonly _editorObs;\n\tpublic static hot = createHotClass(GhostTextView);\n\n\tprivate _warningState;\n\n\tprivate readonly _onDidClick;\n\tpublic readonly onDidClick;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _model: IGhostTextWidgetModel,\n\t\tprivate readonly _options: IObservable<{\n\t\t\textraClasses?: string[];\n\t\t\tsyntaxHighlightingEnabled: boolean;\n\t\t}>,\n\t\tprivate readonly _shouldKeepCursorStable: boolean,\n\t\tprivate readonly _isClickable: boolean,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._isDisposed = observableValue(this, false);\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._warningState = derived(reader => {\n\t\t\tconst gt = this._model.ghostText.read(reader);\n\t\t\tif (!gt) { return undefined; }\n\t\t\tconst warning = this._model.warning.read(reader);\n\t\t\tif (!warning) { return undefined; }\n\t\t\treturn { lineNumber: gt.lineNumber, position: new Position(gt.lineNumber, gt.parts[0].column), icon: warning.icon };\n\t\t});\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._useSyntaxHighlighting = this._options.map(o => o.syntaxHighlightingEnabled);\n\t\tthis._extraClassNames = derived(this, reader => {\n\t\t\tconst extraClasses = [...this._options.read(reader).extraClasses ?? []];\n\t\t\tif (this._useSyntaxHighlighting.read(reader)) {\n\t\t\t\textraClasses.push('syntax-highlighted');\n\t\t\t}\n\t\t\tif (USE_SQUIGGLES_FOR_WARNING && this._warningState.read(reader)) {\n\t\t\t\textraClasses.push('warning');\n\t\t\t}\n\t\t\tconst extraClassNames = extraClasses.map(c => ` ${c}`).join('');\n\t\t\treturn extraClassNames;\n\t\t});\n\t\tthis.uiState = derived(this, reader => {\n\t\t\tif (this._isDisposed.read(reader)) { return undefined; }\n\t\t\tconst textModel = this._editorObs.model.read(reader);\n\t\t\tif (textModel !== this._model.targetTextModel.read(reader)) { return undefined; }\n\t\t\tconst ghostText = this._model.ghostText.read(reader);\n\t\t\tif (!ghostText) { return undefined; }\n\n\t\t\tconst replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n\n\t\t\tconst syntaxHighlightingEnabled = this._useSyntaxHighlighting.read(reader);\n\t\t\tconst extraClassNames = this._extraClassNames.read(reader);\n\t\t\tconst { inlineTexts, additionalLines, hiddenRange, additionalLinesOriginalSuffix } = computeGhostTextViewData(ghostText, textModel, GHOST_TEXT_CLASS_NAME + extraClassNames);\n\n\t\t\tconst currentLine = textModel.getLineContent(ghostText.lineNumber);\n\t\t\tconst edit = new StringEdit(inlineTexts.map(t => StringReplacement.insert(t.column - 1, t.text)));\n\t\t\tconst tokens = syntaxHighlightingEnabled ? textModel.tokenization.tokenizeLinesAt(ghostText.lineNumber, [edit.apply(currentLine), ...additionalLines.map(l => l.content)]) : undefined;\n\t\t\tconst newRanges = edit.getNewRanges();\n\t\t\tconst inlineTextsWithTokens = inlineTexts.map((t, idx) => ({ ...t, tokens: tokens?.[0]?.getTokensInRange(newRanges[idx]) }));\n\n\t\t\tconst tokenizedAdditionalLines: LineData[] = additionalLines.map((l, idx) => {\n\t\t\t\tlet content = tokens?.[idx + 1] ?? LineTokens.createEmpty(l.content, this._languageService.languageIdCodec);\n\t\t\t\tif (idx === additionalLines.length - 1 && additionalLinesOriginalSuffix) {\n\t\t\t\t\tconst t = TokenWithTextArray.fromLineTokens(textModel.tokenization.getLineTokens(additionalLinesOriginalSuffix.lineNumber));\n\t\t\t\t\tconst existingContent = t.slice(additionalLinesOriginalSuffix.columnRange.toZeroBasedOffsetRange());\n\t\t\t\t\tcontent = TokenWithTextArray.fromLineTokens(content).append(existingContent).toLineTokens(content.languageIdCodec);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tdecorations: l.decorations,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst cursorColumn = this._editor.getSelection()?.getStartPosition().column!;\n\t\t\tconst disjointInlineTexts = inlineTextsWithTokens.filter(inline => inline.text !== '');\n\t\t\tconst hasInsertionOnCurrentLine = disjointInlineTexts.length !== 0;\n\t\t\tconst renderData: InlineCompletionViewData = {\n\t\t\t\tcursorColumnDistance: (hasInsertionOnCurrentLine ? disjointInlineTexts[0].column : 1) - cursorColumn,\n\t\t\t\tcursorLineDistance: hasInsertionOnCurrentLine ? 0 : (additionalLines.findIndex(line => line.content !== '') + 1),\n\t\t\t\tlineCountOriginal: hasInsertionOnCurrentLine ? 1 : 0,\n\t\t\t\tlineCountModified: additionalLines.length + (hasInsertionOnCurrentLine ? 1 : 0),\n\t\t\t\tcharacterCountOriginal: 0,\n\t\t\t\tcharacterCountModified: sum(disjointInlineTexts.map(inline => inline.text.length)) + sum(tokenizedAdditionalLines.map(line => line.content.getTextLength())),\n\t\t\t\tdisjointReplacements: disjointInlineTexts.length + (additionalLines.length > 0 ? 1 : 0),\n\t\t\t\tsameShapeReplacements: disjointInlineTexts.length > 1 && tokenizedAdditionalLines.length === 0 ? disjointInlineTexts.every(inline => inline.text === disjointInlineTexts[0].text) : undefined,\n\t\t\t};\n\t\t\tthis._model.handleInlineCompletionShown.read(reader)?.(renderData);\n\n\t\t\treturn {\n\t\t\t\treplacedRange,\n\t\t\t\tinlineTexts: inlineTextsWithTokens,\n\t\t\t\tadditionalLines: tokenizedAdditionalLines,\n\t\t\t\thiddenRange,\n\t\t\t\tlineNumber: ghostText.lineNumber,\n\t\t\t\tadditionalReservedLineCount: this._model.minReservedLineCount.read(reader),\n\t\t\t\ttargetTextModel: textModel,\n\t\t\t\tsyntaxHighlightingEnabled,\n\t\t\t};\n\t\t});\n\t\tthis.decorations = derived(this, reader => {\n\t\t\tconst uiState = this.uiState.read(reader);\n\t\t\tif (!uiState) { return []; }\n\n\t\t\tconst decorations: IModelDeltaDecoration[] = [];\n\n\t\t\tconst extraClassNames = this._extraClassNames.read(reader);\n\n\t\t\tif (uiState.replacedRange) {\n\t\t\t\tdecorations.push({\n\t\t\t\t\trange: uiState.replacedRange.toRange(uiState.lineNumber),\n\t\t\t\t\toptions: { inlineClassName: 'inline-completion-text-to-replace' + extraClassNames, description: 'GhostTextReplacement' }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (uiState.hiddenRange) {\n\t\t\t\tdecorations.push({\n\t\t\t\t\trange: uiState.hiddenRange.toRange(uiState.lineNumber),\n\t\t\t\t\toptions: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfor (const p of uiState.inlineTexts) {\n\t\t\t\tdecorations.push({\n\t\t\t\t\trange: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tdescription: 'ghost-text-decoration',\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontent: p.text,\n\t\t\t\t\t\t\ttokens: p.tokens,\n\t\t\t\t\t\t\tinlineClassName: (p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration')\n\t\t\t\t\t\t\t\t+ (this._isClickable ? ' clickable' : '')\n\t\t\t\t\t\t\t\t+ extraClassNames\n\t\t\t\t\t\t\t\t+ p.lineDecorations.map(d => ' ' + d.className).join(' '), // TODO: take the ranges into account for line decorations\n\t\t\t\t\t\t\tcursorStops: InjectedTextCursorStops.Left,\n\t\t\t\t\t\t\tattachedData: new GhostTextAttachedData(this),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn decorations;\n\t\t});\n\t\tthis._additionalLinesWidget = this._register(\n\t\t\tnew AdditionalLinesWidget(\n\t\t\t\tthis._editor,\n\t\t\t\tderived(reader => {\n\t\t\t\t\t/** @description lines */\n\t\t\t\t\tconst uiState = this.uiState.read(reader);\n\t\t\t\t\treturn uiState ? {\n\t\t\t\t\t\tlineNumber: uiState.lineNumber,\n\t\t\t\t\t\tadditionalLines: uiState.additionalLines,\n\t\t\t\t\t\tminReservedLineCount: uiState.additionalReservedLineCount,\n\t\t\t\t\t\ttargetTextModel: uiState.targetTextModel,\n\t\t\t\t\t} : undefined;\n\t\t\t\t}),\n\t\t\t\tthis._shouldKeepCursorStable,\n\t\t\t\tthis._isClickable\n\t\t\t)\n\t\t);\n\t\tthis._isInlineTextHovered = this._editorObs.isTargetHovered(\n\t\t\tp => p.target.type === MouseTargetType.CONTENT_TEXT &&\n\t\t\t\tp.target.detail.injectedText?.options.attachedData instanceof GhostTextAttachedData &&\n\t\t\t\tp.target.detail.injectedText.options.attachedData.owner === this,\n\t\t\tthis._store\n\t\t);\n\t\tthis.isHovered = derived(this, reader => {\n\t\t\tif (this._isDisposed.read(reader)) { return false; }\n\t\t\treturn this._isInlineTextHovered.read(reader) || this._additionalLinesWidget.isHovered.read(reader);\n\t\t});\n\t\tthis.height = derived(this, reader => {\n\t\t\tconst lineHeight = this._editorObs.getOption(EditorOption.lineHeight).read(reader);\n\t\t\treturn lineHeight + (this._additionalLinesWidget.viewZoneHeight.read(reader) ?? 0);\n\t\t});\n\n\t\tthis._register(toDisposable(() => { this._isDisposed.set(true, undefined); }));\n\t\tthis._register(this._editorObs.setDecorations(this.decorations));\n\n\t\tif (this._isClickable) {\n\t\t\tthis._register(this._additionalLinesWidget.onDidClick((e) => this._onDidClick.fire(e)));\n\t\t\tthis._register(this._editor.onMouseUp(e => {\n\t\t\t\tif (e.target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst a = e.target.detail.injectedText?.options.attachedData;\n\t\t\t\tif (a instanceof GhostTextAttachedData && a.owner === this) {\n\t\t\t\t\tthis._onDidClick.fire(e.event);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tif (USE_SQUIGGLES_FOR_WARNING) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst state = this._warningState.read(reader);\n\t\t\tif (!state) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst lineHeight = this._editorObs.getOption(EditorOption.lineHeight);\n\t\t\tstore.add(this._editorObs.createContentWidget({\n\t\t\t\tposition: constObservable<IContentWidgetPosition>({\n\t\t\t\t\tposition: new Position(state.lineNumber, Number.MAX_SAFE_INTEGER),\n\t\t\t\t\tpreference: [ContentWidgetPositionPreference.EXACT],\n\t\t\t\t\tpositionAffinity: PositionAffinity.Right,\n\t\t\t\t}),\n\t\t\t\tallowEditorOverflow: false,\n\t\t\t\tdomNode: n.div({\n\t\t\t\t\tclass: 'ghost-text-view-warning-widget',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\twidth: lineHeight,\n\t\t\t\t\t\theight: lineHeight,\n\t\t\t\t\t\tmarginLeft: 4,\n\t\t\t\t\t\tcolor: 'orange',\n\t\t\t\t\t},\n\t\t\t\t\tref: (dom) => {\n\t\t\t\t\t\t(dom as any as WidgetDomElement).ghostTextViewWarningWidgetData = { range: Range.fromPositions(state.position) };\n\t\t\t\t\t}\n\t\t\t\t}, [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tclass: 'ghost-text-view-warning-widget-icon',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\talignContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\trenderIcon((state.icon && 'id' in state.icon) ? state.icon : Codicon.warning),\n\t\t\t\t\t])\n\t\t\t\t]).keepUpdated(store).element,\n\t\t\t}));\n\t\t}));\n\t}\n\n\tpublic static getWarningWidgetContext(domNode: HTMLElement): { range: Range } | undefined {\n\t\tconst data = (domNode as any as WidgetDomElement).ghostTextViewWarningWidgetData;\n\t\tif (data) {\n\t\t\treturn data;\n\t\t} else if (domNode.parentElement) {\n\t\t\treturn this.getWarningWidgetContext(domNode.parentElement);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _useSyntaxHighlighting;\n\n\tprivate readonly _extraClassNames;\n\n\tprivate readonly uiState;\n\n\tprivate readonly decorations;\n\n\tprivate readonly _additionalLinesWidget;\n\n\tprivate readonly _isInlineTextHovered;\n\n\tpublic readonly isHovered;\n\n\tpublic readonly height;\n\n\tpublic ownsViewZone(viewZoneId: string): boolean {\n\t\treturn this._additionalLinesWidget.viewZoneId === viewZoneId;\n\t}\n}\n\nclass GhostTextAttachedData {\n\tconstructor(public readonly owner: GhostTextView) { }\n}\n\ninterface WidgetDomElement {\n\tghostTextViewWarningWidgetData?: {\n\t\trange: Range;\n\t};\n}\n\nfunction computeGhostTextViewData(ghostText: GhostText | GhostTextReplacement, textModel: ITextModel, ghostTextClassName: string) {\n\tconst inlineTexts: { column: number; text: string; preview: boolean; lineDecorations: LineDecoration[] }[] = [];\n\tconst additionalLines: { content: string; decorations: LineDecoration[] }[] = [];\n\n\tfunction addToAdditionalLines(ghLines: readonly IGhostTextLine[], className: string | undefined) {\n\t\tif (additionalLines.length > 0) {\n\t\t\tconst lastLine = additionalLines[additionalLines.length - 1];\n\t\t\tif (className) {\n\t\t\t\tlastLine.decorations.push(new LineDecoration(\n\t\t\t\t\tlastLine.content.length + 1,\n\t\t\t\t\tlastLine.content.length + 1 + ghLines[0].line.length,\n\t\t\t\t\tclassName,\n\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t));\n\t\t\t}\n\t\t\tlastLine.content += ghLines[0].line;\n\n\t\t\tghLines = ghLines.slice(1);\n\t\t}\n\t\tfor (const ghLine of ghLines) {\n\t\t\tadditionalLines.push({\n\t\t\t\tcontent: ghLine.line,\n\t\t\t\tdecorations: className ? [new LineDecoration(\n\t\t\t\t\t1,\n\t\t\t\t\tghLine.line.length + 1,\n\t\t\t\t\tclassName,\n\t\t\t\t\tInlineDecorationType.Regular\n\t\t\t\t), ...ghLine.lineDecorations] : [...ghLine.lineDecorations]\n\t\t\t});\n\t\t}\n\t}\n\n\tconst textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n\n\tlet hiddenTextStartColumn: number | undefined = undefined;\n\tlet lastIdx = 0;\n\tfor (const part of ghostText.parts) {\n\t\tlet ghLines = part.lines;\n\t\tif (hiddenTextStartColumn === undefined) {\n\t\t\tinlineTexts.push({ column: part.column, text: ghLines[0].line, preview: part.preview, lineDecorations: ghLines[0].lineDecorations });\n\t\t\tghLines = ghLines.slice(1);\n\t\t} else {\n\t\t\taddToAdditionalLines([{ line: textBufferLine.substring(lastIdx, part.column - 1), lineDecorations: [] }], undefined);\n\t\t}\n\n\t\tif (ghLines.length > 0) {\n\t\t\taddToAdditionalLines(ghLines, ghostTextClassName);\n\t\t\tif (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n\t\t\t\thiddenTextStartColumn = part.column;\n\t\t\t}\n\t\t}\n\n\t\tlastIdx = part.column - 1;\n\t}\n\tlet additionalLinesOriginalSuffix: RangeSingleLine | undefined = undefined;\n\tif (hiddenTextStartColumn !== undefined) {\n\t\tadditionalLinesOriginalSuffix = new RangeSingleLine(ghostText.lineNumber, new ColumnRange(lastIdx + 1, textBufferLine.length + 1));\n\t}\n\n\tconst hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n\n\treturn {\n\t\tinlineTexts,\n\t\tadditionalLines,\n\t\thiddenRange,\n\t\tadditionalLinesOriginalSuffix,\n\t};\n}\n\nexport class AdditionalLinesWidget extends Disposable {\n\tprivate _viewZoneInfo: { viewZoneId: string; heightInLines: number; lineNumber: number } | undefined;\n\tpublic get viewZoneId(): string | undefined { return this._viewZoneInfo?.viewZoneId; }\n\n\tprivate _viewZoneHeight;\n\tpublic get viewZoneHeight(): IObservable<number | undefined> { return this._viewZoneHeight; }\n\n\tprivate readonly editorOptionsChanged;\n\n\tprivate readonly _onDidClick;\n\tpublic readonly onDidClick;\n\n\tprivate readonly _viewZoneListener;\n\n\treadonly isHovered;\n\n\tprivate hasBeenAccepted;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _lines: IObservable<{\n\t\t\ttargetTextModel: ITextModel;\n\t\t\tlineNumber: number;\n\t\t\tadditionalLines: LineData[];\n\t\t\tminReservedLineCount: number;\n\t\t} | undefined>,\n\t\tprivate readonly _shouldKeepCursorStable: boolean,\n\t\tprivate readonly _isClickable: boolean,\n\t) {\n\t\tsuper();\n\t\tthis._viewZoneHeight = observableValue<undefined | number>('viewZoneHeight', undefined);\n\t\tthis.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(\n\t\t\tthis._editor.onDidChangeConfiguration,\n\t\t\te => e.hasChanged(EditorOption.disableMonospaceOptimizations)\n\t\t\t\t|| e.hasChanged(EditorOption.stopRenderingLineAfter)\n\t\t\t\t|| e.hasChanged(EditorOption.renderWhitespace)\n\t\t\t\t|| e.hasChanged(EditorOption.renderControlCharacters)\n\t\t\t\t|| e.hasChanged(EditorOption.fontLigatures)\n\t\t\t\t|| e.hasChanged(EditorOption.fontInfo)\n\t\t\t\t|| e.hasChanged(EditorOption.lineHeight)\n\t\t));\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._viewZoneListener = this._register(new MutableDisposable());\n\t\tthis.isHovered = observableCodeEditor(this._editor).isTargetHovered(\n\t\t\tp => isTargetGhostText(p.target.element),\n\t\t\tthis._store\n\t\t);\n\t\tthis.hasBeenAccepted = false;\n\n\t\tif (this._editor instanceof CodeEditorWidget && this._shouldKeepCursorStable) {\n\t\t\tthis._register(this._editor.onBeforeExecuteEdit(e => this.hasBeenAccepted = e.source === 'inlineSuggestion.accept'));\n\t\t}\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update view zone */\n\t\t\tconst lines = this._lines.read(reader);\n\t\t\tthis.editorOptionsChanged.read(reader);\n\n\t\t\tif (lines) {\n\t\t\t\tthis.hasBeenAccepted = false;\n\t\t\t\tthis.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.clear();\n\t}\n\n\tprivate clear(): void {\n\t\tthis._viewZoneListener.clear();\n\n\t\tthis._editor.changeViewZones((changeAccessor) => {\n\t\t\tthis.removeActiveViewZone(changeAccessor);\n\t\t});\n\t}\n\n\tprivate updateLines(lineNumber: number, additionalLines: LineData[], minReservedLineCount: number): void {\n\t\tconst textModel = this._editor.getModel();\n\t\tif (!textModel) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { tabSize } = textModel.getOptions();\n\n\t\tthis._editor.changeViewZones((changeAccessor) => {\n\t\t\tconst store = new DisposableStore();\n\n\t\t\tthis.removeActiveViewZone(changeAccessor);\n\n\t\t\tconst heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n\t\t\tif (heightInLines > 0) {\n\t\t\t\tconst domNode = document.createElement('div');\n\t\t\t\trenderLines(domNode, tabSize, additionalLines, this._editor.getOptions(), this._isClickable);\n\n\t\t\t\tif (this._isClickable) {\n\t\t\t\t\tstore.add(addDisposableListener(domNode, 'mousedown', (e) => {\n\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t}));\n\t\t\t\t\tstore.add(addDisposableListener(domNode, 'click', (e) => {\n\t\t\t\t\t\tif (isTargetGhostText(e.target)) {\n\t\t\t\t\t\t\tthis._onDidClick.fire(new StandardMouseEvent(getWindow(e), e));\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis.addViewZone(changeAccessor, lineNumber, heightInLines, domNode);\n\t\t\t}\n\n\t\t\tthis._viewZoneListener.value = store;\n\t\t});\n\t}\n\n\tprivate addViewZone(changeAccessor: IViewZoneChangeAccessor, afterLineNumber: number, heightInLines: number, domNode: HTMLElement): void {\n\t\tconst id = changeAccessor.addZone({\n\t\t\tafterLineNumber: afterLineNumber,\n\t\t\theightInLines: heightInLines,\n\t\t\tdomNode,\n\t\t\tafterColumnAffinity: PositionAffinity.Right,\n\t\t\tonComputedHeight: (height: number) => {\n\t\t\t\tthis._viewZoneHeight.set(height, undefined); // TODO: can a transaction be used to avoid flickering?\n\t\t\t}\n\t\t});\n\n\t\tthis.keepCursorStable(afterLineNumber, heightInLines);\n\n\t\tthis._viewZoneInfo = { viewZoneId: id, heightInLines, lineNumber: afterLineNumber };\n\t}\n\n\tprivate removeActiveViewZone(changeAccessor: IViewZoneChangeAccessor): void {\n\t\tif (this._viewZoneInfo) {\n\t\t\tchangeAccessor.removeZone(this._viewZoneInfo.viewZoneId);\n\n\t\t\tif (!this.hasBeenAccepted) {\n\t\t\t\tthis.keepCursorStable(this._viewZoneInfo.lineNumber, -this._viewZoneInfo.heightInLines);\n\t\t\t}\n\n\t\t\tthis._viewZoneInfo = undefined;\n\t\t\tthis._viewZoneHeight.set(undefined, undefined);\n\t\t}\n\t}\n\n\tprivate keepCursorStable(lineNumber: number, heightInLines: number): void {\n\t\tif (!this._shouldKeepCursorStable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cursorLineNumber = this._editor.getSelection()?.getStartPosition()?.lineNumber;\n\t\tif (cursorLineNumber !== undefined && lineNumber < cursorLineNumber) {\n\t\t\tthis._editor.setScrollTop(this._editor.getScrollTop() + heightInLines * this._editor.getOption(EditorOption.lineHeight));\n\t\t}\n\t}\n}\n\nfunction isTargetGhostText(target: EventTarget | null): boolean {\n\treturn isHTMLElement(target) && target.classList.contains(GHOST_TEXT_CLASS_NAME);\n}\n\nexport interface LineData {\n\tcontent: LineTokens; // Must not contain a linebreak!\n\tdecorations: LineDecoration[];\n}\n\nfunction renderLines(domNode: HTMLElement, tabSize: number, lines: LineData[], opts: IComputedEditorOptions, isClickable: boolean): void {\n\tconst disableMonospaceOptimizations = opts.get(EditorOption.disableMonospaceOptimizations);\n\tconst stopRenderingLineAfter = opts.get(EditorOption.stopRenderingLineAfter);\n\t// To avoid visual confusion, we don't want to render visible whitespace\n\tconst renderWhitespace = 'none';\n\tconst renderControlCharacters = opts.get(EditorOption.renderControlCharacters);\n\tconst fontLigatures = opts.get(EditorOption.fontLigatures);\n\tconst fontInfo = opts.get(EditorOption.fontInfo);\n\tconst lineHeight = opts.get(EditorOption.lineHeight);\n\n\tlet classNames = 'suggest-preview-text';\n\tif (isClickable) {\n\t\tclassNames += ' clickable';\n\t}\n\n\tconst sb = new StringBuilder(10000);\n\tsb.appendString(`<div class=\"${classNames}\">`);\n\n\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\tconst lineData = lines[i];\n\t\tconst lineTokens = lineData.content;\n\t\tsb.appendString('<div class=\"view-line');\n\t\tsb.appendString('\" style=\"top:');\n\t\tsb.appendString(String(i * lineHeight));\n\t\tsb.appendString('px;width:1000000px;\">');\n\n\t\tconst line = lineTokens.getLineContent();\n\t\tconst isBasicASCII = strings.isBasicASCII(line);\n\t\tconst containsRTL = strings.containsRTL(line);\n\n\t\trenderViewLine(new RenderLineInput(\n\t\t\t(fontInfo.isMonospace && !disableMonospaceOptimizations),\n\t\t\tfontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tline,\n\t\t\tfalse,\n\t\t\tisBasicASCII,\n\t\t\tcontainsRTL,\n\t\t\t0,\n\t\t\tlineTokens,\n\t\t\tlineData.decorations,\n\t\t\ttabSize,\n\t\t\t0,\n\t\t\tfontInfo.spaceWidth,\n\t\t\tfontInfo.middotWidth,\n\t\t\tfontInfo.wsmiddotWidth,\n\t\t\tstopRenderingLineAfter,\n\t\t\trenderWhitespace,\n\t\t\trenderControlCharacters,\n\t\t\tfontLigatures !== EditorFontLigatures.OFF,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t0\n\t\t), sb);\n\n\t\tsb.appendString('</div>');\n\t}\n\tsb.appendString('</div>');\n\n\tapplyFontInfo(domNode, fontInfo);\n\tconst html = sb.build();\n\tconst trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n\tdomNode.innerHTML = trustedhtml as string;\n}\n\nexport const ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4809, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditWithChanges.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditWithChanges.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditWithChanges.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LineReplacement } from '../../../../../common/core/edits/lineEdit.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { TextEdit } from '../../../../../common/core/edits/textEdit.js';\nimport { AbstractText } from '../../../../../common/core/text/abstractText.js';\nimport { InlineCompletionCommand } from '../../../../../common/languages.js';\nimport { InlineSuggestionItem } from '../../model/inlineSuggestionItem.js';\n\nexport class InlineEditWithChanges {\n\tpublic get lineEdit() {\n\t\treturn LineReplacement.fromSingleTextEdit(this.edit.toReplacement(this.originalText), this.originalText);\n\t}\n\n\tpublic get originalLineRange() { return this.lineEdit.lineRange; }\n\tpublic get modifiedLineRange() { return this.lineEdit.toLineEdit().getNewLineRanges()[0]; }\n\n\tpublic get displayRange() {\n\t\treturn this.originalText.lineRange.intersect(\n\t\t\tthis.originalLineRange.join(\n\t\t\t\tLineRange.ofLength(this.originalLineRange.startLineNumber, this.lineEdit.newLines.length)\n\t\t\t)\n\t\t)!;\n\t}\n\n\tconstructor(\n\t\tpublic readonly originalText: AbstractText,\n\t\tpublic readonly edit: TextEdit,\n\t\tpublic readonly cursorPosition: Position,\n\t\tpublic readonly commands: readonly InlineCompletionCommand[],\n\t\tpublic readonly inlineCompletion: InlineSuggestionItem\n\t) {\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LineReplacement } from '../../../../../common/core/edits/lineEdit.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { TextEdit } from '../../../../../common/core/edits/textEdit.js';\nimport { AbstractText } from '../../../../../common/core/text/abstractText.js';\nimport { InlineCompletionCommand } from '../../../../../common/languages.js';\nimport { InlineSuggestionItem } from '../../model/inlineSuggestionItem.js';\n\nexport class InlineEditWithChanges {\n\tpublic get lineEdit() {\n\t\treturn LineReplacement.fromSingleTextEdit(this.edit.toReplacement(this.originalText), this.originalText);\n\t}\n\n\tpublic get originalLineRange() { return this.lineEdit.lineRange; }\n\tpublic get modifiedLineRange() { return this.lineEdit.toLineEdit().getNewLineRanges()[0]; }\n\n\tpublic get displayRange() {\n\t\treturn this.originalText.lineRange.intersect(\n\t\t\tthis.originalLineRange.join(\n\t\t\t\tLineRange.ofLength(this.originalLineRange.startLineNumber, this.lineEdit.newLines.length)\n\t\t\t)\n\t\t)!;\n\t}\n\n\tconstructor(\n\t\tpublic readonly originalText: AbstractText,\n\t\tpublic readonly edit: TextEdit,\n\t\tpublic readonly cursorPosition: Position,\n\t\tpublic readonly commands: readonly InlineCompletionCommand[],\n\t\tpublic readonly inlineCompletion: InlineSuggestionItem\n\t) {\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,eAAe,EAAE,MAAM,8CAA8C,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,gDAAgD,CAAC;;;AAOrE,MAAO,qBAAqB;IACjC,IAAW,QAAQ,GAAA;QAClB,OAAO,iNAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;IAC1G,CAAC;IAED,IAAW,iBAAiB,GAAA;QAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;IAAC,CAAC;IAClE,IAAW,iBAAiB,GAAA;QAAK,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;IAAC,CAAC;IAE3F,IAAW,YAAY,GAAA;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAC3C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAC1B,6MAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CACzF,CACA,CAAC;IACJ,CAAC;IAED,YACiB,YAA0B,EAC1B,IAAc,EACd,cAAwB,EACxB,QAA4C,EAC5C,gBAAsC,CAAA;QAJtC,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAc;QAC1B,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAU;QACd,IAAA,CAAA,cAAc,GAAd,cAAc,CAAU;QACxB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAoC;QAC5C,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB,CAAsB;IAEvD,CAAC;CACD","debugId":null}},
    {"offset": {"line": 4845, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsModel.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsModel.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from '../../../../../../base/common/event.js';\nimport { derived, IObservable } from '../../../../../../base/common/observable.js';\nimport { localize } from '../../../../../../nls.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { TextEdit } from '../../../../../common/core/edits/textEdit.js';\nimport { StringText } from '../../../../../common/core/text/abstractText.js';\nimport { Command, InlineCompletionCommand, InlineCompletionDisplayLocation } from '../../../../../common/languages.js';\nimport { InlineCompletionsModel } from '../../model/inlineCompletionsModel.js';\nimport { InlineCompletionItem } from '../../model/inlineSuggestionItem.js';\nimport { IInlineEditHost, IInlineEditModel, InlineCompletionViewData, InlineCompletionViewKind, InlineEditTabAction } from './inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\n\nexport class InlineEditModel implements IInlineEditModel {\n\n\treadonly action: Command | undefined;\n\treadonly displayName: string;\n\treadonly extensionCommands: InlineCompletionCommand[];\n\treadonly isInDiffEditor: boolean;\n\n\treadonly displayLocation: InlineCompletionDisplayLocation | undefined;\n\treadonly showCollapsed: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _model: InlineCompletionsModel,\n\t\treadonly inlineEdit: InlineEditWithChanges,\n\t\treadonly tabAction: IObservable<InlineEditTabAction>,\n\t) {\n\t\tthis.action = this.inlineEdit.inlineCompletion.action;\n\t\tthis.displayName = this.inlineEdit.inlineCompletion.source.provider.displayName ?? localize('inlineEdit', \"Inline Edit\");\n\t\tthis.extensionCommands = this.inlineEdit.inlineCompletion.source.inlineSuggestions.commands ?? [];\n\t\tthis.isInDiffEditor = this._model.isInDiffEditor;\n\n\t\tthis.displayLocation = this.inlineEdit.inlineCompletion.displayLocation;\n\t\tthis.showCollapsed = this._model.showCollapsed;\n\t}\n\n\taccept() {\n\t\tthis._model.accept();\n\t}\n\n\tjump() {\n\t\tthis._model.jump();\n\t}\n\n\tabort(reason: string) {\n\t\tconsole.error(reason);\n\t\tthis.inlineEdit.inlineCompletion.reportInlineEditError(reason);\n\t\tthis._model.stop();\n\t}\n\n\thandleInlineEditShown(viewKind: InlineCompletionViewKind, viewData: InlineCompletionViewData) {\n\t\tthis._model.handleInlineSuggestionShown(this.inlineEdit.inlineCompletion, viewKind, viewData);\n\t}\n}\n\nexport class InlineEditHost implements IInlineEditHost {\n\treadonly onDidAccept: Event<void>;\n\treadonly inAcceptFlow: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _model: InlineCompletionsModel,\n\t) {\n\t\tthis.onDidAccept = this._model.onDidAccept;\n\t\tthis.inAcceptFlow = this._model.inAcceptFlow;\n\t}\n}\n\nexport class GhostTextIndicator {\n\n\treadonly model: InlineEditModel;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\tmodel: InlineCompletionsModel,\n\t\treadonly lineRange: LineRange,\n\t\tinlineCompletion: InlineCompletionItem,\n\t) {\n\t\tconst editorObs = observableCodeEditor(editor);\n\t\tconst tabAction = derived<InlineEditTabAction>(this, reader => {\n\t\t\tif (editorObs.isFocused.read(reader)) {\n\t\t\t\tif (inlineCompletion.showInlineEditMenu) {\n\t\t\t\t\treturn InlineEditTabAction.Accept;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn InlineEditTabAction.Inactive;\n\t\t});\n\n\t\tthis.model = new InlineEditModel(\n\t\t\tmodel,\n\t\t\tnew InlineEditWithChanges(\n\t\t\t\tnew StringText(''),\n\t\t\t\tnew TextEdit([inlineCompletion.getSingleTextEdit()]),\n\t\t\t\tmodel.primaryPosition.get(),\n\t\t\t\tinlineCompletion.source.inlineSuggestions.commands ?? [],\n\t\t\t\tinlineCompletion\n\t\t\t),\n\t\t\ttabAction,\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4926, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/theme.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/theme.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from '../../../../../../base/common/color.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { IObservable, observableFromEventOpts } from '../../../../../../base/common/observable.js';\nimport { localize } from '../../../../../../nls.js';\nimport { buttonBackground, buttonForeground, buttonSecondaryBackground, buttonSecondaryForeground, diffInserted, diffInsertedLine, diffRemoved, editorBackground } from '../../../../../../platform/theme/common/colorRegistry.js';\nimport { ColorIdentifier, darken, registerColor, transparent } from '../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../platform/theme/common/themeService.js';\nimport { InlineEditTabAction } from './inlineEditsViewInterface.js';\n\nexport const originalBackgroundColor = registerColor(\n\t'inlineEdit.originalBackground',\n\ttransparent(diffRemoved, 0.2),\n\tlocalize('inlineEdit.originalBackground', 'Background color for the original text in inline edits.'),\n\ttrue\n);\nexport const modifiedBackgroundColor = registerColor(\n\t'inlineEdit.modifiedBackground',\n\ttransparent(diffInserted, 0.3),\n\tlocalize('inlineEdit.modifiedBackground', 'Background color for the modified text in inline edits.'),\n\ttrue\n);\n\nexport const originalChangedLineBackgroundColor = registerColor(\n\t'inlineEdit.originalChangedLineBackground',\n\ttransparent(diffRemoved, 0.8),\n\tlocalize('inlineEdit.originalChangedLineBackground', 'Background color for the changed lines in the original text of inline edits.'),\n\ttrue\n);\n\nexport const originalChangedTextOverlayColor = registerColor(\n\t'inlineEdit.originalChangedTextBackground',\n\ttransparent(diffRemoved, 0.8),\n\tlocalize('inlineEdit.originalChangedTextBackground', 'Overlay color for the changed text in the original text of inline edits.'),\n\ttrue\n);\n\nexport const modifiedChangedLineBackgroundColor = registerColor(\n\t'inlineEdit.modifiedChangedLineBackground',\n\t{\n\t\tlight: transparent(diffInsertedLine, 0.7),\n\t\tdark: transparent(diffInsertedLine, 0.7),\n\t\thcDark: diffInsertedLine,\n\t\thcLight: diffInsertedLine\n\t},\n\tlocalize('inlineEdit.modifiedChangedLineBackground', 'Background color for the changed lines in the modified text of inline edits.'),\n\ttrue\n);\n\nexport const modifiedChangedTextOverlayColor = registerColor(\n\t'inlineEdit.modifiedChangedTextBackground',\n\ttransparent(diffInserted, 0.7),\n\tlocalize('inlineEdit.modifiedChangedTextBackground', 'Overlay color for the changed text in the modified text of inline edits.'),\n\ttrue\n);\n\n// ------- GUTTER INDICATOR -------\n\nexport const inlineEditIndicatorPrimaryForeground = registerColor(\n\t'inlineEdit.gutterIndicator.primaryForeground',\n\tbuttonForeground,\n\tlocalize('inlineEdit.gutterIndicator.primaryForeground', 'Foreground color for the primary inline edit gutter indicator.')\n);\nexport const inlineEditIndicatorPrimaryBorder = registerColor(\n\t'inlineEdit.gutterIndicator.primaryBorder',\n\tbuttonBackground,\n\tlocalize('inlineEdit.gutterIndicator.primaryBorder', 'Border color for the primary inline edit gutter indicator.')\n);\nexport const inlineEditIndicatorPrimaryBackground = registerColor(\n\t'inlineEdit.gutterIndicator.primaryBackground',\n\t{\n\t\tlight: transparent(inlineEditIndicatorPrimaryBorder, 0.5),\n\t\tdark: transparent(inlineEditIndicatorPrimaryBorder, 0.4),\n\t\thcDark: transparent(inlineEditIndicatorPrimaryBorder, 0.4),\n\t\thcLight: transparent(inlineEditIndicatorPrimaryBorder, 0.5),\n\t},\n\tlocalize('inlineEdit.gutterIndicator.primaryBackground', 'Background color for the primary inline edit gutter indicator.')\n);\n\nexport const inlineEditIndicatorSecondaryForeground = registerColor(\n\t'inlineEdit.gutterIndicator.secondaryForeground',\n\tbuttonSecondaryForeground,\n\tlocalize('inlineEdit.gutterIndicator.secondaryForeground', 'Foreground color for the secondary inline edit gutter indicator.')\n);\nexport const inlineEditIndicatorSecondaryBorder = registerColor(\n\t'inlineEdit.gutterIndicator.secondaryBorder',\n\tbuttonSecondaryBackground,\n\tlocalize('inlineEdit.gutterIndicator.secondaryBorder', 'Border color for the secondary inline edit gutter indicator.')\n);\nexport const inlineEditIndicatorSecondaryBackground = registerColor(\n\t'inlineEdit.gutterIndicator.secondaryBackground',\n\tinlineEditIndicatorSecondaryBorder,\n\tlocalize('inlineEdit.gutterIndicator.secondaryBackground', 'Background color for the secondary inline edit gutter indicator.')\n);\n\nexport const inlineEditIndicatorsuccessfulForeground = registerColor(\n\t'inlineEdit.gutterIndicator.successfulForeground',\n\tbuttonForeground,\n\tlocalize('inlineEdit.gutterIndicator.successfulForeground', 'Foreground color for the successful inline edit gutter indicator.')\n);\nexport const inlineEditIndicatorsuccessfulBorder = registerColor(\n\t'inlineEdit.gutterIndicator.successfulBorder',\n\tbuttonBackground,\n\tlocalize('inlineEdit.gutterIndicator.successfulBorder', 'Border color for the successful inline edit gutter indicator.')\n);\nexport const inlineEditIndicatorsuccessfulBackground = registerColor(\n\t'inlineEdit.gutterIndicator.successfulBackground',\n\tinlineEditIndicatorsuccessfulBorder,\n\tlocalize('inlineEdit.gutterIndicator.successfulBackground', 'Background color for the successful inline edit gutter indicator.')\n);\n\nexport const inlineEditIndicatorBackground = registerColor(\n\t'inlineEdit.gutterIndicator.background',\n\t{\n\t\thcDark: transparent('tab.inactiveBackground', 0.5),\n\t\thcLight: transparent('tab.inactiveBackground', 0.5),\n\t\tdark: transparent('tab.inactiveBackground', 0.5),\n\t\tlight: '#5f5f5f18',\n\t},\n\tlocalize('inlineEdit.gutterIndicator.background', 'Background color for the inline edit gutter indicator.')\n);\n\n// ------- BORDER COLORS -------\n\nconst originalBorder = registerColor(\n\t'inlineEdit.originalBorder',\n\t{\n\t\tlight: diffRemoved,\n\t\tdark: diffRemoved,\n\t\thcDark: diffRemoved,\n\t\thcLight: diffRemoved\n\t},\n\tlocalize('inlineEdit.originalBorder', 'Border color for the original text in inline edits.')\n);\n\nconst modifiedBorder = registerColor(\n\t'inlineEdit.modifiedBorder',\n\t{\n\t\tlight: darken(diffInserted, 0.6),\n\t\tdark: diffInserted,\n\t\thcDark: diffInserted,\n\t\thcLight: diffInserted\n\t},\n\tlocalize('inlineEdit.modifiedBorder', 'Border color for the modified text in inline edits.')\n);\n\nconst tabWillAcceptModifiedBorder = registerColor(\n\t'inlineEdit.tabWillAcceptModifiedBorder',\n\t{\n\t\tlight: darken(modifiedBorder, 0),\n\t\tdark: darken(modifiedBorder, 0),\n\t\thcDark: darken(modifiedBorder, 0),\n\t\thcLight: darken(modifiedBorder, 0)\n\t},\n\tlocalize('inlineEdit.tabWillAcceptModifiedBorder', 'Modified border color for the inline edits widget when tab will accept it.')\n);\n\nconst tabWillAcceptOriginalBorder = registerColor(\n\t'inlineEdit.tabWillAcceptOriginalBorder',\n\t{\n\t\tlight: darken(originalBorder, 0),\n\t\tdark: darken(originalBorder, 0),\n\t\thcDark: darken(originalBorder, 0),\n\t\thcLight: darken(originalBorder, 0)\n\t},\n\tlocalize('inlineEdit.tabWillAcceptOriginalBorder', 'Original border color for the inline edits widget over the original text when tab will accept it.')\n);\n\nexport function getModifiedBorderColor(tabAction: IObservable<InlineEditTabAction>): IObservable<string> {\n\treturn tabAction.map(a => a === InlineEditTabAction.Accept ? tabWillAcceptModifiedBorder : modifiedBorder);\n}\n\nexport function getOriginalBorderColor(tabAction: IObservable<InlineEditTabAction>): IObservable<string> {\n\treturn tabAction.map(a => a === InlineEditTabAction.Accept ? tabWillAcceptOriginalBorder : originalBorder);\n}\n\nexport function getEditorBlendedColor(colorIdentifier: ColorIdentifier | IObservable<ColorIdentifier>, themeService: IThemeService): IObservable<Color> {\n\tlet color: IObservable<Color>;\n\tif (typeof colorIdentifier === 'string') {\n\t\tcolor = observeColor(colorIdentifier, themeService);\n\t} else {\n\t\tcolor = colorIdentifier.map((identifier, reader) => observeColor(identifier, themeService).read(reader));\n\t}\n\n\tconst backgroundColor = observeColor(editorBackground, themeService);\n\n\treturn color.map((c, reader) => c.makeOpaque(backgroundColor.read(reader)));\n}\n\nexport function observeColor(colorIdentifier: ColorIdentifier, themeService: IThemeService): IObservable<Color> {\n\treturn observableFromEventOpts(\n\t\t{\n\t\t\towner: { observeColor: colorIdentifier },\n\t\t\tequalsFn: (a: Color, b: Color) => a.equals(b),\n\t\t},\n\t\tthemeService.onDidColorThemeChange,\n\t\t() => {\n\t\t\tconst color = themeService.getColorTheme().getColor(colorIdentifier);\n\t\t\tif (!color) {\n\t\t\t\tthrow new BugIndicatingError(`Missing color: ${colorIdentifier}`);\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\t);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5076, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils/utils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils/utils.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/utils/utils.ts"],"sourcesContent":["\nimport { numberComparator } from '../../../../../../../base/common/arrays.js';\nimport { findFirstMin } from '../../../../../../../base/common/arraysFind.js';\nimport { derived, derivedObservableWithCache, derivedOpts, IObservable, IReader } from '../../../../../../../base/common/observable.js';\nimport { splitLines } from '../../../../../../../base/common/strings.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../../../common/core/edits/textEdit.js';\nimport { RangeMapping } from '../../../../../../common/diff/rangeMapping.js';\nimport { ITextModel } from '../../../../../../common/model.js';\nimport { indentOfLine } from '../../../../../../common/model/textModel.js';\nimport { CharCode } from '../../../../../../../base/common/charCode.js';\nimport { BugIndicatingError } from '../../../../../../../base/common/errors.js';\n\nexport function maxContentWidthInRange(editor: ObservableCodeEditor, range: LineRange, reader: IReader | undefined): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\tlet maxContentWidth = 0;\n\n\teditor.scrollTop.read(reader);\n\tfor (let i = range.startLineNumber; i < range.endLineNumberExclusive; i++) {\n\t\tconst column = model.getLineMaxColumn(i);\n\t\tlet lineContentWidth = editor.editor.getOffsetForColumn(i, column);\n\t\tif (lineContentWidth === -1) {\n\t\t\t// approximation\n\t\t\tconst typicalHalfwidthCharacterWidth = editor.editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\t\tconst approximation = column * typicalHalfwidthCharacterWidth;\n\t\t\tlineContentWidth = approximation;\n\t\t}\n\t\tmaxContentWidth = Math.max(maxContentWidth, lineContentWidth);\n\t}\n\tconst lines = range.mapToLineArray(l => model.getLineContent(l));\n\n\tif (maxContentWidth < 5 && lines.some(l => l.length > 0) && model.uri.scheme !== 'file') {\n\t\tconsole.error('unexpected width');\n\t}\n\treturn maxContentWidth;\n}\n\nexport function getOffsetForPos(editor: ObservableCodeEditor, pos: Position, reader: IReader): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\n\teditor.scrollTop.read(reader);\n\tconst lineContentWidth = editor.editor.getOffsetForColumn(pos.lineNumber, pos.column);\n\n\treturn lineContentWidth;\n}\n\nexport function getPrefixTrim(diffRanges: Range[], originalLinesRange: LineRange, modifiedLines: string[], editor: ICodeEditor): { prefixTrim: number; prefixLeftOffset: number } {\n\tconst textModel = editor.getModel();\n\tif (!textModel) {\n\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t}\n\n\tconst replacementStart = diffRanges.map(r => r.isSingleLine() ? r.startColumn - 1 : 0);\n\tconst originalIndents = originalLinesRange.mapToLineArray(line => indentOfLine(textModel.getLineContent(line)));\n\tconst modifiedIndents = modifiedLines.filter(line => line !== '').map(line => indentOfLine(line));\n\tconst prefixTrim = Math.min(...replacementStart, ...originalIndents, ...modifiedIndents);\n\n\tlet prefixLeftOffset;\n\tconst startLineIndent = textModel.getLineIndentColumn(originalLinesRange.startLineNumber);\n\tif (startLineIndent >= prefixTrim + 1) {\n\t\t// We can use the editor to get the offset\n\t\tprefixLeftOffset = editor.getOffsetForColumn(originalLinesRange.startLineNumber, prefixTrim + 1);\n\t} else if (modifiedLines.length > 0) {\n\t\t// Content is not in the editor, we can use the content width to calculate the offset\n\t\tprefixLeftOffset = getContentRenderWidth(modifiedLines[0].slice(0, prefixTrim), editor, textModel);\n\t} else {\n\t\t// unable to approximate the offset\n\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t}\n\n\treturn { prefixTrim, prefixLeftOffset };\n}\n\nexport function getContentRenderWidth(content: string, editor: ICodeEditor, textModel: ITextModel) {\n\tconst w = editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\tconst tabSize = textModel.getOptions().tabSize * w;\n\n\tconst numTabs = content.split('\\t').length - 1;\n\tconst numNoneTabs = content.length - numTabs;\n\treturn numNoneTabs * w + numTabs * tabSize;\n}\n\nexport function getEditorValidOverlayRect(editor: ObservableCodeEditor): IObservable<Rect> {\n\tconst contentLeft = editor.layoutInfoContentLeft;\n\n\tconst width = derived({ name: 'editor.validOverlay.width' }, r => {\n\t\tconst hasMinimapOnTheRight = editor.layoutInfoMinimap.read(r).minimapLeft !== 0;\n\t\tconst editorWidth = editor.layoutInfoWidth.read(r) - contentLeft.read(r);\n\n\t\tif (hasMinimapOnTheRight) {\n\t\t\tconst minimapAndScrollbarWidth = editor.layoutInfoMinimap.read(r).minimapWidth + editor.layoutInfoVerticalScrollbarWidth.read(r);\n\t\t\treturn editorWidth - minimapAndScrollbarWidth;\n\t\t}\n\n\t\treturn editorWidth;\n\t});\n\n\tconst height = derived({ name: 'editor.validOverlay.height' }, r => editor.layoutInfoHeight.read(r) + editor.contentHeight.read(r));\n\n\treturn derived({ name: 'editor.validOverlay' }, r => Rect.fromLeftTopWidthHeight(contentLeft.read(r), 0, width.read(r), height.read(r)));\n}\nexport function applyEditToModifiedRangeMappings(rangeMapping: RangeMapping[], edit: TextEdit): RangeMapping[] {\n\tconst updatedMappings: RangeMapping[] = [];\n\tfor (const m of rangeMapping) {\n\t\tconst updatedRange = edit.mapRange(m.modifiedRange);\n\t\tupdatedMappings.push(new RangeMapping(m.originalRange, updatedRange));\n\t}\n\treturn updatedMappings;\n}\n\n\nexport function classNames(...classes: (string | false | undefined | null)[]) {\n\treturn classes.filter(c => typeof c === 'string').join(' ');\n}\n\nfunction offsetRangeToRange(columnOffsetRange: OffsetRange, startPos: Position): Range {\n\treturn new Range(\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.start,\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.endExclusive,\n\t);\n}\n\n/**\n * Calculates the indentation size (in spaces) of a given line,\n * interpreting tabs as the specified tab size.\n */\nfunction getIndentationSize(line: string, tabSize: number): number {\n\tlet currentSize = 0;\n\tloop: for (let i = 0, len = line.length; i < len; i++) {\n\t\tswitch (line.charCodeAt(i)) {\n\t\t\tcase CharCode.Tab: currentSize += tabSize; break;\n\t\t\tcase CharCode.Space: currentSize++; break;\n\t\t\tdefault: break loop;\n\t\t}\n\t}\n\t// if currentSize % tabSize !== 0,\n\t// then there are spaces which are not part of the indentation\n\treturn currentSize - (currentSize % tabSize);\n}\n\n/**\n * Calculates the number of characters at the start of a line that correspond to a given indentation size,\n * taking into account both tabs and spaces.\n */\nfunction indentSizeToIndentLength(line: string, indentSize: number, tabSize: number): number {\n\tlet remainingSize = indentSize - (indentSize % tabSize);\n\tlet i = 0;\n\tfor (; i < line.length; i++) {\n\t\tif (remainingSize === 0) {\n\t\t\tbreak;\n\t\t}\n\t\tswitch (line.charCodeAt(i)) {\n\t\t\tcase CharCode.Tab: remainingSize -= tabSize; break;\n\t\t\tcase CharCode.Space: remainingSize--; break;\n\t\t\tdefault: throw new BugIndicatingError('Unexpected character found while calculating indent length');\n\t\t}\n\t}\n\treturn i;\n}\n\nexport function createReindentEdit(text: string, range: LineRange, tabSize: number): TextEdit {\n\tconst newLines = splitLines(text);\n\tconst edits: TextReplacement[] = [];\n\tconst minIndentSize = findFirstMin(range.mapToLineArray(l => getIndentationSize(newLines[l - 1], tabSize)), numberComparator)!;\n\trange.forEach(lineNumber => {\n\t\tconst indentLength = indentSizeToIndentLength(newLines[lineNumber - 1], minIndentSize, tabSize);\n\t\tedits.push(new TextReplacement(offsetRangeToRange(new OffsetRange(0, indentLength), new Position(lineNumber, 1)), ''));\n\t});\n\treturn new TextEdit(edits);\n}\n\nexport class PathBuilder {\n\tprivate _data: string = '';\n\n\tpublic moveTo(point: Point): this {\n\t\tthis._data += `M ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic lineTo(point: Point): this {\n\t\tthis._data += `L ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic build(): string {\n\t\treturn this._data;\n\t}\n}\n\ntype RemoveFalsy<T> = T extends false | undefined | null ? never : T;\ntype Falsy<T> = T extends false | undefined | null ? T : never;\n\nexport function mapOutFalsy<T>(obs: IObservable<T>): IObservable<IObservable<RemoveFalsy<T>> | Falsy<T>> {\n\tconst nonUndefinedObs = derivedObservableWithCache<T | undefined | null | false>(undefined, (reader, lastValue) => obs.read(reader) || lastValue);\n\n\treturn derivedOpts({\n\t\tdebugName: () => `${obs.debugName}.mapOutFalsy`\n\t}, reader => {\n\t\tnonUndefinedObs.read(reader);\n\t\tconst val = obs.read(reader);\n\t\tif (!val) {\n\t\t\treturn undefined as Falsy<T>;\n\t\t}\n\n\t\treturn nonUndefinedObs as IObservable<RemoveFalsy<T>>;\n\t});\n}\n\nexport function rectToProps(fn: (reader: IReader) => Rect) {\n\treturn {\n\t\tleft: derived({ name: 'editor.validOverlay.left' }, reader => /** @description left */ fn(reader).left),\n\t\ttop: derived({ name: 'editor.validOverlay.top' }, reader => /** @description top */ fn(reader).top),\n\t\twidth: derived({ name: 'editor.validOverlay.width' }, reader => /** @description width */ fn(reader).right - fn(reader).left),\n\t\theight: derived({ name: 'editor.validOverlay.height' }, reader => /** @description height */ fn(reader).bottom - fn(reader).top),\n\t};\n}\n\nexport type FirstFnArg<T> = T extends (arg: infer U) => any ? U : never;\n","\nimport { numberComparator } from '../../../../../../../base/common/arrays.js';\nimport { findFirstMin } from '../../../../../../../base/common/arraysFind.js';\nimport { derived, derivedObservableWithCache, derivedOpts, IObservable, IReader } from '../../../../../../../base/common/observable.js';\nimport { splitLines } from '../../../../../../../base/common/strings.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../../../common/core/edits/textEdit.js';\nimport { RangeMapping } from '../../../../../../common/diff/rangeMapping.js';\nimport { ITextModel } from '../../../../../../common/model.js';\nimport { indentOfLine } from '../../../../../../common/model/textModel.js';\nimport { CharCode } from '../../../../../../../base/common/charCode.js';\nimport { BugIndicatingError } from '../../../../../../../base/common/errors.js';\n\nexport function maxContentWidthInRange(editor: ObservableCodeEditor, range: LineRange, reader: IReader | undefined): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\tlet maxContentWidth = 0;\n\n\teditor.scrollTop.read(reader);\n\tfor (let i = range.startLineNumber; i < range.endLineNumberExclusive; i++) {\n\t\tconst column = model.getLineMaxColumn(i);\n\t\tlet lineContentWidth = editor.editor.getOffsetForColumn(i, column);\n\t\tif (lineContentWidth === -1) {\n\t\t\t// approximation\n\t\t\tconst typicalHalfwidthCharacterWidth = editor.editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\t\tconst approximation = column * typicalHalfwidthCharacterWidth;\n\t\t\tlineContentWidth = approximation;\n\t\t}\n\t\tmaxContentWidth = Math.max(maxContentWidth, lineContentWidth);\n\t}\n\tconst lines = range.mapToLineArray(l => model.getLineContent(l));\n\n\tif (maxContentWidth < 5 && lines.some(l => l.length > 0) && model.uri.scheme !== 'file') {\n\t\tconsole.error('unexpected width');\n\t}\n\treturn maxContentWidth;\n}\n\nexport function getOffsetForPos(editor: ObservableCodeEditor, pos: Position, reader: IReader): number {\n\teditor.layoutInfo.read(reader);\n\teditor.value.read(reader);\n\n\tconst model = editor.model.read(reader);\n\tif (!model) { return 0; }\n\n\teditor.scrollTop.read(reader);\n\tconst lineContentWidth = editor.editor.getOffsetForColumn(pos.lineNumber, pos.column);\n\n\treturn lineContentWidth;\n}\n\nexport function getPrefixTrim(diffRanges: Range[], originalLinesRange: LineRange, modifiedLines: string[], editor: ICodeEditor): { prefixTrim: number; prefixLeftOffset: number } {\n\tconst textModel = editor.getModel();\n\tif (!textModel) {\n\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t}\n\n\tconst replacementStart = diffRanges.map(r => r.isSingleLine() ? r.startColumn - 1 : 0);\n\tconst originalIndents = originalLinesRange.mapToLineArray(line => indentOfLine(textModel.getLineContent(line)));\n\tconst modifiedIndents = modifiedLines.filter(line => line !== '').map(line => indentOfLine(line));\n\tconst prefixTrim = Math.min(...replacementStart, ...originalIndents, ...modifiedIndents);\n\n\tlet prefixLeftOffset;\n\tconst startLineIndent = textModel.getLineIndentColumn(originalLinesRange.startLineNumber);\n\tif (startLineIndent >= prefixTrim + 1) {\n\t\t// We can use the editor to get the offset\n\t\tprefixLeftOffset = editor.getOffsetForColumn(originalLinesRange.startLineNumber, prefixTrim + 1);\n\t} else if (modifiedLines.length > 0) {\n\t\t// Content is not in the editor, we can use the content width to calculate the offset\n\t\tprefixLeftOffset = getContentRenderWidth(modifiedLines[0].slice(0, prefixTrim), editor, textModel);\n\t} else {\n\t\t// unable to approximate the offset\n\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t}\n\n\treturn { prefixTrim, prefixLeftOffset };\n}\n\nexport function getContentRenderWidth(content: string, editor: ICodeEditor, textModel: ITextModel) {\n\tconst w = editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\tconst tabSize = textModel.getOptions().tabSize * w;\n\n\tconst numTabs = content.split('\\t').length - 1;\n\tconst numNoneTabs = content.length - numTabs;\n\treturn numNoneTabs * w + numTabs * tabSize;\n}\n\nexport function getEditorValidOverlayRect(editor: ObservableCodeEditor): IObservable<Rect> {\n\tconst contentLeft = editor.layoutInfoContentLeft;\n\n\tconst width = derived({ name: 'editor.validOverlay.width' }, r => {\n\t\tconst hasMinimapOnTheRight = editor.layoutInfoMinimap.read(r).minimapLeft !== 0;\n\t\tconst editorWidth = editor.layoutInfoWidth.read(r) - contentLeft.read(r);\n\n\t\tif (hasMinimapOnTheRight) {\n\t\t\tconst minimapAndScrollbarWidth = editor.layoutInfoMinimap.read(r).minimapWidth + editor.layoutInfoVerticalScrollbarWidth.read(r);\n\t\t\treturn editorWidth - minimapAndScrollbarWidth;\n\t\t}\n\n\t\treturn editorWidth;\n\t});\n\n\tconst height = derived({ name: 'editor.validOverlay.height' }, r => editor.layoutInfoHeight.read(r) + editor.contentHeight.read(r));\n\n\treturn derived({ name: 'editor.validOverlay' }, r => Rect.fromLeftTopWidthHeight(contentLeft.read(r), 0, width.read(r), height.read(r)));\n}\nexport function applyEditToModifiedRangeMappings(rangeMapping: RangeMapping[], edit: TextEdit): RangeMapping[] {\n\tconst updatedMappings: RangeMapping[] = [];\n\tfor (const m of rangeMapping) {\n\t\tconst updatedRange = edit.mapRange(m.modifiedRange);\n\t\tupdatedMappings.push(new RangeMapping(m.originalRange, updatedRange));\n\t}\n\treturn updatedMappings;\n}\n\n\nexport function classNames(...classes: (string | false | undefined | null)[]) {\n\treturn classes.filter(c => typeof c === 'string').join(' ');\n}\n\nfunction offsetRangeToRange(columnOffsetRange: OffsetRange, startPos: Position): Range {\n\treturn new Range(\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.start,\n\t\tstartPos.lineNumber,\n\t\tstartPos.column + columnOffsetRange.endExclusive,\n\t);\n}\n\n/**\n * Calculates the indentation size (in spaces) of a given line,\n * interpreting tabs as the specified tab size.\n */\nfunction getIndentationSize(line: string, tabSize: number): number {\n\tlet currentSize = 0;\n\tloop: for (let i = 0, len = line.length; i < len; i++) {\n\t\tswitch (line.charCodeAt(i)) {\n\t\t\tcase CharCode.Tab: currentSize += tabSize; break;\n\t\t\tcase CharCode.Space: currentSize++; break;\n\t\t\tdefault: break loop;\n\t\t}\n\t}\n\t// if currentSize % tabSize !== 0,\n\t// then there are spaces which are not part of the indentation\n\treturn currentSize - (currentSize % tabSize);\n}\n\n/**\n * Calculates the number of characters at the start of a line that correspond to a given indentation size,\n * taking into account both tabs and spaces.\n */\nfunction indentSizeToIndentLength(line: string, indentSize: number, tabSize: number): number {\n\tlet remainingSize = indentSize - (indentSize % tabSize);\n\tlet i = 0;\n\tfor (; i < line.length; i++) {\n\t\tif (remainingSize === 0) {\n\t\t\tbreak;\n\t\t}\n\t\tswitch (line.charCodeAt(i)) {\n\t\t\tcase CharCode.Tab: remainingSize -= tabSize; break;\n\t\t\tcase CharCode.Space: remainingSize--; break;\n\t\t\tdefault: throw new BugIndicatingError('Unexpected character found while calculating indent length');\n\t\t}\n\t}\n\treturn i;\n}\n\nexport function createReindentEdit(text: string, range: LineRange, tabSize: number): TextEdit {\n\tconst newLines = splitLines(text);\n\tconst edits: TextReplacement[] = [];\n\tconst minIndentSize = findFirstMin(range.mapToLineArray(l => getIndentationSize(newLines[l - 1], tabSize)), numberComparator)!;\n\trange.forEach(lineNumber => {\n\t\tconst indentLength = indentSizeToIndentLength(newLines[lineNumber - 1], minIndentSize, tabSize);\n\t\tedits.push(new TextReplacement(offsetRangeToRange(new OffsetRange(0, indentLength), new Position(lineNumber, 1)), ''));\n\t});\n\treturn new TextEdit(edits);\n}\n\nexport class PathBuilder {\n\tprivate _data: string = '';\n\n\tpublic moveTo(point: Point): this {\n\t\tthis._data += `M ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic lineTo(point: Point): this {\n\t\tthis._data += `L ${point.x} ${point.y} `;\n\t\treturn this;\n\t}\n\n\tpublic build(): string {\n\t\treturn this._data;\n\t}\n}\n\ntype RemoveFalsy<T> = T extends false | undefined | null ? never : T;\ntype Falsy<T> = T extends false | undefined | null ? T : never;\n\nexport function mapOutFalsy<T>(obs: IObservable<T>): IObservable<IObservable<RemoveFalsy<T>> | Falsy<T>> {\n\tconst nonUndefinedObs = derivedObservableWithCache<T | undefined | null | false>(undefined, (reader, lastValue) => obs.read(reader) || lastValue);\n\n\treturn derivedOpts({\n\t\tdebugName: () => `${obs.debugName}.mapOutFalsy`\n\t}, reader => {\n\t\tnonUndefinedObs.read(reader);\n\t\tconst val = obs.read(reader);\n\t\tif (!val) {\n\t\t\treturn undefined as Falsy<T>;\n\t\t}\n\n\t\treturn nonUndefinedObs as IObservable<RemoveFalsy<T>>;\n\t});\n}\n\nexport function rectToProps(fn: (reader: IReader) => Rect) {\n\treturn {\n\t\tleft: derived({ name: 'editor.validOverlay.left' }, reader => /** @description left */ fn(reader).left),\n\t\ttop: derived({ name: 'editor.validOverlay.top' }, reader => /** @description top */ fn(reader).top),\n\t\twidth: derived({ name: 'editor.validOverlay.width' }, reader => /** @description width */ fn(reader).right - fn(reader).left),\n\t\theight: derived({ name: 'editor.validOverlay.height' }, reader => /** @description height */ fn(reader).bottom - fn(reader).top),\n\t};\n}\n\nexport type FirstFnArg<T> = T extends (arg: infer U) => any ? U : never;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5338, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorMenu.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorMenu.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildNode, LiveElement, n } from '../../../../../../../base/browser/dom.js';\nimport { ActionBar, IActionBarOptions } from '../../../../../../../base/browser/ui/actionbar/actionbar.js';\nimport { renderIcon } from '../../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { KeybindingLabel } from '../../../../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { IAction } from '../../../../../../../base/common/actions.js';\nimport { Codicon } from '../../../../../../../base/common/codicons.js';\nimport { ResolvedKeybinding } from '../../../../../../../base/common/keybindings.js';\nimport { IObservable, autorun, constObservable, derived, observableFromEvent, observableValue } from '../../../../../../../base/common/observable.js';\nimport { OS } from '../../../../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../../../../base/common/themables.js';\nimport { localize } from '../../../../../../../nls.js';\nimport { ICommandService } from '../../../../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../../../../platform/contextkey/common/contextkey.js';\nimport { nativeHoverDelegate } from '../../../../../../../platform/hover/browser/hover.js';\nimport { IKeybindingService } from '../../../../../../../platform/keybinding/common/keybinding.js';\nimport { defaultKeybindingLabelStyles } from '../../../../../../../platform/theme/browser/defaultStyles.js';\nimport { asCssVariable, descriptionForeground, editorActionListForeground, editorHoverBorder, keybindingLabelBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { hideInlineCompletionId, inlineSuggestCommitId, toggleShowCollapsedId } from '../../../controller/commandIds.js';\nimport { IInlineEditModel } from '../inlineEditsViewInterface.js';\nimport { FirstFnArg } from '../utils/utils.js';\n\nexport class GutterIndicatorMenuContent {\n\n\tprivate readonly _inlineEditsShowCollapsed: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _model: IInlineEditModel,\n\t\tprivate readonly _close: (focusEditor: boolean) => void,\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t) {\n\t\tthis._inlineEditsShowCollapsed = this._editorObs.getOption(EditorOption.inlineSuggest).map(s => s.edits.showCollapsed);\n\t}\n\n\tpublic toDisposableLiveElement(): LiveElement {\n\t\treturn this._createHoverContent().toDisposableLiveElement();\n\t}\n\n\tprivate _createHoverContent() {\n\t\tconst activeElement = observableValue<string | undefined>('active', undefined);\n\n\t\tconst createOptionArgs = (options: { id: string; title: string; icon: IObservable<ThemeIcon> | ThemeIcon; commandId: string | IObservable<string>; commandArgs?: unknown[] }): FirstFnArg<typeof option> => {\n\t\t\treturn {\n\t\t\t\ttitle: options.title,\n\t\t\t\ticon: options.icon,\n\t\t\t\tkeybinding: typeof options.commandId === 'string' ? this._getKeybinding(options.commandArgs ? undefined : options.commandId) : derived(this, reader => typeof options.commandId === 'string' ? undefined : this._getKeybinding(options.commandArgs ? undefined : options.commandId.read(reader)).read(reader)),\n\t\t\t\tisActive: activeElement.map(v => v === options.id),\n\t\t\t\tonHoverChange: v => activeElement.set(v ? options.id : undefined, undefined),\n\t\t\t\tonAction: () => {\n\t\t\t\t\tthis._close(true);\n\t\t\t\t\treturn this._commandService.executeCommand(typeof options.commandId === 'string' ? options.commandId : options.commandId.get(), ...(options.commandArgs ?? []));\n\t\t\t\t},\n\t\t\t};\n\t\t};\n\n\t\tconst title = header(this._model.displayName);\n\n\t\tconst gotoAndAccept = option(createOptionArgs({\n\t\t\tid: 'gotoAndAccept',\n\t\t\ttitle: `${localize('goto', \"Go To\")} / ${localize('accept', \"Accept\")}`,\n\t\t\ticon: Codicon.check,\n\t\t\tcommandId: inlineSuggestCommitId\n\t\t}));\n\n\t\tconst reject = option(createOptionArgs({\n\t\t\tid: 'reject',\n\t\t\ttitle: localize('reject', \"Reject\"),\n\t\t\ticon: Codicon.close,\n\t\t\tcommandId: hideInlineCompletionId\n\t\t}));\n\n\t\tconst extensionCommands = this._model.extensionCommands.map((c, idx) => option(createOptionArgs({\n\t\t\tid: c.command.id + '_' + idx,\n\t\t\ttitle: c.command.title,\n\t\t\ticon: c.icon ?? Codicon.symbolEvent,\n\t\t\tcommandId: c.command.id,\n\t\t\tcommandArgs: c.command.arguments\n\t\t})));\n\n\t\tconst toggleCollapsedMode = this._inlineEditsShowCollapsed.map(showCollapsed => showCollapsed ?\n\t\t\toption(createOptionArgs({\n\t\t\t\tid: 'showExpanded',\n\t\t\t\ttitle: localize('showExpanded', \"Show Expanded\"),\n\t\t\t\ticon: Codicon.expandAll,\n\t\t\t\tcommandId: toggleShowCollapsedId\n\t\t\t}))\n\t\t\t: option(createOptionArgs({\n\t\t\t\tid: 'showCollapsed',\n\t\t\t\ttitle: localize('showCollapsed', \"Show Collapsed\"),\n\t\t\t\ticon: Codicon.collapseAll,\n\t\t\t\tcommandId: toggleShowCollapsedId\n\t\t\t}))\n\t\t);\n\n\t\tconst settings = option(createOptionArgs({\n\t\t\tid: 'settings',\n\t\t\ttitle: localize('settings', \"Settings\"),\n\t\t\ticon: Codicon.gear,\n\t\t\tcommandId: 'workbench.action.openSettings',\n\t\t\tcommandArgs: ['@tag:nextEditSuggestions']\n\t\t}));\n\n\t\tconst actions = this._model.action ? [this._model.action] : [];\n\t\tconst actionBarFooter = actions.length > 0 ? actionBar(\n\t\t\tactions.map(action => ({\n\t\t\t\tid: action.id,\n\t\t\t\tlabel: action.title,\n\t\t\t\tenabled: true,\n\t\t\t\trun: () => this._commandService.executeCommand(action.id, ...(action.arguments ?? [])),\n\t\t\t\tclass: undefined,\n\t\t\t\ttooltip: action.tooltip ?? action.title\n\t\t\t})),\n\t\t\t{ hoverDelegate: nativeHoverDelegate /* unable to show hover inside another hover */ }\n\t\t) : undefined;\n\n\t\treturn hoverContent([\n\t\t\ttitle,\n\t\t\tgotoAndAccept,\n\t\t\treject,\n\t\t\ttoggleCollapsedMode,\n\t\t\tsettings,\n\n\t\t\textensionCommands.length ? separator() : undefined,\n\t\t\t...extensionCommands,\n\n\t\t\tactionBarFooter ? separator() : undefined,\n\t\t\tactionBarFooter\n\t\t]);\n\t}\n\n\tprivate _getKeybinding(commandId: string | undefined) {\n\t\tif (!commandId) {\n\t\t\treturn constObservable(undefined);\n\t\t}\n\t\treturn observableFromEvent(this._contextKeyService.onDidChangeContext, () => this._keybindingService.lookupKeybinding(commandId)); // TODO: use contextkeyservice to use different renderings\n\t}\n}\n\nfunction hoverContent(content: ChildNode) {\n\treturn n.div({\n\t\tclass: 'content',\n\t\tstyle: {\n\t\t\tmargin: 4,\n\t\t\tminWidth: 150,\n\t\t}\n\t}, content);\n}\n\nfunction header(title: string | IObservable<string>) {\n\treturn n.div({\n\t\tclass: 'header',\n\t\tstyle: {\n\t\t\tcolor: asCssVariable(descriptionForeground),\n\t\t\tfontSize: '12px',\n\t\t\tfontWeight: '600',\n\t\t\tpadding: '0 10px',\n\t\t\tlineHeight: 26,\n\t\t}\n\t}, [title]);\n}\n\nfunction option(props: {\n\ttitle: string;\n\ticon: IObservable<ThemeIcon> | ThemeIcon;\n\tkeybinding: IObservable<ResolvedKeybinding | undefined>;\n\tisActive?: IObservable<boolean>;\n\tonHoverChange?: (isHovered: boolean) => void;\n\tonAction?: () => void;\n}) {\n\treturn derived({ name: 'inlineEdits.option' }, (_reader) => n.div({\n\t\tclass: ['monaco-menu-option', props.isActive?.map(v => v && 'active')],\n\t\tonmouseenter: () => props.onHoverChange?.(true),\n\t\tonmouseleave: () => props.onHoverChange?.(false),\n\t\tonclick: props.onAction,\n\t\tonkeydown: e => {\n\t\t\tif (e.key === 'Enter') {\n\t\t\t\tprops.onAction?.();\n\t\t\t}\n\t\t},\n\t\ttabIndex: 0,\n\t\tstyle: {\n\t\t\tborderRadius: 3, // same as hover widget border radius\n\t\t}\n\t}, [\n\t\tn.elem('span', {\n\t\t\tstyle: {\n\t\t\t\tfontSize: 16,\n\t\t\t\tdisplay: 'flex',\n\t\t\t}\n\t\t}, [ThemeIcon.isThemeIcon(props.icon) ? renderIcon(props.icon) : props.icon.map(icon => renderIcon(icon))]),\n\t\tn.elem('span', {}, [props.title]),\n\t\tn.div({\n\t\t\tstyle: { marginLeft: 'auto' },\n\t\t\tref: elem => {\n\t\t\t\tconst keybindingLabel = _reader.store.add(new KeybindingLabel(elem, OS, {\n\t\t\t\t\tdisableTitle: true,\n\t\t\t\t\t...defaultKeybindingLabelStyles,\n\t\t\t\t\tkeybindingLabelShadow: undefined,\n\t\t\t\t\tkeybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n\t\t\t\t\tkeybindingLabelBorder: 'transparent',\n\t\t\t\t\tkeybindingLabelBottomBorder: undefined,\n\t\t\t\t}));\n\t\t\t\t_reader.store.add(autorun(reader => {\n\t\t\t\t\tkeybindingLabel.set(props.keybinding.read(reader));\n\t\t\t\t}));\n\t\t\t}\n\t\t})\n\t]));\n}\n\n// TODO: make this observable\nfunction actionBar(actions: IAction[], options: IActionBarOptions) {\n\treturn derived({ name: 'inlineEdits.actionBar' }, (_reader) => n.div({\n\t\tclass: ['action-widget-action-bar'],\n\t\tstyle: {\n\t\t\tpadding: '0 10px',\n\t\t}\n\t}, [\n\t\tn.div({\n\t\t\tref: elem => {\n\t\t\t\tconst actionBar = _reader.store.add(new ActionBar(elem, options));\n\t\t\t\tactionBar.push(actions, { icon: false, label: true });\n\t\t\t}\n\t\t})\n\t]));\n}\n\nfunction separator() {\n\treturn n.div({\n\t\tid: 'inline-edit-gutter-indicator-menu-separator',\n\t\tclass: 'menu-separator',\n\t\tstyle: {\n\t\t\tcolor: asCssVariable(editorActionListForeground),\n\t\t\tpadding: '4px 0',\n\t\t}\n\t}, n.div({\n\t\tstyle: {\n\t\t\tborderBottom: `1px solid ${asCssVariable(editorHoverBorder)}`,\n\t\t}\n\t}));\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5616, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/components/gutterIndicatorView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { n, trackFocus } from '../../../../../../../base/browser/dom.js';\nimport { renderIcon } from '../../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Codicon } from '../../../../../../../base/common/codicons.js';\nimport { BugIndicatingError } from '../../../../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../../../../base/common/lifecycle.js';\nimport { IObservable, ISettableObservable, autorun, constObservable, debouncedObservable, derived, observableFromEvent, observableValue, runOnChange } from '../../../../../../../base/common/observable.js';\nimport { IAccessibilityService } from '../../../../../../../platform/accessibility/common/accessibility.js';\nimport { IHoverService } from '../../../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../../../platform/instantiation/common/instantiation.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { IEditorMouseEvent } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { HoverService } from '../../../../../../browser/services/hoverService/hoverService.js';\nimport { HoverWidget } from '../../../../../../browser/services/hoverService/hoverWidget.js';\nimport { EditorOption, RenderLineNumbersType } from '../../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { StickyScrollController } from '../../../../../stickyScroll/browser/stickyScrollController.js';\nimport { IInlineEditModel, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, inlineEditIndicatorBackground, inlineEditIndicatorPrimaryBackground, inlineEditIndicatorPrimaryBorder, inlineEditIndicatorPrimaryForeground, inlineEditIndicatorSecondaryBackground, inlineEditIndicatorSecondaryBorder, inlineEditIndicatorSecondaryForeground, inlineEditIndicatorsuccessfulBackground, inlineEditIndicatorsuccessfulBorder, inlineEditIndicatorsuccessfulForeground } from '../theme.js';\nimport { mapOutFalsy, rectToProps } from '../utils/utils.js';\nimport { GutterIndicatorMenuContent } from './gutterIndicatorMenu.js';\n\nexport class InlineEditsGutterIndicator extends Disposable {\n\n\tprivate get model() {\n\t\tconst model = this._model.get();\n\t\tif (!model) { throw new BugIndicatingError('Inline Edit Model not available'); }\n\t\treturn model;\n\t}\n\n\tprivate readonly _gutterIndicatorStyles: IObservable<{ background: string; foreground: string; border: string }>;\n\tprivate readonly _isHoveredOverInlineEditDebounced: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\t\tprivate readonly _originalRange: IObservable<LineRange | undefined>,\n\t\tprivate readonly _verticalOffset: IObservable<number>,\n\t\tprivate readonly _model: IObservable<IInlineEditModel | undefined>,\n\t\tprivate readonly _isHoveringOverInlineEdit: IObservable<boolean>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IHoverService private readonly _hoverService: HoverService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper();\n\n\t\tthis._tabAction = derived(this, reader => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model) { return InlineEditTabAction.Inactive; }\n\t\t\treturn model.tabAction.read(reader);\n\t\t});\n\n\t\tthis._hoverVisible = observableValue(this, false);\n\t\tthis.isHoverVisible = this._hoverVisible;\n\t\tthis._isHoveredOverIcon = observableValue(this, false);\n\t\tthis._isHoveredOverIconDebounced = debouncedObservable(this._isHoveredOverIcon, 100);\n\t\tthis.isHoveredOverIcon = this._isHoveredOverIconDebounced;\n\t\tthis._isHoveredOverInlineEditDebounced = debouncedObservable(this._isHoveringOverInlineEdit, 100);\n\n\t\tthis._gutterIndicatorStyles = this._tabAction.map((v, reader) => {\n\t\t\tswitch (v) {\n\t\t\t\tcase InlineEditTabAction.Inactive: return {\n\t\t\t\t\tbackground: getEditorBlendedColor(inlineEditIndicatorSecondaryBackground, themeService).read(reader).toString(),\n\t\t\t\t\tforeground: getEditorBlendedColor(inlineEditIndicatorSecondaryForeground, themeService).read(reader).toString(),\n\t\t\t\t\tborder: getEditorBlendedColor(inlineEditIndicatorSecondaryBorder, themeService).read(reader).toString(),\n\t\t\t\t};\n\t\t\t\tcase InlineEditTabAction.Jump: return {\n\t\t\t\t\tbackground: getEditorBlendedColor(inlineEditIndicatorPrimaryBackground, themeService).read(reader).toString(),\n\t\t\t\t\tforeground: getEditorBlendedColor(inlineEditIndicatorPrimaryForeground, themeService).read(reader).toString(),\n\t\t\t\t\tborder: getEditorBlendedColor(inlineEditIndicatorPrimaryBorder, themeService).read(reader).toString()\n\t\t\t\t};\n\t\t\t\tcase InlineEditTabAction.Accept: return {\n\t\t\t\t\tbackground: getEditorBlendedColor(inlineEditIndicatorsuccessfulBackground, themeService).read(reader).toString(),\n\t\t\t\t\tforeground: getEditorBlendedColor(inlineEditIndicatorsuccessfulForeground, themeService).read(reader).toString(),\n\t\t\t\t\tborder: getEditorBlendedColor(inlineEditIndicatorsuccessfulBorder, themeService).read(reader).toString()\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tthis._originalRangeObs = mapOutFalsy(this._originalRange);\n\t\tthis._state = derived(this, reader => {\n\t\t\tconst range = this._originalRangeObs.read(reader);\n\t\t\tif (!range) { return undefined; }\n\t\t\treturn {\n\t\t\t\trange,\n\t\t\t\tlineOffsetRange: this._editorObs.observeLineOffsetRange(range, this._store),\n\t\t\t};\n\t\t});\n\t\tthis._stickyScrollController = StickyScrollController.get(this._editorObs.editor);\n\t\tthis._stickyScrollHeight = this._stickyScrollController\n\t\t\t? observableFromEvent(this._stickyScrollController.onDidChangeStickyScrollHeight, () => this._stickyScrollController!.stickyScrollWidgetHeight)\n\t\t\t: constObservable(0);\n\t\tthis._lineNumberToRender = derived(this, reader => {\n\t\t\tif (this._verticalOffset.read(reader) !== 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst lineNumber = this._originalRange.read(reader)?.startLineNumber;\n\t\t\tconst lineNumberOptions = this._editorObs.getOption(EditorOption.lineNumbers).read(reader);\n\n\t\t\tif (lineNumber === undefined || lineNumberOptions.renderType === RenderLineNumbersType.Off) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Interval) {\n\t\t\t\tconst cursorPosition = this._editorObs.cursorPosition.read(reader);\n\t\t\t\tif (lineNumber % 10 === 0 || cursorPosition && cursorPosition.lineNumber === lineNumber) {\n\t\t\t\t\treturn lineNumber.toString();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Relative) {\n\t\t\t\tconst cursorPosition = this._editorObs.cursorPosition.read(reader);\n\t\t\t\tif (!cursorPosition) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tconst relativeLineNumber = Math.abs(lineNumber - cursorPosition.lineNumber);\n\t\t\t\tif (relativeLineNumber === 0) {\n\t\t\t\t\treturn lineNumber.toString();\n\t\t\t\t}\n\t\t\t\treturn relativeLineNumber.toString();\n\t\t\t}\n\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Custom) {\n\t\t\t\tif (lineNumberOptions.renderFn) {\n\t\t\t\t\treturn lineNumberOptions.renderFn(lineNumber);\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn lineNumber.toString();\n\t\t});\n\t\tthis._availableWidthForIcon = derived(this, reader => {\n\t\t\tconst textModel = this._editorObs.editor.getModel();\n\t\t\tconst editor = this._editorObs.editor;\n\t\t\tconst layout = this._editorObs.layoutInfo.read(reader);\n\t\t\tconst gutterWidth = layout.decorationsLeft + layout.decorationsWidth - layout.glyphMarginLeft;\n\n\t\t\tif (!textModel || gutterWidth <= 0) {\n\t\t\t\treturn () => 0;\n\t\t\t}\n\n\t\t\t// no glyph margin => the entire gutter width is available as there is no optimal place to put the icon\n\t\t\tif (layout.lineNumbersLeft === 0) {\n\t\t\t\treturn () => gutterWidth;\n\t\t\t}\n\n\t\t\tconst lineNumberOptions = this._editorObs.getOption(EditorOption.lineNumbers).read(reader);\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Relative || /* likely to flicker */\n\t\t\t\tlineNumberOptions.renderType === RenderLineNumbersType.Off) {\n\t\t\t\treturn () => gutterWidth;\n\t\t\t}\n\n\t\t\tconst w = editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\t\tconst rightOfLineNumber = layout.lineNumbersLeft + layout.lineNumbersWidth;\n\t\t\tconst totalLines = textModel.getLineCount();\n\t\t\tconst totalLinesDigits = (totalLines + 1 /* 0 based to 1 based*/).toString().length;\n\n\t\t\tconst offsetDigits: {\n\t\t\t\tfirstLineNumberWithDigitCount: number;\n\t\t\t\ttopOfLineNumber: number;\n\t\t\t\tusableWidthLeftOfLineNumber: number;\n\t\t\t}[] = [];\n\n\t\t\t// We only need to pre compute the usable width left of the line number for the first line number with a given digit count\n\t\t\tfor (let digits = 1; digits <= totalLinesDigits; digits++) {\n\t\t\t\tconst firstLineNumberWithDigitCount = 10 ** (digits - 1);\n\t\t\t\tconst topOfLineNumber = editor.getTopForLineNumber(firstLineNumberWithDigitCount);\n\t\t\t\tconst digitsWidth = digits * w;\n\t\t\t\tconst usableWidthLeftOfLineNumber = Math.min(gutterWidth, Math.max(0, rightOfLineNumber - digitsWidth - layout.glyphMarginLeft));\n\t\t\t\toffsetDigits.push({ firstLineNumberWithDigitCount, topOfLineNumber, usableWidthLeftOfLineNumber });\n\t\t\t}\n\n\t\t\treturn (topOffset: number) => {\n\t\t\t\tfor (let i = offsetDigits.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (topOffset >= offsetDigits[i].topOfLineNumber) {\n\t\t\t\t\t\treturn offsetDigits[i].usableWidthLeftOfLineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new BugIndicatingError('Could not find avilable width for icon');\n\t\t\t};\n\t\t});\n\t\tthis._layout = derived(this, reader => {\n\t\t\tconst s = this._state.read(reader);\n\t\t\tif (!s) { return undefined; }\n\n\t\t\tconst layout = this._editorObs.layoutInfo.read(reader);\n\n\t\t\tconst lineHeight = this._editorObs.observeLineHeightForLine(s.range.map(r => r.startLineNumber)).read(reader);\n\t\t\tconst gutterViewPortPadding = 2;\n\n\t\t\t// Entire gutter view from top left to bottom right\n\t\t\tconst gutterWidthWithoutPadding = layout.decorationsLeft + layout.decorationsWidth - layout.glyphMarginLeft - 2 * gutterViewPortPadding;\n\t\t\tconst gutterHeightWithoutPadding = layout.height - 2 * gutterViewPortPadding;\n\t\t\tconst gutterViewPortWithStickyScroll = Rect.fromLeftTopWidthHeight(gutterViewPortPadding, gutterViewPortPadding, gutterWidthWithoutPadding, gutterHeightWithoutPadding);\n\t\t\tconst gutterViewPortWithoutStickyScrollWithoutPaddingTop = gutterViewPortWithStickyScroll.withTop(this._stickyScrollHeight.read(reader));\n\t\t\tconst gutterViewPortWithoutStickyScroll = gutterViewPortWithStickyScroll.withTop(gutterViewPortWithoutStickyScrollWithoutPaddingTop.top + gutterViewPortPadding);\n\n\t\t\t// The glyph margin area across all relevant lines\n\t\t\tconst verticalEditRange = s.lineOffsetRange.read(reader);\n\t\t\tconst gutterEditArea = Rect.fromRanges(OffsetRange.fromTo(gutterViewPortWithoutStickyScroll.left, gutterViewPortWithoutStickyScroll.right), verticalEditRange);\n\n\t\t\t// The gutter view container (pill)\n\t\t\tconst pillHeight = lineHeight;\n\t\t\tconst pillOffset = this._verticalOffset.read(reader);\n\t\t\tconst pillFullyDockedRect = gutterEditArea.withHeight(pillHeight).translateY(pillOffset);\n\t\t\tconst pillIsFullyDocked = gutterViewPortWithoutStickyScrollWithoutPaddingTop.containsRect(pillFullyDockedRect);\n\n\t\t\t// The icon which will be rendered in the pill\n\t\t\tconst iconNoneDocked = this._tabAction.map(action => action === InlineEditTabAction.Accept ? Codicon.keyboardTab : Codicon.arrowRight);\n\t\t\tconst iconDocked = derived(this, reader => {\n\t\t\t\tif (this._isHoveredOverIconDebounced.read(reader) || this._isHoveredOverInlineEditDebounced.read(reader)) {\n\t\t\t\t\treturn Codicon.check;\n\t\t\t\t}\n\t\t\t\tif (this._tabAction.read(reader) === InlineEditTabAction.Accept) {\n\t\t\t\t\treturn Codicon.keyboardTab;\n\t\t\t\t}\n\t\t\t\tconst cursorLineNumber = this._editorObs.cursorLineNumber.read(reader) ?? 0;\n\t\t\t\tconst editStartLineNumber = s.range.read(reader).startLineNumber;\n\t\t\t\treturn cursorLineNumber <= editStartLineNumber ? Codicon.keyboardTabAbove : Codicon.keyboardTabBelow;\n\t\t\t});\n\n\t\t\tconst idealIconWidth = 22;\n\t\t\tconst minimalIconWidth = 16; // codicon size\n\t\t\tconst iconWidth = (pillRect: Rect) => {\n\t\t\t\tconst availableWidth = this._availableWidthForIcon.get()(pillRect.bottom + this._editorObs.editor.getScrollTop()) - gutterViewPortPadding;\n\t\t\t\treturn Math.max(Math.min(availableWidth, idealIconWidth), minimalIconWidth);\n\t\t\t};\n\n\t\t\tif (pillIsFullyDocked) {\n\t\t\t\tconst pillRect = pillFullyDockedRect;\n\n\t\t\t\tlet lineNumberWidth;\n\t\t\t\tif (layout.lineNumbersWidth === 0) {\n\t\t\t\t\tlineNumberWidth = Math.min(Math.max(layout.lineNumbersLeft - gutterViewPortWithStickyScroll.left, 0), pillRect.width - idealIconWidth);\n\t\t\t\t} else {\n\t\t\t\t\tlineNumberWidth = Math.max(layout.lineNumbersLeft + layout.lineNumbersWidth - gutterViewPortWithStickyScroll.left, 0);\n\t\t\t\t}\n\n\t\t\t\tconst lineNumberRect = pillRect.withWidth(lineNumberWidth);\n\t\t\t\tconst iconWidth = Math.max(Math.min(layout.decorationsWidth, idealIconWidth), minimalIconWidth);\n\t\t\t\tconst iconRect = pillRect.withWidth(iconWidth).translateX(lineNumberWidth);\n\n\t\t\t\treturn {\n\t\t\t\t\tgutterEditArea,\n\t\t\t\t\ticon: iconDocked,\n\t\t\t\t\ticonDirection: 'right' as const,\n\t\t\t\t\ticonRect,\n\t\t\t\t\tpillRect,\n\t\t\t\t\tlineNumberRect,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst pillPartiallyDockedPossibleArea = gutterViewPortWithStickyScroll.intersect(gutterEditArea); // The area in which the pill could be partially docked\n\t\t\tconst pillIsPartiallyDocked = pillPartiallyDockedPossibleArea && pillPartiallyDockedPossibleArea.height >= pillHeight;\n\n\t\t\tif (pillIsPartiallyDocked) {\n\t\t\t\t// pillFullyDockedRect is outside viewport, move it into the viewport under sticky scroll as we prefer the pill to not be on top of the sticky scroll\n\t\t\t\t// then move it into the possible area which will only cause it to move if it has to be rendered on top of the sticky scroll\n\t\t\t\tconst pillRectMoved = pillFullyDockedRect.moveToBeContainedIn(gutterViewPortWithoutStickyScroll).moveToBeContainedIn(pillPartiallyDockedPossibleArea);\n\t\t\t\tconst pillRect = pillRectMoved.withWidth(iconWidth(pillRectMoved));\n\t\t\t\tconst iconRect = pillRect;\n\n\t\t\t\treturn {\n\t\t\t\t\tgutterEditArea,\n\t\t\t\t\ticon: iconDocked,\n\t\t\t\t\ticonDirection: 'right' as const,\n\t\t\t\t\ticonRect,\n\t\t\t\t\tpillRect,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// pillFullyDockedRect is outside viewport, so move it into viewport\n\t\t\tconst pillRectMoved = pillFullyDockedRect.moveToBeContainedIn(gutterViewPortWithStickyScroll);\n\t\t\tconst pillRect = pillRectMoved.withWidth(iconWidth(pillRectMoved));\n\t\t\tconst iconRect = pillRect;\n\n\t\t\t// docked = pill was already in the viewport\n\t\t\tconst iconDirection = pillRect.top < pillFullyDockedRect.top ?\n\t\t\t\t'top' as const :\n\t\t\t\t'bottom' as const;\n\n\t\t\treturn {\n\t\t\t\tgutterEditArea,\n\t\t\t\ticon: iconNoneDocked,\n\t\t\t\ticonDirection,\n\t\t\t\ticonRect,\n\t\t\t\tpillRect,\n\t\t\t};\n\t\t});\n\t\tthis._iconRef = n.ref<HTMLDivElement>();\n\t\tthis.isVisible = this._layout.map(l => !!l);\n\t\tthis._indicator = n.div({\n\t\t\tclass: 'inline-edits-view-gutter-indicator',\n\t\t\tonclick: () => {\n\t\t\t\tconst layout = this._layout.get();\n\t\t\t\tconst acceptOnClick = layout?.icon.get() === Codicon.check;\n\n\t\t\t\tthis._editorObs.editor.focus();\n\t\t\t\tif (acceptOnClick) {\n\t\t\t\t\tthis.model.accept();\n\t\t\t\t} else {\n\t\t\t\t\tthis.model.jump();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttabIndex: 0,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t},\n\t\t}, mapOutFalsy(this._layout).map(layout => !layout ? [] : [\n\t\t\tn.div({\n\t\t\t\tstyle: {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tbackground: asCssVariable(inlineEditIndicatorBackground),\n\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t...rectToProps(reader => layout.read(reader).gutterEditArea),\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'icon',\n\t\t\t\tref: this._iconRef,\n\t\t\t\tonmouseenter: () => {\n\t\t\t\t\t// TODO show hover when hovering ghost text etc.\n\t\t\t\t\tthis._showHover();\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\tzIndex: '20',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tbackgroundColor: this._gutterIndicatorStyles.map(v => v.background),\n\t\t\t\t\t['--vscodeIconForeground' as any]: this._gutterIndicatorStyles.map(v => v.foreground),\n\t\t\t\t\tborder: this._gutterIndicatorStyles.map(v => `1px solid ${v.border}`),\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\ttransition: 'background-color 0.2s ease-in-out, width 0.2s ease-in-out',\n\t\t\t\t\t...rectToProps(reader => layout.read(reader).pillRect),\n\t\t\t\t}\n\t\t\t}, [\n\t\t\t\tn.div({\n\t\t\t\t\tclassName: 'line-number',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tlineHeight: layout.map(l => l.lineNumberRect ? l.lineNumberRect.height : 0),\n\t\t\t\t\t\tdisplay: layout.map(l => l.lineNumberRect ? 'flex' : 'none'),\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\t\twidth: layout.map(l => l.lineNumberRect ? l.lineNumberRect.width : 0),\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tcolor: this._gutterIndicatorStyles.map(v => v.foreground),\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\tthis._lineNumberToRender\n\t\t\t\t),\n\t\t\t\tn.div({\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\trotate: layout.map(l => `${getRotationFromDirection(l.iconDirection)}deg`),\n\t\t\t\t\t\ttransition: 'rotate 0.2s ease-in-out',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tmarginRight: layout.map(l => l.pillRect.width - l.iconRect.width - (l.lineNumberRect?.width ?? 0)),\n\t\t\t\t\t\twidth: layout.map(l => l.iconRect.width),\n\t\t\t\t\t}\n\t\t\t\t}, [\n\t\t\t\t\tlayout.map((l, reader) => renderIcon(l.icon.read(reader))),\n\t\t\t\t])\n\t\t\t]),\n\t\t])).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._indicator.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t}));\n\n\t\tthis._register(this._editorObs.editor.onMouseMove((e: IEditorMouseEvent) => {\n\t\t\tconst state = this._state.get();\n\t\t\tif (state === undefined) { return; }\n\n\t\t\tconst el = this._iconRef.element;\n\t\t\tconst rect = el.getBoundingClientRect();\n\t\t\tconst rectangularArea = Rect.fromLeftTopWidthHeight(rect.left, rect.top, rect.width, rect.height);\n\t\t\tconst point = new Point(e.event.posx, e.event.posy);\n\t\t\tthis._isHoveredOverIcon.set(rectangularArea.containsPoint(point), undefined);\n\t\t}));\n\n\t\tthis._register(this._editorObs.editor.onDidScrollChange(() => {\n\t\t\tthis._isHoveredOverIcon.set(false, undefined);\n\t\t}));\n\n\t\t// pulse animation when hovering inline edit\n\t\tthis._register(runOnChange(this._isHoveredOverInlineEditDebounced, (isHovering) => {\n\t\t\tif (isHovering) {\n\t\t\t\tthis.triggerAnimation();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._indicator.readEffect(reader);\n\t\t\tif (this._indicator.element) {\n\t\t\t\tthis._editorObs.editor.applyFontInfo(this._indicator.element);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic triggerAnimation(): Promise<Animation> {\n\t\tif (this._accessibilityService.isMotionReduced()) {\n\t\t\treturn new Animation(null, null).finished;\n\t\t}\n\n\t\t// PULSE ANIMATION:\n\t\tconst animation = this._iconRef.element.animate([\n\t\t\t{\n\t\t\t\toutline: `2px solid ${this._gutterIndicatorStyles.map(v => v.border).get()}`,\n\t\t\t\toutlineOffset: '-1px',\n\t\t\t\toffset: 0\n\t\t\t},\n\t\t\t{\n\t\t\t\toutline: `2px solid transparent`,\n\t\t\t\toutlineOffset: '10px',\n\t\t\t\toffset: 1\n\t\t\t},\n\t\t], { duration: 500 });\n\n\t\treturn animation.finished;\n\t}\n\n\tprivate readonly _originalRangeObs;\n\n\tprivate readonly _state;\n\n\tprivate readonly _stickyScrollController;\n\tprivate readonly _stickyScrollHeight;\n\n\tprivate readonly _lineNumberToRender;\n\n\tprivate readonly _availableWidthForIcon;\n\n\tprivate readonly _layout;\n\n\n\tprivate readonly _iconRef;\n\n\tpublic readonly isVisible;\n\n\tprivate readonly _hoverVisible;\n\tpublic readonly isHoverVisible: IObservable<boolean>;\n\n\tprivate readonly _isHoveredOverIcon;\n\tprivate readonly _isHoveredOverIconDebounced: IObservable<boolean>;\n\tpublic readonly isHoveredOverIcon: IObservable<boolean>;\n\n\tprivate _showHover(): void {\n\t\tif (this._hoverVisible.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst content = disposableStore.add(this._instantiationService.createInstance(\n\t\t\tGutterIndicatorMenuContent,\n\t\t\tthis.model,\n\t\t\t(focusEditor) => {\n\t\t\t\tif (focusEditor) {\n\t\t\t\t\tthis._editorObs.editor.focus();\n\t\t\t\t}\n\t\t\t\th?.dispose();\n\t\t\t},\n\t\t\tthis._editorObs,\n\t\t).toDisposableLiveElement());\n\n\t\tconst focusTracker = disposableStore.add(trackFocus(content.element));\n\t\tdisposableStore.add(focusTracker.onDidBlur(() => this._focusIsInMenu.set(false, undefined)));\n\t\tdisposableStore.add(focusTracker.onDidFocus(() => this._focusIsInMenu.set(true, undefined)));\n\t\tdisposableStore.add(toDisposable(() => this._focusIsInMenu.set(false, undefined)));\n\n\t\tconst h = this._hoverService.showInstantHover({\n\t\t\ttarget: this._iconRef.element,\n\t\t\tcontent: content.element,\n\t\t}) as HoverWidget | undefined;\n\t\tif (h) {\n\t\t\tthis._hoverVisible.set(true, undefined);\n\t\t\tdisposableStore.add(this._editorObs.editor.onDidScrollChange(() => h.dispose()));\n\t\t\tdisposableStore.add(h.onDispose(() => {\n\t\t\t\tthis._hoverVisible.set(false, undefined);\n\t\t\t\tdisposableStore.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tdisposableStore.dispose();\n\t\t}\n\t}\n\n\tprivate readonly _tabAction;\n\n\tprivate readonly _indicator;\n}\n\nfunction getRotationFromDirection(direction: 'top' | 'bottom' | 'right'): number {\n\tswitch (direction) {\n\t\tcase 'top': return 90;\n\t\tcase 'bottom': return -90;\n\t\tcase 'right': return 0;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { n, trackFocus } from '../../../../../../../base/browser/dom.js';\nimport { renderIcon } from '../../../../../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { Codicon } from '../../../../../../../base/common/codicons.js';\nimport { BugIndicatingError } from '../../../../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../../../../base/common/lifecycle.js';\nimport { IObservable, ISettableObservable, autorun, constObservable, debouncedObservable, derived, observableFromEvent, observableValue, runOnChange } from '../../../../../../../base/common/observable.js';\nimport { IAccessibilityService } from '../../../../../../../platform/accessibility/common/accessibility.js';\nimport { IHoverService } from '../../../../../../../platform/hover/browser/hover.js';\nimport { IInstantiationService } from '../../../../../../../platform/instantiation/common/instantiation.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { IEditorMouseEvent } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { HoverService } from '../../../../../../browser/services/hoverService/hoverService.js';\nimport { HoverWidget } from '../../../../../../browser/services/hoverService/hoverWidget.js';\nimport { EditorOption, RenderLineNumbersType } from '../../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { StickyScrollController } from '../../../../../stickyScroll/browser/stickyScrollController.js';\nimport { IInlineEditModel, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, inlineEditIndicatorBackground, inlineEditIndicatorPrimaryBackground, inlineEditIndicatorPrimaryBorder, inlineEditIndicatorPrimaryForeground, inlineEditIndicatorSecondaryBackground, inlineEditIndicatorSecondaryBorder, inlineEditIndicatorSecondaryForeground, inlineEditIndicatorsuccessfulBackground, inlineEditIndicatorsuccessfulBorder, inlineEditIndicatorsuccessfulForeground } from '../theme.js';\nimport { mapOutFalsy, rectToProps } from '../utils/utils.js';\nimport { GutterIndicatorMenuContent } from './gutterIndicatorMenu.js';\n\nexport class InlineEditsGutterIndicator extends Disposable {\n\n\tprivate get model() {\n\t\tconst model = this._model.get();\n\t\tif (!model) { throw new BugIndicatingError('Inline Edit Model not available'); }\n\t\treturn model;\n\t}\n\n\tprivate readonly _gutterIndicatorStyles: IObservable<{ background: string; foreground: string; border: string }>;\n\tprivate readonly _isHoveredOverInlineEditDebounced: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editorObs: ObservableCodeEditor,\n\t\tprivate readonly _originalRange: IObservable<LineRange | undefined>,\n\t\tprivate readonly _verticalOffset: IObservable<number>,\n\t\tprivate readonly _model: IObservable<IInlineEditModel | undefined>,\n\t\tprivate readonly _isHoveringOverInlineEdit: IObservable<boolean>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IHoverService private readonly _hoverService: HoverService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@IThemeService themeService: IThemeService,\n\t) {\n\t\tsuper();\n\n\t\tthis._tabAction = derived(this, reader => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model) { return InlineEditTabAction.Inactive; }\n\t\t\treturn model.tabAction.read(reader);\n\t\t});\n\n\t\tthis._hoverVisible = observableValue(this, false);\n\t\tthis.isHoverVisible = this._hoverVisible;\n\t\tthis._isHoveredOverIcon = observableValue(this, false);\n\t\tthis._isHoveredOverIconDebounced = debouncedObservable(this._isHoveredOverIcon, 100);\n\t\tthis.isHoveredOverIcon = this._isHoveredOverIconDebounced;\n\t\tthis._isHoveredOverInlineEditDebounced = debouncedObservable(this._isHoveringOverInlineEdit, 100);\n\n\t\tthis._gutterIndicatorStyles = this._tabAction.map((v, reader) => {\n\t\t\tswitch (v) {\n\t\t\t\tcase InlineEditTabAction.Inactive: return {\n\t\t\t\t\tbackground: getEditorBlendedColor(inlineEditIndicatorSecondaryBackground, themeService).read(reader).toString(),\n\t\t\t\t\tforeground: getEditorBlendedColor(inlineEditIndicatorSecondaryForeground, themeService).read(reader).toString(),\n\t\t\t\t\tborder: getEditorBlendedColor(inlineEditIndicatorSecondaryBorder, themeService).read(reader).toString(),\n\t\t\t\t};\n\t\t\t\tcase InlineEditTabAction.Jump: return {\n\t\t\t\t\tbackground: getEditorBlendedColor(inlineEditIndicatorPrimaryBackground, themeService).read(reader).toString(),\n\t\t\t\t\tforeground: getEditorBlendedColor(inlineEditIndicatorPrimaryForeground, themeService).read(reader).toString(),\n\t\t\t\t\tborder: getEditorBlendedColor(inlineEditIndicatorPrimaryBorder, themeService).read(reader).toString()\n\t\t\t\t};\n\t\t\t\tcase InlineEditTabAction.Accept: return {\n\t\t\t\t\tbackground: getEditorBlendedColor(inlineEditIndicatorsuccessfulBackground, themeService).read(reader).toString(),\n\t\t\t\t\tforeground: getEditorBlendedColor(inlineEditIndicatorsuccessfulForeground, themeService).read(reader).toString(),\n\t\t\t\t\tborder: getEditorBlendedColor(inlineEditIndicatorsuccessfulBorder, themeService).read(reader).toString()\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tthis._originalRangeObs = mapOutFalsy(this._originalRange);\n\t\tthis._state = derived(this, reader => {\n\t\t\tconst range = this._originalRangeObs.read(reader);\n\t\t\tif (!range) { return undefined; }\n\t\t\treturn {\n\t\t\t\trange,\n\t\t\t\tlineOffsetRange: this._editorObs.observeLineOffsetRange(range, this._store),\n\t\t\t};\n\t\t});\n\t\tthis._stickyScrollController = StickyScrollController.get(this._editorObs.editor);\n\t\tthis._stickyScrollHeight = this._stickyScrollController\n\t\t\t? observableFromEvent(this._stickyScrollController.onDidChangeStickyScrollHeight, () => this._stickyScrollController!.stickyScrollWidgetHeight)\n\t\t\t: constObservable(0);\n\t\tthis._lineNumberToRender = derived(this, reader => {\n\t\t\tif (this._verticalOffset.read(reader) !== 0) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst lineNumber = this._originalRange.read(reader)?.startLineNumber;\n\t\t\tconst lineNumberOptions = this._editorObs.getOption(EditorOption.lineNumbers).read(reader);\n\n\t\t\tif (lineNumber === undefined || lineNumberOptions.renderType === RenderLineNumbersType.Off) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Interval) {\n\t\t\t\tconst cursorPosition = this._editorObs.cursorPosition.read(reader);\n\t\t\t\tif (lineNumber % 10 === 0 || cursorPosition && cursorPosition.lineNumber === lineNumber) {\n\t\t\t\t\treturn lineNumber.toString();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Relative) {\n\t\t\t\tconst cursorPosition = this._editorObs.cursorPosition.read(reader);\n\t\t\t\tif (!cursorPosition) {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t\tconst relativeLineNumber = Math.abs(lineNumber - cursorPosition.lineNumber);\n\t\t\t\tif (relativeLineNumber === 0) {\n\t\t\t\t\treturn lineNumber.toString();\n\t\t\t\t}\n\t\t\t\treturn relativeLineNumber.toString();\n\t\t\t}\n\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Custom) {\n\t\t\t\tif (lineNumberOptions.renderFn) {\n\t\t\t\t\treturn lineNumberOptions.renderFn(lineNumber);\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn lineNumber.toString();\n\t\t});\n\t\tthis._availableWidthForIcon = derived(this, reader => {\n\t\t\tconst textModel = this._editorObs.editor.getModel();\n\t\t\tconst editor = this._editorObs.editor;\n\t\t\tconst layout = this._editorObs.layoutInfo.read(reader);\n\t\t\tconst gutterWidth = layout.decorationsLeft + layout.decorationsWidth - layout.glyphMarginLeft;\n\n\t\t\tif (!textModel || gutterWidth <= 0) {\n\t\t\t\treturn () => 0;\n\t\t\t}\n\n\t\t\t// no glyph margin => the entire gutter width is available as there is no optimal place to put the icon\n\t\t\tif (layout.lineNumbersLeft === 0) {\n\t\t\t\treturn () => gutterWidth;\n\t\t\t}\n\n\t\t\tconst lineNumberOptions = this._editorObs.getOption(EditorOption.lineNumbers).read(reader);\n\t\t\tif (lineNumberOptions.renderType === RenderLineNumbersType.Relative || /* likely to flicker */\n\t\t\t\tlineNumberOptions.renderType === RenderLineNumbersType.Off) {\n\t\t\t\treturn () => gutterWidth;\n\t\t\t}\n\n\t\t\tconst w = editor.getOption(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\t\tconst rightOfLineNumber = layout.lineNumbersLeft + layout.lineNumbersWidth;\n\t\t\tconst totalLines = textModel.getLineCount();\n\t\t\tconst totalLinesDigits = (totalLines + 1 /* 0 based to 1 based*/).toString().length;\n\n\t\t\tconst offsetDigits: {\n\t\t\t\tfirstLineNumberWithDigitCount: number;\n\t\t\t\ttopOfLineNumber: number;\n\t\t\t\tusableWidthLeftOfLineNumber: number;\n\t\t\t}[] = [];\n\n\t\t\t// We only need to pre compute the usable width left of the line number for the first line number with a given digit count\n\t\t\tfor (let digits = 1; digits <= totalLinesDigits; digits++) {\n\t\t\t\tconst firstLineNumberWithDigitCount = 10 ** (digits - 1);\n\t\t\t\tconst topOfLineNumber = editor.getTopForLineNumber(firstLineNumberWithDigitCount);\n\t\t\t\tconst digitsWidth = digits * w;\n\t\t\t\tconst usableWidthLeftOfLineNumber = Math.min(gutterWidth, Math.max(0, rightOfLineNumber - digitsWidth - layout.glyphMarginLeft));\n\t\t\t\toffsetDigits.push({ firstLineNumberWithDigitCount, topOfLineNumber, usableWidthLeftOfLineNumber });\n\t\t\t}\n\n\t\t\treturn (topOffset: number) => {\n\t\t\t\tfor (let i = offsetDigits.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (topOffset >= offsetDigits[i].topOfLineNumber) {\n\t\t\t\t\t\treturn offsetDigits[i].usableWidthLeftOfLineNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new BugIndicatingError('Could not find avilable width for icon');\n\t\t\t};\n\t\t});\n\t\tthis._layout = derived(this, reader => {\n\t\t\tconst s = this._state.read(reader);\n\t\t\tif (!s) { return undefined; }\n\n\t\t\tconst layout = this._editorObs.layoutInfo.read(reader);\n\n\t\t\tconst lineHeight = this._editorObs.observeLineHeightForLine(s.range.map(r => r.startLineNumber)).read(reader);\n\t\t\tconst gutterViewPortPadding = 2;\n\n\t\t\t// Entire gutter view from top left to bottom right\n\t\t\tconst gutterWidthWithoutPadding = layout.decorationsLeft + layout.decorationsWidth - layout.glyphMarginLeft - 2 * gutterViewPortPadding;\n\t\t\tconst gutterHeightWithoutPadding = layout.height - 2 * gutterViewPortPadding;\n\t\t\tconst gutterViewPortWithStickyScroll = Rect.fromLeftTopWidthHeight(gutterViewPortPadding, gutterViewPortPadding, gutterWidthWithoutPadding, gutterHeightWithoutPadding);\n\t\t\tconst gutterViewPortWithoutStickyScrollWithoutPaddingTop = gutterViewPortWithStickyScroll.withTop(this._stickyScrollHeight.read(reader));\n\t\t\tconst gutterViewPortWithoutStickyScroll = gutterViewPortWithStickyScroll.withTop(gutterViewPortWithoutStickyScrollWithoutPaddingTop.top + gutterViewPortPadding);\n\n\t\t\t// The glyph margin area across all relevant lines\n\t\t\tconst verticalEditRange = s.lineOffsetRange.read(reader);\n\t\t\tconst gutterEditArea = Rect.fromRanges(OffsetRange.fromTo(gutterViewPortWithoutStickyScroll.left, gutterViewPortWithoutStickyScroll.right), verticalEditRange);\n\n\t\t\t// The gutter view container (pill)\n\t\t\tconst pillHeight = lineHeight;\n\t\t\tconst pillOffset = this._verticalOffset.read(reader);\n\t\t\tconst pillFullyDockedRect = gutterEditArea.withHeight(pillHeight).translateY(pillOffset);\n\t\t\tconst pillIsFullyDocked = gutterViewPortWithoutStickyScrollWithoutPaddingTop.containsRect(pillFullyDockedRect);\n\n\t\t\t// The icon which will be rendered in the pill\n\t\t\tconst iconNoneDocked = this._tabAction.map(action => action === InlineEditTabAction.Accept ? Codicon.keyboardTab : Codicon.arrowRight);\n\t\t\tconst iconDocked = derived(this, reader => {\n\t\t\t\tif (this._isHoveredOverIconDebounced.read(reader) || this._isHoveredOverInlineEditDebounced.read(reader)) {\n\t\t\t\t\treturn Codicon.check;\n\t\t\t\t}\n\t\t\t\tif (this._tabAction.read(reader) === InlineEditTabAction.Accept) {\n\t\t\t\t\treturn Codicon.keyboardTab;\n\t\t\t\t}\n\t\t\t\tconst cursorLineNumber = this._editorObs.cursorLineNumber.read(reader) ?? 0;\n\t\t\t\tconst editStartLineNumber = s.range.read(reader).startLineNumber;\n\t\t\t\treturn cursorLineNumber <= editStartLineNumber ? Codicon.keyboardTabAbove : Codicon.keyboardTabBelow;\n\t\t\t});\n\n\t\t\tconst idealIconWidth = 22;\n\t\t\tconst minimalIconWidth = 16; // codicon size\n\t\t\tconst iconWidth = (pillRect: Rect) => {\n\t\t\t\tconst availableWidth = this._availableWidthForIcon.get()(pillRect.bottom + this._editorObs.editor.getScrollTop()) - gutterViewPortPadding;\n\t\t\t\treturn Math.max(Math.min(availableWidth, idealIconWidth), minimalIconWidth);\n\t\t\t};\n\n\t\t\tif (pillIsFullyDocked) {\n\t\t\t\tconst pillRect = pillFullyDockedRect;\n\n\t\t\t\tlet lineNumberWidth;\n\t\t\t\tif (layout.lineNumbersWidth === 0) {\n\t\t\t\t\tlineNumberWidth = Math.min(Math.max(layout.lineNumbersLeft - gutterViewPortWithStickyScroll.left, 0), pillRect.width - idealIconWidth);\n\t\t\t\t} else {\n\t\t\t\t\tlineNumberWidth = Math.max(layout.lineNumbersLeft + layout.lineNumbersWidth - gutterViewPortWithStickyScroll.left, 0);\n\t\t\t\t}\n\n\t\t\t\tconst lineNumberRect = pillRect.withWidth(lineNumberWidth);\n\t\t\t\tconst iconWidth = Math.max(Math.min(layout.decorationsWidth, idealIconWidth), minimalIconWidth);\n\t\t\t\tconst iconRect = pillRect.withWidth(iconWidth).translateX(lineNumberWidth);\n\n\t\t\t\treturn {\n\t\t\t\t\tgutterEditArea,\n\t\t\t\t\ticon: iconDocked,\n\t\t\t\t\ticonDirection: 'right' as const,\n\t\t\t\t\ticonRect,\n\t\t\t\t\tpillRect,\n\t\t\t\t\tlineNumberRect,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst pillPartiallyDockedPossibleArea = gutterViewPortWithStickyScroll.intersect(gutterEditArea); // The area in which the pill could be partially docked\n\t\t\tconst pillIsPartiallyDocked = pillPartiallyDockedPossibleArea && pillPartiallyDockedPossibleArea.height >= pillHeight;\n\n\t\t\tif (pillIsPartiallyDocked) {\n\t\t\t\t// pillFullyDockedRect is outside viewport, move it into the viewport under sticky scroll as we prefer the pill to not be on top of the sticky scroll\n\t\t\t\t// then move it into the possible area which will only cause it to move if it has to be rendered on top of the sticky scroll\n\t\t\t\tconst pillRectMoved = pillFullyDockedRect.moveToBeContainedIn(gutterViewPortWithoutStickyScroll).moveToBeContainedIn(pillPartiallyDockedPossibleArea);\n\t\t\t\tconst pillRect = pillRectMoved.withWidth(iconWidth(pillRectMoved));\n\t\t\t\tconst iconRect = pillRect;\n\n\t\t\t\treturn {\n\t\t\t\t\tgutterEditArea,\n\t\t\t\t\ticon: iconDocked,\n\t\t\t\t\ticonDirection: 'right' as const,\n\t\t\t\t\ticonRect,\n\t\t\t\t\tpillRect,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// pillFullyDockedRect is outside viewport, so move it into viewport\n\t\t\tconst pillRectMoved = pillFullyDockedRect.moveToBeContainedIn(gutterViewPortWithStickyScroll);\n\t\t\tconst pillRect = pillRectMoved.withWidth(iconWidth(pillRectMoved));\n\t\t\tconst iconRect = pillRect;\n\n\t\t\t// docked = pill was already in the viewport\n\t\t\tconst iconDirection = pillRect.top < pillFullyDockedRect.top ?\n\t\t\t\t'top' as const :\n\t\t\t\t'bottom' as const;\n\n\t\t\treturn {\n\t\t\t\tgutterEditArea,\n\t\t\t\ticon: iconNoneDocked,\n\t\t\t\ticonDirection,\n\t\t\t\ticonRect,\n\t\t\t\tpillRect,\n\t\t\t};\n\t\t});\n\t\tthis._iconRef = n.ref<HTMLDivElement>();\n\t\tthis.isVisible = this._layout.map(l => !!l);\n\t\tthis._indicator = n.div({\n\t\t\tclass: 'inline-edits-view-gutter-indicator',\n\t\t\tonclick: () => {\n\t\t\t\tconst layout = this._layout.get();\n\t\t\t\tconst acceptOnClick = layout?.icon.get() === Codicon.check;\n\n\t\t\t\tthis._editorObs.editor.focus();\n\t\t\t\tif (acceptOnClick) {\n\t\t\t\t\tthis.model.accept();\n\t\t\t\t} else {\n\t\t\t\t\tthis.model.jump();\n\t\t\t\t}\n\t\t\t},\n\t\t\ttabIndex: 0,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t},\n\t\t}, mapOutFalsy(this._layout).map(layout => !layout ? [] : [\n\t\t\tn.div({\n\t\t\t\tstyle: {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tbackground: asCssVariable(inlineEditIndicatorBackground),\n\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t...rectToProps(reader => layout.read(reader).gutterEditArea),\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'icon',\n\t\t\t\tref: this._iconRef,\n\t\t\t\tonmouseenter: () => {\n\t\t\t\t\t// TODO show hover when hovering ghost text etc.\n\t\t\t\t\tthis._showHover();\n\t\t\t\t},\n\t\t\t\tstyle: {\n\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\tzIndex: '20',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\tbackgroundColor: this._gutterIndicatorStyles.map(v => v.background),\n\t\t\t\t\t['--vscodeIconForeground' as any]: this._gutterIndicatorStyles.map(v => v.foreground),\n\t\t\t\t\tborder: this._gutterIndicatorStyles.map(v => `1px solid ${v.border}`),\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\ttransition: 'background-color 0.2s ease-in-out, width 0.2s ease-in-out',\n\t\t\t\t\t...rectToProps(reader => layout.read(reader).pillRect),\n\t\t\t\t}\n\t\t\t}, [\n\t\t\t\tn.div({\n\t\t\t\t\tclassName: 'line-number',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tlineHeight: layout.map(l => l.lineNumberRect ? l.lineNumberRect.height : 0),\n\t\t\t\t\t\tdisplay: layout.map(l => l.lineNumberRect ? 'flex' : 'none'),\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'flex-end',\n\t\t\t\t\t\twidth: layout.map(l => l.lineNumberRect ? l.lineNumberRect.width : 0),\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tcolor: this._gutterIndicatorStyles.map(v => v.foreground),\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\tthis._lineNumberToRender\n\t\t\t\t),\n\t\t\t\tn.div({\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\trotate: layout.map(l => `${getRotationFromDirection(l.iconDirection)}deg`),\n\t\t\t\t\t\ttransition: 'rotate 0.2s ease-in-out',\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\tmarginRight: layout.map(l => l.pillRect.width - l.iconRect.width - (l.lineNumberRect?.width ?? 0)),\n\t\t\t\t\t\twidth: layout.map(l => l.iconRect.width),\n\t\t\t\t\t}\n\t\t\t\t}, [\n\t\t\t\t\tlayout.map((l, reader) => renderIcon(l.icon.read(reader))),\n\t\t\t\t])\n\t\t\t]),\n\t\t])).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._indicator.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t}));\n\n\t\tthis._register(this._editorObs.editor.onMouseMove((e: IEditorMouseEvent) => {\n\t\t\tconst state = this._state.get();\n\t\t\tif (state === undefined) { return; }\n\n\t\t\tconst el = this._iconRef.element;\n\t\t\tconst rect = el.getBoundingClientRect();\n\t\t\tconst rectangularArea = Rect.fromLeftTopWidthHeight(rect.left, rect.top, rect.width, rect.height);\n\t\t\tconst point = new Point(e.event.posx, e.event.posy);\n\t\t\tthis._isHoveredOverIcon.set(rectangularArea.containsPoint(point), undefined);\n\t\t}));\n\n\t\tthis._register(this._editorObs.editor.onDidScrollChange(() => {\n\t\t\tthis._isHoveredOverIcon.set(false, undefined);\n\t\t}));\n\n\t\t// pulse animation when hovering inline edit\n\t\tthis._register(runOnChange(this._isHoveredOverInlineEditDebounced, (isHovering) => {\n\t\t\tif (isHovering) {\n\t\t\t\tthis.triggerAnimation();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._indicator.readEffect(reader);\n\t\t\tif (this._indicator.element) {\n\t\t\t\tthis._editorObs.editor.applyFontInfo(this._indicator.element);\n\t\t\t}\n\t\t}));\n\t}\n\n\tpublic triggerAnimation(): Promise<Animation> {\n\t\tif (this._accessibilityService.isMotionReduced()) {\n\t\t\treturn new Animation(null, null).finished;\n\t\t}\n\n\t\t// PULSE ANIMATION:\n\t\tconst animation = this._iconRef.element.animate([\n\t\t\t{\n\t\t\t\toutline: `2px solid ${this._gutterIndicatorStyles.map(v => v.border).get()}`,\n\t\t\t\toutlineOffset: '-1px',\n\t\t\t\toffset: 0\n\t\t\t},\n\t\t\t{\n\t\t\t\toutline: `2px solid transparent`,\n\t\t\t\toutlineOffset: '10px',\n\t\t\t\toffset: 1\n\t\t\t},\n\t\t], { duration: 500 });\n\n\t\treturn animation.finished;\n\t}\n\n\tprivate readonly _originalRangeObs;\n\n\tprivate readonly _state;\n\n\tprivate readonly _stickyScrollController;\n\tprivate readonly _stickyScrollHeight;\n\n\tprivate readonly _lineNumberToRender;\n\n\tprivate readonly _availableWidthForIcon;\n\n\tprivate readonly _layout;\n\n\n\tprivate readonly _iconRef;\n\n\tpublic readonly isVisible;\n\n\tprivate readonly _hoverVisible;\n\tpublic readonly isHoverVisible: IObservable<boolean>;\n\n\tprivate readonly _isHoveredOverIcon;\n\tprivate readonly _isHoveredOverIconDebounced: IObservable<boolean>;\n\tpublic readonly isHoveredOverIcon: IObservable<boolean>;\n\n\tprivate _showHover(): void {\n\t\tif (this._hoverVisible.get()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst disposableStore = new DisposableStore();\n\t\tconst content = disposableStore.add(this._instantiationService.createInstance(\n\t\t\tGutterIndicatorMenuContent,\n\t\t\tthis.model,\n\t\t\t(focusEditor) => {\n\t\t\t\tif (focusEditor) {\n\t\t\t\t\tthis._editorObs.editor.focus();\n\t\t\t\t}\n\t\t\t\th?.dispose();\n\t\t\t},\n\t\t\tthis._editorObs,\n\t\t).toDisposableLiveElement());\n\n\t\tconst focusTracker = disposableStore.add(trackFocus(content.element));\n\t\tdisposableStore.add(focusTracker.onDidBlur(() => this._focusIsInMenu.set(false, undefined)));\n\t\tdisposableStore.add(focusTracker.onDidFocus(() => this._focusIsInMenu.set(true, undefined)));\n\t\tdisposableStore.add(toDisposable(() => this._focusIsInMenu.set(false, undefined)));\n\n\t\tconst h = this._hoverService.showInstantHover({\n\t\t\ttarget: this._iconRef.element,\n\t\t\tcontent: content.element,\n\t\t}) as HoverWidget | undefined;\n\t\tif (h) {\n\t\t\tthis._hoverVisible.set(true, undefined);\n\t\t\tdisposableStore.add(this._editorObs.editor.onDidScrollChange(() => h.dispose()));\n\t\t\tdisposableStore.add(h.onDispose(() => {\n\t\t\t\tthis._hoverVisible.set(false, undefined);\n\t\t\t\tdisposableStore.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tdisposableStore.dispose();\n\t\t}\n\t}\n\n\tprivate readonly _tabAction;\n\n\tprivate readonly _indicator;\n}\n\nfunction getRotationFromDirection(direction: 'top' | 'bottom' | 'right'): number {\n\tswitch (direction) {\n\t\tcase 'top': return 90;\n\t\tcase 'bottom': return -90;\n\t\tcase 'right': return 0;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6092, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsNewUsers.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsNewUsers.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsNewUsers.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, IObservable, observableValue, runOnChange, runOnChangeWithCancellationToken } from '../../../../../../base/common/observable.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../../platform/storage/common/storage.js';\nimport { InlineEditsGutterIndicator } from './components/gutterIndicatorView.js';\nimport { IInlineEditHost, IInlineEditModel } from './inlineEditsViewInterface.js';\nimport { InlineEditsCollapsedView } from './inlineEditsViews/inlineEditsCollapsedView.js';\n\nenum UserKind {\n\tFirstTime = 'firstTime',\n\tSecondTime = 'secondTime',\n\tActive = 'active'\n}\n\nexport class InlineEditsOnboardingExperience extends Disposable {\n\n\tprivate readonly _disposables = this._register(new MutableDisposable());\n\n\tprivate readonly _setupDone = observableValue({ name: 'setupDone' }, false);\n\n\tprivate readonly _activeCompletionId = derived<string | undefined>(reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\n\t\tif (!this._setupDone.read(reader)) { return undefined; }\n\n\t\tconst indicator = this._indicator.read(reader);\n\t\tif (!indicator || !indicator.isVisible.read(reader)) { return undefined; }\n\n\t\treturn model.inlineEdit.inlineCompletion.identity.id;\n\t});\n\n\tconstructor(\n\t\tprivate readonly _host: IObservable<IInlineEditHost | undefined>,\n\t\tprivate readonly _model: IObservable<IInlineEditModel | undefined>,\n\t\tprivate readonly _indicator: IObservable<InlineEditsGutterIndicator | undefined>,\n\t\tprivate readonly _collapsedView: InlineEditsCollapsedView,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._initializeDebugSetting());\n\n\t\t// Setup the onboarding experience for new users\n\t\tthis._disposables.value = this.setupNewUserExperience();\n\n\t\tthis._setupDone.set(true, undefined);\n\t}\n\n\tprivate setupNewUserExperience(): IDisposable | undefined {\n\t\tif (this.getNewUserType() === UserKind.Active) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tlet userHasHoveredOverIcon = false;\n\t\tlet inlineEditHasBeenAccepted = false;\n\t\tlet firstTimeUserAnimationCount = 0;\n\t\tlet secondTimeUserAnimationCount = 0;\n\n\t\t// pulse animation for new users\n\t\tdisposableStore.add(runOnChangeWithCancellationToken(this._activeCompletionId, async (id, _, __, token) => {\n\t\t\tif (id === undefined) { return; }\n\t\t\tlet userType = this.getNewUserType();\n\n\t\t\t// User Kind Transition\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tif (firstTimeUserAnimationCount++ >= 5 || userHasHoveredOverIcon) {\n\t\t\t\t\t\tuserType = UserKind.SecondTime;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tif (secondTimeUserAnimationCount++ >= 3 && inlineEditHasBeenAccepted) {\n\t\t\t\t\t\tuserType = UserKind.Active;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Animation\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tfor (let i = 0; i < 3 && !token.isCancellationRequested; i++) {\n\t\t\t\t\t\tawait this._indicator.get()?.triggerAnimation();\n\t\t\t\t\t\tawait timeout(500);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tthis._indicator.get()?.triggerAnimation();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdisposableStore.add(autorun(reader => {\n\t\t\tif (this._collapsedView.isVisible.read(reader)) {\n\t\t\t\tif (this.getNewUserType() !== UserKind.Active) {\n\t\t\t\t\tthis._collapsedView.triggerAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Remember when the user has hovered over the icon\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst indicator = this._indicator.read(reader);\n\t\t\tif (!indicator) { return; }\n\t\t\tstore.add(runOnChange(indicator.isHoveredOverIcon, async (isHovered) => {\n\t\t\t\tif (isHovered) {\n\t\t\t\t\tuserHasHoveredOverIcon = true;\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\n\t\t// Remember when the user has accepted an inline edit\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst host = this._host.read(reader);\n\t\t\tif (!host) { return; }\n\t\t\tstore.add(host.onDidAccept(() => {\n\t\t\t\tinlineEditHasBeenAccepted = true;\n\t\t\t}));\n\t\t}));\n\n\t\treturn disposableStore;\n\t}\n\n\tprivate getNewUserType(): UserKind {\n\t\treturn this._storageService.get('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION, UserKind.FirstTime) as UserKind;\n\t}\n\n\tprivate setNewUserType(value: UserKind): void {\n\t\tswitch (value) {\n\t\t\tcase UserKind.FirstTime:\n\t\t\t\tthrow new BugIndicatingError('UserKind should not be set to first time');\n\t\t\tcase UserKind.SecondTime:\n\t\t\t\tbreak;\n\t\t\tcase UserKind.Active:\n\t\t\t\tthis._disposables.clear();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._storageService.store('inlineEditsGutterIndicatorUserKind', value, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n\n\tprivate _initializeDebugSetting(): IDisposable {\n\t\t// Debug setting to reset the new user experience\n\t\tconst hiddenDebugSetting = 'editor.inlineSuggest.edits.resetNewUserExperience';\n\t\tif (this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t}\n\n\t\tconst disposable = this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(hiddenDebugSetting) && this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t\t\tthis._disposables.value = this.setupNewUserExperience();\n\t\t\t}\n\t\t});\n\n\t\treturn disposable;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../../../../base/common/async.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, IObservable, observableValue, runOnChange, runOnChangeWithCancellationToken } from '../../../../../../base/common/observable.js';\nimport { IConfigurationService } from '../../../../../../platform/configuration/common/configuration.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../../../../../platform/storage/common/storage.js';\nimport { InlineEditsGutterIndicator } from './components/gutterIndicatorView.js';\nimport { IInlineEditHost, IInlineEditModel } from './inlineEditsViewInterface.js';\nimport { InlineEditsCollapsedView } from './inlineEditsViews/inlineEditsCollapsedView.js';\n\nenum UserKind {\n\tFirstTime = 'firstTime',\n\tSecondTime = 'secondTime',\n\tActive = 'active'\n}\n\nexport class InlineEditsOnboardingExperience extends Disposable {\n\n\tprivate readonly _disposables = this._register(new MutableDisposable());\n\n\tprivate readonly _setupDone = observableValue({ name: 'setupDone' }, false);\n\n\tprivate readonly _activeCompletionId = derived<string | undefined>(reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\n\t\tif (!this._setupDone.read(reader)) { return undefined; }\n\n\t\tconst indicator = this._indicator.read(reader);\n\t\tif (!indicator || !indicator.isVisible.read(reader)) { return undefined; }\n\n\t\treturn model.inlineEdit.inlineCompletion.identity.id;\n\t});\n\n\tconstructor(\n\t\tprivate readonly _host: IObservable<IInlineEditHost | undefined>,\n\t\tprivate readonly _model: IObservable<IInlineEditModel | undefined>,\n\t\tprivate readonly _indicator: IObservable<InlineEditsGutterIndicator | undefined>,\n\t\tprivate readonly _collapsedView: InlineEditsCollapsedView,\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this._initializeDebugSetting());\n\n\t\t// Setup the onboarding experience for new users\n\t\tthis._disposables.value = this.setupNewUserExperience();\n\n\t\tthis._setupDone.set(true, undefined);\n\t}\n\n\tprivate setupNewUserExperience(): IDisposable | undefined {\n\t\tif (this.getNewUserType() === UserKind.Active) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tlet userHasHoveredOverIcon = false;\n\t\tlet inlineEditHasBeenAccepted = false;\n\t\tlet firstTimeUserAnimationCount = 0;\n\t\tlet secondTimeUserAnimationCount = 0;\n\n\t\t// pulse animation for new users\n\t\tdisposableStore.add(runOnChangeWithCancellationToken(this._activeCompletionId, async (id, _, __, token) => {\n\t\t\tif (id === undefined) { return; }\n\t\t\tlet userType = this.getNewUserType();\n\n\t\t\t// User Kind Transition\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tif (firstTimeUserAnimationCount++ >= 5 || userHasHoveredOverIcon) {\n\t\t\t\t\t\tuserType = UserKind.SecondTime;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tif (secondTimeUserAnimationCount++ >= 3 && inlineEditHasBeenAccepted) {\n\t\t\t\t\t\tuserType = UserKind.Active;\n\t\t\t\t\t\tthis.setNewUserType(userType);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Animation\n\t\t\tswitch (userType) {\n\t\t\t\tcase UserKind.FirstTime: {\n\t\t\t\t\tfor (let i = 0; i < 3 && !token.isCancellationRequested; i++) {\n\t\t\t\t\t\tawait this._indicator.get()?.triggerAnimation();\n\t\t\t\t\t\tawait timeout(500);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase UserKind.SecondTime: {\n\t\t\t\t\tthis._indicator.get()?.triggerAnimation();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tdisposableStore.add(autorun(reader => {\n\t\t\tif (this._collapsedView.isVisible.read(reader)) {\n\t\t\t\tif (this.getNewUserType() !== UserKind.Active) {\n\t\t\t\t\tthis._collapsedView.triggerAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Remember when the user has hovered over the icon\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst indicator = this._indicator.read(reader);\n\t\t\tif (!indicator) { return; }\n\t\t\tstore.add(runOnChange(indicator.isHoveredOverIcon, async (isHovered) => {\n\t\t\t\tif (isHovered) {\n\t\t\t\t\tuserHasHoveredOverIcon = true;\n\t\t\t\t}\n\t\t\t}));\n\t\t}));\n\n\t\t// Remember when the user has accepted an inline edit\n\t\tdisposableStore.add(autorunWithStore((reader, store) => {\n\t\t\tconst host = this._host.read(reader);\n\t\t\tif (!host) { return; }\n\t\t\tstore.add(host.onDidAccept(() => {\n\t\t\t\tinlineEditHasBeenAccepted = true;\n\t\t\t}));\n\t\t}));\n\n\t\treturn disposableStore;\n\t}\n\n\tprivate getNewUserType(): UserKind {\n\t\treturn this._storageService.get('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION, UserKind.FirstTime) as UserKind;\n\t}\n\n\tprivate setNewUserType(value: UserKind): void {\n\t\tswitch (value) {\n\t\t\tcase UserKind.FirstTime:\n\t\t\t\tthrow new BugIndicatingError('UserKind should not be set to first time');\n\t\t\tcase UserKind.SecondTime:\n\t\t\t\tbreak;\n\t\t\tcase UserKind.Active:\n\t\t\t\tthis._disposables.clear();\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis._storageService.store('inlineEditsGutterIndicatorUserKind', value, StorageScope.APPLICATION, StorageTarget.USER);\n\t}\n\n\tprivate _initializeDebugSetting(): IDisposable {\n\t\t// Debug setting to reset the new user experience\n\t\tconst hiddenDebugSetting = 'editor.inlineSuggest.edits.resetNewUserExperience';\n\t\tif (this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t}\n\n\t\tconst disposable = this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration(hiddenDebugSetting) && this._configurationService.getValue(hiddenDebugSetting)) {\n\t\t\t\tthis._storageService.remove('inlineEditsGutterIndicatorUserKind', StorageScope.APPLICATION);\n\t\t\t\tthis._disposables.value = this.setupNewUserExperience();\n\t\t\t}\n\t\t});\n\n\t\treturn disposable;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6283, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCollapsedView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCollapsedView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCollapsedView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { IAccessibilityService } from '../../../../../../../platform/accessibility/common/accessibility.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { singleTextRemoveCommonPrefix } from '../../../model/singleTextEditHelpers.js';\nimport { IInlineEditsView } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { inlineEditIndicatorPrimaryBorder } from '../theme.js';\nimport { getEditorValidOverlayRect, PathBuilder, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsCollapsedView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\tprivate readonly _iconRef = n.ref<SVGElement>();\n\n\treadonly isVisible: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst firstEdit = this._edit.map(inlineEdit => inlineEdit?.edit.replacements[0] ?? null);\n\n\t\tconst startPosition = firstEdit.map(edit => edit ? singleTextRemoveCommonPrefix(edit, this._editor.getModel()!).range.getStartPosition() : null);\n\t\tconst observedStartPoint = this._editorObs.observePosition(startPosition, this._store);\n\t\tconst startPoint = derived<Point | null>(reader => {\n\t\t\tconst point = observedStartPoint.read(reader);\n\t\t\tif (!point) { return null; }\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\t\t\treturn new Point(contentLeft + point.x - scrollLeft, point.y);\n\t\t});\n\n\t\tconst overlayElement = n.div({\n\t\t\tclass: 'inline-edits-collapsed-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [\n\t\t\t[this.getCollapsedIndicator(startPoint)],\n\t\t]).keepUpdated(this._store).element;\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlayElement,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t}));\n\n\t\tthis.isVisible = this._edit.map((inlineEdit, reader) => !!inlineEdit && startPoint.read(reader) !== null);\n\t}\n\n\tpublic triggerAnimation(): Promise<Animation> {\n\t\tif (this._accessibilityService.isMotionReduced()) {\n\t\t\treturn new Animation(null, null).finished;\n\t\t}\n\n\t\t// PULSE ANIMATION:\n\t\tconst animation = this._iconRef.element.animate([\n\t\t\t{ offset: 0.00, transform: 'translateY(-3px)', },\n\t\t\t{ offset: 0.20, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.36, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.52, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.68, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.84, transform: 'translateY(1px)', },\n\t\t\t{ offset: 1.00, transform: 'translateY(0px)', },\n\t\t], { duration: 2000 });\n\n\t\treturn animation.finished;\n\t}\n\n\tprivate getCollapsedIndicator(startPoint: IObservable<Point | null>) {\n\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft;\n\t\tconst startPointTranslated = startPoint.map((p, reader) => p ? p.deltaX(-contentLeft.read(reader)) : null);\n\t\tconst iconPath = this.createIconPath(startPointTranslated);\n\n\t\treturn n.svg({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._iconRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editorObs).read(r)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tpointerEvents: 'none',\n\t\t\t}\n\t\t}, [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'collapsedViewPath',\n\t\t\t\td: iconPath,\n\t\t\t\tfill: asCssVariable(inlineEditIndicatorPrimaryBorder),\n\t\t\t}),\n\t\t]);\n\t}\n\n\tprivate createIconPath(indicatorPoint: IObservable<Point | null>): IObservable<string> {\n\t\tconst width = 6;\n\t\tconst triangleHeight = 3;\n\t\tconst baseHeight = 1;\n\n\t\treturn indicatorPoint.map(point => {\n\t\t\tif (!point) { return new PathBuilder().build(); }\n\t\t\tconst baseTopLeft = point.deltaX(-width / 2).deltaY(-baseHeight);\n\t\t\tconst baseTopRight = baseTopLeft.deltaX(width);\n\t\t\tconst baseBottomLeft = baseTopLeft.deltaY(baseHeight);\n\t\t\tconst baseBottomRight = baseTopRight.deltaY(baseHeight);\n\t\t\tconst triangleBottomCenter = baseBottomLeft.deltaX(width / 2).deltaY(triangleHeight);\n\t\t\treturn new PathBuilder()\n\t\t\t\t.moveTo(baseTopLeft)\n\t\t\t\t.lineTo(baseTopRight)\n\t\t\t\t.lineTo(baseBottomRight)\n\t\t\t\t.lineTo(triangleBottomCenter)\n\t\t\t\t.lineTo(baseBottomLeft)\n\t\t\t\t.lineTo(baseTopLeft)\n\t\t\t\t.build();\n\t\t});\n\t}\n\n\treadonly isHovered = constObservable(false);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { IAccessibilityService } from '../../../../../../../platform/accessibility/common/accessibility.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { singleTextRemoveCommonPrefix } from '../../../model/singleTextEditHelpers.js';\nimport { IInlineEditsView } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { inlineEditIndicatorPrimaryBorder } from '../theme.js';\nimport { getEditorValidOverlayRect, PathBuilder, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsCollapsedView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\tprivate readonly _iconRef = n.ref<SVGElement>();\n\n\treadonly isVisible: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst firstEdit = this._edit.map(inlineEdit => inlineEdit?.edit.replacements[0] ?? null);\n\n\t\tconst startPosition = firstEdit.map(edit => edit ? singleTextRemoveCommonPrefix(edit, this._editor.getModel()!).range.getStartPosition() : null);\n\t\tconst observedStartPoint = this._editorObs.observePosition(startPosition, this._store);\n\t\tconst startPoint = derived<Point | null>(reader => {\n\t\t\tconst point = observedStartPoint.read(reader);\n\t\t\tif (!point) { return null; }\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\t\t\treturn new Point(contentLeft + point.x - scrollLeft, point.y);\n\t\t});\n\n\t\tconst overlayElement = n.div({\n\t\t\tclass: 'inline-edits-collapsed-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [\n\t\t\t[this.getCollapsedIndicator(startPoint)],\n\t\t]).keepUpdated(this._store).element;\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlayElement,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t}));\n\n\t\tthis.isVisible = this._edit.map((inlineEdit, reader) => !!inlineEdit && startPoint.read(reader) !== null);\n\t}\n\n\tpublic triggerAnimation(): Promise<Animation> {\n\t\tif (this._accessibilityService.isMotionReduced()) {\n\t\t\treturn new Animation(null, null).finished;\n\t\t}\n\n\t\t// PULSE ANIMATION:\n\t\tconst animation = this._iconRef.element.animate([\n\t\t\t{ offset: 0.00, transform: 'translateY(-3px)', },\n\t\t\t{ offset: 0.20, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.36, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.52, transform: 'translateY(1px)', },\n\t\t\t{ offset: 0.68, transform: 'translateY(-1px)', },\n\t\t\t{ offset: 0.84, transform: 'translateY(1px)', },\n\t\t\t{ offset: 1.00, transform: 'translateY(0px)', },\n\t\t], { duration: 2000 });\n\n\t\treturn animation.finished;\n\t}\n\n\tprivate getCollapsedIndicator(startPoint: IObservable<Point | null>) {\n\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft;\n\t\tconst startPointTranslated = startPoint.map((p, reader) => p ? p.deltaX(-contentLeft.read(reader)) : null);\n\t\tconst iconPath = this.createIconPath(startPointTranslated);\n\n\t\treturn n.svg({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._iconRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editorObs).read(r)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tpointerEvents: 'none',\n\t\t\t}\n\t\t}, [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'collapsedViewPath',\n\t\t\t\td: iconPath,\n\t\t\t\tfill: asCssVariable(inlineEditIndicatorPrimaryBorder),\n\t\t\t}),\n\t\t]);\n\t}\n\n\tprivate createIconPath(indicatorPoint: IObservable<Point | null>): IObservable<string> {\n\t\tconst width = 6;\n\t\tconst triangleHeight = 3;\n\t\tconst baseHeight = 1;\n\n\t\treturn indicatorPoint.map(point => {\n\t\t\tif (!point) { return new PathBuilder().build(); }\n\t\t\tconst baseTopLeft = point.deltaX(-width / 2).deltaY(-baseHeight);\n\t\t\tconst baseTopRight = baseTopLeft.deltaX(width);\n\t\t\tconst baseBottomLeft = baseTopLeft.deltaY(baseHeight);\n\t\t\tconst baseBottomRight = baseTopRight.deltaY(baseHeight);\n\t\t\tconst triangleBottomCenter = baseBottomLeft.deltaX(width / 2).deltaY(triangleHeight);\n\t\t\treturn new PathBuilder()\n\t\t\t\t.moveTo(baseTopLeft)\n\t\t\t\t.lineTo(baseTopRight)\n\t\t\t\t.lineTo(baseBottomRight)\n\t\t\t\t.lineTo(triangleBottomCenter)\n\t\t\t\t.lineTo(baseBottomLeft)\n\t\t\t\t.lineTo(baseTopLeft)\n\t\t\t\t.build();\n\t\t});\n\t}\n\n\treadonly isHovered = constObservable(false);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6455, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCustomView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCustomView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsCustomView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, derivedObservableWithCache, IObservable, IReader, observableValue } from '../../../../../../../base/common/observable.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { InlineCompletionDisplayLocation, InlineCompletionDisplayLocationKind } from '../../../../../../common/languages.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, inlineEditIndicatorPrimaryBackground, inlineEditIndicatorSecondaryBackground, inlineEditIndicatorsuccessfulBackground } from '../theme.js';\nimport { getContentRenderWidth, maxContentWidthInRange, rectToProps } from '../utils/utils.js';\n\nconst MIN_END_OF_LINE_PADDING = 14;\nconst PADDING_VERTICALLY = 0;\nconst PADDING_HORIZONTALLY = 4;\nconst HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW = 4;\nconst VERTICAL_OFFSET_WHEN_ABOVE_BELOW = 2;\n// !! minEndOfLinePadding should always be larger than paddingHorizontally + horizontalOffsetWhenAboveBelow\n\nexport class InlineEditsCustomView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _isHovered = observableValue(this, false);\n\treadonly isHovered: IObservable<boolean> = this._isHovered;\n\tprivate readonly _viewRef = n.ref<HTMLDivElement>();\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\treadonly minEditorScrollHeight: IObservable<number>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tdisplayLocation: IObservable<InlineCompletionDisplayLocation | undefined>,\n\t\ttabAction: IObservable<InlineEditTabAction>,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst styles = tabAction.map((v, reader) => {\n\t\t\tlet border;\n\t\t\tswitch (v) {\n\t\t\t\tcase InlineEditTabAction.Inactive: border = inlineEditIndicatorSecondaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Jump: border = inlineEditIndicatorPrimaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Accept: border = inlineEditIndicatorsuccessfulBackground; break;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tborder: getEditorBlendedColor(border, themeService).read(reader).toString(),\n\t\t\t\tbackground: asCssVariable(editorBackground)\n\t\t\t};\n\t\t});\n\n\t\tconst state = displayLocation.map(dl => dl ? this.getState(dl) : undefined);\n\n\t\tconst view = state.map(s => s ? this.getRendering(s, styles) : undefined);\n\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst s = state.read(reader);\n\t\t\tif (!s) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn s.rect.read(reader).bottom + this._editor.getScrollTop();\n\t\t});\n\n\t\tconst overlay = n.div({\n\t\t\tclass: 'inline-edits-custom-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [view]).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlay.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derivedObservableWithCache<number>(this, (reader, prev) => {\n\t\t\t\tconst s = state.read(reader);\n\t\t\t\tif (!s) { return prev ?? 0; }\n\n\t\t\t\tconst current = s.rect.map(rect => rect.right).read(reader)\n\t\t\t\t\t+ this._editorObs.layoutInfoVerticalScrollbarWidth.read(reader)\n\t\t\t\t\t+ PADDING_HORIZONTALLY\n\t\t\t\t\t- this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\t\treturn Math.max(prev ?? 0, current); // will run into infinite loop otherwise TODO: fix this\n\t\t\t}).recomputeInitiallyAndOnChange(this._store),\n\t\t}));\n\n\t\tthis._register(autorun((reader) => {\n\t\t\tconst v = view.read(reader);\n\t\t\tif (!v) { this._isHovered.set(false, undefined); return; }\n\t\t\tthis._isHovered.set(overlay.isHovered.read(reader), undefined);\n\t\t}));\n\t}\n\n\t// TODO: this is very similar to side by side `fitsInsideViewport`, try to use the same function\n\tprivate fitsInsideViewport(range: LineRange, displayLabel: string, reader: IReader | undefined): boolean {\n\t\tconst editorWidth = this._editorObs.layoutInfoWidth.read(reader);\n\t\tconst editorContentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\tconst editorVerticalScrollbar = this._editor.getLayoutInfo().verticalScrollbarWidth;\n\t\tconst minimapWidth = this._editorObs.layoutInfoMinimap.read(reader).minimapLeft !== 0 ? this._editorObs.layoutInfoMinimap.read(reader).minimapWidth : 0;\n\n\t\tconst maxOriginalContent = maxContentWidthInRange(this._editorObs, range, undefined);\n\t\tconst maxModifiedContent = getContentRenderWidth(displayLabel, this._editor, this._editor.getModel()!);\n\t\tconst padding = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\n\t\treturn maxOriginalContent + maxModifiedContent + padding < editorWidth - editorContentLeft - editorVerticalScrollbar - minimapWidth;\n\t}\n\n\tprivate getState(displayLocation: InlineCompletionDisplayLocation): { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind } {\n\n\t\tconst contentState = derived(this, (reader) => {\n\t\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t\tconst startColumn = displayLocation.range.startColumn;\n\t\t\tconst endColumn = displayLocation.range.endColumn;\n\t\t\tconst lineCount = this._editor.getModel()?.getLineCount() ?? 0;\n\n\t\t\tconst lineWidth = maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber, startLineNumber + 1), reader);\n\t\t\tconst lineWidthBelow = startLineNumber + 1 <= lineCount ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber + 1, startLineNumber + 2), reader) : undefined;\n\t\t\tconst lineWidthAbove = startLineNumber - 1 >= 1 ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber - 1, startLineNumber), reader) : undefined;\n\t\t\tconst startContentLeftOffset = this._editor.getOffsetForColumn(startLineNumber, startColumn);\n\t\t\tconst endContentLeftOffset = this._editor.getOffsetForColumn(endLineNumber, endColumn);\n\n\t\t\treturn {\n\t\t\t\tlineWidth,\n\t\t\t\tlineWidthBelow,\n\t\t\t\tlineWidthAbove,\n\t\t\t\tstartContentLeftOffset,\n\t\t\t\tendContentLeftOffset\n\t\t\t};\n\t\t});\n\n\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t// only check viewport once in the beginning when rendering the view\n\t\tconst fitsInsideViewport = this.fitsInsideViewport(new LineRange(startLineNumber, endLineNumber + 1), displayLocation.label, undefined);\n\n\t\tconst rect = derived(this, reader => {\n\t\t\tconst w = this._editorObs.getOption(EditorOption.fontInfo).read(reader).typicalHalfwidthCharacterWidth;\n\n\t\t\tconst { lineWidth, lineWidthBelow, lineWidthAbove, startContentLeftOffset, endContentLeftOffset } = contentState.read(reader);\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst lineHeight = this._editorObs.observeLineHeightForLine(startLineNumber).recomputeInitiallyAndOnChange(reader.store).read(reader);\n\t\t\tconst scrollTop = this._editorObs.scrollTop.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\n\t\t\tlet position: 'end' | 'below' | 'above';\n\t\t\tif (startLineNumber === endLineNumber && endContentLeftOffset + 5 * w >= lineWidth && fitsInsideViewport) {\n\t\t\t\tposition = 'end'; // Render at the end of the line if the range ends almost at the end of the line\n\t\t\t} else if (lineWidthBelow !== undefined && lineWidthBelow + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'below'; // Render Below if possible\n\t\t\t} else if (lineWidthAbove !== undefined && lineWidthAbove + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'above'; // Render Above if possible\n\t\t\t} else {\n\t\t\t\tposition = 'end'; // Render at the end of the line otherwise\n\t\t\t}\n\n\t\t\tlet topOfLine;\n\t\t\tlet contentStartOffset;\n\t\t\tlet deltaX = 0;\n\t\t\tlet deltaY = 0;\n\n\t\t\tswitch (position) {\n\t\t\t\tcase 'end': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber);\n\t\t\t\t\tcontentStartOffset = lineWidth;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'below': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber + 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'above': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber - 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = -PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst textRect = Rect.fromLeftTopWidthHeight(\n\t\t\t\tcontentLeft + contentStartOffset - scrollLeft,\n\t\t\t\ttopOfLine - scrollTop,\n\t\t\t\tw * displayLocation.label.length,\n\t\t\t\tlineHeight\n\t\t\t);\n\n\t\t\treturn textRect.withMargin(PADDING_VERTICALLY, PADDING_HORIZONTALLY).translateX(deltaX).translateY(deltaY);\n\t\t});\n\n\t\treturn {\n\t\t\trect,\n\t\t\tlabel: displayLocation.label,\n\t\t\tkind: displayLocation.kind\n\t\t};\n\t}\n\n\tprivate getRendering(state: { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind }, styles: IObservable<{ background: string; border: string }>) {\n\n\t\tconst line = document.createElement('div');\n\t\tconst t = this._editor.getModel()!.tokenization.tokenizeLinesAt(1, [state.label])?.[0];\n\t\tlet tokens: LineTokens;\n\t\tif (t && state.kind === InlineCompletionDisplayLocationKind.Code) {\n\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(state.label, this._languageService.languageIdCodec);\n\t\t} else {\n\t\t\ttokens = LineTokens.createEmpty(state.label, this._languageService.languageIdCodec);\n\t\t}\n\n\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor).withSetWidth(false).withScrollBeyondLastColumn(0), [], line, true);\n\t\tline.style.width = `${result.minWidthInPx}px`;\n\n\t\tconst rect = state.rect.map(r => r.withMargin(0, PADDING_HORIZONTALLY));\n\n\t\treturn n.div({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._viewRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps(reader => rect.read(reader)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tboxSizing: 'border-box',\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tborder: styles.map(s => `1px solid ${s.border}`),\n\t\t\t\tborderRadius: '4px',\n\t\t\t\tbackgroundColor: styles.map(s => s.background),\n\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t},\n\t\t\tonmousedown: e => {\n\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t},\n\t\t\tonclick: (e) => { this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)); }\n\t\t}, [\n\t\t\tline\n\t\t]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, derived, derivedObservableWithCache, IObservable, IReader, observableValue } from '../../../../../../../base/common/observable.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { InlineCompletionDisplayLocation, InlineCompletionDisplayLocationKind } from '../../../../../../common/languages.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, inlineEditIndicatorPrimaryBackground, inlineEditIndicatorSecondaryBackground, inlineEditIndicatorsuccessfulBackground } from '../theme.js';\nimport { getContentRenderWidth, maxContentWidthInRange, rectToProps } from '../utils/utils.js';\n\nconst MIN_END_OF_LINE_PADDING = 14;\nconst PADDING_VERTICALLY = 0;\nconst PADDING_HORIZONTALLY = 4;\nconst HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW = 4;\nconst VERTICAL_OFFSET_WHEN_ABOVE_BELOW = 2;\n// !! minEndOfLinePadding should always be larger than paddingHorizontally + horizontalOffsetWhenAboveBelow\n\nexport class InlineEditsCustomView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _isHovered = observableValue(this, false);\n\treadonly isHovered: IObservable<boolean> = this._isHovered;\n\tprivate readonly _viewRef = n.ref<HTMLDivElement>();\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\treadonly minEditorScrollHeight: IObservable<number>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tdisplayLocation: IObservable<InlineCompletionDisplayLocation | undefined>,\n\t\ttabAction: IObservable<InlineEditTabAction>,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst styles = tabAction.map((v, reader) => {\n\t\t\tlet border;\n\t\t\tswitch (v) {\n\t\t\t\tcase InlineEditTabAction.Inactive: border = inlineEditIndicatorSecondaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Jump: border = inlineEditIndicatorPrimaryBackground; break;\n\t\t\t\tcase InlineEditTabAction.Accept: border = inlineEditIndicatorsuccessfulBackground; break;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tborder: getEditorBlendedColor(border, themeService).read(reader).toString(),\n\t\t\t\tbackground: asCssVariable(editorBackground)\n\t\t\t};\n\t\t});\n\n\t\tconst state = displayLocation.map(dl => dl ? this.getState(dl) : undefined);\n\n\t\tconst view = state.map(s => s ? this.getRendering(s, styles) : undefined);\n\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst s = state.read(reader);\n\t\t\tif (!s) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn s.rect.read(reader).bottom + this._editor.getScrollTop();\n\t\t});\n\n\t\tconst overlay = n.div({\n\t\t\tclass: 'inline-edits-custom-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: 'block',\n\t\t\t},\n\t\t}, [view]).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: overlay.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derivedObservableWithCache<number>(this, (reader, prev) => {\n\t\t\t\tconst s = state.read(reader);\n\t\t\t\tif (!s) { return prev ?? 0; }\n\n\t\t\t\tconst current = s.rect.map(rect => rect.right).read(reader)\n\t\t\t\t\t+ this._editorObs.layoutInfoVerticalScrollbarWidth.read(reader)\n\t\t\t\t\t+ PADDING_HORIZONTALLY\n\t\t\t\t\t- this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\t\treturn Math.max(prev ?? 0, current); // will run into infinite loop otherwise TODO: fix this\n\t\t\t}).recomputeInitiallyAndOnChange(this._store),\n\t\t}));\n\n\t\tthis._register(autorun((reader) => {\n\t\t\tconst v = view.read(reader);\n\t\t\tif (!v) { this._isHovered.set(false, undefined); return; }\n\t\t\tthis._isHovered.set(overlay.isHovered.read(reader), undefined);\n\t\t}));\n\t}\n\n\t// TODO: this is very similar to side by side `fitsInsideViewport`, try to use the same function\n\tprivate fitsInsideViewport(range: LineRange, displayLabel: string, reader: IReader | undefined): boolean {\n\t\tconst editorWidth = this._editorObs.layoutInfoWidth.read(reader);\n\t\tconst editorContentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\tconst editorVerticalScrollbar = this._editor.getLayoutInfo().verticalScrollbarWidth;\n\t\tconst minimapWidth = this._editorObs.layoutInfoMinimap.read(reader).minimapLeft !== 0 ? this._editorObs.layoutInfoMinimap.read(reader).minimapWidth : 0;\n\n\t\tconst maxOriginalContent = maxContentWidthInRange(this._editorObs, range, undefined);\n\t\tconst maxModifiedContent = getContentRenderWidth(displayLabel, this._editor, this._editor.getModel()!);\n\t\tconst padding = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\n\t\treturn maxOriginalContent + maxModifiedContent + padding < editorWidth - editorContentLeft - editorVerticalScrollbar - minimapWidth;\n\t}\n\n\tprivate getState(displayLocation: InlineCompletionDisplayLocation): { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind } {\n\n\t\tconst contentState = derived(this, (reader) => {\n\t\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t\tconst startColumn = displayLocation.range.startColumn;\n\t\t\tconst endColumn = displayLocation.range.endColumn;\n\t\t\tconst lineCount = this._editor.getModel()?.getLineCount() ?? 0;\n\n\t\t\tconst lineWidth = maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber, startLineNumber + 1), reader);\n\t\t\tconst lineWidthBelow = startLineNumber + 1 <= lineCount ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber + 1, startLineNumber + 2), reader) : undefined;\n\t\t\tconst lineWidthAbove = startLineNumber - 1 >= 1 ? maxContentWidthInRange(this._editorObs, new LineRange(startLineNumber - 1, startLineNumber), reader) : undefined;\n\t\t\tconst startContentLeftOffset = this._editor.getOffsetForColumn(startLineNumber, startColumn);\n\t\t\tconst endContentLeftOffset = this._editor.getOffsetForColumn(endLineNumber, endColumn);\n\n\t\t\treturn {\n\t\t\t\tlineWidth,\n\t\t\t\tlineWidthBelow,\n\t\t\t\tlineWidthAbove,\n\t\t\t\tstartContentLeftOffset,\n\t\t\t\tendContentLeftOffset\n\t\t\t};\n\t\t});\n\n\t\tconst startLineNumber = displayLocation.range.startLineNumber;\n\t\tconst endLineNumber = displayLocation.range.endLineNumber;\n\t\t// only check viewport once in the beginning when rendering the view\n\t\tconst fitsInsideViewport = this.fitsInsideViewport(new LineRange(startLineNumber, endLineNumber + 1), displayLocation.label, undefined);\n\n\t\tconst rect = derived(this, reader => {\n\t\t\tconst w = this._editorObs.getOption(EditorOption.fontInfo).read(reader).typicalHalfwidthCharacterWidth;\n\n\t\t\tconst { lineWidth, lineWidthBelow, lineWidthAbove, startContentLeftOffset, endContentLeftOffset } = contentState.read(reader);\n\n\t\t\tconst contentLeft = this._editorObs.layoutInfoContentLeft.read(reader);\n\t\t\tconst lineHeight = this._editorObs.observeLineHeightForLine(startLineNumber).recomputeInitiallyAndOnChange(reader.store).read(reader);\n\t\t\tconst scrollTop = this._editorObs.scrollTop.read(reader);\n\t\t\tconst scrollLeft = this._editorObs.scrollLeft.read(reader);\n\n\t\t\tlet position: 'end' | 'below' | 'above';\n\t\t\tif (startLineNumber === endLineNumber && endContentLeftOffset + 5 * w >= lineWidth && fitsInsideViewport) {\n\t\t\t\tposition = 'end'; // Render at the end of the line if the range ends almost at the end of the line\n\t\t\t} else if (lineWidthBelow !== undefined && lineWidthBelow + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'below'; // Render Below if possible\n\t\t\t} else if (lineWidthAbove !== undefined && lineWidthAbove + MIN_END_OF_LINE_PADDING - HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW - PADDING_HORIZONTALLY < startContentLeftOffset) {\n\t\t\t\tposition = 'above'; // Render Above if possible\n\t\t\t} else {\n\t\t\t\tposition = 'end'; // Render at the end of the line otherwise\n\t\t\t}\n\n\t\t\tlet topOfLine;\n\t\t\tlet contentStartOffset;\n\t\t\tlet deltaX = 0;\n\t\t\tlet deltaY = 0;\n\n\t\t\tswitch (position) {\n\t\t\t\tcase 'end': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber);\n\t\t\t\t\tcontentStartOffset = lineWidth;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + MIN_END_OF_LINE_PADDING;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'below': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber + 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase 'above': {\n\t\t\t\t\ttopOfLine = this._editorObs.editor.getTopForLineNumber(startLineNumber - 1);\n\t\t\t\t\tcontentStartOffset = startContentLeftOffset;\n\t\t\t\t\tdeltaX = PADDING_HORIZONTALLY + HORIZONTAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tdeltaY = -PADDING_VERTICALLY + VERTICAL_OFFSET_WHEN_ABOVE_BELOW;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst textRect = Rect.fromLeftTopWidthHeight(\n\t\t\t\tcontentLeft + contentStartOffset - scrollLeft,\n\t\t\t\ttopOfLine - scrollTop,\n\t\t\t\tw * displayLocation.label.length,\n\t\t\t\tlineHeight\n\t\t\t);\n\n\t\t\treturn textRect.withMargin(PADDING_VERTICALLY, PADDING_HORIZONTALLY).translateX(deltaX).translateY(deltaY);\n\t\t});\n\n\t\treturn {\n\t\t\trect,\n\t\t\tlabel: displayLocation.label,\n\t\t\tkind: displayLocation.kind\n\t\t};\n\t}\n\n\tprivate getRendering(state: { rect: IObservable<Rect>; label: string; kind: InlineCompletionDisplayLocationKind }, styles: IObservable<{ background: string; border: string }>) {\n\n\t\tconst line = document.createElement('div');\n\t\tconst t = this._editor.getModel()!.tokenization.tokenizeLinesAt(1, [state.label])?.[0];\n\t\tlet tokens: LineTokens;\n\t\tif (t && state.kind === InlineCompletionDisplayLocationKind.Code) {\n\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(state.label, this._languageService.languageIdCodec);\n\t\t} else {\n\t\t\ttokens = LineTokens.createEmpty(state.label, this._languageService.languageIdCodec);\n\t\t}\n\n\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor).withSetWidth(false).withScrollBeyondLastColumn(0), [], line, true);\n\t\tline.style.width = `${result.minWidthInPx}px`;\n\n\t\tconst rect = state.rect.map(r => r.withMargin(0, PADDING_HORIZONTALLY));\n\n\t\treturn n.div({\n\t\t\tclass: 'collapsedView',\n\t\t\tref: this._viewRef,\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\t...rectToProps(reader => rect.read(reader)),\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tboxSizing: 'border-box',\n\t\t\t\tcursor: 'pointer',\n\t\t\t\tborder: styles.map(s => `1px solid ${s.border}`),\n\t\t\t\tborderRadius: '4px',\n\t\t\t\tbackgroundColor: styles.map(s => s.background),\n\n\t\t\t\tdisplay: 'flex',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t},\n\t\t\tonmousedown: e => {\n\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t},\n\t\t\tonclick: (e) => { this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)); }\n\t\t}, [\n\t\t\tline\n\t\t]);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6733, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsDeletionView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsDeletionView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsDeletionView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, derivedObservableWithCache, IObservable } from '../../../../../../../base/common/observable.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { getOriginalBorderColor, originalBackgroundColor } from '../theme.js';\nimport { getPrefixTrim, mapOutFalsy, maxContentWidthInRange } from '../utils/utils.js';\n\nconst HORIZONTAL_PADDING = 0;\nconst VERTICAL_PADDING = 0;\nconst BORDER_WIDTH = 1;\nconst WIDGET_SEPARATOR_WIDTH = 1;\nconst WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH = 3;\nconst BORDER_RADIUS = 4;\n\nexport class InlineEditsDeletionView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _originalVerticalStartPosition: IObservable<number | undefined>;\n\tprivate readonly _originalVerticalEndPosition: IObservable<number | undefined>;\n\n\tprivate readonly _originalDisplayRange: IObservable<LineRange | undefined>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\tprivate readonly _uiState: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tdeletions: Range[];\n\t\t\tinDiffEditor: boolean;\n\t\t} | undefined>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst originalStartPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.startLineNumber, 1) : null;\n\t\t});\n\n\t\tconst originalEndPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.endLineNumberExclusive, 1) : null;\n\t\t});\n\n\t\tthis._originalDisplayRange = this._uiState.map(s => s?.originalRange);\n\t\tthis._originalVerticalStartPosition = this._editorObs.observePosition(originalStartPosition, this._store).map(p => p?.y);\n\t\tthis._originalVerticalEndPosition = this._editorObs.observePosition(originalEndPosition, this._store).map(p => p?.y);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._nonOverflowView.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\tconst info = this._editorLayoutInfo.read(reader);\n\t\t\t\tif (info === null) { return 0; }\n\t\t\t\treturn info.codeRect.width;\n\t\t\t}),\n\t\t}));\n\t}\n\n\tprivate readonly _display = derived(this, reader => !!this._uiState.read(reader) ? 'block' : 'none');\n\n\tprivate readonly _editorMaxContentWidthInRange = derived(this, reader => {\n\t\tconst originalDisplayRange = this._originalDisplayRange.read(reader);\n\t\tif (!originalDisplayRange) {\n\t\t\treturn constObservable(0);\n\t\t}\n\t\tthis._editorObs.versionId.read(reader);\n\n\t\t// Take the max value that we observed.\n\t\t// Reset when either the edit changes or the editor text version.\n\t\treturn derivedObservableWithCache<number>(this, (reader, lastValue) => {\n\t\t\tconst maxWidth = maxContentWidthInRange(this._editorObs, originalDisplayRange, reader);\n\t\t\treturn Math.max(maxWidth, lastValue ?? 0);\n\t\t});\n\t}).map((v, r) => v.read(r));\n\n\tprivate readonly _maxPrefixTrim = derived(this, reader => {\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t\t}\n\t\treturn getPrefixTrim(state.deletions, state.originalRange, [], this._editor);\n\t});\n\n\tprivate readonly _editorLayoutInfo = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\t\tconst w = this._editorObs.getOption(EditorOption.fontInfo).map(f => f.typicalHalfwidthCharacterWidth).read(reader);\n\n\t\tconst right = editorLayout.contentLeft + Math.max(this._editorMaxContentWidthInRange.read(reader), w) - horizontalScrollOffset;\n\n\t\tconst range = inlineEdit.originalLineRange;\n\t\tconst selectionTop = this._originalVerticalStartPosition.read(reader) ?? this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\tconst selectionBottom = this._originalVerticalEndPosition.read(reader) ?? this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\n\t\tconst left = editorLayout.contentLeft + this._maxPrefixTrim.read(reader).prefixLeftOffset - horizontalScrollOffset;\n\n\t\tif (right <= left) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst codeRect = Rect.fromLeftTopRightBottom(left, selectionTop, right, selectionBottom).withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING);\n\n\t\treturn {\n\t\t\tcodeRect,\n\t\t\tcontentLeft: editorLayout.contentLeft,\n\t\t};\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _originalOverlay = n.div({\n\t\tstyle: { pointerEvents: 'none', }\n\t}, derived(this, reader => {\n\t\tconst layoutInfoObs = mapOutFalsy(this._editorLayoutInfo).read(reader);\n\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\t// Create an overlay which hides the left hand side of the original overlay when it overflows to the left\n\t\t// such that there is a smooth transition at the edge of content left\n\t\tconst overlayhider = layoutInfoObs.map(layoutInfo => Rect.fromLeftTopRightBottom(\n\t\t\tlayoutInfo.contentLeft - BORDER_RADIUS - BORDER_WIDTH,\n\t\t\tlayoutInfo.codeRect.top,\n\t\t\tlayoutInfo.contentLeft,\n\t\t\tlayoutInfo.codeRect.bottom\n\t\t));\n\n\t\tconst overlayRect = derived(this, reader => {\n\t\t\tconst rect = layoutInfoObs.read(reader).codeRect;\n\t\t\tconst overlayHider = overlayhider.read(reader);\n\t\t\treturn rect.intersectHorizontal(new OffsetRange(overlayHider.left, Number.MAX_SAFE_INTEGER));\n\t\t});\n\n\t\tconst separatorWidth = this._uiState.map(s => s?.inDiffEditor ? WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH : WIDGET_SEPARATOR_WIDTH).read(reader);\n\t\tconst separatorRect = overlayRect.map(rect => rect.withMargin(separatorWidth, separatorWidth));\n\n\t\treturn [\n\t\t\tn.div({\n\t\t\t\tclass: 'originalSeparatorDeletion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...separatorRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px`,\n\t\t\t\t\tborder: `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayDeletion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px`,\n\t\t\t\t\tborder: getOriginalBorderColor(this._tabAction).map(bc => `${BORDER_WIDTH}px solid ${asCssVariable(bc)}`),\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\tbackgroundColor: asCssVariable(originalBackgroundColor),\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayHiderDeletion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayhider.read(reader).toStyles(),\n\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground),\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\t})).keepUpdated(this._store);\n\n\tprivate readonly _nonOverflowView = n.div({\n\t\tclass: 'inline-edits-view',\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t\tdisplay: this._display,\n\t\t},\n\t}, [\n\t\t[this._originalOverlay],\n\t]).keepUpdated(this._store);\n\n\treadonly isHovered = constObservable(false);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, derivedObservableWithCache, IObservable } from '../../../../../../../base/common/observable.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { getOriginalBorderColor, originalBackgroundColor } from '../theme.js';\nimport { getPrefixTrim, mapOutFalsy, maxContentWidthInRange } from '../utils/utils.js';\n\nconst HORIZONTAL_PADDING = 0;\nconst VERTICAL_PADDING = 0;\nconst BORDER_WIDTH = 1;\nconst WIDGET_SEPARATOR_WIDTH = 1;\nconst WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH = 3;\nconst BORDER_RADIUS = 4;\n\nexport class InlineEditsDeletionView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _originalVerticalStartPosition: IObservable<number | undefined>;\n\tprivate readonly _originalVerticalEndPosition: IObservable<number | undefined>;\n\n\tprivate readonly _originalDisplayRange: IObservable<LineRange | undefined>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\tprivate readonly _uiState: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tdeletions: Range[];\n\t\t\tinDiffEditor: boolean;\n\t\t} | undefined>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tconst originalStartPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.startLineNumber, 1) : null;\n\t\t});\n\n\t\tconst originalEndPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.endLineNumberExclusive, 1) : null;\n\t\t});\n\n\t\tthis._originalDisplayRange = this._uiState.map(s => s?.originalRange);\n\t\tthis._originalVerticalStartPosition = this._editorObs.observePosition(originalStartPosition, this._store).map(p => p?.y);\n\t\tthis._originalVerticalEndPosition = this._editorObs.observePosition(originalEndPosition, this._store).map(p => p?.y);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._nonOverflowView.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\tconst info = this._editorLayoutInfo.read(reader);\n\t\t\t\tif (info === null) { return 0; }\n\t\t\t\treturn info.codeRect.width;\n\t\t\t}),\n\t\t}));\n\t}\n\n\tprivate readonly _display = derived(this, reader => !!this._uiState.read(reader) ? 'block' : 'none');\n\n\tprivate readonly _editorMaxContentWidthInRange = derived(this, reader => {\n\t\tconst originalDisplayRange = this._originalDisplayRange.read(reader);\n\t\tif (!originalDisplayRange) {\n\t\t\treturn constObservable(0);\n\t\t}\n\t\tthis._editorObs.versionId.read(reader);\n\n\t\t// Take the max value that we observed.\n\t\t// Reset when either the edit changes or the editor text version.\n\t\treturn derivedObservableWithCache<number>(this, (reader, lastValue) => {\n\t\t\tconst maxWidth = maxContentWidthInRange(this._editorObs, originalDisplayRange, reader);\n\t\t\treturn Math.max(maxWidth, lastValue ?? 0);\n\t\t});\n\t}).map((v, r) => v.read(r));\n\n\tprivate readonly _maxPrefixTrim = derived(this, reader => {\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn { prefixTrim: 0, prefixLeftOffset: 0 };\n\t\t}\n\t\treturn getPrefixTrim(state.deletions, state.originalRange, [], this._editor);\n\t});\n\n\tprivate readonly _editorLayoutInfo = derived(this, (reader) => {\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) {\n\t\t\treturn null;\n\t\t}\n\t\tconst state = this._uiState.read(reader);\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\t\tconst w = this._editorObs.getOption(EditorOption.fontInfo).map(f => f.typicalHalfwidthCharacterWidth).read(reader);\n\n\t\tconst right = editorLayout.contentLeft + Math.max(this._editorMaxContentWidthInRange.read(reader), w) - horizontalScrollOffset;\n\n\t\tconst range = inlineEdit.originalLineRange;\n\t\tconst selectionTop = this._originalVerticalStartPosition.read(reader) ?? this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\tconst selectionBottom = this._originalVerticalEndPosition.read(reader) ?? this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\n\t\tconst left = editorLayout.contentLeft + this._maxPrefixTrim.read(reader).prefixLeftOffset - horizontalScrollOffset;\n\n\t\tif (right <= left) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst codeRect = Rect.fromLeftTopRightBottom(left, selectionTop, right, selectionBottom).withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING);\n\n\t\treturn {\n\t\t\tcodeRect,\n\t\t\tcontentLeft: editorLayout.contentLeft,\n\t\t};\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _originalOverlay = n.div({\n\t\tstyle: { pointerEvents: 'none', }\n\t}, derived(this, reader => {\n\t\tconst layoutInfoObs = mapOutFalsy(this._editorLayoutInfo).read(reader);\n\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\t// Create an overlay which hides the left hand side of the original overlay when it overflows to the left\n\t\t// such that there is a smooth transition at the edge of content left\n\t\tconst overlayhider = layoutInfoObs.map(layoutInfo => Rect.fromLeftTopRightBottom(\n\t\t\tlayoutInfo.contentLeft - BORDER_RADIUS - BORDER_WIDTH,\n\t\t\tlayoutInfo.codeRect.top,\n\t\t\tlayoutInfo.contentLeft,\n\t\t\tlayoutInfo.codeRect.bottom\n\t\t));\n\n\t\tconst overlayRect = derived(this, reader => {\n\t\t\tconst rect = layoutInfoObs.read(reader).codeRect;\n\t\t\tconst overlayHider = overlayhider.read(reader);\n\t\t\treturn rect.intersectHorizontal(new OffsetRange(overlayHider.left, Number.MAX_SAFE_INTEGER));\n\t\t});\n\n\t\tconst separatorWidth = this._uiState.map(s => s?.inDiffEditor ? WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH : WIDGET_SEPARATOR_WIDTH).read(reader);\n\t\tconst separatorRect = overlayRect.map(rect => rect.withMargin(separatorWidth, separatorWidth));\n\n\t\treturn [\n\t\t\tn.div({\n\t\t\t\tclass: 'originalSeparatorDeletion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...separatorRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px`,\n\t\t\t\t\tborder: `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayDeletion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px`,\n\t\t\t\t\tborder: getOriginalBorderColor(this._tabAction).map(bc => `${BORDER_WIDTH}px solid ${asCssVariable(bc)}`),\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\tbackgroundColor: asCssVariable(originalBackgroundColor),\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayHiderDeletion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayhider.read(reader).toStyles(),\n\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground),\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\t})).keepUpdated(this._store);\n\n\tprivate readonly _nonOverflowView = n.div({\n\t\tclass: 'inline-edits-view',\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t\tdisplay: this._display,\n\t\t},\n\t}, [\n\t\t[this._originalOverlay],\n\t]).keepUpdated(this._store);\n\n\treadonly isHovered = constObservable(false);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6924, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsInsertionView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsInsertionView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsInsertionView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable, observableValue } from '../../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../../platform/instantiation/common/instantiation.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../../common/viewModel/inlineDecorations.js';\nimport { GhostText, GhostTextPart } from '../../../model/ghostText.js';\nimport { GhostTextView } from '../../ghostText/ghostTextView.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getModifiedBorderColor, modifiedBackgroundColor } from '../theme.js';\nimport { getPrefixTrim, mapOutFalsy } from '../utils/utils.js';\n\nconst BORDER_WIDTH = 1;\nconst WIDGET_SEPARATOR_WIDTH = 1;\nconst WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH = 3;\nconst BORDER_RADIUS = 4;\n\nexport class InlineEditsInsertionView extends Disposable implements IInlineEditsView {\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _state = derived(this, reader => {\n\t\tconst state = this._input.read(reader);\n\t\tif (!state) { return undefined; }\n\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\n\t\tif (state.startColumn === 1 && state.lineNumber > 1 && textModel.getLineLength(state.lineNumber) !== 0 && state.text.endsWith(eol) && !state.text.startsWith(eol)) {\n\t\t\tconst endOfLineColumn = textModel.getLineLength(state.lineNumber - 1) + 1;\n\t\t\treturn { lineNumber: state.lineNumber - 1, column: endOfLineColumn, text: eol + state.text.slice(0, -eol.length) };\n\t\t}\n\n\t\treturn { lineNumber: state.lineNumber, column: state.startColumn, text: state.text };\n\t});\n\n\tprivate readonly _trimVertically = derived(this, reader => {\n\t\tconst state = this._state.read(reader);\n\t\tconst text = state?.text;\n\t\tif (!text || text.trim() === '') {\n\t\t\treturn { topOffset: 0, bottomOffset: 0, linesTop: 0, linesBottom: 0 };\n\t\t}\n\n\t\t// Adjust for leading/trailing newlines\n\t\tconst lineHeight = this._editor.getLineHeightForPosition(new Position(state.lineNumber, 1));\n\t\tconst eol = this._editor.getModel()!.getEOL();\n\t\tlet linesTop = 0;\n\t\tlet linesBottom = 0;\n\n\t\tlet i = 0;\n\t\tfor (; i < text.length && text.startsWith(eol, i); i += eol.length) {\n\t\t\tlinesTop += 1;\n\t\t}\n\n\t\tfor (let j = text.length; j > i && text.endsWith(eol, j); j -= eol.length) {\n\t\t\tlinesBottom += 1;\n\t\t}\n\n\t\treturn { topOffset: linesTop * lineHeight, bottomOffset: linesBottom * lineHeight, linesTop, linesBottom };\n\t});\n\n\tprivate readonly _maxPrefixTrim = derived(this, reader => {\n\t\tconst state = this._state.read(reader);\n\t\tif (!state) {\n\t\t\treturn { prefixLeftOffset: 0, prefixTrim: 0 };\n\t\t}\n\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\n\t\tconst trimVertically = this._trimVertically.read(reader);\n\n\t\tconst lines = state.text.split(eol);\n\t\tconst modifiedLines = lines.slice(trimVertically.linesTop, lines.length - trimVertically.linesBottom);\n\t\tif (trimVertically.linesTop === 0) {\n\t\t\tmodifiedLines[0] = textModel.getLineContent(state.lineNumber) + modifiedLines[0];\n\t\t}\n\n\t\tconst originalRange = new LineRange(state.lineNumber, state.lineNumber + (trimVertically.linesTop > 0 ? 0 : 1));\n\n\t\treturn getPrefixTrim([], originalRange, modifiedLines, this._editor);\n\t});\n\n\tprivate readonly _ghostText = derived<GhostText | undefined>(reader => {\n\t\tconst state = this._state.read(reader);\n\t\tconst prefixTrim = this._maxPrefixTrim.read(reader);\n\t\tif (!state) { return undefined; }\n\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\t\tconst modifiedLines = state.text.split(eol);\n\n\t\tconst inlineDecorations = modifiedLines.map((line, i) => new InlineDecoration(\n\t\t\tnew Range(i + 1, i === 0 ? 1 : prefixTrim.prefixTrim + 1, i + 1, line.length + 1),\n\t\t\t'modified-background',\n\t\t\tInlineDecorationType.Regular\n\t\t));\n\n\t\treturn new GhostText(state.lineNumber, [new GhostTextPart(state.column, state.text, false, inlineDecorations)]);\n\t});\n\n\tprotected readonly _ghostTextView: GhostTextView;\n\treadonly isHovered: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _input: IObservable<{\n\t\t\tlineNumber: number;\n\t\t\tstartColumn: number;\n\t\t\ttext: string;\n\t\t\tinDiffEditor: boolean;\n\t\t} | undefined>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tthis._ghostTextView = this._register(instantiationService.createInstance(GhostTextView,\n\t\t\tthis._editor,\n\t\t\t{\n\t\t\t\tghostText: this._ghostText,\n\t\t\t\tminReservedLineCount: constObservable(0),\n\t\t\t\ttargetTextModel: this._editorObs.model.map(model => model ?? undefined),\n\t\t\t\twarning: constObservable(undefined),\n\t\t\t\thandleInlineCompletionShown: constObservable(() => {\n\t\t\t\t\t// This is a no-op for the insertion view, as it is handled by the InlineEditsView.\n\t\t\t\t}),\n\t\t\t},\n\t\t\tobservableValue(this, { syntaxHighlightingEnabled: true, extraClasses: ['inline-edit'] }),\n\t\t\ttrue,\n\t\t\ttrue\n\t\t));\n\n\t\tthis.isHovered = this._ghostTextView.isHovered;\n\n\t\tthis._register(this._ghostTextView.onDidClick((e) => {\n\t\t\tthis._onDidClick.fire(e);\n\t\t}));\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._view.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\tconst info = this._overlayLayout.read(reader);\n\t\t\t\tif (info === null) { return 0; }\n\t\t\t\treturn info.minContentWidthRequired;\n\t\t\t}),\n\t\t}));\n\t}\n\n\tprivate readonly _display = derived(this, reader => !!this._state.read(reader) ? 'block' : 'none');\n\n\tprivate readonly _editorMaxContentWidthInRange = derived(this, reader => {\n\t\tconst state = this._state.read(reader);\n\t\tif (!state) {\n\t\t\treturn 0;\n\t\t}\n\t\tthis._editorObs.versionId.read(reader);\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\n\t\tconst textBeforeInsertion = state.text.startsWith(eol) ? '' : textModel.getValueInRange(new Range(state.lineNumber, 1, state.lineNumber, state.column));\n\t\tconst textAfterInsertion = textModel.getValueInRange(new Range(state.lineNumber, state.column, state.lineNumber, textModel.getLineLength(state.lineNumber) + 1));\n\t\tconst text = textBeforeInsertion + state.text + textAfterInsertion;\n\t\tconst lines = text.split(eol);\n\n\t\tconst renderOptions = RenderOptions.fromEditor(this._editor).withSetWidth(false).withScrollBeyondLastColumn(0);\n\t\tconst lineWidths = lines.map(line => {\n\t\t\tconst t = textModel.tokenization.tokenizeLinesAt(state.lineNumber, [line])?.[0];\n\t\t\tlet tokens: LineTokens;\n\t\t\tif (t) {\n\t\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(line, this._languageService.languageIdCodec);\n\t\t\t} else {\n\t\t\t\ttokens = LineTokens.createEmpty(line, this._languageService.languageIdCodec);\n\t\t\t}\n\n\t\t\treturn renderLines(new LineSource([tokens]), renderOptions, [], $('div'), true).minWidthInPx;\n\t\t});\n\n\t\t// Take the max value that we observed.\n\t\t// Reset when either the edit changes or the editor text version.\n\t\treturn Math.max(...lineWidths);\n\t});\n\n\tpublic readonly startLineOffset = this._trimVertically.map(v => v.topOffset);\n\tpublic readonly originalLines = this._state.map(s => s ?\n\t\tnew LineRange(\n\t\t\ts.lineNumber,\n\t\t\tMath.min(s.lineNumber + 2, this._editor.getModel()!.getLineCount() + 1)\n\t\t) : undefined\n\t);\n\n\tprivate readonly _overlayLayout = derived(this, (reader) => {\n\t\tthis._ghostText.read(reader);\n\t\tconst state = this._state.read(reader);\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Update the overlay when the position changes\n\t\tthis._editorObs.observePosition(observableValue(this, new Position(state.lineNumber, state.column)), reader.store).read(reader);\n\n\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\t\tconst verticalScrollbarWidth = this._editorObs.layoutInfoVerticalScrollbarWidth.read(reader);\n\n\t\tconst right = editorLayout.contentLeft + this._editorMaxContentWidthInRange.read(reader) - horizontalScrollOffset;\n\t\tconst prefixLeftOffset = this._maxPrefixTrim.read(reader).prefixLeftOffset ?? 0 /* fix due to observable bug? */;\n\t\tconst left = editorLayout.contentLeft + prefixLeftOffset - horizontalScrollOffset;\n\t\tif (right <= left) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { topOffset: topTrim, bottomOffset: bottomTrim } = this._trimVertically.read(reader);\n\n\t\tconst scrollTop = this._editorObs.scrollTop.read(reader);\n\t\tconst height = this._ghostTextView.height.read(reader) - topTrim - bottomTrim;\n\t\tconst top = this._editor.getTopForLineNumber(state.lineNumber) - scrollTop + topTrim;\n\t\tconst bottom = top + height;\n\n\t\tconst overlay = new Rect(left, top, right, bottom);\n\n\t\treturn {\n\t\t\toverlay,\n\t\t\tstartsAtContentLeft: prefixLeftOffset === 0,\n\t\t\tcontentLeft: editorLayout.contentLeft,\n\t\t\tminContentWidthRequired: prefixLeftOffset + overlay.width + verticalScrollbarWidth,\n\t\t};\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _modifiedOverlay = n.div({\n\t\tstyle: { pointerEvents: 'none', }\n\t}, derived(this, reader => {\n\t\tconst overlayLayoutObs = mapOutFalsy(this._overlayLayout).read(reader);\n\t\tif (!overlayLayoutObs) { return undefined; }\n\n\t\t// Create an overlay which hides the left hand side of the original overlay when it overflows to the left\n\t\t// such that there is a smooth transition at the edge of content left\n\t\tconst overlayHider = overlayLayoutObs.map(layoutInfo => Rect.fromLeftTopRightBottom(\n\t\t\tlayoutInfo.contentLeft - BORDER_RADIUS - BORDER_WIDTH,\n\t\t\tlayoutInfo.overlay.top,\n\t\t\tlayoutInfo.contentLeft,\n\t\t\tlayoutInfo.overlay.bottom\n\t\t)).read(reader);\n\n\t\tconst separatorWidth = this._input.map(i => i?.inDiffEditor ? WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH : WIDGET_SEPARATOR_WIDTH).read(reader);\n\t\tconst overlayRect = overlayLayoutObs.map(l => l.overlay.withMargin(0, BORDER_WIDTH, 0, l.startsAtContentLeft ? 0 : BORDER_WIDTH).intersectHorizontal(new OffsetRange(overlayHider.left, Number.MAX_SAFE_INTEGER)));\n\t\tconst underlayRect = overlayRect.map(rect => rect.withMargin(separatorWidth, separatorWidth));\n\n\t\treturn [\n\t\t\tn.div({\n\t\t\t\tclass: 'originalUnderlayInsertion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...underlayRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: BORDER_RADIUS,\n\t\t\t\t\tborder: `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayInsertion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: BORDER_RADIUS,\n\t\t\t\t\tborder: getModifiedBorderColor(this._tabAction).map(bc => `${BORDER_WIDTH}px solid ${asCssVariable(bc)}`),\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\tbackgroundColor: asCssVariable(modifiedBackgroundColor),\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayHiderInsertion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayHider.toStyles(),\n\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground),\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\t})).keepUpdated(this._store);\n\n\tprivate readonly _view = n.div({\n\t\tclass: 'inline-edits-view',\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t\tdisplay: this._display,\n\t\t},\n\t}, [\n\t\t[this._modifiedOverlay],\n\t]).keepUpdated(this._store);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable, observableValue } from '../../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../../platform/instantiation/common/instantiation.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../../common/viewModel/inlineDecorations.js';\nimport { GhostText, GhostTextPart } from '../../../model/ghostText.js';\nimport { GhostTextView } from '../../ghostText/ghostTextView.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getModifiedBorderColor, modifiedBackgroundColor } from '../theme.js';\nimport { getPrefixTrim, mapOutFalsy } from '../utils/utils.js';\n\nconst BORDER_WIDTH = 1;\nconst WIDGET_SEPARATOR_WIDTH = 1;\nconst WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH = 3;\nconst BORDER_RADIUS = 4;\n\nexport class InlineEditsInsertionView extends Disposable implements IInlineEditsView {\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _onDidClick = this._register(new Emitter<IMouseEvent>());\n\treadonly onDidClick = this._onDidClick.event;\n\n\tprivate readonly _state = derived(this, reader => {\n\t\tconst state = this._input.read(reader);\n\t\tif (!state) { return undefined; }\n\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\n\t\tif (state.startColumn === 1 && state.lineNumber > 1 && textModel.getLineLength(state.lineNumber) !== 0 && state.text.endsWith(eol) && !state.text.startsWith(eol)) {\n\t\t\tconst endOfLineColumn = textModel.getLineLength(state.lineNumber - 1) + 1;\n\t\t\treturn { lineNumber: state.lineNumber - 1, column: endOfLineColumn, text: eol + state.text.slice(0, -eol.length) };\n\t\t}\n\n\t\treturn { lineNumber: state.lineNumber, column: state.startColumn, text: state.text };\n\t});\n\n\tprivate readonly _trimVertically = derived(this, reader => {\n\t\tconst state = this._state.read(reader);\n\t\tconst text = state?.text;\n\t\tif (!text || text.trim() === '') {\n\t\t\treturn { topOffset: 0, bottomOffset: 0, linesTop: 0, linesBottom: 0 };\n\t\t}\n\n\t\t// Adjust for leading/trailing newlines\n\t\tconst lineHeight = this._editor.getLineHeightForPosition(new Position(state.lineNumber, 1));\n\t\tconst eol = this._editor.getModel()!.getEOL();\n\t\tlet linesTop = 0;\n\t\tlet linesBottom = 0;\n\n\t\tlet i = 0;\n\t\tfor (; i < text.length && text.startsWith(eol, i); i += eol.length) {\n\t\t\tlinesTop += 1;\n\t\t}\n\n\t\tfor (let j = text.length; j > i && text.endsWith(eol, j); j -= eol.length) {\n\t\t\tlinesBottom += 1;\n\t\t}\n\n\t\treturn { topOffset: linesTop * lineHeight, bottomOffset: linesBottom * lineHeight, linesTop, linesBottom };\n\t});\n\n\tprivate readonly _maxPrefixTrim = derived(this, reader => {\n\t\tconst state = this._state.read(reader);\n\t\tif (!state) {\n\t\t\treturn { prefixLeftOffset: 0, prefixTrim: 0 };\n\t\t}\n\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\n\t\tconst trimVertically = this._trimVertically.read(reader);\n\n\t\tconst lines = state.text.split(eol);\n\t\tconst modifiedLines = lines.slice(trimVertically.linesTop, lines.length - trimVertically.linesBottom);\n\t\tif (trimVertically.linesTop === 0) {\n\t\t\tmodifiedLines[0] = textModel.getLineContent(state.lineNumber) + modifiedLines[0];\n\t\t}\n\n\t\tconst originalRange = new LineRange(state.lineNumber, state.lineNumber + (trimVertically.linesTop > 0 ? 0 : 1));\n\n\t\treturn getPrefixTrim([], originalRange, modifiedLines, this._editor);\n\t});\n\n\tprivate readonly _ghostText = derived<GhostText | undefined>(reader => {\n\t\tconst state = this._state.read(reader);\n\t\tconst prefixTrim = this._maxPrefixTrim.read(reader);\n\t\tif (!state) { return undefined; }\n\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\t\tconst modifiedLines = state.text.split(eol);\n\n\t\tconst inlineDecorations = modifiedLines.map((line, i) => new InlineDecoration(\n\t\t\tnew Range(i + 1, i === 0 ? 1 : prefixTrim.prefixTrim + 1, i + 1, line.length + 1),\n\t\t\t'modified-background',\n\t\t\tInlineDecorationType.Regular\n\t\t));\n\n\t\treturn new GhostText(state.lineNumber, [new GhostTextPart(state.column, state.text, false, inlineDecorations)]);\n\t});\n\n\tprotected readonly _ghostTextView: GhostTextView;\n\treadonly isHovered: IObservable<boolean>;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _input: IObservable<{\n\t\t\tlineNumber: number;\n\t\t\tstartColumn: number;\n\t\t\ttext: string;\n\t\t\tinDiffEditor: boolean;\n\t\t} | undefined>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tthis._ghostTextView = this._register(instantiationService.createInstance(GhostTextView,\n\t\t\tthis._editor,\n\t\t\t{\n\t\t\t\tghostText: this._ghostText,\n\t\t\t\tminReservedLineCount: constObservable(0),\n\t\t\t\ttargetTextModel: this._editorObs.model.map(model => model ?? undefined),\n\t\t\t\twarning: constObservable(undefined),\n\t\t\t\thandleInlineCompletionShown: constObservable(() => {\n\t\t\t\t\t// This is a no-op for the insertion view, as it is handled by the InlineEditsView.\n\t\t\t\t}),\n\t\t\t},\n\t\t\tobservableValue(this, { syntaxHighlightingEnabled: true, extraClasses: ['inline-edit'] }),\n\t\t\ttrue,\n\t\t\ttrue\n\t\t));\n\n\t\tthis.isHovered = this._ghostTextView.isHovered;\n\n\t\tthis._register(this._ghostTextView.onDidClick((e) => {\n\t\t\tthis._onDidClick.fire(e);\n\t\t}));\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._view.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\tconst info = this._overlayLayout.read(reader);\n\t\t\t\tif (info === null) { return 0; }\n\t\t\t\treturn info.minContentWidthRequired;\n\t\t\t}),\n\t\t}));\n\t}\n\n\tprivate readonly _display = derived(this, reader => !!this._state.read(reader) ? 'block' : 'none');\n\n\tprivate readonly _editorMaxContentWidthInRange = derived(this, reader => {\n\t\tconst state = this._state.read(reader);\n\t\tif (!state) {\n\t\t\treturn 0;\n\t\t}\n\t\tthis._editorObs.versionId.read(reader);\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst eol = textModel.getEOL();\n\n\t\tconst textBeforeInsertion = state.text.startsWith(eol) ? '' : textModel.getValueInRange(new Range(state.lineNumber, 1, state.lineNumber, state.column));\n\t\tconst textAfterInsertion = textModel.getValueInRange(new Range(state.lineNumber, state.column, state.lineNumber, textModel.getLineLength(state.lineNumber) + 1));\n\t\tconst text = textBeforeInsertion + state.text + textAfterInsertion;\n\t\tconst lines = text.split(eol);\n\n\t\tconst renderOptions = RenderOptions.fromEditor(this._editor).withSetWidth(false).withScrollBeyondLastColumn(0);\n\t\tconst lineWidths = lines.map(line => {\n\t\t\tconst t = textModel.tokenization.tokenizeLinesAt(state.lineNumber, [line])?.[0];\n\t\t\tlet tokens: LineTokens;\n\t\t\tif (t) {\n\t\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(line, this._languageService.languageIdCodec);\n\t\t\t} else {\n\t\t\t\ttokens = LineTokens.createEmpty(line, this._languageService.languageIdCodec);\n\t\t\t}\n\n\t\t\treturn renderLines(new LineSource([tokens]), renderOptions, [], $('div'), true).minWidthInPx;\n\t\t});\n\n\t\t// Take the max value that we observed.\n\t\t// Reset when either the edit changes or the editor text version.\n\t\treturn Math.max(...lineWidths);\n\t});\n\n\tpublic readonly startLineOffset = this._trimVertically.map(v => v.topOffset);\n\tpublic readonly originalLines = this._state.map(s => s ?\n\t\tnew LineRange(\n\t\t\ts.lineNumber,\n\t\t\tMath.min(s.lineNumber + 2, this._editor.getModel()!.getLineCount() + 1)\n\t\t) : undefined\n\t);\n\n\tprivate readonly _overlayLayout = derived(this, (reader) => {\n\t\tthis._ghostText.read(reader);\n\t\tconst state = this._state.read(reader);\n\t\tif (!state) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Update the overlay when the position changes\n\t\tthis._editorObs.observePosition(observableValue(this, new Position(state.lineNumber, state.column)), reader.store).read(reader);\n\n\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\t\tconst verticalScrollbarWidth = this._editorObs.layoutInfoVerticalScrollbarWidth.read(reader);\n\n\t\tconst right = editorLayout.contentLeft + this._editorMaxContentWidthInRange.read(reader) - horizontalScrollOffset;\n\t\tconst prefixLeftOffset = this._maxPrefixTrim.read(reader).prefixLeftOffset ?? 0 /* fix due to observable bug? */;\n\t\tconst left = editorLayout.contentLeft + prefixLeftOffset - horizontalScrollOffset;\n\t\tif (right <= left) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { topOffset: topTrim, bottomOffset: bottomTrim } = this._trimVertically.read(reader);\n\n\t\tconst scrollTop = this._editorObs.scrollTop.read(reader);\n\t\tconst height = this._ghostTextView.height.read(reader) - topTrim - bottomTrim;\n\t\tconst top = this._editor.getTopForLineNumber(state.lineNumber) - scrollTop + topTrim;\n\t\tconst bottom = top + height;\n\n\t\tconst overlay = new Rect(left, top, right, bottom);\n\n\t\treturn {\n\t\t\toverlay,\n\t\t\tstartsAtContentLeft: prefixLeftOffset === 0,\n\t\t\tcontentLeft: editorLayout.contentLeft,\n\t\t\tminContentWidthRequired: prefixLeftOffset + overlay.width + verticalScrollbarWidth,\n\t\t};\n\t}).recomputeInitiallyAndOnChange(this._store);\n\n\tprivate readonly _modifiedOverlay = n.div({\n\t\tstyle: { pointerEvents: 'none', }\n\t}, derived(this, reader => {\n\t\tconst overlayLayoutObs = mapOutFalsy(this._overlayLayout).read(reader);\n\t\tif (!overlayLayoutObs) { return undefined; }\n\n\t\t// Create an overlay which hides the left hand side of the original overlay when it overflows to the left\n\t\t// such that there is a smooth transition at the edge of content left\n\t\tconst overlayHider = overlayLayoutObs.map(layoutInfo => Rect.fromLeftTopRightBottom(\n\t\t\tlayoutInfo.contentLeft - BORDER_RADIUS - BORDER_WIDTH,\n\t\t\tlayoutInfo.overlay.top,\n\t\t\tlayoutInfo.contentLeft,\n\t\t\tlayoutInfo.overlay.bottom\n\t\t)).read(reader);\n\n\t\tconst separatorWidth = this._input.map(i => i?.inDiffEditor ? WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH : WIDGET_SEPARATOR_WIDTH).read(reader);\n\t\tconst overlayRect = overlayLayoutObs.map(l => l.overlay.withMargin(0, BORDER_WIDTH, 0, l.startsAtContentLeft ? 0 : BORDER_WIDTH).intersectHorizontal(new OffsetRange(overlayHider.left, Number.MAX_SAFE_INTEGER)));\n\t\tconst underlayRect = overlayRect.map(rect => rect.withMargin(separatorWidth, separatorWidth));\n\n\t\treturn [\n\t\t\tn.div({\n\t\t\t\tclass: 'originalUnderlayInsertion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...underlayRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: BORDER_RADIUS,\n\t\t\t\t\tborder: `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayInsertion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\tborderRadius: BORDER_RADIUS,\n\t\t\t\t\tborder: getModifiedBorderColor(this._tabAction).map(bc => `${BORDER_WIDTH}px solid ${asCssVariable(bc)}`),\n\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\tbackgroundColor: asCssVariable(modifiedBackgroundColor),\n\t\t\t\t}\n\t\t\t}),\n\t\t\tn.div({\n\t\t\t\tclass: 'originalOverlayHiderInsertion',\n\t\t\t\tstyle: {\n\t\t\t\t\t...overlayHider.toStyles(),\n\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground),\n\t\t\t\t}\n\t\t\t})\n\t\t];\n\t})).keepUpdated(this._store);\n\n\tprivate readonly _view = n.div({\n\t\tclass: 'inline-edits-view',\n\t\tstyle: {\n\t\t\tposition: 'absolute',\n\t\t\toverflow: 'visible',\n\t\t\ttop: '0px',\n\t\t\tleft: '0px',\n\t\t\tdisplay: this._display,\n\t\t},\n\t}, [\n\t\t[this._modifiedOverlay],\n\t]).keepUpdated(this._store);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7248, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsLineReplacementView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsLineReplacementView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsLineReplacementView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorunDelta, constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { editorBackground, scrollbarShadow } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { IEditorMouseEvent, IViewZoneChangeAccessor } from '../../../../../../browser/editorBrowser.js';\nimport { EditorMouseEvent } from '../../../../../../browser/editorDom.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../../common/viewModel/inlineDecorations.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, getModifiedBorderColor, getOriginalBorderColor, modifiedChangedLineBackgroundColor, originalBackgroundColor } from '../theme.js';\nimport { getEditorValidOverlayRect, getPrefixTrim, mapOutFalsy, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsLineReplacementView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tprivate readonly _maxPrefixTrim;\n\n\tprivate readonly _modifiedLineElements;\n\n\n\tprivate readonly _layout;\n\n\tprivate readonly _viewZoneInfo;\n\n\tprivate readonly _div;\n\n\treadonly isHovered;\n\n\treadonly minEditorScrollHeight;\n\n\tconstructor(\n\t\tprivate readonly _editor: ObservableCodeEditor,\n\t\tprivate readonly _edit: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tmodifiedRange: LineRange;\n\t\t\tmodifiedLines: string[];\n\t\t\treplacements: Replacement[];\n\t\t} | undefined>,\n\t\tprivate readonly _isInDiffEditor: IObservable<boolean>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._maxPrefixTrim = this._edit.map(e => e ? getPrefixTrim(e.replacements.flatMap(r => [r.originalRange, r.modifiedRange]), e.originalRange, e.modifiedLines, this._editor.editor) : undefined);\n\t\tthis._modifiedLineElements = derived(this, reader => {\n\t\t\tconst lines = [];\n\t\t\tlet requiredWidth = 0;\n\n\t\t\tconst prefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit || !prefixTrim) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst maxPrefixTrim = prefixTrim.prefixTrim;\n\t\t\tconst modifiedBubbles = rangesToBubbleRanges(edit.replacements.map(r => r.modifiedRange)).map(r => new Range(r.startLineNumber, r.startColumn - maxPrefixTrim, r.endLineNumber, r.endColumn - maxPrefixTrim));\n\n\t\t\tconst textModel = this._editor.model.get()!;\n\t\t\tconst startLineNumber = edit.modifiedRange.startLineNumber;\n\t\t\tfor (let i = 0; i < edit.modifiedRange.length; i++) {\n\t\t\t\tconst line = document.createElement('div');\n\t\t\t\tconst lineNumber = startLineNumber + i;\n\t\t\t\tconst modLine = edit.modifiedLines[i].slice(maxPrefixTrim);\n\n\t\t\t\tconst t = textModel.tokenization.tokenizeLinesAt(lineNumber, [modLine])?.[0];\n\t\t\t\tlet tokens: LineTokens;\n\t\t\t\tif (t) {\n\t\t\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(modLine, this._languageService.languageIdCodec);\n\t\t\t\t} else {\n\t\t\t\t\ttokens = LineTokens.createEmpty(modLine, this._languageService.languageIdCodec);\n\t\t\t\t}\n\n\t\t\t\tconst decorations = [];\n\t\t\t\tfor (const modified of modifiedBubbles.filter(b => b.startLineNumber === lineNumber)) {\n\t\t\t\t\tconst validatedEndColumn = Math.min(modified.endColumn, modLine.length + 1);\n\t\t\t\t\tdecorations.push(new InlineDecoration(new Range(1, modified.startColumn, 1, validatedEndColumn), 'inlineCompletions-modified-bubble', InlineDecorationType.Regular));\n\t\t\t\t}\n\n\t\t\t\t// TODO: All lines should be rendered at once for one dom element\n\t\t\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor.editor).withSetWidth(false).withScrollBeyondLastColumn(0), decorations, line, true);\n\t\t\t\tthis._editor.getOption(EditorOption.fontInfo).read(reader); // update when font info changes\n\n\t\t\t\trequiredWidth = Math.max(requiredWidth, result.minWidthInPx);\n\n\t\t\t\tlines.push(line);\n\t\t\t}\n\n\t\t\treturn { lines, requiredWidth: requiredWidth };\n\t\t});\n\t\tthis._layout = derived(this, reader => {\n\t\t\tconst modifiedLines = this._modifiedLineElements.read(reader);\n\t\t\tconst maxPrefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!modifiedLines || !maxPrefixTrim || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst { prefixLeftOffset } = maxPrefixTrim;\n\t\t\tconst { requiredWidth } = modifiedLines;\n\n\t\t\tconst originalLineHeights = this._editor.observeLineHeightsForLineRange(edit.originalRange).read(reader);\n\t\t\tconst modifiedLineHeights = (() => {\n\t\t\t\tconst lineHeights = originalLineHeights.slice(0, edit.modifiedRange.length);\n\t\t\t\twhile (lineHeights.length < edit.modifiedRange.length) {\n\t\t\t\t\tlineHeights.push(originalLineHeights[originalLineHeights.length - 1]);\n\t\t\t\t}\n\t\t\t\treturn lineHeights;\n\t\t\t})();\n\n\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\t\t\tconst verticalScrollbarWidth = this._editor.layoutInfoVerticalScrollbarWidth.read(reader);\n\t\t\tconst scrollLeft = this._editor.scrollLeft.read(reader);\n\t\t\tconst scrollTop = this._editor.scrollTop.read(reader);\n\t\t\tconst editorLeftOffset = contentLeft - scrollLeft;\n\n\t\t\tconst textModel = this._editor.editor.getModel()!;\n\n\t\t\tconst originalLineWidths = edit.originalRange.mapToLineArray(line => this._editor.editor.getOffsetForColumn(line, textModel.getLineMaxColumn(line)) - prefixLeftOffset);\n\t\t\tconst maxLineWidth = Math.max(...originalLineWidths, requiredWidth);\n\n\t\t\tconst startLineNumber = edit.originalRange.startLineNumber;\n\t\t\tconst endLineNumber = edit.originalRange.endLineNumberExclusive - 1;\n\t\t\tconst topOfOriginalLines = this._editor.editor.getTopForLineNumber(startLineNumber) - scrollTop;\n\t\t\tconst bottomOfOriginalLines = this._editor.editor.getBottomForLineNumber(endLineNumber) - scrollTop;\n\n\t\t\t// Box Widget positioning\n\t\t\tconst originalLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\teditorLeftOffset + prefixLeftOffset,\n\t\t\t\ttopOfOriginalLines,\n\t\t\t\tmaxLineWidth,\n\t\t\t\tbottomOfOriginalLines - topOfOriginalLines\n\t\t\t);\n\t\t\tconst modifiedLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\toriginalLinesOverlay.left,\n\t\t\t\toriginalLinesOverlay.bottom,\n\t\t\t\toriginalLinesOverlay.width,\n\t\t\t\tmodifiedLineHeights.reduce((sum, h) => sum + h, 0)\n\t\t\t);\n\t\t\tconst background = Rect.hull([originalLinesOverlay, modifiedLinesOverlay]);\n\n\t\t\tconst lowerBackground = background.intersectVertical(new OffsetRange(originalLinesOverlay.bottom, Number.MAX_SAFE_INTEGER));\n\t\t\tconst lowerText = new Rect(lowerBackground.left, lowerBackground.top, lowerBackground.right, lowerBackground.bottom);\n\n\t\t\treturn {\n\t\t\t\toriginalLinesOverlay,\n\t\t\t\tmodifiedLinesOverlay,\n\t\t\t\tbackground,\n\t\t\t\tlowerBackground,\n\t\t\t\tlowerText,\n\t\t\t\tmodifiedLineHeights,\n\t\t\t\tminContentWidthRequired: prefixLeftOffset + maxLineWidth + verticalScrollbarWidth,\n\t\t\t};\n\t\t});\n\t\tthis._viewZoneInfo = derived<{ height: number; lineNumber: number } | undefined>(reader => {\n\t\t\tconst shouldShowViewZone = this._editor.getOption(EditorOption.inlineSuggest).map(o => o.edits.allowCodeShifting === 'always').read(reader);\n\t\t\tif (!shouldShowViewZone) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst layout = this._layout.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!layout || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst viewZoneHeight = layout.lowerBackground.height;\n\t\t\tconst viewZoneLineNumber = edit.originalRange.endLineNumberExclusive;\n\t\t\treturn { height: viewZoneHeight, lineNumber: viewZoneLineNumber };\n\t\t});\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\tif (!layout || this._viewZoneInfo.read(reader) !== undefined) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn layout.read(reader).lowerText.bottom + this._editor.editor.getScrollTop();\n\t\t});\n\t\tthis._div = n.div({\n\t\t\tclass: 'line-replacement',\n\t\t}, [\n\t\t\tderived(this, reader => {\n\t\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\t\tconst modifiedLineElements = this._modifiedLineElements.read(reader);\n\t\t\t\tif (!layout || !modifiedLineElements) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst layoutProps = layout.read(reader);\n\t\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\n\t\t\t\tconst separatorWidth = this._isInDiffEditor.read(reader) ? 3 : 1;\n\n\t\t\t\tmodifiedLineElements.lines.forEach((l, i) => {\n\t\t\t\t\tl.style.width = `${layoutProps.lowerText.width}px`;\n\t\t\t\t\tl.style.height = `${layoutProps.modifiedLineHeights[i]}px`;\n\t\t\t\t\tl.style.position = 'relative';\n\t\t\t\t});\n\n\t\t\t\tconst modifiedBorderColor = getModifiedBorderColor(this._tabAction).read(reader);\n\t\t\t\tconst originalBorderColor = getOriginalBorderColor(this._tabAction).read(reader);\n\n\t\t\t\treturn [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editor).read(r)),\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'borderAroundLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft).withMargin(separatorWidth)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: `${separatorWidth + 1}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'originalOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: getEditorBlendedColor(originalBorderColor, this._themeService).map(c => `1px solid ${c.toString()}`),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(originalBackgroundColor),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerBackground.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(editorBackground),\n\t\t\t\t\t\t\t\tboxShadow: `${asCssVariable(scrollbarShadow)} 0 6px 6px -6px`,\n\t\t\t\t\t\t\t\tborder: `1px solid ${asCssVariable(modifiedBorderColor)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmousedown: e => {\n\t\t\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonclick: (e) => this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)),\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tposition: 'absolute', top: 0, left: 0, width: '100%', height: '100%',\n\t\t\t\t\t\t\t\t\tbackground: asCssVariable(modifiedChangedLineBackgroundColor),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedLinesLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerText.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tfontFamily: this._editor.getOption(EditorOption.fontFamily),\n\t\t\t\t\t\t\t\tfontSize: this._editor.getOption(EditorOption.fontSize),\n\t\t\t\t\t\t\t\tfontWeight: this._editor.getOption(EditorOption.fontWeight),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [...modifiedLineElements.lines]),\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\t})\n\t\t]).keepUpdated(this._store);\n\t\tthis.isHovered = this._editor.isTargetHovered((e) => this._isMouseOverWidget(e), this._store);\n\t\tthis._previousViewZoneInfo = undefined;\n\n\t\tthis._register(toDisposable(() => this._editor.editor.changeViewZones(accessor => this.removePreviousViewZone(accessor))));\n\n\t\tthis._register(autorunDelta(this._viewZoneInfo, ({ lastValue, newValue }) => {\n\t\t\tif (lastValue === newValue || (lastValue?.height === newValue?.height && lastValue?.lineNumber === newValue?.lineNumber)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._editor.editor.changeViewZones((changeAccessor) => {\n\t\t\t\tthis.removePreviousViewZone(changeAccessor);\n\t\t\t\tif (!newValue) { return; }\n\t\t\t\tthis.addViewZone(newValue, changeAccessor);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._editor.createOverlayWidget({\n\t\t\tdomNode: this._div.element,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\treturn this._layout.read(reader)?.minContentWidthRequired ?? 0;\n\t\t\t}),\n\t\t\tposition: constObservable({ preference: { top: 0, left: 0 } }),\n\t\t\tallowEditorOverflow: false,\n\t\t}));\n\t}\n\n\tprivate _isMouseOverWidget(e: IEditorMouseEvent): boolean {\n\t\tconst layout = this._layout.get();\n\t\tif (!layout || !(e.event instanceof EditorMouseEvent)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn layout.lowerBackground.containsPoint(new Point(e.event.relativePos.x, e.event.relativePos.y));\n\t}\n\n\t// View Zones\n\tprivate _previousViewZoneInfo: { height: number; lineNumber: number; id: string } | undefined;\n\n\tprivate removePreviousViewZone(changeAccessor: IViewZoneChangeAccessor) {\n\t\tif (!this._previousViewZoneInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tchangeAccessor.removeZone(this._previousViewZoneInfo.id);\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= this._previousViewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() - this._previousViewZoneInfo.height);\n\t\t}\n\n\t\tthis._previousViewZoneInfo = undefined;\n\t}\n\n\tprivate addViewZone(viewZoneInfo: { height: number; lineNumber: number }, changeAccessor: IViewZoneChangeAccessor) {\n\t\tconst activeViewZone = changeAccessor.addZone({\n\t\t\tafterLineNumber: viewZoneInfo.lineNumber - 1,\n\t\t\theightInPx: viewZoneInfo.height, // move computation to layout?\n\t\t\tdomNode: $('div'),\n\t\t});\n\n\t\tthis._previousViewZoneInfo = { height: viewZoneInfo.height, lineNumber: viewZoneInfo.lineNumber, id: activeViewZone };\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= viewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() + viewZoneInfo.height);\n\t\t}\n\t}\n}\n\nfunction rangesToBubbleRanges(ranges: Range[]): Range[] {\n\tconst result: Range[] = [];\n\twhile (ranges.length) {\n\t\tlet range = ranges.shift()!;\n\t\tif (range.startLineNumber !== range.endLineNumber) {\n\t\t\tranges.push(new Range(range.startLineNumber + 1, 1, range.endLineNumber, range.endColumn));\n\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.startLineNumber, Number.MAX_SAFE_INTEGER); // TODO: this is not correct\n\t\t}\n\n\t\tresult.push(range);\n\t}\n\treturn result;\n\n}\n\nexport interface Replacement {\n\toriginalRange: Range;\n\tmodifiedRange: Range;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { $, getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorunDelta, constObservable, derived, IObservable } from '../../../../../../../base/common/observable.js';\nimport { editorBackground, scrollbarShadow } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { IEditorMouseEvent, IViewZoneChangeAccessor } from '../../../../../../browser/editorBrowser.js';\nimport { EditorMouseEvent } from '../../../../../../browser/editorDom.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { LineRange } from '../../../../../../common/core/ranges/lineRange.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { InlineDecoration, InlineDecorationType } from '../../../../../../common/viewModel/inlineDecorations.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getEditorBlendedColor, getModifiedBorderColor, getOriginalBorderColor, modifiedChangedLineBackgroundColor, originalBackgroundColor } from '../theme.js';\nimport { getEditorValidOverlayRect, getPrefixTrim, mapOutFalsy, rectToProps } from '../utils/utils.js';\n\nexport class InlineEditsLineReplacementView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tprivate readonly _maxPrefixTrim;\n\n\tprivate readonly _modifiedLineElements;\n\n\n\tprivate readonly _layout;\n\n\tprivate readonly _viewZoneInfo;\n\n\tprivate readonly _div;\n\n\treadonly isHovered;\n\n\treadonly minEditorScrollHeight;\n\n\tconstructor(\n\t\tprivate readonly _editor: ObservableCodeEditor,\n\t\tprivate readonly _edit: IObservable<{\n\t\t\toriginalRange: LineRange;\n\t\t\tmodifiedRange: LineRange;\n\t\t\tmodifiedLines: string[];\n\t\t\treplacements: Replacement[];\n\t\t} | undefined>,\n\t\tprivate readonly _isInDiffEditor: IObservable<boolean>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._maxPrefixTrim = this._edit.map(e => e ? getPrefixTrim(e.replacements.flatMap(r => [r.originalRange, r.modifiedRange]), e.originalRange, e.modifiedLines, this._editor.editor) : undefined);\n\t\tthis._modifiedLineElements = derived(this, reader => {\n\t\t\tconst lines = [];\n\t\t\tlet requiredWidth = 0;\n\n\t\t\tconst prefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit || !prefixTrim) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst maxPrefixTrim = prefixTrim.prefixTrim;\n\t\t\tconst modifiedBubbles = rangesToBubbleRanges(edit.replacements.map(r => r.modifiedRange)).map(r => new Range(r.startLineNumber, r.startColumn - maxPrefixTrim, r.endLineNumber, r.endColumn - maxPrefixTrim));\n\n\t\t\tconst textModel = this._editor.model.get()!;\n\t\t\tconst startLineNumber = edit.modifiedRange.startLineNumber;\n\t\t\tfor (let i = 0; i < edit.modifiedRange.length; i++) {\n\t\t\t\tconst line = document.createElement('div');\n\t\t\t\tconst lineNumber = startLineNumber + i;\n\t\t\t\tconst modLine = edit.modifiedLines[i].slice(maxPrefixTrim);\n\n\t\t\t\tconst t = textModel.tokenization.tokenizeLinesAt(lineNumber, [modLine])?.[0];\n\t\t\t\tlet tokens: LineTokens;\n\t\t\t\tif (t) {\n\t\t\t\t\ttokens = TokenArray.fromLineTokens(t).toLineTokens(modLine, this._languageService.languageIdCodec);\n\t\t\t\t} else {\n\t\t\t\t\ttokens = LineTokens.createEmpty(modLine, this._languageService.languageIdCodec);\n\t\t\t\t}\n\n\t\t\t\tconst decorations = [];\n\t\t\t\tfor (const modified of modifiedBubbles.filter(b => b.startLineNumber === lineNumber)) {\n\t\t\t\t\tconst validatedEndColumn = Math.min(modified.endColumn, modLine.length + 1);\n\t\t\t\t\tdecorations.push(new InlineDecoration(new Range(1, modified.startColumn, 1, validatedEndColumn), 'inlineCompletions-modified-bubble', InlineDecorationType.Regular));\n\t\t\t\t}\n\n\t\t\t\t// TODO: All lines should be rendered at once for one dom element\n\t\t\t\tconst result = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor.editor).withSetWidth(false).withScrollBeyondLastColumn(0), decorations, line, true);\n\t\t\t\tthis._editor.getOption(EditorOption.fontInfo).read(reader); // update when font info changes\n\n\t\t\t\trequiredWidth = Math.max(requiredWidth, result.minWidthInPx);\n\n\t\t\t\tlines.push(line);\n\t\t\t}\n\n\t\t\treturn { lines, requiredWidth: requiredWidth };\n\t\t});\n\t\tthis._layout = derived(this, reader => {\n\t\t\tconst modifiedLines = this._modifiedLineElements.read(reader);\n\t\t\tconst maxPrefixTrim = this._maxPrefixTrim.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!modifiedLines || !maxPrefixTrim || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst { prefixLeftOffset } = maxPrefixTrim;\n\t\t\tconst { requiredWidth } = modifiedLines;\n\n\t\t\tconst originalLineHeights = this._editor.observeLineHeightsForLineRange(edit.originalRange).read(reader);\n\t\t\tconst modifiedLineHeights = (() => {\n\t\t\t\tconst lineHeights = originalLineHeights.slice(0, edit.modifiedRange.length);\n\t\t\t\twhile (lineHeights.length < edit.modifiedRange.length) {\n\t\t\t\t\tlineHeights.push(originalLineHeights[originalLineHeights.length - 1]);\n\t\t\t\t}\n\t\t\t\treturn lineHeights;\n\t\t\t})();\n\n\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\t\t\tconst verticalScrollbarWidth = this._editor.layoutInfoVerticalScrollbarWidth.read(reader);\n\t\t\tconst scrollLeft = this._editor.scrollLeft.read(reader);\n\t\t\tconst scrollTop = this._editor.scrollTop.read(reader);\n\t\t\tconst editorLeftOffset = contentLeft - scrollLeft;\n\n\t\t\tconst textModel = this._editor.editor.getModel()!;\n\n\t\t\tconst originalLineWidths = edit.originalRange.mapToLineArray(line => this._editor.editor.getOffsetForColumn(line, textModel.getLineMaxColumn(line)) - prefixLeftOffset);\n\t\t\tconst maxLineWidth = Math.max(...originalLineWidths, requiredWidth);\n\n\t\t\tconst startLineNumber = edit.originalRange.startLineNumber;\n\t\t\tconst endLineNumber = edit.originalRange.endLineNumberExclusive - 1;\n\t\t\tconst topOfOriginalLines = this._editor.editor.getTopForLineNumber(startLineNumber) - scrollTop;\n\t\t\tconst bottomOfOriginalLines = this._editor.editor.getBottomForLineNumber(endLineNumber) - scrollTop;\n\n\t\t\t// Box Widget positioning\n\t\t\tconst originalLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\teditorLeftOffset + prefixLeftOffset,\n\t\t\t\ttopOfOriginalLines,\n\t\t\t\tmaxLineWidth,\n\t\t\t\tbottomOfOriginalLines - topOfOriginalLines\n\t\t\t);\n\t\t\tconst modifiedLinesOverlay = Rect.fromLeftTopWidthHeight(\n\t\t\t\toriginalLinesOverlay.left,\n\t\t\t\toriginalLinesOverlay.bottom,\n\t\t\t\toriginalLinesOverlay.width,\n\t\t\t\tmodifiedLineHeights.reduce((sum, h) => sum + h, 0)\n\t\t\t);\n\t\t\tconst background = Rect.hull([originalLinesOverlay, modifiedLinesOverlay]);\n\n\t\t\tconst lowerBackground = background.intersectVertical(new OffsetRange(originalLinesOverlay.bottom, Number.MAX_SAFE_INTEGER));\n\t\t\tconst lowerText = new Rect(lowerBackground.left, lowerBackground.top, lowerBackground.right, lowerBackground.bottom);\n\n\t\t\treturn {\n\t\t\t\toriginalLinesOverlay,\n\t\t\t\tmodifiedLinesOverlay,\n\t\t\t\tbackground,\n\t\t\t\tlowerBackground,\n\t\t\t\tlowerText,\n\t\t\t\tmodifiedLineHeights,\n\t\t\t\tminContentWidthRequired: prefixLeftOffset + maxLineWidth + verticalScrollbarWidth,\n\t\t\t};\n\t\t});\n\t\tthis._viewZoneInfo = derived<{ height: number; lineNumber: number } | undefined>(reader => {\n\t\t\tconst shouldShowViewZone = this._editor.getOption(EditorOption.inlineSuggest).map(o => o.edits.allowCodeShifting === 'always').read(reader);\n\t\t\tif (!shouldShowViewZone) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst layout = this._layout.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!layout || !edit) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst viewZoneHeight = layout.lowerBackground.height;\n\t\t\tconst viewZoneLineNumber = edit.originalRange.endLineNumberExclusive;\n\t\t\treturn { height: viewZoneHeight, lineNumber: viewZoneLineNumber };\n\t\t});\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\tif (!layout || this._viewZoneInfo.read(reader) !== undefined) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn layout.read(reader).lowerText.bottom + this._editor.editor.getScrollTop();\n\t\t});\n\t\tthis._div = n.div({\n\t\t\tclass: 'line-replacement',\n\t\t}, [\n\t\t\tderived(this, reader => {\n\t\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\t\tconst modifiedLineElements = this._modifiedLineElements.read(reader);\n\t\t\t\tif (!layout || !modifiedLineElements) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst layoutProps = layout.read(reader);\n\t\t\t\tconst contentLeft = this._editor.layoutInfoContentLeft.read(reader);\n\n\t\t\t\tconst separatorWidth = this._isInDiffEditor.read(reader) ? 3 : 1;\n\n\t\t\t\tmodifiedLineElements.lines.forEach((l, i) => {\n\t\t\t\t\tl.style.width = `${layoutProps.lowerText.width}px`;\n\t\t\t\t\tl.style.height = `${layoutProps.modifiedLineHeights[i]}px`;\n\t\t\t\t\tl.style.position = 'relative';\n\t\t\t\t});\n\n\t\t\t\tconst modifiedBorderColor = getModifiedBorderColor(this._tabAction).read(reader);\n\t\t\t\tconst originalBorderColor = getOriginalBorderColor(this._tabAction).read(reader);\n\n\t\t\t\treturn [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editor).read(r)),\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'borderAroundLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft).withMargin(separatorWidth)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: `${separatorWidth + 1}px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'originalOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).background.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\n\t\t\t\t\t\t\t\tborder: getEditorBlendedColor(originalBorderColor, this._themeService).map(c => `1px solid ${c.toString()}`),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(originalBackgroundColor),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedOverlayLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerBackground.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\tbackground: asCssVariable(editorBackground),\n\t\t\t\t\t\t\t\tboxShadow: `${asCssVariable(scrollbarShadow)} 0 6px 6px -6px`,\n\t\t\t\t\t\t\t\tborder: `1px solid ${asCssVariable(modifiedBorderColor)}`,\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmousedown: e => {\n\t\t\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonclick: (e) => this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)),\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\tposition: 'absolute', top: 0, left: 0, width: '100%', height: '100%',\n\t\t\t\t\t\t\t\t\tbackground: asCssVariable(modifiedChangedLineBackgroundColor),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tclass: 'modifiedLinesLineReplacement',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerText.translateX(-contentLeft)),\n\t\t\t\t\t\t\t\tfontFamily: this._editor.getOption(EditorOption.fontFamily),\n\t\t\t\t\t\t\t\tfontSize: this._editor.getOption(EditorOption.fontSize),\n\t\t\t\t\t\t\t\tfontWeight: this._editor.getOption(EditorOption.fontWeight),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\t\t\t\tborderRadius: '0 0 4px 4px',\n\t\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [...modifiedLineElements.lines]),\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\t})\n\t\t]).keepUpdated(this._store);\n\t\tthis.isHovered = this._editor.isTargetHovered((e) => this._isMouseOverWidget(e), this._store);\n\t\tthis._previousViewZoneInfo = undefined;\n\n\t\tthis._register(toDisposable(() => this._editor.editor.changeViewZones(accessor => this.removePreviousViewZone(accessor))));\n\n\t\tthis._register(autorunDelta(this._viewZoneInfo, ({ lastValue, newValue }) => {\n\t\t\tif (lastValue === newValue || (lastValue?.height === newValue?.height && lastValue?.lineNumber === newValue?.lineNumber)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._editor.editor.changeViewZones((changeAccessor) => {\n\t\t\t\tthis.removePreviousViewZone(changeAccessor);\n\t\t\t\tif (!newValue) { return; }\n\t\t\t\tthis.addViewZone(newValue, changeAccessor);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._editor.createOverlayWidget({\n\t\t\tdomNode: this._div.element,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\treturn this._layout.read(reader)?.minContentWidthRequired ?? 0;\n\t\t\t}),\n\t\t\tposition: constObservable({ preference: { top: 0, left: 0 } }),\n\t\t\tallowEditorOverflow: false,\n\t\t}));\n\t}\n\n\tprivate _isMouseOverWidget(e: IEditorMouseEvent): boolean {\n\t\tconst layout = this._layout.get();\n\t\tif (!layout || !(e.event instanceof EditorMouseEvent)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn layout.lowerBackground.containsPoint(new Point(e.event.relativePos.x, e.event.relativePos.y));\n\t}\n\n\t// View Zones\n\tprivate _previousViewZoneInfo: { height: number; lineNumber: number; id: string } | undefined;\n\n\tprivate removePreviousViewZone(changeAccessor: IViewZoneChangeAccessor) {\n\t\tif (!this._previousViewZoneInfo) {\n\t\t\treturn;\n\t\t}\n\n\t\tchangeAccessor.removeZone(this._previousViewZoneInfo.id);\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= this._previousViewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() - this._previousViewZoneInfo.height);\n\t\t}\n\n\t\tthis._previousViewZoneInfo = undefined;\n\t}\n\n\tprivate addViewZone(viewZoneInfo: { height: number; lineNumber: number }, changeAccessor: IViewZoneChangeAccessor) {\n\t\tconst activeViewZone = changeAccessor.addZone({\n\t\t\tafterLineNumber: viewZoneInfo.lineNumber - 1,\n\t\t\theightInPx: viewZoneInfo.height, // move computation to layout?\n\t\t\tdomNode: $('div'),\n\t\t});\n\n\t\tthis._previousViewZoneInfo = { height: viewZoneInfo.height, lineNumber: viewZoneInfo.lineNumber, id: activeViewZone };\n\n\t\tconst cursorLineNumber = this._editor.cursorLineNumber.get();\n\t\tif (cursorLineNumber !== null && cursorLineNumber >= viewZoneInfo.lineNumber) {\n\t\t\tthis._editor.editor.setScrollTop(this._editor.scrollTop.get() + viewZoneInfo.height);\n\t\t}\n\t}\n}\n\nfunction rangesToBubbleRanges(ranges: Range[]): Range[] {\n\tconst result: Range[] = [];\n\twhile (ranges.length) {\n\t\tlet range = ranges.shift()!;\n\t\tif (range.startLineNumber !== range.endLineNumber) {\n\t\t\tranges.push(new Range(range.startLineNumber + 1, 1, range.endLineNumber, range.endColumn));\n\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.startLineNumber, Number.MAX_SAFE_INTEGER); // TODO: this is not correct\n\t\t}\n\n\t\tresult.push(range);\n\t}\n\treturn result;\n\n}\n\nexport interface Replacement {\n\toriginalRange: Range;\n\tmodifiedRange: Range;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7624, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsSideBySideView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsSideBySideView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsSideBySideView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Color } from '../../../../../../../base/common/color.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { IObservable, IReader, autorun, constObservable, derived, derivedObservableWithCache, observableFromEvent } from '../../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../../platform/instantiation/common/instantiation.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable, asCssVariableWithDefault } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { EmbeddedCodeEditorWidget } from '../../../../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { ITextModel } from '../../../../../../common/model.js';\nimport { StickyScrollController } from '../../../../../stickyScroll/browser/stickyScrollController.js';\nimport { InlineCompletionContextKeys } from '../../../controller/inlineCompletionContextKeys.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { getEditorBlendedColor, getModifiedBorderColor, getOriginalBorderColor, modifiedBackgroundColor, originalBackgroundColor } from '../theme.js';\nimport { PathBuilder, getContentRenderWidth, getOffsetForPos, mapOutFalsy, maxContentWidthInRange } from '../utils/utils.js';\n\nconst HORIZONTAL_PADDING = 0;\nconst VERTICAL_PADDING = 0;\nconst ENABLE_OVERFLOW = false;\n\nconst BORDER_WIDTH = 1;\nconst WIDGET_SEPARATOR_WIDTH = 1;\nconst WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH = 3;\nconst BORDER_RADIUS = 4;\nconst ORIGINAL_END_PADDING = 20;\nconst MODIFIED_END_PADDING = 12;\n\nexport class InlineEditsSideBySideView extends Disposable implements IInlineEditsView {\n\n\t// This is an approximation and should be improved by using the real parameters used bellow\n\tstatic fitsInsideViewport(editor: ICodeEditor, textModel: ITextModel, edit: InlineEditWithChanges, reader: IReader): boolean {\n\t\tconst editorObs = observableCodeEditor(editor);\n\t\tconst editorWidth = editorObs.layoutInfoWidth.read(reader);\n\t\tconst editorContentLeft = editorObs.layoutInfoContentLeft.read(reader);\n\t\tconst editorVerticalScrollbar = editor.getLayoutInfo().verticalScrollbarWidth;\n\t\tconst minimapWidth = editorObs.layoutInfoMinimap.read(reader).minimapLeft !== 0 ? editorObs.layoutInfoMinimap.read(reader).minimapWidth : 0;\n\n\t\tconst maxOriginalContent = maxContentWidthInRange(editorObs, edit.displayRange, undefined/* do not reconsider on each layout info change */);\n\t\tconst maxModifiedContent = edit.lineEdit.newLines.reduce((max, line) => Math.max(max, getContentRenderWidth(line, editor, textModel)), 0);\n\t\tconst originalPadding = ORIGINAL_END_PADDING; // padding after last line of original editor\n\t\tconst modifiedPadding = MODIFIED_END_PADDING + 2 * BORDER_WIDTH; // padding after last line of modified editor\n\n\t\treturn maxOriginalContent + maxModifiedContent + originalPadding + modifiedPadding < editorWidth - editorContentLeft - editorVerticalScrollbar - minimapWidth;\n\t}\n\n\tprivate readonly _editorObs;\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\tprivate readonly _previewTextModel: ITextModel,\n\t\tprivate readonly _uiState: IObservable<{\n\t\t\tnewTextLineCount: number;\n\t\t\tisInDiffEditor: boolean;\n\t\t} | undefined>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._display = derived(this, reader => !!this._uiState.read(reader) ? 'block' : 'none');\n\t\tthis.previewRef = n.ref<HTMLDivElement>();\n\t\tconst separatorWidthObs = this._uiState.map(s => s?.isInDiffEditor ? WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH : WIDGET_SEPARATOR_WIDTH);\n\t\tthis._editorContainer = n.div({\n\t\t\tclass: ['editorContainer'],\n\t\t\tstyle: { position: 'absolute', overflow: 'hidden', cursor: 'pointer' },\n\t\t\tonmousedown: e => {\n\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t},\n\t\t\tonclick: (e) => {\n\t\t\t\tthis._onDidClick.fire(new StandardMouseEvent(getWindow(e), e));\n\t\t\t}\n\t\t}, [\n\t\t\tn.div({ class: 'preview', style: { pointerEvents: 'none' }, ref: this.previewRef }),\n\t\t]).keepUpdated(this._store);\n\t\tthis.isHovered = this._editorContainer.didMouseMoveDuringHover;\n\t\tthis.previewEditor = this._register(this._instantiationService.createInstance(\n\t\t\tEmbeddedCodeEditorWidget,\n\t\t\tthis.previewRef.element,\n\t\t\t{\n\t\t\t\tglyphMargin: false,\n\t\t\t\tlineNumbers: 'off',\n\t\t\t\tminimap: { enabled: false },\n\t\t\t\tguides: {\n\t\t\t\t\tindentation: false,\n\t\t\t\t\tbracketPairs: false,\n\t\t\t\t\tbracketPairsHorizontal: false,\n\t\t\t\t\thighlightActiveIndentation: false,\n\t\t\t\t},\n\t\t\t\trulers: [],\n\t\t\t\tpadding: { top: 0, bottom: 0 },\n\t\t\t\tfolding: false,\n\t\t\t\tselectOnLineNumbers: false,\n\t\t\t\tselectionHighlight: false,\n\t\t\t\tcolumnSelection: false,\n\t\t\t\toverviewRulerBorder: false,\n\t\t\t\toverviewRulerLanes: 0,\n\t\t\t\tlineDecorationsWidth: 0,\n\t\t\t\tlineNumbersMinChars: 0,\n\t\t\t\trevealHorizontalRightPadding: 0,\n\t\t\t\tbracketPairColorization: { enabled: true, independentColorPoolPerBracketType: false },\n\t\t\t\tscrollBeyondLastLine: false,\n\t\t\t\tscrollbar: {\n\t\t\t\t\tvertical: 'hidden',\n\t\t\t\t\thorizontal: 'hidden',\n\t\t\t\t\thandleMouseWheel: false,\n\t\t\t\t},\n\t\t\t\treadOnly: true,\n\t\t\t\twordWrap: 'off',\n\t\t\t\twordWrapOverride1: 'off',\n\t\t\t\twordWrapOverride2: 'off',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcontextKeyValues: {\n\t\t\t\t\t[InlineCompletionContextKeys.inInlineEditsPreviewEditor.key]: true,\n\t\t\t\t},\n\t\t\t\tcontributions: [],\n\t\t\t},\n\t\t\tthis._editor\n\t\t));\n\t\tthis._previewEditorObs = observableCodeEditor(this.previewEditor);\n\t\tthis._activeViewZones = [];\n\t\tthis._updatePreviewEditor = derived(this, reader => {\n\t\t\tthis._editorContainer.readEffect(reader);\n\t\t\tthis._previewEditorObs.model.read(reader); // update when the model is set\n\n\t\t\t// Setting this here explicitly to make sure that the preview editor is\n\t\t\t// visible when needed, we're also checking that these fields are defined\n\t\t\t// because of the auto run initial\n\t\t\t// Before removing these, verify with a non-monospace font family\n\t\t\tthis._display.read(reader);\n\t\t\tif (this._nonOverflowView) {\n\t\t\t\tthis._nonOverflowView.element.style.display = this._display.read(reader);\n\t\t\t}\n\n\t\t\tconst uiState = this._uiState.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!uiState || !edit) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst range = edit.originalLineRange;\n\n\t\t\tconst hiddenAreas: Range[] = [];\n\t\t\tif (range.startLineNumber > 1) {\n\t\t\t\thiddenAreas.push(new Range(1, 1, range.startLineNumber - 1, 1));\n\t\t\t}\n\t\t\tif (range.startLineNumber + uiState.newTextLineCount < this._previewTextModel.getLineCount() + 1) {\n\t\t\t\thiddenAreas.push(new Range(range.startLineNumber + uiState.newTextLineCount, 1, this._previewTextModel.getLineCount() + 1, 1));\n\t\t\t}\n\n\t\t\tthis.previewEditor.setHiddenAreas(hiddenAreas, undefined, true);\n\n\t\t\t// TODO: is this the proper way to handle viewzones?\n\t\t\tconst previousViewZones = [...this._activeViewZones];\n\t\t\tthis._activeViewZones = [];\n\n\t\t\tconst reducedLinesCount = (range.endLineNumberExclusive - range.startLineNumber) - uiState.newTextLineCount;\n\t\t\tthis.previewEditor.changeViewZones((changeAccessor) => {\n\t\t\t\tpreviousViewZones.forEach(id => changeAccessor.removeZone(id));\n\n\t\t\t\tif (reducedLinesCount > 0) {\n\t\t\t\t\tthis._activeViewZones.push(changeAccessor.addZone({\n\t\t\t\t\t\tafterLineNumber: range.startLineNumber + uiState.newTextLineCount - 1,\n\t\t\t\t\t\theightInLines: reducedLinesCount,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tdomNode: $('div.diagonal-fill.inline-edits-view-zone'),\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis._previewEditorWidth = derived(this, reader => {\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit) { return 0; }\n\t\t\tthis._updatePreviewEditor.read(reader);\n\n\t\t\treturn maxContentWidthInRange(this._previewEditorObs, edit.modifiedLineRange, reader);\n\t\t});\n\t\tthis._cursorPosIfTouchesEdit = derived(this, reader => {\n\t\t\tconst cursorPos = this._editorObs.cursorPosition.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit || !cursorPos) { return undefined; }\n\t\t\treturn edit.modifiedLineRange.contains(cursorPos.lineNumber) ? cursorPos : undefined;\n\t\t});\n\t\tthis._originalStartPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.startLineNumber, 1) : null;\n\t\t});\n\t\tthis._originalEndPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.endLineNumberExclusive, 1) : null;\n\t\t});\n\t\tthis._originalVerticalStartPosition = this._editorObs.observePosition(this._originalStartPosition, this._store).map(p => p?.y);\n\t\tthis._originalVerticalEndPosition = this._editorObs.observePosition(this._originalEndPosition, this._store).map(p => p?.y);\n\t\tthis._originalDisplayRange = this._edit.map(e => e?.displayRange);\n\t\tthis._editorMaxContentWidthInRange = derived(this, reader => {\n\t\t\tconst originalDisplayRange = this._originalDisplayRange.read(reader);\n\t\t\tif (!originalDisplayRange) {\n\t\t\t\treturn constObservable(0);\n\t\t\t}\n\t\t\tthis._editorObs.versionId.read(reader);\n\n\t\t\t// Take the max value that we observed.\n\t\t\t// Reset when either the edit changes or the editor text version.\n\t\t\treturn derivedObservableWithCache<number>(this, (reader, lastValue) => {\n\t\t\t\tconst maxWidth = maxContentWidthInRange(this._editorObs, originalDisplayRange, reader);\n\t\t\t\treturn Math.max(maxWidth, lastValue ?? 0);\n\t\t\t});\n\t\t}).map((v, r) => v.read(r));\n\t\tthis._previewEditorLayoutInfo = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\tif (!inlineEdit) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst state = this._uiState.read(reader);\n\t\t\tif (!state) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst range = inlineEdit.originalLineRange;\n\n\t\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\n\t\t\tconst editorContentMaxWidthInRange = this._editorMaxContentWidthInRange.read(reader);\n\t\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\t\tconst previewContentWidth = this._previewEditorWidth.read(reader);\n\t\t\tconst editorContentAreaWidth = editorLayout.contentWidth - editorLayout.verticalScrollbarWidth;\n\t\t\tconst editorBoundingClientRect = this._editor.getContainerDomNode().getBoundingClientRect();\n\t\t\tconst clientContentAreaRight = editorLayout.contentLeft + editorLayout.contentWidth + editorBoundingClientRect.left;\n\t\t\tconst remainingWidthRightOfContent = getWindow(this._editor.getContainerDomNode()).innerWidth - clientContentAreaRight;\n\t\t\tconst remainingWidthRightOfEditor = getWindow(this._editor.getContainerDomNode()).innerWidth - editorBoundingClientRect.right;\n\t\t\tconst desiredMinimumWidth = Math.min(editorLayout.contentWidth * 0.3, previewContentWidth, 100);\n\t\t\tconst IN_EDITOR_DISPLACEMENT = 0;\n\t\t\tconst maximumAvailableWidth = IN_EDITOR_DISPLACEMENT + remainingWidthRightOfContent;\n\n\t\t\tconst cursorPos = this._cursorPosIfTouchesEdit.read(reader);\n\n\t\t\tconst maxPreviewEditorLeft = Math.max(\n\t\t\t\t// We're starting from the content area right and moving it left by IN_EDITOR_DISPLACEMENT and also by an amount to ensure some minimum desired width\n\t\t\t\teditorContentAreaWidth + horizontalScrollOffset - IN_EDITOR_DISPLACEMENT - Math.max(0, desiredMinimumWidth - maximumAvailableWidth),\n\t\t\t\t// But we don't want that the moving left ends up covering the cursor, so this will push it to the right again\n\t\t\t\tMath.min(\n\t\t\t\t\tcursorPos ? getOffsetForPos(this._editorObs, cursorPos, reader) + 50 : 0,\n\t\t\t\t\teditorContentAreaWidth + horizontalScrollOffset\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst previewEditorLeftInTextArea = Math.min(editorContentMaxWidthInRange + ORIGINAL_END_PADDING, maxPreviewEditorLeft);\n\n\t\t\tconst maxContentWidth = editorContentMaxWidthInRange + ORIGINAL_END_PADDING + previewContentWidth + 70;\n\n\t\t\tconst dist = maxPreviewEditorLeft - previewEditorLeftInTextArea;\n\n\t\t\tlet desiredPreviewEditorScrollLeft;\n\t\t\tlet codeRight;\n\t\t\tif (previewEditorLeftInTextArea > horizontalScrollOffset) {\n\t\t\t\tdesiredPreviewEditorScrollLeft = 0;\n\t\t\t\tcodeRight = editorLayout.contentLeft + previewEditorLeftInTextArea - horizontalScrollOffset;\n\t\t\t} else {\n\t\t\t\tdesiredPreviewEditorScrollLeft = horizontalScrollOffset - previewEditorLeftInTextArea;\n\t\t\t\tcodeRight = editorLayout.contentLeft;\n\t\t\t}\n\n\t\t\tconst selectionTop = this._originalVerticalStartPosition.read(reader) ?? this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\t\tconst selectionBottom = this._originalVerticalEndPosition.read(reader) ?? this._editor.getBottomForLineNumber(range.endLineNumberExclusive - 1) - this._editorObs.scrollTop.read(reader);\n\n\t\t\t// TODO: const { prefixLeftOffset } = getPrefixTrim(inlineEdit.edit.edits.map(e => e.range), inlineEdit.originalLineRange, [], this._editor);\n\t\t\tconst codeLeft = editorLayout.contentLeft - horizontalScrollOffset;\n\n\t\t\tlet codeRect = Rect.fromLeftTopRightBottom(codeLeft, selectionTop, codeRight, selectionBottom);\n\t\t\tconst isInsertion = codeRect.height === 0;\n\t\t\tif (!isInsertion) {\n\t\t\t\tcodeRect = codeRect.withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING);\n\t\t\t}\n\n\t\t\tconst previewLineHeights = this._previewEditorObs.observeLineHeightsForLineRange(inlineEdit.modifiedLineRange).read(reader);\n\t\t\tconst editHeight = previewLineHeights.reduce((acc, h) => acc + h, 0);\n\t\t\tconst codeHeight = selectionBottom - selectionTop;\n\t\t\tconst previewEditorHeight = Math.max(codeHeight, editHeight);\n\n\t\t\tconst clipped = dist === 0;\n\t\t\tconst codeEditDist = 0;\n\t\t\tconst previewEditorWidth = Math.min(previewContentWidth + MODIFIED_END_PADDING, remainingWidthRightOfEditor + editorLayout.width - editorLayout.contentLeft - codeEditDist);\n\n\t\t\tlet editRect = Rect.fromLeftTopWidthHeight(codeRect.right + codeEditDist, selectionTop, previewEditorWidth, previewEditorHeight);\n\t\t\tif (!isInsertion) {\n\t\t\t\teditRect = editRect.withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING).translateX(HORIZONTAL_PADDING + BORDER_WIDTH);\n\t\t\t} else {\n\t\t\t\t// Align top of edit with insertion line\n\t\t\t\teditRect = editRect.withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING).translateY(VERTICAL_PADDING);\n\t\t\t}\n\n\t\t\t// debugView(debugLogRects({ codeRect, editRect }, this._editor.getDomNode()!), reader);\n\n\t\t\treturn {\n\t\t\t\tcodeRect,\n\t\t\t\teditRect,\n\t\t\t\tcodeScrollLeft: horizontalScrollOffset,\n\t\t\t\tcontentLeft: editorLayout.contentLeft,\n\n\t\t\t\tisInsertion,\n\t\t\t\tmaxContentWidth,\n\t\t\t\tshouldShowShadow: clipped,\n\t\t\t\tdesiredPreviewEditorScrollLeft,\n\t\t\t\tpreviewEditorWidth,\n\t\t\t};\n\t\t});\n\t\tthis._stickyScrollController = StickyScrollController.get(this._editorObs.editor);\n\t\tthis._stickyScrollHeight = this._stickyScrollController ? observableFromEvent(this._stickyScrollController.onDidChangeStickyScrollHeight, () => this._stickyScrollController!.stickyScrollWidgetHeight) : constObservable(0);\n\t\tthis._shouldOverflow = derived(this, reader => {\n\t\t\tif (!ENABLE_OVERFLOW) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst range = this._edit.read(reader)?.originalLineRange;\n\t\t\tif (!range) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst stickyScrollHeight = this._stickyScrollHeight.read(reader);\n\t\t\tconst top = this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\t\tif (top <= stickyScrollHeight) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst bottom = this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\t\t\tif (bottom >= this._editorObs.layoutInfo.read(reader).height) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tthis._originalBackgroundColor = observableFromEvent(this, this._themeService.onDidColorThemeChange, () => {\n\t\t\treturn this._themeService.getColorTheme().getColor(originalBackgroundColor) ?? Color.transparent;\n\t\t});\n\t\tthis._backgroundSvg = n.svg({\n\t\t\ttransform: 'translate(-0.5 -0.5)',\n\t\t\tstyle: { overflow: 'visible', pointerEvents: 'none', position: 'absolute' },\n\t\t}, [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'rightOfModifiedBackgroundCoverUp',\n\t\t\t\td: derived(this, reader => {\n\t\t\t\t\tconst layoutInfo = this._previewEditorLayoutInfo.read(reader);\n\t\t\t\t\tif (!layoutInfo) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst originalBackgroundColor = this._originalBackgroundColor.read(reader);\n\t\t\t\t\tif (originalBackgroundColor.isTransparent()) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new PathBuilder()\n\t\t\t\t\t\t.moveTo(layoutInfo.codeRect.getRightTop())\n\t\t\t\t\t\t.lineTo(layoutInfo.codeRect.getRightTop().deltaX(1000))\n\t\t\t\t\t\t.lineTo(layoutInfo.codeRect.getRightBottom().deltaX(1000))\n\t\t\t\t\t\t.lineTo(layoutInfo.codeRect.getRightBottom())\n\t\t\t\t\t\t.build();\n\t\t\t\t}),\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: asCssVariableWithDefault(editorBackground, 'transparent'),\n\t\t\t\t}\n\t\t\t}),\n\t\t]).keepUpdated(this._store);\n\t\tthis._originalOverlay = n.div({\n\t\t\tstyle: { pointerEvents: 'none', display: this._previewEditorLayoutInfo.map(layoutInfo => layoutInfo?.isInsertion ? 'none' : 'block') },\n\t\t}, derived(this, reader => {\n\t\t\tconst layoutInfoObs = mapOutFalsy(this._previewEditorLayoutInfo).read(reader);\n\t\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\t\tconst separatorWidth = separatorWidthObs.read(reader);\n\t\t\tconst borderStyling = getOriginalBorderColor(this._tabAction).map(bc => `${BORDER_WIDTH}px solid ${asCssVariable(bc)}`);\n\t\t\tconst borderStylingSeparator = `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`;\n\n\t\t\tconst hasBorderLeft = layoutInfoObs.read(reader).codeScrollLeft !== 0;\n\t\t\tconst isModifiedLower = layoutInfoObs.map(layoutInfo => layoutInfo.codeRect.bottom < layoutInfo.editRect.bottom);\n\t\t\tconst transitionRectSize = BORDER_RADIUS * 2 + BORDER_WIDTH * 2;\n\n\t\t\t// Create an overlay which hides the left hand side of the original overlay when it overflows to the left\n\t\t\t// such that there is a smooth transition at the edge of content left\n\t\t\tconst overlayHider = layoutInfoObs.map(layoutInfo => Rect.fromLeftTopRightBottom(\n\t\t\t\tlayoutInfo.contentLeft - BORDER_RADIUS - BORDER_WIDTH,\n\t\t\t\tlayoutInfo.codeRect.top,\n\t\t\t\tlayoutInfo.contentLeft,\n\t\t\t\tlayoutInfo.codeRect.bottom + transitionRectSize\n\t\t\t)).read(reader);\n\n\t\t\tconst intersectionLine = new OffsetRange(overlayHider.left, Number.MAX_SAFE_INTEGER);\n\t\t\tconst overlayRect = layoutInfoObs.map(layoutInfo => layoutInfo.codeRect.intersectHorizontal(intersectionLine));\n\t\t\tconst separatorRect = overlayRect.map(overlayRect => overlayRect.withMargin(separatorWidth, 0, separatorWidth, separatorWidth).intersectHorizontal(intersectionLine));\n\n\t\t\tconst transitionRect = overlayRect.map(overlayRect => Rect.fromLeftTopWidthHeight(overlayRect.right - transitionRectSize + BORDER_WIDTH, overlayRect.bottom - BORDER_WIDTH, transitionRectSize, transitionRectSize).intersectHorizontal(intersectionLine));\n\n\t\t\treturn [\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalSeparatorSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...separatorRect.read(reader).toStyles(),\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px 0 0 ${BORDER_RADIUS}px`,\n\t\t\t\t\t\tborderTop: borderStylingSeparator,\n\t\t\t\t\t\tborderBottom: borderStylingSeparator,\n\t\t\t\t\t\tborderLeft: hasBorderLeft ? 'none' : borderStylingSeparator,\n\t\t\t\t\t}\n\t\t\t\t}),\n\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalOverlaySideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px 0 0 ${BORDER_RADIUS}px`,\n\t\t\t\t\t\tborderTop: borderStyling,\n\t\t\t\t\t\tborderBottom: borderStyling,\n\t\t\t\t\t\tborderLeft: hasBorderLeft ? 'none' : borderStyling,\n\t\t\t\t\t\tbackgroundColor: asCssVariable(originalBackgroundColor),\n\t\t\t\t\t}\n\t\t\t\t}),\n\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalCornerCutoutSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\tdisplay: isModifiedLower.map(isLower => isLower ? 'block' : 'none'),\n\t\t\t\t\t\t...transitionRect.read(reader).toStyles(),\n\t\t\t\t\t}\n\t\t\t\t}, [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tclass: 'originalCornerCutoutBackground',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute', top: '0px', left: '0px', width: '100%', height: '100%',\n\t\t\t\t\t\t\tbackgroundColor: getEditorBlendedColor(originalBackgroundColor, this._themeService).map(c => c.toString()),\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tclass: 'originalCornerCutoutBorder',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute', top: '0px', left: '0px', width: '100%', height: '100%',\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\tborderTop: borderStyling,\n\t\t\t\t\t\t\tborderRight: borderStyling,\n\t\t\t\t\t\t\tborderRadius: `0 100% 0 0`,\n\t\t\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]),\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalOverlaySideBySideHider',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...overlayHider.toStyles(),\n\t\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground),\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t];\n\t\t})).keepUpdated(this._store);\n\t\tthis._modifiedOverlay = n.div({\n\t\t\tstyle: { pointerEvents: 'none', }\n\t\t}, derived(this, reader => {\n\t\t\tconst layoutInfoObs = mapOutFalsy(this._previewEditorLayoutInfo).read(reader);\n\t\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\t\tconst isModifiedLower = layoutInfoObs.map(layoutInfo => layoutInfo.codeRect.bottom < layoutInfo.editRect.bottom);\n\n\t\t\tconst separatorWidth = separatorWidthObs.read(reader);\n\t\t\tconst borderRadius = isModifiedLower.map(isLower => `0 ${BORDER_RADIUS}px ${BORDER_RADIUS}px ${isLower ? BORDER_RADIUS : 0}px`);\n\t\t\tconst borderStyling = getEditorBlendedColor(getModifiedBorderColor(this._tabAction), this._themeService).map(c => `1px solid ${c.toString()}`);\n\t\t\tconst borderStylingSeparator = `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`;\n\n\t\t\tconst overlayRect = layoutInfoObs.map(layoutInfo => layoutInfo.editRect.withMargin(0, BORDER_WIDTH));\n\t\t\tconst separatorRect = overlayRect.map(overlayRect => overlayRect.withMargin(separatorWidth, separatorWidth, separatorWidth, 0));\n\n\t\t\tconst insertionRect = derived(this, reader => {\n\t\t\t\tconst overlay = overlayRect.read(reader);\n\t\t\t\tconst layoutinfo = layoutInfoObs.read(reader);\n\t\t\t\tif (!layoutinfo.isInsertion || layoutinfo.contentLeft >= overlay.left) {\n\t\t\t\t\treturn Rect.fromLeftTopWidthHeight(overlay.left, overlay.top, 0, 0);\n\t\t\t\t}\n\t\t\t\treturn new Rect(layoutinfo.contentLeft, overlay.top, overlay.left, overlay.top + BORDER_WIDTH * 2);\n\t\t\t});\n\n\t\t\treturn [\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'modifiedInsertionSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...insertionRect.read(reader).toStyles(),\n\t\t\t\t\t\tbackgroundColor: getModifiedBorderColor(this._tabAction).map(c => asCssVariable(c)),\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'modifiedSeparatorSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...separatorRect.read(reader).toStyles(),\n\t\t\t\t\t\tborderRadius,\n\t\t\t\t\t\tborderTop: borderStylingSeparator,\n\t\t\t\t\t\tborderBottom: borderStylingSeparator,\n\t\t\t\t\t\tborderRight: borderStylingSeparator,\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'modifiedOverlaySideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\t\tborderRadius,\n\t\t\t\t\t\tborder: borderStyling,\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\tbackgroundColor: asCssVariable(modifiedBackgroundColor),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t];\n\t\t})).keepUpdated(this._store);\n\t\tthis._nonOverflowView = n.div({\n\t\t\tclass: 'inline-edits-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: this._display,\n\t\t\t},\n\t\t}, [\n\t\t\tthis._backgroundSvg,\n\t\t\tderived(this, reader => this._shouldOverflow.read(reader) ? [] : [this._editorContainer, this._originalOverlay, this._modifiedOverlay]),\n\t\t]).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._nonOverflowView.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\tconst x = this._previewEditorLayoutInfo.read(reader)?.maxContentWidth;\n\t\t\t\tif (x === undefined) { return 0; }\n\t\t\t\treturn x;\n\t\t\t}),\n\t\t}));\n\n\t\tthis.previewEditor.setModel(this._previewTextModel);\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst layoutInfo = this._previewEditorLayoutInfo.read(reader);\n\t\t\tif (!layoutInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst editorRect = layoutInfo.editRect.withMargin(-VERTICAL_PADDING, -HORIZONTAL_PADDING);\n\n\t\t\tthis.previewEditor.layout({ height: editorRect.height, width: layoutInfo.previewEditorWidth + 15 /* Make sure editor does not scroll horizontally */ });\n\t\t\tthis._editorContainer.element.style.top = `${editorRect.top}px`;\n\t\t\tthis._editorContainer.element.style.left = `${editorRect.left}px`;\n\t\t\tthis._editorContainer.element.style.width = `${layoutInfo.previewEditorWidth + HORIZONTAL_PADDING}px`; // Set width to clip view zone\n\t\t\t//this._editorContainer.element.style.borderRadius = `0 ${BORDER_RADIUS}px ${BORDER_RADIUS}px 0`;\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst layoutInfo = this._previewEditorLayoutInfo.read(reader);\n\t\t\tif (!layoutInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._previewEditorObs.editor.setScrollLeft(layoutInfo.desiredPreviewEditorScrollLeft);\n\t\t}));\n\n\t\tthis._updatePreviewEditor.recomputeInitiallyAndOnChange(this._store);\n\t}\n\n\tprivate readonly _display;\n\n\tprivate readonly previewRef;\n\n\tprivate readonly _editorContainer;\n\n\tpublic readonly isHovered;\n\n\tpublic readonly previewEditor;\n\n\tprivate readonly _previewEditorObs;\n\n\tprivate _activeViewZones: string[];\n\tprivate readonly _updatePreviewEditor;\n\n\tprivate readonly _previewEditorWidth;\n\n\tprivate readonly _cursorPosIfTouchesEdit;\n\n\tprivate readonly _originalStartPosition;\n\n\tprivate readonly _originalEndPosition;\n\n\tprivate readonly _originalVerticalStartPosition;\n\tprivate readonly _originalVerticalEndPosition;\n\n\tprivate readonly _originalDisplayRange;\n\tprivate readonly _editorMaxContentWidthInRange;\n\n\tprivate readonly _previewEditorLayoutInfo;\n\n\tprivate _stickyScrollController;\n\tprivate readonly _stickyScrollHeight;\n\n\tprivate readonly _shouldOverflow;\n\n\tprivate readonly _originalBackgroundColor;\n\n\tprivate readonly _backgroundSvg;\n\n\tprivate readonly _originalOverlay;\n\n\tprivate readonly _modifiedOverlay;\n\n\tprivate readonly _nonOverflowView;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, getWindow, n } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Color } from '../../../../../../../base/common/color.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { IObservable, IReader, autorun, constObservable, derived, derivedObservableWithCache, observableFromEvent } from '../../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../../platform/instantiation/common/instantiation.js';\nimport { editorBackground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable, asCssVariableWithDefault } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { IThemeService } from '../../../../../../../platform/theme/common/themeService.js';\nimport { ICodeEditor } from '../../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { EmbeddedCodeEditorWidget } from '../../../../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Position } from '../../../../../../common/core/position.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { ITextModel } from '../../../../../../common/model.js';\nimport { StickyScrollController } from '../../../../../stickyScroll/browser/stickyScrollController.js';\nimport { InlineCompletionContextKeys } from '../../../controller/inlineCompletionContextKeys.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { InlineEditWithChanges } from '../inlineEditWithChanges.js';\nimport { getEditorBlendedColor, getModifiedBorderColor, getOriginalBorderColor, modifiedBackgroundColor, originalBackgroundColor } from '../theme.js';\nimport { PathBuilder, getContentRenderWidth, getOffsetForPos, mapOutFalsy, maxContentWidthInRange } from '../utils/utils.js';\n\nconst HORIZONTAL_PADDING = 0;\nconst VERTICAL_PADDING = 0;\nconst ENABLE_OVERFLOW = false;\n\nconst BORDER_WIDTH = 1;\nconst WIDGET_SEPARATOR_WIDTH = 1;\nconst WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH = 3;\nconst BORDER_RADIUS = 4;\nconst ORIGINAL_END_PADDING = 20;\nconst MODIFIED_END_PADDING = 12;\n\nexport class InlineEditsSideBySideView extends Disposable implements IInlineEditsView {\n\n\t// This is an approximation and should be improved by using the real parameters used bellow\n\tstatic fitsInsideViewport(editor: ICodeEditor, textModel: ITextModel, edit: InlineEditWithChanges, reader: IReader): boolean {\n\t\tconst editorObs = observableCodeEditor(editor);\n\t\tconst editorWidth = editorObs.layoutInfoWidth.read(reader);\n\t\tconst editorContentLeft = editorObs.layoutInfoContentLeft.read(reader);\n\t\tconst editorVerticalScrollbar = editor.getLayoutInfo().verticalScrollbarWidth;\n\t\tconst minimapWidth = editorObs.layoutInfoMinimap.read(reader).minimapLeft !== 0 ? editorObs.layoutInfoMinimap.read(reader).minimapWidth : 0;\n\n\t\tconst maxOriginalContent = maxContentWidthInRange(editorObs, edit.displayRange, undefined/* do not reconsider on each layout info change */);\n\t\tconst maxModifiedContent = edit.lineEdit.newLines.reduce((max, line) => Math.max(max, getContentRenderWidth(line, editor, textModel)), 0);\n\t\tconst originalPadding = ORIGINAL_END_PADDING; // padding after last line of original editor\n\t\tconst modifiedPadding = MODIFIED_END_PADDING + 2 * BORDER_WIDTH; // padding after last line of modified editor\n\n\t\treturn maxOriginalContent + maxModifiedContent + originalPadding + modifiedPadding < editorWidth - editorContentLeft - editorVerticalScrollbar - minimapWidth;\n\t}\n\n\tprivate readonly _editorObs;\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEditWithChanges | undefined>,\n\t\tprivate readonly _previewTextModel: ITextModel,\n\t\tprivate readonly _uiState: IObservable<{\n\t\t\tnewTextLineCount: number;\n\t\t\tisInDiffEditor: boolean;\n\t\t} | undefined>,\n\t\tprivate readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._display = derived(this, reader => !!this._uiState.read(reader) ? 'block' : 'none');\n\t\tthis.previewRef = n.ref<HTMLDivElement>();\n\t\tconst separatorWidthObs = this._uiState.map(s => s?.isInDiffEditor ? WIDGET_SEPARATOR_DIFF_EDITOR_WIDTH : WIDGET_SEPARATOR_WIDTH);\n\t\tthis._editorContainer = n.div({\n\t\t\tclass: ['editorContainer'],\n\t\t\tstyle: { position: 'absolute', overflow: 'hidden', cursor: 'pointer' },\n\t\t\tonmousedown: e => {\n\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t},\n\t\t\tonclick: (e) => {\n\t\t\t\tthis._onDidClick.fire(new StandardMouseEvent(getWindow(e), e));\n\t\t\t}\n\t\t}, [\n\t\t\tn.div({ class: 'preview', style: { pointerEvents: 'none' }, ref: this.previewRef }),\n\t\t]).keepUpdated(this._store);\n\t\tthis.isHovered = this._editorContainer.didMouseMoveDuringHover;\n\t\tthis.previewEditor = this._register(this._instantiationService.createInstance(\n\t\t\tEmbeddedCodeEditorWidget,\n\t\t\tthis.previewRef.element,\n\t\t\t{\n\t\t\t\tglyphMargin: false,\n\t\t\t\tlineNumbers: 'off',\n\t\t\t\tminimap: { enabled: false },\n\t\t\t\tguides: {\n\t\t\t\t\tindentation: false,\n\t\t\t\t\tbracketPairs: false,\n\t\t\t\t\tbracketPairsHorizontal: false,\n\t\t\t\t\thighlightActiveIndentation: false,\n\t\t\t\t},\n\t\t\t\trulers: [],\n\t\t\t\tpadding: { top: 0, bottom: 0 },\n\t\t\t\tfolding: false,\n\t\t\t\tselectOnLineNumbers: false,\n\t\t\t\tselectionHighlight: false,\n\t\t\t\tcolumnSelection: false,\n\t\t\t\toverviewRulerBorder: false,\n\t\t\t\toverviewRulerLanes: 0,\n\t\t\t\tlineDecorationsWidth: 0,\n\t\t\t\tlineNumbersMinChars: 0,\n\t\t\t\trevealHorizontalRightPadding: 0,\n\t\t\t\tbracketPairColorization: { enabled: true, independentColorPoolPerBracketType: false },\n\t\t\t\tscrollBeyondLastLine: false,\n\t\t\t\tscrollbar: {\n\t\t\t\t\tvertical: 'hidden',\n\t\t\t\t\thorizontal: 'hidden',\n\t\t\t\t\thandleMouseWheel: false,\n\t\t\t\t},\n\t\t\t\treadOnly: true,\n\t\t\t\twordWrap: 'off',\n\t\t\t\twordWrapOverride1: 'off',\n\t\t\t\twordWrapOverride2: 'off',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcontextKeyValues: {\n\t\t\t\t\t[InlineCompletionContextKeys.inInlineEditsPreviewEditor.key]: true,\n\t\t\t\t},\n\t\t\t\tcontributions: [],\n\t\t\t},\n\t\t\tthis._editor\n\t\t));\n\t\tthis._previewEditorObs = observableCodeEditor(this.previewEditor);\n\t\tthis._activeViewZones = [];\n\t\tthis._updatePreviewEditor = derived(this, reader => {\n\t\t\tthis._editorContainer.readEffect(reader);\n\t\t\tthis._previewEditorObs.model.read(reader); // update when the model is set\n\n\t\t\t// Setting this here explicitly to make sure that the preview editor is\n\t\t\t// visible when needed, we're also checking that these fields are defined\n\t\t\t// because of the auto run initial\n\t\t\t// Before removing these, verify with a non-monospace font family\n\t\t\tthis._display.read(reader);\n\t\t\tif (this._nonOverflowView) {\n\t\t\t\tthis._nonOverflowView.element.style.display = this._display.read(reader);\n\t\t\t}\n\n\t\t\tconst uiState = this._uiState.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!uiState || !edit) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst range = edit.originalLineRange;\n\n\t\t\tconst hiddenAreas: Range[] = [];\n\t\t\tif (range.startLineNumber > 1) {\n\t\t\t\thiddenAreas.push(new Range(1, 1, range.startLineNumber - 1, 1));\n\t\t\t}\n\t\t\tif (range.startLineNumber + uiState.newTextLineCount < this._previewTextModel.getLineCount() + 1) {\n\t\t\t\thiddenAreas.push(new Range(range.startLineNumber + uiState.newTextLineCount, 1, this._previewTextModel.getLineCount() + 1, 1));\n\t\t\t}\n\n\t\t\tthis.previewEditor.setHiddenAreas(hiddenAreas, undefined, true);\n\n\t\t\t// TODO: is this the proper way to handle viewzones?\n\t\t\tconst previousViewZones = [...this._activeViewZones];\n\t\t\tthis._activeViewZones = [];\n\n\t\t\tconst reducedLinesCount = (range.endLineNumberExclusive - range.startLineNumber) - uiState.newTextLineCount;\n\t\t\tthis.previewEditor.changeViewZones((changeAccessor) => {\n\t\t\t\tpreviousViewZones.forEach(id => changeAccessor.removeZone(id));\n\n\t\t\t\tif (reducedLinesCount > 0) {\n\t\t\t\t\tthis._activeViewZones.push(changeAccessor.addZone({\n\t\t\t\t\t\tafterLineNumber: range.startLineNumber + uiState.newTextLineCount - 1,\n\t\t\t\t\t\theightInLines: reducedLinesCount,\n\t\t\t\t\t\tshowInHiddenAreas: true,\n\t\t\t\t\t\tdomNode: $('div.diagonal-fill.inline-edits-view-zone'),\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis._previewEditorWidth = derived(this, reader => {\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit) { return 0; }\n\t\t\tthis._updatePreviewEditor.read(reader);\n\n\t\t\treturn maxContentWidthInRange(this._previewEditorObs, edit.modifiedLineRange, reader);\n\t\t});\n\t\tthis._cursorPosIfTouchesEdit = derived(this, reader => {\n\t\t\tconst cursorPos = this._editorObs.cursorPosition.read(reader);\n\t\t\tconst edit = this._edit.read(reader);\n\t\t\tif (!edit || !cursorPos) { return undefined; }\n\t\t\treturn edit.modifiedLineRange.contains(cursorPos.lineNumber) ? cursorPos : undefined;\n\t\t});\n\t\tthis._originalStartPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.startLineNumber, 1) : null;\n\t\t});\n\t\tthis._originalEndPosition = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\treturn inlineEdit ? new Position(inlineEdit.originalLineRange.endLineNumberExclusive, 1) : null;\n\t\t});\n\t\tthis._originalVerticalStartPosition = this._editorObs.observePosition(this._originalStartPosition, this._store).map(p => p?.y);\n\t\tthis._originalVerticalEndPosition = this._editorObs.observePosition(this._originalEndPosition, this._store).map(p => p?.y);\n\t\tthis._originalDisplayRange = this._edit.map(e => e?.displayRange);\n\t\tthis._editorMaxContentWidthInRange = derived(this, reader => {\n\t\t\tconst originalDisplayRange = this._originalDisplayRange.read(reader);\n\t\t\tif (!originalDisplayRange) {\n\t\t\t\treturn constObservable(0);\n\t\t\t}\n\t\t\tthis._editorObs.versionId.read(reader);\n\n\t\t\t// Take the max value that we observed.\n\t\t\t// Reset when either the edit changes or the editor text version.\n\t\t\treturn derivedObservableWithCache<number>(this, (reader, lastValue) => {\n\t\t\t\tconst maxWidth = maxContentWidthInRange(this._editorObs, originalDisplayRange, reader);\n\t\t\t\treturn Math.max(maxWidth, lastValue ?? 0);\n\t\t\t});\n\t\t}).map((v, r) => v.read(r));\n\t\tthis._previewEditorLayoutInfo = derived(this, (reader) => {\n\t\t\tconst inlineEdit = this._edit.read(reader);\n\t\t\tif (!inlineEdit) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst state = this._uiState.read(reader);\n\t\t\tif (!state) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst range = inlineEdit.originalLineRange;\n\n\t\t\tconst horizontalScrollOffset = this._editorObs.scrollLeft.read(reader);\n\n\t\t\tconst editorContentMaxWidthInRange = this._editorMaxContentWidthInRange.read(reader);\n\t\t\tconst editorLayout = this._editorObs.layoutInfo.read(reader);\n\t\t\tconst previewContentWidth = this._previewEditorWidth.read(reader);\n\t\t\tconst editorContentAreaWidth = editorLayout.contentWidth - editorLayout.verticalScrollbarWidth;\n\t\t\tconst editorBoundingClientRect = this._editor.getContainerDomNode().getBoundingClientRect();\n\t\t\tconst clientContentAreaRight = editorLayout.contentLeft + editorLayout.contentWidth + editorBoundingClientRect.left;\n\t\t\tconst remainingWidthRightOfContent = getWindow(this._editor.getContainerDomNode()).innerWidth - clientContentAreaRight;\n\t\t\tconst remainingWidthRightOfEditor = getWindow(this._editor.getContainerDomNode()).innerWidth - editorBoundingClientRect.right;\n\t\t\tconst desiredMinimumWidth = Math.min(editorLayout.contentWidth * 0.3, previewContentWidth, 100);\n\t\t\tconst IN_EDITOR_DISPLACEMENT = 0;\n\t\t\tconst maximumAvailableWidth = IN_EDITOR_DISPLACEMENT + remainingWidthRightOfContent;\n\n\t\t\tconst cursorPos = this._cursorPosIfTouchesEdit.read(reader);\n\n\t\t\tconst maxPreviewEditorLeft = Math.max(\n\t\t\t\t// We're starting from the content area right and moving it left by IN_EDITOR_DISPLACEMENT and also by an amount to ensure some minimum desired width\n\t\t\t\teditorContentAreaWidth + horizontalScrollOffset - IN_EDITOR_DISPLACEMENT - Math.max(0, desiredMinimumWidth - maximumAvailableWidth),\n\t\t\t\t// But we don't want that the moving left ends up covering the cursor, so this will push it to the right again\n\t\t\t\tMath.min(\n\t\t\t\t\tcursorPos ? getOffsetForPos(this._editorObs, cursorPos, reader) + 50 : 0,\n\t\t\t\t\teditorContentAreaWidth + horizontalScrollOffset\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst previewEditorLeftInTextArea = Math.min(editorContentMaxWidthInRange + ORIGINAL_END_PADDING, maxPreviewEditorLeft);\n\n\t\t\tconst maxContentWidth = editorContentMaxWidthInRange + ORIGINAL_END_PADDING + previewContentWidth + 70;\n\n\t\t\tconst dist = maxPreviewEditorLeft - previewEditorLeftInTextArea;\n\n\t\t\tlet desiredPreviewEditorScrollLeft;\n\t\t\tlet codeRight;\n\t\t\tif (previewEditorLeftInTextArea > horizontalScrollOffset) {\n\t\t\t\tdesiredPreviewEditorScrollLeft = 0;\n\t\t\t\tcodeRight = editorLayout.contentLeft + previewEditorLeftInTextArea - horizontalScrollOffset;\n\t\t\t} else {\n\t\t\t\tdesiredPreviewEditorScrollLeft = horizontalScrollOffset - previewEditorLeftInTextArea;\n\t\t\t\tcodeRight = editorLayout.contentLeft;\n\t\t\t}\n\n\t\t\tconst selectionTop = this._originalVerticalStartPosition.read(reader) ?? this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\t\tconst selectionBottom = this._originalVerticalEndPosition.read(reader) ?? this._editor.getBottomForLineNumber(range.endLineNumberExclusive - 1) - this._editorObs.scrollTop.read(reader);\n\n\t\t\t// TODO: const { prefixLeftOffset } = getPrefixTrim(inlineEdit.edit.edits.map(e => e.range), inlineEdit.originalLineRange, [], this._editor);\n\t\t\tconst codeLeft = editorLayout.contentLeft - horizontalScrollOffset;\n\n\t\t\tlet codeRect = Rect.fromLeftTopRightBottom(codeLeft, selectionTop, codeRight, selectionBottom);\n\t\t\tconst isInsertion = codeRect.height === 0;\n\t\t\tif (!isInsertion) {\n\t\t\t\tcodeRect = codeRect.withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING);\n\t\t\t}\n\n\t\t\tconst previewLineHeights = this._previewEditorObs.observeLineHeightsForLineRange(inlineEdit.modifiedLineRange).read(reader);\n\t\t\tconst editHeight = previewLineHeights.reduce((acc, h) => acc + h, 0);\n\t\t\tconst codeHeight = selectionBottom - selectionTop;\n\t\t\tconst previewEditorHeight = Math.max(codeHeight, editHeight);\n\n\t\t\tconst clipped = dist === 0;\n\t\t\tconst codeEditDist = 0;\n\t\t\tconst previewEditorWidth = Math.min(previewContentWidth + MODIFIED_END_PADDING, remainingWidthRightOfEditor + editorLayout.width - editorLayout.contentLeft - codeEditDist);\n\n\t\t\tlet editRect = Rect.fromLeftTopWidthHeight(codeRect.right + codeEditDist, selectionTop, previewEditorWidth, previewEditorHeight);\n\t\t\tif (!isInsertion) {\n\t\t\t\teditRect = editRect.withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING).translateX(HORIZONTAL_PADDING + BORDER_WIDTH);\n\t\t\t} else {\n\t\t\t\t// Align top of edit with insertion line\n\t\t\t\teditRect = editRect.withMargin(VERTICAL_PADDING, HORIZONTAL_PADDING).translateY(VERTICAL_PADDING);\n\t\t\t}\n\n\t\t\t// debugView(debugLogRects({ codeRect, editRect }, this._editor.getDomNode()!), reader);\n\n\t\t\treturn {\n\t\t\t\tcodeRect,\n\t\t\t\teditRect,\n\t\t\t\tcodeScrollLeft: horizontalScrollOffset,\n\t\t\t\tcontentLeft: editorLayout.contentLeft,\n\n\t\t\t\tisInsertion,\n\t\t\t\tmaxContentWidth,\n\t\t\t\tshouldShowShadow: clipped,\n\t\t\t\tdesiredPreviewEditorScrollLeft,\n\t\t\t\tpreviewEditorWidth,\n\t\t\t};\n\t\t});\n\t\tthis._stickyScrollController = StickyScrollController.get(this._editorObs.editor);\n\t\tthis._stickyScrollHeight = this._stickyScrollController ? observableFromEvent(this._stickyScrollController.onDidChangeStickyScrollHeight, () => this._stickyScrollController!.stickyScrollWidgetHeight) : constObservable(0);\n\t\tthis._shouldOverflow = derived(this, reader => {\n\t\t\tif (!ENABLE_OVERFLOW) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst range = this._edit.read(reader)?.originalLineRange;\n\t\t\tif (!range) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst stickyScrollHeight = this._stickyScrollHeight.read(reader);\n\t\t\tconst top = this._editor.getTopForLineNumber(range.startLineNumber) - this._editorObs.scrollTop.read(reader);\n\t\t\tif (top <= stickyScrollHeight) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst bottom = this._editor.getTopForLineNumber(range.endLineNumberExclusive) - this._editorObs.scrollTop.read(reader);\n\t\t\tif (bottom >= this._editorObs.layoutInfo.read(reader).height) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tthis._originalBackgroundColor = observableFromEvent(this, this._themeService.onDidColorThemeChange, () => {\n\t\t\treturn this._themeService.getColorTheme().getColor(originalBackgroundColor) ?? Color.transparent;\n\t\t});\n\t\tthis._backgroundSvg = n.svg({\n\t\t\ttransform: 'translate(-0.5 -0.5)',\n\t\t\tstyle: { overflow: 'visible', pointerEvents: 'none', position: 'absolute' },\n\t\t}, [\n\t\t\tn.svgElem('path', {\n\t\t\t\tclass: 'rightOfModifiedBackgroundCoverUp',\n\t\t\t\td: derived(this, reader => {\n\t\t\t\t\tconst layoutInfo = this._previewEditorLayoutInfo.read(reader);\n\t\t\t\t\tif (!layoutInfo) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t\tconst originalBackgroundColor = this._originalBackgroundColor.read(reader);\n\t\t\t\t\tif (originalBackgroundColor.isTransparent()) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new PathBuilder()\n\t\t\t\t\t\t.moveTo(layoutInfo.codeRect.getRightTop())\n\t\t\t\t\t\t.lineTo(layoutInfo.codeRect.getRightTop().deltaX(1000))\n\t\t\t\t\t\t.lineTo(layoutInfo.codeRect.getRightBottom().deltaX(1000))\n\t\t\t\t\t\t.lineTo(layoutInfo.codeRect.getRightBottom())\n\t\t\t\t\t\t.build();\n\t\t\t\t}),\n\t\t\t\tstyle: {\n\t\t\t\t\tfill: asCssVariableWithDefault(editorBackground, 'transparent'),\n\t\t\t\t}\n\t\t\t}),\n\t\t]).keepUpdated(this._store);\n\t\tthis._originalOverlay = n.div({\n\t\t\tstyle: { pointerEvents: 'none', display: this._previewEditorLayoutInfo.map(layoutInfo => layoutInfo?.isInsertion ? 'none' : 'block') },\n\t\t}, derived(this, reader => {\n\t\t\tconst layoutInfoObs = mapOutFalsy(this._previewEditorLayoutInfo).read(reader);\n\t\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\t\tconst separatorWidth = separatorWidthObs.read(reader);\n\t\t\tconst borderStyling = getOriginalBorderColor(this._tabAction).map(bc => `${BORDER_WIDTH}px solid ${asCssVariable(bc)}`);\n\t\t\tconst borderStylingSeparator = `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`;\n\n\t\t\tconst hasBorderLeft = layoutInfoObs.read(reader).codeScrollLeft !== 0;\n\t\t\tconst isModifiedLower = layoutInfoObs.map(layoutInfo => layoutInfo.codeRect.bottom < layoutInfo.editRect.bottom);\n\t\t\tconst transitionRectSize = BORDER_RADIUS * 2 + BORDER_WIDTH * 2;\n\n\t\t\t// Create an overlay which hides the left hand side of the original overlay when it overflows to the left\n\t\t\t// such that there is a smooth transition at the edge of content left\n\t\t\tconst overlayHider = layoutInfoObs.map(layoutInfo => Rect.fromLeftTopRightBottom(\n\t\t\t\tlayoutInfo.contentLeft - BORDER_RADIUS - BORDER_WIDTH,\n\t\t\t\tlayoutInfo.codeRect.top,\n\t\t\t\tlayoutInfo.contentLeft,\n\t\t\t\tlayoutInfo.codeRect.bottom + transitionRectSize\n\t\t\t)).read(reader);\n\n\t\t\tconst intersectionLine = new OffsetRange(overlayHider.left, Number.MAX_SAFE_INTEGER);\n\t\t\tconst overlayRect = layoutInfoObs.map(layoutInfo => layoutInfo.codeRect.intersectHorizontal(intersectionLine));\n\t\t\tconst separatorRect = overlayRect.map(overlayRect => overlayRect.withMargin(separatorWidth, 0, separatorWidth, separatorWidth).intersectHorizontal(intersectionLine));\n\n\t\t\tconst transitionRect = overlayRect.map(overlayRect => Rect.fromLeftTopWidthHeight(overlayRect.right - transitionRectSize + BORDER_WIDTH, overlayRect.bottom - BORDER_WIDTH, transitionRectSize, transitionRectSize).intersectHorizontal(intersectionLine));\n\n\t\t\treturn [\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalSeparatorSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...separatorRect.read(reader).toStyles(),\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px 0 0 ${BORDER_RADIUS}px`,\n\t\t\t\t\t\tborderTop: borderStylingSeparator,\n\t\t\t\t\t\tborderBottom: borderStylingSeparator,\n\t\t\t\t\t\tborderLeft: hasBorderLeft ? 'none' : borderStylingSeparator,\n\t\t\t\t\t}\n\t\t\t\t}),\n\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalOverlaySideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\tborderRadius: `${BORDER_RADIUS}px 0 0 ${BORDER_RADIUS}px`,\n\t\t\t\t\t\tborderTop: borderStyling,\n\t\t\t\t\t\tborderBottom: borderStyling,\n\t\t\t\t\t\tborderLeft: hasBorderLeft ? 'none' : borderStyling,\n\t\t\t\t\t\tbackgroundColor: asCssVariable(originalBackgroundColor),\n\t\t\t\t\t}\n\t\t\t\t}),\n\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalCornerCutoutSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\tdisplay: isModifiedLower.map(isLower => isLower ? 'block' : 'none'),\n\t\t\t\t\t\t...transitionRect.read(reader).toStyles(),\n\t\t\t\t\t}\n\t\t\t\t}, [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tclass: 'originalCornerCutoutBackground',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute', top: '0px', left: '0px', width: '100%', height: '100%',\n\t\t\t\t\t\t\tbackgroundColor: getEditorBlendedColor(originalBackgroundColor, this._themeService).map(c => c.toString()),\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tclass: 'originalCornerCutoutBorder',\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute', top: '0px', left: '0px', width: '100%', height: '100%',\n\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\tborderTop: borderStyling,\n\t\t\t\t\t\t\tborderRight: borderStyling,\n\t\t\t\t\t\t\tborderRadius: `0 100% 0 0`,\n\t\t\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]),\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'originalOverlaySideBySideHider',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...overlayHider.toStyles(),\n\t\t\t\t\t\tbackgroundColor: asCssVariable(editorBackground),\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t];\n\t\t})).keepUpdated(this._store);\n\t\tthis._modifiedOverlay = n.div({\n\t\t\tstyle: { pointerEvents: 'none', }\n\t\t}, derived(this, reader => {\n\t\t\tconst layoutInfoObs = mapOutFalsy(this._previewEditorLayoutInfo).read(reader);\n\t\t\tif (!layoutInfoObs) { return undefined; }\n\n\t\t\tconst isModifiedLower = layoutInfoObs.map(layoutInfo => layoutInfo.codeRect.bottom < layoutInfo.editRect.bottom);\n\n\t\t\tconst separatorWidth = separatorWidthObs.read(reader);\n\t\t\tconst borderRadius = isModifiedLower.map(isLower => `0 ${BORDER_RADIUS}px ${BORDER_RADIUS}px ${isLower ? BORDER_RADIUS : 0}px`);\n\t\t\tconst borderStyling = getEditorBlendedColor(getModifiedBorderColor(this._tabAction), this._themeService).map(c => `1px solid ${c.toString()}`);\n\t\t\tconst borderStylingSeparator = `${BORDER_WIDTH + separatorWidth}px solid ${asCssVariable(editorBackground)}`;\n\n\t\t\tconst overlayRect = layoutInfoObs.map(layoutInfo => layoutInfo.editRect.withMargin(0, BORDER_WIDTH));\n\t\t\tconst separatorRect = overlayRect.map(overlayRect => overlayRect.withMargin(separatorWidth, separatorWidth, separatorWidth, 0));\n\n\t\t\tconst insertionRect = derived(this, reader => {\n\t\t\t\tconst overlay = overlayRect.read(reader);\n\t\t\t\tconst layoutinfo = layoutInfoObs.read(reader);\n\t\t\t\tif (!layoutinfo.isInsertion || layoutinfo.contentLeft >= overlay.left) {\n\t\t\t\t\treturn Rect.fromLeftTopWidthHeight(overlay.left, overlay.top, 0, 0);\n\t\t\t\t}\n\t\t\t\treturn new Rect(layoutinfo.contentLeft, overlay.top, overlay.left, overlay.top + BORDER_WIDTH * 2);\n\t\t\t});\n\n\t\t\treturn [\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'modifiedInsertionSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...insertionRect.read(reader).toStyles(),\n\t\t\t\t\t\tbackgroundColor: getModifiedBorderColor(this._tabAction).map(c => asCssVariable(c)),\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'modifiedSeparatorSideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...separatorRect.read(reader).toStyles(),\n\t\t\t\t\t\tborderRadius,\n\t\t\t\t\t\tborderTop: borderStylingSeparator,\n\t\t\t\t\t\tborderBottom: borderStylingSeparator,\n\t\t\t\t\t\tborderRight: borderStylingSeparator,\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tn.div({\n\t\t\t\t\tclass: 'modifiedOverlaySideBySide',\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\t...overlayRect.read(reader).toStyles(),\n\t\t\t\t\t\tborderRadius,\n\t\t\t\t\t\tborder: borderStyling,\n\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\tbackgroundColor: asCssVariable(modifiedBackgroundColor),\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t];\n\t\t})).keepUpdated(this._store);\n\t\tthis._nonOverflowView = n.div({\n\t\t\tclass: 'inline-edits-view',\n\t\t\tstyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\toverflow: 'visible',\n\t\t\t\ttop: '0px',\n\t\t\t\tleft: '0px',\n\t\t\t\tdisplay: this._display,\n\t\t\t},\n\t\t}, [\n\t\t\tthis._backgroundSvg,\n\t\t\tderived(this, reader => this._shouldOverflow.read(reader) ? [] : [this._editorContainer, this._originalOverlay, this._modifiedOverlay]),\n\t\t]).keepUpdated(this._store);\n\n\t\tthis._register(this._editorObs.createOverlayWidget({\n\t\t\tdomNode: this._nonOverflowView.element,\n\t\t\tposition: constObservable(null),\n\t\t\tallowEditorOverflow: false,\n\t\t\tminContentWidthInPx: derived(this, reader => {\n\t\t\t\tconst x = this._previewEditorLayoutInfo.read(reader)?.maxContentWidth;\n\t\t\t\tif (x === undefined) { return 0; }\n\t\t\t\treturn x;\n\t\t\t}),\n\t\t}));\n\n\t\tthis.previewEditor.setModel(this._previewTextModel);\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst layoutInfo = this._previewEditorLayoutInfo.read(reader);\n\t\t\tif (!layoutInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst editorRect = layoutInfo.editRect.withMargin(-VERTICAL_PADDING, -HORIZONTAL_PADDING);\n\n\t\t\tthis.previewEditor.layout({ height: editorRect.height, width: layoutInfo.previewEditorWidth + 15 /* Make sure editor does not scroll horizontally */ });\n\t\t\tthis._editorContainer.element.style.top = `${editorRect.top}px`;\n\t\t\tthis._editorContainer.element.style.left = `${editorRect.left}px`;\n\t\t\tthis._editorContainer.element.style.width = `${layoutInfo.previewEditorWidth + HORIZONTAL_PADDING}px`; // Set width to clip view zone\n\t\t\t//this._editorContainer.element.style.borderRadius = `0 ${BORDER_RADIUS}px ${BORDER_RADIUS}px 0`;\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst layoutInfo = this._previewEditorLayoutInfo.read(reader);\n\t\t\tif (!layoutInfo) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._previewEditorObs.editor.setScrollLeft(layoutInfo.desiredPreviewEditorScrollLeft);\n\t\t}));\n\n\t\tthis._updatePreviewEditor.recomputeInitiallyAndOnChange(this._store);\n\t}\n\n\tprivate readonly _display;\n\n\tprivate readonly previewRef;\n\n\tprivate readonly _editorContainer;\n\n\tpublic readonly isHovered;\n\n\tpublic readonly previewEditor;\n\n\tprivate readonly _previewEditorObs;\n\n\tprivate _activeViewZones: string[];\n\tprivate readonly _updatePreviewEditor;\n\n\tprivate readonly _previewEditorWidth;\n\n\tprivate readonly _cursorPosIfTouchesEdit;\n\n\tprivate readonly _originalStartPosition;\n\n\tprivate readonly _originalEndPosition;\n\n\tprivate readonly _originalVerticalStartPosition;\n\tprivate readonly _originalVerticalEndPosition;\n\n\tprivate readonly _originalDisplayRange;\n\tprivate readonly _editorMaxContentWidthInRange;\n\n\tprivate readonly _previewEditorLayoutInfo;\n\n\tprivate _stickyScrollController;\n\tprivate readonly _stickyScrollHeight;\n\n\tprivate readonly _shouldOverflow;\n\n\tprivate readonly _originalBackgroundColor;\n\n\tprivate readonly _backgroundSvg;\n\n\tprivate readonly _originalOverlay;\n\n\tprivate readonly _modifiedOverlay;\n\n\tprivate readonly _nonOverflowView;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8205, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsWordReplacementView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsWordReplacementView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/inlineEditsWordReplacementView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow, n, ObserverNodeWithElement } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable, observableValue } from '../../../../../../../base/common/observable.js';\nimport { editorBackground, editorHoverForeground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { StringReplacement } from '../../../../../../common/core/edits/stringEdit.js';\nimport { TextReplacement } from '../../../../../../common/core/edits/textEdit.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getModifiedBorderColor, getOriginalBorderColor, modifiedChangedTextOverlayColor, originalChangedTextOverlayColor } from '../theme.js';\nimport { getEditorValidOverlayRect, mapOutFalsy, rectToProps } from '../utils/utils.js';\n\nconst BORDER_WIDTH = 1;\n\nexport class InlineEditsWordReplacementView extends Disposable implements IInlineEditsView {\n\n\tpublic static MAX_LENGTH = 100;\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tprivate readonly _start;\n\tprivate readonly _end;\n\n\tprivate readonly _line;\n\n\tprivate readonly _hoverableElement;\n\n\treadonly isHovered;\n\n\treadonly minEditorScrollHeight;\n\n\tconstructor(\n\t\tprivate readonly _editor: ObservableCodeEditor,\n\t\t/** Must be single-line in both sides */\n\t\tprivate readonly _edit: TextReplacement,\n\t\tprotected readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._start = this._editor.observePosition(constObservable(this._edit.range.getStartPosition()), this._store);\n\t\tthis._end = this._editor.observePosition(constObservable(this._edit.range.getEndPosition()), this._store);\n\t\tthis._line = document.createElement('div');\n\t\tthis._hoverableElement = observableValue<ObserverNodeWithElement | null>(this, null);\n\t\tthis.isHovered = this._hoverableElement.map((e, reader) => e?.didMouseMoveDuringHover.read(reader) ?? false);\n\t\tthis._renderTextEffect = derived(this, _reader => {\n\t\t\tconst tm = this._editor.model.get()!;\n\t\t\tconst origLine = tm.getLineContent(this._edit.range.startLineNumber);\n\n\t\t\tconst edit = StringReplacement.replace(new OffsetRange(this._edit.range.startColumn - 1, this._edit.range.endColumn - 1), this._edit.text);\n\t\t\tconst lineToTokenize = edit.replace(origLine);\n\t\t\tconst t = tm.tokenization.tokenizeLinesAt(this._edit.range.startLineNumber, [lineToTokenize])?.[0];\n\t\t\tlet tokens: LineTokens;\n\t\t\tif (t) {\n\t\t\t\ttokens = TokenArray.fromLineTokens(t).slice(edit.getRangeAfterReplace()).toLineTokens(this._edit.text, this._languageService.languageIdCodec);\n\t\t\t} else {\n\t\t\t\ttokens = LineTokens.createEmpty(this._edit.text, this._languageService.languageIdCodec);\n\t\t\t}\n\t\t\tconst res = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor.editor).withSetWidth(false).withScrollBeyondLastColumn(0), [], this._line, true);\n\t\t\tthis._line.style.width = `${res.minWidthInPx}px`;\n\t\t});\n\t\tconst modifiedLineHeight = this._editor.observeLineHeightForPosition(this._edit.range.getStartPosition());\n\t\tthis._layout = derived(this, reader => {\n\t\t\tthis._renderTextEffect.read(reader);\n\t\t\tconst widgetStart = this._start.read(reader);\n\t\t\tconst widgetEnd = this._end.read(reader);\n\n\t\t\t// TODO@hediet better about widgetStart and widgetEnd in a single transaction!\n\t\t\tif (!widgetStart || !widgetEnd || widgetStart.x > widgetEnd.x || widgetStart.y > widgetEnd.y) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst lineHeight = modifiedLineHeight.read(reader);\n\t\t\tconst scrollLeft = this._editor.scrollLeft.read(reader);\n\t\t\tconst w = this._editor.getOption(EditorOption.fontInfo).read(reader).typicalHalfwidthCharacterWidth;\n\n\t\t\tconst modifiedLeftOffset = 3 * w;\n\t\t\tconst modifiedTopOffset = 4;\n\t\t\tconst modifiedOffset = new Point(modifiedLeftOffset, modifiedTopOffset);\n\n\t\t\tconst originalLine = Rect.fromPoints(widgetStart, widgetEnd).withHeight(lineHeight).translateX(-scrollLeft);\n\t\t\tconst modifiedLine = Rect.fromPointSize(originalLine.getLeftBottom().add(modifiedOffset), new Point(this._edit.text.length * w, originalLine.height));\n\n\t\t\tconst lowerBackground = modifiedLine.withLeft(originalLine.left);\n\n\t\t\t// debugView(debugLogRects({ lowerBackground }, this._editor.editor.getContainerDomNode()), reader);\n\n\t\t\treturn {\n\t\t\t\toriginalLine,\n\t\t\t\tmodifiedLine,\n\t\t\t\tlowerBackground,\n\t\t\t\tlineHeight,\n\t\t\t};\n\t\t});\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\tif (!layout) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn layout.read(reader).modifiedLine.bottom + BORDER_WIDTH + this._editor.editor.getScrollTop();\n\t\t});\n\t\tthis._root = n.div({\n\t\t\tclass: 'word-replacement',\n\t\t}, [\n\t\t\tderived(this, reader => {\n\t\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\t\tif (!layout) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst originalBorderColor = getOriginalBorderColor(this._tabAction).map(c => asCssVariable(c)).read(reader);\n\t\t\t\tconst modifiedBorderColor = getModifiedBorderColor(this._tabAction).map(c => asCssVariable(c)).read(reader);\n\n\t\t\t\treturn [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editor).read(r)),\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerBackground.withMargin(BORDER_WIDTH, 2 * BORDER_WIDTH, BORDER_WIDTH, 0)),\n\t\t\t\t\t\t\t\tbackground: asCssVariable(editorBackground),\n\t\t\t\t\t\t\t\t//boxShadow: `${asCssVariable(scrollbarShadow)} 0 6px 6px -6px`,\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmousedown: e => {\n\t\t\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmouseup: (e) => this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)),\n\t\t\t\t\t\t\tobsRef: (elem) => {\n\t\t\t\t\t\t\t\tthis._hoverableElement.set(elem, undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).modifiedLine.withMargin(BORDER_WIDTH, 2 * BORDER_WIDTH)),\n\t\t\t\t\t\t\t\tfontFamily: this._editor.getOption(EditorOption.fontFamily),\n\t\t\t\t\t\t\t\tfontSize: this._editor.getOption(EditorOption.fontSize),\n\t\t\t\t\t\t\t\tfontWeight: this._editor.getOption(EditorOption.fontWeight),\n\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\tborder: `${BORDER_WIDTH}px solid ${modifiedBorderColor}`,\n\n\t\t\t\t\t\t\t\tbackground: asCssVariable(modifiedChangedTextOverlayColor),\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\n\t\t\t\t\t\t\t\toutline: `2px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [this._line]),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).originalLine.withMargin(BORDER_WIDTH)),\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\tborder: `${BORDER_WIDTH}px solid ${originalBorderColor}`,\n\t\t\t\t\t\t\t\tbackground: asCssVariable(originalChangedTextOverlayColor),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, []),\n\n\t\t\t\t\t\tn.svg({\n\t\t\t\t\t\t\twidth: 11,\n\t\t\t\t\t\t\theight: 14,\n\t\t\t\t\t\t\tviewBox: '0 0 11 14',\n\t\t\t\t\t\t\tfill: 'none',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\tleft: layout.map(l => l.modifiedLine.left - 16),\n\t\t\t\t\t\t\t\ttop: layout.map(l => l.modifiedLine.top + Math.round((l.lineHeight - 14 - 5) / 2)),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tn.svgElem('path', {\n\t\t\t\t\t\t\t\td: 'M1 0C1 2.98966 1 5.92087 1 8.49952C1 9.60409 1.89543 10.5 3 10.5H10.5',\n\t\t\t\t\t\t\t\tstroke: asCssVariable(editorHoverForeground),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tn.svgElem('path', {\n\t\t\t\t\t\t\t\td: 'M6 7.5L9.99999 10.49998L6 13.5',\n\t\t\t\t\t\t\t\tstroke: asCssVariable(editorHoverForeground),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]),\n\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\t})\n\t\t]).keepUpdated(this._store);\n\n\t\tthis._register(this._editor.createOverlayWidget({\n\t\t\tdomNode: this._root.element,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t\tposition: constObservable({ preference: { top: 0, left: 0 } }),\n\t\t\tallowEditorOverflow: false,\n\t\t}));\n\t}\n\n\tprivate readonly _renderTextEffect;\n\n\tprivate readonly _layout;\n\n\tprivate readonly _root;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getWindow, n, ObserverNodeWithElement } from '../../../../../../../base/browser/dom.js';\nimport { IMouseEvent, StandardMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { constObservable, derived, IObservable, observableValue } from '../../../../../../../base/common/observable.js';\nimport { editorBackground, editorHoverForeground } from '../../../../../../../platform/theme/common/colorRegistry.js';\nimport { asCssVariable } from '../../../../../../../platform/theme/common/colorUtils.js';\nimport { ObservableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { LineSource, renderLines, RenderOptions } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/renderLines.js';\nimport { EditorOption } from '../../../../../../common/config/editorOptions.js';\nimport { Point } from '../../../../../../common/core/2d/point.js';\nimport { Rect } from '../../../../../../common/core/2d/rect.js';\nimport { StringReplacement } from '../../../../../../common/core/edits/stringEdit.js';\nimport { TextReplacement } from '../../../../../../common/core/edits/textEdit.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { ILanguageService } from '../../../../../../common/languages/language.js';\nimport { LineTokens, TokenArray } from '../../../../../../common/tokens/lineTokens.js';\nimport { IInlineEditsView, InlineEditTabAction } from '../inlineEditsViewInterface.js';\nimport { getModifiedBorderColor, getOriginalBorderColor, modifiedChangedTextOverlayColor, originalChangedTextOverlayColor } from '../theme.js';\nimport { getEditorValidOverlayRect, mapOutFalsy, rectToProps } from '../utils/utils.js';\n\nconst BORDER_WIDTH = 1;\n\nexport class InlineEditsWordReplacementView extends Disposable implements IInlineEditsView {\n\n\tpublic static MAX_LENGTH = 100;\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\tprivate readonly _start;\n\tprivate readonly _end;\n\n\tprivate readonly _line;\n\n\tprivate readonly _hoverableElement;\n\n\treadonly isHovered;\n\n\treadonly minEditorScrollHeight;\n\n\tconstructor(\n\t\tprivate readonly _editor: ObservableCodeEditor,\n\t\t/** Must be single-line in both sides */\n\t\tprivate readonly _edit: TextReplacement,\n\t\tprotected readonly _tabAction: IObservable<InlineEditTabAction>,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis._start = this._editor.observePosition(constObservable(this._edit.range.getStartPosition()), this._store);\n\t\tthis._end = this._editor.observePosition(constObservable(this._edit.range.getEndPosition()), this._store);\n\t\tthis._line = document.createElement('div');\n\t\tthis._hoverableElement = observableValue<ObserverNodeWithElement | null>(this, null);\n\t\tthis.isHovered = this._hoverableElement.map((e, reader) => e?.didMouseMoveDuringHover.read(reader) ?? false);\n\t\tthis._renderTextEffect = derived(this, _reader => {\n\t\t\tconst tm = this._editor.model.get()!;\n\t\t\tconst origLine = tm.getLineContent(this._edit.range.startLineNumber);\n\n\t\t\tconst edit = StringReplacement.replace(new OffsetRange(this._edit.range.startColumn - 1, this._edit.range.endColumn - 1), this._edit.text);\n\t\t\tconst lineToTokenize = edit.replace(origLine);\n\t\t\tconst t = tm.tokenization.tokenizeLinesAt(this._edit.range.startLineNumber, [lineToTokenize])?.[0];\n\t\t\tlet tokens: LineTokens;\n\t\t\tif (t) {\n\t\t\t\ttokens = TokenArray.fromLineTokens(t).slice(edit.getRangeAfterReplace()).toLineTokens(this._edit.text, this._languageService.languageIdCodec);\n\t\t\t} else {\n\t\t\t\ttokens = LineTokens.createEmpty(this._edit.text, this._languageService.languageIdCodec);\n\t\t\t}\n\t\t\tconst res = renderLines(new LineSource([tokens]), RenderOptions.fromEditor(this._editor.editor).withSetWidth(false).withScrollBeyondLastColumn(0), [], this._line, true);\n\t\t\tthis._line.style.width = `${res.minWidthInPx}px`;\n\t\t});\n\t\tconst modifiedLineHeight = this._editor.observeLineHeightForPosition(this._edit.range.getStartPosition());\n\t\tthis._layout = derived(this, reader => {\n\t\t\tthis._renderTextEffect.read(reader);\n\t\t\tconst widgetStart = this._start.read(reader);\n\t\t\tconst widgetEnd = this._end.read(reader);\n\n\t\t\t// TODO@hediet better about widgetStart and widgetEnd in a single transaction!\n\t\t\tif (!widgetStart || !widgetEnd || widgetStart.x > widgetEnd.x || widgetStart.y > widgetEnd.y) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst lineHeight = modifiedLineHeight.read(reader);\n\t\t\tconst scrollLeft = this._editor.scrollLeft.read(reader);\n\t\t\tconst w = this._editor.getOption(EditorOption.fontInfo).read(reader).typicalHalfwidthCharacterWidth;\n\n\t\t\tconst modifiedLeftOffset = 3 * w;\n\t\t\tconst modifiedTopOffset = 4;\n\t\t\tconst modifiedOffset = new Point(modifiedLeftOffset, modifiedTopOffset);\n\n\t\t\tconst originalLine = Rect.fromPoints(widgetStart, widgetEnd).withHeight(lineHeight).translateX(-scrollLeft);\n\t\t\tconst modifiedLine = Rect.fromPointSize(originalLine.getLeftBottom().add(modifiedOffset), new Point(this._edit.text.length * w, originalLine.height));\n\n\t\t\tconst lowerBackground = modifiedLine.withLeft(originalLine.left);\n\n\t\t\t// debugView(debugLogRects({ lowerBackground }, this._editor.editor.getContainerDomNode()), reader);\n\n\t\t\treturn {\n\t\t\t\toriginalLine,\n\t\t\t\tmodifiedLine,\n\t\t\t\tlowerBackground,\n\t\t\t\tlineHeight,\n\t\t\t};\n\t\t});\n\t\tthis.minEditorScrollHeight = derived(this, reader => {\n\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\tif (!layout) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn layout.read(reader).modifiedLine.bottom + BORDER_WIDTH + this._editor.editor.getScrollTop();\n\t\t});\n\t\tthis._root = n.div({\n\t\t\tclass: 'word-replacement',\n\t\t}, [\n\t\t\tderived(this, reader => {\n\t\t\t\tconst layout = mapOutFalsy(this._layout).read(reader);\n\t\t\t\tif (!layout) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst originalBorderColor = getOriginalBorderColor(this._tabAction).map(c => asCssVariable(c)).read(reader);\n\t\t\t\tconst modifiedBorderColor = getModifiedBorderColor(this._tabAction).map(c => asCssVariable(c)).read(reader);\n\n\t\t\t\treturn [\n\t\t\t\t\tn.div({\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t...rectToProps((r) => getEditorValidOverlayRect(this._editor).read(r)),\n\t\t\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t}\n\t\t\t\t\t}, [\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).lowerBackground.withMargin(BORDER_WIDTH, 2 * BORDER_WIDTH, BORDER_WIDTH, 0)),\n\t\t\t\t\t\t\t\tbackground: asCssVariable(editorBackground),\n\t\t\t\t\t\t\t\t//boxShadow: `${asCssVariable(scrollbarShadow)} 0 6px 6px -6px`,\n\t\t\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmousedown: e => {\n\t\t\t\t\t\t\t\te.preventDefault(); // This prevents that the editor loses focus\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonmouseup: (e) => this._onDidClick.fire(new StandardMouseEvent(getWindow(e), e)),\n\t\t\t\t\t\t\tobsRef: (elem) => {\n\t\t\t\t\t\t\t\tthis._hoverableElement.set(elem, undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).modifiedLine.withMargin(BORDER_WIDTH, 2 * BORDER_WIDTH)),\n\t\t\t\t\t\t\t\tfontFamily: this._editor.getOption(EditorOption.fontFamily),\n\t\t\t\t\t\t\t\tfontSize: this._editor.getOption(EditorOption.fontSize),\n\t\t\t\t\t\t\t\tfontWeight: this._editor.getOption(EditorOption.fontWeight),\n\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\tborder: `${BORDER_WIDTH}px solid ${modifiedBorderColor}`,\n\n\t\t\t\t\t\t\t\tbackground: asCssVariable(modifiedChangedTextOverlayColor),\n\t\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\t\talignItems: 'center',\n\n\t\t\t\t\t\t\t\toutline: `2px solid ${asCssVariable(editorBackground)}`,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [this._line]),\n\t\t\t\t\t\tn.div({\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t...rectToProps(reader => layout.read(reader).originalLine.withMargin(BORDER_WIDTH)),\n\t\t\t\t\t\t\t\tboxSizing: 'border-box',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\tborder: `${BORDER_WIDTH}px solid ${originalBorderColor}`,\n\t\t\t\t\t\t\t\tbackground: asCssVariable(originalChangedTextOverlayColor),\n\t\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, []),\n\n\t\t\t\t\t\tn.svg({\n\t\t\t\t\t\t\twidth: 11,\n\t\t\t\t\t\t\theight: 14,\n\t\t\t\t\t\t\tviewBox: '0 0 11 14',\n\t\t\t\t\t\t\tfill: 'none',\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\tleft: layout.map(l => l.modifiedLine.left - 16),\n\t\t\t\t\t\t\t\ttop: layout.map(l => l.modifiedLine.top + Math.round((l.lineHeight - 14 - 5) / 2)),\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, [\n\t\t\t\t\t\t\tn.svgElem('path', {\n\t\t\t\t\t\t\t\td: 'M1 0C1 2.98966 1 5.92087 1 8.49952C1 9.60409 1.89543 10.5 3 10.5H10.5',\n\t\t\t\t\t\t\t\tstroke: asCssVariable(editorHoverForeground),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tn.svgElem('path', {\n\t\t\t\t\t\t\t\td: 'M6 7.5L9.99999 10.49998L6 13.5',\n\t\t\t\t\t\t\t\tstroke: asCssVariable(editorHoverForeground),\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t]),\n\n\t\t\t\t\t])\n\t\t\t\t];\n\t\t\t})\n\t\t]).keepUpdated(this._store);\n\n\t\tthis._register(this._editor.createOverlayWidget({\n\t\t\tdomNode: this._root.element,\n\t\t\tminContentWidthInPx: constObservable(0),\n\t\t\tposition: constObservable({ preference: { top: 0, left: 0 } }),\n\t\t\tallowEditorOverflow: false,\n\t\t}));\n\t}\n\n\tprivate readonly _renderTextEffect;\n\n\tprivate readonly _layout;\n\n\tprivate readonly _root;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8440, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/originalEditorInlineDiffView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/originalEditorInlineDiffView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViews/originalEditorInlineDiffView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, derived, IObservable, observableFromEvent } from '../../../../../../../base/common/observable.js';\nimport { ICodeEditor, MouseTargetType } from '../../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { rangeIsSingleLine } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { AbstractText } from '../../../../../../common/core/text/abstractText.js';\nimport { DetailedLineRangeMapping } from '../../../../../../common/diff/rangeMapping.js';\nimport { EndOfLinePreference, IModelDeltaDecoration, InjectedTextCursorStops, ITextModel } from '../../../../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../../../../common/model/textModel.js';\nimport { IInlineEditsView } from '../inlineEditsViewInterface.js';\nimport { classNames } from '../utils/utils.js';\n\nexport interface IOriginalEditorInlineDiffViewState {\n\tdiff: DetailedLineRangeMapping[];\n\tmodifiedText: AbstractText;\n\tmode: 'insertionInline' | 'sideBySide' | 'deletion' | 'lineReplacement';\n\tisInDiffEditor: boolean;\n\n\tmodifiedCodeEditor: ICodeEditor;\n}\n\nexport class OriginalEditorInlineDiffView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\treadonly isHovered;\n\n\tprivate readonly _tokenizationFinished;\n\n\tconstructor(\n\t\tprivate readonly _originalEditor: ICodeEditor,\n\t\tprivate readonly _state: IObservable<IOriginalEditorInlineDiffViewState | undefined>,\n\t\tprivate readonly _modifiedTextModel: ITextModel,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis.isHovered = observableCodeEditor(this._originalEditor).isTargetHovered(\n\t\t\tp => p.target.type === MouseTargetType.CONTENT_TEXT &&\n\t\t\t\tp.target.detail.injectedText?.options.attachedData instanceof InlineEditAttachedData &&\n\t\t\t\tp.target.detail.injectedText.options.attachedData.owner === this,\n\t\t\tthis._store\n\t\t);\n\t\tthis._tokenizationFinished = modelTokenizationFinished(this._modifiedTextModel);\n\t\tthis._decorations = derived(this, reader => {\n\t\t\tconst diff = this._state.read(reader);\n\t\t\tif (!diff) { return undefined; }\n\n\t\t\tconst modified = diff.modifiedText;\n\t\t\tconst showInline = diff.mode === 'insertionInline';\n\t\t\tconst hasOneInnerChange = diff.diff.length === 1 && diff.diff[0].innerChanges?.length === 1;\n\n\t\t\tconst showEmptyDecorations = true;\n\n\t\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\n\t\t\tconst diffLineAddDecorationBackground = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-line-insert',\n\t\t\t\tdescription: 'line-insert',\n\t\t\t\tisWholeLine: true,\n\t\t\t\tmarginClassName: 'gutter-insert',\n\t\t\t});\n\n\t\t\tconst diffLineDeleteDecorationBackground = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-line-delete',\n\t\t\t\tdescription: 'line-delete',\n\t\t\t\tisWholeLine: true,\n\t\t\t\tmarginClassName: 'gutter-delete',\n\t\t\t});\n\n\t\t\tconst diffWholeLineDeleteDecoration = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-delete',\n\t\t\t\tdescription: 'char-delete',\n\t\t\t\tisWholeLine: false,\n\t\t\t\tzIndex: 1, // be on top of diff background decoration\n\t\t\t});\n\n\t\t\tconst diffWholeLineAddDecoration = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-insert',\n\t\t\t\tdescription: 'char-insert',\n\t\t\t\tisWholeLine: true,\n\t\t\t});\n\n\t\t\tconst diffAddDecoration = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-insert',\n\t\t\t\tdescription: 'char-insert',\n\t\t\t\tshouldFillLineOnLineBreak: true,\n\t\t\t});\n\n\t\t\tconst diffAddDecorationEmpty = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-insert diff-range-empty',\n\t\t\t\tdescription: 'char-insert diff-range-empty',\n\t\t\t});\n\n\t\t\tconst NESOriginalBackground = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-original-lines',\n\t\t\t\tdescription: 'inlineCompletions-original-lines',\n\t\t\t\tisWholeLine: false,\n\t\t\t\tshouldFillLineOnLineBreak: true,\n\t\t\t});\n\n\t\t\tconst showFullLineDecorations = diff.mode !== 'sideBySide' && diff.mode !== 'deletion' && diff.mode !== 'insertionInline' && diff.mode !== 'lineReplacement';\n\t\t\tconst hideEmptyInnerDecorations = diff.mode === 'lineReplacement';\n\t\t\tfor (const m of diff.diff) {\n\t\t\t\tif (showFullLineDecorations) {\n\t\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\trange: m.original.toInclusiveRange()!,\n\t\t\t\t\t\t\toptions: diffLineDeleteDecorationBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\t\trange: m.modified.toInclusiveRange()!,\n\t\t\t\t\t\t\toptions: diffLineAddDecorationBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (m.modified.isEmpty || m.original.isEmpty) {\n\t\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({ range: m.original.toInclusiveRange()!, options: diffWholeLineDeleteDecoration });\n\t\t\t\t\t}\n\t\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\t\tmodifiedDecorations.push({ range: m.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst useInlineDiff = showInline && allowsTrueInlineDiffRendering(m);\n\t\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\t\tif (m.original.contains(i.originalRange.startLineNumber) && !(hideEmptyInnerDecorations && i.originalRange.isEmpty())) {\n\t\t\t\t\t\t\tconst replacedText = this._originalEditor.getModel()?.getValueInRange(i.originalRange, EndOfLinePreference.LF);\n\t\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\t\trange: i.originalRange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdescription: 'char-delete',\n\t\t\t\t\t\t\t\t\tshouldFillLineOnLineBreak: false,\n\t\t\t\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\t\t\t\t'inlineCompletions-char-delete',\n\t\t\t\t\t\t\t\t\t\ti.originalRange.isSingleLine() && diff.mode === 'insertionInline' && 'single-line-inline',\n\t\t\t\t\t\t\t\t\t\ti.originalRange.isEmpty() && 'empty',\n\t\t\t\t\t\t\t\t\t\t((i.originalRange.isEmpty() && hasOneInnerChange || diff.mode === 'deletion' && replacedText === '\\n') && showEmptyDecorations && !useInlineDiff) && 'diff-range-empty'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tinlineClassName: useInlineDiff ? classNames('strike-through', 'inlineCompletions') : null,\n\t\t\t\t\t\t\t\t\tzIndex: 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\t\t\trange: i.modifiedRange,\n\t\t\t\t\t\t\t\toptions: (i.modifiedRange.isEmpty() && showEmptyDecorations && !useInlineDiff && hasOneInnerChange)\n\t\t\t\t\t\t\t\t\t? diffAddDecorationEmpty\n\t\t\t\t\t\t\t\t\t: diffAddDecoration\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (useInlineDiff) {\n\t\t\t\t\t\t\tconst insertedText = modified.getValueOfRange(i.modifiedRange);\n\t\t\t\t\t\t\t// when the injected text becomes long, the editor will split it into multiple spans\n\t\t\t\t\t\t\t// to be able to get the border around the start and end of the text, we need to split it into multiple segments\n\t\t\t\t\t\t\tconst textSegments = insertedText.length > 3 ?\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: insertedText.slice(0, 1), extraClasses: ['start'], offsetRange: new OffsetRange(i.modifiedRange.startColumn - 1, i.modifiedRange.startColumn) },\n\t\t\t\t\t\t\t\t\t{ text: insertedText.slice(1, -1), extraClasses: [], offsetRange: new OffsetRange(i.modifiedRange.startColumn, i.modifiedRange.endColumn - 2) },\n\t\t\t\t\t\t\t\t\t{ text: insertedText.slice(-1), extraClasses: ['end'], offsetRange: new OffsetRange(i.modifiedRange.endColumn - 2, i.modifiedRange.endColumn - 1) }\n\t\t\t\t\t\t\t\t] :\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: insertedText, extraClasses: ['start', 'end'], offsetRange: new OffsetRange(i.modifiedRange.startColumn - 1, i.modifiedRange.endColumn) }\n\t\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\t// Tokenization\n\t\t\t\t\t\t\tthis._tokenizationFinished.read(reader); // reconsider when tokenization is finished\n\t\t\t\t\t\t\tconst lineTokens = this._modifiedTextModel.tokenization.getLineTokens(i.modifiedRange.startLineNumber);\n\n\t\t\t\t\t\t\tfor (const { text, extraClasses, offsetRange } of textSegments) {\n\t\t\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\t\t\trange: Range.fromPositions(i.originalRange.getEndPosition()),\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tdescription: 'inserted-text',\n\t\t\t\t\t\t\t\t\t\tbefore: {\n\t\t\t\t\t\t\t\t\t\t\ttokens: lineTokens.getTokensInRange(offsetRange),\n\t\t\t\t\t\t\t\t\t\t\tcontent: text,\n\t\t\t\t\t\t\t\t\t\t\tinlineClassName: classNames(\n\t\t\t\t\t\t\t\t\t\t\t\t'inlineCompletions-char-insert',\n\t\t\t\t\t\t\t\t\t\t\t\ti.modifiedRange.isSingleLine() && diff.mode === 'insertionInline' && 'single-line-inline',\n\t\t\t\t\t\t\t\t\t\t\t\t...extraClasses // include extraClasses for additional styling if provided\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tcursorStops: InjectedTextCursorStops.None,\n\t\t\t\t\t\t\t\t\t\t\tattachedData: new InlineEditAttachedData(this),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tzIndex: 2,\n\t\t\t\t\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (diff.isInDiffEditor) {\n\t\t\t\tfor (const m of diff.diff) {\n\t\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\trange: m.original.toExclusiveRange()!,\n\t\t\t\t\t\t\toptions: NESOriginalBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { originalDecorations, modifiedDecorations };\n\t\t});\n\n\t\tthis._register(observableCodeEditor(this._originalEditor).setDecorations(this._decorations.map(d => d?.originalDecorations ?? [])));\n\n\t\tconst modifiedCodeEditor = this._state.map(s => s?.modifiedCodeEditor);\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tconst e = modifiedCodeEditor.read(reader);\n\t\t\tif (e) {\n\t\t\t\tstore.add(observableCodeEditor(e).setDecorations(this._decorations.map(d => d?.modifiedDecorations ?? [])));\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._originalEditor.onMouseUp(e => {\n\t\t\tif (e.target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst a = e.target.detail.injectedText?.options.attachedData;\n\t\t\tif (a instanceof InlineEditAttachedData && a.owner === this) {\n\t\t\t\tthis._onDidClick.fire(e.event);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate readonly _decorations;\n}\n\nclass InlineEditAttachedData {\n\tconstructor(public readonly owner: OriginalEditorInlineDiffView) { }\n}\n\nfunction allowsTrueInlineDiffRendering(mapping: DetailedLineRangeMapping): boolean {\n\tif (!mapping.innerChanges) {\n\t\treturn false;\n\t}\n\treturn mapping.innerChanges.every(c =>\n\t\t(rangeIsSingleLine(c.modifiedRange) && rangeIsSingleLine(c.originalRange)));\n}\n\nlet i = 0;\nfunction modelTokenizationFinished(model: ITextModel): IObservable<number> {\n\treturn observableFromEvent(model.onDidChangeTokens, () => i++);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMouseEvent } from '../../../../../../../base/browser/mouseEvent.js';\nimport { Emitter } from '../../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../../base/common/lifecycle.js';\nimport { autorunWithStore, derived, IObservable, observableFromEvent } from '../../../../../../../base/common/observable.js';\nimport { ICodeEditor, MouseTargetType } from '../../../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../../../browser/observableCodeEditor.js';\nimport { rangeIsSingleLine } from '../../../../../../browser/widget/diffEditor/components/diffEditorViewZones/diffEditorViewZones.js';\nimport { OffsetRange } from '../../../../../../common/core/ranges/offsetRange.js';\nimport { Range } from '../../../../../../common/core/range.js';\nimport { AbstractText } from '../../../../../../common/core/text/abstractText.js';\nimport { DetailedLineRangeMapping } from '../../../../../../common/diff/rangeMapping.js';\nimport { EndOfLinePreference, IModelDeltaDecoration, InjectedTextCursorStops, ITextModel } from '../../../../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../../../../common/model/textModel.js';\nimport { IInlineEditsView } from '../inlineEditsViewInterface.js';\nimport { classNames } from '../utils/utils.js';\n\nexport interface IOriginalEditorInlineDiffViewState {\n\tdiff: DetailedLineRangeMapping[];\n\tmodifiedText: AbstractText;\n\tmode: 'insertionInline' | 'sideBySide' | 'deletion' | 'lineReplacement';\n\tisInDiffEditor: boolean;\n\n\tmodifiedCodeEditor: ICodeEditor;\n}\n\nexport class OriginalEditorInlineDiffView extends Disposable implements IInlineEditsView {\n\n\tprivate readonly _onDidClick;\n\treadonly onDidClick;\n\n\treadonly isHovered;\n\n\tprivate readonly _tokenizationFinished;\n\n\tconstructor(\n\t\tprivate readonly _originalEditor: ICodeEditor,\n\t\tprivate readonly _state: IObservable<IOriginalEditorInlineDiffViewState | undefined>,\n\t\tprivate readonly _modifiedTextModel: ITextModel,\n\t) {\n\t\tsuper();\n\t\tthis._onDidClick = this._register(new Emitter<IMouseEvent>());\n\t\tthis.onDidClick = this._onDidClick.event;\n\t\tthis.isHovered = observableCodeEditor(this._originalEditor).isTargetHovered(\n\t\t\tp => p.target.type === MouseTargetType.CONTENT_TEXT &&\n\t\t\t\tp.target.detail.injectedText?.options.attachedData instanceof InlineEditAttachedData &&\n\t\t\t\tp.target.detail.injectedText.options.attachedData.owner === this,\n\t\t\tthis._store\n\t\t);\n\t\tthis._tokenizationFinished = modelTokenizationFinished(this._modifiedTextModel);\n\t\tthis._decorations = derived(this, reader => {\n\t\t\tconst diff = this._state.read(reader);\n\t\t\tif (!diff) { return undefined; }\n\n\t\t\tconst modified = diff.modifiedText;\n\t\t\tconst showInline = diff.mode === 'insertionInline';\n\t\t\tconst hasOneInnerChange = diff.diff.length === 1 && diff.diff[0].innerChanges?.length === 1;\n\n\t\t\tconst showEmptyDecorations = true;\n\n\t\t\tconst originalDecorations: IModelDeltaDecoration[] = [];\n\t\t\tconst modifiedDecorations: IModelDeltaDecoration[] = [];\n\n\t\t\tconst diffLineAddDecorationBackground = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-line-insert',\n\t\t\t\tdescription: 'line-insert',\n\t\t\t\tisWholeLine: true,\n\t\t\t\tmarginClassName: 'gutter-insert',\n\t\t\t});\n\n\t\t\tconst diffLineDeleteDecorationBackground = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-line-delete',\n\t\t\t\tdescription: 'line-delete',\n\t\t\t\tisWholeLine: true,\n\t\t\t\tmarginClassName: 'gutter-delete',\n\t\t\t});\n\n\t\t\tconst diffWholeLineDeleteDecoration = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-delete',\n\t\t\t\tdescription: 'char-delete',\n\t\t\t\tisWholeLine: false,\n\t\t\t\tzIndex: 1, // be on top of diff background decoration\n\t\t\t});\n\n\t\t\tconst diffWholeLineAddDecoration = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-insert',\n\t\t\t\tdescription: 'char-insert',\n\t\t\t\tisWholeLine: true,\n\t\t\t});\n\n\t\t\tconst diffAddDecoration = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-insert',\n\t\t\t\tdescription: 'char-insert',\n\t\t\t\tshouldFillLineOnLineBreak: true,\n\t\t\t});\n\n\t\t\tconst diffAddDecorationEmpty = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-char-insert diff-range-empty',\n\t\t\t\tdescription: 'char-insert diff-range-empty',\n\t\t\t});\n\n\t\t\tconst NESOriginalBackground = ModelDecorationOptions.register({\n\t\t\t\tclassName: 'inlineCompletions-original-lines',\n\t\t\t\tdescription: 'inlineCompletions-original-lines',\n\t\t\t\tisWholeLine: false,\n\t\t\t\tshouldFillLineOnLineBreak: true,\n\t\t\t});\n\n\t\t\tconst showFullLineDecorations = diff.mode !== 'sideBySide' && diff.mode !== 'deletion' && diff.mode !== 'insertionInline' && diff.mode !== 'lineReplacement';\n\t\t\tconst hideEmptyInnerDecorations = diff.mode === 'lineReplacement';\n\t\t\tfor (const m of diff.diff) {\n\t\t\t\tif (showFullLineDecorations) {\n\t\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\trange: m.original.toInclusiveRange()!,\n\t\t\t\t\t\t\toptions: diffLineDeleteDecorationBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\t\trange: m.modified.toInclusiveRange()!,\n\t\t\t\t\t\t\toptions: diffLineAddDecorationBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (m.modified.isEmpty || m.original.isEmpty) {\n\t\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({ range: m.original.toInclusiveRange()!, options: diffWholeLineDeleteDecoration });\n\t\t\t\t\t}\n\t\t\t\t\tif (!m.modified.isEmpty) {\n\t\t\t\t\t\tmodifiedDecorations.push({ range: m.modified.toInclusiveRange()!, options: diffWholeLineAddDecoration });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst useInlineDiff = showInline && allowsTrueInlineDiffRendering(m);\n\t\t\t\t\tfor (const i of m.innerChanges || []) {\n\t\t\t\t\t\t// Don't show empty markers outside the line range\n\t\t\t\t\t\tif (m.original.contains(i.originalRange.startLineNumber) && !(hideEmptyInnerDecorations && i.originalRange.isEmpty())) {\n\t\t\t\t\t\t\tconst replacedText = this._originalEditor.getModel()?.getValueInRange(i.originalRange, EndOfLinePreference.LF);\n\t\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\t\trange: i.originalRange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tdescription: 'char-delete',\n\t\t\t\t\t\t\t\t\tshouldFillLineOnLineBreak: false,\n\t\t\t\t\t\t\t\t\tclassName: classNames(\n\t\t\t\t\t\t\t\t\t\t'inlineCompletions-char-delete',\n\t\t\t\t\t\t\t\t\t\ti.originalRange.isSingleLine() && diff.mode === 'insertionInline' && 'single-line-inline',\n\t\t\t\t\t\t\t\t\t\ti.originalRange.isEmpty() && 'empty',\n\t\t\t\t\t\t\t\t\t\t((i.originalRange.isEmpty() && hasOneInnerChange || diff.mode === 'deletion' && replacedText === '\\n') && showEmptyDecorations && !useInlineDiff) && 'diff-range-empty'\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tinlineClassName: useInlineDiff ? classNames('strike-through', 'inlineCompletions') : null,\n\t\t\t\t\t\t\t\t\tzIndex: 1\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m.modified.contains(i.modifiedRange.startLineNumber)) {\n\t\t\t\t\t\t\tmodifiedDecorations.push({\n\t\t\t\t\t\t\t\trange: i.modifiedRange,\n\t\t\t\t\t\t\t\toptions: (i.modifiedRange.isEmpty() && showEmptyDecorations && !useInlineDiff && hasOneInnerChange)\n\t\t\t\t\t\t\t\t\t? diffAddDecorationEmpty\n\t\t\t\t\t\t\t\t\t: diffAddDecoration\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (useInlineDiff) {\n\t\t\t\t\t\t\tconst insertedText = modified.getValueOfRange(i.modifiedRange);\n\t\t\t\t\t\t\t// when the injected text becomes long, the editor will split it into multiple spans\n\t\t\t\t\t\t\t// to be able to get the border around the start and end of the text, we need to split it into multiple segments\n\t\t\t\t\t\t\tconst textSegments = insertedText.length > 3 ?\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: insertedText.slice(0, 1), extraClasses: ['start'], offsetRange: new OffsetRange(i.modifiedRange.startColumn - 1, i.modifiedRange.startColumn) },\n\t\t\t\t\t\t\t\t\t{ text: insertedText.slice(1, -1), extraClasses: [], offsetRange: new OffsetRange(i.modifiedRange.startColumn, i.modifiedRange.endColumn - 2) },\n\t\t\t\t\t\t\t\t\t{ text: insertedText.slice(-1), extraClasses: ['end'], offsetRange: new OffsetRange(i.modifiedRange.endColumn - 2, i.modifiedRange.endColumn - 1) }\n\t\t\t\t\t\t\t\t] :\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t{ text: insertedText, extraClasses: ['start', 'end'], offsetRange: new OffsetRange(i.modifiedRange.startColumn - 1, i.modifiedRange.endColumn) }\n\t\t\t\t\t\t\t\t];\n\n\t\t\t\t\t\t\t// Tokenization\n\t\t\t\t\t\t\tthis._tokenizationFinished.read(reader); // reconsider when tokenization is finished\n\t\t\t\t\t\t\tconst lineTokens = this._modifiedTextModel.tokenization.getLineTokens(i.modifiedRange.startLineNumber);\n\n\t\t\t\t\t\t\tfor (const { text, extraClasses, offsetRange } of textSegments) {\n\t\t\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\t\t\trange: Range.fromPositions(i.originalRange.getEndPosition()),\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tdescription: 'inserted-text',\n\t\t\t\t\t\t\t\t\t\tbefore: {\n\t\t\t\t\t\t\t\t\t\t\ttokens: lineTokens.getTokensInRange(offsetRange),\n\t\t\t\t\t\t\t\t\t\t\tcontent: text,\n\t\t\t\t\t\t\t\t\t\t\tinlineClassName: classNames(\n\t\t\t\t\t\t\t\t\t\t\t\t'inlineCompletions-char-insert',\n\t\t\t\t\t\t\t\t\t\t\t\ti.modifiedRange.isSingleLine() && diff.mode === 'insertionInline' && 'single-line-inline',\n\t\t\t\t\t\t\t\t\t\t\t\t...extraClasses // include extraClasses for additional styling if provided\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tcursorStops: InjectedTextCursorStops.None,\n\t\t\t\t\t\t\t\t\t\t\tattachedData: new InlineEditAttachedData(this),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tzIndex: 2,\n\t\t\t\t\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (diff.isInDiffEditor) {\n\t\t\t\tfor (const m of diff.diff) {\n\t\t\t\t\tif (!m.original.isEmpty) {\n\t\t\t\t\t\toriginalDecorations.push({\n\t\t\t\t\t\t\trange: m.original.toExclusiveRange()!,\n\t\t\t\t\t\t\toptions: NESOriginalBackground,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { originalDecorations, modifiedDecorations };\n\t\t});\n\n\t\tthis._register(observableCodeEditor(this._originalEditor).setDecorations(this._decorations.map(d => d?.originalDecorations ?? [])));\n\n\t\tconst modifiedCodeEditor = this._state.map(s => s?.modifiedCodeEditor);\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tconst e = modifiedCodeEditor.read(reader);\n\t\t\tif (e) {\n\t\t\t\tstore.add(observableCodeEditor(e).setDecorations(this._decorations.map(d => d?.modifiedDecorations ?? [])));\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._originalEditor.onMouseUp(e => {\n\t\t\tif (e.target.type !== MouseTargetType.CONTENT_TEXT) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst a = e.target.detail.injectedText?.options.attachedData;\n\t\t\tif (a instanceof InlineEditAttachedData && a.owner === this) {\n\t\t\t\tthis._onDidClick.fire(e.event);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate readonly _decorations;\n}\n\nclass InlineEditAttachedData {\n\tconstructor(public readonly owner: OriginalEditorInlineDiffView) { }\n}\n\nfunction allowsTrueInlineDiffRendering(mapping: DetailedLineRangeMapping): boolean {\n\tif (!mapping.innerChanges) {\n\t\treturn false;\n\t}\n\treturn mapping.innerChanges.every(c =>\n\t\t(rangeIsSingleLine(c.modifiedRange) && rangeIsSingleLine(c.originalRange)));\n}\n\nlet i = 0;\nfunction modelTokenizationFinished(model: ITextModel): IObservable<number> {\n\treturn observableFromEvent(model.onDidChangeTokens, () => i++);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8692, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIfDefined, itemEquals } from '../../../../../../base/common/equals.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { Event } from '../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedOpts, IObservable, IReader, ISettableObservable, mapObservableArrayCached, observableValue } from '../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../../common/core/edits/textEdit.js';\nimport { AbstractText, StringText } from '../../../../../common/core/text/abstractText.js';\nimport { TextLength } from '../../../../../common/core/text/textLength.js';\nimport { DetailedLineRangeMapping, lineRangeMappingFromRangeMappings, RangeMapping } from '../../../../../common/diff/rangeMapping.js';\nimport { TextModel } from '../../../../../common/model/textModel.js';\nimport { InlineEditsGutterIndicator } from './components/gutterIndicatorView.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\nimport { GhostTextIndicator, InlineEditHost, InlineEditModel } from './inlineEditsModel.js';\nimport { InlineEditsOnboardingExperience } from './inlineEditsNewUsers.js';\nimport { IInlineEditModel, InlineCompletionViewData, InlineCompletionViewKind, InlineEditTabAction } from './inlineEditsViewInterface.js';\nimport { InlineEditsCollapsedView } from './inlineEditsViews/inlineEditsCollapsedView.js';\nimport { InlineEditsCustomView } from './inlineEditsViews/inlineEditsCustomView.js';\nimport { InlineEditsDeletionView } from './inlineEditsViews/inlineEditsDeletionView.js';\nimport { InlineEditsInsertionView } from './inlineEditsViews/inlineEditsInsertionView.js';\nimport { InlineEditsLineReplacementView } from './inlineEditsViews/inlineEditsLineReplacementView.js';\nimport { InlineEditsSideBySideView } from './inlineEditsViews/inlineEditsSideBySideView.js';\nimport { InlineEditsWordReplacementView } from './inlineEditsViews/inlineEditsWordReplacementView.js';\nimport { IOriginalEditorInlineDiffViewState, OriginalEditorInlineDiffView } from './inlineEditsViews/originalEditorInlineDiffView.js';\nimport { applyEditToModifiedRangeMappings, createReindentEdit } from './utils/utils.js';\nimport './view.css';\nimport { $ } from '../../../../../../base/browser/dom.js';\n\n\nexport class InlineEditsView extends Disposable {\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _useCodeShifting;\n\tprivate readonly _renderSideBySide;\n\n\tprivate readonly _tabAction;\n\n\tprivate _previousView: {\n\t\tid: string;\n\t\tview: ReturnType<typeof InlineEditsView.prototype.determineView>;\n\t\teditorWidth: number;\n\t\ttimestamp: number;\n\t} | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _host: IObservable<InlineEditHost | undefined>,\n\t\tprivate readonly _model: IObservable<InlineEditModel | undefined>,\n\t\tprivate readonly _ghostTextIndicator: IObservable<GhostTextIndicator | undefined>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._tabAction = derived<InlineEditTabAction>(reader => this._model.read(reader)?.tabAction.read(reader) ?? InlineEditTabAction.Inactive);\n\t\tthis._constructorDone = observableValue(this, false);\n\t\tthis._uiState = derived<{\n\t\t\tstate: ReturnType<typeof InlineEditsView.prototype.determineRenderState>;\n\t\t\tdiff: DetailedLineRangeMapping[];\n\t\t\tedit: InlineEditWithChanges;\n\t\t\tnewText: string;\n\t\t\tnewTextLineCount: number;\n\t\t\tisInDiffEditor: boolean;\n\t\t} | undefined>(this, reader => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model || !this._constructorDone.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst inlineEdit = model.inlineEdit;\n\t\t\tlet mappings = RangeMapping.fromEdit(inlineEdit.edit);\n\t\t\tlet newText = inlineEdit.edit.apply(inlineEdit.originalText);\n\t\t\tlet diff = lineRangeMappingFromRangeMappings(mappings, inlineEdit.originalText, new StringText(newText));\n\n\t\t\tlet state = this.determineRenderState(model, reader, diff, new StringText(newText));\n\t\t\tif (!state) {\n\t\t\t\tmodel.abort(`unable to determine view: tried to render ${this._previousView?.view}`);\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (state.kind === InlineCompletionViewKind.SideBySide) {\n\t\t\t\tconst indentationAdjustmentEdit = createReindentEdit(newText, inlineEdit.modifiedLineRange, textModel.getOptions().tabSize);\n\t\t\t\tnewText = indentationAdjustmentEdit.applyToString(newText);\n\n\t\t\t\tmappings = applyEditToModifiedRangeMappings(mappings, indentationAdjustmentEdit);\n\t\t\t\tdiff = lineRangeMappingFromRangeMappings(mappings, inlineEdit.originalText, new StringText(newText));\n\t\t\t}\n\n\t\t\tthis._previewTextModel.setLanguage(this._editor.getModel()!.getLanguageId());\n\n\t\t\tconst previousNewText = this._previewTextModel.getValue();\n\t\t\tif (previousNewText !== newText) {\n\t\t\t\t// Only update the model if the text has changed to avoid flickering\n\t\t\t\tthis._previewTextModel.setValue(newText);\n\t\t\t}\n\n\t\t\tif (model.showCollapsed.read(reader) && !this._indicator.read(reader)?.isHoverVisible.read(reader)) {\n\t\t\t\tstate = { kind: InlineCompletionViewKind.Collapsed as const, viewData: state.viewData };\n\t\t\t}\n\n\t\t\tmodel.handleInlineEditShown(state.kind, state.viewData);\n\n\t\t\treturn {\n\t\t\t\tstate,\n\t\t\t\tdiff,\n\t\t\t\tedit: inlineEdit,\n\t\t\t\tnewText,\n\t\t\t\tnewTextLineCount: inlineEdit.modifiedLineRange.length,\n\t\t\t\tisInDiffEditor: model.isInDiffEditor,\n\t\t\t};\n\t\t});\n\t\tthis._previewTextModel = this._register(this._instantiationService.createInstance(\n\t\t\tTextModel,\n\t\t\t'',\n\t\t\tthis._editor.getModel()!.getLanguageId(),\n\t\t\t{ ...TextModel.DEFAULT_CREATION_OPTIONS, bracketPairColorizationOptions: { enabled: true, independentColorPoolPerBracketType: false } },\n\t\t\tnull\n\t\t));\n\t\tthis._indicatorCyclicDependencyCircuitBreaker = observableValue(this, false);\n\t\tthis._indicator = derived<InlineEditsGutterIndicator | undefined>(this, (reader) => {\n\t\t\tif (!this._indicatorCyclicDependencyCircuitBreaker.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst indicatorDisplayRange = derivedOpts({ owner: this, equalsFn: equalsIfDefined(itemEquals()) }, reader => {\n\t\t\t\tconst ghostTextIndicator = this._ghostTextIndicator.read(reader);\n\t\t\t\tif (ghostTextIndicator) {\n\t\t\t\t\treturn ghostTextIndicator.lineRange;\n\t\t\t\t}\n\n\t\t\t\tconst state = this._uiState.read(reader);\n\t\t\t\tif (!state) { return undefined; }\n\n\t\t\t\tif (state.state?.kind === 'custom') {\n\t\t\t\t\tconst range = state.state.displayLocation?.range;\n\t\t\t\t\tif (!range) {\n\t\t\t\t\t\tthrow new BugIndicatingError('custom view should have a range');\n\t\t\t\t\t}\n\t\t\t\t\treturn new LineRange(range.startLineNumber, range.endLineNumber);\n\t\t\t\t}\n\n\t\t\t\tif (state.state?.kind === 'insertionMultiLine') {\n\t\t\t\t\treturn this._insertion.originalLines.read(reader);\n\t\t\t\t}\n\n\t\t\t\treturn state.edit.displayRange;\n\t\t\t});\n\n\t\t\tconst modelWithGhostTextSupport = derived<InlineEditModel | undefined>(this, reader => {\n\t\t\t\tconst model = this._model.read(reader);\n\t\t\t\tif (model) {\n\t\t\t\t\treturn model;\n\t\t\t\t}\n\n\t\t\t\tconst ghostTextIndicator = this._ghostTextIndicator.read(reader);\n\t\t\t\tif (ghostTextIndicator) {\n\t\t\t\t\treturn ghostTextIndicator.model;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t\t});\n\n\t\t\treturn reader.store.add(this._instantiationService.createInstance(\n\t\t\t\tInlineEditsGutterIndicator,\n\t\t\t\tthis._editorObs,\n\t\t\t\tindicatorDisplayRange,\n\t\t\t\tthis._gutterIndicatorOffset,\n\t\t\t\tmodelWithGhostTextSupport,\n\t\t\t\tthis._inlineEditsIsHovered,\n\t\t\t\tthis._focusIsInMenu,\n\t\t\t));\n\t\t});\n\t\tthis._inlineEditsIsHovered = derived(this, reader => {\n\t\t\treturn this._sideBySide.isHovered.read(reader)\n\t\t\t\t|| this._wordReplacementViews.read(reader).some(v => v.isHovered.read(reader))\n\t\t\t\t|| this._deletion.isHovered.read(reader)\n\t\t\t\t|| this._inlineDiffView.isHovered.read(reader)\n\t\t\t\t|| this._lineReplacementView.isHovered.read(reader)\n\t\t\t\t|| this._insertion.isHovered.read(reader)\n\t\t\t\t|| this._customView.isHovered.read(reader);\n\t\t});\n\t\tthis._gutterIndicatorOffset = derived<number>(this, reader => {\n\t\t\t// TODO: have a better way to tell the gutter indicator view where the edit is inside a viewzone\n\t\t\tif (this._uiState.read(reader)?.state?.kind === 'insertionMultiLine') {\n\t\t\t\treturn this._insertion.startLineOffset.read(reader);\n\t\t\t}\n\n\t\t\tconst ghostTextIndicator = this._ghostTextIndicator.read(reader);\n\t\t\tif (ghostTextIndicator) {\n\t\t\t\treturn getGhostTextTopOffset(ghostTextIndicator, this._editor);\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\t\tthis._sideBySide = this._register(this._instantiationService.createInstance(InlineEditsSideBySideView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map(m => m?.inlineEdit),\n\t\t\tthis._previewTextModel,\n\t\t\tthis._uiState.map(s => s && s.state?.kind === InlineCompletionViewKind.SideBySide ? ({\n\t\t\t\tnewTextLineCount: s.newTextLineCount,\n\t\t\t\tisInDiffEditor: s.isInDiffEditor,\n\t\t\t}) : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._deletion = this._register(this._instantiationService.createInstance(InlineEditsDeletionView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map(m => m?.inlineEdit),\n\t\t\tthis._uiState.map(s => s && s.state?.kind === InlineCompletionViewKind.Deletion ? ({\n\t\t\t\toriginalRange: s.state.originalRange,\n\t\t\t\tdeletions: s.state.deletions,\n\t\t\t\tinDiffEditor: s.isInDiffEditor,\n\t\t\t}) : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._insertion = this._register(this._instantiationService.createInstance(InlineEditsInsertionView,\n\t\t\tthis._editor,\n\t\t\tthis._uiState.map(s => s && s.state?.kind === InlineCompletionViewKind.InsertionMultiLine ? ({\n\t\t\t\tlineNumber: s.state.lineNumber,\n\t\t\t\tstartColumn: s.state.column,\n\t\t\t\ttext: s.state.text,\n\t\t\t\tinDiffEditor: s.isInDiffEditor,\n\t\t\t}) : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._inlineDiffViewState = derived<IOriginalEditorInlineDiffViewState | undefined>(this, reader => {\n\t\t\tconst e = this._uiState.read(reader);\n\t\t\tif (!e || !e.state) { return undefined; }\n\t\t\tif (e.state.kind === 'wordReplacements' || e.state.kind === 'insertionMultiLine' || e.state.kind === 'collapsed' || e.state.kind === 'custom') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tmodifiedText: new StringText(e.newText),\n\t\t\t\tdiff: e.diff,\n\t\t\t\tmode: e.state.kind,\n\t\t\t\tmodifiedCodeEditor: this._sideBySide.previewEditor,\n\t\t\t\tisInDiffEditor: e.isInDiffEditor,\n\t\t\t};\n\t\t});\n\t\tthis._inlineCollapsedView = this._register(this._instantiationService.createInstance(InlineEditsCollapsedView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map((m, reader) => this._uiState.read(reader)?.state?.kind === 'collapsed' ? m?.inlineEdit : undefined)\n\t\t));\n\t\tthis._customView = this._register(this._instantiationService.createInstance(InlineEditsCustomView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map((m, reader) => this._uiState.read(reader)?.state?.kind === 'custom' ? m?.displayLocation : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._inlineDiffView = this._register(new OriginalEditorInlineDiffView(this._editor, this._inlineDiffViewState, this._previewTextModel));\n\t\tthis._wordReplacementViews = mapObservableArrayCached(this, this._uiState.map(s => s?.state?.kind === 'wordReplacements' ? s.state.replacements : []), (e, store) => {\n\t\t\treturn store.add(this._instantiationService.createInstance(InlineEditsWordReplacementView, this._editorObs, e, this._tabAction));\n\t\t});\n\t\tthis._lineReplacementView = this._register(this._instantiationService.createInstance(InlineEditsLineReplacementView,\n\t\t\tthis._editorObs,\n\t\t\tthis._uiState.map(s => s?.state?.kind === InlineCompletionViewKind.LineReplacement ? ({\n\t\t\t\toriginalRange: s.state.originalRange,\n\t\t\t\tmodifiedRange: s.state.modifiedRange,\n\t\t\t\tmodifiedLines: s.state.modifiedLines,\n\t\t\t\treplacements: s.state.replacements,\n\t\t\t}) : undefined),\n\t\t\tthis._uiState.map(s => s?.isInDiffEditor ?? false),\n\t\t\tthis._tabAction,\n\t\t));\n\n\t\tthis._useCodeShifting = this._editorObs.getOption(EditorOption.inlineSuggest).map(s => s.edits.allowCodeShifting);\n\t\tthis._renderSideBySide = this._editorObs.getOption(EditorOption.inlineSuggest).map(s => s.edits.renderSideBySide);\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstore.add(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis._sideBySide.onDidClick,\n\t\t\t\t\tthis._deletion.onDidClick,\n\t\t\t\t\tthis._lineReplacementView.onDidClick,\n\t\t\t\t\tthis._insertion.onDidClick,\n\t\t\t\t\t...this._wordReplacementViews.read(reader).map(w => w.onDidClick),\n\t\t\t\t\tthis._inlineDiffView.onDidClick,\n\t\t\t\t\tthis._customView.onDidClick,\n\t\t\t\t)(e => {\n\t\t\t\t\tif (this._viewHasBeenShownLongerThan(350)) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tmodel.accept();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}));\n\n\t\tthis._indicator.recomputeInitiallyAndOnChange(this._store);\n\t\tthis._wordReplacementViews.recomputeInitiallyAndOnChange(this._store);\n\n\t\tthis._indicatorCyclicDependencyCircuitBreaker.set(true, undefined);\n\n\t\tthis._register(this._instantiationService.createInstance(InlineEditsOnboardingExperience, this._host, this._model, this._indicator, this._inlineCollapsedView));\n\n\t\tconst minEditorScrollHeight = derived(this, reader => {\n\t\t\treturn Math.max(\n\t\t\t\t...this._wordReplacementViews.read(reader).map(v => v.minEditorScrollHeight.read(reader)),\n\t\t\t\tthis._lineReplacementView.minEditorScrollHeight.read(reader),\n\t\t\t\tthis._customView.minEditorScrollHeight.read(reader)\n\t\t\t);\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst textModel = this._editor.getModel()!;\n\n\t\tlet viewZoneId: string | undefined;\n\t\tthis._register(autorun(reader => {\n\t\t\tconst minScrollHeight = minEditorScrollHeight.read(reader);\n\t\t\tthis._editor.changeViewZones(accessor => {\n\t\t\t\tconst scrollHeight = this._editor.getScrollHeight();\n\t\t\t\tconst viewZoneHeight = minScrollHeight - scrollHeight + 1 /* Add 1px so there is a small gap */;\n\n\t\t\t\tif (viewZoneHeight !== 0 && viewZoneId) {\n\t\t\t\t\taccessor.removeZone(viewZoneId);\n\t\t\t\t\tviewZoneId = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (viewZoneHeight <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tviewZoneId = accessor.addZone({\n\t\t\t\t\tafterLineNumber: textModel.getLineCount(),\n\t\t\t\t\theightInPx: viewZoneHeight,\n\t\t\t\t\tdomNode: $('div.minScrollHeightViewZone'),\n\t\t\t\t});\n\t\t\t});\n\t\t}));\n\n\t\tthis._constructorDone.set(true, undefined); // TODO: remove and use correct initialization order\n\t}\n\n\tprivate readonly _constructorDone;\n\n\tprivate readonly _uiState;\n\n\tprivate readonly _previewTextModel;\n\n\tprivate readonly _indicatorCyclicDependencyCircuitBreaker;\n\n\tprotected readonly _indicator;\n\n\tprivate readonly _inlineEditsIsHovered;\n\n\tprivate readonly _gutterIndicatorOffset;\n\n\tprivate readonly _sideBySide;\n\n\tprotected readonly _deletion;\n\n\tprotected readonly _insertion;\n\n\tprivate readonly _inlineDiffViewState;\n\n\tprotected readonly _inlineCollapsedView;\n\n\tprotected readonly _customView;\n\n\tprotected readonly _inlineDiffView;\n\n\tprotected readonly _wordReplacementViews;\n\n\tprotected readonly _lineReplacementView;\n\n\tprivate getCacheId(model: IInlineEditModel) {\n\t\treturn model.inlineEdit.inlineCompletion.identity.id;\n\t}\n\n\tprivate determineView(model: IInlineEditModel, reader: IReader, diff: DetailedLineRangeMapping[], newText: StringText): InlineCompletionViewKind {\n\t\t// Check if we can use the previous view if it is the same InlineCompletion as previously shown\n\t\tconst inlineEdit = model.inlineEdit;\n\t\tconst canUseCache = this._previousView?.id === this.getCacheId(model);\n\t\tconst reconsiderViewEditorWidthChange = this._previousView?.editorWidth !== this._editorObs.layoutInfoWidth.read(reader) &&\n\t\t\t(\n\t\t\t\tthis._previousView?.view === InlineCompletionViewKind.SideBySide ||\n\t\t\t\tthis._previousView?.view === InlineCompletionViewKind.LineReplacement\n\t\t\t);\n\n\t\tif (canUseCache && !reconsiderViewEditorWidthChange) {\n\t\t\treturn this._previousView!.view;\n\t\t}\n\n\t\tif (model.displayLocation) {\n\t\t\treturn InlineCompletionViewKind.Custom;\n\t\t}\n\n\t\t// Determine the view based on the edit / diff\n\n\t\tconst numOriginalLines = inlineEdit.originalLineRange.length;\n\t\tconst numModifiedLines = inlineEdit.modifiedLineRange.length;\n\t\tconst inner = diff.flatMap(d => d.innerChanges ?? []);\n\t\tconst isSingleInnerEdit = inner.length === 1;\n\n\t\tif (!model.isInDiffEditor) {\n\t\t\tif (\n\t\t\t\tisSingleInnerEdit\n\t\t\t\t&& this._useCodeShifting.read(reader) !== 'never'\n\t\t\t\t&& isSingleLineInsertion(diff)\n\t\t\t) {\n\t\t\t\tif (isSingleLineInsertionAfterPosition(diff, inlineEdit.cursorPosition)) {\n\t\t\t\t\treturn InlineCompletionViewKind.InsertionInline;\n\t\t\t\t}\n\n\t\t\t\t// If we have a single line insertion before the cursor position, we do not want to move the cursor by inserting\n\t\t\t\t// the suggestion inline. Use a line replacement view instead. Do not use word replacement view.\n\t\t\t\treturn InlineCompletionViewKind.LineReplacement;\n\t\t\t}\n\n\t\t\tif (isDeletion(inner, inlineEdit, newText)) {\n\t\t\t\treturn InlineCompletionViewKind.Deletion;\n\t\t\t}\n\n\t\t\tif (isSingleMultiLineInsertion(diff) && this._useCodeShifting.read(reader) === 'always') {\n\t\t\t\treturn InlineCompletionViewKind.InsertionMultiLine;\n\t\t\t}\n\n\t\t\tconst allInnerChangesNotTooLong = inner.every(m => TextLength.ofRange(m.originalRange).columnCount < InlineEditsWordReplacementView.MAX_LENGTH && TextLength.ofRange(m.modifiedRange).columnCount < InlineEditsWordReplacementView.MAX_LENGTH);\n\t\t\tif (allInnerChangesNotTooLong && isSingleInnerEdit && numOriginalLines === 1 && numModifiedLines === 1) {\n\t\t\t\t// Do not show indentation changes with word replacement view\n\t\t\t\tconst modifiedText = inner.map(m => newText.getValueOfRange(m.modifiedRange));\n\t\t\t\tconst originalText = inner.map(m => model.inlineEdit.originalText.getValueOfRange(m.originalRange));\n\t\t\t\tif (!modifiedText.some(v => v.includes('\\t')) && !originalText.some(v => v.includes('\\t'))) {\n\t\t\t\t\t// Make sure there is no insertion, even if we grow them\n\t\t\t\t\tif (\n\t\t\t\t\t\t!inner.some(m => m.originalRange.isEmpty()) ||\n\t\t\t\t\t\t!growEditsUntilWhitespace(inner.map(m => new TextReplacement(m.originalRange, '')), inlineEdit.originalText).some(e => e.range.isEmpty() && TextLength.ofRange(e.range).columnCount < InlineEditsWordReplacementView.MAX_LENGTH)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn InlineCompletionViewKind.WordReplacements;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (numOriginalLines > 0 && numModifiedLines > 0) {\n\t\t\tif (numOriginalLines === 1 && numModifiedLines === 1 && !model.isInDiffEditor /* prefer side by side in diff editor */) {\n\t\t\t\treturn InlineCompletionViewKind.LineReplacement;\n\t\t\t}\n\n\t\t\tif (this._renderSideBySide.read(reader) !== 'never' && InlineEditsSideBySideView.fitsInsideViewport(this._editor, this._previewTextModel, inlineEdit, reader)) {\n\t\t\t\treturn InlineCompletionViewKind.SideBySide;\n\t\t\t}\n\n\t\t\treturn InlineCompletionViewKind.LineReplacement;\n\t\t}\n\n\t\tif (model.isInDiffEditor) {\n\t\t\tif (isDeletion(inner, inlineEdit, newText)) {\n\t\t\t\treturn InlineCompletionViewKind.Deletion;\n\t\t\t}\n\n\t\t\tif (isSingleMultiLineInsertion(diff) && this._useCodeShifting.read(reader) === 'always') {\n\t\t\t\treturn InlineCompletionViewKind.InsertionMultiLine;\n\t\t\t}\n\t\t}\n\n\t\treturn InlineCompletionViewKind.SideBySide;\n\t}\n\n\tprivate determineRenderState(model: IInlineEditModel, reader: IReader, diff: DetailedLineRangeMapping[], newText: StringText) {\n\t\tconst inlineEdit = model.inlineEdit;\n\n\t\tconst view = this.determineView(model, reader, diff, newText);\n\n\t\tthis._previousView = { id: this.getCacheId(model), view, editorWidth: this._editor.getLayoutInfo().width, timestamp: Date.now() };\n\n\t\tconst inner = diff.flatMap(d => d.innerChanges ?? []);\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst stringChanges = inner.map(m => ({\n\t\t\toriginalRange: m.originalRange,\n\t\t\tmodifiedRange: m.modifiedRange,\n\t\t\toriginal: textModel.getValueInRange(m.originalRange),\n\t\t\tmodified: newText.getValueOfRange(m.modifiedRange)\n\t\t}));\n\n\t\tconst cursorPosition = inlineEdit.cursorPosition;\n\t\tconst startsWithEOL = stringChanges[0].modified.startsWith(textModel.getEOL());\n\t\tconst viewData: InlineCompletionViewData = {\n\t\t\tcursorColumnDistance: inlineEdit.edit.replacements[0].range.getStartPosition().column - cursorPosition.column,\n\t\t\tcursorLineDistance: inlineEdit.lineEdit.lineRange.startLineNumber - cursorPosition.lineNumber + (startsWithEOL && inlineEdit.lineEdit.lineRange.startLineNumber >= cursorPosition.lineNumber ? 1 : 0),\n\t\t\tlineCountOriginal: inlineEdit.lineEdit.lineRange.length,\n\t\t\tlineCountModified: inlineEdit.lineEdit.newLines.length,\n\t\t\tcharacterCountOriginal: stringChanges.reduce((acc, r) => acc + r.original.length, 0),\n\t\t\tcharacterCountModified: stringChanges.reduce((acc, r) => acc + r.modified.length, 0),\n\t\t\tdisjointReplacements: stringChanges.length,\n\t\t\tsameShapeReplacements: stringChanges.every(r => r.original === stringChanges[0].original && r.modified === stringChanges[0].modified),\n\t\t};\n\n\t\tswitch (view) {\n\t\t\tcase InlineCompletionViewKind.InsertionInline: return { kind: InlineCompletionViewKind.InsertionInline as const, viewData };\n\t\t\tcase InlineCompletionViewKind.SideBySide: return { kind: InlineCompletionViewKind.SideBySide as const, viewData };\n\t\t\tcase InlineCompletionViewKind.Collapsed: return { kind: InlineCompletionViewKind.Collapsed as const, viewData };\n\t\t\tcase InlineCompletionViewKind.Custom: return { kind: InlineCompletionViewKind.Custom as const, displayLocation: model.displayLocation, viewData };\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.Deletion) {\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.Deletion as const,\n\t\t\t\toriginalRange: inlineEdit.originalLineRange,\n\t\t\t\tdeletions: inner.map(m => m.originalRange),\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.InsertionMultiLine) {\n\t\t\tconst change = inner[0];\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.InsertionMultiLine as const,\n\t\t\t\tlineNumber: change.originalRange.startLineNumber,\n\t\t\t\tcolumn: change.originalRange.startColumn,\n\t\t\t\ttext: newText.getValueOfRange(change.modifiedRange),\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\tconst replacements = stringChanges.map(m => new TextReplacement(m.originalRange, m.modified));\n\t\tif (replacements.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.WordReplacements) {\n\t\t\tlet grownEdits = growEditsToEntireWord(replacements, inlineEdit.originalText);\n\n\t\t\tif (grownEdits.some(e => e.range.isEmpty())) {\n\t\t\t\tgrownEdits = growEditsUntilWhitespace(replacements, inlineEdit.originalText);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.WordReplacements as const,\n\t\t\t\treplacements: grownEdits,\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.LineReplacement) {\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.LineReplacement as const,\n\t\t\t\toriginalRange: inlineEdit.originalLineRange,\n\t\t\t\tmodifiedRange: inlineEdit.modifiedLineRange,\n\t\t\t\tmodifiedLines: inlineEdit.modifiedLineRange.mapToLineArray(line => newText.getLineAt(line)),\n\t\t\t\treplacements: inner.map(m => ({ originalRange: m.originalRange, modifiedRange: m.modifiedRange })),\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate _viewHasBeenShownLongerThan(durationMs: number): boolean {\n\t\tconst viewCreationTime = this._previousView?.timestamp;\n\t\tif (!viewCreationTime) {\n\t\t\tthrow new BugIndicatingError('viewHasBeenShownLongThan called before a view has been shown');\n\t\t}\n\n\t\tconst currentTime = Date.now();\n\t\treturn (currentTime - viewCreationTime) >= durationMs;\n\t}\n}\n\nfunction isSingleLineInsertion(diff: DetailedLineRangeMapping[]) {\n\treturn diff.every(m => m.innerChanges!.every(r => isWordInsertion(r)));\n\n\tfunction isWordInsertion(r: RangeMapping) {\n\t\tif (!r.originalRange.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isInsertionWithinLine = r.modifiedRange.startLineNumber === r.modifiedRange.endLineNumber;\n\t\tif (!isInsertionWithinLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nfunction isSingleLineInsertionAfterPosition(diff: DetailedLineRangeMapping[], position: Position | null) {\n\tif (!position) {\n\t\treturn false;\n\t}\n\n\tif (!isSingleLineInsertion(diff)) {\n\t\treturn false;\n\t}\n\n\tconst pos = position;\n\n\treturn diff.every(m => m.innerChanges!.every(r => isStableWordInsertion(r)));\n\n\tfunction isStableWordInsertion(r: RangeMapping) {\n\t\tconst insertPosition = r.originalRange.getStartPosition();\n\t\tif (pos.isBeforeOrEqual(insertPosition)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (insertPosition.lineNumber < pos.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nfunction isSingleMultiLineInsertion(diff: DetailedLineRangeMapping[]) {\n\tconst inner = diff.flatMap(d => d.innerChanges ?? []);\n\tif (inner.length !== 1) {\n\t\treturn false;\n\t}\n\n\tconst change = inner[0];\n\tif (!change.originalRange.isEmpty()) {\n\t\treturn false;\n\t}\n\n\tif (change.modifiedRange.startLineNumber === change.modifiedRange.endLineNumber) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction isDeletion(inner: RangeMapping[], inlineEdit: InlineEditWithChanges, newText: StringText) {\n\tconst innerValues = inner.map(m => ({ original: inlineEdit.originalText.getValueOfRange(m.originalRange), modified: newText.getValueOfRange(m.modifiedRange) }));\n\treturn innerValues.every(({ original, modified }) => modified.trim() === '' && original.length > 0 && (original.length > modified.length || original.trim() !== ''));\n}\n\nfunction growEditsToEntireWord(replacements: TextReplacement[], originalText: AbstractText): TextReplacement[] {\n\treturn _growEdits(replacements, originalText, (char) => /^[a-zA-Z]$/.test(char));\n}\n\nfunction growEditsUntilWhitespace(replacements: TextReplacement[], originalText: AbstractText): TextReplacement[] {\n\treturn _growEdits(replacements, originalText, (char) => !(/^\\s$/.test(char)));\n}\n\nfunction _growEdits(replacements: TextReplacement[], originalText: AbstractText, fn: (c: string) => boolean): TextReplacement[] {\n\tconst result: TextReplacement[] = [];\n\n\treplacements.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\n\tfor (const edit of replacements) {\n\t\tlet startIndex = edit.range.startColumn - 1;\n\t\tlet endIndex = edit.range.endColumn - 2;\n\t\tlet prefix = '';\n\t\tlet suffix = '';\n\t\tconst startLineContent = originalText.getLineAt(edit.range.startLineNumber);\n\t\tconst endLineContent = originalText.getLineAt(edit.range.endLineNumber);\n\n\t\tif (isIncluded(startLineContent[startIndex])) {\n\t\t\t// grow to the left\n\t\t\twhile (isIncluded(startLineContent[startIndex - 1])) {\n\t\t\t\tprefix = startLineContent[startIndex - 1] + prefix;\n\t\t\t\tstartIndex--;\n\t\t\t}\n\t\t}\n\n\t\tif (isIncluded(endLineContent[endIndex]) || endIndex < startIndex) {\n\t\t\t// grow to the right\n\t\t\twhile (isIncluded(endLineContent[endIndex + 1])) {\n\t\t\t\tsuffix += endLineContent[endIndex + 1];\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\n\t\t// create new edit and merge together if they are touching\n\t\tlet newEdit = new TextReplacement(new Range(edit.range.startLineNumber, startIndex + 1, edit.range.endLineNumber, endIndex + 2), prefix + edit.text + suffix);\n\t\tif (result.length > 0 && Range.areIntersectingOrTouching(result[result.length - 1].range, newEdit.range)) {\n\t\t\tnewEdit = TextReplacement.joinReplacements([result.pop()!, newEdit], originalText);\n\t\t}\n\n\t\tresult.push(newEdit);\n\t}\n\n\tfunction isIncluded(c: string | undefined) {\n\t\tif (c === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn fn(c);\n\t}\n\n\treturn result;\n}\n\nfunction getGhostTextTopOffset(ghostTextIndicator: GhostTextIndicator, editor: ICodeEditor): number {\n\tconst replacements = ghostTextIndicator.model.inlineEdit.edit.replacements;\n\tif (replacements.length !== 1) {\n\t\treturn 0;\n\t}\n\n\tconst textModel = editor.getModel();\n\tif (!textModel) {\n\t\treturn 0;\n\t}\n\n\tconst EOL = textModel.getEOL();\n\tconst replacement = replacements[0];\n\tif (replacement.range.isEmpty() && replacement.text.startsWith(EOL)) {\n\t\tconst lineHeight = editor.getLineHeightForPosition(replacement.range.getStartPosition());\n\t\treturn countPrefixRepeats(replacement.text, EOL) * lineHeight;\n\t}\n\n\treturn 0;\n}\n\nfunction countPrefixRepeats(str: string, prefix: string): number {\n\tif (!prefix.length) {\n\t\treturn 0;\n\t}\n\tlet count = 0;\n\tlet i = 0;\n\twhile (str.startsWith(prefix, i)) {\n\t\tcount++;\n\t\ti += prefix.length;\n\t}\n\treturn count;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equalsIfDefined, itemEquals } from '../../../../../../base/common/equals.js';\nimport { BugIndicatingError } from '../../../../../../base/common/errors.js';\nimport { Event } from '../../../../../../base/common/event.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, derived, derivedOpts, IObservable, IReader, ISettableObservable, mapObservableArrayCached, observableValue } from '../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../../common/config/editorOptions.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { Position } from '../../../../../common/core/position.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { TextReplacement } from '../../../../../common/core/edits/textEdit.js';\nimport { AbstractText, StringText } from '../../../../../common/core/text/abstractText.js';\nimport { TextLength } from '../../../../../common/core/text/textLength.js';\nimport { DetailedLineRangeMapping, lineRangeMappingFromRangeMappings, RangeMapping } from '../../../../../common/diff/rangeMapping.js';\nimport { TextModel } from '../../../../../common/model/textModel.js';\nimport { InlineEditsGutterIndicator } from './components/gutterIndicatorView.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\nimport { GhostTextIndicator, InlineEditHost, InlineEditModel } from './inlineEditsModel.js';\nimport { InlineEditsOnboardingExperience } from './inlineEditsNewUsers.js';\nimport { IInlineEditModel, InlineCompletionViewData, InlineCompletionViewKind, InlineEditTabAction } from './inlineEditsViewInterface.js';\nimport { InlineEditsCollapsedView } from './inlineEditsViews/inlineEditsCollapsedView.js';\nimport { InlineEditsCustomView } from './inlineEditsViews/inlineEditsCustomView.js';\nimport { InlineEditsDeletionView } from './inlineEditsViews/inlineEditsDeletionView.js';\nimport { InlineEditsInsertionView } from './inlineEditsViews/inlineEditsInsertionView.js';\nimport { InlineEditsLineReplacementView } from './inlineEditsViews/inlineEditsLineReplacementView.js';\nimport { InlineEditsSideBySideView } from './inlineEditsViews/inlineEditsSideBySideView.js';\nimport { InlineEditsWordReplacementView } from './inlineEditsViews/inlineEditsWordReplacementView.js';\nimport { IOriginalEditorInlineDiffViewState, OriginalEditorInlineDiffView } from './inlineEditsViews/originalEditorInlineDiffView.js';\nimport { applyEditToModifiedRangeMappings, createReindentEdit } from './utils/utils.js';\nimport './view.css';\nimport { $ } from '../../../../../../base/browser/dom.js';\n\n\nexport class InlineEditsView extends Disposable {\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _useCodeShifting;\n\tprivate readonly _renderSideBySide;\n\n\tprivate readonly _tabAction;\n\n\tprivate _previousView: {\n\t\tid: string;\n\t\tview: ReturnType<typeof InlineEditsView.prototype.determineView>;\n\t\teditorWidth: number;\n\t\ttimestamp: number;\n\t} | undefined;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _host: IObservable<InlineEditHost | undefined>,\n\t\tprivate readonly _model: IObservable<InlineEditModel | undefined>,\n\t\tprivate readonly _ghostTextIndicator: IObservable<GhostTextIndicator | undefined>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._tabAction = derived<InlineEditTabAction>(reader => this._model.read(reader)?.tabAction.read(reader) ?? InlineEditTabAction.Inactive);\n\t\tthis._constructorDone = observableValue(this, false);\n\t\tthis._uiState = derived<{\n\t\t\tstate: ReturnType<typeof InlineEditsView.prototype.determineRenderState>;\n\t\t\tdiff: DetailedLineRangeMapping[];\n\t\t\tedit: InlineEditWithChanges;\n\t\t\tnewText: string;\n\t\t\tnewTextLineCount: number;\n\t\t\tisInDiffEditor: boolean;\n\t\t} | undefined>(this, reader => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model || !this._constructorDone.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst inlineEdit = model.inlineEdit;\n\t\t\tlet mappings = RangeMapping.fromEdit(inlineEdit.edit);\n\t\t\tlet newText = inlineEdit.edit.apply(inlineEdit.originalText);\n\t\t\tlet diff = lineRangeMappingFromRangeMappings(mappings, inlineEdit.originalText, new StringText(newText));\n\n\t\t\tlet state = this.determineRenderState(model, reader, diff, new StringText(newText));\n\t\t\tif (!state) {\n\t\t\t\tmodel.abort(`unable to determine view: tried to render ${this._previousView?.view}`);\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tif (state.kind === InlineCompletionViewKind.SideBySide) {\n\t\t\t\tconst indentationAdjustmentEdit = createReindentEdit(newText, inlineEdit.modifiedLineRange, textModel.getOptions().tabSize);\n\t\t\t\tnewText = indentationAdjustmentEdit.applyToString(newText);\n\n\t\t\t\tmappings = applyEditToModifiedRangeMappings(mappings, indentationAdjustmentEdit);\n\t\t\t\tdiff = lineRangeMappingFromRangeMappings(mappings, inlineEdit.originalText, new StringText(newText));\n\t\t\t}\n\n\t\t\tthis._previewTextModel.setLanguage(this._editor.getModel()!.getLanguageId());\n\n\t\t\tconst previousNewText = this._previewTextModel.getValue();\n\t\t\tif (previousNewText !== newText) {\n\t\t\t\t// Only update the model if the text has changed to avoid flickering\n\t\t\t\tthis._previewTextModel.setValue(newText);\n\t\t\t}\n\n\t\t\tif (model.showCollapsed.read(reader) && !this._indicator.read(reader)?.isHoverVisible.read(reader)) {\n\t\t\t\tstate = { kind: InlineCompletionViewKind.Collapsed as const, viewData: state.viewData };\n\t\t\t}\n\n\t\t\tmodel.handleInlineEditShown(state.kind, state.viewData);\n\n\t\t\treturn {\n\t\t\t\tstate,\n\t\t\t\tdiff,\n\t\t\t\tedit: inlineEdit,\n\t\t\t\tnewText,\n\t\t\t\tnewTextLineCount: inlineEdit.modifiedLineRange.length,\n\t\t\t\tisInDiffEditor: model.isInDiffEditor,\n\t\t\t};\n\t\t});\n\t\tthis._previewTextModel = this._register(this._instantiationService.createInstance(\n\t\t\tTextModel,\n\t\t\t'',\n\t\t\tthis._editor.getModel()!.getLanguageId(),\n\t\t\t{ ...TextModel.DEFAULT_CREATION_OPTIONS, bracketPairColorizationOptions: { enabled: true, independentColorPoolPerBracketType: false } },\n\t\t\tnull\n\t\t));\n\t\tthis._indicatorCyclicDependencyCircuitBreaker = observableValue(this, false);\n\t\tthis._indicator = derived<InlineEditsGutterIndicator | undefined>(this, (reader) => {\n\t\t\tif (!this._indicatorCyclicDependencyCircuitBreaker.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst indicatorDisplayRange = derivedOpts({ owner: this, equalsFn: equalsIfDefined(itemEquals()) }, reader => {\n\t\t\t\tconst ghostTextIndicator = this._ghostTextIndicator.read(reader);\n\t\t\t\tif (ghostTextIndicator) {\n\t\t\t\t\treturn ghostTextIndicator.lineRange;\n\t\t\t\t}\n\n\t\t\t\tconst state = this._uiState.read(reader);\n\t\t\t\tif (!state) { return undefined; }\n\n\t\t\t\tif (state.state?.kind === 'custom') {\n\t\t\t\t\tconst range = state.state.displayLocation?.range;\n\t\t\t\t\tif (!range) {\n\t\t\t\t\t\tthrow new BugIndicatingError('custom view should have a range');\n\t\t\t\t\t}\n\t\t\t\t\treturn new LineRange(range.startLineNumber, range.endLineNumber);\n\t\t\t\t}\n\n\t\t\t\tif (state.state?.kind === 'insertionMultiLine') {\n\t\t\t\t\treturn this._insertion.originalLines.read(reader);\n\t\t\t\t}\n\n\t\t\t\treturn state.edit.displayRange;\n\t\t\t});\n\n\t\t\tconst modelWithGhostTextSupport = derived<InlineEditModel | undefined>(this, reader => {\n\t\t\t\tconst model = this._model.read(reader);\n\t\t\t\tif (model) {\n\t\t\t\t\treturn model;\n\t\t\t\t}\n\n\t\t\t\tconst ghostTextIndicator = this._ghostTextIndicator.read(reader);\n\t\t\t\tif (ghostTextIndicator) {\n\t\t\t\t\treturn ghostTextIndicator.model;\n\t\t\t\t}\n\n\t\t\t\treturn model;\n\t\t\t});\n\n\t\t\treturn reader.store.add(this._instantiationService.createInstance(\n\t\t\t\tInlineEditsGutterIndicator,\n\t\t\t\tthis._editorObs,\n\t\t\t\tindicatorDisplayRange,\n\t\t\t\tthis._gutterIndicatorOffset,\n\t\t\t\tmodelWithGhostTextSupport,\n\t\t\t\tthis._inlineEditsIsHovered,\n\t\t\t\tthis._focusIsInMenu,\n\t\t\t));\n\t\t});\n\t\tthis._inlineEditsIsHovered = derived(this, reader => {\n\t\t\treturn this._sideBySide.isHovered.read(reader)\n\t\t\t\t|| this._wordReplacementViews.read(reader).some(v => v.isHovered.read(reader))\n\t\t\t\t|| this._deletion.isHovered.read(reader)\n\t\t\t\t|| this._inlineDiffView.isHovered.read(reader)\n\t\t\t\t|| this._lineReplacementView.isHovered.read(reader)\n\t\t\t\t|| this._insertion.isHovered.read(reader)\n\t\t\t\t|| this._customView.isHovered.read(reader);\n\t\t});\n\t\tthis._gutterIndicatorOffset = derived<number>(this, reader => {\n\t\t\t// TODO: have a better way to tell the gutter indicator view where the edit is inside a viewzone\n\t\t\tif (this._uiState.read(reader)?.state?.kind === 'insertionMultiLine') {\n\t\t\t\treturn this._insertion.startLineOffset.read(reader);\n\t\t\t}\n\n\t\t\tconst ghostTextIndicator = this._ghostTextIndicator.read(reader);\n\t\t\tif (ghostTextIndicator) {\n\t\t\t\treturn getGhostTextTopOffset(ghostTextIndicator, this._editor);\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t});\n\t\tthis._sideBySide = this._register(this._instantiationService.createInstance(InlineEditsSideBySideView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map(m => m?.inlineEdit),\n\t\t\tthis._previewTextModel,\n\t\t\tthis._uiState.map(s => s && s.state?.kind === InlineCompletionViewKind.SideBySide ? ({\n\t\t\t\tnewTextLineCount: s.newTextLineCount,\n\t\t\t\tisInDiffEditor: s.isInDiffEditor,\n\t\t\t}) : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._deletion = this._register(this._instantiationService.createInstance(InlineEditsDeletionView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map(m => m?.inlineEdit),\n\t\t\tthis._uiState.map(s => s && s.state?.kind === InlineCompletionViewKind.Deletion ? ({\n\t\t\t\toriginalRange: s.state.originalRange,\n\t\t\t\tdeletions: s.state.deletions,\n\t\t\t\tinDiffEditor: s.isInDiffEditor,\n\t\t\t}) : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._insertion = this._register(this._instantiationService.createInstance(InlineEditsInsertionView,\n\t\t\tthis._editor,\n\t\t\tthis._uiState.map(s => s && s.state?.kind === InlineCompletionViewKind.InsertionMultiLine ? ({\n\t\t\t\tlineNumber: s.state.lineNumber,\n\t\t\t\tstartColumn: s.state.column,\n\t\t\t\ttext: s.state.text,\n\t\t\t\tinDiffEditor: s.isInDiffEditor,\n\t\t\t}) : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._inlineDiffViewState = derived<IOriginalEditorInlineDiffViewState | undefined>(this, reader => {\n\t\t\tconst e = this._uiState.read(reader);\n\t\t\tif (!e || !e.state) { return undefined; }\n\t\t\tif (e.state.kind === 'wordReplacements' || e.state.kind === 'insertionMultiLine' || e.state.kind === 'collapsed' || e.state.kind === 'custom') {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tmodifiedText: new StringText(e.newText),\n\t\t\t\tdiff: e.diff,\n\t\t\t\tmode: e.state.kind,\n\t\t\t\tmodifiedCodeEditor: this._sideBySide.previewEditor,\n\t\t\t\tisInDiffEditor: e.isInDiffEditor,\n\t\t\t};\n\t\t});\n\t\tthis._inlineCollapsedView = this._register(this._instantiationService.createInstance(InlineEditsCollapsedView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map((m, reader) => this._uiState.read(reader)?.state?.kind === 'collapsed' ? m?.inlineEdit : undefined)\n\t\t));\n\t\tthis._customView = this._register(this._instantiationService.createInstance(InlineEditsCustomView,\n\t\t\tthis._editor,\n\t\t\tthis._model.map((m, reader) => this._uiState.read(reader)?.state?.kind === 'custom' ? m?.displayLocation : undefined),\n\t\t\tthis._tabAction,\n\t\t));\n\t\tthis._inlineDiffView = this._register(new OriginalEditorInlineDiffView(this._editor, this._inlineDiffViewState, this._previewTextModel));\n\t\tthis._wordReplacementViews = mapObservableArrayCached(this, this._uiState.map(s => s?.state?.kind === 'wordReplacements' ? s.state.replacements : []), (e, store) => {\n\t\t\treturn store.add(this._instantiationService.createInstance(InlineEditsWordReplacementView, this._editorObs, e, this._tabAction));\n\t\t});\n\t\tthis._lineReplacementView = this._register(this._instantiationService.createInstance(InlineEditsLineReplacementView,\n\t\t\tthis._editorObs,\n\t\t\tthis._uiState.map(s => s?.state?.kind === InlineCompletionViewKind.LineReplacement ? ({\n\t\t\t\toriginalRange: s.state.originalRange,\n\t\t\t\tmodifiedRange: s.state.modifiedRange,\n\t\t\t\tmodifiedLines: s.state.modifiedLines,\n\t\t\t\treplacements: s.state.replacements,\n\t\t\t}) : undefined),\n\t\t\tthis._uiState.map(s => s?.isInDiffEditor ?? false),\n\t\t\tthis._tabAction,\n\t\t));\n\n\t\tthis._useCodeShifting = this._editorObs.getOption(EditorOption.inlineSuggest).map(s => s.edits.allowCodeShifting);\n\t\tthis._renderSideBySide = this._editorObs.getOption(EditorOption.inlineSuggest).map(s => s.edits.renderSideBySide);\n\n\t\tthis._register(autorunWithStore((reader, store) => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstore.add(\n\t\t\t\tEvent.any(\n\t\t\t\t\tthis._sideBySide.onDidClick,\n\t\t\t\t\tthis._deletion.onDidClick,\n\t\t\t\t\tthis._lineReplacementView.onDidClick,\n\t\t\t\t\tthis._insertion.onDidClick,\n\t\t\t\t\t...this._wordReplacementViews.read(reader).map(w => w.onDidClick),\n\t\t\t\t\tthis._inlineDiffView.onDidClick,\n\t\t\t\t\tthis._customView.onDidClick,\n\t\t\t\t)(e => {\n\t\t\t\t\tif (this._viewHasBeenShownLongerThan(350)) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tmodel.accept();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}));\n\n\t\tthis._indicator.recomputeInitiallyAndOnChange(this._store);\n\t\tthis._wordReplacementViews.recomputeInitiallyAndOnChange(this._store);\n\n\t\tthis._indicatorCyclicDependencyCircuitBreaker.set(true, undefined);\n\n\t\tthis._register(this._instantiationService.createInstance(InlineEditsOnboardingExperience, this._host, this._model, this._indicator, this._inlineCollapsedView));\n\n\t\tconst minEditorScrollHeight = derived(this, reader => {\n\t\t\treturn Math.max(\n\t\t\t\t...this._wordReplacementViews.read(reader).map(v => v.minEditorScrollHeight.read(reader)),\n\t\t\t\tthis._lineReplacementView.minEditorScrollHeight.read(reader),\n\t\t\t\tthis._customView.minEditorScrollHeight.read(reader)\n\t\t\t);\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\n\t\tconst textModel = this._editor.getModel()!;\n\n\t\tlet viewZoneId: string | undefined;\n\t\tthis._register(autorun(reader => {\n\t\t\tconst minScrollHeight = minEditorScrollHeight.read(reader);\n\t\t\tthis._editor.changeViewZones(accessor => {\n\t\t\t\tconst scrollHeight = this._editor.getScrollHeight();\n\t\t\t\tconst viewZoneHeight = minScrollHeight - scrollHeight + 1 /* Add 1px so there is a small gap */;\n\n\t\t\t\tif (viewZoneHeight !== 0 && viewZoneId) {\n\t\t\t\t\taccessor.removeZone(viewZoneId);\n\t\t\t\t\tviewZoneId = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (viewZoneHeight <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tviewZoneId = accessor.addZone({\n\t\t\t\t\tafterLineNumber: textModel.getLineCount(),\n\t\t\t\t\theightInPx: viewZoneHeight,\n\t\t\t\t\tdomNode: $('div.minScrollHeightViewZone'),\n\t\t\t\t});\n\t\t\t});\n\t\t}));\n\n\t\tthis._constructorDone.set(true, undefined); // TODO: remove and use correct initialization order\n\t}\n\n\tprivate readonly _constructorDone;\n\n\tprivate readonly _uiState;\n\n\tprivate readonly _previewTextModel;\n\n\tprivate readonly _indicatorCyclicDependencyCircuitBreaker;\n\n\tprotected readonly _indicator;\n\n\tprivate readonly _inlineEditsIsHovered;\n\n\tprivate readonly _gutterIndicatorOffset;\n\n\tprivate readonly _sideBySide;\n\n\tprotected readonly _deletion;\n\n\tprotected readonly _insertion;\n\n\tprivate readonly _inlineDiffViewState;\n\n\tprotected readonly _inlineCollapsedView;\n\n\tprotected readonly _customView;\n\n\tprotected readonly _inlineDiffView;\n\n\tprotected readonly _wordReplacementViews;\n\n\tprotected readonly _lineReplacementView;\n\n\tprivate getCacheId(model: IInlineEditModel) {\n\t\treturn model.inlineEdit.inlineCompletion.identity.id;\n\t}\n\n\tprivate determineView(model: IInlineEditModel, reader: IReader, diff: DetailedLineRangeMapping[], newText: StringText): InlineCompletionViewKind {\n\t\t// Check if we can use the previous view if it is the same InlineCompletion as previously shown\n\t\tconst inlineEdit = model.inlineEdit;\n\t\tconst canUseCache = this._previousView?.id === this.getCacheId(model);\n\t\tconst reconsiderViewEditorWidthChange = this._previousView?.editorWidth !== this._editorObs.layoutInfoWidth.read(reader) &&\n\t\t\t(\n\t\t\t\tthis._previousView?.view === InlineCompletionViewKind.SideBySide ||\n\t\t\t\tthis._previousView?.view === InlineCompletionViewKind.LineReplacement\n\t\t\t);\n\n\t\tif (canUseCache && !reconsiderViewEditorWidthChange) {\n\t\t\treturn this._previousView!.view;\n\t\t}\n\n\t\tif (model.displayLocation) {\n\t\t\treturn InlineCompletionViewKind.Custom;\n\t\t}\n\n\t\t// Determine the view based on the edit / diff\n\n\t\tconst numOriginalLines = inlineEdit.originalLineRange.length;\n\t\tconst numModifiedLines = inlineEdit.modifiedLineRange.length;\n\t\tconst inner = diff.flatMap(d => d.innerChanges ?? []);\n\t\tconst isSingleInnerEdit = inner.length === 1;\n\n\t\tif (!model.isInDiffEditor) {\n\t\t\tif (\n\t\t\t\tisSingleInnerEdit\n\t\t\t\t&& this._useCodeShifting.read(reader) !== 'never'\n\t\t\t\t&& isSingleLineInsertion(diff)\n\t\t\t) {\n\t\t\t\tif (isSingleLineInsertionAfterPosition(diff, inlineEdit.cursorPosition)) {\n\t\t\t\t\treturn InlineCompletionViewKind.InsertionInline;\n\t\t\t\t}\n\n\t\t\t\t// If we have a single line insertion before the cursor position, we do not want to move the cursor by inserting\n\t\t\t\t// the suggestion inline. Use a line replacement view instead. Do not use word replacement view.\n\t\t\t\treturn InlineCompletionViewKind.LineReplacement;\n\t\t\t}\n\n\t\t\tif (isDeletion(inner, inlineEdit, newText)) {\n\t\t\t\treturn InlineCompletionViewKind.Deletion;\n\t\t\t}\n\n\t\t\tif (isSingleMultiLineInsertion(diff) && this._useCodeShifting.read(reader) === 'always') {\n\t\t\t\treturn InlineCompletionViewKind.InsertionMultiLine;\n\t\t\t}\n\n\t\t\tconst allInnerChangesNotTooLong = inner.every(m => TextLength.ofRange(m.originalRange).columnCount < InlineEditsWordReplacementView.MAX_LENGTH && TextLength.ofRange(m.modifiedRange).columnCount < InlineEditsWordReplacementView.MAX_LENGTH);\n\t\t\tif (allInnerChangesNotTooLong && isSingleInnerEdit && numOriginalLines === 1 && numModifiedLines === 1) {\n\t\t\t\t// Do not show indentation changes with word replacement view\n\t\t\t\tconst modifiedText = inner.map(m => newText.getValueOfRange(m.modifiedRange));\n\t\t\t\tconst originalText = inner.map(m => model.inlineEdit.originalText.getValueOfRange(m.originalRange));\n\t\t\t\tif (!modifiedText.some(v => v.includes('\\t')) && !originalText.some(v => v.includes('\\t'))) {\n\t\t\t\t\t// Make sure there is no insertion, even if we grow them\n\t\t\t\t\tif (\n\t\t\t\t\t\t!inner.some(m => m.originalRange.isEmpty()) ||\n\t\t\t\t\t\t!growEditsUntilWhitespace(inner.map(m => new TextReplacement(m.originalRange, '')), inlineEdit.originalText).some(e => e.range.isEmpty() && TextLength.ofRange(e.range).columnCount < InlineEditsWordReplacementView.MAX_LENGTH)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn InlineCompletionViewKind.WordReplacements;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (numOriginalLines > 0 && numModifiedLines > 0) {\n\t\t\tif (numOriginalLines === 1 && numModifiedLines === 1 && !model.isInDiffEditor /* prefer side by side in diff editor */) {\n\t\t\t\treturn InlineCompletionViewKind.LineReplacement;\n\t\t\t}\n\n\t\t\tif (this._renderSideBySide.read(reader) !== 'never' && InlineEditsSideBySideView.fitsInsideViewport(this._editor, this._previewTextModel, inlineEdit, reader)) {\n\t\t\t\treturn InlineCompletionViewKind.SideBySide;\n\t\t\t}\n\n\t\t\treturn InlineCompletionViewKind.LineReplacement;\n\t\t}\n\n\t\tif (model.isInDiffEditor) {\n\t\t\tif (isDeletion(inner, inlineEdit, newText)) {\n\t\t\t\treturn InlineCompletionViewKind.Deletion;\n\t\t\t}\n\n\t\t\tif (isSingleMultiLineInsertion(diff) && this._useCodeShifting.read(reader) === 'always') {\n\t\t\t\treturn InlineCompletionViewKind.InsertionMultiLine;\n\t\t\t}\n\t\t}\n\n\t\treturn InlineCompletionViewKind.SideBySide;\n\t}\n\n\tprivate determineRenderState(model: IInlineEditModel, reader: IReader, diff: DetailedLineRangeMapping[], newText: StringText) {\n\t\tconst inlineEdit = model.inlineEdit;\n\n\t\tconst view = this.determineView(model, reader, diff, newText);\n\n\t\tthis._previousView = { id: this.getCacheId(model), view, editorWidth: this._editor.getLayoutInfo().width, timestamp: Date.now() };\n\n\t\tconst inner = diff.flatMap(d => d.innerChanges ?? []);\n\t\tconst textModel = this._editor.getModel()!;\n\t\tconst stringChanges = inner.map(m => ({\n\t\t\toriginalRange: m.originalRange,\n\t\t\tmodifiedRange: m.modifiedRange,\n\t\t\toriginal: textModel.getValueInRange(m.originalRange),\n\t\t\tmodified: newText.getValueOfRange(m.modifiedRange)\n\t\t}));\n\n\t\tconst cursorPosition = inlineEdit.cursorPosition;\n\t\tconst startsWithEOL = stringChanges[0].modified.startsWith(textModel.getEOL());\n\t\tconst viewData: InlineCompletionViewData = {\n\t\t\tcursorColumnDistance: inlineEdit.edit.replacements[0].range.getStartPosition().column - cursorPosition.column,\n\t\t\tcursorLineDistance: inlineEdit.lineEdit.lineRange.startLineNumber - cursorPosition.lineNumber + (startsWithEOL && inlineEdit.lineEdit.lineRange.startLineNumber >= cursorPosition.lineNumber ? 1 : 0),\n\t\t\tlineCountOriginal: inlineEdit.lineEdit.lineRange.length,\n\t\t\tlineCountModified: inlineEdit.lineEdit.newLines.length,\n\t\t\tcharacterCountOriginal: stringChanges.reduce((acc, r) => acc + r.original.length, 0),\n\t\t\tcharacterCountModified: stringChanges.reduce((acc, r) => acc + r.modified.length, 0),\n\t\t\tdisjointReplacements: stringChanges.length,\n\t\t\tsameShapeReplacements: stringChanges.every(r => r.original === stringChanges[0].original && r.modified === stringChanges[0].modified),\n\t\t};\n\n\t\tswitch (view) {\n\t\t\tcase InlineCompletionViewKind.InsertionInline: return { kind: InlineCompletionViewKind.InsertionInline as const, viewData };\n\t\t\tcase InlineCompletionViewKind.SideBySide: return { kind: InlineCompletionViewKind.SideBySide as const, viewData };\n\t\t\tcase InlineCompletionViewKind.Collapsed: return { kind: InlineCompletionViewKind.Collapsed as const, viewData };\n\t\t\tcase InlineCompletionViewKind.Custom: return { kind: InlineCompletionViewKind.Custom as const, displayLocation: model.displayLocation, viewData };\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.Deletion) {\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.Deletion as const,\n\t\t\t\toriginalRange: inlineEdit.originalLineRange,\n\t\t\t\tdeletions: inner.map(m => m.originalRange),\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.InsertionMultiLine) {\n\t\t\tconst change = inner[0];\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.InsertionMultiLine as const,\n\t\t\t\tlineNumber: change.originalRange.startLineNumber,\n\t\t\t\tcolumn: change.originalRange.startColumn,\n\t\t\t\ttext: newText.getValueOfRange(change.modifiedRange),\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\tconst replacements = stringChanges.map(m => new TextReplacement(m.originalRange, m.modified));\n\t\tif (replacements.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.WordReplacements) {\n\t\t\tlet grownEdits = growEditsToEntireWord(replacements, inlineEdit.originalText);\n\n\t\t\tif (grownEdits.some(e => e.range.isEmpty())) {\n\t\t\t\tgrownEdits = growEditsUntilWhitespace(replacements, inlineEdit.originalText);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.WordReplacements as const,\n\t\t\t\treplacements: grownEdits,\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\tif (view === InlineCompletionViewKind.LineReplacement) {\n\t\t\treturn {\n\t\t\t\tkind: InlineCompletionViewKind.LineReplacement as const,\n\t\t\t\toriginalRange: inlineEdit.originalLineRange,\n\t\t\t\tmodifiedRange: inlineEdit.modifiedLineRange,\n\t\t\t\tmodifiedLines: inlineEdit.modifiedLineRange.mapToLineArray(line => newText.getLineAt(line)),\n\t\t\t\treplacements: inner.map(m => ({ originalRange: m.originalRange, modifiedRange: m.modifiedRange })),\n\t\t\t\tviewData,\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate _viewHasBeenShownLongerThan(durationMs: number): boolean {\n\t\tconst viewCreationTime = this._previousView?.timestamp;\n\t\tif (!viewCreationTime) {\n\t\t\tthrow new BugIndicatingError('viewHasBeenShownLongThan called before a view has been shown');\n\t\t}\n\n\t\tconst currentTime = Date.now();\n\t\treturn (currentTime - viewCreationTime) >= durationMs;\n\t}\n}\n\nfunction isSingleLineInsertion(diff: DetailedLineRangeMapping[]) {\n\treturn diff.every(m => m.innerChanges!.every(r => isWordInsertion(r)));\n\n\tfunction isWordInsertion(r: RangeMapping) {\n\t\tif (!r.originalRange.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isInsertionWithinLine = r.modifiedRange.startLineNumber === r.modifiedRange.endLineNumber;\n\t\tif (!isInsertionWithinLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n\nfunction isSingleLineInsertionAfterPosition(diff: DetailedLineRangeMapping[], position: Position | null) {\n\tif (!position) {\n\t\treturn false;\n\t}\n\n\tif (!isSingleLineInsertion(diff)) {\n\t\treturn false;\n\t}\n\n\tconst pos = position;\n\n\treturn diff.every(m => m.innerChanges!.every(r => isStableWordInsertion(r)));\n\n\tfunction isStableWordInsertion(r: RangeMapping) {\n\t\tconst insertPosition = r.originalRange.getStartPosition();\n\t\tif (pos.isBeforeOrEqual(insertPosition)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (insertPosition.lineNumber < pos.lineNumber) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nfunction isSingleMultiLineInsertion(diff: DetailedLineRangeMapping[]) {\n\tconst inner = diff.flatMap(d => d.innerChanges ?? []);\n\tif (inner.length !== 1) {\n\t\treturn false;\n\t}\n\n\tconst change = inner[0];\n\tif (!change.originalRange.isEmpty()) {\n\t\treturn false;\n\t}\n\n\tif (change.modifiedRange.startLineNumber === change.modifiedRange.endLineNumber) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nfunction isDeletion(inner: RangeMapping[], inlineEdit: InlineEditWithChanges, newText: StringText) {\n\tconst innerValues = inner.map(m => ({ original: inlineEdit.originalText.getValueOfRange(m.originalRange), modified: newText.getValueOfRange(m.modifiedRange) }));\n\treturn innerValues.every(({ original, modified }) => modified.trim() === '' && original.length > 0 && (original.length > modified.length || original.trim() !== ''));\n}\n\nfunction growEditsToEntireWord(replacements: TextReplacement[], originalText: AbstractText): TextReplacement[] {\n\treturn _growEdits(replacements, originalText, (char) => /^[a-zA-Z]$/.test(char));\n}\n\nfunction growEditsUntilWhitespace(replacements: TextReplacement[], originalText: AbstractText): TextReplacement[] {\n\treturn _growEdits(replacements, originalText, (char) => !(/^\\s$/.test(char)));\n}\n\nfunction _growEdits(replacements: TextReplacement[], originalText: AbstractText, fn: (c: string) => boolean): TextReplacement[] {\n\tconst result: TextReplacement[] = [];\n\n\treplacements.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n\n\tfor (const edit of replacements) {\n\t\tlet startIndex = edit.range.startColumn - 1;\n\t\tlet endIndex = edit.range.endColumn - 2;\n\t\tlet prefix = '';\n\t\tlet suffix = '';\n\t\tconst startLineContent = originalText.getLineAt(edit.range.startLineNumber);\n\t\tconst endLineContent = originalText.getLineAt(edit.range.endLineNumber);\n\n\t\tif (isIncluded(startLineContent[startIndex])) {\n\t\t\t// grow to the left\n\t\t\twhile (isIncluded(startLineContent[startIndex - 1])) {\n\t\t\t\tprefix = startLineContent[startIndex - 1] + prefix;\n\t\t\t\tstartIndex--;\n\t\t\t}\n\t\t}\n\n\t\tif (isIncluded(endLineContent[endIndex]) || endIndex < startIndex) {\n\t\t\t// grow to the right\n\t\t\twhile (isIncluded(endLineContent[endIndex + 1])) {\n\t\t\t\tsuffix += endLineContent[endIndex + 1];\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t}\n\n\t\t// create new edit and merge together if they are touching\n\t\tlet newEdit = new TextReplacement(new Range(edit.range.startLineNumber, startIndex + 1, edit.range.endLineNumber, endIndex + 2), prefix + edit.text + suffix);\n\t\tif (result.length > 0 && Range.areIntersectingOrTouching(result[result.length - 1].range, newEdit.range)) {\n\t\t\tnewEdit = TextReplacement.joinReplacements([result.pop()!, newEdit], originalText);\n\t\t}\n\n\t\tresult.push(newEdit);\n\t}\n\n\tfunction isIncluded(c: string | undefined) {\n\t\tif (c === undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn fn(c);\n\t}\n\n\treturn result;\n}\n\nfunction getGhostTextTopOffset(ghostTextIndicator: GhostTextIndicator, editor: ICodeEditor): number {\n\tconst replacements = ghostTextIndicator.model.inlineEdit.edit.replacements;\n\tif (replacements.length !== 1) {\n\t\treturn 0;\n\t}\n\n\tconst textModel = editor.getModel();\n\tif (!textModel) {\n\t\treturn 0;\n\t}\n\n\tconst EOL = textModel.getEOL();\n\tconst replacement = replacements[0];\n\tif (replacement.range.isEmpty() && replacement.text.startsWith(EOL)) {\n\t\tconst lineHeight = editor.getLineHeightForPosition(replacement.range.getStartPosition());\n\t\treturn countPrefixRepeats(replacement.text, EOL) * lineHeight;\n\t}\n\n\treturn 0;\n}\n\nfunction countPrefixRepeats(str: string, prefix: string): number {\n\tif (!prefix.length) {\n\t\treturn 0;\n\t}\n\tlet count = 0;\n\tlet i = 0;\n\twhile (str.startsWith(prefix, i)) {\n\t\tcount++;\n\t\ti += prefix.length;\n\t}\n\treturn count;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9289, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewProducer.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewProducer.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/vs/editor/contrib/inlineCompletions/browser/view/inlineEdits/inlineEditsViewProducer.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHotClass } from '../../../../../../base/common/hotReloadHelpers.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { derived, IObservable, ISettableObservable } from '../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../../common/core/edits/textEdit.js';\nimport { TextModelText } from '../../../../../common/model/textModelText.js';\nimport { InlineCompletionsModel } from '../../model/inlineCompletionsModel.js';\nimport { InlineEdit } from '../../model/inlineEdit.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\nimport { GhostTextIndicator, InlineEditHost, InlineEditModel } from './inlineEditsModel.js';\nimport { InlineEditsView } from './inlineEditsView.js';\nimport { InlineEditTabAction } from './inlineEditsViewInterface.js';\n\nexport class InlineEditsViewAndDiffProducer extends Disposable { // TODO: This class is no longer a diff producer. Rename it or get rid of it\n\tpublic static readonly hot = createHotClass(InlineEditsViewAndDiffProducer);\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _inlineEdit = derived<InlineEditWithChanges | undefined>(this, (reader) => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) { return undefined; }\n\t\tconst textModel = this._editor.getModel();\n\t\tif (!textModel) { return undefined; }\n\n\t\tconst editOffset = model.inlineEditState.get()?.inlineCompletion.updatedEdit;\n\t\tif (!editOffset) { return undefined; }\n\n\t\tconst edits = editOffset.replacements.map(e => {\n\t\t\tconst innerEditRange = Range.fromPositions(\n\t\t\t\ttextModel.getPositionAt(e.replaceRange.start),\n\t\t\t\ttextModel.getPositionAt(e.replaceRange.endExclusive)\n\t\t\t);\n\t\t\treturn new TextReplacement(innerEditRange, e.newText);\n\t\t});\n\n\t\tconst diffEdits = new TextEdit(edits);\n\t\tconst text = new TextModelText(textModel);\n\n\t\treturn new InlineEditWithChanges(text, diffEdits, model.primaryPosition.get(), inlineEdit.commands, inlineEdit.inlineCompletion);\n\t});\n\n\tprivate readonly _inlineEditModel = derived<InlineEditModel | undefined>(this, reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\tconst edit = this._inlineEdit.read(reader);\n\t\tif (!edit) { return undefined; }\n\n\t\tconst tabAction = derived<InlineEditTabAction>(this, reader => {\n\t\t\tif (this._editorObs.isFocused.read(reader)) {\n\t\t\t\tif (model.tabShouldJumpToInlineEdit.read(reader)) { return InlineEditTabAction.Jump; }\n\t\t\t\tif (model.tabShouldAcceptInlineEdit.read(reader)) { return InlineEditTabAction.Accept; }\n\t\t\t}\n\t\t\treturn InlineEditTabAction.Inactive;\n\t\t});\n\n\t\treturn new InlineEditModel(model, edit, tabAction);\n\t});\n\n\tprivate readonly _inlineEditHost = derived<InlineEditHost | undefined>(this, reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\treturn new InlineEditHost(model);\n\t});\n\n\tprivate readonly _ghostTextIndicator = derived<GhostTextIndicator | undefined>(this, reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\tconst state = model.inlineCompletionState.read(reader);\n\t\tif (!state) { return undefined; }\n\t\tconst inlineCompletion = state.inlineCompletion;\n\t\tif (!inlineCompletion) { return undefined; }\n\n\t\tif (!inlineCompletion.showInlineEditMenu) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst lineRange = LineRange.ofLength(state.primaryGhostText.lineNumber, 1);\n\n\t\treturn new GhostTextIndicator(this._editor, model, lineRange, inlineCompletion);\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEdit | undefined>,\n\t\tprivate readonly _model: IObservable<InlineCompletionsModel | undefined>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tthis._register(instantiationService.createInstance(InlineEditsView, this._editor, this._inlineEditHost, this._inlineEditModel, this._ghostTextIndicator, this._focusIsInMenu));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHotClass } from '../../../../../../base/common/hotReloadHelpers.js';\nimport { Disposable } from '../../../../../../base/common/lifecycle.js';\nimport { derived, IObservable, ISettableObservable } from '../../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../../browser/editorBrowser.js';\nimport { ObservableCodeEditor, observableCodeEditor } from '../../../../../browser/observableCodeEditor.js';\nimport { LineRange } from '../../../../../common/core/ranges/lineRange.js';\nimport { Range } from '../../../../../common/core/range.js';\nimport { TextReplacement, TextEdit } from '../../../../../common/core/edits/textEdit.js';\nimport { TextModelText } from '../../../../../common/model/textModelText.js';\nimport { InlineCompletionsModel } from '../../model/inlineCompletionsModel.js';\nimport { InlineEdit } from '../../model/inlineEdit.js';\nimport { InlineEditWithChanges } from './inlineEditWithChanges.js';\nimport { GhostTextIndicator, InlineEditHost, InlineEditModel } from './inlineEditsModel.js';\nimport { InlineEditsView } from './inlineEditsView.js';\nimport { InlineEditTabAction } from './inlineEditsViewInterface.js';\n\nexport class InlineEditsViewAndDiffProducer extends Disposable { // TODO: This class is no longer a diff producer. Rename it or get rid of it\n\tpublic static readonly hot = createHotClass(InlineEditsViewAndDiffProducer);\n\n\tprivate readonly _editorObs: ObservableCodeEditor;\n\n\tprivate readonly _inlineEdit = derived<InlineEditWithChanges | undefined>(this, (reader) => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\tconst inlineEdit = this._edit.read(reader);\n\t\tif (!inlineEdit) { return undefined; }\n\t\tconst textModel = this._editor.getModel();\n\t\tif (!textModel) { return undefined; }\n\n\t\tconst editOffset = model.inlineEditState.get()?.inlineCompletion.updatedEdit;\n\t\tif (!editOffset) { return undefined; }\n\n\t\tconst edits = editOffset.replacements.map(e => {\n\t\t\tconst innerEditRange = Range.fromPositions(\n\t\t\t\ttextModel.getPositionAt(e.replaceRange.start),\n\t\t\t\ttextModel.getPositionAt(e.replaceRange.endExclusive)\n\t\t\t);\n\t\t\treturn new TextReplacement(innerEditRange, e.newText);\n\t\t});\n\n\t\tconst diffEdits = new TextEdit(edits);\n\t\tconst text = new TextModelText(textModel);\n\n\t\treturn new InlineEditWithChanges(text, diffEdits, model.primaryPosition.get(), inlineEdit.commands, inlineEdit.inlineCompletion);\n\t});\n\n\tprivate readonly _inlineEditModel = derived<InlineEditModel | undefined>(this, reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\tconst edit = this._inlineEdit.read(reader);\n\t\tif (!edit) { return undefined; }\n\n\t\tconst tabAction = derived<InlineEditTabAction>(this, reader => {\n\t\t\tif (this._editorObs.isFocused.read(reader)) {\n\t\t\t\tif (model.tabShouldJumpToInlineEdit.read(reader)) { return InlineEditTabAction.Jump; }\n\t\t\t\tif (model.tabShouldAcceptInlineEdit.read(reader)) { return InlineEditTabAction.Accept; }\n\t\t\t}\n\t\t\treturn InlineEditTabAction.Inactive;\n\t\t});\n\n\t\treturn new InlineEditModel(model, edit, tabAction);\n\t});\n\n\tprivate readonly _inlineEditHost = derived<InlineEditHost | undefined>(this, reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\treturn new InlineEditHost(model);\n\t});\n\n\tprivate readonly _ghostTextIndicator = derived<GhostTextIndicator | undefined>(this, reader => {\n\t\tconst model = this._model.read(reader);\n\t\tif (!model) { return undefined; }\n\t\tconst state = model.inlineCompletionState.read(reader);\n\t\tif (!state) { return undefined; }\n\t\tconst inlineCompletion = state.inlineCompletion;\n\t\tif (!inlineCompletion) { return undefined; }\n\n\t\tif (!inlineCompletion.showInlineEditMenu) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst lineRange = LineRange.ofLength(state.primaryGhostText.lineNumber, 1);\n\n\t\treturn new GhostTextIndicator(this._editor, model, lineRange, inlineCompletion);\n\t});\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _edit: IObservable<InlineEdit | undefined>,\n\t\tprivate readonly _model: IObservable<InlineCompletionsModel | undefined>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\n\t\tthis._register(instantiationService.createInstance(InlineEditsView, this._editor, this._inlineEditHost, this._inlineEditModel, this._ghostTextIndicator, this._focusIsInMenu));\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9434, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/inlineCompletionsView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/view/inlineCompletionsView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/view/vs/editor/contrib/inlineCompletions/browser/view/inlineCompletionsView.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domStylesheets.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { derived, mapObservableArrayCached, derivedDisposable, constObservable, derivedObservableWithCache, IObservable, ISettableObservable } from '../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { InlineCompletionsHintsWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { convertItemsToStableObservables } from '../utils.js';\nimport { GhostTextView } from './ghostText/ghostTextView.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from './inlineEdits/inlineEditsViewInterface.js';\nimport { InlineEditsViewAndDiffProducer } from './inlineEdits/inlineEditsViewProducer.js';\n\nexport class InlineCompletionsView extends Disposable {\n\tprivate readonly _ghostTexts;\n\n\tprivate readonly _stablizedGhostTexts;\n\tprivate readonly _editorObs;\n\n\tprivate readonly _ghostTextWidgets;\n\n\tprivate readonly _inlineEdit;\n\tprivate readonly _everHadInlineEdit;\n\tprotected readonly _inlineEditWidget;\n\n\tprivate readonly _fontFamily;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _model: IObservable<InlineCompletionsModel | undefined>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._ghostTexts = derived(this, (reader) => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\treturn model?.ghostTexts.read(reader) ?? [];\n\t\t});\n\t\tthis._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => derivedDisposable((reader) => this._instantiationService.createInstance(\n\t\t\tGhostTextView.hot.read(reader),\n\t\t\tthis._editor,\n\t\t\t{\n\t\t\t\tghostText: ghostText,\n\t\t\t\twarning: this._model.map((m, reader) => {\n\t\t\t\t\tconst warning = m?.warning?.read(reader);\n\t\t\t\t\treturn warning ? { icon: warning.icon } : undefined;\n\t\t\t\t}),\n\t\t\t\tminReservedLineCount: constObservable(0),\n\t\t\t\ttargetTextModel: this._model.map(v => v?.textModel),\n\t\t\t\thandleInlineCompletionShown: this._model.map((model, reader) => {\n\t\t\t\t\tconst inlineCompletion = model?.inlineCompletionState.read(reader)?.inlineCompletion;\n\t\t\t\t\tif (inlineCompletion) {\n\t\t\t\t\t\treturn (viewData: InlineCompletionViewData) => model.handleInlineSuggestionShown(inlineCompletion, InlineCompletionViewKind.GhostText, viewData);\n\t\t\t\t\t}\n\t\t\t\t\treturn () => { };\n\t\t\t\t}),\n\t\t\t},\n\t\t\tthis._editorObs.getOption(EditorOption.inlineSuggest).map(v => ({ syntaxHighlightingEnabled: v.syntaxHighlightingEnabled })),\n\t\t\tfalse,\n\t\t\tfalse\n\t\t)\n\t\t).recomputeInitiallyAndOnChange(store)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\t\tthis._inlineEdit = derived(this, reader => this._model.read(reader)?.inlineEditState.read(reader)?.inlineEdit);\n\t\tthis._everHadInlineEdit = derivedObservableWithCache<boolean>(this, (reader, last) => last || !!this._inlineEdit.read(reader) || !!this._model.read(reader)?.inlineCompletionState.read(reader)?.inlineCompletion?.showInlineEditMenu);\n\t\tthis._inlineEditWidget = derivedDisposable(reader => {\n\t\t\tif (!this._everHadInlineEdit.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn this._instantiationService.createInstance(InlineEditsViewAndDiffProducer.hot.read(reader), this._editor, this._inlineEdit, this._model, this._focusIsInMenu);\n\t\t})\n\t\t\t.recomputeInitiallyAndOnChange(this._store);\n\t\tthis._fontFamily = this._editorObs.getOption(EditorOption.inlineSuggest).map(val => val.fontFamily);\n\n\t\tthis._register(createStyleSheetFromObservable(derived(reader => {\n\t\t\tconst fontFamily = this._fontFamily.read(reader);\n\t\t\treturn `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n\t\t})));\n\n\t\tthis._register(new InlineCompletionsHintsWidget(this._editor, this._model, this._instantiationService));\n\t}\n\n\tpublic shouldShowHoverAtViewZone(viewZoneId: string): boolean {\n\t\treturn this._ghostTextWidgets.get()[0]?.get().ownsViewZone(viewZoneId) ?? false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createStyleSheetFromObservable } from '../../../../../base/browser/domStylesheets.js';\nimport { Disposable } from '../../../../../base/common/lifecycle.js';\nimport { derived, mapObservableArrayCached, derivedDisposable, constObservable, derivedObservableWithCache, IObservable, ISettableObservable } from '../../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { InlineCompletionsHintsWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { convertItemsToStableObservables } from '../utils.js';\nimport { GhostTextView } from './ghostText/ghostTextView.js';\nimport { InlineCompletionViewData, InlineCompletionViewKind } from './inlineEdits/inlineEditsViewInterface.js';\nimport { InlineEditsViewAndDiffProducer } from './inlineEdits/inlineEditsViewProducer.js';\n\nexport class InlineCompletionsView extends Disposable {\n\tprivate readonly _ghostTexts;\n\n\tprivate readonly _stablizedGhostTexts;\n\tprivate readonly _editorObs;\n\n\tprivate readonly _ghostTextWidgets;\n\n\tprivate readonly _inlineEdit;\n\tprivate readonly _everHadInlineEdit;\n\tprotected readonly _inlineEditWidget;\n\n\tprivate readonly _fontFamily;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _model: IObservable<InlineCompletionsModel | undefined>,\n\t\tprivate readonly _focusIsInMenu: ISettableObservable<boolean>,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._ghostTexts = derived(this, (reader) => {\n\t\t\tconst model = this._model.read(reader);\n\t\t\treturn model?.ghostTexts.read(reader) ?? [];\n\t\t});\n\t\tthis._stablizedGhostTexts = convertItemsToStableObservables(this._ghostTexts, this._store);\n\t\tthis._editorObs = observableCodeEditor(this._editor);\n\t\tthis._ghostTextWidgets = mapObservableArrayCached(this, this._stablizedGhostTexts, (ghostText, store) => derivedDisposable((reader) => this._instantiationService.createInstance(\n\t\t\tGhostTextView.hot.read(reader),\n\t\t\tthis._editor,\n\t\t\t{\n\t\t\t\tghostText: ghostText,\n\t\t\t\twarning: this._model.map((m, reader) => {\n\t\t\t\t\tconst warning = m?.warning?.read(reader);\n\t\t\t\t\treturn warning ? { icon: warning.icon } : undefined;\n\t\t\t\t}),\n\t\t\t\tminReservedLineCount: constObservable(0),\n\t\t\t\ttargetTextModel: this._model.map(v => v?.textModel),\n\t\t\t\thandleInlineCompletionShown: this._model.map((model, reader) => {\n\t\t\t\t\tconst inlineCompletion = model?.inlineCompletionState.read(reader)?.inlineCompletion;\n\t\t\t\t\tif (inlineCompletion) {\n\t\t\t\t\t\treturn (viewData: InlineCompletionViewData) => model.handleInlineSuggestionShown(inlineCompletion, InlineCompletionViewKind.GhostText, viewData);\n\t\t\t\t\t}\n\t\t\t\t\treturn () => { };\n\t\t\t\t}),\n\t\t\t},\n\t\t\tthis._editorObs.getOption(EditorOption.inlineSuggest).map(v => ({ syntaxHighlightingEnabled: v.syntaxHighlightingEnabled })),\n\t\t\tfalse,\n\t\t\tfalse\n\t\t)\n\t\t).recomputeInitiallyAndOnChange(store)\n\t\t).recomputeInitiallyAndOnChange(this._store);\n\t\tthis._inlineEdit = derived(this, reader => this._model.read(reader)?.inlineEditState.read(reader)?.inlineEdit);\n\t\tthis._everHadInlineEdit = derivedObservableWithCache<boolean>(this, (reader, last) => last || !!this._inlineEdit.read(reader) || !!this._model.read(reader)?.inlineCompletionState.read(reader)?.inlineCompletion?.showInlineEditMenu);\n\t\tthis._inlineEditWidget = derivedDisposable(reader => {\n\t\t\tif (!this._everHadInlineEdit.read(reader)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn this._instantiationService.createInstance(InlineEditsViewAndDiffProducer.hot.read(reader), this._editor, this._inlineEdit, this._model, this._focusIsInMenu);\n\t\t})\n\t\t\t.recomputeInitiallyAndOnChange(this._store);\n\t\tthis._fontFamily = this._editorObs.getOption(EditorOption.inlineSuggest).map(val => val.fontFamily);\n\n\t\tthis._register(createStyleSheetFromObservable(derived(reader => {\n\t\t\tconst fontFamily = this._fontFamily.read(reader);\n\t\t\treturn `\n.monaco-editor .ghost-text-decoration,\n.monaco-editor .ghost-text-decoration-preview,\n.monaco-editor .ghost-text {\n\tfont-family: ${fontFamily};\n}`;\n\t\t})));\n\n\t\tthis._register(new InlineCompletionsHintsWidget(this._editor, this._model, this._instantiationService));\n\t}\n\n\tpublic shouldShowHoverAtViewZone(viewZoneId: string): boolean {\n\t\treturn this._ghostTextWidgets.get()[0]?.get().ownsViewZone(viewZoneId) ?? false;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9539, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/vs/editor/contrib/inlineCompletions/browser/controller/inlineCompletionsController.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { alert } from '../../../../../base/browser/ui/aria/aria.js';\nimport { timeout } from '../../../../../base/common/async.js';\nimport { cancelOnDispose } from '../../../../../base/common/cancellation.js';\nimport { createHotClass } from '../../../../../base/common/hotReloadHelpers.js';\nimport { Disposable, toDisposable } from '../../../../../base/common/lifecycle.js';\nimport { ITransaction, autorun, derived, derivedDisposable, derivedObservableWithCache, observableFromEvent, observableSignal, observableValue, runOnChange, runOnChangeWithStore, transaction, waitForState } from '../../../../../base/common/observable.js';\nimport { isEqual } from '../../../../../base/common/resources.js';\nimport { isUndefined } from '../../../../../base/common/types.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { AccessibilitySignal, IAccessibilitySignalService } from '../../../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { ICommandService } from '../../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService, ServicesAccessor } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { hotClassGetOriginalInstance } from '../../../../../platform/observable/common/wrapInHotClass.js';\nimport { CoreEditingCommands } from '../../../../browser/coreCommands.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { observableCodeEditor } from '../../../../browser/observableCodeEditor.js';\nimport { getOuterEditor } from '../../../../browser/widget/codeEditor/embeddedCodeEditorWidget.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { CursorChangeReason } from '../../../../common/cursorEvents.js';\nimport { ILanguageFeatureDebounceService } from '../../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../../common/services/languageFeatures.js';\nimport { InlineSuggestionHintsContentWidget } from '../hintsWidget/inlineCompletionsHintsWidget.js';\nimport { TextModelChangeRecorder } from '../model/changeRecorder.js';\nimport { InlineCompletionsModel } from '../model/inlineCompletionsModel.js';\nimport { ObservableSuggestWidgetAdapter } from '../model/suggestWidgetAdapter.js';\nimport { ObservableContextKeyService } from '../utils.js';\nimport { InlineCompletionsView } from '../view/inlineCompletionsView.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\n\nexport class InlineCompletionsController extends Disposable {\n\tprivate static readonly _instances = new Set<InlineCompletionsController>();\n\n\tpublic static hot = createHotClass(InlineCompletionsController);\n\tpublic static ID = 'editor.contrib.inlineCompletionsController';\n\n\t/**\n\t * Find the controller in the focused editor or in the outer editor (if applicable)\n\t */\n\tpublic static getInFocusedEditorOrParent(accessor: ServicesAccessor): InlineCompletionsController | null {\n\t\tconst outerEditor = getOuterEditor(accessor);\n\t\tif (!outerEditor) {\n\t\t\treturn null;\n\t\t}\n\t\treturn InlineCompletionsController.get(outerEditor);\n\t}\n\n\tpublic static get(editor: ICodeEditor): InlineCompletionsController | null {\n\t\treturn hotClassGetOriginalInstance(editor.getContribution<InlineCompletionsController>(InlineCompletionsController.ID));\n\t}\n\n\tprivate readonly _editorObs;\n\tprivate readonly _positions;\n\n\tprivate readonly _suggestWidgetAdapter;\n\n\tprivate readonly _enabledInConfig;\n\tprivate readonly _isScreenReaderEnabled;\n\tprivate readonly _editorDictationInProgress;\n\tprivate readonly _enabled;\n\n\tprivate readonly _debounceValue;\n\n\tprivate readonly _focusIsInMenu;\n\tprivate readonly _focusIsInEditorOrMenu;\n\n\tprivate readonly _cursorIsInIndentation;\n\n\tpublic readonly model;\n\n\tprivate readonly _playAccessibilitySignal;\n\n\tprivate readonly _hideInlineEditOnSelectionChange;\n\n\tprotected readonly _view;\n\n\tconstructor(\n\t\tpublic readonly editor: ICodeEditor,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ILanguageFeatureDebounceService private readonly _debounceService: ILanguageFeatureDebounceService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IAccessibilitySignalService private readonly _accessibilitySignalService: IAccessibilitySignalService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t) {\n\t\tsuper();\n\t\tthis._editorObs = observableCodeEditor(this.editor);\n\t\tthis._positions = derived(this, reader => this._editorObs.selections.read(reader)?.map(s => s.getEndPosition()) ?? [new Position(1, 1)]);\n\t\tthis._suggestWidgetAdapter = this._register(new ObservableSuggestWidgetAdapter(\n\t\t\tthis._editorObs,\n\t\t\titem => this.model.get()?.handleSuggestAccepted(item),\n\t\t\t() => this.model.get()?.selectedInlineCompletion.get()?.getSingleTextEdit(),\n\t\t));\n\t\tthis._enabledInConfig = observableFromEvent(this, this.editor.onDidChangeConfiguration, () => this.editor.getOption(EditorOption.inlineSuggest).enabled);\n\t\tthis._isScreenReaderEnabled = observableFromEvent(this, this._accessibilityService.onDidChangeScreenReaderOptimized, () => this._accessibilityService.isScreenReaderOptimized());\n\t\tthis._editorDictationInProgress = observableFromEvent(this,\n\t\t\tthis._contextKeyService.onDidChangeContext,\n\t\t\t() => this._contextKeyService.getContext(this.editor.getDomNode()).getValue('editorDictation.inProgress') === true\n\t\t);\n\t\tthis._enabled = derived(this, reader => this._enabledInConfig.read(reader) && (!this._isScreenReaderEnabled.read(reader) || !this._editorDictationInProgress.read(reader)));\n\t\tthis._debounceValue = this._debounceService.for(\n\t\t\tthis._languageFeaturesService.inlineCompletionsProvider,\n\t\t\t'InlineCompletionsDebounce',\n\t\t\t{ min: 50, max: 50 }\n\t\t);\n\t\tthis._focusIsInMenu = observableValue<boolean>(this, false);\n\t\tthis._focusIsInEditorOrMenu = derived(this, reader => {\n\t\t\tconst editorHasFocus = this._editorObs.isFocused.read(reader);\n\t\t\tconst menuHasFocus = this._focusIsInMenu.read(reader);\n\t\t\treturn editorHasFocus || menuHasFocus;\n\t\t});\n\t\tthis._cursorIsInIndentation = derived(this, reader => {\n\t\t\tconst cursorPos = this._editorObs.cursorPosition.read(reader);\n\t\t\tif (cursorPos === null) { return false; }\n\t\t\tconst model = this._editorObs.model.read(reader);\n\t\t\tif (!model) { return false; }\n\t\t\tthis._editorObs.versionId.read(reader);\n\t\t\tconst indentMaxColumn = model.getLineIndentColumn(cursorPos.lineNumber);\n\t\t\treturn cursorPos.column <= indentMaxColumn;\n\t\t});\n\t\tthis.model = derivedDisposable<InlineCompletionsModel | undefined>(this, reader => {\n\t\t\tif (this._editorObs.isReadonly.read(reader)) { return undefined; }\n\t\t\tconst textModel = this._editorObs.model.read(reader);\n\t\t\tif (!textModel) { return undefined; }\n\n\t\t\tconst model: InlineCompletionsModel = this._instantiationService.createInstance(\n\t\t\t\tInlineCompletionsModel,\n\t\t\t\ttextModel,\n\t\t\t\tthis._suggestWidgetAdapter.selectedItem,\n\t\t\t\tthis._editorObs.versionId,\n\t\t\t\tthis._positions,\n\t\t\t\tthis._debounceValue,\n\t\t\t\tthis._enabled,\n\t\t\t\tthis.editor,\n\t\t\t);\n\t\t\treturn model;\n\t\t}).recomputeInitiallyAndOnChange(this._store);\n\t\tthis._playAccessibilitySignal = observableSignal(this);\n\t\tthis._hideInlineEditOnSelectionChange = this._editorObs.getOption(EditorOption.inlineSuggest).map(val => true);\n\t\tthis._view = this._register(this._instantiationService.createInstance(InlineCompletionsView, this.editor, this.model, this._focusIsInMenu));\n\n\t\tInlineCompletionsController._instances.add(this);\n\t\tthis._register(toDisposable(() => InlineCompletionsController._instances.delete(this)));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t// Cancel all other inline completions when a new one starts\n\t\t\tconst model = this.model.read(reader);\n\t\t\tif (!model) { return; }\n\t\t\tconst state = model.state.read(reader);\n\t\t\tif (!state) { return; }\n\t\t\tif (!this._focusIsInEditorOrMenu.get()) { return; }\n\n\t\t\t// This controller is in focus, hence reject others.\n\t\t\t// However if we display a NES that relates to another edit then trigger NES on that related controller\n\t\t\tconst nextEditUri = state.kind === 'inlineEdit' ? state.nextEditUri : undefined;\n\t\t\tfor (const ctrl of InlineCompletionsController._instances) {\n\t\t\t\tif (ctrl === this) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (nextEditUri && isEqual(nextEditUri, ctrl.editor.getModel()?.uri)) {\n\t\t\t\t\t// The next edit in other edito is related to this controller, trigger it.\n\t\t\t\t\tctrl.model.get()?.trigger();\n\t\t\t\t} else {\n\t\t\t\t\tctrl.reject();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(autorun(reader => {\n\t\t\t// Cancel all other inline completions when a new one starts\n\t\t\tconst model = this.model.read(reader);\n\t\t\tconst uri = this.editor.getModel()?.uri;\n\t\t\tif (!model || !uri) { return; }\n\n\t\t\t// This NES was accepted, its possible there is an NES that points to this editor.\n\t\t\t// I.e. there's an NES that reads `Go To Next Edit`,\n\t\t\t// If there is one that points to this editor, then we need to hide that as this NES was accepted.\n\t\t\treader.store.add(model.onDidAccept(() => {\n\t\t\t\tfor (const ctrl of InlineCompletionsController._instances) {\n\t\t\t\t\tif (ctrl === this) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// Find the nes from another editor that points to this.\n\t\t\t\t\tconst state = ctrl.model.get()?.state.get();\n\t\t\t\t\tif (state?.kind === 'inlineEdit' && isEqual(state.nextEditUri, uri)) {\n\t\t\t\t\t\tctrl.model.get()?.stop('automatic');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t}));\n\n\t\tthis._register(runOnChange(this._editorObs.onDidType, (_value, _changes) => {\n\t\t\tif (this._enabled.get()) {\n\t\t\t\tthis.model.get()?.trigger();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(runOnChange(this._editorObs.onDidPaste, (_value, _changes) => {\n\t\t\tif (this._enabled.get()) {\n\t\t\t\tthis.model.get()?.trigger();\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._commandService.onDidExecuteCommand((e) => {\n\t\t\t// These commands don't trigger onDidType.\n\t\t\tconst commands = new Set([\n\t\t\t\tCoreEditingCommands.Tab.id,\n\t\t\t\tCoreEditingCommands.DeleteLeft.id,\n\t\t\t\tCoreEditingCommands.DeleteRight.id,\n\t\t\t\tinlineSuggestCommitId,\n\t\t\t\t'acceptSelectedSuggestion',\n\t\t\t]);\n\t\t\tif (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n\t\t\t\tlet noDelay = false;\n\t\t\t\tif (e.commandId === inlineSuggestCommitId) {\n\t\t\t\t\tnoDelay = true;\n\t\t\t\t}\n\t\t\t\tthis._editorObs.forceUpdate(tx => {\n\t\t\t\t\t/** @description onDidExecuteCommand */\n\t\t\t\t\tthis.model.get()?.trigger(tx, { noDelay });\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(runOnChange(this._editorObs.selections, (_value, _, changes) => {\n\t\t\tif (changes.some(e => e.reason === CursorChangeReason.Explicit || e.source === 'api')) {\n\t\t\t\tif (!this._hideInlineEditOnSelectionChange.get() && this.model.get()?.state.get()?.kind === 'inlineEdit') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst m = this.model.get();\n\t\t\t\tif (!m) { return; }\n\t\t\t\tif (m.state.get()?.kind === 'ghostText') {\n\t\t\t\t\tthis.model.get()?.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\tconst isFocused = this._focusIsInEditorOrMenu.read(reader);\n\t\t\tconst model = this.model.get();\n\t\t\tif (isFocused) {\n\t\t\t\t// If this model already has an NES for another editor, then leave as is\n\t\t\t\t// Else stop other models.\n\t\t\t\tconst state = model?.state?.get();\n\t\t\t\tif (!state || state.kind !== 'inlineEdit' || !state.nextEditUri) {\n\t\t\t\t\ttransaction(tx => {\n\t\t\t\t\t\tfor (const ctrl of InlineCompletionsController._instances) {\n\t\t\t\t\t\t\tif (ctrl !== this) {\n\t\t\t\t\t\t\t\tctrl.model.get()?.stop('automatic', tx);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This is a hidden setting very useful for debugging\n\t\t\tif (this._contextKeyService.getContextKeyValue<boolean>('accessibleViewIsShown')\n\t\t\t\t|| this._configurationService.getValue('editor.inlineSuggest.keepOnBlur')\n\t\t\t\t|| editor.getOption(EditorOption.inlineSuggest).keepOnBlur\n\t\t\t\t|| InlineSuggestionHintsContentWidget.dropDownVisible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!model) { return; }\n\t\t\tif (model.state.get()?.inlineCompletion?.isFromExplicitRequest && model.inlineEditAvailable.get()) {\n\t\t\t\t// dont hide inline edits on blur when requested explicitly\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description InlineCompletionsController.onDidBlurEditorWidget */\n\t\t\t\tmodel.stop('automatic', tx);\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description InlineCompletionsController.forceRenderingAbove */\n\t\t\tconst state = this.model.read(reader)?.inlineCompletionState.read(reader);\n\t\t\tif (state?.suggestItem) {\n\t\t\t\tif (state.primaryGhostText.lineCount >= 2) {\n\t\t\t\t\tthis._suggestWidgetAdapter.forceRenderingAbove();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._suggestWidgetAdapter.stopForceRenderingAbove();\n\t\t\t}\n\t\t}));\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis._suggestWidgetAdapter.stopForceRenderingAbove();\n\t\t}));\n\n\t\tconst currentInlineCompletionBySemanticId = derivedObservableWithCache<string | undefined>(this, (reader, last) => {\n\t\t\tconst model = this.model.read(reader);\n\t\t\tconst state = model?.state.read(reader);\n\t\t\tif (this._suggestWidgetAdapter.selectedItem.get()) {\n\t\t\t\treturn last;\n\t\t\t}\n\t\t\treturn state?.inlineCompletion?.semanticId;\n\t\t});\n\t\tthis._register(runOnChangeWithStore(derived(reader => {\n\t\t\tthis._playAccessibilitySignal.read(reader);\n\t\t\tcurrentInlineCompletionBySemanticId.read(reader);\n\t\t\treturn {};\n\t\t}), async (_value, _, _deltas, store) => {\n\t\t\t/** @description InlineCompletionsController.playAccessibilitySignalAndReadSuggestion */\n\t\t\tconst model = this.model.get();\n\t\t\tconst state = model?.state.get();\n\t\t\tif (!state || !model) { return; }\n\t\t\tconst lineText = state.kind === 'ghostText' ? model.textModel.getLineContent(state.primaryGhostText.lineNumber) : '';\n\n\t\t\tawait timeout(50, cancelOnDispose(store));\n\t\t\tawait waitForState(this._suggestWidgetAdapter.selectedItem, isUndefined, () => false, cancelOnDispose(store));\n\t\t\tawait this._accessibilitySignalService.playSignal(state.kind === 'ghostText' ? AccessibilitySignal.inlineSuggestion : AccessibilitySignal.nextEditSuggestion);\n\n\t\t\tif (this.editor.getOption(EditorOption.screenReaderAnnounceInlineSuggestion)) {\n\t\t\t\tif (state.kind === 'ghostText') {\n\t\t\t\t\tthis._provideScreenReaderUpdate(state.primaryGhostText.renderForScreenReader(lineText));\n\t\t\t\t} else {\n\t\t\t\t\tthis._provideScreenReaderUpdate(''); // Only announce Alt+F2\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// TODO@hediet\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (e.affectsConfiguration('accessibility.verbosity.inlineCompletions')) {\n\t\t\t\tthis.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n\t\t\t}\n\t\t}));\n\t\tthis.editor.updateOptions({ inlineCompletionsAccessibilityVerbose: this._configurationService.getValue('accessibility.verbosity.inlineCompletions') });\n\n\t\tconst contextKeySvcObs = new ObservableContextKeyService(this._contextKeyService);\n\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.cursorInIndentation, this._cursorIsInIndentation));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.hasSelection, reader => !this._editorObs.cursorSelection.read(reader)?.isEmpty()));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.cursorAtInlineEdit, this.model.map((m, reader) => m?.inlineEditState?.read(reader)?.cursorAtInlineEdit.read(reader))));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.tabShouldAcceptInlineEdit, this.model.map((m, r) => !!m?.tabShouldAcceptInlineEdit.read(r))));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.tabShouldJumpToInlineEdit, this.model.map((m, r) => !!m?.tabShouldJumpToInlineEdit.read(r))));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.inlineEditVisible, reader => this.model.read(reader)?.inlineEditState.read(reader) !== undefined));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.inlineSuggestionHasIndentation,\n\t\t\treader => this.model.read(reader)?.getIndentationInfo(reader)?.startsWithIndentation\n\t\t));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize,\n\t\t\treader => this.model.read(reader)?.getIndentationInfo(reader)?.startsWithIndentationLessThanTabSize\n\t\t));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.suppressSuggestions, reader => {\n\t\t\tconst model = this.model.read(reader);\n\t\t\tconst state = model?.inlineCompletionState.read(reader);\n\t\t\treturn state?.primaryGhostText && state?.inlineCompletion ? state.inlineCompletion.source.inlineSuggestions.suppressSuggestions : undefined;\n\t\t}));\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.inlineSuggestionVisible, reader => {\n\t\t\tconst model = this.model.read(reader);\n\t\t\tconst state = model?.inlineCompletionState.read(reader);\n\t\t\treturn !!state?.inlineCompletion && state?.primaryGhostText !== undefined && !state?.primaryGhostText.isEmpty();\n\t\t}));\n\t\tconst firstGhostTextPos = derived(this, reader => {\n\t\t\tconst model = this.model.read(reader);\n\t\t\tconst state = model?.inlineCompletionState.read(reader);\n\t\t\tconst primaryGhostText = state?.primaryGhostText;\n\t\t\tif (!primaryGhostText || primaryGhostText.isEmpty()) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tconst firstPartPos = new Position(primaryGhostText.lineNumber, primaryGhostText.parts[0].column);\n\t\t\treturn firstPartPos;\n\t\t});\n\t\tthis._register(contextKeySvcObs.bind(InlineCompletionContextKeys.cursorBeforeGhostText, reader => {\n\t\t\tconst firstPartPos = firstGhostTextPos.read(reader);\n\t\t\tif (!firstPartPos) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst cursorPos = this._editorObs.cursorPosition.read(reader);\n\t\t\tif (!cursorPos) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn firstPartPos.equals(cursorPos);\n\t\t}));\n\n\t\tthis._register(this._instantiationService.createInstance(TextModelChangeRecorder, this.editor));\n\t}\n\n\tpublic playAccessibilitySignal(tx: ITransaction) {\n\t\tthis._playAccessibilitySignal.trigger(tx);\n\t}\n\n\tprivate _provideScreenReaderUpdate(content: string): void {\n\t\tconst accessibleViewShowing = this._contextKeyService.getContextKeyValue<boolean>('accessibleViewIsShown');\n\t\tconst accessibleViewKeybinding = this._keybindingService.lookupKeybinding('editor.action.accessibleView');\n\t\tlet hint: string | undefined;\n\t\tif (!accessibleViewShowing && accessibleViewKeybinding && this.editor.getOption(EditorOption.inlineCompletionsAccessibilityVerbose)) {\n\t\t\thint = localize('showAccessibleViewHint', \"Inspect this in the accessible view ({0})\", accessibleViewKeybinding.getAriaLabel());\n\t\t}\n\t\talert(hint ? content + ', ' + hint : content);\n\t}\n\n\tpublic shouldShowHoverAt(range: Range) {\n\t\tconst ghostText = this.model.get()?.primaryGhostText.get();\n\t\tif (!ghostText) {\n\t\t\treturn false;\n\t\t}\n\t\treturn ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n\t}\n\n\tpublic shouldShowHoverAtViewZone(viewZoneId: string): boolean {\n\t\treturn this._view.shouldShowHoverAtViewZone(viewZoneId);\n\t}\n\n\tpublic reject(): void {\n\t\ttransaction(tx => {\n\t\t\tconst m = this.model.get();\n\t\t\tif (m) {\n\t\t\t\tm.stop('explicitCancel', tx);\n\t\t\t\t// Only if this controller is in focus can we cancel others.\n\t\t\t\tif (this._focusIsInEditorOrMenu.get()) {\n\t\t\t\t\tfor (const ctrl of InlineCompletionsController._instances) {\n\t\t\t\t\t\tif (ctrl !== this) {\n\t\t\t\t\t\t\tctrl.model.get()?.stop('automatic', tx);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic jump(): void {\n\t\tconst m = this.model.get();\n\t\tif (m) {\n\t\t\tm.jump();\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9992, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/commands.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/controller/vs/editor/contrib/inlineCompletions/browser/controller/commands.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../../base/common/keyCodes.js';\nimport { asyncTransaction, transaction } from '../../../../../base/common/observable.js';\nimport { splitLines } from '../../../../../base/common/strings.js';\nimport * as nls from '../../../../../nls.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { Action2, MenuId } from '../../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../../platform/clipboard/common/clipboardService.js';\nimport { IConfigurationService } from '../../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry, KeybindingWeight } from '../../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { INotificationService, Severity } from '../../../../../platform/notification/common/notification.js';\nimport { ICodeEditor } from '../../../../browser/editorBrowser.js';\nimport { EditorAction, EditorCommand, ServicesAccessor } from '../../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../../common/editorContextKeys.js';\nimport { Context as SuggestContext } from '../../../suggest/browser/suggest.js';\nimport { hideInlineCompletionId, inlineSuggestCommitId, jumpToNextInlineEditId, showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, toggleShowCollapsedId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\n\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showNextInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowNextInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize2('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketRight,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.next();\n\t}\n}\n\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n\tpublic static ID = showPreviousInlineSuggestionActionId;\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ShowPreviousInlineSuggestionAction.ID,\n\t\t\tlabel: nls.localize2('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: 100,\n\t\t\t\tprimary: KeyMod.Alt | KeyCode.BracketLeft,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tcontroller?.model.get()?.previous();\n\t}\n}\n\nexport class TriggerInlineSuggestionAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.trigger',\n\t\t\tlabel: nls.localize2('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n\t\t\tprecondition: EditorContextKeys.writable\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait asyncTransaction(async tx => {\n\t\t\t/** @description triggerExplicitly from command */\n\t\t\tawait controller?.model.get()?.triggerExplicitly(tx);\n\t\t\tcontroller?.playAccessibilitySignal(tx);\n\t\t});\n\t}\n}\n\nexport class ExplicitTriggerInlineEditAction extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.triggerInlineEditExplicit',\n\t\t\tlabel: nls.localize2('action.inlineSuggest.trigger.explicitInlineEdit', \"Trigger Next Edit Suggestion\"),\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst notificationService = accessor.get(INotificationService);\n\t\tconst controller = InlineCompletionsController.get(editor);\n\n\t\tawait controller?.model.get()?.triggerExplicitly(undefined, true);\n\t\tif (!controller?.model.get()?.inlineEditAvailable.get()) {\n\t\t\tnotificationService.notify({\n\t\t\t\tseverity: Severity.Info,\n\t\t\t\tmessage: nls.localize('noInlineEditAvailable', \"No inline edit is available.\")\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class TriggerInlineEditAction extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.triggerInlineEdit',\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n\n\tpublic override async runEditorCommand(accessor: ServicesAccessor, editor: ICodeEditor, args: { triggerKind?: 'automatic' | 'explicit' }): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.trigger(undefined, { onlyFetchInlineEdits: true });\n\t}\n}\n\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.acceptNextWord',\n\t\t\tlabel: nls.localize2('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.RightArrow,\n\t\t\t\tkbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible, InlineCompletionContextKeys.cursorBeforeGhostText, CONTEXT_ACCESSIBILITY_MODE_ENABLED.negate()),\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('acceptWord', 'Accept Word'),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextWord();\n\t}\n}\n\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.acceptNextLine',\n\t\t\tlabel: nls.localize2('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n\t\t\tprecondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 1,\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('acceptLine', 'Accept Line'),\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tawait controller?.model.get()?.acceptNextLine();\n\t}\n}\n\nexport class AcceptInlineCompletion extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: inlineSuggestCommitId,\n\t\t\tlabel: nls.localize2('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n\t\t\tprecondition: ContextKeyExpr.or(InlineCompletionContextKeys.inlineSuggestionVisible, InlineCompletionContextKeys.inlineEditVisible),\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineSuggestionToolbar,\n\t\t\t\ttitle: nls.localize('accept', \"Accept\"),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 2,\n\t\t\t}, {\n\t\t\t\tmenuId: MenuId.InlineEditsActions,\n\t\t\t\ttitle: nls.localize('accept', \"Accept\"),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 2,\n\t\t\t}],\n\t\t\tkbOpts: [\n\t\t\t\t{\n\t\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\t\tweight: 200,\n\t\t\t\t\tkbExpr: ContextKeyExpr.or(\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionVisible,\n\t\t\t\t\t\t\tEditorContextKeys.tabMovesFocus.toNegated(),\n\t\t\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t\t\t\tInlineCompletionContextKeys.hasSelection.toNegated(),\n\n\t\t\t\t\t\t\tInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tContextKeyExpr.and(\n\t\t\t\t\t\t\tInlineCompletionContextKeys.inlineEditVisible,\n\t\t\t\t\t\t\tEditorContextKeys.tabMovesFocus.toNegated(),\n\t\t\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\n\t\t\t\t\t\t\tInlineCompletionContextKeys.tabShouldAcceptInlineEdit,\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t],\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.getInFocusedEditorOrParent(accessor);\n\t\tif (controller) {\n\t\t\tcontroller.model.get()?.accept(controller.editor);\n\t\t\tcontroller.editor.focus();\n\t\t}\n\t}\n}\nKeybindingsRegistry.registerKeybindingRule({\n\tid: inlineSuggestCommitId,\n\tweight: 202, // greater than jump\n\tprimary: KeyCode.Tab,\n\twhen: ContextKeyExpr.and(InlineCompletionContextKeys.inInlineEditsPreviewEditor)\n});\n\nexport class JumpToNextInlineEdit extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: jumpToNextInlineEditId,\n\t\t\tlabel: nls.localize2('action.inlineSuggest.jump', \"Jump to next inline edit\"),\n\t\t\tprecondition: InlineCompletionContextKeys.inlineEditVisible,\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineEditsActions,\n\t\t\t\ttitle: nls.localize('jump', \"Jump\"),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 1,\n\t\t\t\twhen: InlineCompletionContextKeys.cursorAtInlineEdit.toNegated(),\n\t\t\t}],\n\t\t\tkbOpts: {\n\t\t\t\tprimary: KeyCode.Tab,\n\t\t\t\tweight: 201,\n\t\t\t\tkbExpr: ContextKeyExpr.and(\n\t\t\t\t\tInlineCompletionContextKeys.inlineEditVisible,\n\t\t\t\t\tEditorContextKeys.tabMovesFocus.toNegated(),\n\t\t\t\t\tSuggestContext.Visible.toNegated(),\n\t\t\t\t\tEditorContextKeys.hoverFocused.toNegated(),\n\t\t\t\t\tInlineCompletionContextKeys.tabShouldJumpToInlineEdit,\n\t\t\t\t),\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tif (controller) {\n\t\t\tcontroller.jump();\n\t\t}\n\t}\n}\n\nexport class HideInlineCompletion extends EditorAction {\n\tpublic static ID = hideInlineCompletionId;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: HideInlineCompletion.ID,\n\t\t\tlabel: nls.localize2('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n\t\t\tprecondition: ContextKeyExpr.or(InlineCompletionContextKeys.inlineSuggestionVisible, InlineCompletionContextKeys.inlineEditVisible),\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib + 90, // same as hiding the suggest widget\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t},\n\t\t\tmenuOpts: [{\n\t\t\t\tmenuId: MenuId.InlineEditsActions,\n\t\t\t\ttitle: nls.localize('reject', \"Reject\"),\n\t\t\t\tgroup: 'primary',\n\t\t\t\torder: 3,\n\t\t\t}]\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst controller = InlineCompletionsController.getInFocusedEditorOrParent(accessor);\n\t\ttransaction(tx => {\n\t\t\tcontroller?.model.get()?.stop('explicitCancel', tx);\n\t\t});\n\t\tcontroller?.editor.focus();\n\t}\n}\n\nexport class ToggleInlineCompletionShowCollapsed extends EditorAction {\n\tpublic static ID = toggleShowCollapsedId;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleInlineCompletionShowCollapsed.ID,\n\t\t\tlabel: nls.localize2('action.inlineSuggest.toggleShowCollapsed', \"Toggle Inline Suggestions Show Collapsed\"),\n\t\t\tprecondition: ContextKeyExpr.true(),\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<void> {\n\t\tconst configurationService = accessor.get(IConfigurationService);\n\t\tconst showCollapsed = configurationService.getValue<boolean>('editor.inlineSuggest.edits.showCollapsed');\n\t\tconfigurationService.updateValue('editor.inlineSuggest.edits.showCollapsed', !showCollapsed);\n\t}\n}\n\nKeybindingsRegistry.registerKeybindingRule({\n\tid: HideInlineCompletion.ID,\n\tweight: -1, // very weak\n\tprimary: KeyCode.Escape,\n\tsecondary: [KeyMod.Shift | KeyCode.Escape],\n\twhen: ContextKeyExpr.and(InlineCompletionContextKeys.inInlineEditsPreviewEditor)\n});\n\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n\tpublic static ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n\t\t\ttitle: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n\t\t\tf1: false,\n\t\t\tprecondition: undefined,\n\t\t\tmenu: [{\n\t\t\t\tid: MenuId.InlineSuggestionToolbar,\n\t\t\t\tgroup: 'secondary',\n\t\t\t\torder: 10,\n\t\t\t}],\n\t\t\ttoggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n\t\t});\n\t}\n\n\tpublic async run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst configService = accessor.get(IConfigurationService);\n\t\tconst currentValue = configService.getValue<'always' | 'onHover'>('editor.inlineSuggest.showToolbar');\n\t\tconst newValue = currentValue === 'always' ? 'onHover' : 'always';\n\t\tconfigService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n\t}\n}\n\nexport class DevExtractReproSample extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.inlineSuggest.dev.extractRepro',\n\t\t\tlabel: nls.localize('action.inlineSuggest.dev.extractRepro', \"Developer: Extract Inline Suggest State\"),\n\t\t\talias: 'Developer: Inline Suggest Extract Repro',\n\t\t\tprecondition: ContextKeyExpr.or(InlineCompletionContextKeys.inlineEditVisible, InlineCompletionContextKeys.inlineSuggestionVisible),\n\t\t});\n\t}\n\n\tpublic override async run(accessor: ServicesAccessor, editor: ICodeEditor): Promise<any> {\n\t\tconst clipboardService = accessor.get(IClipboardService);\n\n\t\tconst controller = InlineCompletionsController.get(editor);\n\t\tconst m = controller?.model.get();\n\t\tif (!m) { return; }\n\t\tconst repro = m.extractReproSample();\n\n\t\tconst inlineCompletionLines = splitLines(JSON.stringify({ inlineCompletion: repro.inlineCompletion }, null, 4));\n\n\t\tconst json = inlineCompletionLines.map(l => '// ' + l).join('\\n');\n\n\t\tconst reproStr = `${repro.documentValue}\\n\\n// <json>\\n${json}\\n// </json>\\n`;\n\n\t\tawait clipboardService.writeText(reproStr);\n\n\t\treturn { reproCase: reproStr };\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10384, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hintsWidget/hoverParticipant.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hintsWidget/vs/editor/contrib/inlineCompletions/browser/hintsWidget/hoverParticipant.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../../base/common/htmlContent.js';\nimport { DisposableStore, IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { autorun, autorunWithStore, constObservable } from '../../../../../base/common/observable.js';\nimport { ICodeEditor, IEditorMouseEvent, MouseTargetType } from '../../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ILanguageService } from '../../../../common/languages/language.js';\nimport { IModelDecoration } from '../../../../common/model.js';\nimport { HoverAnchor, HoverAnchorType, HoverForeignElementAnchor, IEditorHoverParticipant, IEditorHoverRenderContext, IHoverPart, IRenderedHoverPart, IRenderedHoverParts, RenderedHoverParts } from '../../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from '../controller/inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../../../browser/widget/markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../../platform/telemetry/common/telemetry.js';\nimport { GhostTextView } from '../view/ghostText/ghostTextView.js';\n\nexport class InlineCompletionsHover implements IHoverPart {\n\tconstructor(\n\t\tpublic readonly owner: IEditorHoverParticipant<InlineCompletionsHover>,\n\t\tpublic readonly range: Range,\n\t\tpublic readonly controller: InlineCompletionsController\n\t) { }\n\n\tpublic isValidForHoverAnchor(anchor: HoverAnchor): boolean {\n\t\treturn (\n\t\t\tanchor.type === HoverAnchorType.Range\n\t\t\t&& this.range.startColumn <= anchor.range.startColumn\n\t\t\t&& this.range.endColumn >= anchor.range.endColumn\n\t\t);\n\t}\n}\n\nexport class InlineCompletionsHoverParticipant implements IEditorHoverParticipant<InlineCompletionsHover> {\n\n\tpublic readonly hoverOrdinal: number = 4;\n\n\tconstructor(\n\t\tprivate readonly _editor: ICodeEditor,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@IOpenerService private readonly _openerService: IOpenerService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService,\n\t) {\n\t}\n\n\tsuggestHoverAnchor(mouseEvent: IEditorMouseEvent): HoverAnchor | null {\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (!controller) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst target = mouseEvent.target;\n\t\tif (target.type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\t// handle the case where the mouse is over the view zone\n\t\t\tconst viewZoneData = target.detail;\n\t\t\tif (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel()!.validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\t// handle the case where the mouse is over the empty portion of a line following ghost text\n\t\t\tif (controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t// handle the case where the mouse is directly over ghost text\n\t\t\tconst mightBeForeignElement = target.detail.mightBeForeignElement;\n\t\t\tif (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\tif (target.type === MouseTargetType.CONTENT_WIDGET && target.element) {\n\t\t\tconst ctx = GhostTextView.getWarningWidgetContext(target.element);\n\t\t\tif (ctx && controller.shouldShowHoverAt(ctx.range)) {\n\t\t\t\treturn new HoverForeignElementAnchor(1000, this, ctx.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomputeSync(anchor: HoverAnchor, lineDecorations: IModelDecoration[]): InlineCompletionsHover[] {\n\t\tif (this._editor.getOption(EditorOption.inlineSuggest).showToolbar !== 'onHover') {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst controller = InlineCompletionsController.get(this._editor);\n\t\tif (controller && controller.shouldShowHoverAt(anchor.range)) {\n\t\t\treturn [new InlineCompletionsHover(this, anchor.range, controller)];\n\t\t}\n\t\treturn [];\n\t}\n\n\trenderHoverParts(context: IEditorHoverRenderContext, hoverParts: InlineCompletionsHover[]): IRenderedHoverParts<InlineCompletionsHover> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst part = hoverParts[0];\n\n\t\tthis._telemetryService.publicLog2<{}, {\n\t\t\towner: 'hediet';\n\t\t\tcomment: 'This event tracks whenever an inline completion hover is shown.';\n\t\t}>('inlineCompletionHover.shown');\n\n\t\tif (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(EditorOption.screenReaderAnnounceInlineSuggestion)) {\n\t\t\tdisposables.add(this.renderScreenReaderText(context, part));\n\t\t}\n\n\t\tconst model = part.controller.model.get()!;\n\t\tconst widgetNode: HTMLElement = document.createElement('div');\n\t\tcontext.fragment.appendChild(widgetNode);\n\n\t\tdisposables.add(autorunWithStore((reader, store) => {\n\t\t\tconst w = store.add(this._instantiationService.createInstance(\n\t\t\t\tInlineSuggestionHintsContentWidget.hot.read(reader),\n\t\t\t\tthis._editor,\n\t\t\t\tfalse,\n\t\t\t\tconstObservable(null),\n\t\t\t\tmodel.selectedInlineCompletionIndex,\n\t\t\t\tmodel.inlineCompletionsCount,\n\t\t\t\tmodel.activeCommands,\n\t\t\t\tmodel.warning,\n\t\t\t\t() => {\n\t\t\t\t\tcontext.onContentsChanged();\n\t\t\t\t},\n\t\t\t));\n\t\t\twidgetNode.replaceChildren(w.getDomNode());\n\t\t}));\n\n\t\tmodel.triggerExplicitly();\n\n\t\tconst renderedHoverPart: IRenderedHoverPart<InlineCompletionsHover> = {\n\t\t\thoverPart: part,\n\t\t\thoverElement: widgetNode,\n\t\t\tdispose() { disposables.dispose(); }\n\t\t};\n\t\treturn new RenderedHoverParts([renderedHoverPart]);\n\t}\n\n\tprivate renderScreenReaderText(context: IEditorHoverRenderContext, part: InlineCompletionsHover): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\t\tconst $ = dom.$;\n\t\tconst markdownHoverElement = $('div.hover-row.markdown-hover');\n\t\tconst hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n\t\tconst renderer = new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService);\n\t\tconst render = (code: string) => {\n\t\t\tconst inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n\t\t\tconst renderedContents = disposables.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code), {\n\t\t\t\tasyncRenderCallback: () => {\n\t\t\t\t\thoverContentsElement.className = 'hover-contents code-hover-contents';\n\t\t\t\t\tcontext.onContentsChanged();\n\t\t\t\t}\n\t\t\t}));\n\t\t\thoverContentsElement.replaceChildren(renderedContents.element);\n\t\t};\n\n\t\tdisposables.add(autorun(reader => {\n\t\t\t/** @description update hover */\n\t\t\tconst ghostText = part.controller.model.read(reader)?.primaryGhostText.read(reader);\n\t\t\tif (ghostText) {\n\t\t\t\tconst lineText = this._editor.getModel()!.getLineContent(ghostText.lineNumber);\n\t\t\t\trender(ghostText.renderForScreenReader(lineText));\n\t\t\t} else {\n\t\t\t\tdom.reset(hoverContentsElement);\n\t\t\t}\n\t\t}));\n\n\t\tcontext.fragment.appendChild(markdownHoverElement);\n\t\treturn disposables;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 10577, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsAccessibleView.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsAccessibleView.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsAccessibleView.ts"],"sourcesContent":["\nimport { IAccessibleViewImplementation } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\n\nexport class InlineCompletionsAccessibleView implements IAccessibleViewImplementation {\n}\n","\nimport { IAccessibleViewImplementation } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\n\nexport class InlineCompletionsAccessibleView implements IAccessibleViewImplementation {\n}\n"],"names":[],"mappings":";;;;AAGM,MAAO,+BAA+B;CAC3C","debugId":null}},
    {"offset": {"line": 10587, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AccessibleViewRegistry } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { wrapInHotClass1 } from '../../../../platform/observable/common/wrapInHotClass.js';\nimport { EditorContributionInstantiation, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { AcceptInlineCompletion, AcceptNextLineOfInlineCompletion, AcceptNextWordOfInlineCompletion, DevExtractReproSample, HideInlineCompletion, JumpToNextInlineEdit, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, ToggleAlwaysShowInlineSuggestionToolbar, ExplicitTriggerInlineEditAction, TriggerInlineSuggestionAction, TriggerInlineEditAction, ToggleInlineCompletionShowCollapsed } from './controller/commands.js';\nimport { InlineCompletionsController } from './controller/inlineCompletionsController.js';\nimport { InlineCompletionsHoverParticipant } from './hintsWidget/hoverParticipant.js';\nimport { InlineCompletionsAccessibleView } from './inlineCompletionsAccessibleView.js';\nimport { CancelSnoozeInlineCompletion, SnoozeInlineCompletion } from '../../../browser/services/inlineCompletionsService.js';\n\nregisterEditorContribution(InlineCompletionsController.ID, wrapInHotClass1(InlineCompletionsController.hot), EditorContributionInstantiation.Eventually);\n\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ExplicitTriggerInlineEditAction);\nregisterEditorCommand(new TriggerInlineEditAction());\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(ToggleInlineCompletionShowCollapsed);\nregisterEditorAction(HideInlineCompletion);\nregisterEditorAction(JumpToNextInlineEdit);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nregisterEditorAction(DevExtractReproSample);\nregisterAction2(SnoozeInlineCompletion);\nregisterAction2(CancelSnoozeInlineCompletion);\n\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\nAccessibleViewRegistry.register(new InlineCompletionsAccessibleView());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AccessibleViewRegistry } from '../../../../platform/accessibility/browser/accessibleViewRegistry.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nimport { wrapInHotClass1 } from '../../../../platform/observable/common/wrapInHotClass.js';\nimport { EditorContributionInstantiation, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { AcceptInlineCompletion, AcceptNextLineOfInlineCompletion, AcceptNextWordOfInlineCompletion, DevExtractReproSample, HideInlineCompletion, JumpToNextInlineEdit, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, ToggleAlwaysShowInlineSuggestionToolbar, ExplicitTriggerInlineEditAction, TriggerInlineSuggestionAction, TriggerInlineEditAction, ToggleInlineCompletionShowCollapsed } from './controller/commands.js';\nimport { InlineCompletionsController } from './controller/inlineCompletionsController.js';\nimport { InlineCompletionsHoverParticipant } from './hintsWidget/hoverParticipant.js';\nimport { InlineCompletionsAccessibleView } from './inlineCompletionsAccessibleView.js';\nimport { CancelSnoozeInlineCompletion, SnoozeInlineCompletion } from '../../../browser/services/inlineCompletionsService.js';\n\nregisterEditorContribution(InlineCompletionsController.ID, wrapInHotClass1(InlineCompletionsController.hot), EditorContributionInstantiation.Eventually);\n\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ExplicitTriggerInlineEditAction);\nregisterEditorCommand(new TriggerInlineEditAction());\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(ToggleInlineCompletionShowCollapsed);\nregisterEditorAction(HideInlineCompletion);\nregisterEditorAction(JumpToNextInlineEdit);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nregisterEditorAction(DevExtractReproSample);\nregisterAction2(SnoozeInlineCompletion);\nregisterAction2(CancelSnoozeInlineCompletion);\n\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\nAccessibleViewRegistry.register(new InlineCompletionsAccessibleView());\n"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,OAAO,EAAE,sBAAsB,EAAE,MAAM,sEAAsE,CAAC;AAC9G,OAAO,EAAE,eAAe,EAAE,MAAM,gDAAgD,CAAC;AACjF,OAAO,EAAE,eAAe,EAAE,MAAM,0DAA0D,CAAC;AAC3F,OAAO,EAAmC,oBAAoB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,MAAM,sCAAsC,CAAC;AAChK,OAAO,EAAE,wBAAwB,EAAE,MAAM,mCAAmC,CAAC;AAC7E,OAAO,EAAE,sBAAsB,EAAE,gCAAgC,EAAE,gCAAgC,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,8BAA8B,EAAE,kCAAkC,EAAE,uCAAuC,EAAE,+BAA+B,EAAE,6BAA6B,EAAE,uBAAuB,EAAE,mCAAmC,EAAE,MAAM,0BAA0B,CAAC;AACpb,OAAO,EAAE,2BAA2B,EAAE,MAAM,6CAA6C,CAAC;AAC1F,OAAO,EAAE,iCAAiC,EAAE,MAAM,mCAAmC,CAAC;AACtF,OAAO,EAAE,+BAA+B,EAAE,MAAM,sCAAsC,CAAC;AACvF,OAAO,EAAE,4BAA4B,EAAE,sBAAsB,EAAE,MAAM,uDAAuD,CAAC;;;;;;;;;;;IAE7H,oNAA0B,EAAC,8QAA2B,CAAC,EAAE,MAAE,sNAAe,EAAC,8QAA2B,CAAC,GAAG,CAAC,EAAA,EAAA,8CAAA,GAA6C,CAAC;IAEzJ,8MAAoB,EAAC,6PAA6B,CAAC,CAAC;IACpD,8MAAoB,EAAC,+PAA+B,CAAC,CAAC;IACtD,+MAAqB,EAAC,IAAI,uPAAuB,EAAE,CAAC,CAAC;IACrD,8MAAoB,EAAC,8PAA8B,CAAC,CAAC;IACrD,8MAAoB,EAAC,kQAAkC,CAAC,CAAC;IACzD,8MAAoB,EAAC,gQAAgC,CAAC,CAAC;IACvD,8MAAoB,EAAC,gQAAgC,CAAC,CAAC;IACvD,8MAAoB,EAAC,sPAAsB,CAAC,CAAC;IAC7C,8MAAoB,EAAC,mQAAmC,CAAC,CAAC;IAC1D,8MAAoB,EAAC,oPAAoB,CAAC,CAAC;IAC3C,8MAAoB,EAAC,oPAAoB,CAAC,CAAC;IAC3C,4MAAe,EAAC,uQAAuC,CAAC,CAAC;IACzD,8MAAoB,EAAC,qPAAqB,CAAC,CAAC;IAC5C,4MAAe,EAAC,oOAAsB,CAAC,CAAC;IACxC,4MAAe,EAAC,0OAA4B,CAAC,CAAC;AAE9C,gOAAwB,CAAC,QAAQ,CAAC,0QAAiC,CAAC,CAAC;AACrE,yOAAsB,CAAC,QAAQ,CAAC,IAAI,wQAA+B,EAAE,CAAC,CAAC","debugId":null}}]
}