{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/common/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/actions/common/actions.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/common/vs/platform/actions/common/actions.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, SubmenuAction } from '../../../base/common/actions.js';\nimport { Event, MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, IDisposable, markAsSingleton, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { ICommandAction, ICommandActionTitle, Icon, ILocalizedString } from '../../action/common/action.js';\nimport { Categories } from '../../action/common/actionCommonCategories.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator, ServicesAccessor } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingRule, KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\t/**\n\t * Menu item is hidden if this expression returns false.\n\t */\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisHiddenByDefault?: boolean;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ICommandActionTitle;\n\tsubmenu: MenuId;\n\ticon?: Icon;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisSelection?: boolean;\n\trememberDefaultAction?: boolean;\t// for dropdown menu: if true the last executed action is remembered as the default action\n}\n\nexport function isIMenuItem(item: any): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: any): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport class MenuId {\n\n\tprivate static readonly _instances = new Map<string, MenuId>();\n\n\tstatic readonly CommandPalette = new MenuId('CommandPalette');\n\tstatic readonly DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\n\tstatic readonly DebugCallStackContext = new MenuId('DebugCallStackContext');\n\tstatic readonly DebugConsoleContext = new MenuId('DebugConsoleContext');\n\tstatic readonly DebugVariablesContext = new MenuId('DebugVariablesContext');\n\tstatic readonly NotebookVariablesContext = new MenuId('NotebookVariablesContext');\n\tstatic readonly DebugHoverContext = new MenuId('DebugHoverContext');\n\tstatic readonly DebugWatchContext = new MenuId('DebugWatchContext');\n\tstatic readonly DebugToolBar = new MenuId('DebugToolBar');\n\tstatic readonly DebugToolBarStop = new MenuId('DebugToolBarStop');\n\tstatic readonly DebugDisassemblyContext = new MenuId('DebugDisassemblyContext');\n\tstatic readonly DebugCallStackToolbar = new MenuId('DebugCallStackToolbar');\n\tstatic readonly DebugCreateConfiguration = new MenuId('DebugCreateConfiguration');\n\tstatic readonly EditorContext = new MenuId('EditorContext');\n\tstatic readonly SimpleEditorContext = new MenuId('SimpleEditorContext');\n\tstatic readonly EditorContent = new MenuId('EditorContent');\n\tstatic readonly EditorLineNumberContext = new MenuId('EditorLineNumberContext');\n\tstatic readonly EditorContextCopy = new MenuId('EditorContextCopy');\n\tstatic readonly EditorContextPeek = new MenuId('EditorContextPeek');\n\tstatic readonly EditorContextShare = new MenuId('EditorContextShare');\n\tstatic readonly EditorTitle = new MenuId('EditorTitle');\n\tstatic readonly CompactWindowEditorTitle = new MenuId('CompactWindowEditorTitle');\n\tstatic readonly EditorTitleRun = new MenuId('EditorTitleRun');\n\tstatic readonly EditorTitleContext = new MenuId('EditorTitleContext');\n\tstatic readonly EditorTitleContextShare = new MenuId('EditorTitleContextShare');\n\tstatic readonly EmptyEditorGroup = new MenuId('EmptyEditorGroup');\n\tstatic readonly EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\n\tstatic readonly EditorTabsBarContext = new MenuId('EditorTabsBarContext');\n\tstatic readonly EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu');\n\tstatic readonly EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu');\n\tstatic readonly EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu');\n\tstatic readonly EditorSplitMoveSubmenu = new MenuId('EditorSplitMoveSubmenu');\n\tstatic readonly ExplorerContext = new MenuId('ExplorerContext');\n\tstatic readonly ExplorerContextShare = new MenuId('ExplorerContextShare');\n\tstatic readonly ExtensionContext = new MenuId('ExtensionContext');\n\tstatic readonly ExtensionEditorContextMenu = new MenuId('ExtensionEditorContextMenu');\n\tstatic readonly GlobalActivity = new MenuId('GlobalActivity');\n\tstatic readonly CommandCenter = new MenuId('CommandCenter');\n\tstatic readonly CommandCenterCenter = new MenuId('CommandCenterCenter');\n\tstatic readonly LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\n\tstatic readonly LayoutControlMenu = new MenuId('LayoutControlMenu');\n\tstatic readonly MenubarMainMenu = new MenuId('MenubarMainMenu');\n\tstatic readonly MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\n\tstatic readonly MenubarDebugMenu = new MenuId('MenubarDebugMenu');\n\tstatic readonly MenubarEditMenu = new MenuId('MenubarEditMenu');\n\tstatic readonly MenubarCopy = new MenuId('MenubarCopy');\n\tstatic readonly MenubarFileMenu = new MenuId('MenubarFileMenu');\n\tstatic readonly MenubarGoMenu = new MenuId('MenubarGoMenu');\n\tstatic readonly MenubarHelpMenu = new MenuId('MenubarHelpMenu');\n\tstatic readonly MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\n\tstatic readonly MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\n\tstatic readonly PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\n\tstatic readonly PanelPositionMenu = new MenuId('PanelPositionMenu');\n\tstatic readonly ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu');\n\tstatic readonly MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\n\tstatic readonly MenubarRecentMenu = new MenuId('MenubarRecentMenu');\n\tstatic readonly MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\n\tstatic readonly MenubarShare = new MenuId('MenubarShare');\n\tstatic readonly MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\n\tstatic readonly MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\n\tstatic readonly MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\n\tstatic readonly MenubarTerminalSuggestStatusMenu = new MenuId('MenubarTerminalSuggestStatusMenu');\n\tstatic readonly MenubarViewMenu = new MenuId('MenubarViewMenu');\n\tstatic readonly MenubarHomeMenu = new MenuId('MenubarHomeMenu');\n\tstatic readonly OpenEditorsContext = new MenuId('OpenEditorsContext');\n\tstatic readonly OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\n\tstatic readonly ProblemsPanelContext = new MenuId('ProblemsPanelContext');\n\tstatic readonly SCMInputBox = new MenuId('SCMInputBox');\n\tstatic readonly SCMChangeContext = new MenuId('SCMChangeContext');\n\tstatic readonly SCMResourceContext = new MenuId('SCMResourceContext');\n\tstatic readonly SCMResourceContextShare = new MenuId('SCMResourceContextShare');\n\tstatic readonly SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\n\tstatic readonly SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\n\tstatic readonly SCMSourceControl = new MenuId('SCMSourceControl');\n\tstatic readonly SCMSourceControlInline = new MenuId('SCMSourceControlInline');\n\tstatic readonly SCMSourceControlTitle = new MenuId('SCMSourceControlTitle');\n\tstatic readonly SCMHistoryTitle = new MenuId('SCMHistoryTitle');\n\tstatic readonly SCMHistoryItemContext = new MenuId('SCMHistoryItemContext');\n\tstatic readonly SCMHistoryItemChangeContext = new MenuId('SCMHistoryItemChangeContext');\n\tstatic readonly SCMHistoryItemHover = new MenuId('SCMHistoryItemHover');\n\tstatic readonly SCMHistoryItemRefContext = new MenuId('SCMHistoryItemRefContext');\n\tstatic readonly SCMQuickDiffDecorations = new MenuId('SCMQuickDiffDecorations');\n\tstatic readonly SCMTitle = new MenuId('SCMTitle');\n\tstatic readonly SearchContext = new MenuId('SearchContext');\n\tstatic readonly SearchActionMenu = new MenuId('SearchActionContext');\n\tstatic readonly StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\n\tstatic readonly StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\n\tstatic readonly StickyScrollContext = new MenuId('StickyScrollContext');\n\tstatic readonly TestItem = new MenuId('TestItem');\n\tstatic readonly TestItemGutter = new MenuId('TestItemGutter');\n\tstatic readonly TestProfilesContext = new MenuId('TestProfilesContext');\n\tstatic readonly TestMessageContext = new MenuId('TestMessageContext');\n\tstatic readonly TestMessageContent = new MenuId('TestMessageContent');\n\tstatic readonly TestPeekElement = new MenuId('TestPeekElement');\n\tstatic readonly TestPeekTitle = new MenuId('TestPeekTitle');\n\tstatic readonly TestCallStack = new MenuId('TestCallStack');\n\tstatic readonly TestCoverageFilterItem = new MenuId('TestCoverageFilterItem');\n\tstatic readonly TouchBarContext = new MenuId('TouchBarContext');\n\tstatic readonly TitleBar = new MenuId('TitleBar');\n\tstatic readonly TitleBarContext = new MenuId('TitleBarContext');\n\tstatic readonly TitleBarTitleContext = new MenuId('TitleBarTitleContext');\n\tstatic readonly TunnelContext = new MenuId('TunnelContext');\n\tstatic readonly TunnelPrivacy = new MenuId('TunnelPrivacy');\n\tstatic readonly TunnelProtocol = new MenuId('TunnelProtocol');\n\tstatic readonly TunnelPortInline = new MenuId('TunnelInline');\n\tstatic readonly TunnelTitle = new MenuId('TunnelTitle');\n\tstatic readonly TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\n\tstatic readonly TunnelOriginInline = new MenuId('TunnelOriginInline');\n\tstatic readonly ViewItemContext = new MenuId('ViewItemContext');\n\tstatic readonly ViewContainerTitle = new MenuId('ViewContainerTitle');\n\tstatic readonly ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\n\tstatic readonly ViewTitle = new MenuId('ViewTitle');\n\tstatic readonly ViewTitleContext = new MenuId('ViewTitleContext');\n\tstatic readonly CommentEditorActions = new MenuId('CommentEditorActions');\n\tstatic readonly CommentThreadTitle = new MenuId('CommentThreadTitle');\n\tstatic readonly CommentThreadActions = new MenuId('CommentThreadActions');\n\tstatic readonly CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\n\tstatic readonly CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\n\tstatic readonly CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\n\tstatic readonly CommentTitle = new MenuId('CommentTitle');\n\tstatic readonly CommentActions = new MenuId('CommentActions');\n\tstatic readonly CommentsViewThreadActions = new MenuId('CommentsViewThreadActions');\n\tstatic readonly InteractiveToolbar = new MenuId('InteractiveToolbar');\n\tstatic readonly InteractiveCellTitle = new MenuId('InteractiveCellTitle');\n\tstatic readonly InteractiveCellDelete = new MenuId('InteractiveCellDelete');\n\tstatic readonly InteractiveCellExecute = new MenuId('InteractiveCellExecute');\n\tstatic readonly InteractiveInputExecute = new MenuId('InteractiveInputExecute');\n\tstatic readonly InteractiveInputConfig = new MenuId('InteractiveInputConfig');\n\tstatic readonly ReplInputExecute = new MenuId('ReplInputExecute');\n\tstatic readonly IssueReporter = new MenuId('IssueReporter');\n\tstatic readonly NotebookToolbar = new MenuId('NotebookToolbar');\n\tstatic readonly NotebookToolbarContext = new MenuId('NotebookToolbarContext');\n\tstatic readonly NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\n\tstatic readonly NotebookCellTitle = new MenuId('NotebookCellTitle');\n\tstatic readonly NotebookCellDelete = new MenuId('NotebookCellDelete');\n\tstatic readonly NotebookCellInsert = new MenuId('NotebookCellInsert');\n\tstatic readonly NotebookCellBetween = new MenuId('NotebookCellBetween');\n\tstatic readonly NotebookCellListTop = new MenuId('NotebookCellTop');\n\tstatic readonly NotebookCellExecute = new MenuId('NotebookCellExecute');\n\tstatic readonly NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo');\n\tstatic readonly NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\n\tstatic readonly NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\n\tstatic readonly NotebookDiffDocumentMetadata = new MenuId('NotebookDiffDocumentMetadata');\n\tstatic readonly NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\n\tstatic readonly NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\n\tstatic readonly NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\n\tstatic readonly NotebookOutlineFilter = new MenuId('NotebookOutlineFilter');\n\tstatic readonly NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu');\n\tstatic readonly NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\n\tstatic readonly NotebookKernelSource = new MenuId('NotebookKernelSource');\n\tstatic readonly BulkEditTitle = new MenuId('BulkEditTitle');\n\tstatic readonly BulkEditContext = new MenuId('BulkEditContext');\n\tstatic readonly TimelineItemContext = new MenuId('TimelineItemContext');\n\tstatic readonly TimelineTitle = new MenuId('TimelineTitle');\n\tstatic readonly TimelineTitleContext = new MenuId('TimelineTitleContext');\n\tstatic readonly TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\n\tstatic readonly AccountsContext = new MenuId('AccountsContext');\n\tstatic readonly SidebarTitle = new MenuId('SidebarTitle');\n\tstatic readonly PanelTitle = new MenuId('PanelTitle');\n\tstatic readonly AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\n\tstatic readonly TerminalInstanceContext = new MenuId('TerminalInstanceContext');\n\tstatic readonly TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\n\tstatic readonly TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\n\tstatic readonly TerminalTabContext = new MenuId('TerminalTabContext');\n\tstatic readonly TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\n\tstatic readonly TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext');\n\tstatic readonly WebviewContext = new MenuId('WebviewContext');\n\tstatic readonly InlineCompletionsActions = new MenuId('InlineCompletionsActions');\n\tstatic readonly InlineEditsActions = new MenuId('InlineEditsActions');\n\tstatic readonly NewFile = new MenuId('NewFile');\n\tstatic readonly MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\n\tstatic readonly MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\n\tstatic readonly MergeBaseToolbar = new MenuId('MergeBaseToolbar');\n\tstatic readonly MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\n\tstatic readonly InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\n\tstatic readonly InlineEditToolbar = new MenuId('InlineEditToolbar');\n\tstatic readonly ChatContext = new MenuId('ChatContext');\n\tstatic readonly ChatCodeBlock = new MenuId('ChatCodeblock');\n\tstatic readonly ChatCompareBlock = new MenuId('ChatCompareBlock');\n\tstatic readonly ChatMessageTitle = new MenuId('ChatMessageTitle');\n\tstatic readonly ChatMessageFooter = new MenuId('ChatMessageFooter');\n\tstatic readonly ChatExecute = new MenuId('ChatExecute');\n\tstatic readonly ChatExecuteSecondary = new MenuId('ChatExecuteSecondary');\n\tstatic readonly ChatInput = new MenuId('ChatInput');\n\tstatic readonly ChatInputSide = new MenuId('ChatInputSide');\n\tstatic readonly ChatModePicker = new MenuId('ChatModePicker');\n\tstatic readonly ChatEditingWidgetToolbar = new MenuId('ChatEditingWidgetToolbar');\n\tstatic readonly ChatEditingEditorContent = new MenuId('ChatEditingEditorContent');\n\tstatic readonly ChatEditingEditorHunk = new MenuId('ChatEditingEditorHunk');\n\tstatic readonly ChatEditingDeletedNotebookCell = new MenuId('ChatEditingDeletedNotebookCell');\n\tstatic readonly ChatInputAttachmentToolbar = new MenuId('ChatInputAttachmentToolbar');\n\tstatic readonly ChatEditingWidgetModifiedFilesToolbar = new MenuId('ChatEditingWidgetModifiedFilesToolbar');\n\tstatic readonly ChatInputResourceAttachmentContext = new MenuId('ChatInputResourceAttachmentContext');\n\tstatic readonly ChatInputSymbolAttachmentContext = new MenuId('ChatInputSymbolAttachmentContext');\n\tstatic readonly ChatInlineResourceAnchorContext = new MenuId('ChatInlineResourceAnchorContext');\n\tstatic readonly ChatInlineSymbolAnchorContext = new MenuId('ChatInlineSymbolAnchorContext');\n\tstatic readonly ChatMessageCheckpoint: MenuId = new MenuId('ChatMessageCheckpoint');\n\tstatic readonly ChatMessageRestoreCheckpoint: MenuId = new MenuId('ChatMessageRestoreCheckpoint');\n\tstatic readonly ChatEditingCodeBlockContext = new MenuId('ChatEditingCodeBlockContext');\n\tstatic readonly ChatTitleBarMenu = new MenuId('ChatTitleBarMenu');\n\tstatic readonly ChatAttachmentsContext = new MenuId('ChatAttachmentsContext');\n\tstatic readonly ChatToolOutputResourceToolbar = new MenuId('ChatToolOutputResourceToolbar');\n\tstatic readonly ChatTextEditorMenu = new MenuId('ChatTextEditorMenu');\n\tstatic readonly ChatToolOutputResourceContext = new MenuId('ChatToolOutputResourceContext');\n\tstatic readonly ChatMultiDiffContext = new MenuId('ChatMultiDiffContext');\n\tstatic readonly ChatSessionsMenu = new MenuId('ChatSessionsMenu');\n\tstatic readonly ChatConfirmationMenu = new MenuId('ChatConfirmationMenu');\n\tstatic readonly AccessibleView = new MenuId('AccessibleView');\n\tstatic readonly MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar');\n\tstatic readonly DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar');\n\tstatic readonly DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar');\n\n\treadonly id: string;\n\n\t/**\n\t * Create a new `MenuId` with the unique identifier. Will throw if a menu\n\t * with the identifier already exists, use `MenuId.for(ident)` or a unique\n\t * identifier\n\t */\n\tconstructor(identifier: string) {\n\t\tif (MenuId._instances.has(identifier)) {\n\t\t\tthrow new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n\t\t}\n\t\tMenuId._instances.set(identifier, this);\n\t\tthis.id = identifier;\n\t}\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n\trenderShortTitle?: boolean;\n}\n\nexport interface IMenuChangeEvent {\n\treadonly menu: IMenu;\n\treadonly isStructuralChange: boolean;\n\treadonly isToggleChange: boolean;\n\treadonly isEnablementChange: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\tgetActions(options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>('menuService');\n\nexport interface IMenuCreateOptions {\n\temitEventsForSubmenuChanges?: boolean;\n\teventDebounceDelay?: number;\n}\n\nexport interface IMenuService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Consider using getMenuActions if you don't need to listen to events.\n\t *\n\t * Create a new menu for the given menu identifier. A menu sends events when it's entries\n\t * have changed (placement, enablement, checked-state). By default it does not send events for\n\t * submenu entries. That is more expensive and must be explicitly enabled with the\n\t * `emitEventsForSubmenuChanges` flag.\n\t */\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu;\n\n\t/**\n\t * Creates a new menu, gets the actions, and then disposes of the menu.\n\t */\n\tgetMenuActions(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n\n\t/**\n\t * Reset **all** menu item hidden states.\n\t */\n\tresetHiddenStates(): void;\n\n\t/**\n\t * Reset the menu's hidden states.\n\t */\n\tresetHiddenStates(menuIds: readonly MenuId[] | undefined): void;\n}\n\ntype ICommandsMap = Map<string, ICommandAction>;\n\nexport interface IMenuRegistryChangeEvent {\n\thas(id: MenuId): boolean;\n}\n\nclass MenuRegistryChangeEvent {\n\n\tprivate static _all = new Map<MenuId, MenuRegistryChangeEvent>();\n\n\tstatic for(id: MenuId): MenuRegistryChangeEvent {\n\t\tlet value = this._all.get(id);\n\t\tif (!value) {\n\t\t\tvalue = new MenuRegistryChangeEvent(id);\n\t\t\tthis._all.set(id, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic merge(events: IMenuRegistryChangeEvent[]): IMenuRegistryChangeEvent {\n\t\tconst ids = new Set<MenuId>();\n\t\tfor (const item of events) {\n\t\t\tif (item instanceof MenuRegistryChangeEvent) {\n\t\t\t\tids.add(item.id);\n\t\t\t}\n\t\t}\n\t\treturn ids;\n\t}\n\n\treadonly has: (id: MenuId) => boolean;\n\n\tprivate constructor(private readonly id: MenuId) {\n\t\tthis.has = candidate => candidate === id;\n\t}\n}\n\nexport interface IMenuRegistry {\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent>;\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId): Array<IMenuItem | ISubmenuItem>;\n}\n\nexport const MenuRegistry: IMenuRegistry = new class implements IMenuRegistry {\n\n\tprivate readonly _commands = new Map<string, ICommandAction>();\n\tprivate readonly _menuItems = new Map<MenuId, LinkedList<IMenuItem | ISubmenuItem>>();\n\tprivate readonly _onDidChangeMenu = new MicrotaskEmitter<IMenuRegistryChangeEvent>({\n\t\tmerge: MenuRegistryChangeEvent.merge\n\t});\n\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent> = this._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\tthis._commands.set(command.id, command);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\n\t\treturn markAsSingleton(toDisposable(() => {\n\t\t\tif (this._commands.delete(command.id)) {\n\t\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetCommand(id: string): ICommandAction | undefined {\n\t\treturn this._commands.get(id);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst map = new Map<string, ICommandAction>();\n\t\tthis._commands.forEach((value, key) => map.set(key, value));\n\t\treturn map;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\tlet list = this._menuItems.get(id);\n\t\tif (!list) {\n\t\t\tlist = new LinkedList();\n\t\t\tthis._menuItems.set(id, list);\n\t\t}\n\t\tconst rm = list.push(item);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\treturn markAsSingleton(toDisposable(() => {\n\t\t\trm();\n\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\t}));\n\t}\n\n\tappendMenuItems(items: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>): IDisposable {\n\t\tconst result = new DisposableStore();\n\t\tfor (const { id, item } of items) {\n\t\t\tresult.add(this.appendMenuItem(id, item));\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetMenuItems(id: MenuId): Array<IMenuItem | ISubmenuItem> {\n\t\tlet result: Array<IMenuItem | ISubmenuItem>;\n\t\tif (this._menuItems.has(id)) {\n\t\t\tresult = [...this._menuItems.get(id)!];\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tfor (const item of result) {\n\t\t\tif (isIMenuItem(item)) {\n\t\t\t\tset.add(item.command.id);\n\t\t\t\tif (item.alt) {\n\t\t\t\t\tset.add(item.alt.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command });\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport class SubmenuItemAction extends SubmenuAction {\n\n\tconstructor(\n\t\treadonly item: ISubmenuItem,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\tactions: readonly IAction[],\n\t) {\n\t\tsuper(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n\t}\n}\n\nexport interface IMenuItemHide {\n\treadonly isHidden: boolean;\n\treadonly hide: IAction;\n\treadonly toggle: IAction;\n}\n\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport class MenuItemAction implements IAction {\n\n\tstatic label(action: ICommandAction, options?: IMenuActionOptions): string {\n\t\treturn options?.renderShortTitle && action.shortTitle\n\t\t\t? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n\t\t\t: (typeof action.title === 'string' ? action.title : action.title.value);\n\t}\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate readonly _options: IMenuActionOptions | undefined;\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly class: string | undefined;\n\treadonly enabled: boolean;\n\treadonly checked?: boolean;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions | undefined,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\treadonly menuKeybinding: IAction | undefined,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private _commandService: ICommandService\n\t) {\n\t\tthis.id = item.id;\n\t\tthis.label = MenuItemAction.label(item, options);\n\t\tthis.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n\t\tthis.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n\t\tthis.checked = undefined;\n\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tif (item.toggled) {\n\t\t\tconst toggled = ((item.toggled as { condition: ContextKeyExpression }).condition ? item.toggled : { condition: item.toggled }) as {\n\t\t\t\tcondition: ContextKeyExpression; icon?: Icon; tooltip?: string | ILocalizedString; title?: string | ILocalizedString;\n\t\t\t};\n\t\t\tthis.checked = contextKeyService.contextMatchesRules(toggled.condition);\n\t\t\tif (this.checked && toggled.tooltip) {\n\t\t\t\tthis.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n\t\t\t}\n\n\t\t\tif (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n\t\t\t\ticon = toggled.icon;\n\t\t\t}\n\n\t\t\tif (this.checked && toggled.title) {\n\t\t\t\tthis.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n\t\t\t}\n\t\t}\n\n\t\tif (!icon) {\n\t\t\ticon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n\t\t}\n\n\t\tthis.item = item;\n\t\tthis.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n\t\tthis._options = options;\n\t\tthis.class = icon && ThemeIcon.asClassName(icon);\n\n\t}\n\n\trun(...args: any[]): Promise<void> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options?.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options?.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn this._commandService.executeCommand(this.id, ...runArgs);\n\t}\n}\n\n//#region --- IAction2\n\ntype OneOrN<T> = T | T[];\n\ninterface IAction2CommonOptions extends ICommandAction {\n\t/**\n\t * One or many menu items.\n\t */\n\tmenu?: OneOrN<{ id: MenuId; precondition?: null } & Omit<IMenuItem, 'command'>>;\n\n\t/**\n\t * One keybinding.\n\t */\n\tkeybinding?: OneOrN<Omit<IKeybindingRule, 'id'>>;\n}\n\ninterface IBaseAction2Options extends IAction2CommonOptions {\n\n\t/**\n\t * This type is used when an action is not going to show up in the command palette.\n\t * In that case, it's able to use a string for the `title` and `category` properties.\n\t */\n\tf1?: false;\n}\n\nexport interface ICommandPaletteOptions extends IAction2CommonOptions {\n\n\t/**\n\t * The title of the command that will be displayed in the command palette after the category.\n\t *  This overrides {@link ICommandAction.title} to ensure a string isn't used so that the title\n\t *  includes the localized value and the original value for users using language packs.\n\t */\n\ttitle: ICommandActionTitle;\n\n\t/**\n\t * The category of the command that will be displayed in the command palette before the title suffixed.\n\t * with a colon This overrides {@link ICommandAction.title} to ensure a string isn't used so that\n\t * the title includes the localized value and the original value for users using language packs.\n\t */\n\tcategory?: keyof typeof Categories | ILocalizedString;\n\n\t/**\n\t * Shorthand to add this command to the command palette. Note: this is not the only way to declare that\n\t * a command should be in the command palette... however, enforcing ILocalizedString in the other scenarios\n\t * is much more challenging and this gets us most of the way there.\n\t */\n\tf1: true;\n}\n\nexport type IAction2Options = ICommandPaletteOptions | IBaseAction2Options;\n\nexport interface IAction2F1RequiredOptions {\n\ttitle: ICommandActionTitle;\n}\n\nexport abstract class Action2 {\n\tconstructor(readonly desc: Readonly<IAction2Options>) { }\n\tabstract run(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport function registerAction2(ctor: { new(): Action2 }): IDisposable {\n\tconst disposables: IDisposable[] = []; // not using `DisposableStore` to reduce startup perf cost\n\tconst action = new ctor();\n\n\tconst { f1, menu, keybinding, ...command } = action.desc;\n\n\tif (CommandsRegistry.getCommand(command.id)) {\n\t\tthrow new Error(`Cannot register two commands with the same id: ${command.id}`);\n\t}\n\n\t// command\n\tdisposables.push(CommandsRegistry.registerCommand({\n\t\tid: command.id,\n\t\thandler: (accessor, ...args) => action.run(accessor, ...args),\n\t\tmetadata: command.metadata ?? { description: action.desc.title }\n\t}));\n\n\t// menu\n\tif (Array.isArray(menu)) {\n\t\tfor (const item of menu) {\n\t\t\tdisposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n\t\t}\n\n\t} else if (menu) {\n\t\tdisposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n\t}\n\tif (f1) {\n\t\tdisposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n\t\tdisposables.push(MenuRegistry.addCommand(command));\n\t}\n\n\t// keybinding\n\tif (Array.isArray(keybinding)) {\n\t\tfor (const item of keybinding) {\n\t\t\tdisposables.push(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t...item,\n\t\t\t\tid: command.id,\n\t\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n\t\t\t}));\n\t\t}\n\t} else if (keybinding) {\n\t\tdisposables.push(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t...keybinding,\n\t\t\tid: command.id,\n\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n\t\t}));\n\t}\n\n\treturn {\n\t\tdispose() {\n\t\t\tdispose(disposables);\n\t\t}\n\t};\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction, SubmenuAction } from '../../../base/common/actions.js';\nimport { Event, MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, dispose, IDisposable, markAsSingleton, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { ICommandAction, ICommandActionTitle, Icon, ILocalizedString } from '../../action/common/action.js';\nimport { Categories } from '../../action/common/actionCommonCategories.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator, ServicesAccessor } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingRule, KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\n\nexport interface IMenuItem {\n\tcommand: ICommandAction;\n\talt?: ICommandAction;\n\t/**\n\t * Menu item is hidden if this expression returns false.\n\t */\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisHiddenByDefault?: boolean;\n}\n\nexport interface ISubmenuItem {\n\ttitle: string | ICommandActionTitle;\n\tsubmenu: MenuId;\n\ticon?: Icon;\n\twhen?: ContextKeyExpression;\n\tgroup?: 'navigation' | string;\n\torder?: number;\n\tisSelection?: boolean;\n\trememberDefaultAction?: boolean;\t// for dropdown menu: if true the last executed action is remembered as the default action\n}\n\nexport function isIMenuItem(item: any): item is IMenuItem {\n\treturn (item as IMenuItem).command !== undefined;\n}\n\nexport function isISubmenuItem(item: any): item is ISubmenuItem {\n\treturn (item as ISubmenuItem).submenu !== undefined;\n}\n\nexport class MenuId {\n\n\tprivate static readonly _instances = new Map<string, MenuId>();\n\n\tstatic readonly CommandPalette = new MenuId('CommandPalette');\n\tstatic readonly DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\n\tstatic readonly DebugCallStackContext = new MenuId('DebugCallStackContext');\n\tstatic readonly DebugConsoleContext = new MenuId('DebugConsoleContext');\n\tstatic readonly DebugVariablesContext = new MenuId('DebugVariablesContext');\n\tstatic readonly NotebookVariablesContext = new MenuId('NotebookVariablesContext');\n\tstatic readonly DebugHoverContext = new MenuId('DebugHoverContext');\n\tstatic readonly DebugWatchContext = new MenuId('DebugWatchContext');\n\tstatic readonly DebugToolBar = new MenuId('DebugToolBar');\n\tstatic readonly DebugToolBarStop = new MenuId('DebugToolBarStop');\n\tstatic readonly DebugDisassemblyContext = new MenuId('DebugDisassemblyContext');\n\tstatic readonly DebugCallStackToolbar = new MenuId('DebugCallStackToolbar');\n\tstatic readonly DebugCreateConfiguration = new MenuId('DebugCreateConfiguration');\n\tstatic readonly EditorContext = new MenuId('EditorContext');\n\tstatic readonly SimpleEditorContext = new MenuId('SimpleEditorContext');\n\tstatic readonly EditorContent = new MenuId('EditorContent');\n\tstatic readonly EditorLineNumberContext = new MenuId('EditorLineNumberContext');\n\tstatic readonly EditorContextCopy = new MenuId('EditorContextCopy');\n\tstatic readonly EditorContextPeek = new MenuId('EditorContextPeek');\n\tstatic readonly EditorContextShare = new MenuId('EditorContextShare');\n\tstatic readonly EditorTitle = new MenuId('EditorTitle');\n\tstatic readonly CompactWindowEditorTitle = new MenuId('CompactWindowEditorTitle');\n\tstatic readonly EditorTitleRun = new MenuId('EditorTitleRun');\n\tstatic readonly EditorTitleContext = new MenuId('EditorTitleContext');\n\tstatic readonly EditorTitleContextShare = new MenuId('EditorTitleContextShare');\n\tstatic readonly EmptyEditorGroup = new MenuId('EmptyEditorGroup');\n\tstatic readonly EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\n\tstatic readonly EditorTabsBarContext = new MenuId('EditorTabsBarContext');\n\tstatic readonly EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu');\n\tstatic readonly EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu');\n\tstatic readonly EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu');\n\tstatic readonly EditorSplitMoveSubmenu = new MenuId('EditorSplitMoveSubmenu');\n\tstatic readonly ExplorerContext = new MenuId('ExplorerContext');\n\tstatic readonly ExplorerContextShare = new MenuId('ExplorerContextShare');\n\tstatic readonly ExtensionContext = new MenuId('ExtensionContext');\n\tstatic readonly ExtensionEditorContextMenu = new MenuId('ExtensionEditorContextMenu');\n\tstatic readonly GlobalActivity = new MenuId('GlobalActivity');\n\tstatic readonly CommandCenter = new MenuId('CommandCenter');\n\tstatic readonly CommandCenterCenter = new MenuId('CommandCenterCenter');\n\tstatic readonly LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\n\tstatic readonly LayoutControlMenu = new MenuId('LayoutControlMenu');\n\tstatic readonly MenubarMainMenu = new MenuId('MenubarMainMenu');\n\tstatic readonly MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\n\tstatic readonly MenubarDebugMenu = new MenuId('MenubarDebugMenu');\n\tstatic readonly MenubarEditMenu = new MenuId('MenubarEditMenu');\n\tstatic readonly MenubarCopy = new MenuId('MenubarCopy');\n\tstatic readonly MenubarFileMenu = new MenuId('MenubarFileMenu');\n\tstatic readonly MenubarGoMenu = new MenuId('MenubarGoMenu');\n\tstatic readonly MenubarHelpMenu = new MenuId('MenubarHelpMenu');\n\tstatic readonly MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\n\tstatic readonly MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\n\tstatic readonly PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\n\tstatic readonly PanelPositionMenu = new MenuId('PanelPositionMenu');\n\tstatic readonly ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu');\n\tstatic readonly MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\n\tstatic readonly MenubarRecentMenu = new MenuId('MenubarRecentMenu');\n\tstatic readonly MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\n\tstatic readonly MenubarShare = new MenuId('MenubarShare');\n\tstatic readonly MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\n\tstatic readonly MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\n\tstatic readonly MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\n\tstatic readonly MenubarTerminalSuggestStatusMenu = new MenuId('MenubarTerminalSuggestStatusMenu');\n\tstatic readonly MenubarViewMenu = new MenuId('MenubarViewMenu');\n\tstatic readonly MenubarHomeMenu = new MenuId('MenubarHomeMenu');\n\tstatic readonly OpenEditorsContext = new MenuId('OpenEditorsContext');\n\tstatic readonly OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\n\tstatic readonly ProblemsPanelContext = new MenuId('ProblemsPanelContext');\n\tstatic readonly SCMInputBox = new MenuId('SCMInputBox');\n\tstatic readonly SCMChangeContext = new MenuId('SCMChangeContext');\n\tstatic readonly SCMResourceContext = new MenuId('SCMResourceContext');\n\tstatic readonly SCMResourceContextShare = new MenuId('SCMResourceContextShare');\n\tstatic readonly SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\n\tstatic readonly SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\n\tstatic readonly SCMSourceControl = new MenuId('SCMSourceControl');\n\tstatic readonly SCMSourceControlInline = new MenuId('SCMSourceControlInline');\n\tstatic readonly SCMSourceControlTitle = new MenuId('SCMSourceControlTitle');\n\tstatic readonly SCMHistoryTitle = new MenuId('SCMHistoryTitle');\n\tstatic readonly SCMHistoryItemContext = new MenuId('SCMHistoryItemContext');\n\tstatic readonly SCMHistoryItemChangeContext = new MenuId('SCMHistoryItemChangeContext');\n\tstatic readonly SCMHistoryItemHover = new MenuId('SCMHistoryItemHover');\n\tstatic readonly SCMHistoryItemRefContext = new MenuId('SCMHistoryItemRefContext');\n\tstatic readonly SCMQuickDiffDecorations = new MenuId('SCMQuickDiffDecorations');\n\tstatic readonly SCMTitle = new MenuId('SCMTitle');\n\tstatic readonly SearchContext = new MenuId('SearchContext');\n\tstatic readonly SearchActionMenu = new MenuId('SearchActionContext');\n\tstatic readonly StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\n\tstatic readonly StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\n\tstatic readonly StickyScrollContext = new MenuId('StickyScrollContext');\n\tstatic readonly TestItem = new MenuId('TestItem');\n\tstatic readonly TestItemGutter = new MenuId('TestItemGutter');\n\tstatic readonly TestProfilesContext = new MenuId('TestProfilesContext');\n\tstatic readonly TestMessageContext = new MenuId('TestMessageContext');\n\tstatic readonly TestMessageContent = new MenuId('TestMessageContent');\n\tstatic readonly TestPeekElement = new MenuId('TestPeekElement');\n\tstatic readonly TestPeekTitle = new MenuId('TestPeekTitle');\n\tstatic readonly TestCallStack = new MenuId('TestCallStack');\n\tstatic readonly TestCoverageFilterItem = new MenuId('TestCoverageFilterItem');\n\tstatic readonly TouchBarContext = new MenuId('TouchBarContext');\n\tstatic readonly TitleBar = new MenuId('TitleBar');\n\tstatic readonly TitleBarContext = new MenuId('TitleBarContext');\n\tstatic readonly TitleBarTitleContext = new MenuId('TitleBarTitleContext');\n\tstatic readonly TunnelContext = new MenuId('TunnelContext');\n\tstatic readonly TunnelPrivacy = new MenuId('TunnelPrivacy');\n\tstatic readonly TunnelProtocol = new MenuId('TunnelProtocol');\n\tstatic readonly TunnelPortInline = new MenuId('TunnelInline');\n\tstatic readonly TunnelTitle = new MenuId('TunnelTitle');\n\tstatic readonly TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\n\tstatic readonly TunnelOriginInline = new MenuId('TunnelOriginInline');\n\tstatic readonly ViewItemContext = new MenuId('ViewItemContext');\n\tstatic readonly ViewContainerTitle = new MenuId('ViewContainerTitle');\n\tstatic readonly ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\n\tstatic readonly ViewTitle = new MenuId('ViewTitle');\n\tstatic readonly ViewTitleContext = new MenuId('ViewTitleContext');\n\tstatic readonly CommentEditorActions = new MenuId('CommentEditorActions');\n\tstatic readonly CommentThreadTitle = new MenuId('CommentThreadTitle');\n\tstatic readonly CommentThreadActions = new MenuId('CommentThreadActions');\n\tstatic readonly CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\n\tstatic readonly CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\n\tstatic readonly CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\n\tstatic readonly CommentTitle = new MenuId('CommentTitle');\n\tstatic readonly CommentActions = new MenuId('CommentActions');\n\tstatic readonly CommentsViewThreadActions = new MenuId('CommentsViewThreadActions');\n\tstatic readonly InteractiveToolbar = new MenuId('InteractiveToolbar');\n\tstatic readonly InteractiveCellTitle = new MenuId('InteractiveCellTitle');\n\tstatic readonly InteractiveCellDelete = new MenuId('InteractiveCellDelete');\n\tstatic readonly InteractiveCellExecute = new MenuId('InteractiveCellExecute');\n\tstatic readonly InteractiveInputExecute = new MenuId('InteractiveInputExecute');\n\tstatic readonly InteractiveInputConfig = new MenuId('InteractiveInputConfig');\n\tstatic readonly ReplInputExecute = new MenuId('ReplInputExecute');\n\tstatic readonly IssueReporter = new MenuId('IssueReporter');\n\tstatic readonly NotebookToolbar = new MenuId('NotebookToolbar');\n\tstatic readonly NotebookToolbarContext = new MenuId('NotebookToolbarContext');\n\tstatic readonly NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\n\tstatic readonly NotebookCellTitle = new MenuId('NotebookCellTitle');\n\tstatic readonly NotebookCellDelete = new MenuId('NotebookCellDelete');\n\tstatic readonly NotebookCellInsert = new MenuId('NotebookCellInsert');\n\tstatic readonly NotebookCellBetween = new MenuId('NotebookCellBetween');\n\tstatic readonly NotebookCellListTop = new MenuId('NotebookCellTop');\n\tstatic readonly NotebookCellExecute = new MenuId('NotebookCellExecute');\n\tstatic readonly NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo');\n\tstatic readonly NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\n\tstatic readonly NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\n\tstatic readonly NotebookDiffDocumentMetadata = new MenuId('NotebookDiffDocumentMetadata');\n\tstatic readonly NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\n\tstatic readonly NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\n\tstatic readonly NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\n\tstatic readonly NotebookOutlineFilter = new MenuId('NotebookOutlineFilter');\n\tstatic readonly NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu');\n\tstatic readonly NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\n\tstatic readonly NotebookKernelSource = new MenuId('NotebookKernelSource');\n\tstatic readonly BulkEditTitle = new MenuId('BulkEditTitle');\n\tstatic readonly BulkEditContext = new MenuId('BulkEditContext');\n\tstatic readonly TimelineItemContext = new MenuId('TimelineItemContext');\n\tstatic readonly TimelineTitle = new MenuId('TimelineTitle');\n\tstatic readonly TimelineTitleContext = new MenuId('TimelineTitleContext');\n\tstatic readonly TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\n\tstatic readonly AccountsContext = new MenuId('AccountsContext');\n\tstatic readonly SidebarTitle = new MenuId('SidebarTitle');\n\tstatic readonly PanelTitle = new MenuId('PanelTitle');\n\tstatic readonly AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\n\tstatic readonly TerminalInstanceContext = new MenuId('TerminalInstanceContext');\n\tstatic readonly TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\n\tstatic readonly TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\n\tstatic readonly TerminalTabContext = new MenuId('TerminalTabContext');\n\tstatic readonly TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\n\tstatic readonly TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext');\n\tstatic readonly WebviewContext = new MenuId('WebviewContext');\n\tstatic readonly InlineCompletionsActions = new MenuId('InlineCompletionsActions');\n\tstatic readonly InlineEditsActions = new MenuId('InlineEditsActions');\n\tstatic readonly NewFile = new MenuId('NewFile');\n\tstatic readonly MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\n\tstatic readonly MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\n\tstatic readonly MergeBaseToolbar = new MenuId('MergeBaseToolbar');\n\tstatic readonly MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\n\tstatic readonly InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\n\tstatic readonly InlineEditToolbar = new MenuId('InlineEditToolbar');\n\tstatic readonly ChatContext = new MenuId('ChatContext');\n\tstatic readonly ChatCodeBlock = new MenuId('ChatCodeblock');\n\tstatic readonly ChatCompareBlock = new MenuId('ChatCompareBlock');\n\tstatic readonly ChatMessageTitle = new MenuId('ChatMessageTitle');\n\tstatic readonly ChatMessageFooter = new MenuId('ChatMessageFooter');\n\tstatic readonly ChatExecute = new MenuId('ChatExecute');\n\tstatic readonly ChatExecuteSecondary = new MenuId('ChatExecuteSecondary');\n\tstatic readonly ChatInput = new MenuId('ChatInput');\n\tstatic readonly ChatInputSide = new MenuId('ChatInputSide');\n\tstatic readonly ChatModePicker = new MenuId('ChatModePicker');\n\tstatic readonly ChatEditingWidgetToolbar = new MenuId('ChatEditingWidgetToolbar');\n\tstatic readonly ChatEditingEditorContent = new MenuId('ChatEditingEditorContent');\n\tstatic readonly ChatEditingEditorHunk = new MenuId('ChatEditingEditorHunk');\n\tstatic readonly ChatEditingDeletedNotebookCell = new MenuId('ChatEditingDeletedNotebookCell');\n\tstatic readonly ChatInputAttachmentToolbar = new MenuId('ChatInputAttachmentToolbar');\n\tstatic readonly ChatEditingWidgetModifiedFilesToolbar = new MenuId('ChatEditingWidgetModifiedFilesToolbar');\n\tstatic readonly ChatInputResourceAttachmentContext = new MenuId('ChatInputResourceAttachmentContext');\n\tstatic readonly ChatInputSymbolAttachmentContext = new MenuId('ChatInputSymbolAttachmentContext');\n\tstatic readonly ChatInlineResourceAnchorContext = new MenuId('ChatInlineResourceAnchorContext');\n\tstatic readonly ChatInlineSymbolAnchorContext = new MenuId('ChatInlineSymbolAnchorContext');\n\tstatic readonly ChatMessageCheckpoint: MenuId = new MenuId('ChatMessageCheckpoint');\n\tstatic readonly ChatMessageRestoreCheckpoint: MenuId = new MenuId('ChatMessageRestoreCheckpoint');\n\tstatic readonly ChatEditingCodeBlockContext = new MenuId('ChatEditingCodeBlockContext');\n\tstatic readonly ChatTitleBarMenu = new MenuId('ChatTitleBarMenu');\n\tstatic readonly ChatAttachmentsContext = new MenuId('ChatAttachmentsContext');\n\tstatic readonly ChatToolOutputResourceToolbar = new MenuId('ChatToolOutputResourceToolbar');\n\tstatic readonly ChatTextEditorMenu = new MenuId('ChatTextEditorMenu');\n\tstatic readonly ChatToolOutputResourceContext = new MenuId('ChatToolOutputResourceContext');\n\tstatic readonly ChatMultiDiffContext = new MenuId('ChatMultiDiffContext');\n\tstatic readonly ChatSessionsMenu = new MenuId('ChatSessionsMenu');\n\tstatic readonly ChatConfirmationMenu = new MenuId('ChatConfirmationMenu');\n\tstatic readonly AccessibleView = new MenuId('AccessibleView');\n\tstatic readonly MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar');\n\tstatic readonly DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar');\n\tstatic readonly DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar');\n\n\treadonly id: string;\n\n\t/**\n\t * Create a new `MenuId` with the unique identifier. Will throw if a menu\n\t * with the identifier already exists, use `MenuId.for(ident)` or a unique\n\t * identifier\n\t */\n\tconstructor(identifier: string) {\n\t\tif (MenuId._instances.has(identifier)) {\n\t\t\tthrow new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n\t\t}\n\t\tMenuId._instances.set(identifier, this);\n\t\tthis.id = identifier;\n\t}\n}\n\nexport interface IMenuActionOptions {\n\targ?: any;\n\tshouldForwardArgs?: boolean;\n\trenderShortTitle?: boolean;\n}\n\nexport interface IMenuChangeEvent {\n\treadonly menu: IMenu;\n\treadonly isStructuralChange: boolean;\n\treadonly isToggleChange: boolean;\n\treadonly isEnablementChange: boolean;\n}\n\nexport interface IMenu extends IDisposable {\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\tgetActions(options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n}\n\nexport const IMenuService = createDecorator<IMenuService>('menuService');\n\nexport interface IMenuCreateOptions {\n\temitEventsForSubmenuChanges?: boolean;\n\teventDebounceDelay?: number;\n}\n\nexport interface IMenuService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Consider using getMenuActions if you don't need to listen to events.\n\t *\n\t * Create a new menu for the given menu identifier. A menu sends events when it's entries\n\t * have changed (placement, enablement, checked-state). By default it does not send events for\n\t * submenu entries. That is more expensive and must be explicitly enabled with the\n\t * `emitEventsForSubmenuChanges` flag.\n\t */\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu;\n\n\t/**\n\t * Creates a new menu, gets the actions, and then disposes of the menu.\n\t */\n\tgetMenuActions(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][];\n\n\t/**\n\t * Reset **all** menu item hidden states.\n\t */\n\tresetHiddenStates(): void;\n\n\t/**\n\t * Reset the menu's hidden states.\n\t */\n\tresetHiddenStates(menuIds: readonly MenuId[] | undefined): void;\n}\n\ntype ICommandsMap = Map<string, ICommandAction>;\n\nexport interface IMenuRegistryChangeEvent {\n\thas(id: MenuId): boolean;\n}\n\nclass MenuRegistryChangeEvent {\n\n\tprivate static _all = new Map<MenuId, MenuRegistryChangeEvent>();\n\n\tstatic for(id: MenuId): MenuRegistryChangeEvent {\n\t\tlet value = this._all.get(id);\n\t\tif (!value) {\n\t\t\tvalue = new MenuRegistryChangeEvent(id);\n\t\t\tthis._all.set(id, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic merge(events: IMenuRegistryChangeEvent[]): IMenuRegistryChangeEvent {\n\t\tconst ids = new Set<MenuId>();\n\t\tfor (const item of events) {\n\t\t\tif (item instanceof MenuRegistryChangeEvent) {\n\t\t\t\tids.add(item.id);\n\t\t\t}\n\t\t}\n\t\treturn ids;\n\t}\n\n\treadonly has: (id: MenuId) => boolean;\n\n\tprivate constructor(private readonly id: MenuId) {\n\t\tthis.has = candidate => candidate === id;\n\t}\n}\n\nexport interface IMenuRegistry {\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent>;\n\taddCommand(userCommand: ICommandAction): IDisposable;\n\tappendMenuItem(menu: MenuId, item: IMenuItem | ISubmenuItem): IDisposable;\n\tgetMenuItems(loc: MenuId): Array<IMenuItem | ISubmenuItem>;\n}\n\nexport const MenuRegistry: IMenuRegistry = new class implements IMenuRegistry {\n\n\tprivate readonly _commands = new Map<string, ICommandAction>();\n\tprivate readonly _menuItems = new Map<MenuId, LinkedList<IMenuItem | ISubmenuItem>>();\n\tprivate readonly _onDidChangeMenu = new MicrotaskEmitter<IMenuRegistryChangeEvent>({\n\t\tmerge: MenuRegistryChangeEvent.merge\n\t});\n\n\treadonly onDidChangeMenu: Event<IMenuRegistryChangeEvent> = this._onDidChangeMenu.event;\n\n\taddCommand(command: ICommandAction): IDisposable {\n\t\tthis._commands.set(command.id, command);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\n\t\treturn markAsSingleton(toDisposable(() => {\n\t\t\tif (this._commands.delete(command.id)) {\n\t\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n\t\t\t}\n\t\t}));\n\t}\n\n\tgetCommand(id: string): ICommandAction | undefined {\n\t\treturn this._commands.get(id);\n\t}\n\n\tgetCommands(): ICommandsMap {\n\t\tconst map = new Map<string, ICommandAction>();\n\t\tthis._commands.forEach((value, key) => map.set(key, value));\n\t\treturn map;\n\t}\n\n\tappendMenuItem(id: MenuId, item: IMenuItem | ISubmenuItem): IDisposable {\n\t\tlet list = this._menuItems.get(id);\n\t\tif (!list) {\n\t\t\tlist = new LinkedList();\n\t\t\tthis._menuItems.set(id, list);\n\t\t}\n\t\tconst rm = list.push(item);\n\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\treturn markAsSingleton(toDisposable(() => {\n\t\t\trm();\n\t\t\tthis._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n\t\t}));\n\t}\n\n\tappendMenuItems(items: Iterable<{ id: MenuId; item: IMenuItem | ISubmenuItem }>): IDisposable {\n\t\tconst result = new DisposableStore();\n\t\tfor (const { id, item } of items) {\n\t\t\tresult.add(this.appendMenuItem(id, item));\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetMenuItems(id: MenuId): Array<IMenuItem | ISubmenuItem> {\n\t\tlet result: Array<IMenuItem | ISubmenuItem>;\n\t\tif (this._menuItems.has(id)) {\n\t\t\tresult = [...this._menuItems.get(id)!];\n\t\t} else {\n\t\t\tresult = [];\n\t\t}\n\t\tif (id === MenuId.CommandPalette) {\n\t\t\t// CommandPalette is special because it shows\n\t\t\t// all commands by default\n\t\t\tthis._appendImplicitItems(result);\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _appendImplicitItems(result: Array<IMenuItem | ISubmenuItem>) {\n\t\tconst set = new Set<string>();\n\n\t\tfor (const item of result) {\n\t\t\tif (isIMenuItem(item)) {\n\t\t\t\tset.add(item.command.id);\n\t\t\t\tif (item.alt) {\n\t\t\t\t\tset.add(item.alt.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._commands.forEach((command, id) => {\n\t\t\tif (!set.has(id)) {\n\t\t\t\tresult.push({ command });\n\t\t\t}\n\t\t});\n\t}\n};\n\nexport class SubmenuItemAction extends SubmenuAction {\n\n\tconstructor(\n\t\treadonly item: ISubmenuItem,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\tactions: readonly IAction[],\n\t) {\n\t\tsuper(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n\t}\n}\n\nexport interface IMenuItemHide {\n\treadonly isHidden: boolean;\n\treadonly hide: IAction;\n\treadonly toggle: IAction;\n}\n\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nexport class MenuItemAction implements IAction {\n\n\tstatic label(action: ICommandAction, options?: IMenuActionOptions): string {\n\t\treturn options?.renderShortTitle && action.shortTitle\n\t\t\t? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n\t\t\t: (typeof action.title === 'string' ? action.title : action.title.value);\n\t}\n\n\treadonly item: ICommandAction;\n\treadonly alt: MenuItemAction | undefined;\n\n\tprivate readonly _options: IMenuActionOptions | undefined;\n\n\treadonly id: string;\n\treadonly label: string;\n\treadonly tooltip: string;\n\treadonly class: string | undefined;\n\treadonly enabled: boolean;\n\treadonly checked?: boolean;\n\n\tconstructor(\n\t\titem: ICommandAction,\n\t\talt: ICommandAction | undefined,\n\t\toptions: IMenuActionOptions | undefined,\n\t\treadonly hideActions: IMenuItemHide | undefined,\n\t\treadonly menuKeybinding: IAction | undefined,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@ICommandService private _commandService: ICommandService\n\t) {\n\t\tthis.id = item.id;\n\t\tthis.label = MenuItemAction.label(item, options);\n\t\tthis.tooltip = (typeof item.tooltip === 'string' ? item.tooltip : item.tooltip?.value) ?? '';\n\t\tthis.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n\t\tthis.checked = undefined;\n\n\t\tlet icon: ThemeIcon | undefined;\n\n\t\tif (item.toggled) {\n\t\t\tconst toggled = ((item.toggled as { condition: ContextKeyExpression }).condition ? item.toggled : { condition: item.toggled }) as {\n\t\t\t\tcondition: ContextKeyExpression; icon?: Icon; tooltip?: string | ILocalizedString; title?: string | ILocalizedString;\n\t\t\t};\n\t\t\tthis.checked = contextKeyService.contextMatchesRules(toggled.condition);\n\t\t\tif (this.checked && toggled.tooltip) {\n\t\t\t\tthis.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n\t\t\t}\n\n\t\t\tif (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n\t\t\t\ticon = toggled.icon;\n\t\t\t}\n\n\t\t\tif (this.checked && toggled.title) {\n\t\t\t\tthis.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n\t\t\t}\n\t\t}\n\n\t\tif (!icon) {\n\t\t\ticon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n\t\t}\n\n\t\tthis.item = item;\n\t\tthis.alt = alt ? new MenuItemAction(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n\t\tthis._options = options;\n\t\tthis.class = icon && ThemeIcon.asClassName(icon);\n\n\t}\n\n\trun(...args: any[]): Promise<void> {\n\t\tlet runArgs: any[] = [];\n\n\t\tif (this._options?.arg) {\n\t\t\trunArgs = [...runArgs, this._options.arg];\n\t\t}\n\n\t\tif (this._options?.shouldForwardArgs) {\n\t\t\trunArgs = [...runArgs, ...args];\n\t\t}\n\n\t\treturn this._commandService.executeCommand(this.id, ...runArgs);\n\t}\n}\n\n//#region --- IAction2\n\ntype OneOrN<T> = T | T[];\n\ninterface IAction2CommonOptions extends ICommandAction {\n\t/**\n\t * One or many menu items.\n\t */\n\tmenu?: OneOrN<{ id: MenuId; precondition?: null } & Omit<IMenuItem, 'command'>>;\n\n\t/**\n\t * One keybinding.\n\t */\n\tkeybinding?: OneOrN<Omit<IKeybindingRule, 'id'>>;\n}\n\ninterface IBaseAction2Options extends IAction2CommonOptions {\n\n\t/**\n\t * This type is used when an action is not going to show up in the command palette.\n\t * In that case, it's able to use a string for the `title` and `category` properties.\n\t */\n\tf1?: false;\n}\n\nexport interface ICommandPaletteOptions extends IAction2CommonOptions {\n\n\t/**\n\t * The title of the command that will be displayed in the command palette after the category.\n\t *  This overrides {@link ICommandAction.title} to ensure a string isn't used so that the title\n\t *  includes the localized value and the original value for users using language packs.\n\t */\n\ttitle: ICommandActionTitle;\n\n\t/**\n\t * The category of the command that will be displayed in the command palette before the title suffixed.\n\t * with a colon This overrides {@link ICommandAction.title} to ensure a string isn't used so that\n\t * the title includes the localized value and the original value for users using language packs.\n\t */\n\tcategory?: keyof typeof Categories | ILocalizedString;\n\n\t/**\n\t * Shorthand to add this command to the command palette. Note: this is not the only way to declare that\n\t * a command should be in the command palette... however, enforcing ILocalizedString in the other scenarios\n\t * is much more challenging and this gets us most of the way there.\n\t */\n\tf1: true;\n}\n\nexport type IAction2Options = ICommandPaletteOptions | IBaseAction2Options;\n\nexport interface IAction2F1RequiredOptions {\n\ttitle: ICommandActionTitle;\n}\n\nexport abstract class Action2 {\n\tconstructor(readonly desc: Readonly<IAction2Options>) { }\n\tabstract run(accessor: ServicesAccessor, ...args: any[]): void;\n}\n\nexport function registerAction2(ctor: { new(): Action2 }): IDisposable {\n\tconst disposables: IDisposable[] = []; // not using `DisposableStore` to reduce startup perf cost\n\tconst action = new ctor();\n\n\tconst { f1, menu, keybinding, ...command } = action.desc;\n\n\tif (CommandsRegistry.getCommand(command.id)) {\n\t\tthrow new Error(`Cannot register two commands with the same id: ${command.id}`);\n\t}\n\n\t// command\n\tdisposables.push(CommandsRegistry.registerCommand({\n\t\tid: command.id,\n\t\thandler: (accessor, ...args) => action.run(accessor, ...args),\n\t\tmetadata: command.metadata ?? { description: action.desc.title }\n\t}));\n\n\t// menu\n\tif (Array.isArray(menu)) {\n\t\tfor (const item of menu) {\n\t\t\tdisposables.push(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n\t\t}\n\n\t} else if (menu) {\n\t\tdisposables.push(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n\t}\n\tif (f1) {\n\t\tdisposables.push(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n\t\tdisposables.push(MenuRegistry.addCommand(command));\n\t}\n\n\t// keybinding\n\tif (Array.isArray(keybinding)) {\n\t\tfor (const item of keybinding) {\n\t\t\tdisposables.push(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t\t...item,\n\t\t\t\tid: command.id,\n\t\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n\t\t\t}));\n\t\t}\n\t} else if (keybinding) {\n\t\tdisposables.push(KeybindingsRegistry.registerKeybindingRule({\n\t\t\t...keybinding,\n\t\t\tid: command.id,\n\t\t\twhen: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n\t\t}));\n\t}\n\n\treturn {\n\t\tdispose() {\n\t\t\tdispose(disposables);\n\t\t}\n\t};\n}\n//#endregion\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/browser/vs/platform/actions/browser/menuEntryActionViewItem.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { asCSSUrl } from '../../../base/browser/cssValue.js';\nimport { $, addDisposableListener, append, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem, IDropdownMenuActionViewItemOptions } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { IHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { ActionRunner, IAction, IRunEvent, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { ResolvedKeybinding } from '../../../base/common/keybindings.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { combinedDisposable, DisposableStore, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { localize } from '../../../nls.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { ICommandAction, isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../storage/common/storage.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { hasNativeContextMenu } from '../../window/common/window.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport './menuEntryActionViewItem.css';\n\nexport interface PrimaryAndSecondaryActions {\n\tprimary: IAction[];\n\tsecondary: IAction[];\n}\n\nexport function getFlatContextMenuActions(\n\tgroups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>,\n\tprimaryGroup?: string\n): IAction[] {\n\tconst target: IAction[] = [];\n\tgetContextMenuActionsImpl(groups, target, primaryGroup);\n\treturn target;\n}\n\nfunction getContextMenuActionsImpl(\n\tgroups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>,\n\ttarget: IAction[] | PrimaryAndSecondaryActions,\n\tprimaryGroup?: string\n) {\n\tconst modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n\tconst useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n\tfillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\n\n\nexport function getActionBarActions(\n\tgroups: [string, Array<MenuItemAction | SubmenuItemAction>][],\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean\n): PrimaryAndSecondaryActions {\n\tconst target: PrimaryAndSecondaryActions = { primary: [], secondary: [] };\n\tfillInActionBarActions(groups, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n\treturn target;\n}\n\nexport function getFlatActionBarActions(\n\tgroups: [string, Array<MenuItemAction | SubmenuItemAction>][],\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean\n): IAction[] {\n\tconst target: IAction[] = [];\n\tfillInActionBarActions(groups, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n\treturn target;\n}\n\nexport function fillInActionBarActions(\n\tgroups: [string, Array<MenuItemAction | SubmenuItemAction>][],\n\ttarget: IAction[] | PrimaryAndSecondaryActions,\n\tprimaryGroup?: string | ((actionGroup: string) => boolean),\n\tshouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean,\n\tuseSeparatorsInPrimaryActions?: boolean\n): void {\n\tconst isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup: string) => actionGroup === primaryGroup : primaryGroup;\n\n\t// Action bars handle alternative actions on their own so the alternative actions should be ignored\n\tfillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\n\nfunction fillInActions(\n\tgroups: ReadonlyArray<[string, ReadonlyArray<MenuItemAction | SubmenuItemAction>]>,\n\ttarget: IAction[] | PrimaryAndSecondaryActions,\n\tuseAlternativeActions: boolean,\n\tisPrimaryAction: (actionGroup: string) => boolean = actionGroup => actionGroup === 'navigation',\n\tshouldInlineSubmenu: (action: SubmenuAction, group: string, groupSize: number) => boolean = () => false,\n\tuseSeparatorsInPrimaryActions: boolean = false\n): void {\n\n\tlet primaryBucket: IAction[];\n\tlet secondaryBucket: IAction[];\n\tif (Array.isArray(target)) {\n\t\tprimaryBucket = target;\n\t\tsecondaryBucket = target;\n\t} else {\n\t\tprimaryBucket = target.primary;\n\t\tsecondaryBucket = target.secondary;\n\t}\n\n\tconst submenuInfo = new Set<{ group: string; action: SubmenuAction; index: number }>();\n\n\tfor (const [group, actions] of groups) {\n\n\t\tlet target: IAction[];\n\t\tif (isPrimaryAction(group)) {\n\t\t\ttarget = primaryBucket;\n\t\t\tif (target.length > 0 && useSeparatorsInPrimaryActions) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t} else {\n\t\t\ttarget = secondaryBucket;\n\t\t\tif (target.length > 0) {\n\t\t\t\ttarget.push(new Separator());\n\t\t\t}\n\t\t}\n\n\t\tfor (let action of actions) {\n\t\t\tif (useAlternativeActions) {\n\t\t\t\taction = action instanceof MenuItemAction && action.alt ? action.alt : action;\n\t\t\t}\n\t\t\tconst newLen = target.push(action);\n\t\t\t// keep submenu info for later inlining\n\t\t\tif (action instanceof SubmenuAction) {\n\t\t\t\tsubmenuInfo.add({ group, action, index: newLen - 1 });\n\t\t\t}\n\t\t}\n\t}\n\n\t// ask the outside if submenu should be inlined or not. only ask when\n\t// there would be enough space\n\tfor (const { group, action, index } of submenuInfo) {\n\t\tconst target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n\n\t\t// inlining submenus with length 0 or 1 is easy,\n\t\t// larger submenus need to be checked with the overall limit\n\t\tconst submenuActions = action.actions;\n\t\tif (shouldInlineSubmenu(action, group, target.length)) {\n\t\t\ttarget.splice(index, 1, ...submenuActions);\n\t\t}\n\t}\n}\n\nexport interface IMenuEntryActionViewItemOptions {\n\treadonly draggable?: boolean;\n\treadonly keybinding?: string | null;\n\treadonly hoverDelegate?: IHoverDelegate;\n\treadonly keybindingNotRenderedWithLabel?: boolean;\n}\n\nexport class MenuEntryActionViewItem<T extends IMenuEntryActionViewItemOptions = IMenuEntryActionViewItemOptions> extends ActionViewItem {\n\n\tprivate _wantsAltCommand: boolean = false;\n\tprivate readonly _itemClassDispose = this._register(new MutableDisposable());\n\tprivate readonly _altKey: ModifierKeyEmitter;\n\n\tconstructor(\n\t\taction: MenuItemAction,\n\t\tprotected readonly _options: T | undefined,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService protected readonly _notificationService: INotificationService,\n\t\t@IContextKeyService protected readonly _contextKeyService: IContextKeyService,\n\t\t@IThemeService protected readonly _themeService: IThemeService,\n\t\t@IContextMenuService protected readonly _contextMenuService: IContextMenuService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: _options?.draggable, keybinding: _options?.keybinding, hoverDelegate: _options?.hoverDelegate, keybindingNotRenderedWithLabel: _options?.keybindingNotRenderedWithLabel });\n\t\tthis._altKey = ModifierKeyEmitter.getInstance();\n\t}\n\n\tprotected get _menuItemAction(): MenuItemAction {\n\t\treturn <MenuItemAction>this._action;\n\t}\n\n\tprotected get _commandAction(): MenuItemAction {\n\t\treturn this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n\t}\n\n\toverride async onClick(event: MouseEvent): Promise<void> {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\ttry {\n\t\t\tawait this.actionRunner.run(this._commandAction, this._context);\n\t\t} catch (err) {\n\t\t\tthis._notificationService.error(err);\n\t\t}\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.classList.add('menu-entry');\n\n\t\tif (this.options.icon) {\n\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t}\n\n\t\tif (this._menuItemAction.alt) {\n\t\t\tlet isMouseOver = false;\n\n\t\t\tconst updateAltState = () => {\n\t\t\t\tconst wantsAltCommand = !!this._menuItemAction.alt?.enabled &&\n\t\t\t\t\t(!this._accessibilityService.isMotionReduced() || isMouseOver) && (\n\t\t\t\t\t\tthis._altKey.keyStatus.altKey ||\n\t\t\t\t\t\t(this._altKey.keyStatus.shiftKey && isMouseOver)\n\t\t\t\t\t);\n\n\t\t\t\tif (wantsAltCommand !== this._wantsAltCommand) {\n\t\t\t\t\tthis._wantsAltCommand = wantsAltCommand;\n\t\t\t\t\tthis.updateLabel();\n\t\t\t\t\tthis.updateTooltip();\n\t\t\t\t\tthis.updateClass();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._register(this._altKey.event(updateAltState));\n\n\t\t\tthis._register(addDisposableListener(container, 'mouseleave', _ => {\n\t\t\t\tisMouseOver = false;\n\t\t\t\tupdateAltState();\n\t\t\t}));\n\n\t\t\tthis._register(addDisposableListener(container, 'mouseenter', _ => {\n\t\t\t\tisMouseOver = true;\n\t\t\t\tupdateAltState();\n\t\t\t}));\n\n\t\t\tupdateAltState();\n\t\t}\n\t}\n\n\tprotected override updateLabel(): void {\n\t\tif (this.options.label && this.label) {\n\t\t\tthis.label.textContent = this._commandAction.label;\n\t\t}\n\t}\n\n\tprotected override getTooltip() {\n\t\tconst keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n\t\tconst keybindingLabel = keybinding && keybinding.getLabel();\n\n\t\tconst tooltip = this._commandAction.tooltip || this._commandAction.label;\n\t\tlet title = keybindingLabel\n\t\t\t? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n\t\t\t: tooltip;\n\t\tif (!this._wantsAltCommand && this._menuItemAction.alt?.enabled) {\n\t\t\tconst altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n\t\t\tconst altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n\t\t\tconst altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n\t\t\tconst altTitleSection = altKeybindingLabel\n\t\t\t\t? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n\t\t\t\t: altTooltip;\n\n\t\t\ttitle = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n\t\t}\n\t\treturn title;\n\t}\n\n\tprotected override updateClass(): void {\n\t\tif (this.options.icon) {\n\t\t\tif (this._commandAction !== this._menuItemAction) {\n\t\t\t\tif (this._menuItemAction.alt) {\n\t\t\t\t\tthis._updateItemClass(this._menuItemAction.alt.item);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._updateItemClass(this._menuItemAction.item);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _updateItemClass(item: ICommandAction): void {\n\t\tthis._itemClassDispose.value = undefined;\n\n\t\tconst { element, label } = this;\n\t\tif (!element || !label) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n\n\t\tif (!icon) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (ThemeIcon.isThemeIcon(icon)) {\n\t\t\t// theme icons\n\t\t\tconst iconClasses = ThemeIcon.asClassNameArray(icon);\n\t\t\tlabel.classList.add(...iconClasses);\n\t\t\tthis._itemClassDispose.value = toDisposable(() => {\n\t\t\t\tlabel.classList.remove(...iconClasses);\n\t\t\t});\n\n\t\t} else {\n\t\t\t// icon path/url\n\t\t\tlabel.style.backgroundImage = (\n\t\t\t\tisDark(this._themeService.getColorTheme().type)\n\t\t\t\t\t? asCSSUrl(icon.dark)\n\t\t\t\t\t: asCSSUrl(icon.light)\n\t\t\t);\n\t\t\tlabel.classList.add('icon');\n\t\t\tthis._itemClassDispose.value = combinedDisposable(\n\t\t\t\ttoDisposable(() => {\n\t\t\t\t\tlabel.style.backgroundImage = '';\n\t\t\t\t\tlabel.classList.remove('icon');\n\t\t\t\t}),\n\t\t\t\tthis._themeService.onDidColorThemeChange(() => {\n\t\t\t\t\t// refresh when the theme changes in case we go between dark <-> light\n\t\t\t\t\tthis.updateClass();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport interface ITextOnlyMenuEntryActionViewItemOptions extends IMenuEntryActionViewItemOptions {\n\treadonly conversational?: boolean;\n\treadonly useComma?: boolean;\n}\n\nexport class TextOnlyMenuEntryActionViewItem extends MenuEntryActionViewItem<ITextOnlyMenuEntryActionViewItemOptions> {\n\n\toverride render(container: HTMLElement): void {\n\t\tthis.options.label = true;\n\t\tthis.options.icon = false;\n\t\tsuper.render(container);\n\t\tcontainer.classList.add('text-only');\n\t\tcontainer.classList.toggle('use-comma', this._options?.useComma ?? false);\n\t}\n\n\tprotected override updateLabel() {\n\t\tconst kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n\t\tif (!kb) {\n\t\t\treturn super.updateLabel();\n\t\t}\n\t\tif (this.label) {\n\t\t\tconst kb2 = TextOnlyMenuEntryActionViewItem._symbolPrintEnter(kb);\n\n\t\t\tif (this._options?.conversational) {\n\t\t\t\tthis.label.textContent = localize({ key: 'content2', comment: ['A label with keybindg like \"ESC to dismiss\"'] }, '{1} to {0}', this._action.label, kb2);\n\n\t\t\t} else {\n\t\t\t\tthis.label.textContent = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', this._action.label, kb2);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static _symbolPrintEnter(kb: ResolvedKeybinding) {\n\t\treturn kb.getLabel()\n\t\t\t?.replace(/\\benter\\b/gi, '\\u23CE')\n\t\t\t.replace(/\\bEscape\\b/gi, 'Esc');\n\t}\n}\n\nexport class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\toptions: IDropdownMenuActionViewItemOptions | undefined,\n\t\t@IKeybindingService protected _keybindingService: IKeybindingService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IThemeService protected _themeService: IThemeService\n\t) {\n\t\tconst dropdownOptions: IDropdownMenuActionViewItemOptions = {\n\t\t\t...options,\n\t\t\tmenuAsChild: options?.menuAsChild ?? false,\n\t\t\tclassNames: options?.classNames ?? (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n\t\t\tkeybindingProvider: options?.keybindingProvider ?? (action => _keybindingService.lookupKeybinding(action.id))\n\t\t};\n\n\t\tsuper(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tassertType(this.element);\n\n\t\tcontainer.classList.add('menu-entry');\n\t\tconst action = <SubmenuItemAction>this._action;\n\t\tconst { icon } = action.item;\n\t\tif (icon && !ThemeIcon.isThemeIcon(icon)) {\n\t\t\tthis.element.classList.add('icon');\n\t\t\tconst setBackgroundImage = () => {\n\t\t\t\tif (this.element) {\n\t\t\t\t\tthis.element.style.backgroundImage = (\n\t\t\t\t\t\tisDark(this._themeService.getColorTheme().type)\n\t\t\t\t\t\t\t? asCSSUrl(icon.dark)\n\t\t\t\t\t\t\t: asCSSUrl(icon.light)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetBackgroundImage();\n\t\t\tthis._register(this._themeService.onDidColorThemeChange(() => {\n\t\t\t\t// refresh when the theme changes in case we go between dark <-> light\n\t\t\t\tsetBackgroundImage();\n\t\t\t}));\n\t\t}\n\t}\n}\n\nexport interface IDropdownWithDefaultActionViewItemOptions extends IDropdownMenuActionViewItemOptions {\n\trenderKeybindingWithDefaultActionLabel?: boolean;\n\tpersistLastActionId?: boolean;\n}\n\nexport class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n\tprivate readonly _options: IDropdownWithDefaultActionViewItemOptions | undefined;\n\tprivate _defaultAction: ActionViewItem;\n\tprivate readonly _defaultActionDisposables = this._register(new DisposableStore());\n\tprivate readonly _dropdown: DropdownMenuActionViewItem;\n\tprivate _container: HTMLElement | null = null;\n\tprivate readonly _storageKey: string;\n\n\tconstructor(\n\t\tsubmenuAction: SubmenuItemAction,\n\t\toptions: IDropdownWithDefaultActionViewItemOptions | undefined,\n\t\t@IKeybindingService protected readonly _keybindingService: IKeybindingService,\n\t\t@INotificationService protected _notificationService: INotificationService,\n\t\t@IContextMenuService protected _contextMenuService: IContextMenuService,\n\t\t@IMenuService protected _menuService: IMenuService,\n\t\t@IInstantiationService protected _instaService: IInstantiationService,\n\t\t@IStorageService protected _storageService: IStorageService\n\t) {\n\t\tsuper(null, submenuAction);\n\t\tthis._options = options;\n\t\tthis._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n\n\t\t// determine default action\n\t\tlet defaultAction: IAction | undefined;\n\t\tconst defaultActionId = options?.persistLastActionId ? _storageService.get(this._storageKey, StorageScope.WORKSPACE) : undefined;\n\t\tif (defaultActionId) {\n\t\t\tdefaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n\t\t}\n\t\tif (!defaultAction) {\n\t\t\tdefaultAction = submenuAction.actions[0];\n\t\t}\n\n\t\tthis._defaultAction = this._defaultActionDisposables.add(this._instaService.createInstance(MenuEntryActionViewItem, <MenuItemAction>defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) }));\n\n\t\tconst dropdownOptions: IDropdownMenuActionViewItemOptions = {\n\t\t\tkeybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n\t\t\t...options,\n\t\t\tmenuAsChild: options?.menuAsChild ?? true,\n\t\t\tclassNames: options?.classNames ?? ['codicon', 'codicon-chevron-down'],\n\t\t\tactionRunner: options?.actionRunner ?? this._register(new ActionRunner()),\n\t\t};\n\n\t\tthis._dropdown = this._register(new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions));\n\t\tthis._register(this._dropdown.actionRunner.onDidRun((e: IRunEvent) => {\n\t\t\tif (e.action instanceof MenuItemAction) {\n\t\t\t\tthis.update(e.action);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate update(lastAction: MenuItemAction): void {\n\t\tif (this._options?.persistLastActionId) {\n\t\t\tthis._storageService.store(this._storageKey, lastAction.id, StorageScope.WORKSPACE, StorageTarget.MACHINE);\n\t\t}\n\n\t\tthis._defaultActionDisposables.clear();\n\t\tthis._defaultAction = this._defaultActionDisposables.add(this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) }));\n\t\tthis._defaultAction.actionRunner = this._defaultActionDisposables.add(new class extends ActionRunner {\n\t\t\tprotected override async runAction(action: IAction, context?: unknown): Promise<void> {\n\t\t\t\tawait action.run(undefined);\n\t\t\t}\n\t\t}());\n\n\t\tif (this._container) {\n\t\t\tthis._defaultAction.render(prepend(this._container, $('.action-container')));\n\t\t}\n\t}\n\n\tprivate _getDefaultActionKeybindingLabel(defaultAction: IAction) {\n\t\tlet defaultActionKeybinding: string | undefined;\n\t\tif (this._options?.renderKeybindingWithDefaultActionLabel) {\n\t\t\tconst kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n\t\t\tif (kb) {\n\t\t\t\tdefaultActionKeybinding = `(${kb.getLabel()})`;\n\t\t\t}\n\t\t}\n\t\treturn defaultActionKeybinding;\n\t}\n\n\toverride setActionContext(newContext: unknown): void {\n\t\tsuper.setActionContext(newContext);\n\t\tthis._defaultAction.setActionContext(newContext);\n\t\tthis._dropdown.setActionContext(newContext);\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tthis._container = container;\n\t\tsuper.render(this._container);\n\n\t\tthis._container.classList.add('monaco-dropdown-with-default');\n\n\t\tconst primaryContainer = $('.action-container');\n\t\tthis._defaultAction.render(append(this._container, primaryContainer));\n\t\tthis._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.RightArrow)) {\n\t\t\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\t\t\tthis._dropdown.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\n\t\tconst dropdownContainer = $('.dropdown-action-container');\n\t\tthis._dropdown.render(append(this._container, dropdownContainer));\n\t\tthis._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e: KeyboardEvent) => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tif (event.equals(KeyCode.LeftArrow)) {\n\t\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t\t\tthis._dropdown.setFocusable(false);\n\t\t\t\tthis._defaultAction.element?.focus();\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}));\n\t}\n\n\toverride focus(fromRight?: boolean): void {\n\t\tif (fromRight) {\n\t\t\tthis._dropdown.focus();\n\t\t} else {\n\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t\tthis._defaultAction.element!.focus();\n\t\t}\n\t}\n\n\toverride blur(): void {\n\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\tthis._dropdown.blur();\n\t\tthis._container!.blur();\n\t}\n\n\toverride setFocusable(focusable: boolean): void {\n\t\tif (focusable) {\n\t\t\tthis._defaultAction.element!.tabIndex = 0;\n\t\t} else {\n\t\t\tthis._defaultAction.element!.tabIndex = -1;\n\t\t\tthis._dropdown.setFocusable(false);\n\t\t}\n\t}\n}\n\nclass SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n\n\tconstructor(\n\t\taction: SubmenuItemAction,\n\t\t@IContextViewService contextViewService: IContextViewService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(null, action, action.actions.map(a => ({\n\t\t\ttext: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n\t\t\tisDisabled: !a.enabled,\n\t\t})), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true, useCustomDrawn: !hasNativeContextMenu(configurationService) });\n\t\tthis.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n\t}\n\n\toverride render(container: HTMLElement): void {\n\t\tsuper.render(container);\n\t\tcontainer.style.borderColor = asCssVariable(selectBorder);\n\t}\n\n\tprotected override runAction(option: string, index: number): void {\n\t\tconst action = (this.action as SubmenuItemAction).actions[index];\n\t\tif (action) {\n\t\t\tthis.actionRunner.run(action);\n\t\t}\n\t}\n\n}\n\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService: IInstantiationService, action: IAction, options: IDropdownMenuActionViewItemOptions | IMenuEntryActionViewItemOptions | undefined): undefined | MenuEntryActionViewItem | SubmenuEntryActionViewItem | BaseActionViewItem {\n\tif (action instanceof MenuItemAction) {\n\t\treturn instaService.createInstance(MenuEntryActionViewItem, action, options);\n\t} else if (action instanceof SubmenuItemAction) {\n\t\tif (action.item.isSelection) {\n\t\t\treturn instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n\t\t} else {\n\t\t\tif (action.item.rememberDefaultAction) {\n\t\t\t\treturn instaService.createInstance(DropdownWithDefaultActionViewItem, action, { ...options, persistLastActionId: true });\n\t\t\t} else {\n\t\t\t\treturn instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn undefined;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1517, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/common/vs/platform/actions/common/menuService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter, Event } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IMenu, IMenuActionOptions, IMenuChangeEvent, IMenuCreateOptions, IMenuItem, IMenuItemHide, IMenuService, isIMenuItem, isISubmenuItem, ISubmenuItem, MenuId, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandAction, ILocalizedString } from '../../action/common/action.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpression, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IAction, Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\n\nexport class MenuService implements IMenuService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _hiddenStates: PersistedMenuHideState;\n\n\tconstructor(\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tthis._hiddenStates = new PersistedMenuHideState(storageService);\n\t}\n\n\tcreateMenu(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuCreateOptions): IMenu {\n\t\treturn new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n\t}\n\n\tgetMenuActions(id: MenuId, contextKeyService: IContextKeyService, options?: IMenuActionOptions): [string, Array<MenuItemAction | SubmenuItemAction>][] {\n\t\tconst menu = new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n\t\tconst actions = menu.getActions(options);\n\t\tmenu.dispose();\n\t\treturn actions;\n\t}\n\n\tresetHiddenStates(ids?: MenuId[]): void {\n\t\tthis._hiddenStates.reset(ids);\n\t}\n}\n\nclass PersistedMenuHideState {\n\n\tprivate static readonly _key = 'menu.hiddenCommands';\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _onDidChange = new Emitter<void>();\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tprivate _ignoreChangeEvent: boolean = false;\n\tprivate _data: Record<string, string[] | undefined>;\n\n\tprivate _hiddenByDefaultCache = new Map<string, boolean>();\n\n\tconstructor(@IStorageService private readonly _storageService: IStorageService) {\n\t\ttry {\n\t\t\tconst raw = _storageService.get(PersistedMenuHideState._key, StorageScope.PROFILE, '{}');\n\t\t\tthis._data = JSON.parse(raw);\n\t\t} catch (err) {\n\t\t\tthis._data = Object.create(null);\n\t\t}\n\n\t\tthis._disposables.add(_storageService.onDidChangeValue(StorageScope.PROFILE, PersistedMenuHideState._key, this._disposables)(() => {\n\t\t\tif (!this._ignoreChangeEvent) {\n\t\t\t\ttry {\n\t\t\t\t\tconst raw = _storageService.get(PersistedMenuHideState._key, StorageScope.PROFILE, '{}');\n\t\t\t\t\tthis._data = JSON.parse(raw);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log('FAILED to read storage after UPDATE', err);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onDidChange.fire();\n\t\t}));\n\t}\n\n\tdispose() {\n\t\tthis._onDidChange.dispose();\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _isHiddenByDefault(menu: MenuId, commandId: string) {\n\t\treturn this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`) ?? false;\n\t}\n\n\tsetDefaultState(menu: MenuId, commandId: string, hidden: boolean): void {\n\t\tthis._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n\t}\n\n\tisHidden(menu: MenuId, commandId: string): boolean {\n\t\tconst hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n\t\tconst state = this._data[menu.id]?.includes(commandId) ?? false;\n\t\treturn hiddenByDefault ? !state : state;\n\t}\n\n\tupdateHidden(menu: MenuId, commandId: string, hidden: boolean): void {\n\t\tconst hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n\t\tif (hiddenByDefault) {\n\t\t\thidden = !hidden;\n\t\t}\n\t\tconst entries = this._data[menu.id];\n\t\tif (!hidden) {\n\t\t\t// remove and cleanup\n\t\t\tif (entries) {\n\t\t\t\tconst idx = entries.indexOf(commandId);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tremoveFastWithoutKeepingOrder(entries, idx);\n\t\t\t\t}\n\t\t\t\tif (entries.length === 0) {\n\t\t\t\t\tdelete this._data[menu.id];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// add unless already added\n\t\t\tif (!entries) {\n\t\t\t\tthis._data[menu.id] = [commandId];\n\t\t\t} else {\n\t\t\t\tconst idx = entries.indexOf(commandId);\n\t\t\t\tif (idx < 0) {\n\t\t\t\t\tentries.push(commandId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._persist();\n\t}\n\n\treset(menus?: MenuId[]): void {\n\t\tif (menus === undefined) {\n\t\t\t// reset all\n\t\t\tthis._data = Object.create(null);\n\t\t\tthis._persist();\n\t\t} else {\n\t\t\t// reset only for a specific menu\n\t\t\tfor (const { id } of menus) {\n\t\t\t\tif (this._data[id]) {\n\t\t\t\t\tdelete this._data[id];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._persist();\n\t\t}\n\t}\n\n\tprivate _persist(): void {\n\t\ttry {\n\t\t\tthis._ignoreChangeEvent = true;\n\t\t\tconst raw = JSON.stringify(this._data);\n\t\t\tthis._storageService.store(PersistedMenuHideState._key, raw, StorageScope.PROFILE, StorageTarget.USER);\n\t\t} finally {\n\t\t\tthis._ignoreChangeEvent = false;\n\t\t}\n\t}\n}\n\ntype MenuItemGroup = [string, Array<IMenuItem | ISubmenuItem>];\n\nclass MenuInfoSnapshot {\n\tprotected _menuGroups: MenuItemGroup[] = [];\n\tprivate _allMenuIds: Set<MenuId> = new Set();\n\tprivate _structureContextKeys: Set<string> = new Set();\n\tprivate _preconditionContextKeys: Set<string> = new Set();\n\tprivate _toggledContextKeys: Set<string> = new Set();\n\n\tconstructor(\n\t\tprotected readonly _id: MenuId,\n\t\tprotected readonly _collectContextKeysForSubmenus: boolean,\n\t) {\n\t\tthis.refresh();\n\t}\n\n\tget allMenuIds(): ReadonlySet<MenuId> {\n\t\treturn this._allMenuIds;\n\t}\n\n\tget structureContextKeys(): ReadonlySet<string> {\n\t\treturn this._structureContextKeys;\n\t}\n\n\tget preconditionContextKeys(): ReadonlySet<string> {\n\t\treturn this._preconditionContextKeys;\n\t}\n\n\tget toggledContextKeys(): ReadonlySet<string> {\n\t\treturn this._toggledContextKeys;\n\t}\n\n\trefresh(): void {\n\n\t\t// reset\n\t\tthis._menuGroups.length = 0;\n\t\tthis._allMenuIds.clear();\n\t\tthis._structureContextKeys.clear();\n\t\tthis._preconditionContextKeys.clear();\n\t\tthis._toggledContextKeys.clear();\n\n\t\tconst menuItems = this._sort(MenuRegistry.getMenuItems(this._id));\n\t\tlet group: MenuItemGroup | undefined;\n\n\t\tfor (const item of menuItems) {\n\t\t\t// group by groupId\n\t\t\tconst groupName = item.group || '';\n\t\t\tif (!group || group[0] !== groupName) {\n\t\t\t\tgroup = [groupName, []];\n\t\t\t\tthis._menuGroups.push(group);\n\t\t\t}\n\t\t\tgroup[1].push(item);\n\n\t\t\t// keep keys and submenu ids for eventing\n\t\t\tthis._collectContextKeysAndSubmenuIds(item);\n\t\t}\n\t\tthis._allMenuIds.add(this._id);\n\t}\n\n\tprotected _sort(menuItems: (IMenuItem | ISubmenuItem)[]) {\n\t\t// no sorting needed in snapshot\n\t\treturn menuItems;\n\t}\n\n\tprivate _collectContextKeysAndSubmenuIds(item: IMenuItem | ISubmenuItem): void {\n\n\t\tMenuInfoSnapshot._fillInKbExprKeys(item.when, this._structureContextKeys);\n\n\t\tif (isIMenuItem(item)) {\n\t\t\t// keep precondition keys for event if applicable\n\t\t\tif (item.command.precondition) {\n\t\t\t\tMenuInfoSnapshot._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n\t\t\t}\n\t\t\t// keep toggled keys for event if applicable\n\t\t\tif (item.command.toggled) {\n\t\t\t\tconst toggledExpression: ContextKeyExpression = (item.command.toggled as { condition: ContextKeyExpression }).condition || item.command.toggled;\n\t\t\t\tMenuInfoSnapshot._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n\t\t\t}\n\n\t\t} else if (this._collectContextKeysForSubmenus) {\n\t\t\t// recursively collect context keys from submenus so that this\n\t\t\t// menu fires events when context key changes affect submenus\n\t\t\tMenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeysAndSubmenuIds, this);\n\n\t\t\tthis._allMenuIds.add(item.submenu);\n\t\t}\n\t}\n\n\tprivate static _fillInKbExprKeys(exp: ContextKeyExpression | undefined, set: Set<string>): void {\n\t\tif (exp) {\n\t\t\tfor (const key of exp.keys()) {\n\t\t\t\tset.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nclass MenuInfo extends MenuInfoSnapshot {\n\n\tconstructor(\n\t\t_id: MenuId,\n\t\tprivate readonly _hiddenStates: PersistedMenuHideState,\n\t\t_collectContextKeysForSubmenus: boolean,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService\n\t) {\n\t\tsuper(_id, _collectContextKeysForSubmenus);\n\t\tthis.refresh();\n\t}\n\n\tcreateActionGroups(options: IMenuActionOptions | undefined): [string, Array<MenuItemAction | SubmenuItemAction>][] {\n\t\tconst result: [string, Array<MenuItemAction | SubmenuItemAction>][] = [];\n\n\t\tfor (const group of this._menuGroups) {\n\t\t\tconst [id, items] = group;\n\n\t\t\tlet activeActions: Array<MenuItemAction | SubmenuItemAction> | undefined;\n\t\t\tfor (const item of items) {\n\t\t\t\tif (this._contextKeyService.contextMatchesRules(item.when)) {\n\t\t\t\t\tconst isMenuItem = isIMenuItem(item);\n\t\t\t\t\tif (isMenuItem) {\n\t\t\t\t\t\tthis._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n\t\t\t\t\tif (isMenuItem) {\n\t\t\t\t\t\t// MenuItemAction\n\t\t\t\t\t\tconst menuKeybinding = createConfigureKeybindingAction(this._commandService, this._keybindingService, item.command.id, item.when);\n\t\t\t\t\t\t(activeActions ??= []).push(new MenuItemAction(item.command, item.alt, options, menuHide, menuKeybinding, this._contextKeyService, this._commandService));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// SubmenuItemAction\n\t\t\t\t\t\tconst groups = new MenuInfo(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._keybindingService, this._contextKeyService).createActionGroups(options);\n\t\t\t\t\t\tconst submenuActions = Separator.join(...groups.map(g => g[1]));\n\t\t\t\t\t\tif (submenuActions.length > 0) {\n\t\t\t\t\t\t\t(activeActions ??= []).push(new SubmenuItemAction(item, menuHide, submenuActions));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (activeActions && activeActions.length > 0) {\n\t\t\t\tresult.push([id, activeActions]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprotected override _sort(menuItems: (IMenuItem | ISubmenuItem)[]): (IMenuItem | ISubmenuItem)[] {\n\t\treturn menuItems.sort(MenuInfo._compareMenuItems);\n\t}\n\n\tprivate static _compareMenuItems(a: IMenuItem | ISubmenuItem, b: IMenuItem | ISubmenuItem): number {\n\n\t\tconst aGroup = a.group;\n\t\tconst bGroup = b.group;\n\n\t\tif (aGroup !== bGroup) {\n\n\t\t\t// Falsy groups come last\n\t\t\tif (!aGroup) {\n\t\t\t\treturn 1;\n\t\t\t} else if (!bGroup) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// 'navigation' group comes first\n\t\t\tif (aGroup === 'navigation') {\n\t\t\t\treturn -1;\n\t\t\t} else if (bGroup === 'navigation') {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// lexical sort for groups\n\t\t\tconst value = aGroup.localeCompare(bGroup);\n\t\t\tif (value !== 0) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\n\t\t// sort on priority - default is 0\n\t\tconst aPrio = a.order || 0;\n\t\tconst bPrio = b.order || 0;\n\t\tif (aPrio < bPrio) {\n\t\t\treturn -1;\n\t\t} else if (aPrio > bPrio) {\n\t\t\treturn 1;\n\t\t}\n\n\t\t// sort on titles\n\t\treturn MenuInfo._compareTitles(\n\t\t\tisIMenuItem(a) ? a.command.title : a.title,\n\t\t\tisIMenuItem(b) ? b.command.title : b.title\n\t\t);\n\t}\n\n\tprivate static _compareTitles(a: string | ILocalizedString, b: string | ILocalizedString) {\n\t\tconst aStr = typeof a === 'string' ? a : a.original;\n\t\tconst bStr = typeof b === 'string' ? b : b.original;\n\t\treturn aStr.localeCompare(bStr);\n\t}\n}\n\nclass MenuImpl implements IMenu {\n\n\tprivate readonly _menuInfo: MenuInfo;\n\tprivate readonly _disposables = new DisposableStore();\n\n\tprivate readonly _onDidChange: Emitter<IMenuChangeEvent>;\n\treadonly onDidChange: Event<IMenuChangeEvent>;\n\n\tconstructor(\n\t\tid: MenuId,\n\t\thiddenStates: PersistedMenuHideState,\n\t\toptions: Required<IMenuCreateOptions>,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService\n\t) {\n\t\tthis._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, keybindingService, contextKeyService);\n\n\t\t// Rebuild this menu whenever the menu registry reports an event for this MenuId.\n\t\t// This usually happen while code and extensions are loaded and affects the over\n\t\t// structure of the menu\n\t\tconst rebuildMenuSoon = new RunOnceScheduler(() => {\n\t\t\tthis._menuInfo.refresh();\n\t\t\tthis._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n\t\t}, options.eventDebounceDelay);\n\t\tthis._disposables.add(rebuildMenuSoon);\n\t\tthis._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n\t\t\tfor (const id of this._menuInfo.allMenuIds) {\n\t\t\t\tif (e.has(id)) {\n\t\t\t\t\trebuildMenuSoon.schedule();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// When context keys or storage state changes we need to check if the menu also has changed. However,\n\t\t// we only do that when someone listens on this menu because (1) these events are\n\t\t// firing often and (2) menu are often leaked\n\t\tconst lazyListener = this._disposables.add(new DisposableStore());\n\n\t\tconst merge = (events: IMenuChangeEvent[]): IMenuChangeEvent => {\n\n\t\t\tlet isStructuralChange = false;\n\t\t\tlet isEnablementChange = false;\n\t\t\tlet isToggleChange = false;\n\n\t\t\tfor (const item of events) {\n\t\t\t\tisStructuralChange = isStructuralChange || item.isStructuralChange;\n\t\t\t\tisEnablementChange = isEnablementChange || item.isEnablementChange;\n\t\t\t\tisToggleChange = isToggleChange || item.isToggleChange;\n\t\t\t\tif (isStructuralChange && isEnablementChange && isToggleChange) {\n\t\t\t\t\t// everything is TRUE, no need to continue iterating\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n\t\t};\n\n\t\tconst startLazyListener = () => {\n\n\t\t\tlazyListener.add(contextKeyService.onDidChangeContext(e => {\n\t\t\t\tconst isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n\t\t\t\tconst isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n\t\t\t\tconst isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n\t\t\t\tif (isStructuralChange || isEnablementChange || isToggleChange) {\n\t\t\t\t\tthis._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n\t\t\t\t}\n\t\t\t}));\n\t\t\tlazyListener.add(hiddenStates.onDidChange(e => {\n\t\t\t\tthis._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n\t\t\t}));\n\t\t};\n\n\t\tthis._onDidChange = new DebounceEmitter({\n\t\t\t// start/stop context key listener\n\t\t\tonWillAddFirstListener: startLazyListener,\n\t\t\tonDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n\t\t\tdelay: options.eventDebounceDelay,\n\t\t\tmerge\n\t\t});\n\t\tthis.onDidChange = this._onDidChange.event;\n\t}\n\n\tgetActions(options?: IMenuActionOptions | undefined): [string, (MenuItemAction | SubmenuItemAction)[]][] {\n\t\treturn this._menuInfo.createActionGroups(options);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t\tthis._onDidChange.dispose();\n\t}\n}\n\nfunction createMenuHide(menu: MenuId, command: ICommandAction | ISubmenuItem, states: PersistedMenuHideState): IMenuItemHide {\n\n\tconst id = isISubmenuItem(command) ? command.submenu.id : command.id;\n\tconst title = typeof command.title === 'string' ? command.title : command.title.value;\n\n\tconst hide = toAction({\n\t\tid: `hide/${menu.id}/${id}`,\n\t\tlabel: localize('hide.label', 'Hide \\'{0}\\'', title),\n\t\trun() { states.updateHidden(menu, id, true); }\n\t});\n\n\tconst toggle = toAction({\n\t\tid: `toggle/${menu.id}/${id}`,\n\t\tlabel: title,\n\t\tget checked() { return !states.isHidden(menu, id); },\n\t\trun() { states.updateHidden(menu, id, !!this.checked); }\n\t});\n\n\treturn {\n\t\thide,\n\t\ttoggle,\n\t\tget isHidden() { return !toggle.checked; },\n\t};\n}\n\nexport function createConfigureKeybindingAction(commandService: ICommandService, keybindingService: IKeybindingService, commandId: string, when: ContextKeyExpression | undefined = undefined, enabled = true): IAction {\n\treturn toAction({\n\t\tid: `configureKeybinding/${commandId}`,\n\t\tlabel: localize('configure keybinding', \"Configure Keybinding\"),\n\t\tenabled,\n\t\trun() {\n\t\t\t// Only set the when clause when there is no keybinding\n\t\t\t// It is possible that the action and the keybinding have different when clauses\n\t\t\tconst hasKeybinding = !!keybindingService.lookupKeybinding(commandId); // This may only be called inside the `run()` method as it can be expensive on startup. #210529\n\t\t\tconst whenValue = !hasKeybinding && when ? when.serialize() : undefined;\n\t\t\tcommandService.executeCommand('workbench.action.openGlobalKeybindings', `@command:${commandId}` + (whenValue ? ` +when:${whenValue}` : ''));\n\t\t}\n\t});\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2009, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/actions/browser/actionViewItemService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/actions/browser/actionViewItemService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/browser/vs/platform/actions/browser/actionViewItemService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActionViewItem } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { IActionViewItemOptions } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { IAction } from '../../../base/common/actions.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { InstantiationType, registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { MenuId } from '../common/actions.js';\n\n\nexport const IActionViewItemService = createDecorator<IActionViewItemService>('IActionViewItemService');\n\n\nexport interface IActionViewItemFactory {\n\t(action: IAction, options: IActionViewItemOptions, instaService: IInstantiationService): IActionViewItem | undefined;\n}\n\nexport interface IActionViewItemService {\n\n\t_serviceBrand: undefined;\n\n\tonDidChange: Event<MenuId>;\n\n\tlookUp(menu: MenuId, submenu: MenuId): IActionViewItemFactory | undefined;\n\tlookUp(menu: MenuId, commandId: string): IActionViewItemFactory | undefined;\n}\n\nclass ActionViewItemService implements IActionViewItemService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _providers = new Map<string, IActionViewItemFactory>();\n\n\tprivate readonly _onDidChange = new Emitter<MenuId>();\n\treadonly onDidChange: Event<MenuId> = this._onDidChange.event;\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t}\n\n\tlookUp(menu: MenuId, commandOrMenuId: string | MenuId): IActionViewItemFactory | undefined {\n\t\treturn this._providers.get(this._makeKey(menu, commandOrMenuId));\n\t}\n\n\tprivate _makeKey(menu: MenuId, commandOrMenuId: string | MenuId) {\n\t\treturn `${menu.id}/${(commandOrMenuId instanceof MenuId ? commandOrMenuId.id : commandOrMenuId)}`;\n\t}\n}\n\nregisterSingleton(IActionViewItemService, ActionViewItemService, InstantiationType.Delayed);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IActionViewItem } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { IActionViewItemOptions } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { IAction } from '../../../base/common/actions.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { InstantiationType, registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { MenuId } from '../common/actions.js';\n\n\nexport const IActionViewItemService = createDecorator<IActionViewItemService>('IActionViewItemService');\n\n\nexport interface IActionViewItemFactory {\n\t(action: IAction, options: IActionViewItemOptions, instaService: IInstantiationService): IActionViewItem | undefined;\n}\n\nexport interface IActionViewItemService {\n\n\t_serviceBrand: undefined;\n\n\tonDidChange: Event<MenuId>;\n\n\tlookUp(menu: MenuId, submenu: MenuId): IActionViewItemFactory | undefined;\n\tlookUp(menu: MenuId, commandId: string): IActionViewItemFactory | undefined;\n}\n\nclass ActionViewItemService implements IActionViewItemService {\n\n\tdeclare _serviceBrand: undefined;\n\n\tprivate readonly _providers = new Map<string, IActionViewItemFactory>();\n\n\tprivate readonly _onDidChange = new Emitter<MenuId>();\n\treadonly onDidChange: Event<MenuId> = this._onDidChange.event;\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t}\n\n\tlookUp(menu: MenuId, commandOrMenuId: string | MenuId): IActionViewItemFactory | undefined {\n\t\treturn this._providers.get(this._makeKey(menu, commandOrMenuId));\n\t}\n\n\tprivate _makeKey(menu: MenuId, commandOrMenuId: string | MenuId) {\n\t\treturn `${menu.id}/${(commandOrMenuId instanceof MenuId ? commandOrMenuId.id : commandOrMenuId)}`;\n\t}\n}\n\nregisterSingleton(IActionViewItemService, ActionViewItemService, InstantiationType.Delayed);\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAKhG,OAAO,EAAE,OAAO,EAAS,MAAM,+BAA+B,CAAC;AAC/D,OAAO,EAAqB,iBAAiB,EAAE,MAAM,0CAA0C,CAAC;AAChG,OAAO,EAAE,eAAe,EAAyB,MAAM,6CAA6C,CAAC;AACrG,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;;;;;AAGvC,MAAM,sBAAsB,OAAG,wNAAe,EAAyB,wBAAwB,CAAC,CAAC;AAiBxG,MAAM,qBAAqB;IAA3B,aAAA;QAIkB,IAAA,CAAA,UAAU,GAAG,IAAI,GAAG,EAAkC,CAAC;QAEvD,IAAA,CAAA,YAAY,GAAG,IAAI,mLAAO,EAAU,CAAC;QAC7C,IAAA,CAAA,WAAW,GAAkB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;IAa/D,CAAC;IAXA,OAAO,GAAA;QACN,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,IAAY,EAAE,eAAgC,EAAA;QACpD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,QAAQ,CAAC,IAAY,EAAE,eAAgC,EAAA;QAC9D,OAAO,GAAG,IAAI,CAAC,EAAE,CAAA,CAAA,EAAI,AAAC,eAAe,YAAY,mMAAM,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAE,CAAC;IACnG,CAAC;CACD;IAED,uNAAiB,EAAC,sBAAsB,EAAE,qBAAqB,EAAA,EAAA,6BAAA,GAA4B,CAAC","debugId":null}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/actions/browser/vs/platform/actions/browser/toolbar.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getWindow } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { IToolBarOptions, ToggleMenuAction, ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { IAction, Separator, SubmenuAction, toAction, WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { createActionViewItem, getActionBarActions } from './menuEntryActionViewItem.js';\nimport { IMenuActionOptions, IMenuService, MenuId, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { createConfigureKeybindingAction } from '../common/menuService.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { IActionViewItemService } from './actionViewItemService.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\n\nexport const enum HiddenItemStrategy {\n\t/** This toolbar doesn't support hiding*/\n\tNoHide = -1,\n\t/** Hidden items aren't shown anywhere */\n\tIgnore = 0,\n\t/** Hidden items move into the secondary group */\n\tRenderInSecondaryGroup = 1,\n}\n\nexport type IWorkbenchToolBarOptions = IToolBarOptions & {\n\n\t/**\n\t * Items of the primary group can be hidden. When this happens the item can\n\t * - move into the secondary popup-menu, or\n\t * - not be shown at all\n\t */\n\thiddenItemStrategy?: HiddenItemStrategy;\n\n\t/**\n\t * Optional menu id which is used for a \"Reset Menu\" command. This should be the\n\t * menu id that defines the contents of this workbench menu\n\t */\n\tresetMenu?: MenuId;\n\n\t/**\n\t * Optional menu id which items are used for the context menu of the toolbar.\n\t */\n\tcontextMenu?: MenuId;\n\n\t/**\n\t * Optional options how menu actions are created and invoked\n\t */\n\tmenuOptions?: IMenuActionOptions;\n\n\t/**\n\t * When set the `workbenchActionExecuted` is automatically send for each invoked action. The `from` property\n\t * of the event will the passed `telemetrySource`-value\n\t */\n\ttelemetrySource?: string;\n\n\t/** This is controlled by the WorkbenchToolBar */\n\tallowContextMenu?: never;\n\n\t/**\n\t * Controls the overflow behavior of the primary group of toolbar. This isthe maximum number of items and id of\n\t * items that should never overflow\n\t *\n\t */\n\toverflowBehavior?: { maxItems: number; exempted?: string[] };\n};\n\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nexport class WorkbenchToolBar extends ToolBar {\n\n\tprivate readonly _sessionDisposables = this._store.add(new DisposableStore());\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tprivate _options: IWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService private readonly _menuService: IMenuService,\n\t\t@IContextKeyService private readonly _contextKeyService: IContextKeyService,\n\t\t@IContextMenuService private readonly _contextMenuService: IContextMenuService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t) {\n\t\tsuper(container, _contextMenuService, {\n\t\t\t// defaults\n\t\t\tgetKeyBinding: (action) => _keybindingService.lookupKeybinding(action.id) ?? undefined,\n\t\t\t// options (override defaults)\n\t\t\t..._options,\n\t\t\t// mandatory (overide options)\n\t\t\tallowContextMenu: true,\n\t\t\tskipTelemetry: typeof _options?.telemetrySource === 'string',\n\t\t});\n\n\t\t// telemetry logic\n\t\tconst telemetrySource = _options?.telemetrySource;\n\t\tif (telemetrySource) {\n\t\t\tthis._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>(\n\t\t\t\t'workbenchActionExecuted',\n\t\t\t\t{ id: e.action.id, from: telemetrySource })\n\t\t\t));\n\t\t}\n\t}\n\n\toverride setActions(_primary: readonly IAction[], _secondary: readonly IAction[] = [], menuIds?: readonly MenuId[]): void {\n\n\t\tthis._sessionDisposables.clear();\n\t\tconst primary: Array<IAction | undefined> = _primary.slice(); // for hiding and overflow we set some items to undefined\n\t\tconst secondary = _secondary.slice();\n\t\tconst toggleActions: IAction[] = [];\n\t\tlet toggleActionsCheckedCount: number = 0;\n\n\t\tconst extraSecondary: Array<IAction | undefined> = [];\n\n\t\tlet someAreHidden = false;\n\t\t// unless disabled, move all hidden items to secondary group or ignore them\n\t\tif (this._options?.hiddenItemStrategy !== HiddenItemStrategy.NoHide) {\n\t\t\tfor (let i = 0; i < primary.length; i++) {\n\t\t\t\tconst action = primary[i];\n\t\t\t\tif (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n\t\t\t\t\t// console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!action.hideActions) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// collect all toggle actions\n\t\t\t\ttoggleActions.push(action.hideActions.toggle);\n\t\t\t\tif (action.hideActions.toggle.checked) {\n\t\t\t\t\ttoggleActionsCheckedCount++;\n\t\t\t\t}\n\n\t\t\t\t// hidden items move into overflow or ignore\n\t\t\t\tif (action.hideActions.isHidden) {\n\t\t\t\t\tsomeAreHidden = true;\n\t\t\t\t\tprimary[i] = undefined;\n\t\t\t\t\tif (this._options?.hiddenItemStrategy !== HiddenItemStrategy.Ignore) {\n\t\t\t\t\t\textraSecondary[i] = action;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// count for max\n\t\tif (this._options?.overflowBehavior !== undefined) {\n\n\t\t\tconst exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a?.id));\n\t\t\tconst maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n\n\t\t\tlet count = 0;\n\t\t\tfor (let i = 0; i < primary.length; i++) {\n\t\t\t\tconst action = primary[i];\n\t\t\t\tif (!action) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t\tif (exemptedIds.has(action.id)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (count >= maxItems) {\n\t\t\t\t\tprimary[i] = undefined;\n\t\t\t\t\textraSecondary[i] = action;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// coalesce turns Array<IAction|undefined> into IAction[]\n\t\tcoalesceInPlace(primary);\n\t\tcoalesceInPlace(extraSecondary);\n\t\tsuper.setActions(primary, Separator.join(extraSecondary, secondary));\n\n\t\t// add context menu for toggle and configure keybinding actions\n\t\tif (toggleActions.length > 0 || primary.length > 0) {\n\t\t\tthis._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n\t\t\t\tconst event = new StandardMouseEvent(getWindow(this.getElement()), e);\n\n\t\t\t\tconst action = this.getItemAction(event.target);\n\t\t\t\tif (!(action)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\n\t\t\t\tconst primaryActions = [];\n\n\t\t\t\t// -- Configure Keybinding Action --\n\t\t\t\tif (action instanceof MenuItemAction && action.menuKeybinding) {\n\t\t\t\t\tprimaryActions.push(action.menuKeybinding);\n\t\t\t\t} else if (!(action instanceof SubmenuItemAction || action instanceof ToggleMenuAction)) {\n\t\t\t\t\t// only enable the configure keybinding action for actions that support keybindings\n\t\t\t\t\tconst supportsKeybindings = !!this._keybindingService.lookupKeybinding(action.id);\n\t\t\t\t\tprimaryActions.push(createConfigureKeybindingAction(this._commandService, this._keybindingService, action.id, undefined, supportsKeybindings));\n\t\t\t\t}\n\n\t\t\t\t// -- Hide Actions --\n\t\t\t\tif (toggleActions.length > 0) {\n\t\t\t\t\tlet noHide = false;\n\n\t\t\t\t\t// last item cannot be hidden when using ignore strategy\n\t\t\t\t\tif (toggleActionsCheckedCount === 1 && this._options?.hiddenItemStrategy === HiddenItemStrategy.Ignore) {\n\t\t\t\t\t\tnoHide = true;\n\t\t\t\t\t\tfor (let i = 0; i < toggleActions.length; i++) {\n\t\t\t\t\t\t\tif (toggleActions[i].checked) {\n\t\t\t\t\t\t\t\ttoggleActions[i] = toAction({\n\t\t\t\t\t\t\t\t\tid: action.id,\n\t\t\t\t\t\t\t\t\tlabel: action.label,\n\t\t\t\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t\t\t\trun() { }\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak; // there is only one\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// add \"hide foo\" actions\n\t\t\t\t\tif (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n\t\t\t\t\t\tif (!action.hideActions) {\n\t\t\t\t\t\t\t// no context menu for MenuItemAction instances that support no hiding\n\t\t\t\t\t\t\t// those are fake actions and need to be cleaned up\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimaryActions.push(action.hideActions.hide);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprimaryActions.push(toAction({\n\t\t\t\t\t\t\tid: 'label',\n\t\t\t\t\t\t\tlabel: localize('hide', \"Hide\"),\n\t\t\t\t\t\t\tenabled: false,\n\t\t\t\t\t\t\trun() { }\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst actions = Separator.join(primaryActions, toggleActions);\n\n\t\t\t\t// add \"Reset Menu\" action\n\t\t\t\tif (this._options?.resetMenu && !menuIds) {\n\t\t\t\t\tmenuIds = [this._options.resetMenu];\n\t\t\t\t}\n\t\t\t\tif (someAreHidden && menuIds) {\n\t\t\t\t\tactions.push(new Separator());\n\t\t\t\t\tactions.push(toAction({\n\t\t\t\t\t\tid: 'resetThisMenu',\n\t\t\t\t\t\tlabel: localize('resetThisMenu', \"Reset Menu\"),\n\t\t\t\t\t\trun: () => this._menuService.resetHiddenStates(menuIds)\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tif (actions.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._contextMenuService.showContextMenu({\n\t\t\t\t\tgetAnchor: () => event,\n\t\t\t\t\tgetActions: () => actions,\n\t\t\t\t\t// add context menu actions (iff appicable)\n\t\t\t\t\tmenuId: this._options?.contextMenu,\n\t\t\t\t\tmenuActionOptions: { renderShortTitle: true, ...this._options?.menuOptions },\n\t\t\t\t\tskipTelemetry: typeof this._options?.telemetrySource === 'string',\n\t\t\t\t\tcontextKeyService: this._contextKeyService,\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\t}\n}\n\n// ---- MenuWorkbenchToolBar -------------------------------------------------\n\n\nexport interface IToolBarRenderOptions {\n\t/**\n\t * Determines what groups are considered primary. Defaults to `navigation`. Items of the primary\n\t * group are rendered with buttons and the rest is rendered in the secondary popup-menu.\n\t */\n\tprimaryGroup?: string | ((actionGroup: string) => boolean);\n\n\t/**\n\t * Inlinse submenus with just a single item\n\t */\n\tshouldInlineSubmenu?: (action: SubmenuAction, group: string, groupSize: number) => boolean;\n\n\t/**\n\t * Should the primary group allow for separators.\n\t */\n\tuseSeparatorsInPrimaryActions?: boolean;\n}\n\nexport interface IMenuWorkbenchToolBarOptions extends IWorkbenchToolBarOptions {\n\n\t/**\n\t * Optional options to configure how the toolbar renderes items.\n\t */\n\ttoolbarOptions?: IToolBarRenderOptions;\n\n\t/**\n\t * Customize the debounce delay for menu updates\n\t */\n\teventDebounceDelay?: number;\n}\n\n/**\n * A {@link WorkbenchToolBar workbench toolbar} that is purely driven from a {@link MenuId menu}-identifier.\n *\n * *Note* that Manual updates via `setActions` are NOT supported.\n */\nexport class MenuWorkbenchToolBar extends WorkbenchToolBar {\n\n\tprivate readonly _onDidChangeMenuItems = this._store.add(new Emitter<this>());\n\tget onDidChangeMenuItems() { return this._onDidChangeMenuItems.event; }\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\tmenuId: MenuId,\n\t\toptions: IMenuWorkbenchToolBarOptions | undefined,\n\t\t@IMenuService menuService: IMenuService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IContextMenuService contextMenuService: IContextMenuService,\n\t\t@IKeybindingService keybindingService: IKeybindingService,\n\t\t@ICommandService commandService: ICommandService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IActionViewItemService actionViewService: IActionViewItemService,\n\t\t@IInstantiationService instaService: IInstantiationService,\n\t) {\n\t\tsuper(container, {\n\t\t\tresetMenu: menuId,\n\t\t\t...options,\n\t\t\tactionViewItemProvider: (action, opts) => {\n\t\t\t\tlet provider = actionViewService.lookUp(menuId, action instanceof SubmenuItemAction ? action.item.submenu.id : action.id);\n\t\t\t\tif (!provider) {\n\t\t\t\t\tprovider = options?.actionViewItemProvider;\n\t\t\t\t}\n\t\t\t\tconst viewItem = provider?.(action, opts, instaService);\n\t\t\t\tif (viewItem) {\n\t\t\t\t\treturn viewItem;\n\t\t\t\t}\n\t\t\t\treturn createActionViewItem(instaService, action, opts);\n\t\t\t}\n\t\t}, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n\n\t\t// update logic\n\t\tconst menu = this._store.add(menuService.createMenu(menuId, contextKeyService, { emitEventsForSubmenuChanges: true, eventDebounceDelay: options?.eventDebounceDelay }));\n\t\tconst updateToolbar = () => {\n\t\t\tconst { primary, secondary } = getActionBarActions(\n\t\t\t\tmenu.getActions(options?.menuOptions),\n\t\t\t\toptions?.toolbarOptions?.primaryGroup,\n\t\t\t\toptions?.toolbarOptions?.shouldInlineSubmenu,\n\t\t\t\toptions?.toolbarOptions?.useSeparatorsInPrimaryActions\n\t\t\t);\n\t\t\tcontainer.classList.toggle('has-no-actions', primary.length === 0 && secondary.length === 0);\n\t\t\tsuper.setActions(primary, secondary);\n\t\t};\n\n\t\tthis._store.add(menu.onDidChange(() => {\n\t\t\tupdateToolbar();\n\t\t\tthis._onDidChangeMenuItems.fire(this);\n\t\t}));\n\n\t\tthis._store.add(actionViewService.onDidChange(e => {\n\t\t\tif (e === menuId) {\n\t\t\t\tupdateToolbar();\n\t\t\t}\n\t\t}));\n\t\tupdateToolbar();\n\t}\n\n\t/**\n\t * @deprecated The WorkbenchToolBar does not support this method because it works with menus.\n\t */\n\toverride setActions(): void {\n\t\tthrow new BugIndicatingError('This toolbar is populated from a menu.');\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}