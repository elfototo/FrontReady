{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/rangeUtil.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewLines/rangeUtil.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/vs/editor/browser/viewParts/viewLines/rangeUtil.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Constants } from '../../../../base/common/uint.js';\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nimport { DomReadingContext } from './domReadingContext.js';\n\nexport class RangeUtil {\n\n\t/**\n\t * Reusing the same range here\n\t * because IE is buggy and constantly freezes when using a large number\n\t * of ranges and calling .detach on them\n\t */\n\tprivate static _handyReadyRange: Range;\n\n\tprivate static _createRange(): Range {\n\t\tif (!this._handyReadyRange) {\n\t\t\tthis._handyReadyRange = document.createRange();\n\t\t}\n\t\treturn this._handyReadyRange;\n\t}\n\n\tprivate static _detachRange(range: Range, endNode: HTMLElement): void {\n\t\t// Move range out of the span node, IE doesn't like having many ranges in\n\t\t// the same spot and will act badly for lines containing dashes ('-')\n\t\trange.selectNodeContents(endNode);\n\t}\n\n\tprivate static _readClientRects(startElement: Node, startOffset: number, endElement: Node, endOffset: number, endNode: HTMLElement): DOMRectList | null {\n\t\tconst range = this._createRange();\n\t\ttry {\n\t\t\trange.setStart(startElement, startOffset);\n\t\t\trange.setEnd(endElement, endOffset);\n\n\t\t\treturn range.getClientRects();\n\t\t} catch (e) {\n\t\t\t// This is life ...\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tthis._detachRange(range, endNode);\n\t\t}\n\t}\n\n\tprivate static _mergeAdjacentRanges(ranges: FloatHorizontalRange[]): FloatHorizontalRange[] {\n\t\tif (ranges.length === 1) {\n\t\t\t// There is nothing to merge\n\t\t\treturn ranges;\n\t\t}\n\n\t\tranges.sort(FloatHorizontalRange.compare);\n\n\t\tconst result: FloatHorizontalRange[] = [];\n\t\tlet resultLen = 0;\n\t\tlet prev = ranges[0];\n\n\t\tfor (let i = 1, len = ranges.length; i < len; i++) {\n\t\t\tconst range = ranges[i];\n\t\t\tif (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n\t\t\t\tprev.width = Math.max(prev.width, range.left + range.width - prev.left);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = range;\n\t\t\t}\n\t\t}\n\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _createHorizontalRangesFromClientRects(clientRects: DOMRectList | null, clientRectDeltaLeft: number, clientRectScale: number): FloatHorizontalRange[] | null {\n\t\tif (!clientRects || clientRects.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// We go through FloatHorizontalRange because it has been observed in bi-di text\n\t\t// that the clientRects are not coming in sorted from the browser\n\n\t\tconst result: FloatHorizontalRange[] = [];\n\t\tfor (let i = 0, len = clientRects.length; i < len; i++) {\n\t\t\tconst clientRect = clientRects[i];\n\t\t\tresult[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n\t\t}\n\n\t\treturn this._mergeAdjacentRanges(result);\n\t}\n\n\tpublic static readHorizontalRanges(domNode: HTMLElement, startChildIndex: number, startOffset: number, endChildIndex: number, endOffset: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\t// Panic check\n\t\tconst min = 0;\n\t\tconst max = domNode.children.length - 1;\n\t\tif (min > max) {\n\t\t\treturn null;\n\t\t}\n\t\tstartChildIndex = Math.min(max, Math.max(min, startChildIndex));\n\t\tendChildIndex = Math.min(max, Math.max(min, endChildIndex));\n\n\t\tif (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n\t\t\t// We must find the position at the beginning of a <span>\n\t\t\t// To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n\t\t\tconst clientRects = domNode.children[startChildIndex].getClientRects();\n\t\t\tcontext.markDidDomLayout();\n\t\t\treturn this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n\t\t}\n\n\t\t// If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n\t\t// Chrome is buggy and doesn't handle 0 offsets well sometimes.\n\t\tif (startChildIndex !== endChildIndex) {\n\t\t\tif (endChildIndex > 0 && endOffset === 0) {\n\t\t\t\tendChildIndex--;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tlet startElement = domNode.children[startChildIndex].firstChild;\n\t\tlet endElement = domNode.children[endChildIndex].firstChild;\n\n\t\tif (!startElement || !endElement) {\n\t\t\t// When having an empty <span> (without any text content), try to move to the previous <span>\n\t\t\tif (!startElement && startOffset === 0 && startChildIndex > 0) {\n\t\t\t\tstartElement = domNode.children[startChildIndex - 1].firstChild;\n\t\t\t\tstartOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t\tif (!endElement && endOffset === 0 && endChildIndex > 0) {\n\t\t\t\tendElement = domNode.children[endChildIndex - 1].firstChild;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tif (!startElement || !endElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tstartOffset = Math.min(startElement.textContent!.length, Math.max(0, startOffset));\n\t\tendOffset = Math.min(endElement.textContent!.length, Math.max(0, endOffset));\n\n\t\tconst clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n\t\tcontext.markDidDomLayout();\n\t\treturn this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Constants } from '../../../../base/common/uint.js';\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nimport { DomReadingContext } from './domReadingContext.js';\n\nexport class RangeUtil {\n\n\t/**\n\t * Reusing the same range here\n\t * because IE is buggy and constantly freezes when using a large number\n\t * of ranges and calling .detach on them\n\t */\n\tprivate static _handyReadyRange: Range;\n\n\tprivate static _createRange(): Range {\n\t\tif (!this._handyReadyRange) {\n\t\t\tthis._handyReadyRange = document.createRange();\n\t\t}\n\t\treturn this._handyReadyRange;\n\t}\n\n\tprivate static _detachRange(range: Range, endNode: HTMLElement): void {\n\t\t// Move range out of the span node, IE doesn't like having many ranges in\n\t\t// the same spot and will act badly for lines containing dashes ('-')\n\t\trange.selectNodeContents(endNode);\n\t}\n\n\tprivate static _readClientRects(startElement: Node, startOffset: number, endElement: Node, endOffset: number, endNode: HTMLElement): DOMRectList | null {\n\t\tconst range = this._createRange();\n\t\ttry {\n\t\t\trange.setStart(startElement, startOffset);\n\t\t\trange.setEnd(endElement, endOffset);\n\n\t\t\treturn range.getClientRects();\n\t\t} catch (e) {\n\t\t\t// This is life ...\n\t\t\treturn null;\n\t\t} finally {\n\t\t\tthis._detachRange(range, endNode);\n\t\t}\n\t}\n\n\tprivate static _mergeAdjacentRanges(ranges: FloatHorizontalRange[]): FloatHorizontalRange[] {\n\t\tif (ranges.length === 1) {\n\t\t\t// There is nothing to merge\n\t\t\treturn ranges;\n\t\t}\n\n\t\tranges.sort(FloatHorizontalRange.compare);\n\n\t\tconst result: FloatHorizontalRange[] = [];\n\t\tlet resultLen = 0;\n\t\tlet prev = ranges[0];\n\n\t\tfor (let i = 1, len = ranges.length; i < len; i++) {\n\t\t\tconst range = ranges[i];\n\t\t\tif (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n\t\t\t\tprev.width = Math.max(prev.width, range.left + range.width - prev.left);\n\t\t\t} else {\n\t\t\t\tresult[resultLen++] = prev;\n\t\t\t\tprev = range;\n\t\t\t}\n\t\t}\n\n\t\tresult[resultLen++] = prev;\n\n\t\treturn result;\n\t}\n\n\tprivate static _createHorizontalRangesFromClientRects(clientRects: DOMRectList | null, clientRectDeltaLeft: number, clientRectScale: number): FloatHorizontalRange[] | null {\n\t\tif (!clientRects || clientRects.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// We go through FloatHorizontalRange because it has been observed in bi-di text\n\t\t// that the clientRects are not coming in sorted from the browser\n\n\t\tconst result: FloatHorizontalRange[] = [];\n\t\tfor (let i = 0, len = clientRects.length; i < len; i++) {\n\t\t\tconst clientRect = clientRects[i];\n\t\t\tresult[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n\t\t}\n\n\t\treturn this._mergeAdjacentRanges(result);\n\t}\n\n\tpublic static readHorizontalRanges(domNode: HTMLElement, startChildIndex: number, startOffset: number, endChildIndex: number, endOffset: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\t// Panic check\n\t\tconst min = 0;\n\t\tconst max = domNode.children.length - 1;\n\t\tif (min > max) {\n\t\t\treturn null;\n\t\t}\n\t\tstartChildIndex = Math.min(max, Math.max(min, startChildIndex));\n\t\tendChildIndex = Math.min(max, Math.max(min, endChildIndex));\n\n\t\tif (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n\t\t\t// We must find the position at the beginning of a <span>\n\t\t\t// To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n\t\t\tconst clientRects = domNode.children[startChildIndex].getClientRects();\n\t\t\tcontext.markDidDomLayout();\n\t\t\treturn this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n\t\t}\n\n\t\t// If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n\t\t// Chrome is buggy and doesn't handle 0 offsets well sometimes.\n\t\tif (startChildIndex !== endChildIndex) {\n\t\t\tif (endChildIndex > 0 && endOffset === 0) {\n\t\t\t\tendChildIndex--;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tlet startElement = domNode.children[startChildIndex].firstChild;\n\t\tlet endElement = domNode.children[endChildIndex].firstChild;\n\n\t\tif (!startElement || !endElement) {\n\t\t\t// When having an empty <span> (without any text content), try to move to the previous <span>\n\t\t\tif (!startElement && startOffset === 0 && startChildIndex > 0) {\n\t\t\t\tstartElement = domNode.children[startChildIndex - 1].firstChild;\n\t\t\t\tstartOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t\tif (!endElement && endOffset === 0 && endChildIndex > 0) {\n\t\t\t\tendElement = domNode.children[endChildIndex - 1].firstChild;\n\t\t\t\tendOffset = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\t\t}\n\t\t}\n\n\t\tif (!startElement || !endElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tstartOffset = Math.min(startElement.textContent!.length, Math.max(0, startOffset));\n\t\tendOffset = Math.min(endElement.textContent!.length, Math.max(0, endOffset));\n\n\t\tconst clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n\t\tcontext.markDidDomLayout();\n\t\treturn this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/viewLine.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewLines/viewLine.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/vs/editor/browser/viewParts/viewLines/viewLine.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '../../../../base/browser/browser.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { IVisibleLine } from '../../view/viewLayer.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { CharacterMapping, ForeignElementType, RenderLineInput, renderViewLine, DomPosition, RenderWhitespace } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLineOptions } from './viewLineOptions.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { OffsetRange } from '../../../common/core/ranges/offsetRange.js';\nimport { InlineDecorationType } from '../../../common/viewModel/inlineDecorations.js';\nimport { TextDirection } from '../../../common/model.js';\n\nconst canUseFastRenderedViewLine = (function () {\n\tif (platform.isNative) {\n\t\t// In VSCode we know very well when the zoom level changes\n\t\treturn true;\n\t}\n\n\tif (platform.isLinux || browser.isFirefox || browser.isSafari) {\n\t\t// On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n\t\t// --\n\t\t// Even though we read character widths correctly, having read them at a specific zoom level\n\t\t// does not mean they are the same at the current zoom level.\n\t\t// --\n\t\t// This could be improved if we ever figure out how to get an event when browsers zoom,\n\t\t// but until then we have to stick with reading client rects.\n\t\t// --\n\t\t// The same has been observed with Firefox on Windows7\n\t\t// --\n\t\t// The same has been oversved with Safari\n\t\treturn false;\n\t}\n\n\treturn true;\n})();\n\nlet monospaceAssumptionsAreValid = true;\n\nexport class ViewLine implements IVisibleLine {\n\n\tpublic static readonly CLASS_NAME = 'view-line';\n\n\tprivate _options: ViewLineOptions;\n\tprivate _isMaybeInvalid: boolean;\n\tprivate _renderedViewLine: IRenderedViewLine | null;\n\n\tconstructor(private readonly _viewGpuContext: ViewGpuContext | undefined, options: ViewLineOptions) {\n\t\tthis._options = options;\n\t\tthis._isMaybeInvalid = true;\n\t\tthis._renderedViewLine = null;\n\t}\n\n\t// --- begin IVisibleLineData\n\n\tpublic getDomNode(): HTMLElement | null {\n\t\tif (this._renderedViewLine && this._renderedViewLine.domNode) {\n\t\t\treturn this._renderedViewLine.domNode.domNode;\n\t\t}\n\t\treturn null;\n\t}\n\tpublic setDomNode(domNode: HTMLElement): void {\n\t\tif (this._renderedViewLine) {\n\t\t\tthis._renderedViewLine.domNode = createFastDomNode(domNode);\n\t\t} else {\n\t\t\tthrow new Error('I have no rendered view line to set the dom node to...');\n\t\t}\n\t}\n\n\tpublic onContentChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onTokensChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onDecorationsChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onOptionsChanged(newOptions: ViewLineOptions): void {\n\t\tthis._isMaybeInvalid = true;\n\t\tthis._options = newOptions;\n\t}\n\tpublic onSelectionChanged(): boolean {\n\t\tif (isHighContrast(this._options.themeType) || this._renderedViewLine?.input.renderWhitespace === RenderWhitespace.Selection) {\n\t\t\tthis._isMaybeInvalid = true;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic renderLine(lineNumber: number, deltaTop: number, lineHeight: number, viewportData: ViewportData, sb: StringBuilder): boolean {\n\t\tif (this._options.useGpu && this._viewGpuContext?.canRender(this._options, viewportData, lineNumber)) {\n\t\t\tthis._renderedViewLine?.domNode?.domNode.remove();\n\t\t\tthis._renderedViewLine = null;\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._isMaybeInvalid === false) {\n\t\t\t// it appears that nothing relevant has changed\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._isMaybeInvalid = false;\n\n\t\tconst lineData = viewportData.getViewLineRenderingData(lineNumber);\n\t\tconst options = this._options;\n\t\tconst actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n\t\tconst renderWhitespace = (lineData.hasVariableFonts || options.experimentalWhitespaceRendering === 'off') ? options.renderWhitespace : 'none';\n\t\tconst allowFastRendering = !lineData.hasVariableFonts;\n\n\t\t// Only send selection information when needed for rendering whitespace\n\t\tlet selectionsOnLine: OffsetRange[] | null = null;\n\t\tif (isHighContrast(options.themeType) || renderWhitespace === 'selection') {\n\t\t\tconst selections = viewportData.selections;\n\t\t\tfor (const selection of selections) {\n\n\t\t\t\tif (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n\t\t\t\tconst endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n\n\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\tif (isHighContrast(options.themeType)) {\n\t\t\t\t\t\tactualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', InlineDecorationType.Regular));\n\t\t\t\t\t}\n\t\t\t\t\tif (renderWhitespace === 'selection') {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectionsOnLine.push(new OffsetRange(startColumn - 1, endColumn - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst renderLineInput = new RenderLineInput(\n\t\t\toptions.useMonospaceOptimizations,\n\t\t\toptions.canUseHalfwidthRightwardsArrow,\n\t\t\tlineData.content,\n\t\t\tlineData.continuesWithWrappedLine,\n\t\t\tlineData.isBasicASCII,\n\t\t\tlineData.containsRTL,\n\t\t\tlineData.minColumn - 1,\n\t\t\tlineData.tokens,\n\t\t\tactualInlineDecorations,\n\t\t\tlineData.tabSize,\n\t\t\tlineData.startVisibleColumn,\n\t\t\toptions.spaceWidth,\n\t\t\toptions.middotWidth,\n\t\t\toptions.wsmiddotWidth,\n\t\t\toptions.stopRenderingLineAfter,\n\t\t\trenderWhitespace,\n\t\t\toptions.renderControlCharacters,\n\t\t\toptions.fontLigatures !== EditorFontLigatures.OFF,\n\t\t\tselectionsOnLine,\n\t\t\tlineData.textDirection,\n\t\t\toptions.verticalScrollbarSize\n\t\t);\n\n\t\tif (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n\t\t\t// no need to do anything, we have the same render input\n\t\t\treturn false;\n\t\t}\n\n\t\tsb.appendString('<div ');\n\t\tif (lineData.textDirection === TextDirection.RTL) {\n\t\t\tsb.appendString('dir=\"rtl\" ');\n\t\t} else if (lineData.containsRTL) {\n\t\t\tsb.appendString('dir=\"ltr\" ');\n\t\t}\n\t\tsb.appendString('style=\"top:');\n\t\tsb.appendString(String(deltaTop));\n\t\tsb.appendString('px;height:');\n\t\tsb.appendString(String(lineHeight));\n\t\tsb.appendString('px;line-height:');\n\t\tsb.appendString(String(lineHeight));\n\t\tif (lineData.textDirection === TextDirection.RTL) {\n\t\t\tsb.appendString('px;padding-right:');\n\t\t\tsb.appendString(String(options.verticalScrollbarSize));\n\t\t}\n\t\tsb.appendString('px;\" class=\"');\n\t\tsb.appendString(ViewLine.CLASS_NAME);\n\t\tsb.appendString('\">');\n\n\t\tconst output = renderViewLine(renderLineInput, sb);\n\n\t\tsb.appendString('</div>');\n\n\t\tlet renderedViewLine: IRenderedViewLine | null = null;\n\t\tif (\n\t\t\tallowFastRendering\n\t\t\t&& monospaceAssumptionsAreValid\n\t\t\t&& canUseFastRenderedViewLine\n\t\t\t&& lineData.isBasicASCII\n\t\t\t&& renderLineInput.isLTR\n\t\t\t&& options.useMonospaceOptimizations\n\t\t\t&& output.containsForeignElements === ForeignElementType.None\n\t\t) {\n\t\t\trenderedViewLine = new FastRenderedViewLine(\n\t\t\t\tthis._renderedViewLine ? this._renderedViewLine.domNode : null,\n\t\t\t\trenderLineInput,\n\t\t\t\toutput.characterMapping\n\t\t\t);\n\t\t}\n\n\t\tif (!renderedViewLine) {\n\t\t\trenderedViewLine = createRenderedLine(\n\t\t\t\tthis._renderedViewLine ? this._renderedViewLine.domNode : null,\n\t\t\t\trenderLineInput,\n\t\t\t\toutput.characterMapping,\n\t\t\t\toutput.containsForeignElements\n\t\t\t);\n\t\t}\n\n\t\tthis._renderedViewLine = renderedViewLine;\n\n\t\treturn true;\n\t}\n\n\tpublic layoutLine(lineNumber: number, deltaTop: number, lineHeight: number): void {\n\t\tif (this._renderedViewLine && this._renderedViewLine.domNode) {\n\t\t\tthis._renderedViewLine.domNode.setTop(deltaTop);\n\t\t\tthis._renderedViewLine.domNode.setHeight(lineHeight);\n\t\t\tthis._renderedViewLine.domNode.setLineHeight(lineHeight);\n\t\t}\n\t}\n\n\t// --- end IVisibleLineData\n\n\tpublic isRenderedRTL(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._renderedViewLine.input.textDirection === TextDirection.RTL;\n\t}\n\n\tpublic getWidth(context: DomReadingContext | null): number {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._renderedViewLine.getWidth(context);\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this._renderedViewLine.getWidthIsFast();\n\t}\n\n\tpublic needsMonospaceFontCheck(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._renderedViewLine instanceof FastRenderedViewLine);\n\t}\n\n\tpublic monospaceAssumptionsAreValid(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn monospaceAssumptionsAreValid;\n\t\t}\n\t\tif (this._renderedViewLine instanceof FastRenderedViewLine) {\n\t\t\treturn this._renderedViewLine.monospaceAssumptionsAreValid();\n\t\t}\n\t\treturn monospaceAssumptionsAreValid;\n\t}\n\n\tpublic onMonospaceAssumptionsInvalidated(): void {\n\t\tif (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n\t\t\tthis._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n\t\t}\n\t}\n\n\tpublic getVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): VisibleRanges | null {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn null;\n\t\t}\n\n\t\tstartColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n\t\tendColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n\n\t\tconst stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n\n\t\tif (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n\t\t\t// This range is obviously not visible\n\t\t\treturn new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n\t\t}\n\n\t\tif (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n\t\t\tstartColumn = stopRenderingLineAfter + 1;\n\t\t}\n\n\t\tif (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n\t\t\tendColumn = stopRenderingLineAfter + 1;\n\t\t}\n\n\t\tconst horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n\t\tif (horizontalRanges && horizontalRanges.length > 0) {\n\t\t\treturn new VisibleRanges(false, horizontalRanges);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n\t}\n}\n\ninterface IRenderedViewLine {\n\tdomNode: FastDomNode<HTMLElement> | null;\n\treadonly input: RenderLineInput;\n\tgetWidth(context: DomReadingContext | null): number;\n\tgetWidthIsFast(): boolean;\n\tgetVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null;\n\tgetColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number;\n}\n\nconst enum Constants {\n\t/**\n\t * It seems that rounding errors occur with long lines, so the purely multiplication based\n\t * method is only viable for short lines. For longer lines, we look up the real position of\n\t * every 300th character and use multiplication based on that.\n\t *\n\t * See https://github.com/microsoft/vscode/issues/33178\n\t */\n\tMaxMonospaceDistance = 300\n}\n\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine implements IRenderedViewLine {\n\n\tpublic domNode: FastDomNode<HTMLElement> | null;\n\tpublic readonly input: RenderLineInput;\n\n\tprivate readonly _characterMapping: CharacterMapping;\n\tprivate readonly _charWidth: number;\n\tprivate readonly _keyColumnPixelOffsetCache: Float32Array | null;\n\tprivate _cachedWidth: number = -1;\n\n\tconstructor(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping) {\n\t\tthis.domNode = domNode;\n\t\tthis.input = renderLineInput;\n\t\tconst keyColumnCount = Math.floor(renderLineInput.lineContent.length / Constants.MaxMonospaceDistance);\n\t\tif (keyColumnCount > 0) {\n\t\t\tthis._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n\t\t\tfor (let i = 0; i < keyColumnCount; i++) {\n\t\t\t\tthis._keyColumnPixelOffsetCache[i] = -1;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._keyColumnPixelOffsetCache = null;\n\t\t}\n\n\t\tthis._characterMapping = characterMapping;\n\t\tthis._charWidth = renderLineInput.spaceWidth;\n\t}\n\n\tpublic getWidth(context: DomReadingContext | null): number {\n\t\tif (!this.domNode || this.input.lineContent.length < Constants.MaxMonospaceDistance) {\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n\t\t\treturn Math.round(this._charWidth * horizontalOffset);\n\t\t}\n\t\tif (this._cachedWidth === -1) {\n\t\t\tthis._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n\t\t\tcontext?.markDidDomLayout();\n\t\t}\n\t\treturn this._cachedWidth;\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\treturn (this.input.lineContent.length < Constants.MaxMonospaceDistance) || this._cachedWidth !== -1;\n\t}\n\n\tpublic monospaceAssumptionsAreValid(): boolean {\n\t\tif (!this.domNode) {\n\t\t\treturn monospaceAssumptionsAreValid;\n\t\t}\n\t\tif (this.input.lineContent.length < Constants.MaxMonospaceDistance) {\n\t\t\tconst expectedWidth = this.getWidth(null);\n\t\t\tconst actualWidth = (<HTMLSpanElement>this.domNode.domNode.firstChild).offsetWidth;\n\t\t\tif (Math.abs(expectedWidth - actualWidth) >= 2) {\n\t\t\t\t// more than 2px off\n\t\t\t\tconsole.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n\t\t\t\tmonospaceAssumptionsAreValid = false;\n\t\t\t}\n\t\t}\n\t\treturn monospaceAssumptionsAreValid;\n\t}\n\n\tpublic toSlowRenderedLine(): RenderedViewLine {\n\t\treturn createRenderedLine(this.domNode, this.input, this._characterMapping, ForeignElementType.None);\n\t}\n\n\tpublic getVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tconst startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n\t\tconst endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n\t\treturn [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n\t}\n\n\tprivate _getColumnPixelOffset(lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (column <= Constants.MaxMonospaceDistance) {\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\t\treturn this._charWidth * horizontalOffset;\n\t\t}\n\n\t\tconst keyColumnOrdinal = Math.floor((column - 1) / Constants.MaxMonospaceDistance) - 1;\n\t\tconst keyColumn = (keyColumnOrdinal + 1) * Constants.MaxMonospaceDistance + 1;\n\t\tlet keyColumnPixelOffset = -1;\n\t\tif (this._keyColumnPixelOffsetCache) {\n\t\t\tkeyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n\t\t\tif (keyColumnPixelOffset === -1) {\n\t\t\t\tkeyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n\t\t\t\tthis._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (keyColumnPixelOffset === -1) {\n\t\t\t// Could not read actual key column pixel offset\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\t\treturn this._charWidth * horizontalOffset;\n\t\t}\n\n\t\tconst keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\treturn keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n\t}\n\n\tprivate _getReadingTarget(myDomNode: FastDomNode<HTMLElement>): HTMLElement {\n\t\treturn <HTMLSpanElement>myDomNode.domNode.firstChild;\n\t}\n\n\tprivate _actualReadPixelOffset(lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (!this.domNode) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst domPosition = this._characterMapping.getDomPosition(column);\n\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n\t\tif (!r || r.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn r[0].left;\n\t}\n\n\tpublic getColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number {\n\t\treturn getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n\t}\n}\n\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine implements IRenderedViewLine {\n\n\tpublic domNode: FastDomNode<HTMLElement> | null;\n\tpublic readonly input: RenderLineInput;\n\n\tprotected readonly _characterMapping: CharacterMapping;\n\tprivate readonly _isWhitespaceOnly: boolean;\n\tprivate readonly _containsForeignElements: ForeignElementType;\n\tprivate _cachedWidth: number;\n\n\t/**\n\t * This is a map that is used only when the line is guaranteed to be rendered LTR and has no RTL text.\n\t */\n\tprivate readonly _pixelOffsetCache: Float32Array | null;\n\n\tconstructor(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType) {\n\t\tthis.domNode = domNode;\n\t\tthis.input = renderLineInput;\n\t\tthis._characterMapping = characterMapping;\n\t\tthis._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n\t\tthis._containsForeignElements = containsForeignElements;\n\t\tthis._cachedWidth = -1;\n\n\t\tthis._pixelOffsetCache = null;\n\t\tif (renderLineInput.isLTR) {\n\t\t\tthis._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n\t\t\tfor (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n\t\t\t\tthis._pixelOffsetCache[column] = -1;\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- Reading from the DOM methods\n\n\tprotected _getReadingTarget(myDomNode: FastDomNode<HTMLElement>): HTMLElement {\n\t\treturn <HTMLSpanElement>myDomNode.domNode.firstChild;\n\t}\n\n\t/**\n\t * Width of the line in pixels\n\t */\n\tpublic getWidth(context: DomReadingContext | null): number {\n\t\tif (!this.domNode) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (this._cachedWidth === -1) {\n\t\t\tthis._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n\t\t\tcontext?.markDidDomLayout();\n\t\t}\n\t\treturn this._cachedWidth;\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\tif (this._cachedWidth === -1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Visible ranges for a model range\n\t */\n\tpublic getVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tif (!this.domNode) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._pixelOffsetCache !== null) {\n\t\t\t// the text is guaranteed to be entirely LTR\n\t\t\tconst startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n\t\t\tif (startOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n\t\t\tif (endOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n\t\t}\n\n\t\treturn this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n\t}\n\n\tprotected _readVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tif (startColumn === endColumn) {\n\t\t\tconst pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n\t\t\tif (pixelOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn [new FloatHorizontalRange(pixelOffset, 0)];\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n\t\t}\n\t}\n\n\tprotected _readPixelOffset(domNode: FastDomNode<HTMLElement>, lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (this.input.isLTR && this._characterMapping.length === 0) {\n\t\t\t// This line has no content\n\t\t\tif (this._containsForeignElements === ForeignElementType.None) {\n\t\t\t\t// We can assume the line is really empty\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._containsForeignElements === ForeignElementType.After) {\n\t\t\t\t// We have foreign elements after the (empty) line\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._containsForeignElements === ForeignElementType.Before) {\n\t\t\t\t// We have foreign elements before the (empty) line\n\t\t\t\treturn this.getWidth(context);\n\t\t\t}\n\t\t\t// We have foreign elements before & after the (empty) line\n\t\t\tconst readingTarget = this._getReadingTarget(domNode);\n\t\t\tif (readingTarget.firstChild) {\n\t\t\t\tcontext.markDidDomLayout();\n\t\t\t\treturn (<HTMLSpanElement>readingTarget.firstChild).offsetWidth;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pixelOffsetCache !== null) {\n\t\t\t// the text is guaranteed to be LTR\n\n\t\t\tconst cachedPixelOffset = this._pixelOffsetCache[column];\n\t\t\tif (cachedPixelOffset !== -1) {\n\t\t\t\treturn cachedPixelOffset;\n\t\t\t}\n\n\t\t\tconst result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n\t\t\tthis._pixelOffsetCache[column] = result;\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._actualReadPixelOffset(domNode, lineNumber, column, context);\n\t}\n\n\tprivate _actualReadPixelOffset(domNode: FastDomNode<HTMLElement>, lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (this._characterMapping.length === 0) {\n\t\t\t// This line has no content\n\t\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n\t\t\tif (!r || r.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn r[0].left;\n\t\t}\n\n\t\tif (this.input.isLTR && column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === ForeignElementType.None) {\n\t\t\t// This branch helps in the case of whitespace only lines which have a width set\n\t\t\treturn this.getWidth(context);\n\t\t}\n\n\t\tconst domPosition = this._characterMapping.getDomPosition(column);\n\n\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n\t\tif (!r || r.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst result = r[0].left;\n\t\tif (this.input.isBasicASCII) {\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\t\tconst expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n\t\t\tif (Math.abs(expectedResult - result) <= 1) {\n\t\t\t\treturn expectedResult;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _readRawVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\n\t\tif (this.input.isLTR && startColumn === 1 && endColumn === this._characterMapping.length) {\n\t\t\t// This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n\n\t\t\treturn [new FloatHorizontalRange(0, this.getWidth(context))];\n\t\t}\n\n\t\tconst startDomPosition = this._characterMapping.getDomPosition(startColumn);\n\t\tconst endDomPosition = this._characterMapping.getDomPosition(endColumn);\n\n\t\treturn RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n\t}\n\n\t/**\n\t * Returns the column for the text found at a specific offset inside a rendered dom node\n\t */\n\tpublic getColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number {\n\t\treturn getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n\t}\n}\n\nclass WebKitRenderedViewLine extends RenderedViewLine {\n\tprotected override _readVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tconst output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n\n\t\tif (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n\t\t\treturn output;\n\t\t}\n\n\t\t// WebKit is buggy and returns an expanded range (to contain words in some cases)\n\t\t// The last client rect is enlarged (I think)\n\t\tif (this.input.isLTR) {\n\t\t\t// This is an attempt to patch things up\n\t\t\t// Find position of last column\n\t\t\tconst endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n\t\t\tif (endPixelOffset !== -1) {\n\t\t\t\tconst lastRange = output[output.length - 1];\n\t\t\t\tif (lastRange.left < endPixelOffset) {\n\t\t\t\t\t// Trim down the width of the last visible range to not go after the last column's position\n\t\t\t\t\tlastRange.width = endPixelOffset - lastRange.left;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\nconst createRenderedLine: (domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType) => RenderedViewLine = (function () {\n\tif (browser.isWebKit) {\n\t\treturn createWebKitRenderedLine;\n\t}\n\treturn createNormalRenderedLine;\n})();\n\nfunction createWebKitRenderedLine(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType): RenderedViewLine {\n\treturn new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsForeignElements);\n}\n\nfunction createNormalRenderedLine(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType): RenderedViewLine {\n\treturn new RenderedViewLine(domNode, renderLineInput, characterMapping, containsForeignElements);\n}\n\nexport function getColumnOfNodeOffset(characterMapping: CharacterMapping, spanNode: HTMLElement, offset: number): number {\n\tconst spanNodeTextContentLength = spanNode.textContent!.length;\n\n\tlet spanIndex = -1;\n\twhile (spanNode) {\n\t\tspanNode = <HTMLElement>spanNode.previousSibling;\n\t\tspanIndex++;\n\t}\n\n\treturn characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '../../../../base/browser/browser.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { IVisibleLine } from '../../view/viewLayer.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { CharacterMapping, ForeignElementType, RenderLineInput, renderViewLine, DomPosition, RenderWhitespace } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLineOptions } from './viewLineOptions.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { OffsetRange } from '../../../common/core/ranges/offsetRange.js';\nimport { InlineDecorationType } from '../../../common/viewModel/inlineDecorations.js';\nimport { TextDirection } from '../../../common/model.js';\n\nconst canUseFastRenderedViewLine = (function () {\n\tif (platform.isNative) {\n\t\t// In VSCode we know very well when the zoom level changes\n\t\treturn true;\n\t}\n\n\tif (platform.isLinux || browser.isFirefox || browser.isSafari) {\n\t\t// On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n\t\t// --\n\t\t// Even though we read character widths correctly, having read them at a specific zoom level\n\t\t// does not mean they are the same at the current zoom level.\n\t\t// --\n\t\t// This could be improved if we ever figure out how to get an event when browsers zoom,\n\t\t// but until then we have to stick with reading client rects.\n\t\t// --\n\t\t// The same has been observed with Firefox on Windows7\n\t\t// --\n\t\t// The same has been oversved with Safari\n\t\treturn false;\n\t}\n\n\treturn true;\n})();\n\nlet monospaceAssumptionsAreValid = true;\n\nexport class ViewLine implements IVisibleLine {\n\n\tpublic static readonly CLASS_NAME = 'view-line';\n\n\tprivate _options: ViewLineOptions;\n\tprivate _isMaybeInvalid: boolean;\n\tprivate _renderedViewLine: IRenderedViewLine | null;\n\n\tconstructor(private readonly _viewGpuContext: ViewGpuContext | undefined, options: ViewLineOptions) {\n\t\tthis._options = options;\n\t\tthis._isMaybeInvalid = true;\n\t\tthis._renderedViewLine = null;\n\t}\n\n\t// --- begin IVisibleLineData\n\n\tpublic getDomNode(): HTMLElement | null {\n\t\tif (this._renderedViewLine && this._renderedViewLine.domNode) {\n\t\t\treturn this._renderedViewLine.domNode.domNode;\n\t\t}\n\t\treturn null;\n\t}\n\tpublic setDomNode(domNode: HTMLElement): void {\n\t\tif (this._renderedViewLine) {\n\t\t\tthis._renderedViewLine.domNode = createFastDomNode(domNode);\n\t\t} else {\n\t\t\tthrow new Error('I have no rendered view line to set the dom node to...');\n\t\t}\n\t}\n\n\tpublic onContentChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onTokensChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onDecorationsChanged(): void {\n\t\tthis._isMaybeInvalid = true;\n\t}\n\tpublic onOptionsChanged(newOptions: ViewLineOptions): void {\n\t\tthis._isMaybeInvalid = true;\n\t\tthis._options = newOptions;\n\t}\n\tpublic onSelectionChanged(): boolean {\n\t\tif (isHighContrast(this._options.themeType) || this._renderedViewLine?.input.renderWhitespace === RenderWhitespace.Selection) {\n\t\t\tthis._isMaybeInvalid = true;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic renderLine(lineNumber: number, deltaTop: number, lineHeight: number, viewportData: ViewportData, sb: StringBuilder): boolean {\n\t\tif (this._options.useGpu && this._viewGpuContext?.canRender(this._options, viewportData, lineNumber)) {\n\t\t\tthis._renderedViewLine?.domNode?.domNode.remove();\n\t\t\tthis._renderedViewLine = null;\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this._isMaybeInvalid === false) {\n\t\t\t// it appears that nothing relevant has changed\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._isMaybeInvalid = false;\n\n\t\tconst lineData = viewportData.getViewLineRenderingData(lineNumber);\n\t\tconst options = this._options;\n\t\tconst actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n\t\tconst renderWhitespace = (lineData.hasVariableFonts || options.experimentalWhitespaceRendering === 'off') ? options.renderWhitespace : 'none';\n\t\tconst allowFastRendering = !lineData.hasVariableFonts;\n\n\t\t// Only send selection information when needed for rendering whitespace\n\t\tlet selectionsOnLine: OffsetRange[] | null = null;\n\t\tif (isHighContrast(options.themeType) || renderWhitespace === 'selection') {\n\t\t\tconst selections = viewportData.selections;\n\t\t\tfor (const selection of selections) {\n\n\t\t\t\tif (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n\t\t\t\tconst endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n\n\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\tif (isHighContrast(options.themeType)) {\n\t\t\t\t\t\tactualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', InlineDecorationType.Regular));\n\t\t\t\t\t}\n\t\t\t\t\tif (renderWhitespace === 'selection') {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectionsOnLine.push(new OffsetRange(startColumn - 1, endColumn - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst renderLineInput = new RenderLineInput(\n\t\t\toptions.useMonospaceOptimizations,\n\t\t\toptions.canUseHalfwidthRightwardsArrow,\n\t\t\tlineData.content,\n\t\t\tlineData.continuesWithWrappedLine,\n\t\t\tlineData.isBasicASCII,\n\t\t\tlineData.containsRTL,\n\t\t\tlineData.minColumn - 1,\n\t\t\tlineData.tokens,\n\t\t\tactualInlineDecorations,\n\t\t\tlineData.tabSize,\n\t\t\tlineData.startVisibleColumn,\n\t\t\toptions.spaceWidth,\n\t\t\toptions.middotWidth,\n\t\t\toptions.wsmiddotWidth,\n\t\t\toptions.stopRenderingLineAfter,\n\t\t\trenderWhitespace,\n\t\t\toptions.renderControlCharacters,\n\t\t\toptions.fontLigatures !== EditorFontLigatures.OFF,\n\t\t\tselectionsOnLine,\n\t\t\tlineData.textDirection,\n\t\t\toptions.verticalScrollbarSize\n\t\t);\n\n\t\tif (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n\t\t\t// no need to do anything, we have the same render input\n\t\t\treturn false;\n\t\t}\n\n\t\tsb.appendString('<div ');\n\t\tif (lineData.textDirection === TextDirection.RTL) {\n\t\t\tsb.appendString('dir=\"rtl\" ');\n\t\t} else if (lineData.containsRTL) {\n\t\t\tsb.appendString('dir=\"ltr\" ');\n\t\t}\n\t\tsb.appendString('style=\"top:');\n\t\tsb.appendString(String(deltaTop));\n\t\tsb.appendString('px;height:');\n\t\tsb.appendString(String(lineHeight));\n\t\tsb.appendString('px;line-height:');\n\t\tsb.appendString(String(lineHeight));\n\t\tif (lineData.textDirection === TextDirection.RTL) {\n\t\t\tsb.appendString('px;padding-right:');\n\t\t\tsb.appendString(String(options.verticalScrollbarSize));\n\t\t}\n\t\tsb.appendString('px;\" class=\"');\n\t\tsb.appendString(ViewLine.CLASS_NAME);\n\t\tsb.appendString('\">');\n\n\t\tconst output = renderViewLine(renderLineInput, sb);\n\n\t\tsb.appendString('</div>');\n\n\t\tlet renderedViewLine: IRenderedViewLine | null = null;\n\t\tif (\n\t\t\tallowFastRendering\n\t\t\t&& monospaceAssumptionsAreValid\n\t\t\t&& canUseFastRenderedViewLine\n\t\t\t&& lineData.isBasicASCII\n\t\t\t&& renderLineInput.isLTR\n\t\t\t&& options.useMonospaceOptimizations\n\t\t\t&& output.containsForeignElements === ForeignElementType.None\n\t\t) {\n\t\t\trenderedViewLine = new FastRenderedViewLine(\n\t\t\t\tthis._renderedViewLine ? this._renderedViewLine.domNode : null,\n\t\t\t\trenderLineInput,\n\t\t\t\toutput.characterMapping\n\t\t\t);\n\t\t}\n\n\t\tif (!renderedViewLine) {\n\t\t\trenderedViewLine = createRenderedLine(\n\t\t\t\tthis._renderedViewLine ? this._renderedViewLine.domNode : null,\n\t\t\t\trenderLineInput,\n\t\t\t\toutput.characterMapping,\n\t\t\t\toutput.containsForeignElements\n\t\t\t);\n\t\t}\n\n\t\tthis._renderedViewLine = renderedViewLine;\n\n\t\treturn true;\n\t}\n\n\tpublic layoutLine(lineNumber: number, deltaTop: number, lineHeight: number): void {\n\t\tif (this._renderedViewLine && this._renderedViewLine.domNode) {\n\t\t\tthis._renderedViewLine.domNode.setTop(deltaTop);\n\t\t\tthis._renderedViewLine.domNode.setHeight(lineHeight);\n\t\t\tthis._renderedViewLine.domNode.setLineHeight(lineHeight);\n\t\t}\n\t}\n\n\t// --- end IVisibleLineData\n\n\tpublic isRenderedRTL(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._renderedViewLine.input.textDirection === TextDirection.RTL;\n\t}\n\n\tpublic getWidth(context: DomReadingContext | null): number {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._renderedViewLine.getWidth(context);\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn true;\n\t\t}\n\t\treturn this._renderedViewLine.getWidthIsFast();\n\t}\n\n\tpublic needsMonospaceFontCheck(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (this._renderedViewLine instanceof FastRenderedViewLine);\n\t}\n\n\tpublic monospaceAssumptionsAreValid(): boolean {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn monospaceAssumptionsAreValid;\n\t\t}\n\t\tif (this._renderedViewLine instanceof FastRenderedViewLine) {\n\t\t\treturn this._renderedViewLine.monospaceAssumptionsAreValid();\n\t\t}\n\t\treturn monospaceAssumptionsAreValid;\n\t}\n\n\tpublic onMonospaceAssumptionsInvalidated(): void {\n\t\tif (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n\t\t\tthis._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n\t\t}\n\t}\n\n\tpublic getVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): VisibleRanges | null {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn null;\n\t\t}\n\n\t\tstartColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n\t\tendColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n\n\t\tconst stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n\n\t\tif (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n\t\t\t// This range is obviously not visible\n\t\t\treturn new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n\t\t}\n\n\t\tif (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n\t\t\tstartColumn = stopRenderingLineAfter + 1;\n\t\t}\n\n\t\tif (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n\t\t\tendColumn = stopRenderingLineAfter + 1;\n\t\t}\n\n\t\tconst horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n\t\tif (horizontalRanges && horizontalRanges.length > 0) {\n\t\t\treturn new VisibleRanges(false, horizontalRanges);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number {\n\t\tif (!this._renderedViewLine) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n\t}\n}\n\ninterface IRenderedViewLine {\n\tdomNode: FastDomNode<HTMLElement> | null;\n\treadonly input: RenderLineInput;\n\tgetWidth(context: DomReadingContext | null): number;\n\tgetWidthIsFast(): boolean;\n\tgetVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null;\n\tgetColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number;\n}\n\nconst enum Constants {\n\t/**\n\t * It seems that rounding errors occur with long lines, so the purely multiplication based\n\t * method is only viable for short lines. For longer lines, we look up the real position of\n\t * every 300th character and use multiplication based on that.\n\t *\n\t * See https://github.com/microsoft/vscode/issues/33178\n\t */\n\tMaxMonospaceDistance = 300\n}\n\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine implements IRenderedViewLine {\n\n\tpublic domNode: FastDomNode<HTMLElement> | null;\n\tpublic readonly input: RenderLineInput;\n\n\tprivate readonly _characterMapping: CharacterMapping;\n\tprivate readonly _charWidth: number;\n\tprivate readonly _keyColumnPixelOffsetCache: Float32Array | null;\n\tprivate _cachedWidth: number = -1;\n\n\tconstructor(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping) {\n\t\tthis.domNode = domNode;\n\t\tthis.input = renderLineInput;\n\t\tconst keyColumnCount = Math.floor(renderLineInput.lineContent.length / Constants.MaxMonospaceDistance);\n\t\tif (keyColumnCount > 0) {\n\t\t\tthis._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n\t\t\tfor (let i = 0; i < keyColumnCount; i++) {\n\t\t\t\tthis._keyColumnPixelOffsetCache[i] = -1;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._keyColumnPixelOffsetCache = null;\n\t\t}\n\n\t\tthis._characterMapping = characterMapping;\n\t\tthis._charWidth = renderLineInput.spaceWidth;\n\t}\n\n\tpublic getWidth(context: DomReadingContext | null): number {\n\t\tif (!this.domNode || this.input.lineContent.length < Constants.MaxMonospaceDistance) {\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n\t\t\treturn Math.round(this._charWidth * horizontalOffset);\n\t\t}\n\t\tif (this._cachedWidth === -1) {\n\t\t\tthis._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n\t\t\tcontext?.markDidDomLayout();\n\t\t}\n\t\treturn this._cachedWidth;\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\treturn (this.input.lineContent.length < Constants.MaxMonospaceDistance) || this._cachedWidth !== -1;\n\t}\n\n\tpublic monospaceAssumptionsAreValid(): boolean {\n\t\tif (!this.domNode) {\n\t\t\treturn monospaceAssumptionsAreValid;\n\t\t}\n\t\tif (this.input.lineContent.length < Constants.MaxMonospaceDistance) {\n\t\t\tconst expectedWidth = this.getWidth(null);\n\t\t\tconst actualWidth = (<HTMLSpanElement>this.domNode.domNode.firstChild).offsetWidth;\n\t\t\tif (Math.abs(expectedWidth - actualWidth) >= 2) {\n\t\t\t\t// more than 2px off\n\t\t\t\tconsole.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n\t\t\t\tmonospaceAssumptionsAreValid = false;\n\t\t\t}\n\t\t}\n\t\treturn monospaceAssumptionsAreValid;\n\t}\n\n\tpublic toSlowRenderedLine(): RenderedViewLine {\n\t\treturn createRenderedLine(this.domNode, this.input, this._characterMapping, ForeignElementType.None);\n\t}\n\n\tpublic getVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tconst startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n\t\tconst endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n\t\treturn [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n\t}\n\n\tprivate _getColumnPixelOffset(lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (column <= Constants.MaxMonospaceDistance) {\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\t\treturn this._charWidth * horizontalOffset;\n\t\t}\n\n\t\tconst keyColumnOrdinal = Math.floor((column - 1) / Constants.MaxMonospaceDistance) - 1;\n\t\tconst keyColumn = (keyColumnOrdinal + 1) * Constants.MaxMonospaceDistance + 1;\n\t\tlet keyColumnPixelOffset = -1;\n\t\tif (this._keyColumnPixelOffsetCache) {\n\t\t\tkeyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n\t\t\tif (keyColumnPixelOffset === -1) {\n\t\t\t\tkeyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n\t\t\t\tthis._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n\t\t\t}\n\t\t}\n\n\t\tif (keyColumnPixelOffset === -1) {\n\t\t\t// Could not read actual key column pixel offset\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\t\treturn this._charWidth * horizontalOffset;\n\t\t}\n\n\t\tconst keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\treturn keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n\t}\n\n\tprivate _getReadingTarget(myDomNode: FastDomNode<HTMLElement>): HTMLElement {\n\t\treturn <HTMLSpanElement>myDomNode.domNode.firstChild;\n\t}\n\n\tprivate _actualReadPixelOffset(lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (!this.domNode) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst domPosition = this._characterMapping.getDomPosition(column);\n\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n\t\tif (!r || r.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn r[0].left;\n\t}\n\n\tpublic getColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number {\n\t\treturn getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n\t}\n}\n\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine implements IRenderedViewLine {\n\n\tpublic domNode: FastDomNode<HTMLElement> | null;\n\tpublic readonly input: RenderLineInput;\n\n\tprotected readonly _characterMapping: CharacterMapping;\n\tprivate readonly _isWhitespaceOnly: boolean;\n\tprivate readonly _containsForeignElements: ForeignElementType;\n\tprivate _cachedWidth: number;\n\n\t/**\n\t * This is a map that is used only when the line is guaranteed to be rendered LTR and has no RTL text.\n\t */\n\tprivate readonly _pixelOffsetCache: Float32Array | null;\n\n\tconstructor(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType) {\n\t\tthis.domNode = domNode;\n\t\tthis.input = renderLineInput;\n\t\tthis._characterMapping = characterMapping;\n\t\tthis._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n\t\tthis._containsForeignElements = containsForeignElements;\n\t\tthis._cachedWidth = -1;\n\n\t\tthis._pixelOffsetCache = null;\n\t\tif (renderLineInput.isLTR) {\n\t\t\tthis._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n\t\t\tfor (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n\t\t\t\tthis._pixelOffsetCache[column] = -1;\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- Reading from the DOM methods\n\n\tprotected _getReadingTarget(myDomNode: FastDomNode<HTMLElement>): HTMLElement {\n\t\treturn <HTMLSpanElement>myDomNode.domNode.firstChild;\n\t}\n\n\t/**\n\t * Width of the line in pixels\n\t */\n\tpublic getWidth(context: DomReadingContext | null): number {\n\t\tif (!this.domNode) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (this._cachedWidth === -1) {\n\t\t\tthis._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n\t\t\tcontext?.markDidDomLayout();\n\t\t}\n\t\treturn this._cachedWidth;\n\t}\n\n\tpublic getWidthIsFast(): boolean {\n\t\tif (this._cachedWidth === -1) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Visible ranges for a model range\n\t */\n\tpublic getVisibleRangesForRange(lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tif (!this.domNode) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._pixelOffsetCache !== null) {\n\t\t\t// the text is guaranteed to be entirely LTR\n\t\t\tconst startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n\t\t\tif (startOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n\t\t\tif (endOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n\t\t}\n\n\t\treturn this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n\t}\n\n\tprotected _readVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tif (startColumn === endColumn) {\n\t\t\tconst pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n\t\t\tif (pixelOffset === -1) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\treturn [new FloatHorizontalRange(pixelOffset, 0)];\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n\t\t}\n\t}\n\n\tprotected _readPixelOffset(domNode: FastDomNode<HTMLElement>, lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (this.input.isLTR && this._characterMapping.length === 0) {\n\t\t\t// This line has no content\n\t\t\tif (this._containsForeignElements === ForeignElementType.None) {\n\t\t\t\t// We can assume the line is really empty\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._containsForeignElements === ForeignElementType.After) {\n\t\t\t\t// We have foreign elements after the (empty) line\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this._containsForeignElements === ForeignElementType.Before) {\n\t\t\t\t// We have foreign elements before the (empty) line\n\t\t\t\treturn this.getWidth(context);\n\t\t\t}\n\t\t\t// We have foreign elements before & after the (empty) line\n\t\t\tconst readingTarget = this._getReadingTarget(domNode);\n\t\t\tif (readingTarget.firstChild) {\n\t\t\t\tcontext.markDidDomLayout();\n\t\t\t\treturn (<HTMLSpanElement>readingTarget.firstChild).offsetWidth;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pixelOffsetCache !== null) {\n\t\t\t// the text is guaranteed to be LTR\n\n\t\t\tconst cachedPixelOffset = this._pixelOffsetCache[column];\n\t\t\tif (cachedPixelOffset !== -1) {\n\t\t\t\treturn cachedPixelOffset;\n\t\t\t}\n\n\t\t\tconst result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n\t\t\tthis._pixelOffsetCache[column] = result;\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._actualReadPixelOffset(domNode, lineNumber, column, context);\n\t}\n\n\tprivate _actualReadPixelOffset(domNode: FastDomNode<HTMLElement>, lineNumber: number, column: number, context: DomReadingContext): number {\n\t\tif (this._characterMapping.length === 0) {\n\t\t\t// This line has no content\n\t\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n\t\t\tif (!r || r.length === 0) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn r[0].left;\n\t\t}\n\n\t\tif (this.input.isLTR && column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === ForeignElementType.None) {\n\t\t\t// This branch helps in the case of whitespace only lines which have a width set\n\t\t\treturn this.getWidth(context);\n\t\t}\n\n\t\tconst domPosition = this._characterMapping.getDomPosition(column);\n\n\t\tconst r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n\t\tif (!r || r.length === 0) {\n\t\t\treturn -1;\n\t\t}\n\t\tconst result = r[0].left;\n\t\tif (this.input.isBasicASCII) {\n\t\t\tconst horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n\t\t\tconst expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n\t\t\tif (Math.abs(expectedResult - result) <= 1) {\n\t\t\t\treturn expectedResult;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _readRawVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\n\t\tif (this.input.isLTR && startColumn === 1 && endColumn === this._characterMapping.length) {\n\t\t\t// This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n\n\t\t\treturn [new FloatHorizontalRange(0, this.getWidth(context))];\n\t\t}\n\n\t\tconst startDomPosition = this._characterMapping.getDomPosition(startColumn);\n\t\tconst endDomPosition = this._characterMapping.getDomPosition(endColumn);\n\n\t\treturn RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n\t}\n\n\t/**\n\t * Returns the column for the text found at a specific offset inside a rendered dom node\n\t */\n\tpublic getColumnOfNodeOffset(spanNode: HTMLElement, offset: number): number {\n\t\treturn getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n\t}\n}\n\nclass WebKitRenderedViewLine extends RenderedViewLine {\n\tprotected override _readVisibleRangesForRange(domNode: FastDomNode<HTMLElement>, lineNumber: number, startColumn: number, endColumn: number, context: DomReadingContext): FloatHorizontalRange[] | null {\n\t\tconst output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n\n\t\tif (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n\t\t\treturn output;\n\t\t}\n\n\t\t// WebKit is buggy and returns an expanded range (to contain words in some cases)\n\t\t// The last client rect is enlarged (I think)\n\t\tif (this.input.isLTR) {\n\t\t\t// This is an attempt to patch things up\n\t\t\t// Find position of last column\n\t\t\tconst endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n\t\t\tif (endPixelOffset !== -1) {\n\t\t\t\tconst lastRange = output[output.length - 1];\n\t\t\t\tif (lastRange.left < endPixelOffset) {\n\t\t\t\t\t// Trim down the width of the last visible range to not go after the last column's position\n\t\t\t\t\tlastRange.width = endPixelOffset - lastRange.left;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\nconst createRenderedLine: (domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType) => RenderedViewLine = (function () {\n\tif (browser.isWebKit) {\n\t\treturn createWebKitRenderedLine;\n\t}\n\treturn createNormalRenderedLine;\n})();\n\nfunction createWebKitRenderedLine(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType): RenderedViewLine {\n\treturn new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsForeignElements);\n}\n\nfunction createNormalRenderedLine(domNode: FastDomNode<HTMLElement> | null, renderLineInput: RenderLineInput, characterMapping: CharacterMapping, containsForeignElements: ForeignElementType): RenderedViewLine {\n\treturn new RenderedViewLine(domNode, renderLineInput, characterMapping, containsForeignElements);\n}\n\nexport function getColumnOfNodeOffset(characterMapping: CharacterMapping, spanNode: HTMLElement, offset: number): number {\n\tconst spanNodeTextContentLength = spanNode.textContent!.length;\n\n\tlet spanIndex = -1;\n\twhile (spanNode) {\n\t\tspanNode = <HTMLElement>spanNode.previousSibling;\n\t\tspanIndex++;\n\t}\n\n\treturn characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/blockDecorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/blockDecorations/blockDecorations.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/blockDecorations/vs/editor/browser/viewParts/blockDecorations/blockDecorations.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createFastDomNode, FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\n\nexport class BlockDecorations extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly blocks: FastDomNode<HTMLElement>[] = [];\n\n\tprivate contentWidth: number = -1;\n\tprivate contentLeft: number = 0;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis.domNode = createFastDomNode<HTMLElement>(document.createElement('div'));\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setClassName('blockDecorations-container');\n\n\t\tthis.update();\n\t}\n\n\tprivate update(): boolean {\n\t\tlet didChange = false;\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n\n\t\tif (this.contentWidth !== newContentWidth) {\n\t\t\tthis.contentWidth = newContentWidth;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\tconst newContentLeft = layoutInfo.contentLeft;\n\t\tif (this.contentLeft !== newContentLeft) {\n\t\t\tthis.contentLeft = newContentLeft;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this.update();\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollLeftChanged;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tlet count = 0;\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tfor (const decoration of decorations) {\n\t\t\tif (!decoration.options.blockClassName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet block = this.blocks[count];\n\t\t\tif (!block) {\n\t\t\t\tblock = this.blocks[count] = createFastDomNode(document.createElement('div'));\n\t\t\t\tthis.domNode.appendChild(block);\n\t\t\t}\n\n\t\t\tlet top: number;\n\t\t\tlet bottom: number;\n\n\t\t\tif (decoration.options.blockIsAfterEnd) {\n\t\t\t\t// range must be empty\n\t\t\t\ttop = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n\t\t\t\tbottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n\t\t\t} else {\n\t\t\t\ttop = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n\t\t\t\tbottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n\t\t\t\t\t? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n\t\t\t\t\t: ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n\t\t\t}\n\n\t\t\tconst [paddingTop, paddingRight, paddingBottom, paddingLeft] = decoration.options.blockPadding ?? [0, 0, 0, 0];\n\n\t\t\tblock.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n\t\t\tblock.setLeft(this.contentLeft - paddingLeft);\n\t\t\tblock.setWidth(this.contentWidth + paddingLeft + paddingRight);\n\t\t\tblock.setTop(top - ctx.scrollTop - paddingTop);\n\t\t\tblock.setHeight(bottom - top + paddingTop + paddingBottom);\n\n\t\t\tcount++;\n\t\t}\n\n\t\tfor (let i = count; i < this.blocks.length; i++) {\n\t\t\tthis.blocks[i].domNode.remove();\n\t\t}\n\t\tthis.blocks.length = count;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createFastDomNode, FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport './blockDecorations.css';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\n\nexport class BlockDecorations extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly blocks: FastDomNode<HTMLElement>[] = [];\n\n\tprivate contentWidth: number = -1;\n\tprivate contentLeft: number = 0;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis.domNode = createFastDomNode<HTMLElement>(document.createElement('div'));\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setClassName('blockDecorations-container');\n\n\t\tthis.update();\n\t}\n\n\tprivate update(): boolean {\n\t\tlet didChange = false;\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst newContentWidth = layoutInfo.contentWidth - layoutInfo.verticalScrollbarWidth;\n\n\t\tif (this.contentWidth !== newContentWidth) {\n\t\t\tthis.contentWidth = newContentWidth;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\tconst newContentLeft = layoutInfo.contentLeft;\n\t\tif (this.contentLeft !== newContentLeft) {\n\t\t\tthis.contentLeft = newContentLeft;\n\t\t\tdidChange = true;\n\t\t}\n\n\t\treturn didChange;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this.update();\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollLeftChanged;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tlet count = 0;\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tfor (const decoration of decorations) {\n\t\t\tif (!decoration.options.blockClassName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet block = this.blocks[count];\n\t\t\tif (!block) {\n\t\t\t\tblock = this.blocks[count] = createFastDomNode(document.createElement('div'));\n\t\t\t\tthis.domNode.appendChild(block);\n\t\t\t}\n\n\t\t\tlet top: number;\n\t\t\tlet bottom: number;\n\n\t\t\tif (decoration.options.blockIsAfterEnd) {\n\t\t\t\t// range must be empty\n\t\t\t\ttop = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, false);\n\t\t\t\tbottom = ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n\t\t\t} else {\n\t\t\t\ttop = ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, true);\n\t\t\t\tbottom = decoration.range.isEmpty() && !decoration.options.blockDoesNotCollapse\n\t\t\t\t\t? ctx.getVerticalOffsetForLineNumber(decoration.range.startLineNumber, false)\n\t\t\t\t\t: ctx.getVerticalOffsetAfterLineNumber(decoration.range.endLineNumber, true);\n\t\t\t}\n\n\t\t\tconst [paddingTop, paddingRight, paddingBottom, paddingLeft] = decoration.options.blockPadding ?? [0, 0, 0, 0];\n\n\t\t\tblock.setClassName('blockDecorations-block ' + decoration.options.blockClassName);\n\t\t\tblock.setLeft(this.contentLeft - paddingLeft);\n\t\t\tblock.setWidth(this.contentWidth + paddingLeft + paddingRight);\n\t\t\tblock.setTop(top - ctx.scrollTop - paddingTop);\n\t\t\tblock.setHeight(bottom - top + paddingTop + paddingBottom);\n\n\t\t\tcount++;\n\t\t}\n\n\t\tfor (let i = count; i < this.blocks.length; i++) {\n\t\t\tthis.blocks[i].domNode.remove();\n\t\t}\n\t\tthis.blocks.length = count;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/contentWidgets.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/contentWidgets/vs/editor/browser/viewParts/contentWidgets/contentWidgets.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ContentWidgetPositionPreference, IContentWidget, IContentWidgetRenderedCoordinate } from '../../editorBrowser.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IDimension } from '../../../common/core/2d/dimension.js';\nimport { PositionAffinity } from '../../../common/model.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { IViewModel } from '../../../common/viewModel.js';\n\n/**\n * This view part is responsible for rendering the content widgets, which are\n * used for rendering elements that are associated to an editor position,\n * such as suggestions or the parameter hints.\n */\nexport class ViewContentWidgets extends ViewPart {\n\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate _widgets: { [key: string]: Widget };\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tpublic overflowingContentWidgetsDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._viewDomNode = viewDomNode;\n\t\tthis._widgets = {};\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.domNode, PartFingerprint.ContentWidgets);\n\t\tthis.domNode.setClassName('contentWidgets');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setTop(0);\n\n\t\tthis.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.overflowingContentWidgetsDomNode, PartFingerprint.OverflowingContentWidgets);\n\t\tthis.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _updateAnchorsViewPositions(): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].updateAnchorViewPosition();\n\t\t}\n\t}\n\n\tpublic addWidget(_widget: IContentWidget): void {\n\t\tconst myWidget = new Widget(this._context, this._viewDomNode, _widget);\n\t\tthis._widgets[myWidget.id] = myWidget;\n\n\t\tif (myWidget.allowEditorOverflow) {\n\t\t\tthis.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n\t\t} else {\n\t\t\tthis.domNode.appendChild(myWidget.domNode);\n\t\t}\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic setWidgetPosition(widget: IContentWidget, primaryAnchor: IPosition | null, secondaryAnchor: IPosition | null, preference: ContentWidgetPositionPreference[] | null, affinity: PositionAffinity | null): void {\n\t\tconst myWidget = this._widgets[widget.getId()];\n\t\tmyWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic removeWidget(widget: IContentWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst myWidget = this._widgets[widgetId];\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tconst domNode = myWidget.domNode.domNode;\n\t\t\tdomNode.remove();\n\t\t\tdomNode.removeAttribute('monaco-visible-content-widget');\n\n\t\t\tthis.setShouldRender();\n\t\t}\n\t}\n\n\tpublic shouldSuppressMouseDownOnWidget(widgetId: string): boolean {\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\treturn this._widgets[widgetId].suppressMouseDown;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic onBeforeRender(viewportData: ViewportData): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onBeforeRender(viewportData);\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].render(ctx);\n\t\t}\n\t}\n}\n\ninterface IBoxLayoutResult {\n\tfitsAbove: boolean;\n\taboveTop: number;\n\n\tfitsBelow: boolean;\n\tbelowTop: number;\n\n\tleft: number;\n}\n\ninterface IOffViewportRenderData {\n\tkind: 'offViewport';\n\tpreserveFocus: boolean;\n}\n\ninterface IInViewportRenderData {\n\tkind: 'inViewport';\n\tcoordinate: Coordinate;\n\tposition: ContentWidgetPositionPreference;\n}\n\ntype IRenderData = IInViewportRenderData | IOffViewportRenderData;\n\nclass Widget {\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate readonly _actual: IContentWidget;\n\n\tpublic readonly domNode: FastDomNode<HTMLElement>;\n\tpublic readonly id: string;\n\tpublic readonly allowEditorOverflow: boolean;\n\tpublic readonly suppressMouseDown: boolean;\n\n\tprivate readonly _fixedOverflowWidgets: boolean;\n\tprivate _contentWidth: number;\n\tprivate _contentLeft: number;\n\n\tprivate _primaryAnchor: PositionPair = new PositionPair(null, null);\n\tprivate _secondaryAnchor: PositionPair = new PositionPair(null, null);\n\tprivate _affinity: PositionAffinity | null;\n\tprivate _preference: ContentWidgetPositionPreference[] | null;\n\tprivate _cachedDomNodeOffsetWidth: number;\n\tprivate _cachedDomNodeOffsetHeight: number;\n\tprivate _maxWidth: number;\n\tprivate _isVisible: boolean;\n\n\tprivate _renderData: IRenderData | null;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>, actual: IContentWidget) {\n\t\tthis._context = context;\n\t\tthis._viewDomNode = viewDomNode;\n\t\tthis._actual = actual;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst allowOverflow = options.get(EditorOption.allowOverflow);\n\n\t\tthis.domNode = createFastDomNode(this._actual.getDomNode());\n\t\tthis.id = this._actual.getId();\n\t\tthis.allowEditorOverflow = (this._actual.allowEditorOverflow || false) && allowOverflow;\n\t\tthis.suppressMouseDown = this._actual.suppressMouseDown || false;\n\n\t\tthis._fixedOverflowWidgets = options.get(EditorOption.fixedOverflowWidgets);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tthis._affinity = null;\n\t\tthis._preference = [];\n\t\tthis._cachedDomNodeOffsetWidth = -1;\n\t\tthis._cachedDomNodeOffsetHeight = -1;\n\t\tthis._maxWidth = this._getMaxWidth();\n\t\tthis._isVisible = false;\n\t\tthis._renderData = null;\n\n\t\tthis.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n\t\tthis.domNode.setDisplay('none');\n\t\tthis.domNode.setVisibility('hidden');\n\t\tthis.domNode.setAttribute('widgetId', this.id);\n\t\tthis.domNode.setMaxWidth(this._maxWidth);\n\t}\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): void {\n\t\tconst options = this._context.configuration.options;\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\t\tthis._maxWidth = this._getMaxWidth();\n\t\t}\n\t}\n\n\tpublic updateAnchorViewPosition(): void {\n\t\tthis._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n\t}\n\n\tprivate _setPosition(affinity: PositionAffinity | null, primaryAnchor: IPosition | null, secondaryAnchor: IPosition | null): void {\n\t\tthis._affinity = affinity;\n\t\tthis._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n\t\tthis._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n\n\t\tfunction getValidPositionPair(position: IPosition | null, viewModel: IViewModel, affinity: PositionAffinity | null): PositionPair {\n\t\t\tif (!position) {\n\t\t\t\treturn new PositionPair(null, null);\n\t\t\t}\n\t\t\t// Do not trust that widgets give a valid position\n\t\t\tconst validModelPosition = viewModel.model.validatePosition(position);\n\t\t\tif (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n\t\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity ?? undefined);\n\t\t\t\treturn new PositionPair(position, viewPosition);\n\t\t\t}\n\t\t\treturn new PositionPair(position, null);\n\t\t}\n\t}\n\n\tprivate _getMaxWidth(): number {\n\t\tconst elDocument = this.domNode.domNode.ownerDocument;\n\t\tconst elWindow = elDocument.defaultView;\n\t\treturn (\n\t\t\tthis.allowEditorOverflow\n\t\t\t\t? elWindow?.innerWidth || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n\t\t\t\t: this._contentWidth\n\t\t);\n\t}\n\n\tpublic setPosition(primaryAnchor: IPosition | null, secondaryAnchor: IPosition | null, preference: ContentWidgetPositionPreference[] | null, affinity: PositionAffinity | null): void {\n\t\tthis._setPosition(affinity, primaryAnchor, secondaryAnchor);\n\t\tthis._preference = preference;\n\t\tif (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n\t\t\t// this content widget would like to be visible if possible\n\t\t\t// we change it from `display:none` to `display:block` even if it\n\t\t\t// might be outside the viewport such that we can measure its size\n\t\t\t// in `prepareRender`\n\t\t\tthis.domNode.setDisplay('block');\n\t\t} else {\n\t\t\tthis.domNode.setDisplay('none');\n\t\t}\n\t\tthis._cachedDomNodeOffsetWidth = -1;\n\t\tthis._cachedDomNodeOffsetHeight = -1;\n\t}\n\n\tprivate _layoutBoxInViewport(anchor: AnchorCoordinate, width: number, height: number, ctx: RenderingContext): IBoxLayoutResult {\n\t\t// Our visible box is split horizontally by the current line => 2 boxes\n\n\t\t// a) the box above the line\n\t\tconst aboveLineTop = anchor.top;\n\t\tconst heightAvailableAboveLine = aboveLineTop;\n\n\t\t// b) the box under the line\n\t\tconst underLineTop = anchor.top + anchor.height;\n\t\tconst heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n\n\t\tconst aboveTop = aboveLineTop - height;\n\t\tconst fitsAbove = (heightAvailableAboveLine >= height);\n\t\tconst belowTop = underLineTop;\n\t\tconst fitsBelow = (heightAvailableUnderLine >= height);\n\n\t\t// And its left\n\t\tlet left = anchor.left;\n\t\tif (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n\t\t\tleft = ctx.scrollLeft + ctx.viewportWidth - width;\n\t\t}\n\t\tif (left < ctx.scrollLeft) {\n\t\t\tleft = ctx.scrollLeft;\n\t\t}\n\n\t\treturn { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n\t}\n\n\tprivate _layoutHorizontalSegmentInPage(windowSize: dom.Dimension, domNodePosition: dom.IDomNodePagePosition, left: number, width: number): [number, number] {\n\t\t// Leave some clearance to the left/right\n\t\tconst LEFT_PADDING = 15;\n\t\tconst RIGHT_PADDING = 15;\n\n\t\t// Initially, the limits are defined as the dom node limits\n\t\tconst MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n\t\tconst MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n\n\t\tconst elDocument = this._viewDomNode.domNode.ownerDocument;\n\t\tconst elWindow = elDocument.defaultView;\n\t\tlet absoluteLeft = domNodePosition.left + left - (elWindow?.scrollX ?? 0);\n\n\t\tif (absoluteLeft + width > MAX_LIMIT) {\n\t\t\tconst delta = absoluteLeft - (MAX_LIMIT - width);\n\t\t\tabsoluteLeft -= delta;\n\t\t\tleft -= delta;\n\t\t}\n\n\t\tif (absoluteLeft < MIN_LIMIT) {\n\t\t\tconst delta = absoluteLeft - MIN_LIMIT;\n\t\t\tabsoluteLeft -= delta;\n\t\t\tleft -= delta;\n\t\t}\n\n\t\treturn [left, absoluteLeft];\n\t}\n\n\tprivate _layoutBoxInPage(anchor: AnchorCoordinate, width: number, height: number, ctx: RenderingContext): IBoxLayoutResult | null {\n\t\tconst aboveTop = anchor.top - height;\n\t\tconst belowTop = anchor.top + anchor.height;\n\n\t\tconst domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n\t\tconst elDocument = this._viewDomNode.domNode.ownerDocument;\n\t\tconst elWindow = elDocument.defaultView;\n\t\tconst absoluteAboveTop = domNodePosition.top + aboveTop - (elWindow?.scrollY ?? 0);\n\t\tconst absoluteBelowTop = domNodePosition.top + belowTop - (elWindow?.scrollY ?? 0);\n\n\t\tconst windowSize = dom.getClientArea(elDocument.body);\n\t\tconst [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n\n\t\t// Leave some clearance to the top/bottom\n\t\tconst TOP_PADDING = 22;\n\t\tconst BOTTOM_PADDING = 22;\n\n\t\tconst fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n\t\tconst fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n\n\t\tif (this._fixedOverflowWidgets) {\n\t\t\treturn {\n\t\t\t\tfitsAbove,\n\t\t\t\taboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n\t\t\t\tfitsBelow,\n\t\t\t\tbelowTop: absoluteBelowTop,\n\t\t\t\tleft: absoluteAboveLeft\n\t\t\t};\n\t\t}\n\n\t\treturn { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n\t}\n\n\tprivate _prepareRenderWidgetAtExactPositionOverflowing(topLeft: Coordinate): Coordinate {\n\t\treturn new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n\t}\n\n\t/**\n\t * Compute the coordinates above and below the primary and secondary anchors.\n\t * The content widget *must* touch the primary anchor.\n\t * The content widget should touch if possible the secondary anchor.\n\t */\n\tprivate _getAnchorsCoordinates(ctx: RenderingContext): { primary: AnchorCoordinate | null; secondary: AnchorCoordinate | null } {\n\t\tconst primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity);\n\t\tconst secondaryViewPosition = (this._secondaryAnchor.viewPosition?.lineNumber === this._primaryAnchor.viewPosition?.lineNumber ? this._secondaryAnchor.viewPosition : null);\n\t\tconst secondary = getCoordinates(secondaryViewPosition, this._affinity);\n\t\treturn { primary, secondary };\n\n\t\tfunction getCoordinates(position: Position | null, affinity: PositionAffinity | null): AnchorCoordinate | null {\n\t\t\tif (!position) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst horizontalPosition = ctx.visibleRangeForPosition(position);\n\t\t\tif (!horizontalPosition) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Left-align widgets that should appear :before content\n\t\t\tconst left = (position.column === 1 && affinity === PositionAffinity.LeftOfInjectedText ? 0 : horizontalPosition.left);\n\t\t\tconst top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n\t\t\tconst lineHeight = ctx.getLineHeightForLineNumber(position.lineNumber);\n\t\t\treturn new AnchorCoordinate(top, left, lineHeight);\n\t\t}\n\t}\n\n\tprivate _reduceAnchorCoordinates(primary: AnchorCoordinate, secondary: AnchorCoordinate | null, width: number): AnchorCoordinate {\n\t\tif (!secondary) {\n\t\t\treturn primary;\n\t\t}\n\n\t\tconst fontInfo = this._context.configuration.options.get(EditorOption.fontInfo);\n\n\t\tlet left = secondary.left;\n\t\tif (left < primary.left) {\n\t\t\tleft = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n\t\t} else {\n\t\t\tleft = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n\t\t}\n\t\treturn new AnchorCoordinate(primary.top, left, primary.height);\n\t}\n\n\tprivate _prepareRenderWidget(ctx: RenderingContext): IRenderData | null {\n\t\tif (!this._preference || this._preference.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { primary, secondary } = this._getAnchorsCoordinates(ctx);\n\t\tif (!primary) {\n\t\t\treturn {\n\t\t\t\tkind: 'offViewport',\n\t\t\t\tpreserveFocus: this.domNode.domNode.contains(this.domNode.domNode.ownerDocument.activeElement)\n\t\t\t};\n\t\t\t// return null;\n\t\t}\n\n\t\tif (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n\n\t\t\tlet preferredDimensions: IDimension | null = null;\n\t\t\tif (typeof this._actual.beforeRender === 'function') {\n\t\t\t\tpreferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n\t\t\t}\n\t\t\tif (preferredDimensions) {\n\t\t\t\tthis._cachedDomNodeOffsetWidth = preferredDimensions.width;\n\t\t\t\tthis._cachedDomNodeOffsetHeight = preferredDimensions.height;\n\t\t\t} else {\n\t\t\t\tconst domNode = this.domNode.domNode;\n\t\t\t\tconst clientRect = domNode.getBoundingClientRect();\n\t\t\t\tthis._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n\t\t\t\tthis._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n\t\t\t}\n\t\t}\n\n\t\tconst anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n\n\t\tlet placement: IBoxLayoutResult | null;\n\t\tif (this.allowEditorOverflow) {\n\t\t\tplacement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n\t\t} else {\n\t\t\tplacement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n\t\t}\n\n\t\t// Do two passes, first for perfect fit, second picks first option\n\t\tfor (let pass = 1; pass <= 2; pass++) {\n\t\t\tfor (const pref of this._preference) {\n\t\t\t\t// placement\n\t\t\t\tif (pref === ContentWidgetPositionPreference.ABOVE) {\n\t\t\t\t\tif (!placement) {\n\t\t\t\t\t\t// Widget outside of viewport\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (pass === 2 || placement.fitsAbove) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: new Coordinate(placement.aboveTop, placement.left),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.ABOVE\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else if (pref === ContentWidgetPositionPreference.BELOW) {\n\t\t\t\t\tif (!placement) {\n\t\t\t\t\t\t// Widget outside of viewport\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (pass === 2 || placement.fitsBelow) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: new Coordinate(placement.belowTop, placement.left),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.BELOW\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.allowEditorOverflow) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.EXACT\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: new Coordinate(anchor.top, anchor.left),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.EXACT\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n\t */\n\tpublic onBeforeRender(viewportData: ViewportData): void {\n\t\tif (!this._primaryAnchor.viewPosition || !this._preference) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n\t\t\t// Outside of viewport\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNode.setMaxWidth(this._maxWidth);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._renderData = this._prepareRenderWidget(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._renderData || this._renderData.kind === 'offViewport') {\n\t\t\t// This widget should be invisible\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.domNode.removeAttribute('monaco-visible-content-widget');\n\t\t\t\tthis._isVisible = false;\n\n\t\t\t\tif (this._renderData?.kind === 'offViewport' && this._renderData.preserveFocus) {\n\t\t\t\t\t// widget wants to be shown, but it is outside of the viewport and it\n\t\t\t\t\t// has focus which we need to preserve\n\t\t\t\t\tthis.domNode.setTop(-1000);\n\t\t\t\t} else {\n\t\t\t\t\tthis.domNode.setVisibility('hidden');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof this._actual.afterRender === 'function') {\n\t\t\t\tsafeInvoke(this._actual.afterRender, this._actual, null, null);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// This widget should be visible\n\t\tif (this.allowEditorOverflow) {\n\t\t\tthis.domNode.setTop(this._renderData.coordinate.top);\n\t\t\tthis.domNode.setLeft(this._renderData.coordinate.left);\n\t\t} else {\n\t\t\tthis.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n\t\t\tthis.domNode.setLeft(this._renderData.coordinate.left);\n\t\t}\n\n\t\tif (!this._isVisible) {\n\t\t\tthis.domNode.setVisibility('inherit');\n\t\t\tthis.domNode.setAttribute('monaco-visible-content-widget', 'true');\n\t\t\tthis._isVisible = true;\n\t\t}\n\n\t\tif (typeof this._actual.afterRender === 'function') {\n\t\t\tsafeInvoke(this._actual.afterRender, this._actual, this._renderData.position, this._renderData.coordinate);\n\t\t}\n\t}\n}\n\nclass PositionPair {\n\tconstructor(\n\t\tpublic readonly modelPosition: IPosition | null,\n\t\tpublic readonly viewPosition: Position | null\n\t) { }\n}\n\nclass Coordinate implements IContentWidgetRenderedCoordinate {\n\t_coordinateBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly top: number,\n\t\tpublic readonly left: number\n\t) { }\n}\n\nclass AnchorCoordinate {\n\t_anchorCoordinateBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly top: number,\n\t\tpublic readonly left: number,\n\t\tpublic readonly height: number\n\t) { }\n}\n\nfunction safeInvoke<T extends (...args: any[]) => any>(fn: T, thisArg: ThisParameterType<T>, ...args: Parameters<T>): ReturnType<T> | null {\n\ttry {\n\t\treturn fn.call(thisArg, ...args);\n\t} catch {\n\t\t// ignore\n\t\treturn null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ContentWidgetPositionPreference, IContentWidget, IContentWidgetRenderedCoordinate } from '../../editorBrowser.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IDimension } from '../../../common/core/2d/dimension.js';\nimport { PositionAffinity } from '../../../common/model.js';\nimport { IPosition, Position } from '../../../common/core/position.js';\nimport { IViewModel } from '../../../common/viewModel.js';\n\n/**\n * This view part is responsible for rendering the content widgets, which are\n * used for rendering elements that are associated to an editor position,\n * such as suggestions or the parameter hints.\n */\nexport class ViewContentWidgets extends ViewPart {\n\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate _widgets: { [key: string]: Widget };\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tpublic overflowingContentWidgetsDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._viewDomNode = viewDomNode;\n\t\tthis._widgets = {};\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.domNode, PartFingerprint.ContentWidgets);\n\t\tthis.domNode.setClassName('contentWidgets');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setTop(0);\n\n\t\tthis.overflowingContentWidgetsDomNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.overflowingContentWidgetsDomNode, PartFingerprint.OverflowingContentWidgets);\n\t\tthis.overflowingContentWidgetsDomNode.setClassName('overflowingContentWidgets');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\tthis._updateAnchorsViewPositions();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _updateAnchorsViewPositions(): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].updateAnchorViewPosition();\n\t\t}\n\t}\n\n\tpublic addWidget(_widget: IContentWidget): void {\n\t\tconst myWidget = new Widget(this._context, this._viewDomNode, _widget);\n\t\tthis._widgets[myWidget.id] = myWidget;\n\n\t\tif (myWidget.allowEditorOverflow) {\n\t\t\tthis.overflowingContentWidgetsDomNode.appendChild(myWidget.domNode);\n\t\t} else {\n\t\t\tthis.domNode.appendChild(myWidget.domNode);\n\t\t}\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic setWidgetPosition(widget: IContentWidget, primaryAnchor: IPosition | null, secondaryAnchor: IPosition | null, preference: ContentWidgetPositionPreference[] | null, affinity: PositionAffinity | null): void {\n\t\tconst myWidget = this._widgets[widget.getId()];\n\t\tmyWidget.setPosition(primaryAnchor, secondaryAnchor, preference, affinity);\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic removeWidget(widget: IContentWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst myWidget = this._widgets[widgetId];\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tconst domNode = myWidget.domNode.domNode;\n\t\t\tdomNode.remove();\n\t\t\tdomNode.removeAttribute('monaco-visible-content-widget');\n\n\t\t\tthis.setShouldRender();\n\t\t}\n\t}\n\n\tpublic shouldSuppressMouseDownOnWidget(widgetId: string): boolean {\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\treturn this._widgets[widgetId].suppressMouseDown;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic onBeforeRender(viewportData: ViewportData): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].onBeforeRender(viewportData);\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (const widgetId of keys) {\n\t\t\tthis._widgets[widgetId].render(ctx);\n\t\t}\n\t}\n}\n\ninterface IBoxLayoutResult {\n\tfitsAbove: boolean;\n\taboveTop: number;\n\n\tfitsBelow: boolean;\n\tbelowTop: number;\n\n\tleft: number;\n}\n\ninterface IOffViewportRenderData {\n\tkind: 'offViewport';\n\tpreserveFocus: boolean;\n}\n\ninterface IInViewportRenderData {\n\tkind: 'inViewport';\n\tcoordinate: Coordinate;\n\tposition: ContentWidgetPositionPreference;\n}\n\ntype IRenderData = IInViewportRenderData | IOffViewportRenderData;\n\nclass Widget {\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate readonly _actual: IContentWidget;\n\n\tpublic readonly domNode: FastDomNode<HTMLElement>;\n\tpublic readonly id: string;\n\tpublic readonly allowEditorOverflow: boolean;\n\tpublic readonly suppressMouseDown: boolean;\n\n\tprivate readonly _fixedOverflowWidgets: boolean;\n\tprivate _contentWidth: number;\n\tprivate _contentLeft: number;\n\n\tprivate _primaryAnchor: PositionPair = new PositionPair(null, null);\n\tprivate _secondaryAnchor: PositionPair = new PositionPair(null, null);\n\tprivate _affinity: PositionAffinity | null;\n\tprivate _preference: ContentWidgetPositionPreference[] | null;\n\tprivate _cachedDomNodeOffsetWidth: number;\n\tprivate _cachedDomNodeOffsetHeight: number;\n\tprivate _maxWidth: number;\n\tprivate _isVisible: boolean;\n\n\tprivate _renderData: IRenderData | null;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>, actual: IContentWidget) {\n\t\tthis._context = context;\n\t\tthis._viewDomNode = viewDomNode;\n\t\tthis._actual = actual;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst allowOverflow = options.get(EditorOption.allowOverflow);\n\n\t\tthis.domNode = createFastDomNode(this._actual.getDomNode());\n\t\tthis.id = this._actual.getId();\n\t\tthis.allowEditorOverflow = (this._actual.allowEditorOverflow || false) && allowOverflow;\n\t\tthis.suppressMouseDown = this._actual.suppressMouseDown || false;\n\n\t\tthis._fixedOverflowWidgets = options.get(EditorOption.fixedOverflowWidgets);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tthis._affinity = null;\n\t\tthis._preference = [];\n\t\tthis._cachedDomNodeOffsetWidth = -1;\n\t\tthis._cachedDomNodeOffsetHeight = -1;\n\t\tthis._maxWidth = this._getMaxWidth();\n\t\tthis._isVisible = false;\n\t\tthis._renderData = null;\n\n\t\tthis.domNode.setPosition((this._fixedOverflowWidgets && this.allowEditorOverflow) ? 'fixed' : 'absolute');\n\t\tthis.domNode.setDisplay('none');\n\t\tthis.domNode.setVisibility('hidden');\n\t\tthis.domNode.setAttribute('widgetId', this.id);\n\t\tthis.domNode.setMaxWidth(this._maxWidth);\n\t}\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): void {\n\t\tconst options = this._context.configuration.options;\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\t\tthis._maxWidth = this._getMaxWidth();\n\t\t}\n\t}\n\n\tpublic updateAnchorViewPosition(): void {\n\t\tthis._setPosition(this._affinity, this._primaryAnchor.modelPosition, this._secondaryAnchor.modelPosition);\n\t}\n\n\tprivate _setPosition(affinity: PositionAffinity | null, primaryAnchor: IPosition | null, secondaryAnchor: IPosition | null): void {\n\t\tthis._affinity = affinity;\n\t\tthis._primaryAnchor = getValidPositionPair(primaryAnchor, this._context.viewModel, this._affinity);\n\t\tthis._secondaryAnchor = getValidPositionPair(secondaryAnchor, this._context.viewModel, this._affinity);\n\n\t\tfunction getValidPositionPair(position: IPosition | null, viewModel: IViewModel, affinity: PositionAffinity | null): PositionPair {\n\t\t\tif (!position) {\n\t\t\t\treturn new PositionPair(null, null);\n\t\t\t}\n\t\t\t// Do not trust that widgets give a valid position\n\t\t\tconst validModelPosition = viewModel.model.validatePosition(position);\n\t\t\tif (viewModel.coordinatesConverter.modelPositionIsVisible(validModelPosition)) {\n\t\t\t\tconst viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(validModelPosition, affinity ?? undefined);\n\t\t\t\treturn new PositionPair(position, viewPosition);\n\t\t\t}\n\t\t\treturn new PositionPair(position, null);\n\t\t}\n\t}\n\n\tprivate _getMaxWidth(): number {\n\t\tconst elDocument = this.domNode.domNode.ownerDocument;\n\t\tconst elWindow = elDocument.defaultView;\n\t\treturn (\n\t\t\tthis.allowEditorOverflow\n\t\t\t\t? elWindow?.innerWidth || elDocument.documentElement.offsetWidth || elDocument.body.offsetWidth\n\t\t\t\t: this._contentWidth\n\t\t);\n\t}\n\n\tpublic setPosition(primaryAnchor: IPosition | null, secondaryAnchor: IPosition | null, preference: ContentWidgetPositionPreference[] | null, affinity: PositionAffinity | null): void {\n\t\tthis._setPosition(affinity, primaryAnchor, secondaryAnchor);\n\t\tthis._preference = preference;\n\t\tif (this._primaryAnchor.viewPosition && this._preference && this._preference.length > 0) {\n\t\t\t// this content widget would like to be visible if possible\n\t\t\t// we change it from `display:none` to `display:block` even if it\n\t\t\t// might be outside the viewport such that we can measure its size\n\t\t\t// in `prepareRender`\n\t\t\tthis.domNode.setDisplay('block');\n\t\t} else {\n\t\t\tthis.domNode.setDisplay('none');\n\t\t}\n\t\tthis._cachedDomNodeOffsetWidth = -1;\n\t\tthis._cachedDomNodeOffsetHeight = -1;\n\t}\n\n\tprivate _layoutBoxInViewport(anchor: AnchorCoordinate, width: number, height: number, ctx: RenderingContext): IBoxLayoutResult {\n\t\t// Our visible box is split horizontally by the current line => 2 boxes\n\n\t\t// a) the box above the line\n\t\tconst aboveLineTop = anchor.top;\n\t\tconst heightAvailableAboveLine = aboveLineTop;\n\n\t\t// b) the box under the line\n\t\tconst underLineTop = anchor.top + anchor.height;\n\t\tconst heightAvailableUnderLine = ctx.viewportHeight - underLineTop;\n\n\t\tconst aboveTop = aboveLineTop - height;\n\t\tconst fitsAbove = (heightAvailableAboveLine >= height);\n\t\tconst belowTop = underLineTop;\n\t\tconst fitsBelow = (heightAvailableUnderLine >= height);\n\n\t\t// And its left\n\t\tlet left = anchor.left;\n\t\tif (left + width > ctx.scrollLeft + ctx.viewportWidth) {\n\t\t\tleft = ctx.scrollLeft + ctx.viewportWidth - width;\n\t\t}\n\t\tif (left < ctx.scrollLeft) {\n\t\t\tleft = ctx.scrollLeft;\n\t\t}\n\n\t\treturn { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n\t}\n\n\tprivate _layoutHorizontalSegmentInPage(windowSize: dom.Dimension, domNodePosition: dom.IDomNodePagePosition, left: number, width: number): [number, number] {\n\t\t// Leave some clearance to the left/right\n\t\tconst LEFT_PADDING = 15;\n\t\tconst RIGHT_PADDING = 15;\n\n\t\t// Initially, the limits are defined as the dom node limits\n\t\tconst MIN_LIMIT = Math.max(LEFT_PADDING, domNodePosition.left - width);\n\t\tconst MAX_LIMIT = Math.min(domNodePosition.left + domNodePosition.width + width, windowSize.width - RIGHT_PADDING);\n\n\t\tconst elDocument = this._viewDomNode.domNode.ownerDocument;\n\t\tconst elWindow = elDocument.defaultView;\n\t\tlet absoluteLeft = domNodePosition.left + left - (elWindow?.scrollX ?? 0);\n\n\t\tif (absoluteLeft + width > MAX_LIMIT) {\n\t\t\tconst delta = absoluteLeft - (MAX_LIMIT - width);\n\t\t\tabsoluteLeft -= delta;\n\t\t\tleft -= delta;\n\t\t}\n\n\t\tif (absoluteLeft < MIN_LIMIT) {\n\t\t\tconst delta = absoluteLeft - MIN_LIMIT;\n\t\t\tabsoluteLeft -= delta;\n\t\t\tleft -= delta;\n\t\t}\n\n\t\treturn [left, absoluteLeft];\n\t}\n\n\tprivate _layoutBoxInPage(anchor: AnchorCoordinate, width: number, height: number, ctx: RenderingContext): IBoxLayoutResult | null {\n\t\tconst aboveTop = anchor.top - height;\n\t\tconst belowTop = anchor.top + anchor.height;\n\n\t\tconst domNodePosition = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n\t\tconst elDocument = this._viewDomNode.domNode.ownerDocument;\n\t\tconst elWindow = elDocument.defaultView;\n\t\tconst absoluteAboveTop = domNodePosition.top + aboveTop - (elWindow?.scrollY ?? 0);\n\t\tconst absoluteBelowTop = domNodePosition.top + belowTop - (elWindow?.scrollY ?? 0);\n\n\t\tconst windowSize = dom.getClientArea(elDocument.body);\n\t\tconst [left, absoluteAboveLeft] = this._layoutHorizontalSegmentInPage(windowSize, domNodePosition, anchor.left - ctx.scrollLeft + this._contentLeft, width);\n\n\t\t// Leave some clearance to the top/bottom\n\t\tconst TOP_PADDING = 22;\n\t\tconst BOTTOM_PADDING = 22;\n\n\t\tconst fitsAbove = (absoluteAboveTop >= TOP_PADDING);\n\t\tconst fitsBelow = (absoluteBelowTop + height <= windowSize.height - BOTTOM_PADDING);\n\n\t\tif (this._fixedOverflowWidgets) {\n\t\t\treturn {\n\t\t\t\tfitsAbove,\n\t\t\t\taboveTop: Math.max(absoluteAboveTop, TOP_PADDING),\n\t\t\t\tfitsBelow,\n\t\t\t\tbelowTop: absoluteBelowTop,\n\t\t\t\tleft: absoluteAboveLeft\n\t\t\t};\n\t\t}\n\n\t\treturn { fitsAbove, aboveTop, fitsBelow, belowTop, left };\n\t}\n\n\tprivate _prepareRenderWidgetAtExactPositionOverflowing(topLeft: Coordinate): Coordinate {\n\t\treturn new Coordinate(topLeft.top, topLeft.left + this._contentLeft);\n\t}\n\n\t/**\n\t * Compute the coordinates above and below the primary and secondary anchors.\n\t * The content widget *must* touch the primary anchor.\n\t * The content widget should touch if possible the secondary anchor.\n\t */\n\tprivate _getAnchorsCoordinates(ctx: RenderingContext): { primary: AnchorCoordinate | null; secondary: AnchorCoordinate | null } {\n\t\tconst primary = getCoordinates(this._primaryAnchor.viewPosition, this._affinity);\n\t\tconst secondaryViewPosition = (this._secondaryAnchor.viewPosition?.lineNumber === this._primaryAnchor.viewPosition?.lineNumber ? this._secondaryAnchor.viewPosition : null);\n\t\tconst secondary = getCoordinates(secondaryViewPosition, this._affinity);\n\t\treturn { primary, secondary };\n\n\t\tfunction getCoordinates(position: Position | null, affinity: PositionAffinity | null): AnchorCoordinate | null {\n\t\t\tif (!position) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst horizontalPosition = ctx.visibleRangeForPosition(position);\n\t\t\tif (!horizontalPosition) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Left-align widgets that should appear :before content\n\t\t\tconst left = (position.column === 1 && affinity === PositionAffinity.LeftOfInjectedText ? 0 : horizontalPosition.left);\n\t\t\tconst top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.scrollTop;\n\t\t\tconst lineHeight = ctx.getLineHeightForLineNumber(position.lineNumber);\n\t\t\treturn new AnchorCoordinate(top, left, lineHeight);\n\t\t}\n\t}\n\n\tprivate _reduceAnchorCoordinates(primary: AnchorCoordinate, secondary: AnchorCoordinate | null, width: number): AnchorCoordinate {\n\t\tif (!secondary) {\n\t\t\treturn primary;\n\t\t}\n\n\t\tconst fontInfo = this._context.configuration.options.get(EditorOption.fontInfo);\n\n\t\tlet left = secondary.left;\n\t\tif (left < primary.left) {\n\t\t\tleft = Math.max(left, primary.left - width + fontInfo.typicalFullwidthCharacterWidth);\n\t\t} else {\n\t\t\tleft = Math.min(left, primary.left + width - fontInfo.typicalFullwidthCharacterWidth);\n\t\t}\n\t\treturn new AnchorCoordinate(primary.top, left, primary.height);\n\t}\n\n\tprivate _prepareRenderWidget(ctx: RenderingContext): IRenderData | null {\n\t\tif (!this._preference || this._preference.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { primary, secondary } = this._getAnchorsCoordinates(ctx);\n\t\tif (!primary) {\n\t\t\treturn {\n\t\t\t\tkind: 'offViewport',\n\t\t\t\tpreserveFocus: this.domNode.domNode.contains(this.domNode.domNode.ownerDocument.activeElement)\n\t\t\t};\n\t\t\t// return null;\n\t\t}\n\n\t\tif (this._cachedDomNodeOffsetWidth === -1 || this._cachedDomNodeOffsetHeight === -1) {\n\n\t\t\tlet preferredDimensions: IDimension | null = null;\n\t\t\tif (typeof this._actual.beforeRender === 'function') {\n\t\t\t\tpreferredDimensions = safeInvoke(this._actual.beforeRender, this._actual);\n\t\t\t}\n\t\t\tif (preferredDimensions) {\n\t\t\t\tthis._cachedDomNodeOffsetWidth = preferredDimensions.width;\n\t\t\t\tthis._cachedDomNodeOffsetHeight = preferredDimensions.height;\n\t\t\t} else {\n\t\t\t\tconst domNode = this.domNode.domNode;\n\t\t\t\tconst clientRect = domNode.getBoundingClientRect();\n\t\t\t\tthis._cachedDomNodeOffsetWidth = Math.round(clientRect.width);\n\t\t\t\tthis._cachedDomNodeOffsetHeight = Math.round(clientRect.height);\n\t\t\t}\n\t\t}\n\n\t\tconst anchor = this._reduceAnchorCoordinates(primary, secondary, this._cachedDomNodeOffsetWidth);\n\n\t\tlet placement: IBoxLayoutResult | null;\n\t\tif (this.allowEditorOverflow) {\n\t\t\tplacement = this._layoutBoxInPage(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n\t\t} else {\n\t\t\tplacement = this._layoutBoxInViewport(anchor, this._cachedDomNodeOffsetWidth, this._cachedDomNodeOffsetHeight, ctx);\n\t\t}\n\n\t\t// Do two passes, first for perfect fit, second picks first option\n\t\tfor (let pass = 1; pass <= 2; pass++) {\n\t\t\tfor (const pref of this._preference) {\n\t\t\t\t// placement\n\t\t\t\tif (pref === ContentWidgetPositionPreference.ABOVE) {\n\t\t\t\t\tif (!placement) {\n\t\t\t\t\t\t// Widget outside of viewport\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (pass === 2 || placement.fitsAbove) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: new Coordinate(placement.aboveTop, placement.left),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.ABOVE\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else if (pref === ContentWidgetPositionPreference.BELOW) {\n\t\t\t\t\tif (!placement) {\n\t\t\t\t\t\t// Widget outside of viewport\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (pass === 2 || placement.fitsBelow) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: new Coordinate(placement.belowTop, placement.left),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.BELOW\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.allowEditorOverflow) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: this._prepareRenderWidgetAtExactPositionOverflowing(new Coordinate(anchor.top, anchor.left)),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.EXACT\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tkind: 'inViewport',\n\t\t\t\t\t\t\tcoordinate: new Coordinate(anchor.top, anchor.left),\n\t\t\t\t\t\t\tposition: ContentWidgetPositionPreference.EXACT\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * On this first pass, we ensure that the content widget (if it is in the viewport) has the max width set correctly.\n\t */\n\tpublic onBeforeRender(viewportData: ViewportData): void {\n\t\tif (!this._primaryAnchor.viewPosition || !this._preference) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._primaryAnchor.viewPosition.lineNumber < viewportData.startLineNumber || this._primaryAnchor.viewPosition.lineNumber > viewportData.endLineNumber) {\n\t\t\t// Outside of viewport\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNode.setMaxWidth(this._maxWidth);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._renderData = this._prepareRenderWidget(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._renderData || this._renderData.kind === 'offViewport') {\n\t\t\t// This widget should be invisible\n\t\t\tif (this._isVisible) {\n\t\t\t\tthis.domNode.removeAttribute('monaco-visible-content-widget');\n\t\t\t\tthis._isVisible = false;\n\n\t\t\t\tif (this._renderData?.kind === 'offViewport' && this._renderData.preserveFocus) {\n\t\t\t\t\t// widget wants to be shown, but it is outside of the viewport and it\n\t\t\t\t\t// has focus which we need to preserve\n\t\t\t\t\tthis.domNode.setTop(-1000);\n\t\t\t\t} else {\n\t\t\t\t\tthis.domNode.setVisibility('hidden');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof this._actual.afterRender === 'function') {\n\t\t\t\tsafeInvoke(this._actual.afterRender, this._actual, null, null);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// This widget should be visible\n\t\tif (this.allowEditorOverflow) {\n\t\t\tthis.domNode.setTop(this._renderData.coordinate.top);\n\t\t\tthis.domNode.setLeft(this._renderData.coordinate.left);\n\t\t} else {\n\t\t\tthis.domNode.setTop(this._renderData.coordinate.top + ctx.scrollTop - ctx.bigNumbersDelta);\n\t\t\tthis.domNode.setLeft(this._renderData.coordinate.left);\n\t\t}\n\n\t\tif (!this._isVisible) {\n\t\t\tthis.domNode.setVisibility('inherit');\n\t\t\tthis.domNode.setAttribute('monaco-visible-content-widget', 'true');\n\t\t\tthis._isVisible = true;\n\t\t}\n\n\t\tif (typeof this._actual.afterRender === 'function') {\n\t\t\tsafeInvoke(this._actual.afterRender, this._actual, this._renderData.position, this._renderData.coordinate);\n\t\t}\n\t}\n}\n\nclass PositionPair {\n\tconstructor(\n\t\tpublic readonly modelPosition: IPosition | null,\n\t\tpublic readonly viewPosition: Position | null\n\t) { }\n}\n\nclass Coordinate implements IContentWidgetRenderedCoordinate {\n\t_coordinateBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly top: number,\n\t\tpublic readonly left: number\n\t) { }\n}\n\nclass AnchorCoordinate {\n\t_anchorCoordinateBrand: void = undefined;\n\n\tconstructor(\n\t\tpublic readonly top: number,\n\t\tpublic readonly left: number,\n\t\tpublic readonly height: number\n\t) { }\n}\n\nfunction safeInvoke<T extends (...args: any[]) => any>(fn: T, thisArg: ThisParameterType<T>, ...args: Parameters<T>): ReturnType<T> | null {\n\ttry {\n\t\treturn fn.call(thisArg, ...args);\n\t} catch {\n\t\t// ignore\n\t\treturn null;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/currentLineHighlight/vs/editor/browser/viewParts/currentLineHighlight/currentLineHighlight.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { Position } from '../../../common/core/position.js';\n\nexport abstract class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n\tprivate readonly _context: ViewContext;\n\tprotected _renderLineHighlight: 'none' | 'gutter' | 'line' | 'all';\n\tprotected _wordWrap: boolean;\n\tprotected _contentLeft: number;\n\tprotected _contentWidth: number;\n\tprotected _selectionIsEmpty: boolean;\n\tprotected _renderLineHighlightOnlyWhenFocus: boolean;\n\tprotected _focused: boolean;\n\t/**\n\t * Unique sorted list of view line numbers which have cursors sitting on them.\n\t */\n\tprivate _cursorLineNumbers: number[];\n\tprivate _selections: Selection[];\n\tprivate _renderData: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._renderLineHighlight = options.get(EditorOption.renderLineHighlight);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(EditorOption.renderLineHighlightOnlyWhenFocus);\n\t\tthis._wordWrap = layoutInfo.isViewportWrapping;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._focused = false;\n\t\tthis._cursorLineNumbers = [1];\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._renderData = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\tprivate _readFromSelections(): boolean {\n\t\tlet hasChanged = false;\n\n\t\tconst lineNumbers = new Set<number>();\n\t\tfor (const selection of this._selections) {\n\t\t\tlineNumbers.add(selection.positionLineNumber);\n\t\t}\n\t\tconst cursorsLineNumbers = Array.from(lineNumbers);\n\t\tcursorsLineNumbers.sort((a, b) => a - b);\n\t\tif (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n\t\t\tthis._cursorLineNumbers = cursorsLineNumbers;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst selectionIsEmpty = this._selections.every(s => s.isEmpty());\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\treturn hasChanged;\n\t}\n\n\t// --- begin event handlers\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._renderLineHighlight = options.get(EditorOption.renderLineHighlight);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(EditorOption.renderLineHighlightOnlyWhenFocus);\n\t\tthis._wordWrap = layoutInfo.isViewportWrapping;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections;\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollWidthChanged || e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tif (!this._renderLineHighlightOnlyWhenFocus) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._focused = e.isFocused;\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._shouldRenderThis()) {\n\t\t\tthis._renderData = null;\n\t\t\treturn;\n\t\t}\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\t// initialize renderData\n\t\tconst renderData: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\trenderData[lineIndex] = '';\n\t\t}\n\n\t\tif (this._wordWrap) {\n\t\t\t// do a first pass to render wrapped lines\n\t\t\tconst renderedLineWrapped = this._renderOne(ctx, false);\n\t\t\tfor (const cursorLineNumber of this._cursorLineNumbers) {\n\n\t\t\t\tconst coordinatesConverter = this._context.viewModel.coordinatesConverter;\n\t\t\t\tconst modelLineNumber = coordinatesConverter.convertViewPositionToModelPosition(new Position(cursorLineNumber, 1)).lineNumber;\n\t\t\t\tconst firstViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, 1)).lineNumber;\n\t\t\t\tconst lastViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, this._context.viewModel.model.getLineMaxColumn(modelLineNumber))).lineNumber;\n\n\t\t\t\tconst firstLine = Math.max(firstViewLineNumber, visibleStartLineNumber);\n\t\t\t\tconst lastLine = Math.min(lastViewLineNumber, visibleEndLineNumber);\n\t\t\t\tfor (let lineNumber = firstLine; lineNumber <= lastLine; lineNumber++) {\n\t\t\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\t\t\trenderData[lineIndex] = renderedLineWrapped;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// do a second pass to render exact lines\n\t\tconst renderedLineExact = this._renderOne(ctx, true);\n\t\tfor (const cursorLineNumber of this._cursorLineNumbers) {\n\t\t\tif (cursorLineNumber < visibleStartLineNumber || cursorLineNumber > visibleEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lineIndex = cursorLineNumber - visibleStartLineNumber;\n\t\t\trenderData[lineIndex] = renderedLineExact;\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderData) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex >= this._renderData.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderData[lineIndex];\n\t}\n\n\tprotected _shouldRenderInMargin(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\n\tprotected _shouldRenderInContent(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n\t\t\t&& this._selectionIsEmpty\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\n\tprotected abstract _shouldRenderThis(): boolean;\n\tprotected abstract _shouldRenderOther(): boolean;\n\tprotected abstract _renderOne(ctx: RenderingContext, exact: boolean): string;\n}\n\n/**\n * Emphasizes the current line by drawing a border around it.\n */\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n\n\tprotected _renderOne(ctx: RenderingContext, exact: boolean): string {\n\t\tconst className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-both' : '') + (exact ? ' current-line-exact' : '');\n\t\treturn `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px;\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn this._shouldRenderInContent();\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn this._shouldRenderInMargin();\n\t}\n}\n\n/**\n * Emphasizes the current line margin/gutter by drawing a border around it.\n */\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n\tprotected _renderOne(ctx: RenderingContext, exact: boolean): string {\n\t\tconst className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '') + (this._shouldRenderInMargin() && exact ? ' current-line-exact-margin' : '');\n\t\treturn `<div class=\"${className}\" style=\"width:${this._contentLeft}px\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn true;\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn this._shouldRenderInContent();\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst lineHighlight = theme.getColor(editorLineHighlight);\n\tif (lineHighlight) {\n\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n\t}\n\tif (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n\t\tconst lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n\t\tif (lineHighlightBorder) {\n\t\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line-exact { border: 2px solid ${lineHighlightBorder}; }`);\n\t\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid ${lineHighlightBorder}; }`);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line-exact { border-width: 1px; }`);\n\t\t\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './currentLineHighlight.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorLineHighlight, editorLineHighlightBorder } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { Position } from '../../../common/core/position.js';\n\nexport abstract class AbstractLineHighlightOverlay extends DynamicViewOverlay {\n\tprivate readonly _context: ViewContext;\n\tprotected _renderLineHighlight: 'none' | 'gutter' | 'line' | 'all';\n\tprotected _wordWrap: boolean;\n\tprotected _contentLeft: number;\n\tprotected _contentWidth: number;\n\tprotected _selectionIsEmpty: boolean;\n\tprotected _renderLineHighlightOnlyWhenFocus: boolean;\n\tprotected _focused: boolean;\n\t/**\n\t * Unique sorted list of view line numbers which have cursors sitting on them.\n\t */\n\tprivate _cursorLineNumbers: number[];\n\tprivate _selections: Selection[];\n\tprivate _renderData: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._renderLineHighlight = options.get(EditorOption.renderLineHighlight);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(EditorOption.renderLineHighlightOnlyWhenFocus);\n\t\tthis._wordWrap = layoutInfo.isViewportWrapping;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._focused = false;\n\t\tthis._cursorLineNumbers = [1];\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._renderData = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\tprivate _readFromSelections(): boolean {\n\t\tlet hasChanged = false;\n\n\t\tconst lineNumbers = new Set<number>();\n\t\tfor (const selection of this._selections) {\n\t\t\tlineNumbers.add(selection.positionLineNumber);\n\t\t}\n\t\tconst cursorsLineNumbers = Array.from(lineNumbers);\n\t\tcursorsLineNumbers.sort((a, b) => a - b);\n\t\tif (!arrays.equals(this._cursorLineNumbers, cursorsLineNumbers)) {\n\t\t\tthis._cursorLineNumbers = cursorsLineNumbers;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\tconst selectionIsEmpty = this._selections.every(s => s.isEmpty());\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\thasChanged = true;\n\t\t}\n\n\t\treturn hasChanged;\n\t}\n\n\t// --- begin event handlers\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._renderLineHighlight = options.get(EditorOption.renderLineHighlight);\n\t\tthis._renderLineHighlightOnlyWhenFocus = options.get(EditorOption.renderLineHighlightOnlyWhenFocus);\n\t\tthis._wordWrap = layoutInfo.isViewportWrapping;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections;\n\t\treturn this._readFromSelections();\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollWidthChanged || e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tif (!this._renderLineHighlightOnlyWhenFocus) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._focused = e.isFocused;\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._shouldRenderThis()) {\n\t\t\tthis._renderData = null;\n\t\t\treturn;\n\t\t}\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\t// initialize renderData\n\t\tconst renderData: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\trenderData[lineIndex] = '';\n\t\t}\n\n\t\tif (this._wordWrap) {\n\t\t\t// do a first pass to render wrapped lines\n\t\t\tconst renderedLineWrapped = this._renderOne(ctx, false);\n\t\t\tfor (const cursorLineNumber of this._cursorLineNumbers) {\n\n\t\t\t\tconst coordinatesConverter = this._context.viewModel.coordinatesConverter;\n\t\t\t\tconst modelLineNumber = coordinatesConverter.convertViewPositionToModelPosition(new Position(cursorLineNumber, 1)).lineNumber;\n\t\t\t\tconst firstViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, 1)).lineNumber;\n\t\t\t\tconst lastViewLineNumber = coordinatesConverter.convertModelPositionToViewPosition(new Position(modelLineNumber, this._context.viewModel.model.getLineMaxColumn(modelLineNumber))).lineNumber;\n\n\t\t\t\tconst firstLine = Math.max(firstViewLineNumber, visibleStartLineNumber);\n\t\t\t\tconst lastLine = Math.min(lastViewLineNumber, visibleEndLineNumber);\n\t\t\t\tfor (let lineNumber = firstLine; lineNumber <= lastLine; lineNumber++) {\n\t\t\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\t\t\trenderData[lineIndex] = renderedLineWrapped;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// do a second pass to render exact lines\n\t\tconst renderedLineExact = this._renderOne(ctx, true);\n\t\tfor (const cursorLineNumber of this._cursorLineNumbers) {\n\t\t\tif (cursorLineNumber < visibleStartLineNumber || cursorLineNumber > visibleEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lineIndex = cursorLineNumber - visibleStartLineNumber;\n\t\t\trenderData[lineIndex] = renderedLineExact;\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderData) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex >= this._renderData.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderData[lineIndex];\n\t}\n\n\tprotected _shouldRenderInMargin(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'gutter' || this._renderLineHighlight === 'all')\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\n\tprotected _shouldRenderInContent(): boolean {\n\t\treturn (\n\t\t\t(this._renderLineHighlight === 'line' || this._renderLineHighlight === 'all')\n\t\t\t&& this._selectionIsEmpty\n\t\t\t&& (!this._renderLineHighlightOnlyWhenFocus || this._focused)\n\t\t);\n\t}\n\n\tprotected abstract _shouldRenderThis(): boolean;\n\tprotected abstract _shouldRenderOther(): boolean;\n\tprotected abstract _renderOne(ctx: RenderingContext, exact: boolean): string;\n}\n\n/**\n * Emphasizes the current line by drawing a border around it.\n */\nexport class CurrentLineHighlightOverlay extends AbstractLineHighlightOverlay {\n\n\tprotected _renderOne(ctx: RenderingContext, exact: boolean): string {\n\t\tconst className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-both' : '') + (exact ? ' current-line-exact' : '');\n\t\treturn `<div class=\"${className}\" style=\"width:${Math.max(ctx.scrollWidth, this._contentWidth)}px;\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn this._shouldRenderInContent();\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn this._shouldRenderInMargin();\n\t}\n}\n\n/**\n * Emphasizes the current line margin/gutter by drawing a border around it.\n */\nexport class CurrentLineMarginHighlightOverlay extends AbstractLineHighlightOverlay {\n\tprotected _renderOne(ctx: RenderingContext, exact: boolean): string {\n\t\tconst className = 'current-line' + (this._shouldRenderInMargin() ? ' current-line-margin' : '') + (this._shouldRenderOther() ? ' current-line-margin-both' : '') + (this._shouldRenderInMargin() && exact ? ' current-line-exact-margin' : '');\n\t\treturn `<div class=\"${className}\" style=\"width:${this._contentLeft}px\"></div>`;\n\t}\n\tprotected _shouldRenderThis(): boolean {\n\t\treturn true;\n\t}\n\tprotected _shouldRenderOther(): boolean {\n\t\treturn this._shouldRenderInContent();\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst lineHighlight = theme.getColor(editorLineHighlight);\n\tif (lineHighlight) {\n\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line { background-color: ${lineHighlight}; }`);\n\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-margin { background-color: ${lineHighlight}; border: none; }`);\n\t}\n\tif (!lineHighlight || lineHighlight.isTransparent() || theme.defines(editorLineHighlightBorder)) {\n\t\tconst lineHighlightBorder = theme.getColor(editorLineHighlightBorder);\n\t\tif (lineHighlightBorder) {\n\t\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line-exact { border: 2px solid ${lineHighlightBorder}; }`);\n\t\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border: 2px solid ${lineHighlightBorder}; }`);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(`.monaco-editor .view-overlays .current-line-exact { border-width: 1px; }`);\n\t\t\t\tcollector.addRule(`.monaco-editor .margin-view-overlays .current-line-exact-margin { border-width: 1px; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1499, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/decorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/decorations/decorations.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/decorations/vs/editor/browser/viewParts/decorations/decorations.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { HorizontalRange, RenderingContext } from '../../view/renderingContext.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { ViewModelDecoration } from '../../../common/viewModel/viewModelDecoration.js';\n\nexport class DecorationsOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst _decorations = ctx.getDecorationsInViewport();\n\n\t\t// Keep only decorations with `className`\n\t\tlet decorations: ViewModelDecoration[] = [];\n\t\tlet decorationsLen = 0;\n\t\tfor (let i = 0, len = _decorations.length; i < len; i++) {\n\t\t\tconst d = _decorations[i];\n\t\t\tif (d.options.className) {\n\t\t\t\tdecorations[decorationsLen++] = d;\n\t\t\t}\n\t\t}\n\n\t\t// Sort decorations for consistent render output\n\t\tdecorations = decorations.sort((a, b) => {\n\t\t\tif (a.options.zIndex! < b.options.zIndex!) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.options.zIndex! > b.options.zIndex!) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tconst aClassName = a.options.className!;\n\t\t\tconst bClassName = b.options.className!;\n\n\t\t\tif (aClassName < bClassName) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (aClassName > bClassName) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t});\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = '';\n\t\t}\n\n\t\t// Render first whole line decorations and then regular decorations\n\t\tthis._renderWholeLineDecorations(ctx, decorations, output);\n\t\tthis._renderNormalDecorations(ctx, decorations, output);\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate _renderWholeLineDecorations(ctx: RenderingContext, decorations: ViewModelDecoration[], output: string[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tfor (let i = 0, lenI = decorations.length; i < lenI; i++) {\n\t\t\tconst d = decorations[i];\n\n\t\t\tif (!d.options.isWholeLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst decorationOutput = (\n\t\t\t\t'<div class=\"cdr '\n\t\t\t\t+ d.options.className\n\t\t\t\t+ '\" style=\"left:0;width:100%;\"></div>'\n\t\t\t);\n\n\t\t\tconst startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n\t\t\tconst endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n\t\t\tfor (let j = startLineNumber; j <= endLineNumber; j++) {\n\t\t\t\tconst lineIndex = j - visibleStartLineNumber;\n\t\t\t\toutput[lineIndex] += decorationOutput;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderNormalDecorations(ctx: RenderingContext, decorations: ViewModelDecoration[], output: string[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\n\t\tlet prevClassName: string | null = null;\n\t\tlet prevShowIfCollapsed: boolean = false;\n\t\tlet prevRange: Range | null = null;\n\t\tlet prevShouldFillLineOnLineBreak: boolean = false;\n\n\t\tfor (let i = 0, lenI = decorations.length; i < lenI; i++) {\n\t\t\tconst d = decorations[i];\n\n\t\t\tif (d.options.isWholeLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst className = d.options.className!;\n\t\t\tconst showIfCollapsed = Boolean(d.options.showIfCollapsed);\n\n\t\t\tlet range = d.range;\n\t\t\tif (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n\t\t\t}\n\n\t\t\tif (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange!, range)) {\n\t\t\t\t// merge into previous decoration\n\t\t\t\tprevRange = Range.plusRange(prevRange!, range);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// flush previous decoration\n\t\t\tif (prevClassName !== null) {\n\t\t\t\tthis._renderNormalDecoration(ctx, prevRange!, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n\t\t\t}\n\n\t\t\tprevClassName = className;\n\t\t\tprevShowIfCollapsed = showIfCollapsed;\n\t\t\tprevRange = range;\n\t\t\tprevShouldFillLineOnLineBreak = d.options.shouldFillLineOnLineBreak ?? false;\n\t\t}\n\n\t\tif (prevClassName !== null) {\n\t\t\tthis._renderNormalDecoration(ctx, prevRange!, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n\t\t}\n\t}\n\n\tprivate _renderNormalDecoration(ctx: RenderingContext, range: Range, className: string, shouldFillLineOnLineBreak: boolean, showIfCollapsed: boolean, visibleStartLineNumber: number, output: string[]): void {\n\t\tconst linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/className === 'findMatch');\n\t\tif (!linesVisibleRanges) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[j];\n\t\t\tif (lineVisibleRanges.outsideRenderedLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n\n\t\t\tif (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n\t\t\t\tconst singleVisibleRange = lineVisibleRanges.ranges[0];\n\t\t\t\tif (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n\t\t\t\t\t// collapsed/very small range case => make the decoration visible by expanding its width\n\t\t\t\t\t// expand its size on both sides (both to the left and to the right, keeping it centered)\n\t\t\t\t\tconst center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n\t\t\t\t\tconst left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n\t\t\t\t\tlineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n\t\t\t\tconst expandToLeft = shouldFillLineOnLineBreak && lineVisibleRanges.continuesOnNextLine && lenK === 1;\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[k];\n\t\t\t\tconst decorationOutput = (\n\t\t\t\t\t'<div class=\"cdr '\n\t\t\t\t\t+ className\n\t\t\t\t\t+ '\" style=\"left:'\n\t\t\t\t\t+ String(visibleRange.left)\n\t\t\t\t\t+ 'px;width:'\n\t\t\t\t\t+ (expandToLeft ?\n\t\t\t\t\t\t'100%;' :\n\t\t\t\t\t\t(String(visibleRange.width) + 'px;')\n\t\t\t\t\t)\n\t\t\t\t\t+ '\"></div>'\n\t\t\t\t);\n\t\t\t\toutput[lineIndex] += decorationOutput;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './decorations.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { HorizontalRange, RenderingContext } from '../../view/renderingContext.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { ViewModelDecoration } from '../../../common/viewModel/viewModelDecoration.js';\n\nexport class DecorationsOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst _decorations = ctx.getDecorationsInViewport();\n\n\t\t// Keep only decorations with `className`\n\t\tlet decorations: ViewModelDecoration[] = [];\n\t\tlet decorationsLen = 0;\n\t\tfor (let i = 0, len = _decorations.length; i < len; i++) {\n\t\t\tconst d = _decorations[i];\n\t\t\tif (d.options.className) {\n\t\t\t\tdecorations[decorationsLen++] = d;\n\t\t\t}\n\t\t}\n\n\t\t// Sort decorations for consistent render output\n\t\tdecorations = decorations.sort((a, b) => {\n\t\t\tif (a.options.zIndex! < b.options.zIndex!) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (a.options.zIndex! > b.options.zIndex!) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tconst aClassName = a.options.className!;\n\t\t\tconst bClassName = b.options.className!;\n\n\t\t\tif (aClassName < bClassName) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (aClassName > bClassName) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn Range.compareRangesUsingStarts(a.range, b.range);\n\t\t});\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = '';\n\t\t}\n\n\t\t// Render first whole line decorations and then regular decorations\n\t\tthis._renderWholeLineDecorations(ctx, decorations, output);\n\t\tthis._renderNormalDecorations(ctx, decorations, output);\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate _renderWholeLineDecorations(ctx: RenderingContext, decorations: ViewModelDecoration[], output: string[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tfor (let i = 0, lenI = decorations.length; i < lenI; i++) {\n\t\t\tconst d = decorations[i];\n\n\t\t\tif (!d.options.isWholeLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst decorationOutput = (\n\t\t\t\t'<div class=\"cdr '\n\t\t\t\t+ d.options.className\n\t\t\t\t+ '\" style=\"left:0;width:100%;\"></div>'\n\t\t\t);\n\n\t\t\tconst startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n\t\t\tconst endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n\t\t\tfor (let j = startLineNumber; j <= endLineNumber; j++) {\n\t\t\t\tconst lineIndex = j - visibleStartLineNumber;\n\t\t\t\toutput[lineIndex] += decorationOutput;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderNormalDecorations(ctx: RenderingContext, decorations: ViewModelDecoration[], output: string[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\n\t\tlet prevClassName: string | null = null;\n\t\tlet prevShowIfCollapsed: boolean = false;\n\t\tlet prevRange: Range | null = null;\n\t\tlet prevShouldFillLineOnLineBreak: boolean = false;\n\n\t\tfor (let i = 0, lenI = decorations.length; i < lenI; i++) {\n\t\t\tconst d = decorations[i];\n\n\t\t\tif (d.options.isWholeLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst className = d.options.className!;\n\t\t\tconst showIfCollapsed = Boolean(d.options.showIfCollapsed);\n\n\t\t\tlet range = d.range;\n\t\t\tif (showIfCollapsed && range.endColumn === 1 && range.endLineNumber !== range.startLineNumber) {\n\t\t\t\trange = new Range(range.startLineNumber, range.startColumn, range.endLineNumber - 1, this._context.viewModel.getLineMaxColumn(range.endLineNumber - 1));\n\t\t\t}\n\n\t\t\tif (prevClassName === className && prevShowIfCollapsed === showIfCollapsed && Range.areIntersectingOrTouching(prevRange!, range)) {\n\t\t\t\t// merge into previous decoration\n\t\t\t\tprevRange = Range.plusRange(prevRange!, range);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// flush previous decoration\n\t\t\tif (prevClassName !== null) {\n\t\t\t\tthis._renderNormalDecoration(ctx, prevRange!, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n\t\t\t}\n\n\t\t\tprevClassName = className;\n\t\t\tprevShowIfCollapsed = showIfCollapsed;\n\t\t\tprevRange = range;\n\t\t\tprevShouldFillLineOnLineBreak = d.options.shouldFillLineOnLineBreak ?? false;\n\t\t}\n\n\t\tif (prevClassName !== null) {\n\t\t\tthis._renderNormalDecoration(ctx, prevRange!, prevClassName, prevShouldFillLineOnLineBreak, prevShowIfCollapsed, visibleStartLineNumber, output);\n\t\t}\n\t}\n\n\tprivate _renderNormalDecoration(ctx: RenderingContext, range: Range, className: string, shouldFillLineOnLineBreak: boolean, showIfCollapsed: boolean, visibleStartLineNumber: number, output: string[]): void {\n\t\tconst linesVisibleRanges = ctx.linesVisibleRangesForRange(range, /*TODO@Alex*/className === 'findMatch');\n\t\tif (!linesVisibleRanges) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (let j = 0, lenJ = linesVisibleRanges.length; j < lenJ; j++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[j];\n\t\t\tif (lineVisibleRanges.outsideRenderedLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst lineIndex = lineVisibleRanges.lineNumber - visibleStartLineNumber;\n\n\t\t\tif (showIfCollapsed && lineVisibleRanges.ranges.length === 1) {\n\t\t\t\tconst singleVisibleRange = lineVisibleRanges.ranges[0];\n\t\t\t\tif (singleVisibleRange.width < this._typicalHalfwidthCharacterWidth) {\n\t\t\t\t\t// collapsed/very small range case => make the decoration visible by expanding its width\n\t\t\t\t\t// expand its size on both sides (both to the left and to the right, keeping it centered)\n\t\t\t\t\tconst center = Math.round(singleVisibleRange.left + singleVisibleRange.width / 2);\n\t\t\t\t\tconst left = Math.max(0, Math.round(center - this._typicalHalfwidthCharacterWidth / 2));\n\t\t\t\t\tlineVisibleRanges.ranges[0] = new HorizontalRange(left, this._typicalHalfwidthCharacterWidth);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let k = 0, lenK = lineVisibleRanges.ranges.length; k < lenK; k++) {\n\t\t\t\tconst expandToLeft = shouldFillLineOnLineBreak && lineVisibleRanges.continuesOnNextLine && lenK === 1;\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[k];\n\t\t\t\tconst decorationOutput = (\n\t\t\t\t\t'<div class=\"cdr '\n\t\t\t\t\t+ className\n\t\t\t\t\t+ '\" style=\"left:'\n\t\t\t\t\t+ String(visibleRange.left)\n\t\t\t\t\t+ 'px;width:'\n\t\t\t\t\t+ (expandToLeft ?\n\t\t\t\t\t\t'100%;' :\n\t\t\t\t\t\t(String(visibleRange.width) + 'px;')\n\t\t\t\t\t)\n\t\t\t\t\t+ '\"></div>'\n\t\t\t\t);\n\t\t\t\toutput[lineIndex] += decorationOutput;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1692, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/editorScrollbar/vs/editor/browser/viewParts/editorScrollbar/editorScrollbar.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverviewRulerLayoutInfo, SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ScrollableElementChangeOptions, ScrollableElementCreationOptions } from '../../../../base/browser/ui/scrollbar/scrollableElementOptions.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { INewScrollPosition, ScrollType } from '../../../common/editorCommon.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IMouseWheelEvent } from '../../../../base/browser/mouseEvent.js';\n\n/**\n * The editor scrollbar built on VS Code's scrollable element that sits beside\n * the minimap.\n */\nexport class EditorScrollbar extends ViewPart {\n\n\tprivate readonly scrollbar: SmoothScrollableElement;\n\tprivate readonly scrollbarDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tlinesContent: FastDomNode<HTMLElement>,\n\t\tviewDomNode: FastDomNode<HTMLElement>,\n\t\toverflowGuardDomNode: FastDomNode<HTMLElement>\n\t) {\n\t\tsuper(context);\n\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\tconst inertialScroll = options.get(EditorOption.inertialScroll);\n\n\t\tconst scrollbarOptions: ScrollableElementCreationOptions = {\n\t\t\tlistenOnDomNode: viewDomNode.domNode,\n\t\t\tclassName: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n\t\t\tuseShadows: false,\n\t\t\tlazyRender: true,\n\n\t\t\tvertical: scrollbar.vertical,\n\t\t\thorizontal: scrollbar.horizontal,\n\t\t\tverticalHasArrows: scrollbar.verticalHasArrows,\n\t\t\thorizontalHasArrows: scrollbar.horizontalHasArrows,\n\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\tverticalSliderSize: scrollbar.verticalSliderSize,\n\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: scrollbar.horizontalSliderSize,\n\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\talwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n\t\t\tarrowSize: scrollbar.arrowSize,\n\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\tscrollPredominantAxis: scrollPredominantAxis,\n\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\tinertialScroll: inertialScroll,\n\t\t};\n\n\t\tthis.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n\t\tPartFingerprints.write(this.scrollbar.getDomNode(), PartFingerprint.ScrollableElement);\n\n\t\tthis.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n\t\tthis.scrollbarDomNode.setPosition('absolute');\n\t\tthis._setLayout();\n\n\t\t// When having a zone widget that calls .focus() on one of its dom elements,\n\t\t// the browser will try desperately to reveal that dom node, unexpectedly\n\t\t// changing the .scrollTop of this.linesContent\n\n\t\tconst onBrowserDesperateReveal = (domNode: HTMLElement, lookAtScrollTop: boolean, lookAtScrollLeft: boolean) => {\n\t\t\tconst newScrollPosition: INewScrollPosition = {};\n\n\t\t\tif (lookAtScrollTop) {\n\t\t\t\tconst deltaTop = domNode.scrollTop;\n\t\t\t\tif (deltaTop) {\n\t\t\t\t\tnewScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n\t\t\t\t\tdomNode.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lookAtScrollLeft) {\n\t\t\t\tconst deltaLeft = domNode.scrollLeft;\n\t\t\t\tif (deltaLeft) {\n\t\t\t\t\tnewScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n\t\t\t\t\tdomNode.scrollLeft = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, ScrollType.Immediate);\n\t\t};\n\n\t\t// I've seen this happen both on the view dom node & on the lines content dom node.\n\t\tthis._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n\t\tthis._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setLayout(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n\n\t\tconst minimap = options.get(EditorOption.minimap);\n\t\tconst side = minimap.side;\n\t\tif (side === 'right') {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n\t\t} else {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n\t\t}\n\t\tthis.scrollbarDomNode.setHeight(layoutInfo.height);\n\t}\n\n\tpublic getOverviewRulerLayoutInfo(): IOverviewRulerLayoutInfo {\n\t\treturn this.scrollbar.getOverviewRulerLayoutInfo();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.scrollbarDomNode;\n\t}\n\n\tpublic delegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void {\n\t\tthis.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n\t}\n\n\tpublic delegateScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent) {\n\t\tthis.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (\n\t\t\te.hasChanged(EditorOption.scrollbar)\n\t\t\t|| e.hasChanged(EditorOption.mouseWheelScrollSensitivity)\n\t\t\t|| e.hasChanged(EditorOption.fastScrollSensitivity)\n\t\t) {\n\t\t\tconst options = this._context.configuration.options;\n\t\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\t\tconst newOpts: ScrollableElementChangeOptions = {\n\t\t\t\tvertical: scrollbar.vertical,\n\t\t\t\thorizontal: scrollbar.horizontal,\n\t\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\t\tscrollPredominantAxis: scrollPredominantAxis\n\t\t\t};\n\t\t\tthis.scrollbar.updateOptions(newOpts);\n\t\t}\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._setLayout();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to do\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis.scrollbar.renderNow();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverviewRulerLayoutInfo, SmoothScrollableElement } from '../../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ScrollableElementChangeOptions, ScrollableElementCreationOptions } from '../../../../base/browser/ui/scrollbar/scrollableElementOptions.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { INewScrollPosition, ScrollType } from '../../../common/editorCommon.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { getThemeTypeSelector } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IMouseWheelEvent } from '../../../../base/browser/mouseEvent.js';\n\n/**\n * The editor scrollbar built on VS Code's scrollable element that sits beside\n * the minimap.\n */\nexport class EditorScrollbar extends ViewPart {\n\n\tprivate readonly scrollbar: SmoothScrollableElement;\n\tprivate readonly scrollbarDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tlinesContent: FastDomNode<HTMLElement>,\n\t\tviewDomNode: FastDomNode<HTMLElement>,\n\t\toverflowGuardDomNode: FastDomNode<HTMLElement>\n\t) {\n\t\tsuper(context);\n\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\tconst inertialScroll = options.get(EditorOption.inertialScroll);\n\n\t\tconst scrollbarOptions: ScrollableElementCreationOptions = {\n\t\t\tlistenOnDomNode: viewDomNode.domNode,\n\t\t\tclassName: 'editor-scrollable' + ' ' + getThemeTypeSelector(context.theme.type),\n\t\t\tuseShadows: false,\n\t\t\tlazyRender: true,\n\n\t\t\tvertical: scrollbar.vertical,\n\t\t\thorizontal: scrollbar.horizontal,\n\t\t\tverticalHasArrows: scrollbar.verticalHasArrows,\n\t\t\thorizontalHasArrows: scrollbar.horizontalHasArrows,\n\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\tverticalSliderSize: scrollbar.verticalSliderSize,\n\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\thorizontalSliderSize: scrollbar.horizontalSliderSize,\n\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\talwaysConsumeMouseWheel: scrollbar.alwaysConsumeMouseWheel,\n\t\t\tarrowSize: scrollbar.arrowSize,\n\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\tscrollPredominantAxis: scrollPredominantAxis,\n\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\tinertialScroll: inertialScroll,\n\t\t};\n\n\t\tthis.scrollbar = this._register(new SmoothScrollableElement(linesContent.domNode, scrollbarOptions, this._context.viewLayout.getScrollable()));\n\t\tPartFingerprints.write(this.scrollbar.getDomNode(), PartFingerprint.ScrollableElement);\n\n\t\tthis.scrollbarDomNode = createFastDomNode(this.scrollbar.getDomNode());\n\t\tthis.scrollbarDomNode.setPosition('absolute');\n\t\tthis._setLayout();\n\n\t\t// When having a zone widget that calls .focus() on one of its dom elements,\n\t\t// the browser will try desperately to reveal that dom node, unexpectedly\n\t\t// changing the .scrollTop of this.linesContent\n\n\t\tconst onBrowserDesperateReveal = (domNode: HTMLElement, lookAtScrollTop: boolean, lookAtScrollLeft: boolean) => {\n\t\t\tconst newScrollPosition: INewScrollPosition = {};\n\n\t\t\tif (lookAtScrollTop) {\n\t\t\t\tconst deltaTop = domNode.scrollTop;\n\t\t\t\tif (deltaTop) {\n\t\t\t\t\tnewScrollPosition.scrollTop = this._context.viewLayout.getCurrentScrollTop() + deltaTop;\n\t\t\t\t\tdomNode.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lookAtScrollLeft) {\n\t\t\t\tconst deltaLeft = domNode.scrollLeft;\n\t\t\t\tif (deltaLeft) {\n\t\t\t\t\tnewScrollPosition.scrollLeft = this._context.viewLayout.getCurrentScrollLeft() + deltaLeft;\n\t\t\t\t\tdomNode.scrollLeft = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, ScrollType.Immediate);\n\t\t};\n\n\t\t// I've seen this happen both on the view dom node & on the lines content dom node.\n\t\tthis._register(dom.addDisposableListener(viewDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(viewDomNode.domNode, true, true)));\n\t\tthis._register(dom.addDisposableListener(linesContent.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(linesContent.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(overflowGuardDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(overflowGuardDomNode.domNode, true, false)));\n\t\tthis._register(dom.addDisposableListener(this.scrollbarDomNode.domNode, 'scroll', (e: Event) => onBrowserDesperateReveal(this.scrollbarDomNode.domNode, true, false)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _setLayout(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis.scrollbarDomNode.setLeft(layoutInfo.contentLeft);\n\n\t\tconst minimap = options.get(EditorOption.minimap);\n\t\tconst side = minimap.side;\n\t\tif (side === 'right') {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth + layoutInfo.minimap.minimapWidth);\n\t\t} else {\n\t\t\tthis.scrollbarDomNode.setWidth(layoutInfo.contentWidth);\n\t\t}\n\t\tthis.scrollbarDomNode.setHeight(layoutInfo.height);\n\t}\n\n\tpublic getOverviewRulerLayoutInfo(): IOverviewRulerLayoutInfo {\n\t\treturn this.scrollbar.getOverviewRulerLayoutInfo();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.scrollbarDomNode;\n\t}\n\n\tpublic delegateVerticalScrollbarPointerDown(browserEvent: PointerEvent): void {\n\t\tthis.scrollbar.delegateVerticalScrollbarPointerDown(browserEvent);\n\t}\n\n\tpublic delegateScrollFromMouseWheelEvent(browserEvent: IMouseWheelEvent) {\n\t\tthis.scrollbar.delegateScrollFromMouseWheelEvent(browserEvent);\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (\n\t\t\te.hasChanged(EditorOption.scrollbar)\n\t\t\t|| e.hasChanged(EditorOption.mouseWheelScrollSensitivity)\n\t\t\t|| e.hasChanged(EditorOption.fastScrollSensitivity)\n\t\t) {\n\t\t\tconst options = this._context.configuration.options;\n\t\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\t\tconst mouseWheelScrollSensitivity = options.get(EditorOption.mouseWheelScrollSensitivity);\n\t\t\tconst fastScrollSensitivity = options.get(EditorOption.fastScrollSensitivity);\n\t\t\tconst scrollPredominantAxis = options.get(EditorOption.scrollPredominantAxis);\n\t\t\tconst newOpts: ScrollableElementChangeOptions = {\n\t\t\t\tvertical: scrollbar.vertical,\n\t\t\t\thorizontal: scrollbar.horizontal,\n\t\t\t\tverticalScrollbarSize: scrollbar.verticalScrollbarSize,\n\t\t\t\thorizontalScrollbarSize: scrollbar.horizontalScrollbarSize,\n\t\t\t\tscrollByPage: scrollbar.scrollByPage,\n\t\t\t\thandleMouseWheel: scrollbar.handleMouseWheel,\n\t\t\t\tmouseWheelScrollSensitivity: mouseWheelScrollSensitivity,\n\t\t\t\tfastScrollSensitivity: fastScrollSensitivity,\n\t\t\t\tscrollPredominantAxis: scrollPredominantAxis\n\t\t\t};\n\t\t\tthis.scrollbar.updateOptions(newOpts);\n\t\t}\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._setLayout();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis.scrollbar.updateClassName('editor-scrollable' + ' ' + getThemeTypeSelector(this._context.theme.type));\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to do\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis.scrollbar.renderNow();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1845, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/glyphMargin.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/glyphMargin/glyphMargin.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/glyphMargin/vs/editor/browser/viewParts/glyphMargin/glyphMargin.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport './glyphMargin.css';\nimport { IGlyphMarginWidget, IGlyphMarginWidgetPosition } from '../../editorBrowser.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\n\n/**\n * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.\n * This can end up producing multiple `LineDecorationToRender`.\n */\nexport class DecorationToRender {\n\tpublic readonly _decorationToRenderBrand: void = undefined;\n\n\tpublic readonly zIndex: number;\n\n\tconstructor(\n\t\tpublic readonly startLineNumber: number,\n\t\tpublic readonly endLineNumber: number,\n\t\tpublic readonly className: string,\n\t\tpublic readonly tooltip: string | null,\n\t\tzIndex: number | undefined,\n\t) {\n\t\tthis.zIndex = zIndex ?? 0;\n\t}\n}\n\n/**\n * A decoration that should be shown along a line.\n */\nexport class LineDecorationToRender {\n\tconstructor(\n\t\tpublic readonly className: string,\n\t\tpublic readonly zIndex: number,\n\t\tpublic readonly tooltip: string | null,\n\t) { }\n}\n\n/**\n * Decorations to render on a visible line.\n */\nexport class VisibleLineDecorationsToRender {\n\n\tprivate readonly decorations: LineDecorationToRender[] = [];\n\n\tpublic add(decoration: LineDecorationToRender) {\n\t\tthis.decorations.push(decoration);\n\t}\n\n\tpublic getDecorations(): LineDecorationToRender[] {\n\t\treturn this.decorations;\n\t}\n}\n\nexport abstract class DedupOverlay extends DynamicViewOverlay {\n\n\t/**\n\t * Returns an array with an element for each visible line number.\n\t */\n\tprotected _render(visibleStartLineNumber: number, visibleEndLineNumber: number, decorations: DecorationToRender[]): VisibleLineDecorationsToRender[] {\n\n\t\tconst output: VisibleLineDecorationsToRender[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = new VisibleLineDecorationsToRender();\n\t\t}\n\n\t\tif (decorations.length === 0) {\n\t\t\treturn output;\n\t\t}\n\n\t\t// Sort decorations by className, then by startLineNumber and then by endLineNumber\n\t\tdecorations.sort((a, b) => {\n\t\t\tif (a.className === b.className) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.endLineNumber - b.endLineNumber;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn (a.className < b.className ? -1 : 1);\n\t\t});\n\n\t\tlet prevClassName: string | null = null;\n\t\tlet prevEndLineIndex = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst className = d.className;\n\t\t\tconst zIndex = d.zIndex;\n\t\t\tlet startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n\t\t\tconst endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n\n\t\t\tif (prevClassName === className) {\n\t\t\t\t// Here we avoid rendering the same className multiple times on the same line\n\t\t\t\tstartLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n\t\t\t\tprevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n\t\t\t} else {\n\t\t\t\tprevClassName = className;\n\t\t\t\tprevEndLineIndex = endLineIndex;\n\t\t\t}\n\n\t\t\tfor (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n\t\t\t\toutput[i].add(new LineDecorationToRender(className, zIndex, d.tooltip));\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\nexport class GlyphMarginWidgets extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tprivate _lineHeight: number;\n\tprivate _glyphMargin: boolean;\n\tprivate _glyphMarginLeft: number;\n\tprivate _glyphMarginWidth: number;\n\tprivate _glyphMarginDecorationLaneCount: number;\n\n\tprivate _managedDomNodes: FastDomNode<HTMLElement>[];\n\tprivate _decorationGlyphsToRender: DecorationBasedGlyph[];\n\n\tprivate _widgets: { [key: string]: IWidgetData } = {};\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName('glyph-margin-widgets');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setTop(0);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._glyphMargin = options.get(EditorOption.glyphMargin);\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\t\tthis._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n\t\tthis._managedDomNodes = [];\n\t\tthis._decorationGlyphsToRender = [];\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._managedDomNodes = [];\n\t\tthis._decorationGlyphsToRender = [];\n\t\tthis._widgets = {};\n\t\tsuper.dispose();\n\t}\n\n\tpublic getWidgets(): IWidgetData[] {\n\t\treturn Object.values(this._widgets);\n\t}\n\n\t// --- begin event handlers\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._glyphMargin = options.get(EditorOption.glyphMargin);\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\t\tthis._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// --- begin widget management\n\n\tpublic addWidget(widget: IGlyphMarginWidget): void {\n\t\tconst domNode = createFastDomNode(widget.getDomNode());\n\n\t\tthis._widgets[widget.getId()] = {\n\t\t\twidget: widget,\n\t\t\tpreference: widget.getPosition(),\n\t\t\tdomNode: domNode,\n\t\t\trenderInfo: null\n\t\t};\n\n\t\tdomNode.setPosition('absolute');\n\t\tdomNode.setDisplay('none');\n\t\tdomNode.setAttribute('widgetId', widget.getId());\n\t\tthis.domNode.appendChild(domNode);\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic setWidgetPosition(widget: IGlyphMarginWidget, preference: IGlyphMarginWidgetPosition): boolean {\n\t\tconst myWidget = this._widgets[widget.getId()];\n\t\tif (myWidget.preference.lane === preference.lane\n\t\t\t&& myWidget.preference.zIndex === preference.zIndex\n\t\t\t&& Range.equalsRange(myWidget.preference.range, preference.range)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmyWidget.preference = preference;\n\t\tthis.setShouldRender();\n\n\t\treturn true;\n\t}\n\n\tpublic removeWidget(widget: IGlyphMarginWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets[widgetId]) {\n\t\t\tconst widgetData = this._widgets[widgetId];\n\t\t\tconst domNode = widgetData.domNode.domNode;\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tdomNode.remove();\n\t\t\tthis.setShouldRender();\n\t\t}\n\t}\n\n\t// --- end widget management\n\n\tprivate _collectDecorationBasedGlyphRenderRequest(ctx: RenderingContext, requests: GlyphRenderRequest[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\n\t\tfor (const d of decorations) {\n\t\t\tconst glyphMarginClassName = d.options.glyphMarginClassName;\n\t\t\tif (!glyphMarginClassName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n\t\t\tconst endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n\t\t\tconst lane = d.options.glyphMargin?.position ?? GlyphMarginLane.Center;\n\t\t\tconst zIndex = d.options.zIndex ?? 0;\n\n\t\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 0));\n\t\t\t\tconst laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(lane);\n\t\t\t\trequests.push(new DecorationBasedGlyphRenderRequest(lineNumber, laneIndex, zIndex, glyphMarginClassName));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _collectWidgetBasedGlyphRenderRequest(ctx: RenderingContext, requests: GlyphRenderRequest[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\tconst range = widget.preference.range;\n\t\t\tconst { startLineNumber, endLineNumber } = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(Range.lift(range));\n\t\t\tif (!startLineNumber || !endLineNumber || endLineNumber < visibleStartLineNumber || startLineNumber > visibleEndLineNumber) {\n\t\t\t\t// The widget is not in the viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// The widget is in the viewport, find a good line for it\n\t\t\tconst widgetLineNumber = Math.max(startLineNumber, visibleStartLineNumber);\n\t\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(widgetLineNumber, 0));\n\t\t\tconst laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(widget.preference.lane);\n\t\t\trequests.push(new WidgetBasedGlyphRenderRequest(widgetLineNumber, laneIndex, widget.preference.zIndex, widget));\n\t\t}\n\t}\n\n\tprivate _collectSortedGlyphRenderRequests(ctx: RenderingContext): GlyphRenderRequest[] {\n\n\t\tconst requests: GlyphRenderRequest[] = [];\n\n\t\tthis._collectDecorationBasedGlyphRenderRequest(ctx, requests);\n\t\tthis._collectWidgetBasedGlyphRenderRequest(ctx, requests);\n\n\t\t// sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC\n\t\t// don't change this sort unless you understand `prepareRender` below.\n\t\trequests.sort((a, b) => {\n\t\t\tif (a.lineNumber === b.lineNumber) {\n\t\t\t\tif (a.laneIndex === b.laneIndex) {\n\t\t\t\t\tif (a.zIndex === b.zIndex) {\n\t\t\t\t\t\tif (b.type === a.type) {\n\t\t\t\t\t\t\tif (a.type === GlyphRenderRequestType.Decoration && b.type === GlyphRenderRequestType.Decoration) {\n\t\t\t\t\t\t\t\treturn (a.className < b.className ? -1 : 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn b.type - a.type;\n\t\t\t\t\t}\n\t\t\t\t\treturn b.zIndex - a.zIndex;\n\t\t\t\t}\n\t\t\t\treturn a.laneIndex - b.laneIndex;\n\t\t\t}\n\t\t\treturn a.lineNumber - b.lineNumber;\n\t\t});\n\n\t\treturn requests;\n\t}\n\n\t/**\n\t * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.\n\t */\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._glyphMargin) {\n\t\t\tthis._decorationGlyphsToRender = [];\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\twidget.renderInfo = null;\n\t\t}\n\n\t\tconst requests = new ArrayQueue<GlyphRenderRequest>(this._collectSortedGlyphRenderRequests(ctx));\n\t\tconst decorationGlyphsToRender: DecorationBasedGlyph[] = [];\n\t\twhile (requests.length > 0) {\n\t\t\tconst first = requests.peek();\n\t\t\tif (!first) {\n\t\t\t\t// not possible\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Requests are sorted by lineNumber and lane, so we read all requests for this particular location\n\t\t\tconst requestsAtLocation = requests.takeWhile((el) => el.lineNumber === first.lineNumber && el.laneIndex === first.laneIndex);\n\t\t\tif (!requestsAtLocation || requestsAtLocation.length === 0) {\n\t\t\t\t// not possible\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst winner = requestsAtLocation[0];\n\t\t\tif (winner.type === GlyphRenderRequestType.Decoration) {\n\t\t\t\t// combine all decorations with the same z-index\n\n\t\t\t\tconst classNames: string[] = [];\n\t\t\t\t// requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one\n\t\t\t\tfor (const request of requestsAtLocation) {\n\t\t\t\t\tif (request.zIndex !== winner.zIndex || request.type !== winner.type) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (classNames.length === 0 || classNames[classNames.length - 1] !== request.className) {\n\t\t\t\t\t\tclassNames.push(request.className);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdecorationGlyphsToRender.push(winner.accept(classNames.join(' '))); // TODO@joyceerhl Implement overflow for remaining decorations\n\t\t\t} else {\n\t\t\t\t// widgets cannot be combined\n\t\t\t\twinner.widget.renderInfo = {\n\t\t\t\t\tlineNumber: winner.lineNumber,\n\t\t\t\t\tlaneIndex: winner.laneIndex,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tthis._decorationGlyphsToRender = decorationGlyphsToRender;\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._glyphMargin) {\n\t\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\t\twidget.domNode.setDisplay('none');\n\t\t\t}\n\t\t\twhile (this._managedDomNodes.length > 0) {\n\t\t\t\tconst domNode = this._managedDomNodes.pop();\n\t\t\t\tdomNode?.domNode.remove();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount));\n\n\t\t// Render widgets\n\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\tif (!widget.renderInfo) {\n\t\t\t\t// this widget is not visible\n\t\t\t\twidget.domNode.setDisplay('none');\n\t\t\t} else {\n\t\t\t\tconst top = ctx.viewportData.relativeVerticalOffset[widget.renderInfo.lineNumber - ctx.viewportData.startLineNumber];\n\t\t\t\tconst left = this._glyphMarginLeft + widget.renderInfo.laneIndex * this._lineHeight;\n\n\t\t\t\twidget.domNode.setDisplay('block');\n\t\t\t\twidget.domNode.setTop(top);\n\t\t\t\twidget.domNode.setLeft(left);\n\t\t\t\twidget.domNode.setWidth(width);\n\t\t\t\twidget.domNode.setHeight(this._lineHeight);\n\t\t\t}\n\t\t}\n\n\t\t// Render decorations, reusing previous dom nodes as possible\n\t\tfor (let i = 0; i < this._decorationGlyphsToRender.length; i++) {\n\t\t\tconst dec = this._decorationGlyphsToRender[i];\n\t\t\tconst decLineNumber = dec.lineNumber;\n\t\t\tconst top = ctx.viewportData.relativeVerticalOffset[decLineNumber - ctx.viewportData.startLineNumber];\n\t\t\tconst left = this._glyphMarginLeft + dec.laneIndex * this._lineHeight;\n\n\t\t\tlet domNode: FastDomNode<HTMLElement>;\n\t\t\tif (i < this._managedDomNodes.length) {\n\t\t\t\tdomNode = this._managedDomNodes[i];\n\t\t\t} else {\n\t\t\t\tdomNode = createFastDomNode(document.createElement('div'));\n\t\t\t\tthis._managedDomNodes.push(domNode);\n\t\t\t\tthis.domNode.appendChild(domNode);\n\t\t\t}\n\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(decLineNumber);\n\n\t\t\tdomNode.setClassName(`cgmr codicon ` + dec.combinedClassName);\n\t\t\tdomNode.setPosition(`absolute`);\n\t\t\tdomNode.setTop(top);\n\t\t\tdomNode.setLeft(left);\n\t\t\tdomNode.setWidth(width);\n\t\t\tdomNode.setHeight(lineHeight);\n\t\t}\n\n\t\t// remove extra dom nodes\n\t\twhile (this._managedDomNodes.length > this._decorationGlyphsToRender.length) {\n\t\t\tconst domNode = this._managedDomNodes.pop();\n\t\t\tdomNode?.domNode.remove();\n\t\t}\n\t}\n}\n\nexport interface IWidgetData {\n\twidget: IGlyphMarginWidget;\n\tpreference: IGlyphMarginWidgetPosition;\n\tdomNode: FastDomNode<HTMLElement>;\n\t/**\n\t * it will contain the location where to render the widget\n\t * or null if the widget is not visible\n\t */\n\trenderInfo: IRenderInfo | null;\n}\n\nexport interface IRenderInfo {\n\tlineNumber: number;\n\tlaneIndex: number;\n}\n\nconst enum GlyphRenderRequestType {\n\tDecoration = 0,\n\tWidget = 1\n}\n\n/**\n * A request to render a decoration in the glyph margin at a certain location.\n */\nclass DecorationBasedGlyphRenderRequest {\n\tpublic readonly type = GlyphRenderRequestType.Decoration;\n\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly laneIndex: number,\n\t\tpublic readonly zIndex: number,\n\t\tpublic readonly className: string,\n\t) { }\n\n\taccept(combinedClassName: string): DecorationBasedGlyph {\n\t\treturn new DecorationBasedGlyph(this.lineNumber, this.laneIndex, combinedClassName);\n\t}\n}\n\n/**\n * A request to render a widget in the glyph margin at a certain location.\n */\nclass WidgetBasedGlyphRenderRequest {\n\tpublic readonly type = GlyphRenderRequestType.Widget;\n\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly laneIndex: number,\n\t\tpublic readonly zIndex: number,\n\t\tpublic readonly widget: IWidgetData,\n\t) { }\n}\n\ntype GlyphRenderRequest = DecorationBasedGlyphRenderRequest | WidgetBasedGlyphRenderRequest;\n\nclass DecorationBasedGlyph {\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly laneIndex: number,\n\t\tpublic readonly combinedClassName: string\n\t) { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport './glyphMargin.css';\nimport { IGlyphMarginWidget, IGlyphMarginWidgetPosition } from '../../editorBrowser.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GlyphMarginLane } from '../../../common/model.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\n\n/**\n * Represents a decoration that should be shown along the lines from `startLineNumber` to `endLineNumber`.\n * This can end up producing multiple `LineDecorationToRender`.\n */\nexport class DecorationToRender {\n\tpublic readonly _decorationToRenderBrand: void = undefined;\n\n\tpublic readonly zIndex: number;\n\n\tconstructor(\n\t\tpublic readonly startLineNumber: number,\n\t\tpublic readonly endLineNumber: number,\n\t\tpublic readonly className: string,\n\t\tpublic readonly tooltip: string | null,\n\t\tzIndex: number | undefined,\n\t) {\n\t\tthis.zIndex = zIndex ?? 0;\n\t}\n}\n\n/**\n * A decoration that should be shown along a line.\n */\nexport class LineDecorationToRender {\n\tconstructor(\n\t\tpublic readonly className: string,\n\t\tpublic readonly zIndex: number,\n\t\tpublic readonly tooltip: string | null,\n\t) { }\n}\n\n/**\n * Decorations to render on a visible line.\n */\nexport class VisibleLineDecorationsToRender {\n\n\tprivate readonly decorations: LineDecorationToRender[] = [];\n\n\tpublic add(decoration: LineDecorationToRender) {\n\t\tthis.decorations.push(decoration);\n\t}\n\n\tpublic getDecorations(): LineDecorationToRender[] {\n\t\treturn this.decorations;\n\t}\n}\n\nexport abstract class DedupOverlay extends DynamicViewOverlay {\n\n\t/**\n\t * Returns an array with an element for each visible line number.\n\t */\n\tprotected _render(visibleStartLineNumber: number, visibleEndLineNumber: number, decorations: DecorationToRender[]): VisibleLineDecorationsToRender[] {\n\n\t\tconst output: VisibleLineDecorationsToRender[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = new VisibleLineDecorationsToRender();\n\t\t}\n\n\t\tif (decorations.length === 0) {\n\t\t\treturn output;\n\t\t}\n\n\t\t// Sort decorations by className, then by startLineNumber and then by endLineNumber\n\t\tdecorations.sort((a, b) => {\n\t\t\tif (a.className === b.className) {\n\t\t\t\tif (a.startLineNumber === b.startLineNumber) {\n\t\t\t\t\treturn a.endLineNumber - b.endLineNumber;\n\t\t\t\t}\n\t\t\t\treturn a.startLineNumber - b.startLineNumber;\n\t\t\t}\n\t\t\treturn (a.className < b.className ? -1 : 1);\n\t\t});\n\n\t\tlet prevClassName: string | null = null;\n\t\tlet prevEndLineIndex = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst className = d.className;\n\t\t\tconst zIndex = d.zIndex;\n\t\t\tlet startLineIndex = Math.max(d.startLineNumber, visibleStartLineNumber) - visibleStartLineNumber;\n\t\t\tconst endLineIndex = Math.min(d.endLineNumber, visibleEndLineNumber) - visibleStartLineNumber;\n\n\t\t\tif (prevClassName === className) {\n\t\t\t\t// Here we avoid rendering the same className multiple times on the same line\n\t\t\t\tstartLineIndex = Math.max(prevEndLineIndex + 1, startLineIndex);\n\t\t\t\tprevEndLineIndex = Math.max(prevEndLineIndex, endLineIndex);\n\t\t\t} else {\n\t\t\t\tprevClassName = className;\n\t\t\t\tprevEndLineIndex = endLineIndex;\n\t\t\t}\n\n\t\t\tfor (let i = startLineIndex; i <= prevEndLineIndex; i++) {\n\t\t\t\toutput[i].add(new LineDecorationToRender(className, zIndex, d.tooltip));\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n}\n\nexport class GlyphMarginWidgets extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tprivate _lineHeight: number;\n\tprivate _glyphMargin: boolean;\n\tprivate _glyphMarginLeft: number;\n\tprivate _glyphMarginWidth: number;\n\tprivate _glyphMarginDecorationLaneCount: number;\n\n\tprivate _managedDomNodes: FastDomNode<HTMLElement>[];\n\tprivate _decorationGlyphsToRender: DecorationBasedGlyph[];\n\n\tprivate _widgets: { [key: string]: IWidgetData } = {};\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tthis._context = context;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName('glyph-margin-widgets');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setTop(0);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._glyphMargin = options.get(EditorOption.glyphMargin);\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\t\tthis._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n\t\tthis._managedDomNodes = [];\n\t\tthis._decorationGlyphsToRender = [];\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._managedDomNodes = [];\n\t\tthis._decorationGlyphsToRender = [];\n\t\tthis._widgets = {};\n\t\tsuper.dispose();\n\t}\n\n\tpublic getWidgets(): IWidgetData[] {\n\t\treturn Object.values(this._widgets);\n\t}\n\n\t// --- begin event handlers\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._glyphMargin = options.get(EditorOption.glyphMargin);\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\t\tthis._glyphMarginDecorationLaneCount = layoutInfo.glyphMarginDecorationLaneCount;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// --- begin widget management\n\n\tpublic addWidget(widget: IGlyphMarginWidget): void {\n\t\tconst domNode = createFastDomNode(widget.getDomNode());\n\n\t\tthis._widgets[widget.getId()] = {\n\t\t\twidget: widget,\n\t\t\tpreference: widget.getPosition(),\n\t\t\tdomNode: domNode,\n\t\t\trenderInfo: null\n\t\t};\n\n\t\tdomNode.setPosition('absolute');\n\t\tdomNode.setDisplay('none');\n\t\tdomNode.setAttribute('widgetId', widget.getId());\n\t\tthis.domNode.appendChild(domNode);\n\n\t\tthis.setShouldRender();\n\t}\n\n\tpublic setWidgetPosition(widget: IGlyphMarginWidget, preference: IGlyphMarginWidgetPosition): boolean {\n\t\tconst myWidget = this._widgets[widget.getId()];\n\t\tif (myWidget.preference.lane === preference.lane\n\t\t\t&& myWidget.preference.zIndex === preference.zIndex\n\t\t\t&& Range.equalsRange(myWidget.preference.range, preference.range)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tmyWidget.preference = preference;\n\t\tthis.setShouldRender();\n\n\t\treturn true;\n\t}\n\n\tpublic removeWidget(widget: IGlyphMarginWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets[widgetId]) {\n\t\t\tconst widgetData = this._widgets[widgetId];\n\t\t\tconst domNode = widgetData.domNode.domNode;\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tdomNode.remove();\n\t\t\tthis.setShouldRender();\n\t\t}\n\t}\n\n\t// --- end widget management\n\n\tprivate _collectDecorationBasedGlyphRenderRequest(ctx: RenderingContext, requests: GlyphRenderRequest[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\n\t\tfor (const d of decorations) {\n\t\t\tconst glyphMarginClassName = d.options.glyphMarginClassName;\n\t\t\tif (!glyphMarginClassName) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startLineNumber = Math.max(d.range.startLineNumber, visibleStartLineNumber);\n\t\t\tconst endLineNumber = Math.min(d.range.endLineNumber, visibleEndLineNumber);\n\t\t\tconst lane = d.options.glyphMargin?.position ?? GlyphMarginLane.Center;\n\t\t\tconst zIndex = d.options.zIndex ?? 0;\n\n\t\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 0));\n\t\t\t\tconst laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(lane);\n\t\t\t\trequests.push(new DecorationBasedGlyphRenderRequest(lineNumber, laneIndex, zIndex, glyphMarginClassName));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _collectWidgetBasedGlyphRenderRequest(ctx: RenderingContext, requests: GlyphRenderRequest[]): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\tconst range = widget.preference.range;\n\t\t\tconst { startLineNumber, endLineNumber } = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(Range.lift(range));\n\t\t\tif (!startLineNumber || !endLineNumber || endLineNumber < visibleStartLineNumber || startLineNumber > visibleEndLineNumber) {\n\t\t\t\t// The widget is not in the viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// The widget is in the viewport, find a good line for it\n\t\t\tconst widgetLineNumber = Math.max(startLineNumber, visibleStartLineNumber);\n\t\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(widgetLineNumber, 0));\n\t\t\tconst laneIndex = this._context.viewModel.glyphLanes.getLanesAtLine(modelPosition.lineNumber).indexOf(widget.preference.lane);\n\t\t\trequests.push(new WidgetBasedGlyphRenderRequest(widgetLineNumber, laneIndex, widget.preference.zIndex, widget));\n\t\t}\n\t}\n\n\tprivate _collectSortedGlyphRenderRequests(ctx: RenderingContext): GlyphRenderRequest[] {\n\n\t\tconst requests: GlyphRenderRequest[] = [];\n\n\t\tthis._collectDecorationBasedGlyphRenderRequest(ctx, requests);\n\t\tthis._collectWidgetBasedGlyphRenderRequest(ctx, requests);\n\n\t\t// sort requests by lineNumber ASC, lane  ASC, zIndex DESC, type DESC (widgets first), className ASC\n\t\t// don't change this sort unless you understand `prepareRender` below.\n\t\trequests.sort((a, b) => {\n\t\t\tif (a.lineNumber === b.lineNumber) {\n\t\t\t\tif (a.laneIndex === b.laneIndex) {\n\t\t\t\t\tif (a.zIndex === b.zIndex) {\n\t\t\t\t\t\tif (b.type === a.type) {\n\t\t\t\t\t\t\tif (a.type === GlyphRenderRequestType.Decoration && b.type === GlyphRenderRequestType.Decoration) {\n\t\t\t\t\t\t\t\treturn (a.className < b.className ? -1 : 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn b.type - a.type;\n\t\t\t\t\t}\n\t\t\t\t\treturn b.zIndex - a.zIndex;\n\t\t\t\t}\n\t\t\t\treturn a.laneIndex - b.laneIndex;\n\t\t\t}\n\t\t\treturn a.lineNumber - b.lineNumber;\n\t\t});\n\n\t\treturn requests;\n\t}\n\n\t/**\n\t * Will store render information in each widget's renderInfo and in `_decorationGlyphsToRender`.\n\t */\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._glyphMargin) {\n\t\t\tthis._decorationGlyphsToRender = [];\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\twidget.renderInfo = null;\n\t\t}\n\n\t\tconst requests = new ArrayQueue<GlyphRenderRequest>(this._collectSortedGlyphRenderRequests(ctx));\n\t\tconst decorationGlyphsToRender: DecorationBasedGlyph[] = [];\n\t\twhile (requests.length > 0) {\n\t\t\tconst first = requests.peek();\n\t\t\tif (!first) {\n\t\t\t\t// not possible\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Requests are sorted by lineNumber and lane, so we read all requests for this particular location\n\t\t\tconst requestsAtLocation = requests.takeWhile((el) => el.lineNumber === first.lineNumber && el.laneIndex === first.laneIndex);\n\t\t\tif (!requestsAtLocation || requestsAtLocation.length === 0) {\n\t\t\t\t// not possible\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst winner = requestsAtLocation[0];\n\t\t\tif (winner.type === GlyphRenderRequestType.Decoration) {\n\t\t\t\t// combine all decorations with the same z-index\n\n\t\t\t\tconst classNames: string[] = [];\n\t\t\t\t// requests are sorted by zIndex, type, and className so we can dedup className by looking at the previous one\n\t\t\t\tfor (const request of requestsAtLocation) {\n\t\t\t\t\tif (request.zIndex !== winner.zIndex || request.type !== winner.type) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (classNames.length === 0 || classNames[classNames.length - 1] !== request.className) {\n\t\t\t\t\t\tclassNames.push(request.className);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdecorationGlyphsToRender.push(winner.accept(classNames.join(' '))); // TODO@joyceerhl Implement overflow for remaining decorations\n\t\t\t} else {\n\t\t\t\t// widgets cannot be combined\n\t\t\t\twinner.widget.renderInfo = {\n\t\t\t\t\tlineNumber: winner.lineNumber,\n\t\t\t\t\tlaneIndex: winner.laneIndex,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tthis._decorationGlyphsToRender = decorationGlyphsToRender;\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._glyphMargin) {\n\t\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\t\twidget.domNode.setDisplay('none');\n\t\t\t}\n\t\t\twhile (this._managedDomNodes.length > 0) {\n\t\t\t\tconst domNode = this._managedDomNodes.pop();\n\t\t\t\tdomNode?.domNode.remove();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst width = (Math.round(this._glyphMarginWidth / this._glyphMarginDecorationLaneCount));\n\n\t\t// Render widgets\n\t\tfor (const widget of Object.values(this._widgets)) {\n\t\t\tif (!widget.renderInfo) {\n\t\t\t\t// this widget is not visible\n\t\t\t\twidget.domNode.setDisplay('none');\n\t\t\t} else {\n\t\t\t\tconst top = ctx.viewportData.relativeVerticalOffset[widget.renderInfo.lineNumber - ctx.viewportData.startLineNumber];\n\t\t\t\tconst left = this._glyphMarginLeft + widget.renderInfo.laneIndex * this._lineHeight;\n\n\t\t\t\twidget.domNode.setDisplay('block');\n\t\t\t\twidget.domNode.setTop(top);\n\t\t\t\twidget.domNode.setLeft(left);\n\t\t\t\twidget.domNode.setWidth(width);\n\t\t\t\twidget.domNode.setHeight(this._lineHeight);\n\t\t\t}\n\t\t}\n\n\t\t// Render decorations, reusing previous dom nodes as possible\n\t\tfor (let i = 0; i < this._decorationGlyphsToRender.length; i++) {\n\t\t\tconst dec = this._decorationGlyphsToRender[i];\n\t\t\tconst decLineNumber = dec.lineNumber;\n\t\t\tconst top = ctx.viewportData.relativeVerticalOffset[decLineNumber - ctx.viewportData.startLineNumber];\n\t\t\tconst left = this._glyphMarginLeft + dec.laneIndex * this._lineHeight;\n\n\t\t\tlet domNode: FastDomNode<HTMLElement>;\n\t\t\tif (i < this._managedDomNodes.length) {\n\t\t\t\tdomNode = this._managedDomNodes[i];\n\t\t\t} else {\n\t\t\t\tdomNode = createFastDomNode(document.createElement('div'));\n\t\t\t\tthis._managedDomNodes.push(domNode);\n\t\t\t\tthis.domNode.appendChild(domNode);\n\t\t\t}\n\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(decLineNumber);\n\n\t\t\tdomNode.setClassName(`cgmr codicon ` + dec.combinedClassName);\n\t\t\tdomNode.setPosition(`absolute`);\n\t\t\tdomNode.setTop(top);\n\t\t\tdomNode.setLeft(left);\n\t\t\tdomNode.setWidth(width);\n\t\t\tdomNode.setHeight(lineHeight);\n\t\t}\n\n\t\t// remove extra dom nodes\n\t\twhile (this._managedDomNodes.length > this._decorationGlyphsToRender.length) {\n\t\t\tconst domNode = this._managedDomNodes.pop();\n\t\t\tdomNode?.domNode.remove();\n\t\t}\n\t}\n}\n\nexport interface IWidgetData {\n\twidget: IGlyphMarginWidget;\n\tpreference: IGlyphMarginWidgetPosition;\n\tdomNode: FastDomNode<HTMLElement>;\n\t/**\n\t * it will contain the location where to render the widget\n\t * or null if the widget is not visible\n\t */\n\trenderInfo: IRenderInfo | null;\n}\n\nexport interface IRenderInfo {\n\tlineNumber: number;\n\tlaneIndex: number;\n}\n\nconst enum GlyphRenderRequestType {\n\tDecoration = 0,\n\tWidget = 1\n}\n\n/**\n * A request to render a decoration in the glyph margin at a certain location.\n */\nclass DecorationBasedGlyphRenderRequest {\n\tpublic readonly type = GlyphRenderRequestType.Decoration;\n\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly laneIndex: number,\n\t\tpublic readonly zIndex: number,\n\t\tpublic readonly className: string,\n\t) { }\n\n\taccept(combinedClassName: string): DecorationBasedGlyph {\n\t\treturn new DecorationBasedGlyph(this.lineNumber, this.laneIndex, combinedClassName);\n\t}\n}\n\n/**\n * A request to render a widget in the glyph margin at a certain location.\n */\nclass WidgetBasedGlyphRenderRequest {\n\tpublic readonly type = GlyphRenderRequestType.Widget;\n\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly laneIndex: number,\n\t\tpublic readonly zIndex: number,\n\t\tpublic readonly widget: IWidgetData,\n\t) { }\n}\n\ntype GlyphRenderRequest = DecorationBasedGlyphRenderRequest | WidgetBasedGlyphRenderRequest;\n\nclass DecorationBasedGlyph {\n\tconstructor(\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly laneIndex: number,\n\t\tpublic readonly combinedClassName: string\n\t) { }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2244, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/indentGuides.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/indentGuides/indentGuides.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/indentGuides/vs/editor/browser/viewParts/indentGuides/indentGuides.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption, InternalGuidesOptions } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\n\n/**\n * Indent guides are vertical lines that help identify the indentation level of\n * the code.\n */\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryPosition: Position | null;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _maxIndentLeft: number;\n\tprivate _bracketPairGuideOptions: InternalGuidesOptions;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryPosition = null;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPosition = selection.getPosition();\n\t\tif (!this._primaryPosition?.equals(newPosition)) {\n\t\t\tthis._primaryPosition = newPosition;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;// || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(e: viewEvents.ViewLanguageConfigurationEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\n\t\tconst activeCursorPosition = this._primaryPosition;\n\n\t\tconst indents = this.getGuidesByLine(\n\t\t\tvisibleStartLineNumber,\n\t\t\tMath.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()),\n\t\t\tactiveCursorPosition\n\t\t);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\t\t\tlet result = '';\n\t\t\tconst leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n\t\t\tfor (const guide of indent) {\n\t\t\t\tconst left =\n\t\t\t\t\tguide.column === -1\n\t\t\t\t\t\t? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n\t\t\t\t\t\t: ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\tnew Position(lineNumber, guide.column)\n\t\t\t\t\t\t)!.left;\n\n\t\t\t\tif (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n\n\t\t\t\tconst width = guide.horizontalLine\n\t\t\t\t\t? (ctx.visibleRangeForPosition(\n\t\t\t\t\t\tnew Position(lineNumber, guide.horizontalLine.endColumn)\n\t\t\t\t\t)?.left ?? (left + this._spaceWidth)) - left\n\t\t\t\t\t: this._spaceWidth;\n\n\t\t\t\tresult += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n\t\t\t}\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate getGuidesByLine(\n\t\tvisibleStartLineNumber: number,\n\t\tvisibleEndLineNumber: number,\n\t\tactiveCursorPosition: Position | null\n\t): IndentGuide[][] {\n\t\tconst bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n\t\t\t? this._context.viewModel.getBracketGuidesInRangeByLine(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber,\n\t\t\t\tactiveCursorPosition,\n\t\t\t\t{\n\t\t\t\t\thighlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n\t\t\t\t\thorizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n\t\t\t\t\t\t? HorizontalGuidesState.Enabled\n\t\t\t\t\t\t: this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n\t\t\t\t\t\t\t? HorizontalGuidesState.EnabledForActive\n\t\t\t\t\t\t\t: HorizontalGuidesState.Disabled,\n\t\t\t\t\tincludeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n\t\t\t\t}\n\t\t\t)\n\t\t\t: null;\n\n\t\tconst indentGuides = this._bracketPairGuideOptions.indentation\n\t\t\t? this._context.viewModel.getLinesIndentGuides(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber\n\t\t\t)\n\t\t\t: null;\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\n\t\tif (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n\t\t\tconst activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst { indentSize } = this._context.viewModel.model.getOptions();\n\n\t\tconst result: IndentGuide[][] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineGuides = new Array<IndentGuide>();\n\t\t\tresult.push(lineGuides);\n\n\t\t\tconst bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n\t\t\tconst bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n\n\t\t\tconst indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n\n\t\t\tfor (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n\t\t\t\tconst indentGuide = (indentLvl - 1) * indentSize + 1;\n\t\t\t\tconst isActive =\n\t\t\t\t\t// Disable active indent guide if there are bracket guides.\n\t\t\t\t\t(this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n\t\t\t\t\tactiveIndentStartLineNumber <= lineNumber &&\n\t\t\t\t\tlineNumber <= activeIndentEndLineNumber &&\n\t\t\t\t\tindentLvl === activeIndentLevel;\n\t\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n\t\t\t\tconst peeked = bracketGuidesInLineQueue.peek();\n\t\t\t\tif (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n\t\t\t\t\tlineGuides.push(\n\t\t\t\t\t\tnew IndentGuide(\n\t\t\t\t\t\t\tindentGuide,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''),\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nfunction transparentToUndefined(color: Color | undefined): Color | undefined {\n\tif (color && color.isTransparent()) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst colors = [\n\t\t{ bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n\t\t{ bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n\t\t{ bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n\t\t{ bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n\t\t{ bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n\t\t{ bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n\t];\n\tconst colorProvider = new BracketPairGuidesClassNames();\n\n\tconst indentColors = [\n\t\t{ indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n\t\t{ indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n\t\t{ indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n\t\t{ indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n\t\t{ indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n\t\t{ indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n\t];\n\n\tconst colorValues = colors\n\t\t.map(c => {\n\t\t\tconst bracketColor = theme.getColor(c.bracketColor);\n\t\t\tconst guideColor = theme.getColor(c.guideColor);\n\t\t\tconst guideColorActive = theme.getColor(c.guideColorActive);\n\n\t\t\tconst effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n\t\t\tconst effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n\n\t\t\tif (!effectiveGuideColor || !effectiveGuideColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tguideColor: effectiveGuideColor,\n\t\t\t\tguideColorActive: effectiveGuideColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tconst indentColorValues = indentColors\n\t\t.map(c => {\n\t\t\tconst indentColor = theme.getColor(c.indentColor);\n\t\t\tconst indentColorActive = theme.getColor(c.indentColorActive);\n\n\t\t\tconst effectiveIndentColor = transparentToUndefined(indentColor);\n\t\t\tconst effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n\n\t\t\tif (!effectiveIndentColor || !effectiveIndentColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindentColor: effectiveIndentColor,\n\t\t\t\tindentColorActive: effectiveIndentColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tif (colorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = colorValues[level % colorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n\n\t\tcollector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n\t}\n\n\tif (indentColorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = indentColorValues[level % indentColorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './indentGuides.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { editorBracketHighlightingForeground1, editorBracketHighlightingForeground2, editorBracketHighlightingForeground3, editorBracketHighlightingForeground4, editorBracketHighlightingForeground5, editorBracketHighlightingForeground6, editorBracketPairGuideActiveBackground1, editorBracketPairGuideActiveBackground2, editorBracketPairGuideActiveBackground3, editorBracketPairGuideActiveBackground4, editorBracketPairGuideActiveBackground5, editorBracketPairGuideActiveBackground6, editorBracketPairGuideBackground1, editorBracketPairGuideBackground2, editorBracketPairGuideBackground3, editorBracketPairGuideBackground4, editorBracketPairGuideBackground5, editorBracketPairGuideBackground6, editorIndentGuide1, editorIndentGuide2, editorIndentGuide3, editorIndentGuide4, editorIndentGuide5, editorIndentGuide6, editorActiveIndentGuide1, editorActiveIndentGuide2, editorActiveIndentGuide3, editorActiveIndentGuide4, editorActiveIndentGuide5, editorActiveIndentGuide6 } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption, InternalGuidesOptions } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ArrayQueue } from '../../../../base/common/arrays.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { BracketPairGuidesClassNames } from '../../../common/model/guidesTextModelPart.js';\nimport { IndentGuide, HorizontalGuidesState } from '../../../common/textModelGuides.js';\n\n/**\n * Indent guides are vertical lines that help identify the indentation level of\n * the code.\n */\nexport class IndentGuidesOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _primaryPosition: Position | null;\n\tprivate _spaceWidth: number;\n\tprivate _renderResult: string[] | null;\n\tprivate _maxIndentLeft: number;\n\tprivate _bracketPairGuideOptions: InternalGuidesOptions;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._primaryPosition = null;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\tthis._renderResult = null;\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._spaceWidth = fontInfo.spaceWidth;\n\t\tthis._maxIndentLeft = wrappingInfo.wrappingColumn === -1 ? -1 : (wrappingInfo.wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._bracketPairGuideOptions = options.get(EditorOption.guides);\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst selection = e.selections[0];\n\t\tconst newPosition = selection.getPosition();\n\t\tif (!this._primaryPosition?.equals(newPosition)) {\n\t\t\tthis._primaryPosition = newPosition;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;// || e.scrollWidthChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLanguageConfigurationChanged(e: viewEvents.ViewLanguageConfigurationEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (!this._bracketPairGuideOptions.indentation && this._bracketPairGuideOptions.bracketPairs === false) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst scrollWidth = ctx.scrollWidth;\n\n\t\tconst activeCursorPosition = this._primaryPosition;\n\n\t\tconst indents = this.getGuidesByLine(\n\t\t\tvisibleStartLineNumber,\n\t\t\tMath.min(visibleEndLineNumber + 1, this._context.viewModel.getLineCount()),\n\t\t\tactiveCursorPosition\n\t\t);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst indent = indents[lineIndex];\n\t\t\tlet result = '';\n\t\t\tconst leftOffset = ctx.visibleRangeForPosition(new Position(lineNumber, 1))?.left ?? 0;\n\t\t\tfor (const guide of indent) {\n\t\t\t\tconst left =\n\t\t\t\t\tguide.column === -1\n\t\t\t\t\t\t? leftOffset + (guide.visibleColumn - 1) * this._spaceWidth\n\t\t\t\t\t\t: ctx.visibleRangeForPosition(\n\t\t\t\t\t\t\tnew Position(lineNumber, guide.column)\n\t\t\t\t\t\t)!.left;\n\n\t\t\t\tif (left > scrollWidth || (this._maxIndentLeft > 0 && left > this._maxIndentLeft)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tconst className = guide.horizontalLine ? (guide.horizontalLine.top ? 'horizontal-top' : 'horizontal-bottom') : 'vertical';\n\n\t\t\t\tconst width = guide.horizontalLine\n\t\t\t\t\t? (ctx.visibleRangeForPosition(\n\t\t\t\t\t\tnew Position(lineNumber, guide.horizontalLine.endColumn)\n\t\t\t\t\t)?.left ?? (left + this._spaceWidth)) - left\n\t\t\t\t\t: this._spaceWidth;\n\n\t\t\t\tresult += `<div class=\"core-guide ${guide.className} ${className}\" style=\"left:${left}px;width:${width}px\"></div>`;\n\t\t\t}\n\t\t\toutput[lineIndex] = result;\n\t\t}\n\t\tthis._renderResult = output;\n\t}\n\n\tprivate getGuidesByLine(\n\t\tvisibleStartLineNumber: number,\n\t\tvisibleEndLineNumber: number,\n\t\tactiveCursorPosition: Position | null\n\t): IndentGuide[][] {\n\t\tconst bracketGuides = this._bracketPairGuideOptions.bracketPairs !== false\n\t\t\t? this._context.viewModel.getBracketGuidesInRangeByLine(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber,\n\t\t\t\tactiveCursorPosition,\n\t\t\t\t{\n\t\t\t\t\thighlightActive: this._bracketPairGuideOptions.highlightActiveBracketPair,\n\t\t\t\t\thorizontalGuides: this._bracketPairGuideOptions.bracketPairsHorizontal === true\n\t\t\t\t\t\t? HorizontalGuidesState.Enabled\n\t\t\t\t\t\t: this._bracketPairGuideOptions.bracketPairsHorizontal === 'active'\n\t\t\t\t\t\t\t? HorizontalGuidesState.EnabledForActive\n\t\t\t\t\t\t\t: HorizontalGuidesState.Disabled,\n\t\t\t\t\tincludeInactive: this._bracketPairGuideOptions.bracketPairs === true,\n\t\t\t\t}\n\t\t\t)\n\t\t\t: null;\n\n\t\tconst indentGuides = this._bracketPairGuideOptions.indentation\n\t\t\t? this._context.viewModel.getLinesIndentGuides(\n\t\t\t\tvisibleStartLineNumber,\n\t\t\t\tvisibleEndLineNumber\n\t\t\t)\n\t\t\t: null;\n\n\t\tlet activeIndentStartLineNumber = 0;\n\t\tlet activeIndentEndLineNumber = 0;\n\t\tlet activeIndentLevel = 0;\n\n\t\tif (this._bracketPairGuideOptions.highlightActiveIndentation !== false && activeCursorPosition) {\n\t\t\tconst activeIndentInfo = this._context.viewModel.getActiveIndentGuide(activeCursorPosition.lineNumber, visibleStartLineNumber, visibleEndLineNumber);\n\t\t\tactiveIndentStartLineNumber = activeIndentInfo.startLineNumber;\n\t\t\tactiveIndentEndLineNumber = activeIndentInfo.endLineNumber;\n\t\t\tactiveIndentLevel = activeIndentInfo.indent;\n\t\t}\n\n\t\tconst { indentSize } = this._context.viewModel.model.getOptions();\n\n\t\tconst result: IndentGuide[][] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineGuides = new Array<IndentGuide>();\n\t\t\tresult.push(lineGuides);\n\n\t\t\tconst bracketGuidesInLine = bracketGuides ? bracketGuides[lineNumber - visibleStartLineNumber] : [];\n\t\t\tconst bracketGuidesInLineQueue = new ArrayQueue(bracketGuidesInLine);\n\n\t\t\tconst indentGuidesInLine = indentGuides ? indentGuides[lineNumber - visibleStartLineNumber] : 0;\n\n\t\t\tfor (let indentLvl = 1; indentLvl <= indentGuidesInLine; indentLvl++) {\n\t\t\t\tconst indentGuide = (indentLvl - 1) * indentSize + 1;\n\t\t\t\tconst isActive =\n\t\t\t\t\t// Disable active indent guide if there are bracket guides.\n\t\t\t\t\t(this._bracketPairGuideOptions.highlightActiveIndentation === 'always' || bracketGuidesInLine.length === 0) &&\n\t\t\t\t\tactiveIndentStartLineNumber <= lineNumber &&\n\t\t\t\t\tlineNumber <= activeIndentEndLineNumber &&\n\t\t\t\t\tindentLvl === activeIndentLevel;\n\t\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => g.visibleColumn < indentGuide) || []);\n\t\t\t\tconst peeked = bracketGuidesInLineQueue.peek();\n\t\t\t\tif (!peeked || peeked.visibleColumn !== indentGuide || peeked.horizontalLine) {\n\t\t\t\t\tlineGuides.push(\n\t\t\t\t\t\tnew IndentGuide(\n\t\t\t\t\t\t\tindentGuide,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t`core-guide-indent lvl-${(indentLvl - 1) % 30}` + (isActive ? ' indent-active' : ''),\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlineGuides.push(...bracketGuidesInLineQueue.takeWhile(g => true) || []);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nfunction transparentToUndefined(color: Color | undefined): Color | undefined {\n\tif (color && color.isTransparent()) {\n\t\treturn undefined;\n\t}\n\treturn color;\n}\n\nregisterThemingParticipant((theme, collector) => {\n\n\tconst colors = [\n\t\t{ bracketColor: editorBracketHighlightingForeground1, guideColor: editorBracketPairGuideBackground1, guideColorActive: editorBracketPairGuideActiveBackground1 },\n\t\t{ bracketColor: editorBracketHighlightingForeground2, guideColor: editorBracketPairGuideBackground2, guideColorActive: editorBracketPairGuideActiveBackground2 },\n\t\t{ bracketColor: editorBracketHighlightingForeground3, guideColor: editorBracketPairGuideBackground3, guideColorActive: editorBracketPairGuideActiveBackground3 },\n\t\t{ bracketColor: editorBracketHighlightingForeground4, guideColor: editorBracketPairGuideBackground4, guideColorActive: editorBracketPairGuideActiveBackground4 },\n\t\t{ bracketColor: editorBracketHighlightingForeground5, guideColor: editorBracketPairGuideBackground5, guideColorActive: editorBracketPairGuideActiveBackground5 },\n\t\t{ bracketColor: editorBracketHighlightingForeground6, guideColor: editorBracketPairGuideBackground6, guideColorActive: editorBracketPairGuideActiveBackground6 }\n\t];\n\tconst colorProvider = new BracketPairGuidesClassNames();\n\n\tconst indentColors = [\n\t\t{ indentColor: editorIndentGuide1, indentColorActive: editorActiveIndentGuide1 },\n\t\t{ indentColor: editorIndentGuide2, indentColorActive: editorActiveIndentGuide2 },\n\t\t{ indentColor: editorIndentGuide3, indentColorActive: editorActiveIndentGuide3 },\n\t\t{ indentColor: editorIndentGuide4, indentColorActive: editorActiveIndentGuide4 },\n\t\t{ indentColor: editorIndentGuide5, indentColorActive: editorActiveIndentGuide5 },\n\t\t{ indentColor: editorIndentGuide6, indentColorActive: editorActiveIndentGuide6 },\n\t];\n\n\tconst colorValues = colors\n\t\t.map(c => {\n\t\t\tconst bracketColor = theme.getColor(c.bracketColor);\n\t\t\tconst guideColor = theme.getColor(c.guideColor);\n\t\t\tconst guideColorActive = theme.getColor(c.guideColorActive);\n\n\t\t\tconst effectiveGuideColor = transparentToUndefined(transparentToUndefined(guideColor) ?? bracketColor?.transparent(0.3));\n\t\t\tconst effectiveGuideColorActive = transparentToUndefined(transparentToUndefined(guideColorActive) ?? bracketColor);\n\n\t\t\tif (!effectiveGuideColor || !effectiveGuideColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tguideColor: effectiveGuideColor,\n\t\t\t\tguideColorActive: effectiveGuideColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tconst indentColorValues = indentColors\n\t\t.map(c => {\n\t\t\tconst indentColor = theme.getColor(c.indentColor);\n\t\t\tconst indentColorActive = theme.getColor(c.indentColorActive);\n\n\t\t\tconst effectiveIndentColor = transparentToUndefined(indentColor);\n\t\t\tconst effectiveIndentColorActive = transparentToUndefined(indentColorActive);\n\n\t\t\tif (!effectiveIndentColor || !effectiveIndentColorActive) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tindentColor: effectiveIndentColor,\n\t\t\t\tindentColorActive: effectiveIndentColorActive,\n\t\t\t};\n\t\t})\n\t\t.filter(isDefined);\n\n\tif (colorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = colorValues[level % colorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .${colorProvider.getInlineClassNameOfLevel(level).replace(/ /g, '.')} { --guide-color: ${colors.guideColor}; --guide-color-active: ${colors.guideColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .vertical { box-shadow: 1px 0 0 0 var(--guide-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top { border-top: 1px solid var(--guide-color); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom { border-bottom: 1px solid var(--guide-color); }`);\n\n\t\tcollector.addRule(`.monaco-editor .vertical.${colorProvider.activeClassName} { box-shadow: 1px 0 0 0 var(--guide-color-active) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-top.${colorProvider.activeClassName} { border-top: 1px solid var(--guide-color-active); }`);\n\t\tcollector.addRule(`.monaco-editor .horizontal-bottom.${colorProvider.activeClassName} { border-bottom: 1px solid var(--guide-color-active); }`);\n\t}\n\n\tif (indentColorValues.length > 0) {\n\t\tfor (let level = 0; level < 30; level++) {\n\t\t\tconst colors = indentColorValues[level % indentColorValues.length];\n\t\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.lvl-${level} { --indent-color: ${colors.indentColor}; --indent-color-active: ${colors.indentColorActive}; }`);\n\t\t}\n\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent { box-shadow: 1px 0 0 0 var(--indent-color) inset; }`);\n\t\tcollector.addRule(`.monaco-editor .lines-content .core-guide-indent.indent-active { box-shadow: 1px 0 0 0 var(--indent-color-active) inset; }`);\n\t}\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2528, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/lineNumbers.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/lineNumbers/lineNumbers.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lineNumbers/vs/editor/browser/viewParts/lineNumbers/lineNumbers.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderLineNumbersType, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\n\n/**\n * Renders line numbers to the left of the main view lines content.\n */\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n\n\tpublic static readonly CLASS_NAME = 'line-numbers';\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _lineHeight!: number;\n\tprivate _renderLineNumbers!: RenderLineNumbersType;\n\tprivate _renderCustomLineNumbers!: ((lineNumber: number) => string) | null;\n\tprivate _renderFinalNewline!: 'off' | 'on' | 'dimmed';\n\tprivate _lineNumbersLeft!: number;\n\tprivate _lineNumbersWidth!: number;\n\tprivate _lastCursorModelPosition: Position;\n\tprivate _renderResult: string[] | null;\n\tprivate _activeModelLineNumber: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tthis._readConfig();\n\n\t\tthis._lastCursorModelPosition = new Position(1, 1);\n\t\tthis._renderResult = null;\n\t\tthis._activeModelLineNumber = 1;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _readConfig(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\tthis._renderLineNumbers = lineNumbers.renderType;\n\t\tthis._renderCustomLineNumbers = lineNumbers.renderFn;\n\t\tthis._renderFinalNewline = options.get(EditorOption.renderFinalNewline);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n\t\tthis._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._readConfig();\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst primaryViewPosition = e.selections[0].getPosition();\n\t\tthis._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n\n\t\tlet shouldRender = false;\n\t\tif (this._activeModelLineNumber !== this._lastCursorModelPosition.lineNumber) {\n\t\t\tthis._activeModelLineNumber = this._lastCursorModelPosition.lineNumber;\n\t\t\tshouldRender = true;\n\t\t}\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative || this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tshouldRender = true;\n\t\t}\n\t\treturn shouldRender;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn e.affectsLineNumber;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _getLineRenderLineNumber(viewLineNumber: number): string {\n\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n\t\tif (modelPosition.column !== 1) {\n\t\t\treturn '';\n\t\t}\n\t\tconst modelLineNumber = modelPosition.lineNumber;\n\n\t\tif (this._renderCustomLineNumbers) {\n\t\t\treturn this._renderCustomLineNumbers(modelLineNumber);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative) {\n\t\t\tconst diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n\t\t\tif (diff === 0) {\n\t\t\t\treturn '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n\t\t\t}\n\t\t\treturn String(diff);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tif (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tif (modelLineNumber % 10 === 0) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tconst finalLineNumber = this._context.viewModel.getLineCount();\n\t\t\tif (modelLineNumber === finalLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\treturn String(modelLineNumber);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Off) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n\t\tlineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n\t\tlet decorationStartIndex = 0;\n\n\t\tconst lineCount = this._context.viewModel.getLineCount();\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst modelLineNumber: number = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 1)).lineNumber;\n\n\t\t\tlet renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n\t\t\tlet extraClassNames = '';\n\n\t\t\t// skip decorations whose end positions we've already passed\n\t\t\twhile (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n\t\t\t\tdecorationStartIndex++;\n\t\t\t}\n\t\t\tfor (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n\t\t\t\tconst { range, options } = lineNoDecorations[i];\n\t\t\t\tif (range.startLineNumber <= lineNumber) {\n\t\t\t\t\textraClassNames += ' ' + options.lineNumberClassName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!renderLineNumber && !extraClassNames) {\n\t\t\t\toutput[lineIndex] = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n\t\t\t\t// this is the last line\n\t\t\t\tif (this._renderFinalNewline === 'off') {\n\t\t\t\t\trenderLineNumber = '';\n\t\t\t\t}\n\t\t\t\tif (this._renderFinalNewline === 'dimmed') {\n\t\t\t\t\textraClassNames += ' dimmed-line-number';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modelLineNumber === this._activeModelLineNumber) {\n\t\t\t\textraClassNames += ' active-line-number';\n\t\t\t}\n\n\n\t\t\toutput[lineIndex] = (\n\t\t\t\t`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`\n\t\t\t);\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorLineNumbersColor = theme.getColor(editorLineNumbers);\n\tconst editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n\tif (editorDimmedLineNumberColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n\t} else if (editorLineNumbersColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './lineNumbers.css';\nimport * as platform from '../../../../base/common/platform.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderLineNumbersType, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { editorDimmedLineNumber, editorLineNumbers } from '../../../common/core/editorColorRegistry.js';\n\n/**\n * Renders line numbers to the left of the main view lines content.\n */\nexport class LineNumbersOverlay extends DynamicViewOverlay {\n\n\tpublic static readonly CLASS_NAME = 'line-numbers';\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _lineHeight!: number;\n\tprivate _renderLineNumbers!: RenderLineNumbersType;\n\tprivate _renderCustomLineNumbers!: ((lineNumber: number) => string) | null;\n\tprivate _renderFinalNewline!: 'off' | 'on' | 'dimmed';\n\tprivate _lineNumbersLeft!: number;\n\tprivate _lineNumbersWidth!: number;\n\tprivate _lastCursorModelPosition: Position;\n\tprivate _renderResult: string[] | null;\n\tprivate _activeModelLineNumber: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\n\t\tthis._readConfig();\n\n\t\tthis._lastCursorModelPosition = new Position(1, 1);\n\t\tthis._renderResult = null;\n\t\tthis._activeModelLineNumber = 1;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _readConfig(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tconst lineNumbers = options.get(EditorOption.lineNumbers);\n\t\tthis._renderLineNumbers = lineNumbers.renderType;\n\t\tthis._renderCustomLineNumbers = lineNumbers.renderFn;\n\t\tthis._renderFinalNewline = options.get(EditorOption.renderFinalNewline);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._lineNumbersLeft = layoutInfo.lineNumbersLeft;\n\t\tthis._lineNumbersWidth = layoutInfo.lineNumbersWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._readConfig();\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst primaryViewPosition = e.selections[0].getPosition();\n\t\tthis._lastCursorModelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(primaryViewPosition);\n\n\t\tlet shouldRender = false;\n\t\tif (this._activeModelLineNumber !== this._lastCursorModelPosition.lineNumber) {\n\t\t\tthis._activeModelLineNumber = this._lastCursorModelPosition.lineNumber;\n\t\t\tshouldRender = true;\n\t\t}\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative || this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tshouldRender = true;\n\t\t}\n\t\treturn shouldRender;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn e.affectsLineNumber;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _getLineRenderLineNumber(viewLineNumber: number): string {\n\t\tconst modelPosition = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(viewLineNumber, 1));\n\t\tif (modelPosition.column !== 1) {\n\t\t\treturn '';\n\t\t}\n\t\tconst modelLineNumber = modelPosition.lineNumber;\n\n\t\tif (this._renderCustomLineNumbers) {\n\t\t\treturn this._renderCustomLineNumbers(modelLineNumber);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Relative) {\n\t\t\tconst diff = Math.abs(this._lastCursorModelPosition.lineNumber - modelLineNumber);\n\t\t\tif (diff === 0) {\n\t\t\t\treturn '<span class=\"relative-current-line-number\">' + modelLineNumber + '</span>';\n\t\t\t}\n\t\t\treturn String(diff);\n\t\t}\n\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Interval) {\n\t\t\tif (this._lastCursorModelPosition.lineNumber === modelLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tif (modelLineNumber % 10 === 0) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\tconst finalLineNumber = this._context.viewModel.getLineCount();\n\t\t\tif (modelLineNumber === finalLineNumber) {\n\t\t\t\treturn String(modelLineNumber);\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\n\t\treturn String(modelLineNumber);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._renderLineNumbers === RenderLineNumbersType.Off) {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst lineHeightClassName = (platform.isLinux ? (this._lineHeight % 2 === 0 ? ' lh-even' : ' lh-odd') : '');\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst lineNoDecorations = this._context.viewModel.getDecorationsInViewport(ctx.visibleRange).filter(d => !!d.options.lineNumberClassName);\n\t\tlineNoDecorations.sort((a, b) => Range.compareRangesUsingEnds(a.range, b.range));\n\t\tlet decorationStartIndex = 0;\n\n\t\tconst lineCount = this._context.viewModel.getLineCount();\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst modelLineNumber: number = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber, 1)).lineNumber;\n\n\t\t\tlet renderLineNumber = this._getLineRenderLineNumber(lineNumber);\n\t\t\tlet extraClassNames = '';\n\n\t\t\t// skip decorations whose end positions we've already passed\n\t\t\twhile (decorationStartIndex < lineNoDecorations.length && lineNoDecorations[decorationStartIndex].range.endLineNumber < lineNumber) {\n\t\t\t\tdecorationStartIndex++;\n\t\t\t}\n\t\t\tfor (let i = decorationStartIndex; i < lineNoDecorations.length; i++) {\n\t\t\t\tconst { range, options } = lineNoDecorations[i];\n\t\t\t\tif (range.startLineNumber <= lineNumber) {\n\t\t\t\t\textraClassNames += ' ' + options.lineNumberClassName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!renderLineNumber && !extraClassNames) {\n\t\t\t\toutput[lineIndex] = '';\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lineNumber === lineCount && this._context.viewModel.getLineLength(lineNumber) === 0) {\n\t\t\t\t// this is the last line\n\t\t\t\tif (this._renderFinalNewline === 'off') {\n\t\t\t\t\trenderLineNumber = '';\n\t\t\t\t}\n\t\t\t\tif (this._renderFinalNewline === 'dimmed') {\n\t\t\t\t\textraClassNames += ' dimmed-line-number';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (modelLineNumber === this._activeModelLineNumber) {\n\t\t\t\textraClassNames += ' active-line-number';\n\t\t\t}\n\n\n\t\t\toutput[lineIndex] = (\n\t\t\t\t`<div class=\"${LineNumbersOverlay.CLASS_NAME}${lineHeightClassName}${extraClassNames}\" style=\"left:${this._lineNumbersLeft}px;width:${this._lineNumbersWidth}px;\">${renderLineNumber}</div>`\n\t\t\t);\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorLineNumbersColor = theme.getColor(editorLineNumbers);\n\tconst editorDimmedLineNumberColor = theme.getColor(editorDimmedLineNumber);\n\tif (editorDimmedLineNumberColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorDimmedLineNumberColor}; }`);\n\t} else if (editorLineNumbersColor) {\n\t\tcollector.addRule(`.monaco-editor .line-numbers.dimmed-line-number { color: ${editorLineNumbersColor.transparent(0.4)}; }`);\n\t}\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2720, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/domReadingContext.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewLines/domReadingContext.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/vs/editor/browser/viewParts/viewLines/domReadingContext.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class DomReadingContext {\n\n\tprivate _didDomLayout: boolean = false;\n\tprivate _clientRectDeltaLeft: number = 0;\n\tprivate _clientRectScale: number = 1;\n\tprivate _clientRectRead: boolean = false;\n\n\tpublic get didDomLayout(): boolean {\n\t\treturn this._didDomLayout;\n\t}\n\n\tprivate readClientRect(): void {\n\t\tif (!this._clientRectRead) {\n\t\t\tthis._clientRectRead = true;\n\t\t\tconst rect = this._domNode.getBoundingClientRect();\n\t\t\tthis.markDidDomLayout();\n\t\t\tthis._clientRectDeltaLeft = rect.left;\n\t\t\tthis._clientRectScale = rect.width / this._domNode.offsetWidth;\n\t\t}\n\t}\n\n\tpublic get clientRectDeltaLeft(): number {\n\t\tif (!this._clientRectRead) {\n\t\t\tthis.readClientRect();\n\t\t}\n\t\treturn this._clientRectDeltaLeft;\n\t}\n\n\tpublic get clientRectScale(): number {\n\t\tif (!this._clientRectRead) {\n\t\t\tthis.readClientRect();\n\t\t}\n\t\treturn this._clientRectScale;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tpublic readonly endNode: HTMLElement\n\t) {\n\t}\n\n\tpublic markDidDomLayout(): void {\n\t\tthis._didDomLayout = true;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class DomReadingContext {\n\n\tprivate _didDomLayout: boolean = false;\n\tprivate _clientRectDeltaLeft: number = 0;\n\tprivate _clientRectScale: number = 1;\n\tprivate _clientRectRead: boolean = false;\n\n\tpublic get didDomLayout(): boolean {\n\t\treturn this._didDomLayout;\n\t}\n\n\tprivate readClientRect(): void {\n\t\tif (!this._clientRectRead) {\n\t\t\tthis._clientRectRead = true;\n\t\t\tconst rect = this._domNode.getBoundingClientRect();\n\t\t\tthis.markDidDomLayout();\n\t\t\tthis._clientRectDeltaLeft = rect.left;\n\t\t\tthis._clientRectScale = rect.width / this._domNode.offsetWidth;\n\t\t}\n\t}\n\n\tpublic get clientRectDeltaLeft(): number {\n\t\tif (!this._clientRectRead) {\n\t\t\tthis.readClientRect();\n\t\t}\n\t\treturn this._clientRectDeltaLeft;\n\t}\n\n\tpublic get clientRectScale(): number {\n\t\tif (!this._clientRectRead) {\n\t\t\tthis.readClientRect();\n\t\t}\n\t\treturn this._clientRectScale;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tpublic readonly endNode: HTMLElement\n\t) {\n\t}\n\n\tpublic markDidDomLayout(): void {\n\t\tthis._didDomLayout = true;\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAE1F,MAAO,iBAAiB;IAO7B,IAAW,YAAY,GAAA;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IAEO,cAAc,GAAA;QACrB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;YACnD,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC;YACtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;QAChE,CAAC;IACF,CAAC;IAED,IAAW,mBAAmB,GAAA;QAC7B,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACvB,CAAC;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC;IAClC,CAAC;IAED,IAAW,eAAe,GAAA;QACzB,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACvB,CAAC;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC9B,CAAC;IAED,YACkB,QAAqB,EACtB,OAAoB,CAAA;QADnB,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAa;QACtB,IAAA,CAAA,OAAO,GAAP,OAAO,CAAa;QAnC7B,IAAA,CAAA,aAAa,GAAY,KAAK,CAAC;QAC/B,IAAA,CAAA,oBAAoB,GAAW,CAAC,CAAC;QACjC,IAAA,CAAA,gBAAgB,GAAW,CAAC,CAAC;QAC7B,IAAA,CAAA,eAAe,GAAY,KAAK,CAAC;IAkCzC,CAAC;IAEM,gBAAgB,GAAA;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC3B,CAAC;CACD","debugId":null}},
    {"offset": {"line": 2768, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/viewLineOptions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewLines/viewLineOptions.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/vs/editor/browser/viewParts/viewLines/viewLineOptions.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\nexport class ViewLineOptions {\n\tpublic readonly themeType: ColorScheme;\n\tpublic readonly renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\tpublic readonly experimentalWhitespaceRendering: 'svg' | 'font' | 'off';\n\tpublic readonly renderControlCharacters: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly useMonospaceOptimizations: boolean;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\tpublic readonly fontLigatures: string;\n\tpublic readonly verticalScrollbarSize: number;\n\tpublic readonly useGpu: boolean;\n\n\tconstructor(config: IEditorConfiguration, themeType: ColorScheme) {\n\t\tthis.themeType = themeType;\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\tthis.experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tthis.renderControlCharacters = options.get(EditorOption.renderControlCharacters);\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.useMonospaceOptimizations = (\n\t\t\tfontInfo.isMonospace\n\t\t\t&& !options.get(EditorOption.disableMonospaceOptimizations)\n\t\t);\n\t\tthis.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t\tthis.fontLigatures = options.get(EditorOption.fontLigatures);\n\t\tthis.verticalScrollbarSize = options.get(EditorOption.scrollbar).verticalScrollbarSize;\n\t\tthis.useGpu = options.get(EditorOption.experimentalGpuAcceleration) === 'on';\n\t}\n\n\tpublic equals(other: ViewLineOptions): boolean {\n\t\treturn (\n\t\t\tthis.themeType === other.themeType\n\t\t\t&& this.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.experimentalWhitespaceRendering === other.experimentalWhitespaceRendering\n\t\t\t&& this.renderControlCharacters === other.renderControlCharacters\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.middotWidth === other.middotWidth\n\t\t\t&& this.wsmiddotWidth === other.wsmiddotWidth\n\t\t\t&& this.useMonospaceOptimizations === other.useMonospaceOptimizations\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t\t&& this.fontLigatures === other.fontLigatures\n\t\t\t&& this.verticalScrollbarSize === other.verticalScrollbarSize\n\t\t\t&& this.useGpu === other.useGpu\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\nexport class ViewLineOptions {\n\tpublic readonly themeType: ColorScheme;\n\tpublic readonly renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\tpublic readonly experimentalWhitespaceRendering: 'svg' | 'font' | 'off';\n\tpublic readonly renderControlCharacters: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly useMonospaceOptimizations: boolean;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\tpublic readonly fontLigatures: string;\n\tpublic readonly verticalScrollbarSize: number;\n\tpublic readonly useGpu: boolean;\n\n\tconstructor(config: IEditorConfiguration, themeType: ColorScheme) {\n\t\tthis.themeType = themeType;\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\tthis.experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tthis.renderControlCharacters = options.get(EditorOption.renderControlCharacters);\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.useMonospaceOptimizations = (\n\t\t\tfontInfo.isMonospace\n\t\t\t&& !options.get(EditorOption.disableMonospaceOptimizations)\n\t\t);\n\t\tthis.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t\tthis.fontLigatures = options.get(EditorOption.fontLigatures);\n\t\tthis.verticalScrollbarSize = options.get(EditorOption.scrollbar).verticalScrollbarSize;\n\t\tthis.useGpu = options.get(EditorOption.experimentalGpuAcceleration) === 'on';\n\t}\n\n\tpublic equals(other: ViewLineOptions): boolean {\n\t\treturn (\n\t\t\tthis.themeType === other.themeType\n\t\t\t&& this.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.experimentalWhitespaceRendering === other.experimentalWhitespaceRendering\n\t\t\t&& this.renderControlCharacters === other.renderControlCharacters\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.middotWidth === other.middotWidth\n\t\t\t&& this.wsmiddotWidth === other.wsmiddotWidth\n\t\t\t&& this.useMonospaceOptimizations === other.useMonospaceOptimizations\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t\t&& this.fontLigatures === other.fontLigatures\n\t\t\t&& this.verticalScrollbarSize === other.verticalScrollbarSize\n\t\t\t&& this.useGpu === other.useGpu\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAM1F,MAAO,eAAe;IAgB3B,YAAY,MAA4B,EAAE,SAAsB,CAAA;QAC/D,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,yBAAA,GAAuB,CAAC;QACpD,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,iCAAA,GAA+B,CAAC;QACnE,IAAI,CAAC,+BAA+B,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,gDAAA,GAA8C,CAAC;QACjG,IAAI,CAAC,uBAAuB,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,wCAAA,GAAsC,CAAC;QACjF,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC5C,IAAI,CAAC,yBAAyB,GAAG,AAChC,QAAQ,CAAC,WAAW,IACjB,CAAC,OAAO,CAAC,GAAG,CAAA,GAAA,8CAAA,GAA4C,CAC3D,CAAC;QACF,IAAI,CAAC,8BAA8B,GAAG,QAAQ,CAAC,8BAA8B,CAAC;QAC9E,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,2BAAA,GAAyB,CAAC;QACvD,IAAI,CAAC,sBAAsB,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,uCAAA,GAAqC,CAAC;QAC/E,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,8BAAA,GAA4B,CAAC;QAC7D,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,0BAAA,GAAwB,EAAC,qBAAqB,CAAC;QACvF,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,4CAAA,GAA0C,MAAK,IAAI,CAAC;IAC9E,CAAC;IAEM,MAAM,CAAC,KAAsB,EAAA;QACnC,OAAO,AACN,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,IAC/B,IAAI,CAAC,gBAAgB,KAAK,KAAK,CAAC,gBAAgB,IAChD,IAAI,CAAC,+BAA+B,KAAK,KAAK,CAAC,+BAA+B,IAC9E,IAAI,CAAC,uBAAuB,KAAK,KAAK,CAAC,uBAAuB,IAC9D,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACpC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,IACtC,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,IAC1C,IAAI,CAAC,yBAAyB,KAAK,KAAK,CAAC,yBAAyB,IAClE,IAAI,CAAC,8BAA8B,KAAK,KAAK,CAAC,8BAA8B,IAC5E,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACpC,IAAI,CAAC,sBAAsB,KAAK,KAAK,CAAC,sBAAsB,IAC5D,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,aAAa,IAC1C,IAAI,CAAC,qBAAqB,KAAK,KAAK,CAAC,qBAAqB,IAC1D,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAC/B,CAAC;IACH,CAAC;CACD","debugId":null}},
    {"offset": {"line": 2802, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/viewLines.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewLines/viewLines.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLines/vs/editor/browser/viewParts/viewLines/viewLines.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport './viewLines.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { HorizontalPosition, HorizontalRange, IViewLines, LineVisibleRanges, VisibleRanges } from '../../view/renderingContext.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLine } from './viewLine.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ScrollType } from '../../../common/editorCommon.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { Viewport } from '../../../common/viewModel.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { ViewLineOptions } from './viewLineOptions.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { TextDirection } from '../../../common/model.js';\n\nclass LastRenderedData {\n\n\tprivate _currentVisibleRange: Range;\n\n\tconstructor() {\n\t\tthis._currentVisibleRange = new Range(1, 1, 1, 1);\n\t}\n\n\tpublic getCurrentVisibleRange(): Range {\n\t\treturn this._currentVisibleRange;\n\t}\n\n\tpublic setCurrentVisibleRange(currentVisibleRange: Range): void {\n\t\tthis._currentVisibleRange = currentVisibleRange;\n\t}\n}\n\nclass HorizontalRevealRangeRequest {\n\tpublic readonly type = 'range';\n\tpublic readonly minLineNumber: number;\n\tpublic readonly maxLineNumber: number;\n\n\tconstructor(\n\t\tpublic readonly minimalReveal: boolean,\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly startColumn: number,\n\t\tpublic readonly endColumn: number,\n\t\tpublic readonly startScrollTop: number,\n\t\tpublic readonly stopScrollTop: number,\n\t\tpublic readonly scrollType: ScrollType\n\t) {\n\t\tthis.minLineNumber = lineNumber;\n\t\tthis.maxLineNumber = lineNumber;\n\t}\n}\n\nclass HorizontalRevealSelectionsRequest {\n\tpublic readonly type = 'selections';\n\tpublic readonly minLineNumber: number;\n\tpublic readonly maxLineNumber: number;\n\n\tconstructor(\n\t\tpublic readonly minimalReveal: boolean,\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly startScrollTop: number,\n\t\tpublic readonly stopScrollTop: number,\n\t\tpublic readonly scrollType: ScrollType\n\t) {\n\t\tlet minLineNumber = selections[0].startLineNumber;\n\t\tlet maxLineNumber = selections[0].endLineNumber;\n\t\tfor (let i = 1, len = selections.length; i < len; i++) {\n\t\t\tconst selection = selections[i];\n\t\t\tminLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n\t\t\tmaxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n\t\t}\n\t\tthis.minLineNumber = minLineNumber;\n\t\tthis.maxLineNumber = maxLineNumber;\n\t}\n}\n\ntype HorizontalRevealRequest = HorizontalRevealRangeRequest | HorizontalRevealSelectionsRequest;\n\n/**\n * The view lines part is responsible for rendering the actual content of a\n * file.\n */\nexport class ViewLines extends ViewPart implements IViewLines {\n\t/**\n\t * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n\t */\n\tprivate static readonly HORIZONTAL_EXTRA_PX = 30;\n\n\tprivate readonly _linesContent: FastDomNode<HTMLElement>;\n\tprivate readonly _textRangeRestingSpot: HTMLElement;\n\tprivate readonly _visibleLines: VisibleLinesCollection<ViewLine>;\n\tprivate readonly domNode: FastDomNode<HTMLElement>;\n\n\t// --- config\n\tprivate _lineHeight: number;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _isViewportWrapping: boolean;\n\tprivate _revealHorizontalRightPadding: number;\n\tprivate _cursorSurroundingLines: number;\n\tprivate _cursorSurroundingLinesStyle: 'default' | 'all';\n\tprivate _canUseLayerHinting: boolean;\n\tprivate _viewLineOptions: ViewLineOptions;\n\n\t// --- width\n\tprivate _maxLineWidth: number;\n\tprivate readonly _asyncUpdateLineWidths: RunOnceScheduler;\n\tprivate readonly _asyncCheckMonospaceFontAssumptions: RunOnceScheduler;\n\n\tprivate _horizontalRevealRequest: HorizontalRevealRequest | null;\n\tprivate readonly _lastRenderedData: LastRenderedData;\n\n\t// Sticky Scroll\n\tprivate _stickyScrollEnabled: boolean;\n\tprivate _maxNumberStickyLines: number;\n\n\tconstructor(context: ViewContext, viewGpuContext: ViewGpuContext | undefined, linesContent: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\n\t\tconst conf = this._context.configuration;\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._isViewportWrapping = wrappingInfo.isViewportWrapping;\n\t\tthis._revealHorizontalRightPadding = options.get(EditorOption.revealHorizontalRightPadding);\n\t\tthis._cursorSurroundingLines = options.get(EditorOption.cursorSurroundingLines);\n\t\tthis._cursorSurroundingLinesStyle = options.get(EditorOption.cursorSurroundingLinesStyle);\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n\n\t\tthis._linesContent = linesContent;\n\t\tthis._textRangeRestingSpot = document.createElement('div');\n\t\tthis._visibleLines = new VisibleLinesCollection(this._context, {\n\t\t\tcreateLine: () => new ViewLine(viewGpuContext, this._viewLineOptions),\n\t\t});\n\t\tthis.domNode = this._visibleLines.domNode;\n\n\t\tPartFingerprints.write(this.domNode, PartFingerprint.ViewLines);\n\t\tthis.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tapplyFontInfo(this.domNode, fontInfo);\n\n\t\t// --- width & height\n\t\tthis._maxLineWidth = 0;\n\t\tthis._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n\t\t\tthis._updateLineWidthsSlow();\n\t\t}, 200);\n\t\tthis._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n\t\t\tthis._checkMonospaceFontAssumptions();\n\t\t}, 2000);\n\n\t\tthis._lastRenderedData = new LastRenderedData();\n\n\t\tthis._horizontalRevealRequest = null;\n\n\t\t// sticky scroll widget\n\t\tthis._stickyScrollEnabled = options.get(EditorOption.stickyScroll).enabled;\n\t\tthis._maxNumberStickyLines = options.get(EditorOption.stickyScroll).maxLineCount;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._asyncUpdateLineWidths.dispose();\n\t\tthis._asyncCheckMonospaceFontAssumptions.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.domNode;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._visibleLines.onConfigurationChanged(e);\n\t\tif (e.hasChanged(EditorOption.wrappingInfo)) {\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._isViewportWrapping = wrappingInfo.isViewportWrapping;\n\t\tthis._revealHorizontalRightPadding = options.get(EditorOption.revealHorizontalRightPadding);\n\t\tthis._cursorSurroundingLines = options.get(EditorOption.cursorSurroundingLines);\n\t\tthis._cursorSurroundingLinesStyle = options.get(EditorOption.cursorSurroundingLinesStyle);\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\n\t\t// sticky scroll\n\t\tthis._stickyScrollEnabled = options.get(EditorOption.stickyScroll).enabled;\n\t\tthis._maxNumberStickyLines = options.get(EditorOption.stickyScroll).maxLineCount;\n\n\t\tapplyFontInfo(this.domNode, fontInfo);\n\n\t\tthis._onOptionsMaybeChanged();\n\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\treturn true;\n\t}\n\tprivate _onOptionsMaybeChanged(): boolean {\n\t\tconst conf = this._context.configuration;\n\n\t\tconst newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n\t\tif (!this._viewLineOptions.equals(newViewLineOptions)) {\n\t\t\tthis._viewLineOptions = newViewLineOptions;\n\n\t\t\tconst startLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst endLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\t\tconst line = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tline.onOptionsChanged(this._viewLineOptions);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tlet r = false;\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tr = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n\t\t}\n\t\treturn r;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (true/*e.inlineDecorationsChanged*/) {\n\t\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tthis._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tconst shouldRender = this._visibleLines.onFlushed(e, this._viewLineOptions.useGpu);\n\t\tthis._maxLineWidth = 0;\n\t\treturn shouldRender;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn this._visibleLines.onLinesChanged(e);\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn this._visibleLines.onLinesDeleted(e);\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn this._visibleLines.onLinesInserted(e);\n\t}\n\tpublic override onRevealRangeRequest(e: viewEvents.ViewRevealRangeRequestEvent): boolean {\n\t\t// Using the future viewport here in order to handle multiple\n\t\t// incoming reveal range requests that might all desire to be animated\n\t\tconst desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n\n\t\tif (desiredScrollTop === -1) {\n\t\t\t// marker to abort the reveal range request\n\t\t\treturn false;\n\t\t}\n\n\t\t// validate the new desired scroll top\n\t\tlet newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n\n\t\tif (e.revealHorizontal) {\n\t\t\tif (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n\t\t\t\t// Two or more lines? => scroll to base (That's how you see most of the two lines)\n\t\t\t\tnewScrollPosition = {\n\t\t\t\t\tscrollTop: newScrollPosition.scrollTop,\n\t\t\t\t\tscrollLeft: 0\n\t\t\t\t};\n\t\t\t} else if (e.range) {\n\t\t\t\t// We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n\t\t\t\tthis._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n\t\t\t} else if (e.selections && e.selections.length > 0) {\n\t\t\t\tthis._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._horizontalRevealRequest = null;\n\t\t}\n\n\t\tconst scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n\t\tconst scrollType = (scrollTopDelta <= this._lineHeight ? ScrollType.Immediate : e.scrollType);\n\t\tthis._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (this._horizontalRevealRequest && e.scrollLeftChanged) {\n\t\t\t// cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n\t\t\tthis._horizontalRevealRequest = null;\n\t\t}\n\t\tif (this._horizontalRevealRequest && e.scrollTopChanged) {\n\t\t\tconst min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n\t\t\tconst max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n\t\t\tif (e.scrollTop < min || e.scrollTop > max) {\n\t\t\t\t// cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n\t\t\t\tthis._horizontalRevealRequest = null;\n\t\t\t}\n\t\t}\n\t\tthis.domNode.setWidth(e.scrollWidth);\n\t\treturn this._visibleLines.onScrollChanged(e) || true;\n\t}\n\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\treturn this._visibleLines.onTokensChanged(e);\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\tthis._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n\t\treturn this._visibleLines.onZonesChanged(e);\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._onOptionsMaybeChanged();\n\t}\n\n\t// ---- end view event handlers\n\n\t// ----------- HELPERS FOR OTHERS\n\n\tpublic getPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null {\n\t\tconst viewLineDomNode = this._getViewLineDomNode(spanNode);\n\t\tif (viewLineDomNode === null) {\n\t\t\t// Couldn't find view line node\n\t\t\treturn null;\n\t\t}\n\t\tconst lineNumber = this._getLineNumberFor(viewLineDomNode);\n\n\t\tif (lineNumber === -1) {\n\t\t\t// Couldn't find view line node\n\t\t\treturn null;\n\t\t}\n\n\t\tif (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n\t\t\t// lineNumber is outside range\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n\t\t\t// Line is empty\n\t\t\treturn new Position(lineNumber, 1);\n\t\t}\n\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t// Couldn't find line\n\t\t\treturn null;\n\t\t}\n\n\t\tlet column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(spanNode, offset);\n\t\tconst minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n\t\tif (column < minColumn) {\n\t\t\tcolumn = minColumn;\n\t\t}\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tprivate _getViewLineDomNode(node: HTMLElement | null): HTMLElement | null {\n\t\twhile (node && node.nodeType === 1) {\n\t\t\tif (node.className === ViewLine.CLASS_NAME) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tnode = node.parentElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @returns the line number of this view line dom node.\n\t */\n\tprivate _getLineNumberFor(domNode: HTMLElement): number {\n\t\tconst startLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst endLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst line = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tif (domNode === line.getDomNode()) {\n\t\t\t\treturn lineNumber;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic getLineWidth(lineNumber: number): number {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t// Couldn't find line\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\t\tconst result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n\t\tthis._updateLineWidthsSlowIfDomDidLayout(context);\n\n\t\treturn result;\n\t}\n\n\tpublic linesVisibleRangesForRange(_range: Range, includeNewLines: boolean): LineVisibleRanges[] | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalEndLineNumber = _range.endLineNumber;\n\t\tconst range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst visibleRanges: LineVisibleRanges[] = [];\n\t\tlet visibleRangesLen = 0;\n\t\tconst domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\n\t\tlet nextLineModelLineNumber: number = 0;\n\t\tif (includeNewLines) {\n\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n\t\t}\n\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\n\t\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n\t\t\tconst continuesInNextLine = lineNumber !== originalEndLineNumber;\n\t\t\tconst endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tconst visibleRangesForLine = visibleLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n\n\t\t\tif (!visibleRangesForLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (includeNewLines && lineNumber < originalEndLineNumber) {\n\t\t\t\tconst currentLineModelLineNumber = nextLineModelLineNumber;\n\t\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n\n\t\t\t\tif (currentLineModelLineNumber !== nextLineModelLineNumber) {\n\t\t\t\t\tconst floatHorizontalRange = visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1];\n\t\t\t\t\tfloatHorizontalRange.width += this._typicalHalfwidthCharacterWidth;\n\t\t\t\t\tif (this._context.viewModel.getTextDirection(currentLineModelLineNumber) === TextDirection.RTL) {\n\t\t\t\t\t\tfloatHorizontalRange.left -= this._typicalHalfwidthCharacterWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvisibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine);\n\t\t}\n\n\t\tthis._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n\n\t\tif (visibleRangesLen === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn visibleRanges;\n\t}\n\n\tprivate _visibleRangesForLineRange(lineNumber: number, startColumn: number, endColumn: number): VisibleRanges | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tif (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\t\tconst result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n\t\tthis._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n\n\t\treturn result;\n\t}\n\n\tprivate _lineIsRenderedRTL(lineNumber: number): boolean {\n\t\tif (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\treturn visibleLine.isRenderedRTL();\n\t}\n\n\tpublic visibleRangeForPosition(position: Position): HorizontalPosition | null {\n\t\tconst visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n\t\tif (!visibleRanges) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n\t}\n\n\t/**\n\t * Updates the max line width if it is fast to compute.\n\t * Returns true if all lines were taken into account.\n\t * Returns false if some lines need to be reevaluated (in a slow fashion).\n\t */\n\tprivate _updateLineWidthsFast(): boolean {\n\t\treturn this._updateLineWidths(true);\n\t}\n\n\tprivate _updateLineWidthsSlow(): void {\n\t\tthis._updateLineWidths(false);\n\t}\n\n\t/**\n\t * Update the line widths using DOM layout information after someone else\n\t * has caused a synchronous layout.\n\t */\n\tprivate _updateLineWidthsSlowIfDomDidLayout(domReadingContext: DomReadingContext): void {\n\t\tif (!domReadingContext.didDomLayout) {\n\t\t\t// only proceed if we just did a layout\n\t\t\treturn;\n\t\t}\n\t\tif (this._asyncUpdateLineWidths.isScheduled()) {\n\t\t\t// reading widths is not scheduled => widths are up-to-date\n\t\t\treturn;\n\t\t}\n\t\tthis._asyncUpdateLineWidths.cancel();\n\t\tthis._updateLineWidthsSlow();\n\t}\n\n\tprivate _updateLineWidths(fast: boolean): boolean {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\n\t\tlet localMaxLineWidth = 1;\n\t\tlet allWidthsComputed = true;\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\n\t\t\tif (fast && !visibleLine.getWidthIsFast()) {\n\t\t\t\t// Cannot compute width in a fast way for this line\n\t\t\t\tallWidthsComputed = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlocalMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n\t\t}\n\n\t\tif (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n\t\t\t// we know the max line width for all the lines\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\tthis._ensureMaxLineWidth(localMaxLineWidth);\n\n\t\treturn allWidthsComputed;\n\t}\n\n\tprivate _checkMonospaceFontAssumptions(): void {\n\t\t// Problems with monospace assumptions are more apparent for longer lines,\n\t\t// as small rounding errors start to sum up, so we will select the longest\n\t\t// line for a closer inspection\n\t\tlet longestLineNumber = -1;\n\t\tlet longestWidth = -1;\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tif (visibleLine.needsMonospaceFontCheck()) {\n\t\t\t\tconst lineWidth = visibleLine.getWidth(null);\n\t\t\t\tif (lineWidth > longestWidth) {\n\t\t\t\t\tlongestWidth = lineWidth;\n\t\t\t\t\tlongestLineNumber = lineNumber;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (longestLineNumber === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tvisibleLine.onMonospaceAssumptionsInvalidated();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tpublic render(): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tpublic renderText(viewportData: ViewportData): void {\n\t\t// (1) render lines - ensures lines are in the DOM\n\t\tthis._visibleLines.renderLines(viewportData);\n\t\tthis._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n\t\tthis.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n\t\tthis.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n\n\t\t// (2) compute horizontal scroll position:\n\t\t//  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n\t\t//  - it might change `scrollWidth` and `scrollLeft`\n\t\tif (this._horizontalRevealRequest) {\n\n\t\t\tconst horizontalRevealRequest = this._horizontalRevealRequest;\n\n\t\t\t// Check that we have the line that contains the horizontal range in the viewport\n\t\t\tif (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n\n\t\t\t\tthis._horizontalRevealRequest = null;\n\n\t\t\t\t// allow `visibleRangesForRange2` to work\n\t\t\t\tthis.onDidRender();\n\n\t\t\t\t// compute new scroll position\n\t\t\t\tconst newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n\n\t\t\t\tif (newScrollLeft) {\n\t\t\t\t\tif (!this._isViewportWrapping && !newScrollLeft.hasRTL) {\n\t\t\t\t\t\t// ensure `scrollWidth` is large enough\n\t\t\t\t\t\tthis._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n\t\t\t\t\t}\n\t\t\t\t\t// set `scrollLeft`\n\t\t\t\t\tthis._context.viewModel.viewLayout.setScrollPosition({\n\t\t\t\t\t\tscrollLeft: newScrollLeft.scrollLeft\n\t\t\t\t\t}, horizontalRevealRequest.scrollType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n\t\tif (!this._updateLineWidthsFast()) {\n\t\t\t// Computing the width of some lines would be slow => delay it\n\t\t\tthis._asyncUpdateLineWidths.schedule();\n\t\t} else {\n\t\t\tthis._asyncUpdateLineWidths.cancel();\n\t\t}\n\n\t\tif (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n\t\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tif (visibleLine.needsMonospaceFontCheck()) {\n\t\t\t\t\tthis._asyncCheckMonospaceFontAssumptions.schedule();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (3) handle scrolling\n\t\tthis._linesContent.setLayerHinting(this._canUseLayerHinting);\n\t\tthis._linesContent.setContain('strict');\n\t\tconst adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n\t\tthis._linesContent.setTop(-adjustedScrollTop);\n\t\tthis._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n\t}\n\n\t// --- width\n\n\tprivate _ensureMaxLineWidth(lineWidth: number): void {\n\t\tconst iLineWidth = Math.ceil(lineWidth);\n\t\tif (this._maxLineWidth < iLineWidth) {\n\t\t\tthis._maxLineWidth = iLineWidth;\n\t\t\tthis._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n\t\t}\n\t}\n\n\tprivate _computeScrollTopToRevealRange(viewport: Viewport, source: string | null | undefined, minimalReveal: boolean, range: Range | null, selections: Selection[] | null, verticalType: viewEvents.VerticalRevealType): number {\n\t\tconst viewportStartY = viewport.top;\n\t\tconst viewportHeight = viewport.height;\n\t\tconst viewportEndY = viewportStartY + viewportHeight;\n\t\tlet boxIsSingleRange: boolean;\n\t\tlet boxStartY: number;\n\t\tlet boxEndY: number;\n\n\t\tif (selections && selections.length > 0) {\n\t\t\tlet minLineNumber = selections[0].startLineNumber;\n\t\t\tlet maxLineNumber = selections[0].endLineNumber;\n\t\t\tfor (let i = 1, len = selections.length; i < len; i++) {\n\t\t\t\tconst selection = selections[i];\n\t\t\t\tminLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n\t\t\t\tmaxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n\t\t\t}\n\t\t\tboxIsSingleRange = false;\n\t\t\tboxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n\t\t\tboxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n\t\t} else if (range) {\n\t\t\tboxIsSingleRange = true;\n\t\t\tboxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n\t\t\tboxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n\n\t\tlet paddingTop: number = 0;\n\t\tlet paddingBottom: number = 0;\n\n\t\tif (!shouldIgnoreScrollOff) {\n\t\t\tconst maxLinesInViewport = (viewportHeight / this._lineHeight);\n\t\t\tconst surroundingLines = Math.max(this._cursorSurroundingLines, this._stickyScrollEnabled ? this._maxNumberStickyLines : 0);\n\t\t\tconst context = Math.min(maxLinesInViewport / 2, surroundingLines);\n\t\t\tpaddingTop = context * this._lineHeight;\n\t\t\tpaddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n\t\t} else {\n\t\t\tif (!minimalReveal) {\n\t\t\t\t// Reveal one more line above (this case is hit when dragging)\n\t\t\t\tpaddingTop = this._lineHeight;\n\t\t\t}\n\t\t}\n\t\tif (!minimalReveal) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.Simple || verticalType === viewEvents.VerticalRevealType.Bottom) {\n\t\t\t\t// Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n\t\t\t\tpaddingBottom += this._lineHeight;\n\t\t\t}\n\t\t}\n\n\t\tboxStartY -= paddingTop;\n\t\tboxEndY += paddingBottom;\n\t\tlet newScrollTop: number;\n\n\t\tif (boxEndY - boxStartY > viewportHeight) {\n\t\t\t// the box is larger than the viewport ... scroll to its top\n\t\t\tif (!boxIsSingleRange) {\n\t\t\t\t// do not reveal multiple cursors if there are more than fit the viewport\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tnewScrollTop = boxStartY;\n\t\t} else if (verticalType === viewEvents.VerticalRevealType.NearTop || verticalType === viewEvents.VerticalRevealType.NearTopIfOutsideViewport) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.NearTopIfOutsideViewport && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n\t\t\t\t// Box is already in the viewport... do nothing\n\t\t\t\tnewScrollTop = viewportStartY;\n\t\t\t} else {\n\t\t\t\t// We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n\t\t\t\tconst desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n\t\t\t\t// Try to scroll just above the box with the desired gap\n\t\t\t\tconst desiredScrollTop = boxStartY - desiredGapAbove;\n\t\t\t\t// But ensure that the box is not pushed out of viewport\n\t\t\t\tconst minScrollTop = boxEndY - viewportHeight;\n\t\t\t\tnewScrollTop = Math.max(minScrollTop, desiredScrollTop);\n\t\t\t}\n\t\t} else if (verticalType === viewEvents.VerticalRevealType.Center || verticalType === viewEvents.VerticalRevealType.CenterIfOutsideViewport) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.CenterIfOutsideViewport && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n\t\t\t\t// Box is already in the viewport... do nothing\n\t\t\t\tnewScrollTop = viewportStartY;\n\t\t\t} else {\n\t\t\t\t// Box is outside the viewport... center it\n\t\t\t\tconst boxMiddleY = (boxStartY + boxEndY) / 2;\n\t\t\t\tnewScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n\t\t\t}\n\t\t} else {\n\t\t\tnewScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === viewEvents.VerticalRevealType.Top, verticalType === viewEvents.VerticalRevealType.Bottom);\n\t\t}\n\n\t\treturn newScrollTop;\n\t}\n\n\tprivate _computeScrollLeftToReveal(horizontalRevealRequest: HorizontalRevealRequest): { scrollLeft: number; maxHorizontalOffset: number; hasRTL: boolean } | null {\n\n\t\tconst viewport = this._context.viewLayout.getCurrentViewport();\n\t\tconst layoutInfo = this._context.configuration.options.get(EditorOption.layoutInfo);\n\t\tconst viewportStartX = viewport.left;\n\t\tconst viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n\n\t\tlet boxStartX = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tlet boxEndX = 0;\n\t\tlet hasRTL = false;\n\t\tif (horizontalRevealRequest.type === 'range') {\n\t\t\thasRTL = this._lineIsRenderedRTL(horizontalRevealRequest.lineNumber);\n\t\t\tconst visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n\t\t\tif (!visibleRanges) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (const visibleRange of visibleRanges.ranges) {\n\t\t\t\tboxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n\t\t\t\tboxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const selection of horizontalRevealRequest.selections) {\n\t\t\t\tif (selection.startLineNumber !== selection.endLineNumber) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n\t\t\t\thasRTL ||= this._lineIsRenderedRTL(selection.startLineNumber);\n\t\t\t\tif (!visibleRanges) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tfor (const visibleRange of visibleRanges.ranges) {\n\t\t\t\t\tboxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n\t\t\t\t\tboxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontalRevealRequest.minimalReveal) {\n\t\t\tboxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n\t\t\tboxEndX += this._revealHorizontalRightPadding;\n\t\t}\n\n\t\tif (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n\t\treturn {\n\t\t\tscrollLeft: newScrollLeft,\n\t\t\tmaxHorizontalOffset: boxEndX,\n\t\t\thasRTL\n\t\t};\n\t}\n\n\tprivate _computeMinimumScrolling(viewportStart: number, viewportEnd: number, boxStart: number, boxEnd: number, revealAtStart?: boolean, revealAtEnd?: boolean): number {\n\t\tviewportStart = viewportStart | 0;\n\t\tviewportEnd = viewportEnd | 0;\n\t\tboxStart = boxStart | 0;\n\t\tboxEnd = boxEnd | 0;\n\t\trevealAtStart = !!revealAtStart;\n\t\trevealAtEnd = !!revealAtEnd;\n\n\t\tconst viewportLength = viewportEnd - viewportStart;\n\t\tconst boxLength = boxEnd - boxStart;\n\n\t\tif (boxLength < viewportLength) {\n\t\t\t// The box would fit in the viewport\n\n\t\t\tif (revealAtStart) {\n\t\t\t\treturn boxStart;\n\t\t\t}\n\n\t\t\tif (revealAtEnd) {\n\t\t\t\treturn Math.max(0, boxEnd - viewportLength);\n\t\t\t}\n\n\t\t\tif (boxStart < viewportStart) {\n\t\t\t\t// The box is above the viewport\n\t\t\t\treturn boxStart;\n\t\t\t} else if (boxEnd > viewportEnd) {\n\t\t\t\t// The box is below the viewport\n\t\t\t\treturn Math.max(0, boxEnd - viewportLength);\n\t\t\t}\n\t\t} else {\n\t\t\t// The box would not fit in the viewport\n\t\t\t// Reveal the beginning of the box\n\t\t\treturn boxStart;\n\t\t}\n\n\t\treturn viewportStart;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { Constants } from '../../../../base/common/uint.js';\nimport './viewLines.css';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { HorizontalPosition, HorizontalRange, IViewLines, LineVisibleRanges, VisibleRanges } from '../../view/renderingContext.js';\nimport { VisibleLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { DomReadingContext } from './domReadingContext.js';\nimport { ViewLine } from './viewLine.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ScrollType } from '../../../common/editorCommon.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { Viewport } from '../../../common/viewModel.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { ViewLineOptions } from './viewLineOptions.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { TextDirection } from '../../../common/model.js';\n\nclass LastRenderedData {\n\n\tprivate _currentVisibleRange: Range;\n\n\tconstructor() {\n\t\tthis._currentVisibleRange = new Range(1, 1, 1, 1);\n\t}\n\n\tpublic getCurrentVisibleRange(): Range {\n\t\treturn this._currentVisibleRange;\n\t}\n\n\tpublic setCurrentVisibleRange(currentVisibleRange: Range): void {\n\t\tthis._currentVisibleRange = currentVisibleRange;\n\t}\n}\n\nclass HorizontalRevealRangeRequest {\n\tpublic readonly type = 'range';\n\tpublic readonly minLineNumber: number;\n\tpublic readonly maxLineNumber: number;\n\n\tconstructor(\n\t\tpublic readonly minimalReveal: boolean,\n\t\tpublic readonly lineNumber: number,\n\t\tpublic readonly startColumn: number,\n\t\tpublic readonly endColumn: number,\n\t\tpublic readonly startScrollTop: number,\n\t\tpublic readonly stopScrollTop: number,\n\t\tpublic readonly scrollType: ScrollType\n\t) {\n\t\tthis.minLineNumber = lineNumber;\n\t\tthis.maxLineNumber = lineNumber;\n\t}\n}\n\nclass HorizontalRevealSelectionsRequest {\n\tpublic readonly type = 'selections';\n\tpublic readonly minLineNumber: number;\n\tpublic readonly maxLineNumber: number;\n\n\tconstructor(\n\t\tpublic readonly minimalReveal: boolean,\n\t\tpublic readonly selections: Selection[],\n\t\tpublic readonly startScrollTop: number,\n\t\tpublic readonly stopScrollTop: number,\n\t\tpublic readonly scrollType: ScrollType\n\t) {\n\t\tlet minLineNumber = selections[0].startLineNumber;\n\t\tlet maxLineNumber = selections[0].endLineNumber;\n\t\tfor (let i = 1, len = selections.length; i < len; i++) {\n\t\t\tconst selection = selections[i];\n\t\t\tminLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n\t\t\tmaxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n\t\t}\n\t\tthis.minLineNumber = minLineNumber;\n\t\tthis.maxLineNumber = maxLineNumber;\n\t}\n}\n\ntype HorizontalRevealRequest = HorizontalRevealRangeRequest | HorizontalRevealSelectionsRequest;\n\n/**\n * The view lines part is responsible for rendering the actual content of a\n * file.\n */\nexport class ViewLines extends ViewPart implements IViewLines {\n\t/**\n\t * Adds this amount of pixels to the right of lines (no-one wants to type near the edge of the viewport)\n\t */\n\tprivate static readonly HORIZONTAL_EXTRA_PX = 30;\n\n\tprivate readonly _linesContent: FastDomNode<HTMLElement>;\n\tprivate readonly _textRangeRestingSpot: HTMLElement;\n\tprivate readonly _visibleLines: VisibleLinesCollection<ViewLine>;\n\tprivate readonly domNode: FastDomNode<HTMLElement>;\n\n\t// --- config\n\tprivate _lineHeight: number;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _isViewportWrapping: boolean;\n\tprivate _revealHorizontalRightPadding: number;\n\tprivate _cursorSurroundingLines: number;\n\tprivate _cursorSurroundingLinesStyle: 'default' | 'all';\n\tprivate _canUseLayerHinting: boolean;\n\tprivate _viewLineOptions: ViewLineOptions;\n\n\t// --- width\n\tprivate _maxLineWidth: number;\n\tprivate readonly _asyncUpdateLineWidths: RunOnceScheduler;\n\tprivate readonly _asyncCheckMonospaceFontAssumptions: RunOnceScheduler;\n\n\tprivate _horizontalRevealRequest: HorizontalRevealRequest | null;\n\tprivate readonly _lastRenderedData: LastRenderedData;\n\n\t// Sticky Scroll\n\tprivate _stickyScrollEnabled: boolean;\n\tprivate _maxNumberStickyLines: number;\n\n\tconstructor(context: ViewContext, viewGpuContext: ViewGpuContext | undefined, linesContent: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\n\t\tconst conf = this._context.configuration;\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._isViewportWrapping = wrappingInfo.isViewportWrapping;\n\t\tthis._revealHorizontalRightPadding = options.get(EditorOption.revealHorizontalRightPadding);\n\t\tthis._cursorSurroundingLines = options.get(EditorOption.cursorSurroundingLines);\n\t\tthis._cursorSurroundingLinesStyle = options.get(EditorOption.cursorSurroundingLinesStyle);\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._viewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n\n\t\tthis._linesContent = linesContent;\n\t\tthis._textRangeRestingSpot = document.createElement('div');\n\t\tthis._visibleLines = new VisibleLinesCollection(this._context, {\n\t\t\tcreateLine: () => new ViewLine(viewGpuContext, this._viewLineOptions),\n\t\t});\n\t\tthis.domNode = this._visibleLines.domNode;\n\n\t\tPartFingerprints.write(this.domNode, PartFingerprint.ViewLines);\n\t\tthis.domNode.setClassName(`view-lines ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tapplyFontInfo(this.domNode, fontInfo);\n\n\t\t// --- width & height\n\t\tthis._maxLineWidth = 0;\n\t\tthis._asyncUpdateLineWidths = new RunOnceScheduler(() => {\n\t\t\tthis._updateLineWidthsSlow();\n\t\t}, 200);\n\t\tthis._asyncCheckMonospaceFontAssumptions = new RunOnceScheduler(() => {\n\t\t\tthis._checkMonospaceFontAssumptions();\n\t\t}, 2000);\n\n\t\tthis._lastRenderedData = new LastRenderedData();\n\n\t\tthis._horizontalRevealRequest = null;\n\n\t\t// sticky scroll widget\n\t\tthis._stickyScrollEnabled = options.get(EditorOption.stickyScroll).enabled;\n\t\tthis._maxNumberStickyLines = options.get(EditorOption.stickyScroll).maxLineCount;\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._asyncUpdateLineWidths.dispose();\n\t\tthis._asyncCheckMonospaceFontAssumptions.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this.domNode;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._visibleLines.onConfigurationChanged(e);\n\t\tif (e.hasChanged(EditorOption.wrappingInfo)) {\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst wrappingInfo = options.get(EditorOption.wrappingInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._isViewportWrapping = wrappingInfo.isViewportWrapping;\n\t\tthis._revealHorizontalRightPadding = options.get(EditorOption.revealHorizontalRightPadding);\n\t\tthis._cursorSurroundingLines = options.get(EditorOption.cursorSurroundingLines);\n\t\tthis._cursorSurroundingLinesStyle = options.get(EditorOption.cursorSurroundingLinesStyle);\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\n\t\t// sticky scroll\n\t\tthis._stickyScrollEnabled = options.get(EditorOption.stickyScroll).enabled;\n\t\tthis._maxNumberStickyLines = options.get(EditorOption.stickyScroll).maxLineCount;\n\n\t\tapplyFontInfo(this.domNode, fontInfo);\n\n\t\tthis._onOptionsMaybeChanged();\n\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\treturn true;\n\t}\n\tprivate _onOptionsMaybeChanged(): boolean {\n\t\tconst conf = this._context.configuration;\n\n\t\tconst newViewLineOptions = new ViewLineOptions(conf, this._context.theme.type);\n\t\tif (!this._viewLineOptions.equals(newViewLineOptions)) {\n\t\t\tthis._viewLineOptions = newViewLineOptions;\n\n\t\t\tconst startLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst endLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\t\tconst line = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tline.onOptionsChanged(this._viewLineOptions);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tlet r = false;\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tr = this._visibleLines.getVisibleLine(lineNumber).onSelectionChanged() || r;\n\t\t}\n\t\treturn r;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (true/*e.inlineDecorationsChanged*/) {\n\t\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tthis._visibleLines.getVisibleLine(lineNumber).onDecorationsChanged();\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tconst shouldRender = this._visibleLines.onFlushed(e, this._viewLineOptions.useGpu);\n\t\tthis._maxLineWidth = 0;\n\t\treturn shouldRender;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn this._visibleLines.onLinesChanged(e);\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn this._visibleLines.onLinesDeleted(e);\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn this._visibleLines.onLinesInserted(e);\n\t}\n\tpublic override onRevealRangeRequest(e: viewEvents.ViewRevealRangeRequestEvent): boolean {\n\t\t// Using the future viewport here in order to handle multiple\n\t\t// incoming reveal range requests that might all desire to be animated\n\t\tconst desiredScrollTop = this._computeScrollTopToRevealRange(this._context.viewLayout.getFutureViewport(), e.source, e.minimalReveal, e.range, e.selections, e.verticalType);\n\n\t\tif (desiredScrollTop === -1) {\n\t\t\t// marker to abort the reveal range request\n\t\t\treturn false;\n\t\t}\n\n\t\t// validate the new desired scroll top\n\t\tlet newScrollPosition = this._context.viewLayout.validateScrollPosition({ scrollTop: desiredScrollTop });\n\n\t\tif (e.revealHorizontal) {\n\t\t\tif (e.range && e.range.startLineNumber !== e.range.endLineNumber) {\n\t\t\t\t// Two or more lines? => scroll to base (That's how you see most of the two lines)\n\t\t\t\tnewScrollPosition = {\n\t\t\t\t\tscrollTop: newScrollPosition.scrollTop,\n\t\t\t\t\tscrollLeft: 0\n\t\t\t\t};\n\t\t\t} else if (e.range) {\n\t\t\t\t// We don't necessarily know the horizontal offset of this range since the line might not be in the view...\n\t\t\t\tthis._horizontalRevealRequest = new HorizontalRevealRangeRequest(e.minimalReveal, e.range.startLineNumber, e.range.startColumn, e.range.endColumn, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n\t\t\t} else if (e.selections && e.selections.length > 0) {\n\t\t\t\tthis._horizontalRevealRequest = new HorizontalRevealSelectionsRequest(e.minimalReveal, e.selections, this._context.viewLayout.getCurrentScrollTop(), newScrollPosition.scrollTop, e.scrollType);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._horizontalRevealRequest = null;\n\t\t}\n\n\t\tconst scrollTopDelta = Math.abs(this._context.viewLayout.getCurrentScrollTop() - newScrollPosition.scrollTop);\n\t\tconst scrollType = (scrollTopDelta <= this._lineHeight ? ScrollType.Immediate : e.scrollType);\n\t\tthis._context.viewModel.viewLayout.setScrollPosition(newScrollPosition, scrollType);\n\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (this._horizontalRevealRequest && e.scrollLeftChanged) {\n\t\t\t// cancel any outstanding horizontal reveal request if someone else scrolls horizontally.\n\t\t\tthis._horizontalRevealRequest = null;\n\t\t}\n\t\tif (this._horizontalRevealRequest && e.scrollTopChanged) {\n\t\t\tconst min = Math.min(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n\t\t\tconst max = Math.max(this._horizontalRevealRequest.startScrollTop, this._horizontalRevealRequest.stopScrollTop);\n\t\t\tif (e.scrollTop < min || e.scrollTop > max) {\n\t\t\t\t// cancel any outstanding horizontal reveal request if someone else scrolls vertically.\n\t\t\t\tthis._horizontalRevealRequest = null;\n\t\t\t}\n\t\t}\n\t\tthis.domNode.setWidth(e.scrollWidth);\n\t\treturn this._visibleLines.onScrollChanged(e) || true;\n\t}\n\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\treturn this._visibleLines.onTokensChanged(e);\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\tthis._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n\t\treturn this._visibleLines.onZonesChanged(e);\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._onOptionsMaybeChanged();\n\t}\n\n\t// ---- end view event handlers\n\n\t// ----------- HELPERS FOR OTHERS\n\n\tpublic getPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null {\n\t\tconst viewLineDomNode = this._getViewLineDomNode(spanNode);\n\t\tif (viewLineDomNode === null) {\n\t\t\t// Couldn't find view line node\n\t\t\treturn null;\n\t\t}\n\t\tconst lineNumber = this._getLineNumberFor(viewLineDomNode);\n\n\t\tif (lineNumber === -1) {\n\t\t\t// Couldn't find view line node\n\t\t\treturn null;\n\t\t}\n\n\t\tif (lineNumber < 1 || lineNumber > this._context.viewModel.getLineCount()) {\n\t\t\t// lineNumber is outside range\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._context.viewModel.getLineMaxColumn(lineNumber) === 1) {\n\t\t\t// Line is empty\n\t\t\treturn new Position(lineNumber, 1);\n\t\t}\n\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t// Couldn't find line\n\t\t\treturn null;\n\t\t}\n\n\t\tlet column = this._visibleLines.getVisibleLine(lineNumber).getColumnOfNodeOffset(spanNode, offset);\n\t\tconst minColumn = this._context.viewModel.getLineMinColumn(lineNumber);\n\t\tif (column < minColumn) {\n\t\t\tcolumn = minColumn;\n\t\t}\n\t\treturn new Position(lineNumber, column);\n\t}\n\n\tprivate _getViewLineDomNode(node: HTMLElement | null): HTMLElement | null {\n\t\twhile (node && node.nodeType === 1) {\n\t\t\tif (node.className === ViewLine.CLASS_NAME) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\tnode = node.parentElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @returns the line number of this view line dom node.\n\t */\n\tprivate _getLineNumberFor(domNode: HTMLElement): number {\n\t\tconst startLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst endLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst line = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tif (domNode === line.getDomNode()) {\n\t\t\t\treturn lineNumber;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tpublic getLineWidth(lineNumber: number): number {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t// Couldn't find line\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst context = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\t\tconst result = this._visibleLines.getVisibleLine(lineNumber).getWidth(context);\n\t\tthis._updateLineWidthsSlowIfDomDidLayout(context);\n\n\t\treturn result;\n\t}\n\n\tpublic linesVisibleRangesForRange(_range: Range, includeNewLines: boolean): LineVisibleRanges[] | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tconst originalEndLineNumber = _range.endLineNumber;\n\t\tconst range = Range.intersectRanges(_range, this._lastRenderedData.getCurrentVisibleRange());\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst visibleRanges: LineVisibleRanges[] = [];\n\t\tlet visibleRangesLen = 0;\n\t\tconst domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\n\t\tlet nextLineModelLineNumber: number = 0;\n\t\tif (includeNewLines) {\n\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n\t\t}\n\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\n\t\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n\t\t\tconst continuesInNextLine = lineNumber !== originalEndLineNumber;\n\t\t\tconst endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tconst visibleRangesForLine = visibleLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n\n\t\t\tif (!visibleRangesForLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (includeNewLines && lineNumber < originalEndLineNumber) {\n\t\t\t\tconst currentLineModelLineNumber = nextLineModelLineNumber;\n\t\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n\n\t\t\t\tif (currentLineModelLineNumber !== nextLineModelLineNumber) {\n\t\t\t\t\tconst floatHorizontalRange = visibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1];\n\t\t\t\t\tfloatHorizontalRange.width += this._typicalHalfwidthCharacterWidth;\n\t\t\t\t\tif (this._context.viewModel.getTextDirection(currentLineModelLineNumber) === TextDirection.RTL) {\n\t\t\t\t\t\tfloatHorizontalRange.left -= this._typicalHalfwidthCharacterWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvisibleRanges[visibleRangesLen++] = new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine);\n\t\t}\n\n\t\tthis._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n\n\t\tif (visibleRangesLen === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn visibleRanges;\n\t}\n\n\tprivate _visibleRangesForLineRange(lineNumber: number, startColumn: number, endColumn: number): VisibleRanges | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tif (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst domReadingContext = new DomReadingContext(this.domNode.domNode, this._textRangeRestingSpot);\n\t\tconst result = this._visibleLines.getVisibleLine(lineNumber).getVisibleRangesForRange(lineNumber, startColumn, endColumn, domReadingContext);\n\t\tthis._updateLineWidthsSlowIfDomDidLayout(domReadingContext);\n\n\t\treturn result;\n\t}\n\n\tprivate _lineIsRenderedRTL(lineNumber: number): boolean {\n\t\tif (lineNumber < this._visibleLines.getStartLineNumber() || lineNumber > this._visibleLines.getEndLineNumber()) {\n\t\t\treturn false;\n\t\t}\n\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\treturn visibleLine.isRenderedRTL();\n\t}\n\n\tpublic visibleRangeForPosition(position: Position): HorizontalPosition | null {\n\t\tconst visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n\t\tif (!visibleRanges) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n\t}\n\n\t/**\n\t * Updates the max line width if it is fast to compute.\n\t * Returns true if all lines were taken into account.\n\t * Returns false if some lines need to be reevaluated (in a slow fashion).\n\t */\n\tprivate _updateLineWidthsFast(): boolean {\n\t\treturn this._updateLineWidths(true);\n\t}\n\n\tprivate _updateLineWidthsSlow(): void {\n\t\tthis._updateLineWidths(false);\n\t}\n\n\t/**\n\t * Update the line widths using DOM layout information after someone else\n\t * has caused a synchronous layout.\n\t */\n\tprivate _updateLineWidthsSlowIfDomDidLayout(domReadingContext: DomReadingContext): void {\n\t\tif (!domReadingContext.didDomLayout) {\n\t\t\t// only proceed if we just did a layout\n\t\t\treturn;\n\t\t}\n\t\tif (this._asyncUpdateLineWidths.isScheduled()) {\n\t\t\t// reading widths is not scheduled => widths are up-to-date\n\t\t\treturn;\n\t\t}\n\t\tthis._asyncUpdateLineWidths.cancel();\n\t\tthis._updateLineWidthsSlow();\n\t}\n\n\tprivate _updateLineWidths(fast: boolean): boolean {\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\n\t\tlet localMaxLineWidth = 1;\n\t\tlet allWidthsComputed = true;\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\n\t\t\tif (fast && !visibleLine.getWidthIsFast()) {\n\t\t\t\t// Cannot compute width in a fast way for this line\n\t\t\t\tallWidthsComputed = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlocalMaxLineWidth = Math.max(localMaxLineWidth, visibleLine.getWidth(null));\n\t\t}\n\n\t\tif (allWidthsComputed && rendStartLineNumber === 1 && rendEndLineNumber === this._context.viewModel.getLineCount()) {\n\t\t\t// we know the max line width for all the lines\n\t\t\tthis._maxLineWidth = 0;\n\t\t}\n\n\t\tthis._ensureMaxLineWidth(localMaxLineWidth);\n\n\t\treturn allWidthsComputed;\n\t}\n\n\tprivate _checkMonospaceFontAssumptions(): void {\n\t\t// Problems with monospace assumptions are more apparent for longer lines,\n\t\t// as small rounding errors start to sum up, so we will select the longest\n\t\t// line for a closer inspection\n\t\tlet longestLineNumber = -1;\n\t\tlet longestWidth = -1;\n\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\tif (visibleLine.needsMonospaceFontCheck()) {\n\t\t\t\tconst lineWidth = visibleLine.getWidth(null);\n\t\t\t\tif (lineWidth > longestWidth) {\n\t\t\t\t\tlongestWidth = lineWidth;\n\t\t\t\t\tlongestLineNumber = lineNumber;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (longestLineNumber === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._visibleLines.getVisibleLine(longestLineNumber).monospaceAssumptionsAreValid()) {\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tvisibleLine.onMonospaceAssumptionsInvalidated();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tpublic render(): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tpublic renderText(viewportData: ViewportData): void {\n\t\t// (1) render lines - ensures lines are in the DOM\n\t\tthis._visibleLines.renderLines(viewportData);\n\t\tthis._lastRenderedData.setCurrentVisibleRange(viewportData.visibleRange);\n\t\tthis.domNode.setWidth(this._context.viewLayout.getScrollWidth());\n\t\tthis.domNode.setHeight(Math.min(this._context.viewLayout.getScrollHeight(), 1000000));\n\n\t\t// (2) compute horizontal scroll position:\n\t\t//  - this must happen after the lines are in the DOM since it might need a line that rendered just now\n\t\t//  - it might change `scrollWidth` and `scrollLeft`\n\t\tif (this._horizontalRevealRequest) {\n\n\t\t\tconst horizontalRevealRequest = this._horizontalRevealRequest;\n\n\t\t\t// Check that we have the line that contains the horizontal range in the viewport\n\t\t\tif (viewportData.startLineNumber <= horizontalRevealRequest.minLineNumber && horizontalRevealRequest.maxLineNumber <= viewportData.endLineNumber) {\n\n\t\t\t\tthis._horizontalRevealRequest = null;\n\n\t\t\t\t// allow `visibleRangesForRange2` to work\n\t\t\t\tthis.onDidRender();\n\n\t\t\t\t// compute new scroll position\n\t\t\t\tconst newScrollLeft = this._computeScrollLeftToReveal(horizontalRevealRequest);\n\n\t\t\t\tif (newScrollLeft) {\n\t\t\t\t\tif (!this._isViewportWrapping && !newScrollLeft.hasRTL) {\n\t\t\t\t\t\t// ensure `scrollWidth` is large enough\n\t\t\t\t\t\tthis._ensureMaxLineWidth(newScrollLeft.maxHorizontalOffset);\n\t\t\t\t\t}\n\t\t\t\t\t// set `scrollLeft`\n\t\t\t\t\tthis._context.viewModel.viewLayout.setScrollPosition({\n\t\t\t\t\t\tscrollLeft: newScrollLeft.scrollLeft\n\t\t\t\t\t}, horizontalRevealRequest.scrollType);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update max line width (not so important, it is just so the horizontal scrollbar doesn't get too small)\n\t\tif (!this._updateLineWidthsFast()) {\n\t\t\t// Computing the width of some lines would be slow => delay it\n\t\t\tthis._asyncUpdateLineWidths.schedule();\n\t\t} else {\n\t\t\tthis._asyncUpdateLineWidths.cancel();\n\t\t}\n\n\t\tif (platform.isLinux && !this._asyncCheckMonospaceFontAssumptions.isScheduled()) {\n\t\t\tconst rendStartLineNumber = this._visibleLines.getStartLineNumber();\n\t\t\tconst rendEndLineNumber = this._visibleLines.getEndLineNumber();\n\t\t\tfor (let lineNumber = rendStartLineNumber; lineNumber <= rendEndLineNumber; lineNumber++) {\n\t\t\t\tconst visibleLine = this._visibleLines.getVisibleLine(lineNumber);\n\t\t\t\tif (visibleLine.needsMonospaceFontCheck()) {\n\t\t\t\t\tthis._asyncCheckMonospaceFontAssumptions.schedule();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (3) handle scrolling\n\t\tthis._linesContent.setLayerHinting(this._canUseLayerHinting);\n\t\tthis._linesContent.setContain('strict');\n\t\tconst adjustedScrollTop = this._context.viewLayout.getCurrentScrollTop() - viewportData.bigNumbersDelta;\n\t\tthis._linesContent.setTop(-adjustedScrollTop);\n\t\tthis._linesContent.setLeft(-this._context.viewLayout.getCurrentScrollLeft());\n\t}\n\n\t// --- width\n\n\tprivate _ensureMaxLineWidth(lineWidth: number): void {\n\t\tconst iLineWidth = Math.ceil(lineWidth);\n\t\tif (this._maxLineWidth < iLineWidth) {\n\t\t\tthis._maxLineWidth = iLineWidth;\n\t\t\tthis._context.viewModel.viewLayout.setMaxLineWidth(this._maxLineWidth);\n\t\t}\n\t}\n\n\tprivate _computeScrollTopToRevealRange(viewport: Viewport, source: string | null | undefined, minimalReveal: boolean, range: Range | null, selections: Selection[] | null, verticalType: viewEvents.VerticalRevealType): number {\n\t\tconst viewportStartY = viewport.top;\n\t\tconst viewportHeight = viewport.height;\n\t\tconst viewportEndY = viewportStartY + viewportHeight;\n\t\tlet boxIsSingleRange: boolean;\n\t\tlet boxStartY: number;\n\t\tlet boxEndY: number;\n\n\t\tif (selections && selections.length > 0) {\n\t\t\tlet minLineNumber = selections[0].startLineNumber;\n\t\t\tlet maxLineNumber = selections[0].endLineNumber;\n\t\t\tfor (let i = 1, len = selections.length; i < len; i++) {\n\t\t\t\tconst selection = selections[i];\n\t\t\t\tminLineNumber = Math.min(minLineNumber, selection.startLineNumber);\n\t\t\t\tmaxLineNumber = Math.max(maxLineNumber, selection.endLineNumber);\n\t\t\t}\n\t\t\tboxIsSingleRange = false;\n\t\t\tboxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(minLineNumber);\n\t\t\tboxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(maxLineNumber) + this._lineHeight;\n\t\t} else if (range) {\n\t\t\tboxIsSingleRange = true;\n\t\t\tboxStartY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.startLineNumber);\n\t\t\tboxEndY = this._context.viewLayout.getVerticalOffsetForLineNumber(range.endLineNumber) + this._lineHeight;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst shouldIgnoreScrollOff = (source === 'mouse' || minimalReveal) && this._cursorSurroundingLinesStyle === 'default';\n\n\t\tlet paddingTop: number = 0;\n\t\tlet paddingBottom: number = 0;\n\n\t\tif (!shouldIgnoreScrollOff) {\n\t\t\tconst maxLinesInViewport = (viewportHeight / this._lineHeight);\n\t\t\tconst surroundingLines = Math.max(this._cursorSurroundingLines, this._stickyScrollEnabled ? this._maxNumberStickyLines : 0);\n\t\t\tconst context = Math.min(maxLinesInViewport / 2, surroundingLines);\n\t\t\tpaddingTop = context * this._lineHeight;\n\t\t\tpaddingBottom = Math.max(0, (context - 1)) * this._lineHeight;\n\t\t} else {\n\t\t\tif (!minimalReveal) {\n\t\t\t\t// Reveal one more line above (this case is hit when dragging)\n\t\t\t\tpaddingTop = this._lineHeight;\n\t\t\t}\n\t\t}\n\t\tif (!minimalReveal) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.Simple || verticalType === viewEvents.VerticalRevealType.Bottom) {\n\t\t\t\t// Reveal one line more when the last line would be covered by the scrollbar - arrow down case or revealing a line explicitly at bottom\n\t\t\t\tpaddingBottom += this._lineHeight;\n\t\t\t}\n\t\t}\n\n\t\tboxStartY -= paddingTop;\n\t\tboxEndY += paddingBottom;\n\t\tlet newScrollTop: number;\n\n\t\tif (boxEndY - boxStartY > viewportHeight) {\n\t\t\t// the box is larger than the viewport ... scroll to its top\n\t\t\tif (!boxIsSingleRange) {\n\t\t\t\t// do not reveal multiple cursors if there are more than fit the viewport\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tnewScrollTop = boxStartY;\n\t\t} else if (verticalType === viewEvents.VerticalRevealType.NearTop || verticalType === viewEvents.VerticalRevealType.NearTopIfOutsideViewport) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.NearTopIfOutsideViewport && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n\t\t\t\t// Box is already in the viewport... do nothing\n\t\t\t\tnewScrollTop = viewportStartY;\n\t\t\t} else {\n\t\t\t\t// We want a gap that is 20% of the viewport, but with a minimum of 5 lines\n\t\t\t\tconst desiredGapAbove = Math.max(5 * this._lineHeight, viewportHeight * 0.2);\n\t\t\t\t// Try to scroll just above the box with the desired gap\n\t\t\t\tconst desiredScrollTop = boxStartY - desiredGapAbove;\n\t\t\t\t// But ensure that the box is not pushed out of viewport\n\t\t\t\tconst minScrollTop = boxEndY - viewportHeight;\n\t\t\t\tnewScrollTop = Math.max(minScrollTop, desiredScrollTop);\n\t\t\t}\n\t\t} else if (verticalType === viewEvents.VerticalRevealType.Center || verticalType === viewEvents.VerticalRevealType.CenterIfOutsideViewport) {\n\t\t\tif (verticalType === viewEvents.VerticalRevealType.CenterIfOutsideViewport && viewportStartY <= boxStartY && boxEndY <= viewportEndY) {\n\t\t\t\t// Box is already in the viewport... do nothing\n\t\t\t\tnewScrollTop = viewportStartY;\n\t\t\t} else {\n\t\t\t\t// Box is outside the viewport... center it\n\t\t\t\tconst boxMiddleY = (boxStartY + boxEndY) / 2;\n\t\t\t\tnewScrollTop = Math.max(0, boxMiddleY - viewportHeight / 2);\n\t\t\t}\n\t\t} else {\n\t\t\tnewScrollTop = this._computeMinimumScrolling(viewportStartY, viewportEndY, boxStartY, boxEndY, verticalType === viewEvents.VerticalRevealType.Top, verticalType === viewEvents.VerticalRevealType.Bottom);\n\t\t}\n\n\t\treturn newScrollTop;\n\t}\n\n\tprivate _computeScrollLeftToReveal(horizontalRevealRequest: HorizontalRevealRequest): { scrollLeft: number; maxHorizontalOffset: number; hasRTL: boolean } | null {\n\n\t\tconst viewport = this._context.viewLayout.getCurrentViewport();\n\t\tconst layoutInfo = this._context.configuration.options.get(EditorOption.layoutInfo);\n\t\tconst viewportStartX = viewport.left;\n\t\tconst viewportEndX = viewportStartX + viewport.width - layoutInfo.verticalScrollbarWidth;\n\n\t\tlet boxStartX = Constants.MAX_SAFE_SMALL_INTEGER;\n\t\tlet boxEndX = 0;\n\t\tlet hasRTL = false;\n\t\tif (horizontalRevealRequest.type === 'range') {\n\t\t\thasRTL = this._lineIsRenderedRTL(horizontalRevealRequest.lineNumber);\n\t\t\tconst visibleRanges = this._visibleRangesForLineRange(horizontalRevealRequest.lineNumber, horizontalRevealRequest.startColumn, horizontalRevealRequest.endColumn);\n\t\t\tif (!visibleRanges) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (const visibleRange of visibleRanges.ranges) {\n\t\t\t\tboxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n\t\t\t\tboxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const selection of horizontalRevealRequest.selections) {\n\t\t\t\tif (selection.startLineNumber !== selection.endLineNumber) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tconst visibleRanges = this._visibleRangesForLineRange(selection.startLineNumber, selection.startColumn, selection.endColumn);\n\t\t\t\thasRTL ||= this._lineIsRenderedRTL(selection.startLineNumber);\n\t\t\t\tif (!visibleRanges) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tfor (const visibleRange of visibleRanges.ranges) {\n\t\t\t\t\tboxStartX = Math.min(boxStartX, Math.round(visibleRange.left));\n\t\t\t\t\tboxEndX = Math.max(boxEndX, Math.round(visibleRange.left + visibleRange.width));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!horizontalRevealRequest.minimalReveal) {\n\t\t\tboxStartX = Math.max(0, boxStartX - ViewLines.HORIZONTAL_EXTRA_PX);\n\t\t\tboxEndX += this._revealHorizontalRightPadding;\n\t\t}\n\n\t\tif (horizontalRevealRequest.type === 'selections' && boxEndX - boxStartX > viewport.width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst newScrollLeft = this._computeMinimumScrolling(viewportStartX, viewportEndX, boxStartX, boxEndX);\n\t\treturn {\n\t\t\tscrollLeft: newScrollLeft,\n\t\t\tmaxHorizontalOffset: boxEndX,\n\t\t\thasRTL\n\t\t};\n\t}\n\n\tprivate _computeMinimumScrolling(viewportStart: number, viewportEnd: number, boxStart: number, boxEnd: number, revealAtStart?: boolean, revealAtEnd?: boolean): number {\n\t\tviewportStart = viewportStart | 0;\n\t\tviewportEnd = viewportEnd | 0;\n\t\tboxStart = boxStart | 0;\n\t\tboxEnd = boxEnd | 0;\n\t\trevealAtStart = !!revealAtStart;\n\t\trevealAtEnd = !!revealAtEnd;\n\n\t\tconst viewportLength = viewportEnd - viewportStart;\n\t\tconst boxLength = boxEnd - boxStart;\n\n\t\tif (boxLength < viewportLength) {\n\t\t\t// The box would fit in the viewport\n\n\t\t\tif (revealAtStart) {\n\t\t\t\treturn boxStart;\n\t\t\t}\n\n\t\t\tif (revealAtEnd) {\n\t\t\t\treturn Math.max(0, boxEnd - viewportLength);\n\t\t\t}\n\n\t\t\tif (boxStart < viewportStart) {\n\t\t\t\t// The box is above the viewport\n\t\t\t\treturn boxStart;\n\t\t\t} else if (boxEnd > viewportEnd) {\n\t\t\t\t// The box is below the viewport\n\t\t\t\treturn Math.max(0, boxEnd - viewportLength);\n\t\t\t}\n\t\t} else {\n\t\t\t// The box would not fit in the viewport\n\t\t\t// Reveal the beginning of the box\n\t\t\treturn boxStart;\n\t\t}\n\n\t\treturn viewportStart;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3521, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/linesDecorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/linesDecorations/linesDecorations.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/linesDecorations/vs/editor/browser/viewParts/linesDecorations/linesDecorations.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\n\nexport class LinesDecorationsOverlay extends DedupOverlay {\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _decorationsLeft: number;\n\tprivate _decorationsWidth: number;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._decorationsLeft = layoutInfo.decorationsLeft;\n\t\tthis._decorationsWidth = layoutInfo.decorationsWidth;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._decorationsLeft = layoutInfo.decorationsLeft;\n\t\tthis._decorationsWidth = layoutInfo.decorationsWidth;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tconst r: DecorationToRender[] = [];\n\t\tlet rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst linesDecorationsClassName = d.options.linesDecorationsClassName;\n\t\t\tconst zIndex = d.options.zIndex;\n\t\t\tif (linesDecorationsClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n\t\t\t}\n\t\t\tconst firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n\t\t\tif (firstLineDecorationClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst left = this._decorationsLeft.toString();\n\t\tconst width = this._decorationsWidth.toString();\n\t\tconst common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst decorations = toRender[lineIndex].getDecorations();\n\t\t\tlet lineOutput = '';\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tlet addition = '<div class=\"cldr ' + decoration.className;\n\t\t\t\tif (decoration.tooltip !== null) {\n\t\t\t\t\taddition += '\" title=\"' + decoration.tooltip; // The tooltip is already escaped.\n\t\t\t\t}\n\t\t\t\taddition += common;\n\t\t\t\tlineOutput += addition;\n\t\t\t}\n\t\t\toutput[lineIndex] = lineOutput;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineNumber - startLineNumber];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './linesDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\n\nexport class LinesDecorationsOverlay extends DedupOverlay {\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _decorationsLeft: number;\n\tprivate _decorationsWidth: number;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._decorationsLeft = layoutInfo.decorationsLeft;\n\t\tthis._decorationsWidth = layoutInfo.decorationsWidth;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis._decorationsLeft = layoutInfo.decorationsLeft;\n\t\tthis._decorationsWidth = layoutInfo.decorationsWidth;\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tconst r: DecorationToRender[] = [];\n\t\tlet rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst linesDecorationsClassName = d.options.linesDecorationsClassName;\n\t\t\tconst zIndex = d.options.zIndex;\n\t\t\tif (linesDecorationsClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, linesDecorationsClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n\t\t\t}\n\t\t\tconst firstLineDecorationClassName = d.options.firstLineDecorationClassName;\n\t\t\tif (firstLineDecorationClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.startLineNumber, firstLineDecorationClassName, d.options.linesDecorationsTooltip ?? null, zIndex);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst left = this._decorationsLeft.toString();\n\t\tconst width = this._decorationsWidth.toString();\n\t\tconst common = '\" style=\"left:' + left + 'px;width:' + width + 'px;\"></div>';\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst decorations = toRender[lineIndex].getDecorations();\n\t\t\tlet lineOutput = '';\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tlet addition = '<div class=\"cldr ' + decoration.className;\n\t\t\t\tif (decoration.tooltip !== null) {\n\t\t\t\t\taddition += '\" title=\"' + decoration.tooltip; // The tooltip is already escaped.\n\t\t\t\t}\n\t\t\t\taddition += common;\n\t\t\t\tlineOutput += addition;\n\t\t\t}\n\t\t\toutput[lineIndex] = lineOutput;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineNumber - startLineNumber];\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3630, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/margin.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/margin/margin.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/margin/vs/editor/browser/viewParts/margin/margin.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './margin.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\n/**\n * Margin is a vertical strip located on the left of the editor's content area.\n * It is used for various features such as line numbers, folding markers, and\n * decorations that provide additional information about the lines of code.\n */\nexport class Margin extends ViewPart {\n\n\tpublic static readonly CLASS_NAME = 'glyph-margin';\n\tpublic static readonly OUTER_CLASS_NAME = 'margin';\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _canUseLayerHinting: boolean;\n\tprivate _contentLeft: number;\n\tprivate _glyphMarginLeft: number;\n\tprivate _glyphMarginWidth: number;\n\tprivate _glyphMarginBackgroundDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n\t\tthis._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n\n\t\tthis._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn super.onScrollChanged(e) || e.scrollTopChanged;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setLayerHinting(this._canUseLayerHinting);\n\t\tthis._domNode.setContain('strict');\n\t\tconst adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n\t\tthis._domNode.setTop(-adjustedScrollTop);\n\n\t\tconst height = Math.min(ctx.scrollHeight, 1000000);\n\t\tthis._domNode.setHeight(height);\n\t\tthis._domNode.setWidth(this._contentLeft);\n\n\t\tthis._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n\t\tthis._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n\t\tthis._glyphMarginBackgroundDomNode.setHeight(height);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './margin.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\n/**\n * Margin is a vertical strip located on the left of the editor's content area.\n * It is used for various features such as line numbers, folding markers, and\n * decorations that provide additional information about the lines of code.\n */\nexport class Margin extends ViewPart {\n\n\tpublic static readonly CLASS_NAME = 'glyph-margin';\n\tpublic static readonly OUTER_CLASS_NAME = 'margin';\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _canUseLayerHinting: boolean;\n\tprivate _contentLeft: number;\n\tprivate _glyphMarginLeft: number;\n\tprivate _glyphMarginWidth: number;\n\tprivate _glyphMarginBackgroundDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setClassName(Margin.OUTER_CLASS_NAME);\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._glyphMarginBackgroundDomNode = createFastDomNode(document.createElement('div'));\n\t\tthis._glyphMarginBackgroundDomNode.setClassName(Margin.CLASS_NAME);\n\n\t\tthis._domNode.appendChild(this._glyphMarginBackgroundDomNode);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._canUseLayerHinting = !options.get(EditorOption.disableLayerHinting);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._glyphMarginLeft = layoutInfo.glyphMarginLeft;\n\t\tthis._glyphMarginWidth = layoutInfo.glyphMarginWidth;\n\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn super.onScrollChanged(e) || e.scrollTopChanged;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setLayerHinting(this._canUseLayerHinting);\n\t\tthis._domNode.setContain('strict');\n\t\tconst adjustedScrollTop = ctx.scrollTop - ctx.bigNumbersDelta;\n\t\tthis._domNode.setTop(-adjustedScrollTop);\n\n\t\tconst height = Math.min(ctx.scrollHeight, 1000000);\n\t\tthis._domNode.setHeight(height);\n\t\tthis._domNode.setWidth(this._contentLeft);\n\n\t\tthis._glyphMarginBackgroundDomNode.setLeft(this._glyphMarginLeft);\n\t\tthis._glyphMarginBackgroundDomNode.setWidth(this._glyphMarginWidth);\n\t\tthis._glyphMarginBackgroundDomNode.setHeight(height);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3706, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/marginDecorations.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/marginDecorations/marginDecorations.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/marginDecorations/vs/editor/browser/viewParts/marginDecorations/marginDecorations.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\n\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n\tprivate readonly _context: ViewContext;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tconst r: DecorationToRender[] = [];\n\t\tlet rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst marginClassName = d.options.marginClassName;\n\t\t\tconst zIndex = d.options.zIndex;\n\t\t\tif (marginClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst decorations = toRender[lineIndex].getDecorations();\n\t\t\tlet lineOutput = '';\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tlineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n\t\t\t}\n\t\t\toutput[lineIndex] = lineOutput;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineNumber - startLineNumber];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './marginDecorations.css';\nimport { DecorationToRender, DedupOverlay } from '../glyphMargin/glyphMargin.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\n\nexport class MarginViewLineDecorationsOverlay extends DedupOverlay {\n\tprivate readonly _context: ViewContext;\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprotected _getDecorations(ctx: RenderingContext): DecorationToRender[] {\n\t\tconst decorations = ctx.getDecorationsInViewport();\n\t\tconst r: DecorationToRender[] = [];\n\t\tlet rLen = 0;\n\t\tfor (let i = 0, len = decorations.length; i < len; i++) {\n\t\t\tconst d = decorations[i];\n\t\t\tconst marginClassName = d.options.marginClassName;\n\t\t\tconst zIndex = d.options.zIndex;\n\t\t\tif (marginClassName) {\n\t\t\t\tr[rLen++] = new DecorationToRender(d.range.startLineNumber, d.range.endLineNumber, marginClassName, null, zIndex);\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst toRender = this._render(visibleStartLineNumber, visibleEndLineNumber, this._getDecorations(ctx));\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst decorations = toRender[lineIndex].getDecorations();\n\t\t\tlet lineOutput = '';\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tlineOutput += '<div class=\"cmdr ' + decoration.className + '\" style=\"\"></div>';\n\t\t\t}\n\t\t\toutput[lineIndex] = lineOutput;\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineNumber - startLineNumber];\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3795, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharSheet.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/vs/editor/browser/viewParts/minimap/minimapCharSheet.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\tSTART_CH_CODE = 32, // Space\n\tEND_CH_CODE = 126, // Tilde (~)\n\tUNKNOWN_CODE = 65533, // UTF placeholder code\n\tCHAR_COUNT = END_CH_CODE - START_CH_CODE + 2,\n\n\tSAMPLED_CHAR_HEIGHT = 16,\n\tSAMPLED_CHAR_WIDTH = 10,\n\n\tBASE_CHAR_HEIGHT = 2,\n\tBASE_CHAR_WIDTH = 1,\n\n\tRGBA_CHANNELS_CNT = 4,\n\tRGBA_SAMPLED_ROW_WIDTH = RGBA_CHANNELS_CNT * CHAR_COUNT * SAMPLED_CHAR_WIDTH\n}\n\nexport const allCharCodes: ReadonlyArray<number> = (() => {\n\tconst v: number[] = [];\n\tfor (let i = Constants.START_CH_CODE; i <= Constants.END_CH_CODE; i++) {\n\t\tv.push(i);\n\t}\n\n\tv.push(Constants.UNKNOWN_CODE);\n\treturn v;\n})();\n\nexport const getCharIndex = (chCode: number, fontScale: number) => {\n\tchCode -= Constants.START_CH_CODE;\n\tif (chCode < 0 || chCode > Constants.CHAR_COUNT) {\n\t\tif (fontScale <= 2) {\n\t\t\t// for smaller scales, we can get away with using any ASCII character...\n\t\t\treturn (chCode + Constants.CHAR_COUNT) % Constants.CHAR_COUNT;\n\t\t}\n\t\treturn Constants.CHAR_COUNT - 1; // unknown symbol\n\t}\n\n\treturn chCode;\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum Constants {\n\tSTART_CH_CODE = 32, // Space\n\tEND_CH_CODE = 126, // Tilde (~)\n\tUNKNOWN_CODE = 65533, // UTF placeholder code\n\tCHAR_COUNT = END_CH_CODE - START_CH_CODE + 2,\n\n\tSAMPLED_CHAR_HEIGHT = 16,\n\tSAMPLED_CHAR_WIDTH = 10,\n\n\tBASE_CHAR_HEIGHT = 2,\n\tBASE_CHAR_WIDTH = 1,\n\n\tRGBA_CHANNELS_CNT = 4,\n\tRGBA_SAMPLED_ROW_WIDTH = RGBA_CHANNELS_CNT * CHAR_COUNT * SAMPLED_CHAR_WIDTH\n}\n\nexport const allCharCodes: ReadonlyArray<number> = (() => {\n\tconst v: number[] = [];\n\tfor (let i = Constants.START_CH_CODE; i <= Constants.END_CH_CODE; i++) {\n\t\tv.push(i);\n\t}\n\n\tv.push(Constants.UNKNOWN_CODE);\n\treturn v;\n})();\n\nexport const getCharIndex = (chCode: number, fontScale: number) => {\n\tchCode -= Constants.START_CH_CODE;\n\tif (chCode < 0 || chCode > Constants.CHAR_COUNT) {\n\t\tif (fontScale <= 2) {\n\t\t\t// for smaller scales, we can get away with using any ASCII character...\n\t\t\treturn (chCode + Constants.CHAR_COUNT) % Constants.CHAR_COUNT;\n\t\t}\n\t\treturn Constants.CHAR_COUNT - 1; // unknown symbol\n\t}\n\n\treturn chCode;\n};\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;AAkBzF,MAAM,YAAY,GAA0B,CAAC,GAAG,EAAE;IACxD,MAAM,CAAC,GAAa,EAAE,CAAC;IACvB,IAAK,IAAI,CAAC,GAAA,GAAA,2BAAA,EAA0B,GAAE,CAAC,IAAA,IAAA,yBAAA,EAAyB,GAAE,CAAC,EAAE,CAAE,CAAC;QACvE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACX,CAAC;IAED,CAAC,CAAC,IAAI,CAAA,MAAA,0BAAA,GAAwB,CAAC;IAC/B,OAAO,CAAC,CAAC;AACV,CAAC,CAAC,EAAE,CAAC;AAEE,MAAM,YAAY,GAAG,CAAC,MAAc,EAAE,SAAiB,EAAE,EAAE;IACjE,MAAM,IAAA,GAAA,2BAAA,EAA2B,CAAC;IAClC,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAA,GAAA,wBAAA,EAAuB,GAAE,CAAC;QACjD,IAAI,SAAS,IAAI,CAAC,EAAE,CAAC;YACpB,wEAAwE;YACxE,OAAO,CAAC,MAAM,GAAA,GAAA,wBAAA,GAAuB,CAAC,GAAA,GAAA,wBAAA,EAAuB,CAAC;QAC/D,CAAC;QACD,OAAO,GAAA,wBAAA,MAAuB,CAAC,CAAC,CAAC,iBAAiB;IACnD,CAAC;IAED,OAAO,MAAM,CAAC;AACf,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 3827, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRenderer.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/vs/editor/browser/viewParts/minimap/minimapCharRenderer.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RGBA8 } from '../../../common/core/misc/rgba.js';\nimport { Constants, getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n\nexport class MinimapCharRenderer {\n\t_minimapCharRendererBrand: void = undefined;\n\n\tprivate readonly charDataNormal: Uint8ClampedArray;\n\tprivate readonly charDataLight: Uint8ClampedArray;\n\n\tconstructor(charData: Uint8ClampedArray, public readonly scale: number) {\n\t\tthis.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n\t\tthis.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n\t}\n\n\tprivate static soften(input: Uint8ClampedArray, ratio: number): Uint8ClampedArray {\n\t\tconst result = new Uint8ClampedArray(input.length);\n\t\tfor (let i = 0, len = input.length; i < len; i++) {\n\t\t\tresult[i] = toUint8(input[i] * ratio);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic renderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tchCode: number,\n\t\tcolor: RGBA8,\n\t\tforegroundAlpha: number,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tfontScale: number,\n\t\tuseLighterFont: boolean,\n\t\tforce1pxHeight: boolean\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = (force1pxHeight ? 1 : charHeight);\n\t\tif (dx + charWidth > target.width || dy + renderHeight > target.height) {\n\t\t\tconsole.warn('bad render request outside image data');\n\t\t\treturn;\n\t\t}\n\n\t\tconst charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n\t\tconst charIndex = getCharIndex(chCode, fontScale);\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n\n\t\tconst dest = target.data;\n\t\tlet sourceOffset = charIndex * charWidth * charHeight;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tconst c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n\t\t\t\tdest[column++] = backgroundR + deltaR * c;\n\t\t\t\tdest[column++] = backgroundG + deltaG * c;\n\t\t\t\tdest[column++] = backgroundB + deltaB * c;\n\t\t\t\tdest[column++] = destAlpha;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n\n\tpublic blockRenderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tcolor: RGBA8,\n\t\tforegroundAlpha: number,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tforce1pxHeight: boolean\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = (force1pxHeight ? 1 : charHeight);\n\t\tif (dx + charWidth > target.width || dy + renderHeight > target.height) {\n\t\t\tconsole.warn('bad render request outside image data');\n\t\t\treturn;\n\t\t}\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst c = 0.5 * (foregroundAlpha / 255);\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst colorR = backgroundR + deltaR * c;\n\t\tconst colorG = backgroundG + deltaG * c;\n\t\tconst colorB = backgroundB + deltaB * c;\n\n\t\tconst destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n\n\t\tconst dest = target.data;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tdest[column++] = colorR;\n\t\t\t\tdest[column++] = colorG;\n\t\t\t\tdest[column++] = colorB;\n\t\t\t\tdest[column++] = destAlpha;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RGBA8 } from '../../../common/core/misc/rgba.js';\nimport { Constants, getCharIndex } from './minimapCharSheet.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n\nexport class MinimapCharRenderer {\n\t_minimapCharRendererBrand: void = undefined;\n\n\tprivate readonly charDataNormal: Uint8ClampedArray;\n\tprivate readonly charDataLight: Uint8ClampedArray;\n\n\tconstructor(charData: Uint8ClampedArray, public readonly scale: number) {\n\t\tthis.charDataNormal = MinimapCharRenderer.soften(charData, 12 / 15);\n\t\tthis.charDataLight = MinimapCharRenderer.soften(charData, 50 / 60);\n\t}\n\n\tprivate static soften(input: Uint8ClampedArray, ratio: number): Uint8ClampedArray {\n\t\tconst result = new Uint8ClampedArray(input.length);\n\t\tfor (let i = 0, len = input.length; i < len; i++) {\n\t\t\tresult[i] = toUint8(input[i] * ratio);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic renderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tchCode: number,\n\t\tcolor: RGBA8,\n\t\tforegroundAlpha: number,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tfontScale: number,\n\t\tuseLighterFont: boolean,\n\t\tforce1pxHeight: boolean\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = (force1pxHeight ? 1 : charHeight);\n\t\tif (dx + charWidth > target.width || dy + renderHeight > target.height) {\n\t\t\tconsole.warn('bad render request outside image data');\n\t\t\treturn;\n\t\t}\n\n\t\tconst charData = useLighterFont ? this.charDataLight : this.charDataNormal;\n\t\tconst charIndex = getCharIndex(chCode, fontScale);\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n\n\t\tconst dest = target.data;\n\t\tlet sourceOffset = charIndex * charWidth * charHeight;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tconst c = (charData[sourceOffset++] / 255) * (foregroundAlpha / 255);\n\t\t\t\tdest[column++] = backgroundR + deltaR * c;\n\t\t\t\tdest[column++] = backgroundG + deltaG * c;\n\t\t\t\tdest[column++] = backgroundB + deltaB * c;\n\t\t\t\tdest[column++] = destAlpha;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n\n\tpublic blockRenderChar(\n\t\ttarget: ImageData,\n\t\tdx: number,\n\t\tdy: number,\n\t\tcolor: RGBA8,\n\t\tforegroundAlpha: number,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tforce1pxHeight: boolean\n\t): void {\n\t\tconst charWidth = Constants.BASE_CHAR_WIDTH * this.scale;\n\t\tconst charHeight = Constants.BASE_CHAR_HEIGHT * this.scale;\n\t\tconst renderHeight = (force1pxHeight ? 1 : charHeight);\n\t\tif (dx + charWidth > target.width || dy + renderHeight > target.height) {\n\t\t\tconsole.warn('bad render request outside image data');\n\t\t\treturn;\n\t\t}\n\n\t\tconst destWidth = target.width * Constants.RGBA_CHANNELS_CNT;\n\n\t\tconst c = 0.5 * (foregroundAlpha / 255);\n\n\t\tconst backgroundR = backgroundColor.r;\n\t\tconst backgroundG = backgroundColor.g;\n\t\tconst backgroundB = backgroundColor.b;\n\n\t\tconst deltaR = color.r - backgroundR;\n\t\tconst deltaG = color.g - backgroundG;\n\t\tconst deltaB = color.b - backgroundB;\n\n\t\tconst colorR = backgroundR + deltaR * c;\n\t\tconst colorG = backgroundG + deltaG * c;\n\t\tconst colorB = backgroundB + deltaB * c;\n\n\t\tconst destAlpha = Math.max(foregroundAlpha, backgroundAlpha);\n\n\t\tconst dest = target.data;\n\n\t\tlet row = dy * destWidth + dx * Constants.RGBA_CHANNELS_CNT;\n\t\tfor (let y = 0; y < renderHeight; y++) {\n\t\t\tlet column = row;\n\t\t\tfor (let x = 0; x < charWidth; x++) {\n\t\t\t\tdest[column++] = colorR;\n\t\t\t\tdest[column++] = colorG;\n\t\t\t\tdest[column++] = colorB;\n\t\t\t\tdest[column++] = destAlpha;\n\t\t\t}\n\n\t\t\trow += destWidth;\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3923, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapPreBaked.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/vs/editor/browser/viewParts/minimap/minimapPreBaked.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\n\nconst charTable: { [hex: string]: number } = {\n\t'0': 0,\n\t'1': 1,\n\t'2': 2,\n\t'3': 3,\n\t'4': 4,\n\t'5': 5,\n\t'6': 6,\n\t'7': 7,\n\t'8': 8,\n\t'9': 9,\n\tA: 10,\n\tB: 11,\n\tC: 12,\n\tD: 13,\n\tE: 14,\n\tF: 15\n};\n\nconst decodeData = (str: string) => {\n\tconst output = new Uint8ClampedArray(str.length / 2);\n\tfor (let i = 0; i < str.length; i += 2) {\n\t\toutput[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n\t}\n\n\treturn output;\n};\n\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n\tconst chars = '0123456789ABCDEF';\n\tlet output = '';\n\tfor (let i = 0; i < data.length; i++) {\n\t\toutput += chars[data[i] >> 4] + chars[data[i] & 0xf];\n\t}\n\treturn output;\n};\n*/\n\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps: { [scale: number]: () => Uint8ClampedArray } = {\n\t1: createSingleCallFunction(() =>\n\t\tdecodeData(\n\t\t\t'0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792'\n\t\t)\n\t),\n\t2: createSingleCallFunction(() =>\n\t\tdecodeData(\n\t\t\tn\t\t)\n\t)\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\n\nconst charTable: { [hex: string]: number } = {\n\t'0': 0,\n\t'1': 1,\n\t'2': 2,\n\t'3': 3,\n\t'4': 4,\n\t'5': 5,\n\t'6': 6,\n\t'7': 7,\n\t'8': 8,\n\t'9': 9,\n\tA: 10,\n\tB: 11,\n\tC: 12,\n\tD: 13,\n\tE: 14,\n\tF: 15\n};\n\nconst decodeData = (str: string) => {\n\tconst output = new Uint8ClampedArray(str.length / 2);\n\tfor (let i = 0; i < str.length; i += 2) {\n\t\toutput[i >> 1] = (charTable[str[i]] << 4) | (charTable[str[i + 1]] & 0xF);\n\t}\n\n\treturn output;\n};\n\n/*\nconst encodeData = (data: Uint8ClampedArray, length: string) => {\n\tconst chars = '0123456789ABCDEF';\n\tlet output = '';\n\tfor (let i = 0; i < data.length; i++) {\n\t\toutput += chars[data[i] >> 4] + chars[data[i] & 0xf];\n\t}\n\treturn output;\n};\n*/\n\n/**\n * Map of minimap scales to prebaked sample data at those scales. We don't\n * sample much larger data, because then font family becomes visible, which\n * is use-configurable.\n */\nexport const prebakedMiniMaps: { [scale: number]: () => Uint8ClampedArray } = {\n\t1: createSingleCallFunction(() =>\n\t\tdecodeData(\n\t\t\t'0000511D6300CF609C709645A78432005642574171487021003C451900274D35D762755E8B629C5BA856AF57BA649530C167D1512A272A3F6038604460398526BCA2A968DB6F8957C768BE5FBE2FB467CF5D8D5B795DC7625B5DFF50DE64C466DB2FC47CD860A65E9A2EB96CB54CE06DA763AB2EA26860524D3763536601005116008177A8705E53AB738E6A982F88BAA35B5F5B626D9C636B449B737E5B7B678598869A662F6B5B8542706C704C80736A607578685B70594A49715A4522E792'\n\t\t)\n\t),\n\t2: createSingleCallFunction(() =>\n\t\tdecodeData(\n\t\t\tn\t\t)\n\t)\n};\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,wBAAwB,EAAE,MAAM,uCAAuC,CAAC;;AAEjF,MAAM,SAAS,GAA8B;IAC5C,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,CAAC,EAAE,EAAE;IACL,CAAC,EAAE,EAAE;IACL,CAAC,EAAE,EAAE;IACL,CAAC,EAAE,EAAE;IACL,CAAC,EAAE,EAAE;IACL,CAAC,EAAE,EAAE;CACL,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE;IAClC,MAAM,MAAM,GAAG,IAAI,iBAAiB,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAE,CAAC;QACxC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,AAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAI,CAAD,QAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC3E,CAAC;IAED,OAAO,MAAM,CAAC;AACf,CAAC,CAAC;AAkBK,MAAM,gBAAgB,GAAiD;IAC7E,CAAC,MAAE,yMAAwB,EAAC,GAAG,CAC9B,CADgC,SACtB,CACT,kYAAkY,CAClY,CACD;IACD,CAAC,MAAE,yMAAwB,EAAC,GAAG,CAC9B,CADgC,SACtB,CACT,kgDAAkgD,CAClgD,CACD;CACD,CAAC","debugId":null}},
    {"offset": {"line": 3965, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/vs/editor/browser/viewParts/minimap/minimapCharRendererFactory.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes, Constants } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n\tprivate static lastCreated?: MinimapCharRenderer;\n\tprivate static lastFontFamily?: string;\n\n\t/**\n\t * Creates a new character renderer factory with the given scale.\n\t */\n\tpublic static create(scale: number, fontFamily: string) {\n\t\t// renderers are immutable. By default we'll 'create' a new minimap\n\t\t// character renderer whenever we switch editors, no need to do extra work.\n\t\tif (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n\t\t\treturn this.lastCreated;\n\t\t}\n\n\t\tlet factory: MinimapCharRenderer;\n\t\tif (prebakedMiniMaps[scale]) {\n\t\t\tfactory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n\t\t} else {\n\t\t\tfactory = MinimapCharRendererFactory.createFromSampleData(\n\t\t\t\tMinimapCharRendererFactory.createSampleData(fontFamily).data,\n\t\t\t\tscale\n\t\t\t);\n\t\t}\n\n\t\tthis.lastFontFamily = fontFamily;\n\t\tthis.lastCreated = factory;\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Creates the font sample data, writing to a canvas.\n\t */\n\tpublic static createSampleData(fontFamily: string): ImageData {\n\t\tconst canvas = document.createElement('canvas');\n\t\tconst ctx = canvas.getContext('2d')!;\n\n\t\tcanvas.style.height = `${Constants.SAMPLED_CHAR_HEIGHT}px`;\n\t\tcanvas.height = Constants.SAMPLED_CHAR_HEIGHT;\n\t\tcanvas.width = Constants.CHAR_COUNT * Constants.SAMPLED_CHAR_WIDTH;\n\t\tcanvas.style.width = Constants.CHAR_COUNT * Constants.SAMPLED_CHAR_WIDTH + 'px';\n\n\t\tctx.fillStyle = '#ffffff';\n\t\tctx.font = `bold ${Constants.SAMPLED_CHAR_HEIGHT}px ${fontFamily}`;\n\t\tctx.textBaseline = 'middle';\n\n\t\tlet x = 0;\n\t\tfor (const code of allCharCodes) {\n\t\t\tctx.fillText(String.fromCharCode(code), x, Constants.SAMPLED_CHAR_HEIGHT / 2);\n\t\t\tx += Constants.SAMPLED_CHAR_WIDTH;\n\t\t}\n\n\t\treturn ctx.getImageData(0, 0, Constants.CHAR_COUNT * Constants.SAMPLED_CHAR_WIDTH, Constants.SAMPLED_CHAR_HEIGHT);\n\t}\n\n\t/**\n\t * Creates a character renderer from the canvas sample data.\n\t */\n\tpublic static createFromSampleData(source: Uint8ClampedArray, scale: number): MinimapCharRenderer {\n\t\tconst expectedLength =\n\t\t\tConstants.SAMPLED_CHAR_HEIGHT * Constants.SAMPLED_CHAR_WIDTH * Constants.RGBA_CHANNELS_CNT * Constants.CHAR_COUNT;\n\t\tif (source.length !== expectedLength) {\n\t\t\tthrow new Error('Unexpected source in MinimapCharRenderer');\n\t\t}\n\n\t\tconst charData = MinimapCharRendererFactory._downsample(source, scale);\n\t\treturn new MinimapCharRenderer(charData, scale);\n\t}\n\n\tprivate static _downsampleChar(\n\t\tsource: Uint8ClampedArray,\n\t\tsourceOffset: number,\n\t\tdest: Uint8ClampedArray,\n\t\tdestOffset: number,\n\t\tscale: number\n\t): number {\n\t\tconst width = Constants.BASE_CHAR_WIDTH * scale;\n\t\tconst height = Constants.BASE_CHAR_HEIGHT * scale;\n\n\t\tlet targetIndex = destOffset;\n\t\tlet brightest = 0;\n\n\t\t// This is essentially an ad-hoc rescaling algorithm. Standard approaches\n\t\t// like bicubic interpolation are awesome for scaling between image sizes,\n\t\t// but don't work so well when scaling to very small pixel values, we end\n\t\t// up with blurry, indistinct forms.\n\t\t//\n\t\t// The approach taken here is simply mapping each source pixel to the target\n\t\t// pixels, and taking the weighted values for all pixels in each, and then\n\t\t// averaging them out. Finally we apply an intensity boost in _downsample,\n\t\t// since when scaling to the smallest pixel sizes there's more black space\n\t\t// which causes characters to be much less distinct.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\t// 1. For this destination pixel, get the source pixels we're sampling\n\t\t\t// from (x1, y1) to the next pixel (x2, y2)\n\t\t\tconst sourceY1 = (y / height) * Constants.SAMPLED_CHAR_HEIGHT;\n\t\t\tconst sourceY2 = ((y + 1) / height) * Constants.SAMPLED_CHAR_HEIGHT;\n\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst sourceX1 = (x / width) * Constants.SAMPLED_CHAR_WIDTH;\n\t\t\t\tconst sourceX2 = ((x + 1) / width) * Constants.SAMPLED_CHAR_WIDTH;\n\n\t\t\t\t// 2. Sample all of them, summing them up and weighting them. Similar\n\t\t\t\t// to bilinear interpolation.\n\t\t\t\tlet value = 0;\n\t\t\t\tlet samples = 0;\n\t\t\t\tfor (let sy = sourceY1; sy < sourceY2; sy++) {\n\t\t\t\t\tconst sourceRow = sourceOffset + Math.floor(sy) * Constants.RGBA_SAMPLED_ROW_WIDTH;\n\t\t\t\t\tconst yBalance = 1 - (sy - Math.floor(sy));\n\t\t\t\t\tfor (let sx = sourceX1; sx < sourceX2; sx++) {\n\t\t\t\t\t\tconst xBalance = 1 - (sx - Math.floor(sx));\n\t\t\t\t\t\tconst sourceIndex = sourceRow + Math.floor(sx) * Constants.RGBA_CHANNELS_CNT;\n\n\t\t\t\t\t\tconst weight = xBalance * yBalance;\n\t\t\t\t\t\tsamples += weight;\n\t\t\t\t\t\tvalue += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst final = value / samples;\n\t\t\t\tbrightest = Math.max(brightest, final);\n\t\t\t\tdest[targetIndex++] = toUint8(final);\n\t\t\t}\n\t\t}\n\n\t\treturn brightest;\n\t}\n\n\tprivate static _downsample(data: Uint8ClampedArray, scale: number): Uint8ClampedArray {\n\t\tconst pixelsPerCharacter = Constants.BASE_CHAR_HEIGHT * scale * Constants.BASE_CHAR_WIDTH * scale;\n\t\tconst resultLen = pixelsPerCharacter * Constants.CHAR_COUNT;\n\t\tconst result = new Uint8ClampedArray(resultLen);\n\n\t\tlet resultOffset = 0;\n\t\tlet sourceOffset = 0;\n\t\tlet brightest = 0;\n\t\tfor (let charIndex = 0; charIndex < Constants.CHAR_COUNT; charIndex++) {\n\t\t\tbrightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n\t\t\tresultOffset += pixelsPerCharacter;\n\t\t\tsourceOffset += Constants.SAMPLED_CHAR_WIDTH * Constants.RGBA_CHANNELS_CNT;\n\t\t}\n\n\t\tif (brightest > 0) {\n\t\t\tconst adjust = 255 / brightest;\n\t\t\tfor (let i = 0; i < resultLen; i++) {\n\t\t\t\tresult[i] *= adjust;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { allCharCodes, Constants } from './minimapCharSheet.js';\nimport { prebakedMiniMaps } from './minimapPreBaked.js';\nimport { toUint8 } from '../../../../base/common/uint.js';\n\n/**\n * Creates character renderers. It takes a 'scale' that determines how large\n * characters should be drawn. Using this, it draws data into a canvas and\n * then downsamples the characters as necessary for the current display.\n * This makes rendering more efficient, rather than drawing a full (tiny)\n * font, or downsampling in real-time.\n */\nexport class MinimapCharRendererFactory {\n\tprivate static lastCreated?: MinimapCharRenderer;\n\tprivate static lastFontFamily?: string;\n\n\t/**\n\t * Creates a new character renderer factory with the given scale.\n\t */\n\tpublic static create(scale: number, fontFamily: string) {\n\t\t// renderers are immutable. By default we'll 'create' a new minimap\n\t\t// character renderer whenever we switch editors, no need to do extra work.\n\t\tif (this.lastCreated && scale === this.lastCreated.scale && fontFamily === this.lastFontFamily) {\n\t\t\treturn this.lastCreated;\n\t\t}\n\n\t\tlet factory: MinimapCharRenderer;\n\t\tif (prebakedMiniMaps[scale]) {\n\t\t\tfactory = new MinimapCharRenderer(prebakedMiniMaps[scale](), scale);\n\t\t} else {\n\t\t\tfactory = MinimapCharRendererFactory.createFromSampleData(\n\t\t\t\tMinimapCharRendererFactory.createSampleData(fontFamily).data,\n\t\t\t\tscale\n\t\t\t);\n\t\t}\n\n\t\tthis.lastFontFamily = fontFamily;\n\t\tthis.lastCreated = factory;\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Creates the font sample data, writing to a canvas.\n\t */\n\tpublic static createSampleData(fontFamily: string): ImageData {\n\t\tconst canvas = document.createElement('canvas');\n\t\tconst ctx = canvas.getContext('2d')!;\n\n\t\tcanvas.style.height = `${Constants.SAMPLED_CHAR_HEIGHT}px`;\n\t\tcanvas.height = Constants.SAMPLED_CHAR_HEIGHT;\n\t\tcanvas.width = Constants.CHAR_COUNT * Constants.SAMPLED_CHAR_WIDTH;\n\t\tcanvas.style.width = Constants.CHAR_COUNT * Constants.SAMPLED_CHAR_WIDTH + 'px';\n\n\t\tctx.fillStyle = '#ffffff';\n\t\tctx.font = `bold ${Constants.SAMPLED_CHAR_HEIGHT}px ${fontFamily}`;\n\t\tctx.textBaseline = 'middle';\n\n\t\tlet x = 0;\n\t\tfor (const code of allCharCodes) {\n\t\t\tctx.fillText(String.fromCharCode(code), x, Constants.SAMPLED_CHAR_HEIGHT / 2);\n\t\t\tx += Constants.SAMPLED_CHAR_WIDTH;\n\t\t}\n\n\t\treturn ctx.getImageData(0, 0, Constants.CHAR_COUNT * Constants.SAMPLED_CHAR_WIDTH, Constants.SAMPLED_CHAR_HEIGHT);\n\t}\n\n\t/**\n\t * Creates a character renderer from the canvas sample data.\n\t */\n\tpublic static createFromSampleData(source: Uint8ClampedArray, scale: number): MinimapCharRenderer {\n\t\tconst expectedLength =\n\t\t\tConstants.SAMPLED_CHAR_HEIGHT * Constants.SAMPLED_CHAR_WIDTH * Constants.RGBA_CHANNELS_CNT * Constants.CHAR_COUNT;\n\t\tif (source.length !== expectedLength) {\n\t\t\tthrow new Error('Unexpected source in MinimapCharRenderer');\n\t\t}\n\n\t\tconst charData = MinimapCharRendererFactory._downsample(source, scale);\n\t\treturn new MinimapCharRenderer(charData, scale);\n\t}\n\n\tprivate static _downsampleChar(\n\t\tsource: Uint8ClampedArray,\n\t\tsourceOffset: number,\n\t\tdest: Uint8ClampedArray,\n\t\tdestOffset: number,\n\t\tscale: number\n\t): number {\n\t\tconst width = Constants.BASE_CHAR_WIDTH * scale;\n\t\tconst height = Constants.BASE_CHAR_HEIGHT * scale;\n\n\t\tlet targetIndex = destOffset;\n\t\tlet brightest = 0;\n\n\t\t// This is essentially an ad-hoc rescaling algorithm. Standard approaches\n\t\t// like bicubic interpolation are awesome for scaling between image sizes,\n\t\t// but don't work so well when scaling to very small pixel values, we end\n\t\t// up with blurry, indistinct forms.\n\t\t//\n\t\t// The approach taken here is simply mapping each source pixel to the target\n\t\t// pixels, and taking the weighted values for all pixels in each, and then\n\t\t// averaging them out. Finally we apply an intensity boost in _downsample,\n\t\t// since when scaling to the smallest pixel sizes there's more black space\n\t\t// which causes characters to be much less distinct.\n\t\tfor (let y = 0; y < height; y++) {\n\t\t\t// 1. For this destination pixel, get the source pixels we're sampling\n\t\t\t// from (x1, y1) to the next pixel (x2, y2)\n\t\t\tconst sourceY1 = (y / height) * Constants.SAMPLED_CHAR_HEIGHT;\n\t\t\tconst sourceY2 = ((y + 1) / height) * Constants.SAMPLED_CHAR_HEIGHT;\n\n\t\t\tfor (let x = 0; x < width; x++) {\n\t\t\t\tconst sourceX1 = (x / width) * Constants.SAMPLED_CHAR_WIDTH;\n\t\t\t\tconst sourceX2 = ((x + 1) / width) * Constants.SAMPLED_CHAR_WIDTH;\n\n\t\t\t\t// 2. Sample all of them, summing them up and weighting them. Similar\n\t\t\t\t// to bilinear interpolation.\n\t\t\t\tlet value = 0;\n\t\t\t\tlet samples = 0;\n\t\t\t\tfor (let sy = sourceY1; sy < sourceY2; sy++) {\n\t\t\t\t\tconst sourceRow = sourceOffset + Math.floor(sy) * Constants.RGBA_SAMPLED_ROW_WIDTH;\n\t\t\t\t\tconst yBalance = 1 - (sy - Math.floor(sy));\n\t\t\t\t\tfor (let sx = sourceX1; sx < sourceX2; sx++) {\n\t\t\t\t\t\tconst xBalance = 1 - (sx - Math.floor(sx));\n\t\t\t\t\t\tconst sourceIndex = sourceRow + Math.floor(sx) * Constants.RGBA_CHANNELS_CNT;\n\n\t\t\t\t\t\tconst weight = xBalance * yBalance;\n\t\t\t\t\t\tsamples += weight;\n\t\t\t\t\t\tvalue += ((source[sourceIndex] * source[sourceIndex + 3]) / 255) * weight;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst final = value / samples;\n\t\t\t\tbrightest = Math.max(brightest, final);\n\t\t\t\tdest[targetIndex++] = toUint8(final);\n\t\t\t}\n\t\t}\n\n\t\treturn brightest;\n\t}\n\n\tprivate static _downsample(data: Uint8ClampedArray, scale: number): Uint8ClampedArray {\n\t\tconst pixelsPerCharacter = Constants.BASE_CHAR_HEIGHT * scale * Constants.BASE_CHAR_WIDTH * scale;\n\t\tconst resultLen = pixelsPerCharacter * Constants.CHAR_COUNT;\n\t\tconst result = new Uint8ClampedArray(resultLen);\n\n\t\tlet resultOffset = 0;\n\t\tlet sourceOffset = 0;\n\t\tlet brightest = 0;\n\t\tfor (let charIndex = 0; charIndex < Constants.CHAR_COUNT; charIndex++) {\n\t\t\tbrightest = Math.max(brightest, this._downsampleChar(data, sourceOffset, result, resultOffset, scale));\n\t\t\tresultOffset += pixelsPerCharacter;\n\t\t\tsourceOffset += Constants.SAMPLED_CHAR_WIDTH * Constants.RGBA_CHANNELS_CNT;\n\t\t}\n\n\t\tif (brightest > 0) {\n\t\t\tconst adjust = 255 / brightest;\n\t\t\tfor (let i = 0; i < resultLen; i++) {\n\t\t\t\tresult[i] *= adjust;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4098, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/minimap.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/minimap/minimap.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/minimap/vs/editor/browser/viewParts/minimap/minimap.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { IDisposable, Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { ILine, RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { RenderMinimap, EditorOption, MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/misc/rgba.js';\nimport { ScrollType } from '../../../common/editorCommon.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { ColorId } from '../../../common/encodedTokenAttributes.js';\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { Constants } from './minimapCharSheet.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { EditorTheme } from '../../../common/editorTheme.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewLineData } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity, editorForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ModelDecorationMinimapOptions } from '../../../common/model/textModel.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { GestureEvent, EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition, MinimapSectionHeaderStyle, TextModelResolvedOptions } from '../../../common/model.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../base/browser/fonts.js';\nimport { ViewModelDecoration } from '../../../common/viewModel/viewModelDecoration.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\n\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\n\nconst GUTTER_DECORATION_WIDTH = 2;\n\nclass MinimapOptions {\n\n\tpublic readonly renderMinimap: RenderMinimap;\n\tpublic readonly size: 'proportional' | 'fill' | 'fit';\n\tpublic readonly minimapHeightIsEditorHeight: boolean;\n\tpublic readonly scrollBeyondLastLine: boolean;\n\tpublic readonly paddingTop: number;\n\tpublic readonly paddingBottom: number;\n\tpublic readonly showSlider: 'always' | 'mouseover';\n\tpublic readonly autohide: 'none' | 'mouseover' | 'scroll';\n\tpublic readonly pixelRatio: number;\n\tpublic readonly typicalHalfwidthCharacterWidth: number;\n\tpublic readonly lineHeight: number;\n\t/**\n\t * container dom node left position (in CSS px)\n\t */\n\tpublic readonly minimapLeft: number;\n\t/**\n\t * container dom node width (in CSS px)\n\t */\n\tpublic readonly minimapWidth: number;\n\t/**\n\t * container dom node height (in CSS px)\n\t */\n\tpublic readonly minimapHeight: number;\n\t/**\n\t * canvas backing store width (in device px)\n\t */\n\tpublic readonly canvasInnerWidth: number;\n\t/**\n\t * canvas backing store height (in device px)\n\t */\n\tpublic readonly canvasInnerHeight: number;\n\t/**\n\t * canvas width (in CSS px)\n\t */\n\tpublic readonly canvasOuterWidth: number;\n\t/**\n\t * canvas height (in CSS px)\n\t */\n\tpublic readonly canvasOuterHeight: number;\n\n\tpublic readonly isSampling: boolean;\n\tpublic readonly editorHeight: number;\n\tpublic readonly fontScale: number;\n\tpublic readonly minimapLineHeight: number;\n\tpublic readonly minimapCharWidth: number;\n\tpublic readonly sectionHeaderFontFamily: string;\n\tpublic readonly sectionHeaderFontSize: number;\n\t/**\n\t * Space in between the characters of the section header (in CSS px)\n\t */\n\tpublic readonly sectionHeaderLetterSpacing: number;\n\tpublic readonly sectionHeaderFontColor: RGBA8;\n\n\tpublic readonly charRenderer: () => MinimapCharRenderer;\n\tpublic readonly defaultBackgroundColor: RGBA8;\n\tpublic readonly backgroundColor: RGBA8;\n\t/**\n\t * foreground alpha: integer in [0-255]\n\t */\n\tpublic readonly foregroundAlpha: number;\n\n\tconstructor(configuration: IEditorConfiguration, theme: EditorTheme, tokensColorTracker: MinimapTokensColorTracker) {\n\t\tconst options = configuration.options;\n\t\tconst pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst minimapLayout = layoutInfo.minimap;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\n\t\tthis.renderMinimap = minimapLayout.renderMinimap;\n\t\tthis.size = minimapOpts.size;\n\t\tthis.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n\t\tthis.scrollBeyondLastLine = options.get(EditorOption.scrollBeyondLastLine);\n\t\tthis.paddingTop = options.get(EditorOption.padding).top;\n\t\tthis.paddingBottom = options.get(EditorOption.padding).bottom;\n\t\tthis.showSlider = minimapOpts.showSlider;\n\t\tthis.autohide = minimapOpts.autohide;\n\t\tthis.pixelRatio = pixelRatio;\n\t\tthis.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.minimapLeft = minimapLayout.minimapLeft;\n\t\tthis.minimapWidth = minimapLayout.minimapWidth;\n\t\tthis.minimapHeight = layoutInfo.height;\n\n\t\tthis.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n\t\tthis.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n\t\tthis.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n\t\tthis.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n\n\t\tthis.isSampling = minimapLayout.minimapIsSampling;\n\t\tthis.editorHeight = layoutInfo.height;\n\t\tthis.fontScale = minimapLayout.minimapScale;\n\t\tthis.minimapLineHeight = minimapLayout.minimapLineHeight;\n\t\tthis.minimapCharWidth = Constants.BASE_CHAR_WIDTH * this.fontScale;\n\t\tthis.sectionHeaderFontFamily = DEFAULT_FONT_FAMILY;\n\t\tthis.sectionHeaderFontSize = minimapOpts.sectionHeaderFontSize * pixelRatio;\n\t\tthis.sectionHeaderLetterSpacing = minimapOpts.sectionHeaderLetterSpacing; // intentionally not multiplying by pixelRatio\n\t\tthis.sectionHeaderFontColor = MinimapOptions._getSectionHeaderColor(theme, tokensColorTracker.getColor(ColorId.DefaultForeground));\n\n\t\tthis.charRenderer = createSingleCallFunction(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n\t\tthis.defaultBackgroundColor = tokensColorTracker.getColor(ColorId.DefaultBackground);\n\t\tthis.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n\t\tthis.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n\t}\n\n\tprivate static _getMinimapBackground(theme: EditorTheme, defaultBackgroundColor: RGBA8): RGBA8 {\n\t\tconst themeColor = theme.getColor(minimapBackground);\n\t\tif (themeColor) {\n\t\t\treturn new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn defaultBackgroundColor;\n\t}\n\n\tprivate static _getMinimapForegroundOpacity(theme: EditorTheme): number {\n\t\tconst themeColor = theme.getColor(minimapForegroundOpacity);\n\t\tif (themeColor) {\n\t\t\treturn RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn 255;\n\t}\n\n\tprivate static _getSectionHeaderColor(theme: EditorTheme, defaultForegroundColor: RGBA8): RGBA8 {\n\t\tconst themeColor = theme.getColor(editorForeground);\n\t\tif (themeColor) {\n\t\t\treturn new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn defaultForegroundColor;\n\t}\n\n\tpublic equals(other: MinimapOptions): boolean {\n\t\treturn (this.renderMinimap === other.renderMinimap\n\t\t\t&& this.size === other.size\n\t\t\t&& this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n\t\t\t&& this.scrollBeyondLastLine === other.scrollBeyondLastLine\n\t\t\t&& this.paddingTop === other.paddingTop\n\t\t\t&& this.paddingBottom === other.paddingBottom\n\t\t\t&& this.showSlider === other.showSlider\n\t\t\t&& this.autohide === other.autohide\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.minimapLeft === other.minimapLeft\n\t\t\t&& this.minimapWidth === other.minimapWidth\n\t\t\t&& this.minimapHeight === other.minimapHeight\n\t\t\t&& this.canvasInnerWidth === other.canvasInnerWidth\n\t\t\t&& this.canvasInnerHeight === other.canvasInnerHeight\n\t\t\t&& this.canvasOuterWidth === other.canvasOuterWidth\n\t\t\t&& this.canvasOuterHeight === other.canvasOuterHeight\n\t\t\t&& this.isSampling === other.isSampling\n\t\t\t&& this.editorHeight === other.editorHeight\n\t\t\t&& this.fontScale === other.fontScale\n\t\t\t&& this.minimapLineHeight === other.minimapLineHeight\n\t\t\t&& this.minimapCharWidth === other.minimapCharWidth\n\t\t\t&& this.sectionHeaderFontSize === other.sectionHeaderFontSize\n\t\t\t&& this.sectionHeaderLetterSpacing === other.sectionHeaderLetterSpacing\n\t\t\t&& this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n\t\t\t&& this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n\t\t\t&& this.foregroundAlpha === other.foregroundAlpha\n\t\t);\n\t}\n}\n\nclass MinimapLayout {\n\n\tconstructor(\n\t\t/**\n\t\t * The given editor scrollTop (input).\n\t\t */\n\t\tpublic readonly scrollTop: number,\n\t\t/**\n\t\t * The given editor scrollHeight (input).\n\t\t */\n\t\tpublic readonly scrollHeight: number,\n\t\tpublic readonly sliderNeeded: boolean,\n\t\tprivate readonly _computedSliderRatio: number,\n\t\t/**\n\t\t * slider dom node top (in CSS px)\n\t\t */\n\t\tpublic readonly sliderTop: number,\n\t\t/**\n\t\t * slider dom node height (in CSS px)\n\t\t */\n\t\tpublic readonly sliderHeight: number,\n\t\t/**\n\t\t * empty lines to reserve at the top of the minimap.\n\t\t */\n\t\tpublic readonly topPaddingLineCount: number,\n\t\t/**\n\t\t * minimap render start line number.\n\t\t */\n\t\tpublic readonly startLineNumber: number,\n\t\t/**\n\t\t * minimap render end line number.\n\t\t */\n\t\tpublic readonly endLineNumber: number\n\t) { }\n\n\t/**\n\t * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n\t */\n\tpublic getDesiredScrollTopFromDelta(delta: number): number {\n\t\treturn Math.round(this.scrollTop + delta / this._computedSliderRatio);\n\t}\n\n\tpublic getDesiredScrollTopFromTouchLocation(pageY: number): number {\n\t\treturn Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n\t}\n\n\t/**\n\t * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n\t */\n\tpublic intersectWithViewport(range: Range): [number, number] | null {\n\t\tconst startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n\t\tconst endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n\t\tif (startLineNumber > endLineNumber) {\n\t\t\t// entirely outside minimap's viewport\n\t\t\treturn null;\n\t\t}\n\t\treturn [startLineNumber, endLineNumber];\n\t}\n\n\t/**\n\t * Get the inner minimap y coordinate for a line number.\n\t */\n\tpublic getYForLineNumber(lineNumber: number, minimapLineHeight: number): number {\n\t\treturn + (lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n\t}\n\n\tpublic static create(\n\t\toptions: MinimapOptions,\n\t\tviewportStartLineNumber: number,\n\t\tviewportEndLineNumber: number,\n\t\tviewportStartLineNumberVerticalOffset: number,\n\t\tviewportHeight: number,\n\t\tviewportContainsWhitespaceGaps: boolean,\n\t\tlineCount: number,\n\t\trealLineCount: number,\n\t\tscrollTop: number,\n\t\tscrollHeight: number,\n\t\tpreviousLayout: MinimapLayout | null\n\t): MinimapLayout {\n\t\tconst pixelRatio = options.pixelRatio;\n\t\tconst minimapLineHeight = options.minimapLineHeight;\n\t\tconst minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n\t\tconst lineHeight = options.lineHeight;\n\n\t\tif (options.minimapHeightIsEditorHeight) {\n\t\t\tlet logicalScrollHeight = (\n\t\t\t\trealLineCount * options.lineHeight\n\t\t\t\t+ options.paddingTop\n\t\t\t\t+ options.paddingBottom\n\t\t\t);\n\t\t\tif (options.scrollBeyondLastLine) {\n\t\t\t\tlogicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n\t\t\t}\n\t\t\tconst sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n\t\t\tconst maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n\t\t\t// The slider can move from 0 to `maxMinimapSliderTop`\n\t\t\t// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\t\t\tconst computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n\t\t\tconst sliderTop = (scrollTop * computedSliderRatio);\n\t\t\tconst sliderNeeded = (maxMinimapSliderTop > 0);\n\t\t\tconst maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n\t\t\tconst topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n\t\t}\n\n\t\t// The visible line count in a viewport can change due to a number of reasons:\n\t\t//  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n\t\t//    e.g. for a line height of 20, and a viewport height of 600\n\t\t//          * scrollTop = 0  => visible lines are [1, 30]\n\t\t//          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n\t\t//          * scrollTop = 20 => visible lines are [2, 31]\n\t\t//  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n\t\t//  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n\n\t\t// We must first establish a desirable slider height.\n\t\tlet sliderHeight: number;\n\t\tif (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n\t\t\t// case b) from above: there are whitespace gaps in the viewport.\n\t\t\t// In this case, the height of the slider directly reflects the visible line count.\n\t\t\tconst viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n\t\t\tsliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n\t\t} else {\n\t\t\t// The slider has a stable height\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\tsliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n\t\t}\n\n\t\tconst extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n\t\tlet extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n\t\tif (options.scrollBeyondLastLine) {\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\textraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n\t\t}\n\n\t\tlet maxMinimapSliderTop: number;\n\t\tif (extraLinesAtTheBottom > 0) {\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\t// The minimap slider, when dragged all the way down, will contain the last line at its top\n\t\t\tmaxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n\t\t} else {\n\t\t\t// The minimap slider, when dragged all the way down, will contain the last line at its bottom\n\t\t\tmaxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n\t\t}\n\t\tmaxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n\n\t\t// The slider can move from 0 to `maxMinimapSliderTop`\n\t\t// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\t\tconst computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n\t\tconst sliderTop = (scrollTop * computedSliderRatio);\n\n\t\tif (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n\t\t\t// All lines fit in the minimap\n\t\t\tconst sliderNeeded = (maxMinimapSliderTop > 0);\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n\t\t} else {\n\t\t\tlet consideringStartLineNumber: number;\n\t\t\tif (viewportStartLineNumber > 1) {\n\t\t\t\tconsideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n\t\t\t} else {\n\t\t\t\tconsideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n\t\t\t}\n\n\t\t\tlet topPaddingLineCount: number;\n\t\t\tlet startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n\t\t\tif (startLineNumber < extraLinesAtTheTop) {\n\t\t\t\ttopPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n\t\t\t\tstartLineNumber = 1;\n\t\t\t} else {\n\t\t\t\ttopPaddingLineCount = 0;\n\t\t\t\tstartLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n\t\t\t}\n\n\t\t\t// Avoid flickering caused by a partial viewport start line\n\t\t\t// by being consistent w.r.t. the previous layout decision\n\t\t\tif (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n\t\t\t\tif (previousLayout.scrollTop > scrollTop) {\n\t\t\t\t\t// Scrolling up => never increase `startLineNumber`\n\t\t\t\t\tstartLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n\t\t\t\t\ttopPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n\t\t\t\t}\n\t\t\t\tif (previousLayout.scrollTop < scrollTop) {\n\t\t\t\t\t// Scrolling down => never decrease `startLineNumber`\n\t\t\t\t\tstartLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n\t\t\t\t\ttopPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n\t\t\tconst partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n\n\t\t\tlet sliderTopAligned: number;\n\t\t\tif (scrollTop >= options.paddingTop) {\n\t\t\t\tsliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n\t\t\t} else {\n\t\t\t\tsliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n\t\t\t}\n\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n\t\t}\n\t}\n}\n\nclass MinimapLine implements ILine {\n\n\tpublic static readonly INVALID = new MinimapLine(-1);\n\n\tdy: number;\n\n\tconstructor(dy: number) {\n\t\tthis.dy = dy;\n\t}\n\n\tpublic onContentChanged(): void {\n\t\tthis.dy = -1;\n\t}\n\n\tpublic onTokensChanged(): void {\n\t\tthis.dy = -1;\n\t}\n}\n\nclass RenderData {\n\t/**\n\t * last rendered layout.\n\t */\n\tpublic readonly renderedLayout: MinimapLayout;\n\tprivate readonly _imageData: ImageData;\n\tprivate readonly _renderedLines: RenderedLinesCollection<MinimapLine>;\n\n\tconstructor(\n\t\trenderedLayout: MinimapLayout,\n\t\timageData: ImageData,\n\t\tlines: MinimapLine[]\n\t) {\n\t\tthis.renderedLayout = renderedLayout;\n\t\tthis._imageData = imageData;\n\t\tthis._renderedLines = new RenderedLinesCollection({\n\t\t\tcreateLine: () => MinimapLine.INVALID\n\t\t});\n\t\tthis._renderedLines._set(renderedLayout.startLineNumber, lines);\n\t}\n\n\t/**\n\t * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n\t */\n\tpublic linesEquals(layout: MinimapLayout): boolean {\n\t\tif (!this.scrollEquals(layout)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst tmp = this._renderedLines._get();\n\t\tconst lines = tmp.lines;\n\t\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\t\tif (lines[i].dy === -1) {\n\t\t\t\t// This line is invalid\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check if the current RenderData matches the new layout's scroll position\n\t */\n\tpublic scrollEquals(layout: MinimapLayout): boolean {\n\t\treturn this.renderedLayout.startLineNumber === layout.startLineNumber\n\t\t\t&& this.renderedLayout.endLineNumber === layout.endLineNumber;\n\t}\n\n\t_get(): { imageData: ImageData; rendLineNumberStart: number; lines: MinimapLine[] } {\n\t\tconst tmp = this._renderedLines._get();\n\t\treturn {\n\t\t\timageData: this._imageData,\n\t\t\trendLineNumberStart: tmp.rendLineNumberStart,\n\t\t\tlines: tmp.lines\n\t\t};\n\t}\n\n\tpublic onLinesChanged(changeFromLineNumber: number, changeCount: number): boolean {\n\t\treturn this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n\t}\n\tpublic onLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number): void {\n\t\tthis._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t}\n\tpublic onLinesInserted(insertFromLineNumber: number, insertToLineNumber: number): void {\n\t\tthis._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t}\n\tpublic onTokensChanged(ranges: { fromLineNumber: number; toLineNumber: number }[]): boolean {\n\t\treturn this._renderedLines.onTokensChanged(ranges);\n\t}\n}\n\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n\n\tprivate readonly _backgroundFillData: Uint8ClampedArray;\n\tprivate readonly _buffers: [ImageData, ImageData];\n\tprivate _lastUsedBuffer: number;\n\n\tconstructor(ctx: CanvasRenderingContext2D, WIDTH: number, HEIGHT: number, background: RGBA8) {\n\t\tthis._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n\t\tthis._buffers = [\n\t\t\tctx.createImageData(WIDTH, HEIGHT),\n\t\t\tctx.createImageData(WIDTH, HEIGHT)\n\t\t];\n\t\tthis._lastUsedBuffer = 0;\n\t}\n\n\tpublic getBuffer(): ImageData {\n\t\t// rotate buffers\n\t\tthis._lastUsedBuffer = 1 - this._lastUsedBuffer;\n\t\tconst result = this._buffers[this._lastUsedBuffer];\n\n\t\t// fill with background color\n\t\tresult.data.set(this._backgroundFillData);\n\n\t\treturn result;\n\t}\n\n\tprivate static _createBackgroundFillData(WIDTH: number, HEIGHT: number, background: RGBA8): Uint8ClampedArray {\n\t\tconst backgroundR = background.r;\n\t\tconst backgroundG = background.g;\n\t\tconst backgroundB = background.b;\n\t\tconst backgroundA = background.a;\n\n\t\tconst result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n\t\tlet offset = 0;\n\t\tfor (let i = 0; i < HEIGHT; i++) {\n\t\t\tfor (let j = 0; j < WIDTH; j++) {\n\t\t\t\tresult[offset] = backgroundR;\n\t\t\t\tresult[offset + 1] = backgroundG;\n\t\t\t\tresult[offset + 2] = backgroundB;\n\t\t\t\tresult[offset + 3] = backgroundA;\n\t\t\t\toffset += 4;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport interface IMinimapModel {\n\treadonly tokensColorTracker: MinimapTokensColorTracker;\n\treadonly options: MinimapOptions;\n\n\tgetLineCount(): number;\n\tgetRealLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineMaxColumn(lineNumber: number): number;\n\tgetMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): (ViewLineData | null)[];\n\tgetSelections(): Selection[];\n\tgetMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[];\n\tgetSectionHeaderDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[];\n\tgetSectionHeaderText(decoration: ViewModelDecoration, fitWidth: (s: string) => string): string | null;\n\tgetOptions(): TextModelResolvedOptions;\n\trevealLineNumber(lineNumber: number): void;\n\tsetScrollTop(scrollTop: number): void;\n}\n\ninterface IMinimapRenderingContext {\n\treadonly viewportContainsWhitespaceGaps: boolean;\n\n\treadonly scrollWidth: number;\n\treadonly scrollHeight: number;\n\n\treadonly viewportStartLineNumber: number;\n\treadonly viewportEndLineNumber: number;\n\treadonly viewportStartLineNumberVerticalOffset: number;\n\n\treadonly scrollTop: number;\n\treadonly scrollLeft: number;\n\n\treadonly viewportWidth: number;\n\treadonly viewportHeight: number;\n}\n\ninterface SamplingStateLinesDeletedEvent {\n\ttype: 'deleted';\n\t_oldIndex: number;\n\tdeleteFromLineNumber: number;\n\tdeleteToLineNumber: number;\n}\n\ninterface SamplingStateLinesInsertedEvent {\n\ttype: 'inserted';\n\t_i: number;\n\tinsertFromLineNumber: number;\n\tinsertToLineNumber: number;\n}\n\ninterface SamplingStateFlushEvent {\n\ttype: 'flush';\n}\n\ntype SamplingStateEvent = SamplingStateLinesInsertedEvent | SamplingStateLinesDeletedEvent | SamplingStateFlushEvent;\n\nclass MinimapSamplingState {\n\n\tpublic static compute(options: MinimapOptions, viewLineCount: number, oldSamplingState: MinimapSamplingState | null): [MinimapSamplingState | null, SamplingStateEvent[]] {\n\t\tif (options.renderMinimap === RenderMinimap.None || !options.isSampling) {\n\t\t\treturn [null, []];\n\t\t}\n\n\t\t// ratio is intentionally not part of the layout to avoid the layout changing all the time\n\t\t// so we need to recompute it again...\n\t\tconst { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n\t\t\tviewLineCount: viewLineCount,\n\t\t\tscrollBeyondLastLine: options.scrollBeyondLastLine,\n\t\t\tpaddingTop: options.paddingTop,\n\t\t\tpaddingBottom: options.paddingBottom,\n\t\t\theight: options.editorHeight,\n\t\t\tlineHeight: options.lineHeight,\n\t\t\tpixelRatio: options.pixelRatio\n\t\t});\n\t\tconst ratio = viewLineCount / minimapLineCount;\n\t\tconst halfRatio = ratio / 2;\n\n\t\tif (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n\t\t\tconst result: number[] = [];\n\t\t\tresult[0] = 1;\n\t\t\tif (minimapLineCount > 1) {\n\t\t\t\tfor (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n\t\t\t\t\tresult[i] = Math.round(i * ratio + halfRatio);\n\t\t\t\t}\n\t\t\t\tresult[minimapLineCount - 1] = viewLineCount;\n\t\t\t}\n\t\t\treturn [new MinimapSamplingState(ratio, result), []];\n\t\t}\n\n\t\tconst oldMinimapLines = oldSamplingState.minimapLines;\n\t\tconst oldLength = oldMinimapLines.length;\n\t\tconst result: number[] = [];\n\t\tlet oldIndex = 0;\n\t\tlet oldDeltaLineCount = 0;\n\t\tlet minViewLineNumber = 1;\n\t\tconst MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n\t\tlet events: SamplingStateEvent[] = [];\n\t\tlet lastEvent: SamplingStateEvent | null = null;\n\t\tfor (let i = 0; i < minimapLineCount; i++) {\n\t\t\tconst fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n\t\t\tconst toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n\n\t\t\twhile (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n\t\t\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\t\tif (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n\t\t\t\t\t\tlastEvent.deleteToLineNumber++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t\t}\n\t\t\t\t\toldDeltaLineCount--;\n\t\t\t\t}\n\t\t\t\toldIndex++;\n\t\t\t}\n\n\t\t\tlet selectedViewLineNumber: number;\n\t\t\tif (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n\t\t\t\t// reuse the old sampled line\n\t\t\t\tselectedViewLineNumber = oldMinimapLines[oldIndex];\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tselectedViewLineNumber = 1;\n\t\t\t\t} else if (i + 1 === minimapLineCount) {\n\t\t\t\t\tselectedViewLineNumber = viewLineCount;\n\t\t\t\t} else {\n\t\t\t\t\tselectedViewLineNumber = Math.round(i * ratio + halfRatio);\n\t\t\t\t}\n\t\t\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\t\tif (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n\t\t\t\t\t\tlastEvent.insertToLineNumber++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t\t}\n\t\t\t\t\toldDeltaLineCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[i] = selectedViewLineNumber;\n\t\t\tminViewLineNumber = selectedViewLineNumber;\n\t\t}\n\n\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\twhile (oldIndex < oldLength) {\n\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\tif (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n\t\t\t\t\tlastEvent.deleteToLineNumber++;\n\t\t\t\t} else {\n\t\t\t\t\tlastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t}\n\t\t\t\toldDeltaLineCount--;\n\t\t\t\toldIndex++;\n\t\t\t}\n\t\t} else {\n\t\t\t// too many events, just give up\n\t\t\tevents = [{ type: 'flush' }];\n\t\t}\n\n\t\treturn [new MinimapSamplingState(ratio, result), events];\n\t}\n\n\tconstructor(\n\t\tpublic readonly samplingRatio: number,\n\t\tpublic readonly minimapLines: number[]\t// a map of 0-based minimap line indexes to 1-based view line numbers\n\t) {\n\t}\n\n\tpublic modelLineToMinimapLine(lineNumber: number): number {\n\t\treturn Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n\t}\n\n\t/**\n\t * Will return null if the model line ranges are not intersecting with a sampled model line.\n\t */\n\tpublic modelLineRangeToMinimapLineRange(fromLineNumber: number, toLineNumber: number): [number, number] | null {\n\t\tlet fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n\t\twhile (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n\t\t\tfromLineIndex--;\n\t\t}\n\t\tlet toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n\t\twhile (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n\t\t\ttoLineIndex++;\n\t\t}\n\t\tif (fromLineIndex === toLineIndex) {\n\t\t\tconst sampledLineNumber = this.minimapLines[fromLineIndex];\n\t\t\tif (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n\t\t\t\t// This line is not part of the sampled lines ==> nothing to do\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn [fromLineIndex + 1, toLineIndex + 1];\n\t}\n\n\t/**\n\t * Will always return a range, even if it is not intersecting with a sampled model line.\n\t */\n\tpublic decorationLineRangeToMinimapLineRange(startLineNumber: number, endLineNumber: number): [number, number] {\n\t\tlet minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n\t\tlet minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n\t\tif (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n\t\t\tif (minimapLineEnd === this.minimapLines.length) {\n\t\t\t\tif (minimapLineStart > 1) {\n\t\t\t\t\tminimapLineStart--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tminimapLineEnd++;\n\t\t\t}\n\t\t}\n\t\treturn [minimapLineStart, minimapLineEnd];\n\t}\n\n\tpublic onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): [number, number] {\n\t\t// have the mapping be sticky\n\t\tconst deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n\t\tlet changeStartIndex = this.minimapLines.length;\n\t\tlet changeEndIndex = 0;\n\t\tfor (let i = this.minimapLines.length - 1; i >= 0; i--) {\n\t\t\tif (this.minimapLines[i] < e.fromLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.minimapLines[i] <= e.toLineNumber) {\n\t\t\t\t// this line got deleted => move to previous available\n\t\t\t\tthis.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n\t\t\t\tchangeStartIndex = Math.min(changeStartIndex, i);\n\t\t\t\tchangeEndIndex = Math.max(changeEndIndex, i);\n\t\t\t} else {\n\t\t\t\tthis.minimapLines[i] -= deletedLineCount;\n\t\t\t}\n\t\t}\n\t\treturn [changeStartIndex, changeEndIndex];\n\t}\n\n\tpublic onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): void {\n\t\t// have the mapping be sticky\n\t\tconst insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n\t\tfor (let i = this.minimapLines.length - 1; i >= 0; i--) {\n\t\t\tif (this.minimapLines[i] < e.fromLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.minimapLines[i] += insertedLineCount;\n\t\t}\n\t}\n}\n\n/**\n * The minimap appears beside the editor scroll bar and visualizes a zoomed out\n * view of the file.\n */\nexport class Minimap extends ViewPart implements IMinimapModel {\n\n\tpublic readonly tokensColorTracker: MinimapTokensColorTracker;\n\n\tprivate _selections: Selection[];\n\tprivate _minimapSelections: Selection[] | null;\n\n\tpublic options: MinimapOptions;\n\n\tprivate _samplingState: MinimapSamplingState | null;\n\tprivate _shouldCheckSampling: boolean;\n\n\tprivate _sectionHeaderCache = new LRUCache<string, string>(10, 1.5);\n\n\tprivate _actual: InnerMinimap;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n\n\t\tthis._selections = [];\n\t\tthis._minimapSelections = null;\n\n\t\tthis.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n\t\tconst [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n\t\tthis._samplingState = samplingState;\n\t\tthis._shouldCheckSampling = false;\n\n\t\tthis._actual = new InnerMinimap(context.theme, this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._actual.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._actual.getDomNode();\n\t}\n\n\tprivate _onOptionsMaybeChanged(): boolean {\n\t\tconst opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n\t\tif (this.options.equals(opts)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.options = opts;\n\t\tthis._recreateLineSampling();\n\t\tthis._actual.onDidChangeOptions();\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._onOptionsMaybeChanged();\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections;\n\t\tthis._minimapSelections = null;\n\t\treturn this._actual.onSelectionChanged();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsMinimap) {\n\t\t\treturn this._actual.onDecorationsChanged();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tthis._shouldCheckSampling = true;\n\t\t}\n\t\treturn this._actual.onFlushed();\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n\t\t\tif (minimapLineRange) {\n\t\t\t\treturn this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._actual.onLinesChanged(e.fromLineNumber, e.count);\n\t\t}\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n\t\t\tif (changeStartIndex <= changeEndIndex) {\n\t\t\t\tthis._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n\t\t\t}\n\t\t\tthis._shouldCheckSampling = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n\t\t}\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tthis._samplingState.onLinesInserted(e);\n\t\t\tthis._shouldCheckSampling = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n\t\t}\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn this._actual.onScrollChanged(e);\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis._actual.onThemeChanged();\n\t\tthis._onOptionsMaybeChanged();\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst ranges: { fromLineNumber: number; toLineNumber: number }[] = [];\n\t\t\tfor (const range of e.ranges) {\n\t\t\t\tconst minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n\t\t\t\tif (minimapLineRange) {\n\t\t\t\t\tranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ranges.length) {\n\t\t\t\treturn this._actual.onTokensChanged(ranges);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._actual.onTokensChanged(e.ranges);\n\t\t}\n\t}\n\tpublic override onTokensColorsChanged(e: viewEvents.ViewTokensColorsChangedEvent): boolean {\n\t\tthis._onOptionsMaybeChanged();\n\t\treturn this._actual.onTokensColorsChanged();\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._actual.onZonesChanged();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._shouldCheckSampling) {\n\t\t\tthis._shouldCheckSampling = false;\n\t\t\tthis._recreateLineSampling();\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tlet viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tlet viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tif (this._samplingState) {\n\t\t\tviewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n\t\t\tviewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n\t\t}\n\n\t\tconst minimapCtx: IMinimapRenderingContext = {\n\t\t\tviewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n\n\t\t\tscrollWidth: ctx.scrollWidth,\n\t\t\tscrollHeight: ctx.scrollHeight,\n\n\t\t\tviewportStartLineNumber: viewportStartLineNumber,\n\t\t\tviewportEndLineNumber: viewportEndLineNumber,\n\t\t\tviewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n\n\t\t\tscrollTop: ctx.scrollTop,\n\t\t\tscrollLeft: ctx.scrollLeft,\n\n\t\t\tviewportWidth: ctx.viewportWidth,\n\t\t\tviewportHeight: ctx.viewportHeight,\n\t\t};\n\t\tthis._actual.render(minimapCtx);\n\t}\n\n\t//#region IMinimapModel\n\n\tprivate _recreateLineSampling(): void {\n\t\tthis._minimapSelections = null;\n\n\t\tconst wasSampling = Boolean(this._samplingState);\n\t\tconst [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n\t\tthis._samplingState = samplingState;\n\n\t\tif (wasSampling && this._samplingState) {\n\t\t\t// was sampling, is sampling\n\t\t\tfor (const event of events) {\n\t\t\t\tswitch (event.type) {\n\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\tthis._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\tthis._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flush':\n\t\t\t\t\t\tthis._actual.onFlushed();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getLineCount(): number {\n\t\tif (this._samplingState) {\n\t\t\treturn this._samplingState.minimapLines.length;\n\t\t}\n\t\treturn this._context.viewModel.getLineCount();\n\t}\n\n\tpublic getRealLineCount(): number {\n\t\treturn this._context.viewModel.getLineCount();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._samplingState) {\n\t\t\treturn this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n\t\t}\n\t\treturn this._context.viewModel.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\tif (this._samplingState) {\n\t\t\treturn this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n\t\t}\n\t\treturn this._context.viewModel.getLineMaxColumn(lineNumber);\n\t}\n\n\tpublic getMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): (ViewLineData | null)[] {\n\t\tif (this._samplingState) {\n\t\t\tconst result: (ViewLineData | null)[] = [];\n\t\t\tfor (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n\t\t\t\tif (needed[lineIndex]) {\n\t\t\t\t\tresult[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n\t\t\t\t} else {\n\t\t\t\t\tresult[lineIndex] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n\t}\n\n\tpublic getSelections(): Selection[] {\n\t\tif (this._minimapSelections === null) {\n\t\t\tif (this._samplingState) {\n\t\t\t\tthis._minimapSelections = [];\n\t\t\t\tfor (const selection of this._selections) {\n\t\t\t\t\tconst [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n\t\t\t\t\tthis._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._minimapSelections = this._selections;\n\t\t\t}\n\t\t}\n\t\treturn this._minimapSelections;\n\t}\n\n\tpublic getMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[] {\n\t\treturn this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n\t\t\t.filter(decoration => !decoration.options.minimap?.sectionHeaderStyle);\n\t}\n\n\tpublic getSectionHeaderDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[] {\n\t\tconst headerHeightInMinimapLines = this.options.sectionHeaderFontSize / this.options.minimapLineHeight;\n\t\tstartLineNumber = Math.floor(Math.max(1, startLineNumber - headerHeightInMinimapLines));\n\t\treturn this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n\t\t\t.filter(decoration => !!decoration.options.minimap?.sectionHeaderStyle);\n\t}\n\n\tprivate _getMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number) {\n\t\tlet visibleRange: Range;\n\t\tif (this._samplingState) {\n\t\t\tconst modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n\t\t\tconst modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n\t\t\tvisibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n\t\t} else {\n\t\t\tvisibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n\t\t}\n\t\tconst decorations = this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n\n\t\tif (this._samplingState) {\n\t\t\tconst result: ViewModelDecoration[] = [];\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tif (!decoration.options.minimap) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst range = decoration.range;\n\t\t\t\tconst minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n\t\t\t\tconst minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n\t\t\t\tresult.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\treturn decorations;\n\t}\n\n\tpublic getSectionHeaderText(decoration: ViewModelDecoration, fitWidth: (s: string) => string): string | null {\n\t\tconst headerText = decoration.options.minimap?.sectionHeaderText;\n\t\tif (!headerText) {\n\t\t\treturn null;\n\t\t}\n\t\tconst cachedText = this._sectionHeaderCache.get(headerText);\n\t\tif (cachedText) {\n\t\t\treturn cachedText;\n\t\t}\n\t\tconst fittedText = fitWidth(headerText);\n\t\tthis._sectionHeaderCache.set(headerText, fittedText);\n\t\treturn fittedText;\n\t}\n\n\tpublic getOptions(): TextModelResolvedOptions {\n\t\treturn this._context.viewModel.model.getOptions();\n\t}\n\n\tpublic revealLineNumber(lineNumber: number): void {\n\t\tif (this._samplingState) {\n\t\t\tlineNumber = this._samplingState.minimapLines[lineNumber - 1];\n\t\t}\n\t\tthis._context.viewModel.revealRange(\n\t\t\t'mouse',\n\t\t\tfalse,\n\t\t\tnew Range(lineNumber, 1, lineNumber, 1),\n\t\t\tviewEvents.VerticalRevealType.Center,\n\t\t\tScrollType.Smooth\n\t\t);\n\t}\n\n\tpublic setScrollTop(scrollTop: number): void {\n\t\tthis._context.viewModel.viewLayout.setScrollPosition({\n\t\t\tscrollTop: scrollTop\n\t\t}, ScrollType.Immediate);\n\t}\n\n\t//#endregion\n}\n\nclass InnerMinimap extends Disposable {\n\n\tprivate readonly _theme: EditorTheme;\n\tprivate readonly _model: IMinimapModel;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _shadow: FastDomNode<HTMLElement>;\n\tprivate readonly _canvas: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _decorationsCanvas: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _slider: FastDomNode<HTMLElement>;\n\tprivate readonly _sliderHorizontal: FastDomNode<HTMLElement>;\n\tprivate readonly _pointerDownListener: IDisposable;\n\tprivate readonly _sliderPointerMoveMonitor: GlobalPointerMoveMonitor;\n\tprivate readonly _sliderPointerDownListener: IDisposable;\n\tprivate readonly _gestureDisposable: IDisposable;\n\tprivate readonly _sliderTouchStartListener: IDisposable;\n\tprivate readonly _sliderTouchMoveListener: IDisposable;\n\tprivate readonly _sliderTouchEndListener: IDisposable;\n\n\tprivate _lastRenderData: RenderData | null;\n\tprivate _selectionColor: Color | undefined;\n\tprivate _renderDecorations: boolean = false;\n\tprivate _gestureInProgress: boolean = false;\n\tprivate _buffers: MinimapBuffers | null;\n\tprivate _isMouseOverMinimap: boolean = false;\n\tprivate _hideDelayedScheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\ttheme: EditorTheme,\n\t\tmodel: IMinimapModel\n\t) {\n\t\tsuper();\n\n\t\tthis._theme = theme;\n\t\tthis._model = model;\n\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\tthis._selectionColor = this._theme.getColor(minimapSelection);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.Minimap);\n\t\tthis._domNode.setClassName(this._getMinimapDomNodeClassName());\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._shadow = createFastDomNode(document.createElement('div'));\n\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\tthis._domNode.appendChild(this._shadow);\n\n\t\tthis._canvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis._canvas.setPosition('absolute');\n\t\tthis._canvas.setLeft(0);\n\t\tthis._domNode.appendChild(this._canvas);\n\n\t\tthis._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis._decorationsCanvas.setPosition('absolute');\n\t\tthis._decorationsCanvas.setClassName('minimap-decorations-layer');\n\t\tthis._decorationsCanvas.setLeft(0);\n\t\tthis._domNode.appendChild(this._decorationsCanvas);\n\n\t\tthis._slider = createFastDomNode(document.createElement('div'));\n\t\tthis._slider.setPosition('absolute');\n\t\tthis._slider.setClassName('minimap-slider');\n\t\tthis._slider.setLayerHinting(true);\n\t\tthis._slider.setContain('strict');\n\t\tthis._domNode.appendChild(this._slider);\n\n\t\tthis._sliderHorizontal = createFastDomNode(document.createElement('div'));\n\t\tthis._sliderHorizontal.setPosition('absolute');\n\t\tthis._sliderHorizontal.setClassName('minimap-slider-horizontal');\n\t\tthis._slider.appendChild(this._sliderHorizontal);\n\n\t\tthis._applyLayout();\n\n\t\tthis._hideDelayedScheduler = this._register(new RunOnceScheduler(() => this._hideImmediatelyIfMouseIsOutside(), 500));\n\n\t\tthis._register(dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.MOUSE_OVER, () => {\n\t\t\tthis._isMouseOverMinimap = true;\n\t\t}));\n\t\tthis._register(dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.MOUSE_LEAVE, () => {\n\t\t\tthis._isMouseOverMinimap = false;\n\t\t}));\n\n\t\tthis._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tconst isMouse = (e.pointerType === 'mouse');\n\t\t\tconst isLeftClick = (e.button === 0);\n\n\t\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\t\tif (renderMinimap === RenderMinimap.None) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._lastRenderData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._model.options.size !== 'proportional') {\n\t\t\t\tif (isLeftClick && this._lastRenderData) {\n\t\t\t\t\t// pretend the click occurred in the center of the slider\n\t\t\t\t\tconst position = dom.getDomNodePagePosition(this._slider.domNode);\n\t\t\t\t\tconst initialPosY = position.top + position.height / 2;\n\t\t\t\t\tthis._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isLeftClick || !isMouse) {\n\t\t\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\t\t\tconst internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n\t\t\t\tconst lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n\n\t\t\t\tlet lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n\t\t\t\tlineNumber = Math.min(lineNumber, this._model.getLineCount());\n\n\t\t\t\tthis._model.revealLineNumber(lineNumber);\n\t\t\t}\n\t\t});\n\n\t\tthis._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n\n\t\tthis._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (e.button === 0 && this._lastRenderData) {\n\t\t\t\tthis._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n\t\t\t}\n\t\t});\n\n\t\tthis._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n\t\tthis._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this._lastRenderData) {\n\t\t\t\tthis._slider.toggleClassName('active', true);\n\t\t\t\tthis._gestureInProgress = true;\n\t\t\t\tthis.scrollDueToTouchEvent(e);\n\t\t\t}\n\t\t}, { passive: false });\n\n\t\tthis._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this._lastRenderData && this._gestureInProgress) {\n\t\t\t\tthis.scrollDueToTouchEvent(e);\n\t\t\t}\n\t\t}, { passive: false });\n\n\t\tthis._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis._gestureInProgress = false;\n\t\t\tthis._slider.toggleClassName('active', false);\n\t\t});\n\t}\n\n\tprivate _hideSoon() {\n\t\tthis._hideDelayedScheduler.cancel();\n\t\tthis._hideDelayedScheduler.schedule();\n\t}\n\n\tprivate _hideImmediatelyIfMouseIsOutside() {\n\t\tif (this._isMouseOverMinimap) {\n\t\t\tthis._hideSoon();\n\t\t\treturn;\n\t\t}\n\t\tthis._domNode.toggleClassName('active', false);\n\t}\n\n\tprivate _startSliderDragging(e: PointerEvent, initialPosY: number, initialSliderState: MinimapLayout): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tconst initialPosX = e.pageX;\n\n\t\tthis._slider.toggleClassName('active', true);\n\n\t\tconst handlePointerMove = (posy: number, posx: number) => {\n\t\t\tconst minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n\t\t\tconst pointerOrthogonalDelta = Math.min(\n\t\t\t\tMath.abs(posx - initialPosX),\n\t\t\t\tMath.abs(posx - minimapPosition.left),\n\t\t\t\tMath.abs(posx - minimapPosition.left - minimapPosition.width)\n\t\t\t);\n\n\t\t\tif (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n\t\t\t\t// The pointer has wondered away from the scrollbar => reset dragging\n\t\t\t\tthis._model.setScrollTop(initialSliderState.scrollTop);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pointerDelta = posy - initialPosY;\n\t\t\tthis._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n\t\t};\n\n\t\tif (e.pageY !== initialPosY) {\n\t\t\thandlePointerMove(e.pageY, initialPosX);\n\t\t}\n\n\t\tthis._sliderPointerMoveMonitor.startMonitoring(\n\t\t\te.target,\n\t\t\te.pointerId,\n\t\t\te.buttons,\n\t\t\tpointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX),\n\t\t\t() => {\n\t\t\t\tthis._slider.toggleClassName('active', false);\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate scrollDueToTouchEvent(touch: GestureEvent) {\n\t\tconst startY = this._domNode.domNode.getBoundingClientRect().top;\n\t\tconst scrollTop = this._lastRenderData!.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n\t\tthis._model.setScrollTop(scrollTop);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._pointerDownListener.dispose();\n\t\tthis._sliderPointerMoveMonitor.dispose();\n\t\tthis._sliderPointerDownListener.dispose();\n\t\tthis._gestureDisposable.dispose();\n\t\tthis._sliderTouchStartListener.dispose();\n\t\tthis._sliderTouchMoveListener.dispose();\n\t\tthis._sliderTouchEndListener.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _getMinimapDomNodeClassName(): string {\n\t\tconst class_ = ['minimap'];\n\t\tif (this._model.options.showSlider === 'always') {\n\t\t\tclass_.push('slider-always');\n\t\t} else {\n\t\t\tclass_.push('slider-mouseover');\n\t\t}\n\n\t\tif (this._model.options.autohide === 'mouseover') {\n\t\t\tclass_.push('minimap-autohide-mouseover');\n\t\t} else if (this._model.options.autohide === 'scroll') {\n\t\t\tclass_.push('minimap-autohide-scroll');\n\t\t}\n\n\t\treturn class_.join(' ');\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _applyLayout(): void {\n\t\tthis._domNode.setLeft(this._model.options.minimapLeft);\n\t\tthis._domNode.setWidth(this._model.options.minimapWidth);\n\t\tthis._domNode.setHeight(this._model.options.minimapHeight);\n\t\tthis._shadow.setHeight(this._model.options.minimapHeight);\n\n\t\tthis._canvas.setWidth(this._model.options.canvasOuterWidth);\n\t\tthis._canvas.setHeight(this._model.options.canvasOuterHeight);\n\t\tthis._canvas.domNode.width = this._model.options.canvasInnerWidth;\n\t\tthis._canvas.domNode.height = this._model.options.canvasInnerHeight;\n\n\t\tthis._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n\t\tthis._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n\t\tthis._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n\t\tthis._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n\n\t\tthis._slider.setWidth(this._model.options.minimapWidth);\n\t}\n\n\tprivate _getBuffer(): ImageData | null {\n\t\tif (!this._buffers) {\n\t\t\tif (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n\t\t\t\tthis._buffers = new MinimapBuffers(\n\t\t\t\t\tthis._canvas.domNode.getContext('2d')!,\n\t\t\t\t\tthis._model.options.canvasInnerWidth,\n\t\t\t\t\tthis._model.options.canvasInnerHeight,\n\t\t\t\t\tthis._model.options.backgroundColor\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this._buffers ? this._buffers.getBuffer() : null;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic onDidChangeOptions(): void {\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\tthis._applyLayout();\n\t\tthis._domNode.setClassName(this._getMinimapDomNodeClassName());\n\t}\n\tpublic onSelectionChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onDecorationsChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onFlushed(): boolean {\n\t\tthis._lastRenderData = null;\n\t\treturn true;\n\t}\n\tpublic onLinesChanged(changeFromLineNumber: number, changeCount: number): boolean {\n\t\tif (this._lastRenderData) {\n\t\t\treturn this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number): boolean {\n\t\tthis._lastRenderData?.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t\treturn true;\n\t}\n\tpublic onLinesInserted(insertFromLineNumber: number, insertToLineNumber: number): boolean {\n\t\tthis._lastRenderData?.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t\treturn true;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (this._model.options.autohide === 'scroll' && (e.scrollTopChanged || e.scrollHeightChanged)) {\n\t\t\tthis._domNode.toggleClassName('active', true);\n\t\t\tthis._hideSoon();\n\t\t}\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onThemeChanged(): boolean {\n\t\tthis._selectionColor = this._theme.getColor(minimapSelection);\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onTokensChanged(ranges: { fromLineNumber: number; toLineNumber: number }[]): boolean {\n\t\tif (this._lastRenderData) {\n\t\t\treturn this._lastRenderData.onTokensChanged(ranges);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onTokensColorsChanged(): boolean {\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\treturn true;\n\t}\n\tpublic onZonesChanged(): boolean {\n\t\tthis._lastRenderData = null;\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic render(renderingCtx: IMinimapRenderingContext): void {\n\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\tif (renderMinimap === RenderMinimap.None) {\n\t\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\t\tthis._sliderHorizontal.setWidth(0);\n\t\t\tthis._sliderHorizontal.setHeight(0);\n\t\t\treturn;\n\t\t}\n\t\tif (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n\t\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\t} else {\n\t\t\tthis._shadow.setClassName('minimap-shadow-visible');\n\t\t}\n\n\t\tconst layout = MinimapLayout.create(\n\t\t\tthis._model.options,\n\t\t\trenderingCtx.viewportStartLineNumber,\n\t\t\trenderingCtx.viewportEndLineNumber,\n\t\t\trenderingCtx.viewportStartLineNumberVerticalOffset,\n\t\t\trenderingCtx.viewportHeight,\n\t\t\trenderingCtx.viewportContainsWhitespaceGaps,\n\t\t\tthis._model.getLineCount(),\n\t\t\tthis._model.getRealLineCount(),\n\t\t\trenderingCtx.scrollTop,\n\t\t\trenderingCtx.scrollHeight,\n\t\t\tthis._lastRenderData ? this._lastRenderData.renderedLayout : null\n\t\t);\n\t\tthis._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n\t\tthis._slider.setTop(layout.sliderTop);\n\t\tthis._slider.setHeight(layout.sliderHeight);\n\n\t\t// Compute horizontal slider coordinates\n\t\tthis._sliderHorizontal.setLeft(0);\n\t\tthis._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n\t\tthis._sliderHorizontal.setTop(0);\n\t\tthis._sliderHorizontal.setHeight(layout.sliderHeight);\n\n\t\tthis.renderDecorations(layout);\n\t\tthis._lastRenderData = this.renderLines(layout);\n\t}\n\n\tprivate renderDecorations(layout: MinimapLayout) {\n\t\tif (this._renderDecorations) {\n\t\t\tthis._renderDecorations = false;\n\t\t\tconst selections = this._model.getSelections();\n\t\t\tselections.sort(Range.compareRangesUsingStarts);\n\n\t\t\tconst decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n\t\t\tdecorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n\n\t\t\tconst { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n\t\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\t\tconst minimapCharWidth = this._model.options.minimapCharWidth;\n\t\t\tconst tabSize = this._model.getOptions().tabSize;\n\t\t\tconst canvasContext = this._decorationsCanvas.domNode.getContext('2d')!;\n\n\t\t\tcanvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n\n\t\t\t// We first need to render line highlights and then render decorations on top of those.\n\t\t\t// But we need to pick a single color for each line, and use that as a line highlight.\n\t\t\t// This needs to be the color of the decoration with the highest `zIndex`, but priority\n\t\t\t// is given to the selection.\n\n\t\t\tconst highlightedLines = new ContiguousLineMap<boolean>(layout.startLineNumber, layout.endLineNumber, false);\n\t\t\tthis._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n\t\t\tthis._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n\n\t\t\tconst lineOffsetMap = new ContiguousLineMap<number[] | null>(layout.startLineNumber, layout.endLineNumber, null);\n\t\t\tthis._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n\t\t\tthis._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n\t\t\tthis._renderSectionHeaders(layout);\n\t\t}\n\t}\n\n\tprivate _renderSelectionLineHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tselections: Selection[],\n\t\thighlightedLines: ContiguousLineMap<boolean>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number\n\t): void {\n\t\tif (!this._selectionColor || this._selectionColor.isTransparent()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n\n\t\tlet y1 = 0;\n\t\tlet y2 = 0;\n\n\t\tfor (const selection of selections) {\n\t\t\tconst intersection = layout.intersectWithViewport(selection);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\thighlightedLines.set(line, true);\n\t\t\t}\n\n\t\t\tconst yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n\t\t\tconst yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n\n\t\t\tif (y2 >= yy1) {\n\t\t\t\t// merge into previous\n\t\t\t\ty2 = yy2;\n\t\t\t} else {\n\t\t\t\tif (y2 > y1) {\n\t\t\t\t\t// flush\n\t\t\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n\t\t\t\t}\n\t\t\t\ty1 = yy1;\n\t\t\t\ty2 = yy2;\n\t\t\t}\n\t\t}\n\n\t\tif (y2 > y1) {\n\t\t\t// flush\n\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n\t\t}\n\t}\n\n\tprivate _renderDecorationsLineHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tdecorations: ViewModelDecoration[],\n\t\thighlightedLines: ContiguousLineMap<boolean>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number\n\t): void {\n\n\t\tconst highlightColors = new Map<string, string>();\n\n\t\t// Loop backwards to hit first decorations with higher `zIndex`\n\t\tfor (let i = decorations.length - 1; i >= 0; i--) {\n\t\t\tconst decoration = decorations[i];\n\n\t\t\tconst minimapOptions = <ModelDecorationMinimapOptions | null | undefined>decoration.options.minimap;\n\t\t\tif (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst intersection = layout.intersectWithViewport(decoration.range);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tconst decorationColor = minimapOptions.getColor(this._theme.value);\n\t\t\tif (!decorationColor || decorationColor.isTransparent()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet highlightColor = highlightColors.get(decorationColor.toString());\n\t\t\tif (!highlightColor) {\n\t\t\t\thighlightColor = decorationColor.transparent(0.5).toString();\n\t\t\t\thighlightColors.set(decorationColor.toString(), highlightColor);\n\t\t\t}\n\n\t\t\tcanvasContext.fillStyle = highlightColor;\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tif (highlightedLines.has(line)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\thighlightedLines.set(line, true);\n\t\t\t\tconst y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n\t\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderSelectionsHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tselections: Selection[],\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlayout: MinimapLayout,\n\t\tlineHeight: number,\n\t\ttabSize: number,\n\t\tcharacterWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\tif (!this._selectionColor || this._selectionColor.isTransparent()) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const selection of selections) {\n\t\t\tconst intersection = layout.intersectWithViewport(selection);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tthis.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderDecorationsHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tdecorations: ViewModelDecoration[],\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number,\n\t\ttabSize: number,\n\t\tcharacterWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\t// Loop forwards to hit first decorations with lower `zIndex`\n\t\tfor (const decoration of decorations) {\n\n\t\t\tconst minimapOptions = <ModelDecorationMinimapOptions | null | undefined>decoration.options.minimap;\n\t\t\tif (!minimapOptions) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst intersection = layout.intersectWithViewport(decoration.range);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tconst decorationColor = minimapOptions.getColor(this._theme.value);\n\t\t\tif (!decorationColor || decorationColor.isTransparent()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tswitch (minimapOptions.position) {\n\n\t\t\t\t\tcase MinimapPosition.Inline:\n\t\t\t\t\t\tthis.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase MinimapPosition.Gutter: {\n\t\t\t\t\t\tconst y = layout.getYForLineNumber(line, minimapLineHeight);\n\t\t\t\t\t\tconst x = 2;\n\t\t\t\t\t\tthis.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderDecorationOnLine(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tdecorationRange: Range,\n\t\tdecorationColor: Color | undefined,\n\t\tlayout: MinimapLayout,\n\t\tlineNumber: number,\n\t\theight: number,\n\t\tminimapLineHeight: number,\n\t\ttabSize: number,\n\t\tcharWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\tconst y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n\n\t\t// Skip rendering the line if it's vertically outside our viewport\n\t\tif (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { startLineNumber, endLineNumber } = decorationRange;\n\t\tconst startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n\t\tconst endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n\n\t\tconst x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n\t\tconst x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n\n\t\tthis.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n\t}\n\n\tprivate getXOffsetForPosition(\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlineNumber: number,\n\t\tcolumn: number,\n\t\ttabSize: number,\n\t\tcharWidth: number,\n\t\tcanvasInnerWidth: number\n\t): number {\n\t\tif (column === 1) {\n\t\t\treturn MINIMAP_GUTTER_WIDTH;\n\t\t}\n\n\t\tconst minimumXOffset = (column - 1) * charWidth;\n\t\tif (minimumXOffset >= canvasInnerWidth) {\n\t\t\t// there is no need to look at actual characters,\n\t\t\t// as this column is certainly after the minimap width\n\t\t\treturn canvasInnerWidth;\n\t\t}\n\n\t\t// Cache line offset data so that it is only read once per line\n\t\tlet lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n\t\tif (!lineIndexToXOffset) {\n\t\t\tconst lineData = this._model.getLineContent(lineNumber);\n\t\t\tlineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n\t\t\tlet prevx = MINIMAP_GUTTER_WIDTH;\n\t\t\tfor (let i = 1; i < lineData.length + 1; i++) {\n\t\t\t\tconst charCode = lineData.charCodeAt(i - 1);\n\t\t\t\tconst dx = charCode === CharCode.Tab\n\t\t\t\t\t? tabSize * charWidth\n\t\t\t\t\t: strings.isFullWidthCharacter(charCode)\n\t\t\t\t\t\t? 2 * charWidth\n\t\t\t\t\t\t: charWidth;\n\n\t\t\t\tconst x = prevx + dx;\n\t\t\t\tif (x >= canvasInnerWidth) {\n\t\t\t\t\t// no need to keep on going, as we've hit the canvas width\n\t\t\t\t\tlineIndexToXOffset[i] = canvasInnerWidth;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlineIndexToXOffset[i] = x;\n\t\t\t\tprevx = x;\n\t\t\t}\n\n\t\t\tlineOffsetMap.set(lineNumber, lineIndexToXOffset);\n\t\t}\n\n\t\tif (column - 1 < lineIndexToXOffset.length) {\n\t\t\treturn lineIndexToXOffset[column - 1];\n\t\t}\n\t\t// goes over the canvas width\n\t\treturn canvasInnerWidth;\n\t}\n\n\tprivate renderDecoration(canvasContext: CanvasRenderingContext2D, decorationColor: Color | undefined, x: number, y: number, width: number, height: number) {\n\t\tcanvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n\t\tcanvasContext.fillRect(x, y, width, height);\n\t}\n\n\tprivate _renderSectionHeaders(layout: MinimapLayout) {\n\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\tconst sectionHeaderFontSize = this._model.options.sectionHeaderFontSize;\n\t\tconst sectionHeaderLetterSpacing = this._model.options.sectionHeaderLetterSpacing;\n\t\tconst backgroundFillHeight = sectionHeaderFontSize * 1.5;\n\t\tconst { canvasInnerWidth } = this._model.options;\n\n\t\tconst backgroundColor = this._model.options.backgroundColor;\n\t\tconst backgroundFill = `rgb(${backgroundColor.r} ${backgroundColor.g} ${backgroundColor.b} / .7)`;\n\t\tconst foregroundColor = this._model.options.sectionHeaderFontColor;\n\t\tconst foregroundFill = `rgb(${foregroundColor.r} ${foregroundColor.g} ${foregroundColor.b})`;\n\t\tconst separatorStroke = foregroundFill;\n\n\t\tconst canvasContext = this._decorationsCanvas.domNode.getContext('2d')!;\n\t\tcanvasContext.letterSpacing = sectionHeaderLetterSpacing + 'px';\n\t\tcanvasContext.font = '500 ' + sectionHeaderFontSize + 'px ' + this._model.options.sectionHeaderFontFamily;\n\t\tcanvasContext.strokeStyle = separatorStroke;\n\t\tcanvasContext.lineWidth = 0.4;\n\n\t\tconst decorations = this._model.getSectionHeaderDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n\t\tdecorations.sort((a, b) => a.range.startLineNumber - b.range.startLineNumber);\n\n\t\tconst fitWidth = InnerMinimap._fitSectionHeader.bind(null, canvasContext,\n\t\t\tcanvasInnerWidth - MINIMAP_GUTTER_WIDTH);\n\n\t\tfor (const decoration of decorations) {\n\t\t\tconst y = layout.getYForLineNumber(decoration.range.startLineNumber, minimapLineHeight) + sectionHeaderFontSize;\n\t\t\tconst backgroundFillY = y - sectionHeaderFontSize;\n\t\t\tconst separatorY = backgroundFillY + 2;\n\t\t\tconst headerText = this._model.getSectionHeaderText(decoration, fitWidth);\n\n\t\t\tInnerMinimap._renderSectionLabel(\n\t\t\t\tcanvasContext,\n\t\t\t\theaderText,\n\t\t\t\tdecoration.options.minimap?.sectionHeaderStyle === MinimapSectionHeaderStyle.Underlined,\n\t\t\t\tbackgroundFill,\n\t\t\t\tforegroundFill,\n\t\t\t\tcanvasInnerWidth,\n\t\t\t\tbackgroundFillY,\n\t\t\t\tbackgroundFillHeight,\n\t\t\t\ty,\n\t\t\t\tseparatorY);\n\t\t}\n\t}\n\n\tprivate static _fitSectionHeader(\n\t\ttarget: CanvasRenderingContext2D,\n\t\tmaxWidth: number,\n\t\theaderText: string,\n\t): string {\n\t\tif (!headerText) {\n\t\t\treturn headerText;\n\t\t}\n\n\t\tconst ellipsis = '…';\n\t\tconst width = target.measureText(headerText).width;\n\t\tconst ellipsisWidth = target.measureText(ellipsis).width;\n\n\t\tif (width <= maxWidth || width <= ellipsisWidth) {\n\t\t\treturn headerText;\n\t\t}\n\n\t\tconst len = headerText.length;\n\t\tconst averageCharWidth = width / headerText.length;\n\t\tconst maxCharCount = Math.floor((maxWidth - ellipsisWidth) / averageCharWidth) - 1;\n\n\t\t// Find a halfway point that isn't after whitespace\n\t\tlet halfCharCount = Math.ceil(maxCharCount / 2);\n\t\twhile (halfCharCount > 0 && /\\s/.test(headerText[halfCharCount - 1])) {\n\t\t\t--halfCharCount;\n\t\t}\n\n\t\t// Split with ellipsis\n\t\treturn headerText.substring(0, halfCharCount)\n\t\t\t+ ellipsis + headerText.substring(len - (maxCharCount - halfCharCount));\n\t}\n\n\tprivate static _renderSectionLabel(\n\t\ttarget: CanvasRenderingContext2D,\n\t\theaderText: string | null,\n\t\thasSeparatorLine: boolean,\n\t\tbackgroundFill: string,\n\t\tforegroundFill: string,\n\t\tminimapWidth: number,\n\t\tbackgroundFillY: number,\n\t\tbackgroundFillHeight: number,\n\t\ttextY: number,\n\t\tseparatorY: number\n\t): void {\n\t\tif (headerText) {\n\t\t\ttarget.fillStyle = backgroundFill;\n\t\t\ttarget.fillRect(0, backgroundFillY, minimapWidth, backgroundFillHeight);\n\n\t\t\ttarget.fillStyle = foregroundFill;\n\t\t\ttarget.fillText(headerText, MINIMAP_GUTTER_WIDTH, textY);\n\t\t}\n\n\t\tif (hasSeparatorLine) {\n\t\t\ttarget.beginPath();\n\t\t\ttarget.moveTo(0, separatorY);\n\t\t\ttarget.lineTo(minimapWidth, separatorY);\n\t\t\ttarget.closePath();\n\t\t\ttarget.stroke();\n\t\t}\n\t}\n\n\tprivate renderLines(layout: MinimapLayout): RenderData | null {\n\t\tconst startLineNumber = layout.startLineNumber;\n\t\tconst endLineNumber = layout.endLineNumber;\n\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\n\t\t// Check if nothing changed w.r.t. lines from last frame\n\t\tif (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n\t\t\tconst _lastData = this._lastRenderData._get();\n\t\t\t// Nice!! Nothing changed from last frame\n\t\t\treturn new RenderData(layout, _lastData.imageData, _lastData.lines);\n\t\t}\n\n\t\t// Oh well!! We need to repaint some lines...\n\n\t\tconst imageData = this._getBuffer();\n\t\tif (!imageData) {\n\t\t\t// 0 width or 0 height canvas, nothing to do\n\t\t\treturn null;\n\t\t}\n\n\t\t// Render untouched lines by using last rendered data.\n\t\tconst [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(\n\t\t\timageData,\n\t\t\tlayout.topPaddingLineCount,\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tminimapLineHeight,\n\t\t\tthis._lastRenderData\n\t\t);\n\n\t\t// Fetch rendering info from view model for rest of lines that need rendering.\n\t\tconst lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n\t\tconst tabSize = this._model.getOptions().tabSize;\n\t\tconst defaultBackground = this._model.options.defaultBackgroundColor;\n\t\tconst background = this._model.options.backgroundColor;\n\t\tconst foregroundAlpha = this._model.options.foregroundAlpha;\n\t\tconst tokensColorTracker = this._model.tokensColorTracker;\n\t\tconst useLighterFont = tokensColorTracker.backgroundIsLight();\n\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\tconst charRenderer = this._model.options.charRenderer();\n\t\tconst fontScale = this._model.options.fontScale;\n\t\tconst minimapCharWidth = this._model.options.minimapCharWidth;\n\n\t\tconst baseCharHeight = (renderMinimap === RenderMinimap.Text ? Constants.BASE_CHAR_HEIGHT : Constants.BASE_CHAR_HEIGHT + 1);\n\t\tconst renderMinimapLineHeight = baseCharHeight * fontScale;\n\t\tconst innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n\n\t\t// Render the rest of lines\n\t\tconst backgroundA = background.a / 255;\n\t\tconst renderBackground = new RGBA8(\n\t\t\tMath.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r),\n\t\t\tMath.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g),\n\t\t\tMath.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b),\n\t\t\t255\n\t\t);\n\t\tlet dy = layout.topPaddingLineCount * minimapLineHeight;\n\t\tconst renderedLines: MinimapLine[] = [];\n\t\tfor (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n\t\t\tif (needed[lineIndex]) {\n\t\t\t\tInnerMinimap._renderLine(\n\t\t\t\t\timageData,\n\t\t\t\t\trenderBackground,\n\t\t\t\t\tbackground.a,\n\t\t\t\t\tuseLighterFont,\n\t\t\t\t\trenderMinimap,\n\t\t\t\t\tminimapCharWidth,\n\t\t\t\t\ttokensColorTracker,\n\t\t\t\t\tforegroundAlpha,\n\t\t\t\t\tcharRenderer,\n\t\t\t\t\tdy,\n\t\t\t\t\tinnerLinePadding,\n\t\t\t\t\ttabSize,\n\t\t\t\t\tlineInfo[lineIndex]!,\n\t\t\t\t\tfontScale,\n\t\t\t\t\tminimapLineHeight\n\t\t\t\t);\n\t\t\t}\n\t\t\trenderedLines[lineIndex] = new MinimapLine(dy);\n\t\t\tdy += minimapLineHeight;\n\t\t}\n\n\t\tconst dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n\t\tconst dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n\t\tconst dirtyHeight = dirtyY2 - dirtyY1;\n\n\t\t// Finally, paint to the canvas\n\t\tconst ctx = this._canvas.domNode.getContext('2d')!;\n\t\tctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n\n\t\t// Save rendered data for reuse on next frame if possible\n\t\treturn new RenderData(\n\t\t\tlayout,\n\t\t\timageData,\n\t\t\trenderedLines\n\t\t);\n\t}\n\n\tprivate static _renderUntouchedLines(\n\t\ttarget: ImageData,\n\t\ttopPaddingLineCount: number,\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tminimapLineHeight: number,\n\t\tlastRenderData: RenderData | null,\n\t): [number, number, boolean[]] {\n\n\t\tconst needed: boolean[] = [];\n\t\tif (!lastRenderData) {\n\t\t\tfor (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n\t\t\t\tneeded[i] = true;\n\t\t\t}\n\t\t\treturn [-1, -1, needed];\n\t\t}\n\n\t\tconst _lastData = lastRenderData._get();\n\t\tconst lastTargetData = _lastData.imageData.data;\n\t\tconst lastStartLineNumber = _lastData.rendLineNumberStart;\n\t\tconst lastLines = _lastData.lines;\n\t\tconst lastLinesLength = lastLines.length;\n\t\tconst WIDTH = target.width;\n\t\tconst targetData = target.data;\n\n\t\tconst maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n\t\tlet dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n\t\tlet dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n\n\t\tlet copySourceStart = -1;\n\t\tlet copySourceEnd = -1;\n\t\tlet copyDestStart = -1;\n\t\tlet copyDestEnd = -1;\n\n\t\tlet dest_dy = topPaddingLineCount * minimapLineHeight;\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\t\tconst lastLineIndex = lineNumber - lastStartLineNumber;\n\t\t\tconst source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n\n\t\t\tif (source_dy === -1) {\n\t\t\t\tneeded[lineIndex] = true;\n\t\t\t\tdest_dy += minimapLineHeight;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst sourceStart = source_dy * WIDTH * 4;\n\t\t\tconst sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n\t\t\tconst destStart = dest_dy * WIDTH * 4;\n\t\t\tconst destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n\n\t\t\tif (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n\t\t\t\t// contiguous zone => extend copy request\n\t\t\t\tcopySourceEnd = sourceEnd;\n\t\t\t\tcopyDestEnd = destEnd;\n\t\t\t} else {\n\t\t\t\tif (copySourceStart !== -1) {\n\t\t\t\t\t// flush existing copy request\n\t\t\t\t\ttargetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\t\t\t\t\tif (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n\t\t\t\t\t\tdirtyPixel1 = copySourceEnd;\n\t\t\t\t\t}\n\t\t\t\t\tif (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n\t\t\t\t\t\tdirtyPixel2 = copySourceStart;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcopySourceStart = sourceStart;\n\t\t\t\tcopySourceEnd = sourceEnd;\n\t\t\t\tcopyDestStart = destStart;\n\t\t\t\tcopyDestEnd = destEnd;\n\t\t\t}\n\n\t\t\tneeded[lineIndex] = false;\n\t\t\tdest_dy += minimapLineHeight;\n\t\t}\n\n\t\tif (copySourceStart !== -1) {\n\t\t\t// flush existing copy request\n\t\t\ttargetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\t\t\tif (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n\t\t\t\tdirtyPixel1 = copySourceEnd;\n\t\t\t}\n\t\t\tif (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n\t\t\t\tdirtyPixel2 = copySourceStart;\n\t\t\t}\n\t\t}\n\n\t\tconst dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n\t\tconst dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n\n\t\treturn [dirtyY1, dirtyY2, needed];\n\t}\n\n\tprivate static _renderLine(\n\t\ttarget: ImageData,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tuseLighterFont: boolean,\n\t\trenderMinimap: RenderMinimap,\n\t\tcharWidth: number,\n\t\tcolorTracker: MinimapTokensColorTracker,\n\t\tforegroundAlpha: number,\n\t\tminimapCharRenderer: MinimapCharRenderer,\n\t\tdy: number,\n\t\tinnerLinePadding: number,\n\t\ttabSize: number,\n\t\tlineData: ViewLineData,\n\t\tfontScale: number,\n\t\tminimapLineHeight: number\n\t): void {\n\t\tconst content = lineData.content;\n\t\tconst tokens = lineData.tokens;\n\t\tconst maxDx = target.width - charWidth;\n\t\tconst force1pxHeight = (minimapLineHeight === 1);\n\n\t\tlet dx = MINIMAP_GUTTER_WIDTH;\n\t\tlet charIndex = 0;\n\t\tlet tabsCharDelta = 0;\n\n\t\tfor (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n\t\t\tconst tokenEndIndex = tokens.getEndOffset(tokenIndex);\n\t\t\tconst tokenColorId = tokens.getForeground(tokenIndex);\n\t\t\tconst tokenColor = colorTracker.getColor(tokenColorId);\n\n\t\t\tfor (; charIndex < tokenEndIndex; charIndex++) {\n\t\t\t\tif (dx > maxDx) {\n\t\t\t\t\t// hit edge of minimap\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst charCode = content.charCodeAt(charIndex);\n\n\t\t\t\tif (charCode === CharCode.Tab) {\n\t\t\t\t\tconst insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n\t\t\t\t\ttabsCharDelta += insertSpacesCount - 1;\n\t\t\t\t\t// No need to render anything since tab is invisible\n\t\t\t\t\tdx += insertSpacesCount * charWidth;\n\t\t\t\t} else if (charCode === CharCode.Space) {\n\t\t\t\t\t// No need to render anything since space is invisible\n\t\t\t\t\tdx += charWidth;\n\t\t\t\t} else {\n\t\t\t\t\t// Render twice for a full width character\n\t\t\t\t\tconst count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tif (renderMinimap === RenderMinimap.Blocks) {\n\t\t\t\t\t\t\tminimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n\t\t\t\t\t\t} else { // RenderMinimap.Text\n\t\t\t\t\t\t\tminimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdx += charWidth;\n\n\t\t\t\t\t\tif (dx > maxDx) {\n\t\t\t\t\t\t\t// hit edge of minimap\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ContiguousLineMap<T> {\n\n\tprivate readonly _startLineNumber: number;\n\tprivate readonly _endLineNumber: number;\n\tprivate readonly _defaultValue: T;\n\tprivate readonly _values: T[];\n\n\tconstructor(startLineNumber: number, endLineNumber: number, defaultValue: T) {\n\t\tthis._startLineNumber = startLineNumber;\n\t\tthis._endLineNumber = endLineNumber;\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._values = [];\n\t\tfor (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n\t\t\tthis._values[i] = defaultValue;\n\t\t}\n\t}\n\n\tpublic has(lineNumber: number): boolean {\n\t\treturn (this.get(lineNumber) !== this._defaultValue);\n\t}\n\n\tpublic set(lineNumber: number, value: T): void {\n\t\tif (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n\t\t\treturn;\n\t\t}\n\t\tthis._values[lineNumber - this._startLineNumber] = value;\n\t}\n\n\tpublic get(lineNumber: number): T {\n\t\tif (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n\t\t\treturn this._defaultValue;\n\t\t}\n\t\treturn this._values[lineNumber - this._startLineNumber];\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './minimap.css';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../../../base/browser/globalPointerMoveMonitor.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { IDisposable, Disposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { ILine, RenderedLinesCollection } from '../../view/viewLayer.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { RenderMinimap, EditorOption, MINIMAP_GUTTER_WIDTH, EditorLayoutInfoComputer } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RGBA8 } from '../../../common/core/misc/rgba.js';\nimport { ScrollType } from '../../../common/editorCommon.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { ColorId } from '../../../common/encodedTokenAttributes.js';\nimport { MinimapCharRenderer } from './minimapCharRenderer.js';\nimport { Constants } from './minimapCharSheet.js';\nimport { MinimapTokensColorTracker } from '../../../common/viewModel/minimapTokensColorTracker.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { EditorTheme } from '../../../common/editorTheme.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewLineData } from '../../../common/viewModel.js';\nimport { minimapSelection, minimapBackground, minimapForegroundOpacity, editorForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ModelDecorationMinimapOptions } from '../../../common/model/textModel.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { GestureEvent, EventType, Gesture } from '../../../../base/browser/touch.js';\nimport { MinimapCharRendererFactory } from './minimapCharRendererFactory.js';\nimport { MinimapPosition, MinimapSectionHeaderStyle, TextModelResolvedOptions } from '../../../common/model.js';\nimport { createSingleCallFunction } from '../../../../base/common/functional.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { DEFAULT_FONT_FAMILY } from '../../../../base/browser/fonts.js';\nimport { ViewModelDecoration } from '../../../common/viewModel/viewModelDecoration.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\n\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\n\nconst GUTTER_DECORATION_WIDTH = 2;\n\nclass MinimapOptions {\n\n\tpublic readonly renderMinimap: RenderMinimap;\n\tpublic readonly size: 'proportional' | 'fill' | 'fit';\n\tpublic readonly minimapHeightIsEditorHeight: boolean;\n\tpublic readonly scrollBeyondLastLine: boolean;\n\tpublic readonly paddingTop: number;\n\tpublic readonly paddingBottom: number;\n\tpublic readonly showSlider: 'always' | 'mouseover';\n\tpublic readonly autohide: 'none' | 'mouseover' | 'scroll';\n\tpublic readonly pixelRatio: number;\n\tpublic readonly typicalHalfwidthCharacterWidth: number;\n\tpublic readonly lineHeight: number;\n\t/**\n\t * container dom node left position (in CSS px)\n\t */\n\tpublic readonly minimapLeft: number;\n\t/**\n\t * container dom node width (in CSS px)\n\t */\n\tpublic readonly minimapWidth: number;\n\t/**\n\t * container dom node height (in CSS px)\n\t */\n\tpublic readonly minimapHeight: number;\n\t/**\n\t * canvas backing store width (in device px)\n\t */\n\tpublic readonly canvasInnerWidth: number;\n\t/**\n\t * canvas backing store height (in device px)\n\t */\n\tpublic readonly canvasInnerHeight: number;\n\t/**\n\t * canvas width (in CSS px)\n\t */\n\tpublic readonly canvasOuterWidth: number;\n\t/**\n\t * canvas height (in CSS px)\n\t */\n\tpublic readonly canvasOuterHeight: number;\n\n\tpublic readonly isSampling: boolean;\n\tpublic readonly editorHeight: number;\n\tpublic readonly fontScale: number;\n\tpublic readonly minimapLineHeight: number;\n\tpublic readonly minimapCharWidth: number;\n\tpublic readonly sectionHeaderFontFamily: string;\n\tpublic readonly sectionHeaderFontSize: number;\n\t/**\n\t * Space in between the characters of the section header (in CSS px)\n\t */\n\tpublic readonly sectionHeaderLetterSpacing: number;\n\tpublic readonly sectionHeaderFontColor: RGBA8;\n\n\tpublic readonly charRenderer: () => MinimapCharRenderer;\n\tpublic readonly defaultBackgroundColor: RGBA8;\n\tpublic readonly backgroundColor: RGBA8;\n\t/**\n\t * foreground alpha: integer in [0-255]\n\t */\n\tpublic readonly foregroundAlpha: number;\n\n\tconstructor(configuration: IEditorConfiguration, theme: EditorTheme, tokensColorTracker: MinimapTokensColorTracker) {\n\t\tconst options = configuration.options;\n\t\tconst pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst minimapLayout = layoutInfo.minimap;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\n\t\tthis.renderMinimap = minimapLayout.renderMinimap;\n\t\tthis.size = minimapOpts.size;\n\t\tthis.minimapHeightIsEditorHeight = minimapLayout.minimapHeightIsEditorHeight;\n\t\tthis.scrollBeyondLastLine = options.get(EditorOption.scrollBeyondLastLine);\n\t\tthis.paddingTop = options.get(EditorOption.padding).top;\n\t\tthis.paddingBottom = options.get(EditorOption.padding).bottom;\n\t\tthis.showSlider = minimapOpts.showSlider;\n\t\tthis.autohide = minimapOpts.autohide;\n\t\tthis.pixelRatio = pixelRatio;\n\t\tthis.typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.minimapLeft = minimapLayout.minimapLeft;\n\t\tthis.minimapWidth = minimapLayout.minimapWidth;\n\t\tthis.minimapHeight = layoutInfo.height;\n\n\t\tthis.canvasInnerWidth = minimapLayout.minimapCanvasInnerWidth;\n\t\tthis.canvasInnerHeight = minimapLayout.minimapCanvasInnerHeight;\n\t\tthis.canvasOuterWidth = minimapLayout.minimapCanvasOuterWidth;\n\t\tthis.canvasOuterHeight = minimapLayout.minimapCanvasOuterHeight;\n\n\t\tthis.isSampling = minimapLayout.minimapIsSampling;\n\t\tthis.editorHeight = layoutInfo.height;\n\t\tthis.fontScale = minimapLayout.minimapScale;\n\t\tthis.minimapLineHeight = minimapLayout.minimapLineHeight;\n\t\tthis.minimapCharWidth = Constants.BASE_CHAR_WIDTH * this.fontScale;\n\t\tthis.sectionHeaderFontFamily = DEFAULT_FONT_FAMILY;\n\t\tthis.sectionHeaderFontSize = minimapOpts.sectionHeaderFontSize * pixelRatio;\n\t\tthis.sectionHeaderLetterSpacing = minimapOpts.sectionHeaderLetterSpacing; // intentionally not multiplying by pixelRatio\n\t\tthis.sectionHeaderFontColor = MinimapOptions._getSectionHeaderColor(theme, tokensColorTracker.getColor(ColorId.DefaultForeground));\n\n\t\tthis.charRenderer = createSingleCallFunction(() => MinimapCharRendererFactory.create(this.fontScale, fontInfo.fontFamily));\n\t\tthis.defaultBackgroundColor = tokensColorTracker.getColor(ColorId.DefaultBackground);\n\t\tthis.backgroundColor = MinimapOptions._getMinimapBackground(theme, this.defaultBackgroundColor);\n\t\tthis.foregroundAlpha = MinimapOptions._getMinimapForegroundOpacity(theme);\n\t}\n\n\tprivate static _getMinimapBackground(theme: EditorTheme, defaultBackgroundColor: RGBA8): RGBA8 {\n\t\tconst themeColor = theme.getColor(minimapBackground);\n\t\tif (themeColor) {\n\t\t\treturn new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn defaultBackgroundColor;\n\t}\n\n\tprivate static _getMinimapForegroundOpacity(theme: EditorTheme): number {\n\t\tconst themeColor = theme.getColor(minimapForegroundOpacity);\n\t\tif (themeColor) {\n\t\t\treturn RGBA8._clamp(Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn 255;\n\t}\n\n\tprivate static _getSectionHeaderColor(theme: EditorTheme, defaultForegroundColor: RGBA8): RGBA8 {\n\t\tconst themeColor = theme.getColor(editorForeground);\n\t\tif (themeColor) {\n\t\t\treturn new RGBA8(themeColor.rgba.r, themeColor.rgba.g, themeColor.rgba.b, Math.round(255 * themeColor.rgba.a));\n\t\t}\n\t\treturn defaultForegroundColor;\n\t}\n\n\tpublic equals(other: MinimapOptions): boolean {\n\t\treturn (this.renderMinimap === other.renderMinimap\n\t\t\t&& this.size === other.size\n\t\t\t&& this.minimapHeightIsEditorHeight === other.minimapHeightIsEditorHeight\n\t\t\t&& this.scrollBeyondLastLine === other.scrollBeyondLastLine\n\t\t\t&& this.paddingTop === other.paddingTop\n\t\t\t&& this.paddingBottom === other.paddingBottom\n\t\t\t&& this.showSlider === other.showSlider\n\t\t\t&& this.autohide === other.autohide\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.typicalHalfwidthCharacterWidth === other.typicalHalfwidthCharacterWidth\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.minimapLeft === other.minimapLeft\n\t\t\t&& this.minimapWidth === other.minimapWidth\n\t\t\t&& this.minimapHeight === other.minimapHeight\n\t\t\t&& this.canvasInnerWidth === other.canvasInnerWidth\n\t\t\t&& this.canvasInnerHeight === other.canvasInnerHeight\n\t\t\t&& this.canvasOuterWidth === other.canvasOuterWidth\n\t\t\t&& this.canvasOuterHeight === other.canvasOuterHeight\n\t\t\t&& this.isSampling === other.isSampling\n\t\t\t&& this.editorHeight === other.editorHeight\n\t\t\t&& this.fontScale === other.fontScale\n\t\t\t&& this.minimapLineHeight === other.minimapLineHeight\n\t\t\t&& this.minimapCharWidth === other.minimapCharWidth\n\t\t\t&& this.sectionHeaderFontSize === other.sectionHeaderFontSize\n\t\t\t&& this.sectionHeaderLetterSpacing === other.sectionHeaderLetterSpacing\n\t\t\t&& this.defaultBackgroundColor && this.defaultBackgroundColor.equals(other.defaultBackgroundColor)\n\t\t\t&& this.backgroundColor && this.backgroundColor.equals(other.backgroundColor)\n\t\t\t&& this.foregroundAlpha === other.foregroundAlpha\n\t\t);\n\t}\n}\n\nclass MinimapLayout {\n\n\tconstructor(\n\t\t/**\n\t\t * The given editor scrollTop (input).\n\t\t */\n\t\tpublic readonly scrollTop: number,\n\t\t/**\n\t\t * The given editor scrollHeight (input).\n\t\t */\n\t\tpublic readonly scrollHeight: number,\n\t\tpublic readonly sliderNeeded: boolean,\n\t\tprivate readonly _computedSliderRatio: number,\n\t\t/**\n\t\t * slider dom node top (in CSS px)\n\t\t */\n\t\tpublic readonly sliderTop: number,\n\t\t/**\n\t\t * slider dom node height (in CSS px)\n\t\t */\n\t\tpublic readonly sliderHeight: number,\n\t\t/**\n\t\t * empty lines to reserve at the top of the minimap.\n\t\t */\n\t\tpublic readonly topPaddingLineCount: number,\n\t\t/**\n\t\t * minimap render start line number.\n\t\t */\n\t\tpublic readonly startLineNumber: number,\n\t\t/**\n\t\t * minimap render end line number.\n\t\t */\n\t\tpublic readonly endLineNumber: number\n\t) { }\n\n\t/**\n\t * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n\t */\n\tpublic getDesiredScrollTopFromDelta(delta: number): number {\n\t\treturn Math.round(this.scrollTop + delta / this._computedSliderRatio);\n\t}\n\n\tpublic getDesiredScrollTopFromTouchLocation(pageY: number): number {\n\t\treturn Math.round((pageY - this.sliderHeight / 2) / this._computedSliderRatio);\n\t}\n\n\t/**\n\t * Intersect a line range with `this.startLineNumber` and `this.endLineNumber`.\n\t */\n\tpublic intersectWithViewport(range: Range): [number, number] | null {\n\t\tconst startLineNumber = Math.max(this.startLineNumber, range.startLineNumber);\n\t\tconst endLineNumber = Math.min(this.endLineNumber, range.endLineNumber);\n\t\tif (startLineNumber > endLineNumber) {\n\t\t\t// entirely outside minimap's viewport\n\t\t\treturn null;\n\t\t}\n\t\treturn [startLineNumber, endLineNumber];\n\t}\n\n\t/**\n\t * Get the inner minimap y coordinate for a line number.\n\t */\n\tpublic getYForLineNumber(lineNumber: number, minimapLineHeight: number): number {\n\t\treturn + (lineNumber - this.startLineNumber + this.topPaddingLineCount) * minimapLineHeight;\n\t}\n\n\tpublic static create(\n\t\toptions: MinimapOptions,\n\t\tviewportStartLineNumber: number,\n\t\tviewportEndLineNumber: number,\n\t\tviewportStartLineNumberVerticalOffset: number,\n\t\tviewportHeight: number,\n\t\tviewportContainsWhitespaceGaps: boolean,\n\t\tlineCount: number,\n\t\trealLineCount: number,\n\t\tscrollTop: number,\n\t\tscrollHeight: number,\n\t\tpreviousLayout: MinimapLayout | null\n\t): MinimapLayout {\n\t\tconst pixelRatio = options.pixelRatio;\n\t\tconst minimapLineHeight = options.minimapLineHeight;\n\t\tconst minimapLinesFitting = Math.floor(options.canvasInnerHeight / minimapLineHeight);\n\t\tconst lineHeight = options.lineHeight;\n\n\t\tif (options.minimapHeightIsEditorHeight) {\n\t\t\tlet logicalScrollHeight = (\n\t\t\t\trealLineCount * options.lineHeight\n\t\t\t\t+ options.paddingTop\n\t\t\t\t+ options.paddingBottom\n\t\t\t);\n\t\t\tif (options.scrollBeyondLastLine) {\n\t\t\t\tlogicalScrollHeight += Math.max(0, viewportHeight - options.lineHeight - options.paddingBottom);\n\t\t\t}\n\t\t\tconst sliderHeight = Math.max(1, Math.floor(viewportHeight * viewportHeight / logicalScrollHeight));\n\t\t\tconst maxMinimapSliderTop = Math.max(0, options.minimapHeight - sliderHeight);\n\t\t\t// The slider can move from 0 to `maxMinimapSliderTop`\n\t\t\t// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\t\t\tconst computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n\t\t\tconst sliderTop = (scrollTop * computedSliderRatio);\n\t\t\tconst sliderNeeded = (maxMinimapSliderTop > 0);\n\t\t\tconst maxLinesFitting = Math.floor(options.canvasInnerHeight / options.minimapLineHeight);\n\t\t\tconst topPaddingLineCount = Math.floor(options.paddingTop / options.lineHeight);\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, topPaddingLineCount, 1, Math.min(lineCount, maxLinesFitting));\n\t\t}\n\n\t\t// The visible line count in a viewport can change due to a number of reasons:\n\t\t//  a) with the same viewport width, different scroll positions can result in partial lines being visible:\n\t\t//    e.g. for a line height of 20, and a viewport height of 600\n\t\t//          * scrollTop = 0  => visible lines are [1, 30]\n\t\t//          * scrollTop = 10 => visible lines are [1, 31] (with lines 1 and 31 partially visible)\n\t\t//          * scrollTop = 20 => visible lines are [2, 31]\n\t\t//  b) whitespace gaps might make their way in the viewport (which results in a decrease in the visible line count)\n\t\t//  c) we could be in the scroll beyond last line case (which also results in a decrease in the visible line count, down to possibly only one line being visible)\n\n\t\t// We must first establish a desirable slider height.\n\t\tlet sliderHeight: number;\n\t\tif (viewportContainsWhitespaceGaps && viewportEndLineNumber !== lineCount) {\n\t\t\t// case b) from above: there are whitespace gaps in the viewport.\n\t\t\t// In this case, the height of the slider directly reflects the visible line count.\n\t\t\tconst viewportLineCount = viewportEndLineNumber - viewportStartLineNumber + 1;\n\t\t\tsliderHeight = Math.floor(viewportLineCount * minimapLineHeight / pixelRatio);\n\t\t} else {\n\t\t\t// The slider has a stable height\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\tsliderHeight = Math.floor(expectedViewportLineCount * minimapLineHeight / pixelRatio);\n\t\t}\n\n\t\tconst extraLinesAtTheTop = Math.floor(options.paddingTop / lineHeight);\n\t\tlet extraLinesAtTheBottom = Math.floor(options.paddingBottom / lineHeight);\n\t\tif (options.scrollBeyondLastLine) {\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\textraLinesAtTheBottom = Math.max(extraLinesAtTheBottom, expectedViewportLineCount - 1);\n\t\t}\n\n\t\tlet maxMinimapSliderTop: number;\n\t\tif (extraLinesAtTheBottom > 0) {\n\t\t\tconst expectedViewportLineCount = viewportHeight / lineHeight;\n\t\t\t// The minimap slider, when dragged all the way down, will contain the last line at its top\n\t\t\tmaxMinimapSliderTop = (extraLinesAtTheTop + lineCount + extraLinesAtTheBottom - expectedViewportLineCount - 1) * minimapLineHeight / pixelRatio;\n\t\t} else {\n\t\t\t// The minimap slider, when dragged all the way down, will contain the last line at its bottom\n\t\t\tmaxMinimapSliderTop = Math.max(0, (extraLinesAtTheTop + lineCount) * minimapLineHeight / pixelRatio - sliderHeight);\n\t\t}\n\t\tmaxMinimapSliderTop = Math.min(options.minimapHeight - sliderHeight, maxMinimapSliderTop);\n\n\t\t// The slider can move from 0 to `maxMinimapSliderTop`\n\t\t// in the same way `scrollTop` can move from 0 to `scrollHeight` - `viewportHeight`.\n\t\tconst computedSliderRatio = (maxMinimapSliderTop) / (scrollHeight - viewportHeight);\n\t\tconst sliderTop = (scrollTop * computedSliderRatio);\n\n\t\tif (minimapLinesFitting >= extraLinesAtTheTop + lineCount + extraLinesAtTheBottom) {\n\t\t\t// All lines fit in the minimap\n\t\t\tconst sliderNeeded = (maxMinimapSliderTop > 0);\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, sliderNeeded, computedSliderRatio, sliderTop, sliderHeight, extraLinesAtTheTop, 1, lineCount);\n\t\t} else {\n\t\t\tlet consideringStartLineNumber: number;\n\t\t\tif (viewportStartLineNumber > 1) {\n\t\t\t\tconsideringStartLineNumber = viewportStartLineNumber + extraLinesAtTheTop;\n\t\t\t} else {\n\t\t\t\tconsideringStartLineNumber = Math.max(1, scrollTop / lineHeight);\n\t\t\t}\n\n\t\t\tlet topPaddingLineCount: number;\n\t\t\tlet startLineNumber = Math.max(1, Math.floor(consideringStartLineNumber - sliderTop * pixelRatio / minimapLineHeight));\n\t\t\tif (startLineNumber < extraLinesAtTheTop) {\n\t\t\t\ttopPaddingLineCount = extraLinesAtTheTop - startLineNumber + 1;\n\t\t\t\tstartLineNumber = 1;\n\t\t\t} else {\n\t\t\t\ttopPaddingLineCount = 0;\n\t\t\t\tstartLineNumber = Math.max(1, startLineNumber - extraLinesAtTheTop);\n\t\t\t}\n\n\t\t\t// Avoid flickering caused by a partial viewport start line\n\t\t\t// by being consistent w.r.t. the previous layout decision\n\t\t\tif (previousLayout && previousLayout.scrollHeight === scrollHeight) {\n\t\t\t\tif (previousLayout.scrollTop > scrollTop) {\n\t\t\t\t\t// Scrolling up => never increase `startLineNumber`\n\t\t\t\t\tstartLineNumber = Math.min(startLineNumber, previousLayout.startLineNumber);\n\t\t\t\t\ttopPaddingLineCount = Math.max(topPaddingLineCount, previousLayout.topPaddingLineCount);\n\t\t\t\t}\n\t\t\t\tif (previousLayout.scrollTop < scrollTop) {\n\t\t\t\t\t// Scrolling down => never decrease `startLineNumber`\n\t\t\t\t\tstartLineNumber = Math.max(startLineNumber, previousLayout.startLineNumber);\n\t\t\t\t\ttopPaddingLineCount = Math.min(topPaddingLineCount, previousLayout.topPaddingLineCount);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst endLineNumber = Math.min(lineCount, startLineNumber - topPaddingLineCount + minimapLinesFitting - 1);\n\t\t\tconst partialLine = (scrollTop - viewportStartLineNumberVerticalOffset) / lineHeight;\n\n\t\t\tlet sliderTopAligned: number;\n\t\t\tif (scrollTop >= options.paddingTop) {\n\t\t\t\tsliderTopAligned = (viewportStartLineNumber - startLineNumber + topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n\t\t\t} else {\n\t\t\t\tsliderTopAligned = (scrollTop / options.paddingTop) * (topPaddingLineCount + partialLine) * minimapLineHeight / pixelRatio;\n\t\t\t}\n\n\t\t\treturn new MinimapLayout(scrollTop, scrollHeight, true, computedSliderRatio, sliderTopAligned, sliderHeight, topPaddingLineCount, startLineNumber, endLineNumber);\n\t\t}\n\t}\n}\n\nclass MinimapLine implements ILine {\n\n\tpublic static readonly INVALID = new MinimapLine(-1);\n\n\tdy: number;\n\n\tconstructor(dy: number) {\n\t\tthis.dy = dy;\n\t}\n\n\tpublic onContentChanged(): void {\n\t\tthis.dy = -1;\n\t}\n\n\tpublic onTokensChanged(): void {\n\t\tthis.dy = -1;\n\t}\n}\n\nclass RenderData {\n\t/**\n\t * last rendered layout.\n\t */\n\tpublic readonly renderedLayout: MinimapLayout;\n\tprivate readonly _imageData: ImageData;\n\tprivate readonly _renderedLines: RenderedLinesCollection<MinimapLine>;\n\n\tconstructor(\n\t\trenderedLayout: MinimapLayout,\n\t\timageData: ImageData,\n\t\tlines: MinimapLine[]\n\t) {\n\t\tthis.renderedLayout = renderedLayout;\n\t\tthis._imageData = imageData;\n\t\tthis._renderedLines = new RenderedLinesCollection({\n\t\t\tcreateLine: () => MinimapLine.INVALID\n\t\t});\n\t\tthis._renderedLines._set(renderedLayout.startLineNumber, lines);\n\t}\n\n\t/**\n\t * Check if the current RenderData matches accurately the new desired layout and no painting is needed.\n\t */\n\tpublic linesEquals(layout: MinimapLayout): boolean {\n\t\tif (!this.scrollEquals(layout)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst tmp = this._renderedLines._get();\n\t\tconst lines = tmp.lines;\n\t\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\t\tif (lines[i].dy === -1) {\n\t\t\t\t// This line is invalid\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Check if the current RenderData matches the new layout's scroll position\n\t */\n\tpublic scrollEquals(layout: MinimapLayout): boolean {\n\t\treturn this.renderedLayout.startLineNumber === layout.startLineNumber\n\t\t\t&& this.renderedLayout.endLineNumber === layout.endLineNumber;\n\t}\n\n\t_get(): { imageData: ImageData; rendLineNumberStart: number; lines: MinimapLine[] } {\n\t\tconst tmp = this._renderedLines._get();\n\t\treturn {\n\t\t\timageData: this._imageData,\n\t\t\trendLineNumberStart: tmp.rendLineNumberStart,\n\t\t\tlines: tmp.lines\n\t\t};\n\t}\n\n\tpublic onLinesChanged(changeFromLineNumber: number, changeCount: number): boolean {\n\t\treturn this._renderedLines.onLinesChanged(changeFromLineNumber, changeCount);\n\t}\n\tpublic onLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number): void {\n\t\tthis._renderedLines.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t}\n\tpublic onLinesInserted(insertFromLineNumber: number, insertToLineNumber: number): void {\n\t\tthis._renderedLines.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t}\n\tpublic onTokensChanged(ranges: { fromLineNumber: number; toLineNumber: number }[]): boolean {\n\t\treturn this._renderedLines.onTokensChanged(ranges);\n\t}\n}\n\n/**\n * Some sort of double buffering.\n *\n * Keeps two buffers around that will be rotated for painting.\n * Always gives a buffer that is filled with the background color.\n */\nclass MinimapBuffers {\n\n\tprivate readonly _backgroundFillData: Uint8ClampedArray;\n\tprivate readonly _buffers: [ImageData, ImageData];\n\tprivate _lastUsedBuffer: number;\n\n\tconstructor(ctx: CanvasRenderingContext2D, WIDTH: number, HEIGHT: number, background: RGBA8) {\n\t\tthis._backgroundFillData = MinimapBuffers._createBackgroundFillData(WIDTH, HEIGHT, background);\n\t\tthis._buffers = [\n\t\t\tctx.createImageData(WIDTH, HEIGHT),\n\t\t\tctx.createImageData(WIDTH, HEIGHT)\n\t\t];\n\t\tthis._lastUsedBuffer = 0;\n\t}\n\n\tpublic getBuffer(): ImageData {\n\t\t// rotate buffers\n\t\tthis._lastUsedBuffer = 1 - this._lastUsedBuffer;\n\t\tconst result = this._buffers[this._lastUsedBuffer];\n\n\t\t// fill with background color\n\t\tresult.data.set(this._backgroundFillData);\n\n\t\treturn result;\n\t}\n\n\tprivate static _createBackgroundFillData(WIDTH: number, HEIGHT: number, background: RGBA8): Uint8ClampedArray {\n\t\tconst backgroundR = background.r;\n\t\tconst backgroundG = background.g;\n\t\tconst backgroundB = background.b;\n\t\tconst backgroundA = background.a;\n\n\t\tconst result = new Uint8ClampedArray(WIDTH * HEIGHT * 4);\n\t\tlet offset = 0;\n\t\tfor (let i = 0; i < HEIGHT; i++) {\n\t\t\tfor (let j = 0; j < WIDTH; j++) {\n\t\t\t\tresult[offset] = backgroundR;\n\t\t\t\tresult[offset + 1] = backgroundG;\n\t\t\t\tresult[offset + 2] = backgroundB;\n\t\t\t\tresult[offset + 3] = backgroundA;\n\t\t\t\toffset += 4;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nexport interface IMinimapModel {\n\treadonly tokensColorTracker: MinimapTokensColorTracker;\n\treadonly options: MinimapOptions;\n\n\tgetLineCount(): number;\n\tgetRealLineCount(): number;\n\tgetLineContent(lineNumber: number): string;\n\tgetLineMaxColumn(lineNumber: number): number;\n\tgetMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): (ViewLineData | null)[];\n\tgetSelections(): Selection[];\n\tgetMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[];\n\tgetSectionHeaderDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[];\n\tgetSectionHeaderText(decoration: ViewModelDecoration, fitWidth: (s: string) => string): string | null;\n\tgetOptions(): TextModelResolvedOptions;\n\trevealLineNumber(lineNumber: number): void;\n\tsetScrollTop(scrollTop: number): void;\n}\n\ninterface IMinimapRenderingContext {\n\treadonly viewportContainsWhitespaceGaps: boolean;\n\n\treadonly scrollWidth: number;\n\treadonly scrollHeight: number;\n\n\treadonly viewportStartLineNumber: number;\n\treadonly viewportEndLineNumber: number;\n\treadonly viewportStartLineNumberVerticalOffset: number;\n\n\treadonly scrollTop: number;\n\treadonly scrollLeft: number;\n\n\treadonly viewportWidth: number;\n\treadonly viewportHeight: number;\n}\n\ninterface SamplingStateLinesDeletedEvent {\n\ttype: 'deleted';\n\t_oldIndex: number;\n\tdeleteFromLineNumber: number;\n\tdeleteToLineNumber: number;\n}\n\ninterface SamplingStateLinesInsertedEvent {\n\ttype: 'inserted';\n\t_i: number;\n\tinsertFromLineNumber: number;\n\tinsertToLineNumber: number;\n}\n\ninterface SamplingStateFlushEvent {\n\ttype: 'flush';\n}\n\ntype SamplingStateEvent = SamplingStateLinesInsertedEvent | SamplingStateLinesDeletedEvent | SamplingStateFlushEvent;\n\nclass MinimapSamplingState {\n\n\tpublic static compute(options: MinimapOptions, viewLineCount: number, oldSamplingState: MinimapSamplingState | null): [MinimapSamplingState | null, SamplingStateEvent[]] {\n\t\tif (options.renderMinimap === RenderMinimap.None || !options.isSampling) {\n\t\t\treturn [null, []];\n\t\t}\n\n\t\t// ratio is intentionally not part of the layout to avoid the layout changing all the time\n\t\t// so we need to recompute it again...\n\t\tconst { minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n\t\t\tviewLineCount: viewLineCount,\n\t\t\tscrollBeyondLastLine: options.scrollBeyondLastLine,\n\t\t\tpaddingTop: options.paddingTop,\n\t\t\tpaddingBottom: options.paddingBottom,\n\t\t\theight: options.editorHeight,\n\t\t\tlineHeight: options.lineHeight,\n\t\t\tpixelRatio: options.pixelRatio\n\t\t});\n\t\tconst ratio = viewLineCount / minimapLineCount;\n\t\tconst halfRatio = ratio / 2;\n\n\t\tif (!oldSamplingState || oldSamplingState.minimapLines.length === 0) {\n\t\t\tconst result: number[] = [];\n\t\t\tresult[0] = 1;\n\t\t\tif (minimapLineCount > 1) {\n\t\t\t\tfor (let i = 0, lastIndex = minimapLineCount - 1; i < lastIndex; i++) {\n\t\t\t\t\tresult[i] = Math.round(i * ratio + halfRatio);\n\t\t\t\t}\n\t\t\t\tresult[minimapLineCount - 1] = viewLineCount;\n\t\t\t}\n\t\t\treturn [new MinimapSamplingState(ratio, result), []];\n\t\t}\n\n\t\tconst oldMinimapLines = oldSamplingState.minimapLines;\n\t\tconst oldLength = oldMinimapLines.length;\n\t\tconst result: number[] = [];\n\t\tlet oldIndex = 0;\n\t\tlet oldDeltaLineCount = 0;\n\t\tlet minViewLineNumber = 1;\n\t\tconst MAX_EVENT_COUNT = 10; // generate at most 10 events, if there are more than 10 changes, just flush all previous data\n\t\tlet events: SamplingStateEvent[] = [];\n\t\tlet lastEvent: SamplingStateEvent | null = null;\n\t\tfor (let i = 0; i < minimapLineCount; i++) {\n\t\t\tconst fromViewLineNumber = Math.max(minViewLineNumber, Math.round(i * ratio));\n\t\t\tconst toViewLineNumber = Math.max(fromViewLineNumber, Math.round((i + 1) * ratio));\n\n\t\t\twhile (oldIndex < oldLength && oldMinimapLines[oldIndex] < fromViewLineNumber) {\n\t\t\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\t\tif (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n\t\t\t\t\t\tlastEvent.deleteToLineNumber++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t\t}\n\t\t\t\t\toldDeltaLineCount--;\n\t\t\t\t}\n\t\t\t\toldIndex++;\n\t\t\t}\n\n\t\t\tlet selectedViewLineNumber: number;\n\t\t\tif (oldIndex < oldLength && oldMinimapLines[oldIndex] <= toViewLineNumber) {\n\t\t\t\t// reuse the old sampled line\n\t\t\t\tselectedViewLineNumber = oldMinimapLines[oldIndex];\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tselectedViewLineNumber = 1;\n\t\t\t\t} else if (i + 1 === minimapLineCount) {\n\t\t\t\t\tselectedViewLineNumber = viewLineCount;\n\t\t\t\t} else {\n\t\t\t\t\tselectedViewLineNumber = Math.round(i * ratio + halfRatio);\n\t\t\t\t}\n\t\t\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\t\tif (lastEvent && lastEvent.type === 'inserted' && lastEvent._i === i - 1) {\n\t\t\t\t\t\tlastEvent.insertToLineNumber++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastEvent = { type: 'inserted', _i: i, insertFromLineNumber: oldMinimapLineNumber, insertToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t\t}\n\t\t\t\t\toldDeltaLineCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresult[i] = selectedViewLineNumber;\n\t\t\tminViewLineNumber = selectedViewLineNumber;\n\t\t}\n\n\t\tif (events.length < MAX_EVENT_COUNT) {\n\t\t\twhile (oldIndex < oldLength) {\n\t\t\t\tconst oldMinimapLineNumber = oldIndex + 1 + oldDeltaLineCount;\n\t\t\t\tif (lastEvent && lastEvent.type === 'deleted' && lastEvent._oldIndex === oldIndex - 1) {\n\t\t\t\t\tlastEvent.deleteToLineNumber++;\n\t\t\t\t} else {\n\t\t\t\t\tlastEvent = { type: 'deleted', _oldIndex: oldIndex, deleteFromLineNumber: oldMinimapLineNumber, deleteToLineNumber: oldMinimapLineNumber };\n\t\t\t\t\tevents.push(lastEvent);\n\t\t\t\t}\n\t\t\t\toldDeltaLineCount--;\n\t\t\t\toldIndex++;\n\t\t\t}\n\t\t} else {\n\t\t\t// too many events, just give up\n\t\t\tevents = [{ type: 'flush' }];\n\t\t}\n\n\t\treturn [new MinimapSamplingState(ratio, result), events];\n\t}\n\n\tconstructor(\n\t\tpublic readonly samplingRatio: number,\n\t\tpublic readonly minimapLines: number[]\t// a map of 0-based minimap line indexes to 1-based view line numbers\n\t) {\n\t}\n\n\tpublic modelLineToMinimapLine(lineNumber: number): number {\n\t\treturn Math.min(this.minimapLines.length, Math.max(1, Math.round(lineNumber / this.samplingRatio)));\n\t}\n\n\t/**\n\t * Will return null if the model line ranges are not intersecting with a sampled model line.\n\t */\n\tpublic modelLineRangeToMinimapLineRange(fromLineNumber: number, toLineNumber: number): [number, number] | null {\n\t\tlet fromLineIndex = this.modelLineToMinimapLine(fromLineNumber) - 1;\n\t\twhile (fromLineIndex > 0 && this.minimapLines[fromLineIndex - 1] >= fromLineNumber) {\n\t\t\tfromLineIndex--;\n\t\t}\n\t\tlet toLineIndex = this.modelLineToMinimapLine(toLineNumber) - 1;\n\t\twhile (toLineIndex + 1 < this.minimapLines.length && this.minimapLines[toLineIndex + 1] <= toLineNumber) {\n\t\t\ttoLineIndex++;\n\t\t}\n\t\tif (fromLineIndex === toLineIndex) {\n\t\t\tconst sampledLineNumber = this.minimapLines[fromLineIndex];\n\t\t\tif (sampledLineNumber < fromLineNumber || sampledLineNumber > toLineNumber) {\n\t\t\t\t// This line is not part of the sampled lines ==> nothing to do\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn [fromLineIndex + 1, toLineIndex + 1];\n\t}\n\n\t/**\n\t * Will always return a range, even if it is not intersecting with a sampled model line.\n\t */\n\tpublic decorationLineRangeToMinimapLineRange(startLineNumber: number, endLineNumber: number): [number, number] {\n\t\tlet minimapLineStart = this.modelLineToMinimapLine(startLineNumber);\n\t\tlet minimapLineEnd = this.modelLineToMinimapLine(endLineNumber);\n\t\tif (startLineNumber !== endLineNumber && minimapLineEnd === minimapLineStart) {\n\t\t\tif (minimapLineEnd === this.minimapLines.length) {\n\t\t\t\tif (minimapLineStart > 1) {\n\t\t\t\t\tminimapLineStart--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tminimapLineEnd++;\n\t\t\t}\n\t\t}\n\t\treturn [minimapLineStart, minimapLineEnd];\n\t}\n\n\tpublic onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): [number, number] {\n\t\t// have the mapping be sticky\n\t\tconst deletedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n\t\tlet changeStartIndex = this.minimapLines.length;\n\t\tlet changeEndIndex = 0;\n\t\tfor (let i = this.minimapLines.length - 1; i >= 0; i--) {\n\t\t\tif (this.minimapLines[i] < e.fromLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (this.minimapLines[i] <= e.toLineNumber) {\n\t\t\t\t// this line got deleted => move to previous available\n\t\t\t\tthis.minimapLines[i] = Math.max(1, e.fromLineNumber - 1);\n\t\t\t\tchangeStartIndex = Math.min(changeStartIndex, i);\n\t\t\t\tchangeEndIndex = Math.max(changeEndIndex, i);\n\t\t\t} else {\n\t\t\t\tthis.minimapLines[i] -= deletedLineCount;\n\t\t\t}\n\t\t}\n\t\treturn [changeStartIndex, changeEndIndex];\n\t}\n\n\tpublic onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): void {\n\t\t// have the mapping be sticky\n\t\tconst insertedLineCount = e.toLineNumber - e.fromLineNumber + 1;\n\t\tfor (let i = this.minimapLines.length - 1; i >= 0; i--) {\n\t\t\tif (this.minimapLines[i] < e.fromLineNumber) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.minimapLines[i] += insertedLineCount;\n\t\t}\n\t}\n}\n\n/**\n * The minimap appears beside the editor scroll bar and visualizes a zoomed out\n * view of the file.\n */\nexport class Minimap extends ViewPart implements IMinimapModel {\n\n\tpublic readonly tokensColorTracker: MinimapTokensColorTracker;\n\n\tprivate _selections: Selection[];\n\tprivate _minimapSelections: Selection[] | null;\n\n\tpublic options: MinimapOptions;\n\n\tprivate _samplingState: MinimapSamplingState | null;\n\tprivate _shouldCheckSampling: boolean;\n\n\tprivate _sectionHeaderCache = new LRUCache<string, string>(10, 1.5);\n\n\tprivate _actual: InnerMinimap;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis.tokensColorTracker = MinimapTokensColorTracker.getInstance();\n\n\t\tthis._selections = [];\n\t\tthis._minimapSelections = null;\n\n\t\tthis.options = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n\t\tconst [samplingState,] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), null);\n\t\tthis._samplingState = samplingState;\n\t\tthis._shouldCheckSampling = false;\n\n\t\tthis._actual = new InnerMinimap(context.theme, this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._actual.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._actual.getDomNode();\n\t}\n\n\tprivate _onOptionsMaybeChanged(): boolean {\n\t\tconst opts = new MinimapOptions(this._context.configuration, this._context.theme, this.tokensColorTracker);\n\t\tif (this.options.equals(opts)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.options = opts;\n\t\tthis._recreateLineSampling();\n\t\tthis._actual.onDidChangeOptions();\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._onOptionsMaybeChanged();\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections;\n\t\tthis._minimapSelections = null;\n\t\treturn this._actual.onSelectionChanged();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsMinimap) {\n\t\t\treturn this._actual.onDecorationsChanged();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tthis._shouldCheckSampling = true;\n\t\t}\n\t\treturn this._actual.onFlushed();\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n\t\t\tif (minimapLineRange) {\n\t\t\t\treturn this._actual.onLinesChanged(minimapLineRange[0], minimapLineRange[1] - minimapLineRange[0] + 1);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._actual.onLinesChanged(e.fromLineNumber, e.count);\n\t\t}\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst [changeStartIndex, changeEndIndex] = this._samplingState.onLinesDeleted(e);\n\t\t\tif (changeStartIndex <= changeEndIndex) {\n\t\t\t\tthis._actual.onLinesChanged(changeStartIndex + 1, changeEndIndex - changeStartIndex + 1);\n\t\t\t}\n\t\t\tthis._shouldCheckSampling = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this._actual.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n\t\t}\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tthis._samplingState.onLinesInserted(e);\n\t\t\tthis._shouldCheckSampling = true;\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this._actual.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n\t\t}\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn this._actual.onScrollChanged(e);\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\tthis._actual.onThemeChanged();\n\t\tthis._onOptionsMaybeChanged();\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tif (this._samplingState) {\n\t\t\tconst ranges: { fromLineNumber: number; toLineNumber: number }[] = [];\n\t\t\tfor (const range of e.ranges) {\n\t\t\t\tconst minimapLineRange = this._samplingState.modelLineRangeToMinimapLineRange(range.fromLineNumber, range.toLineNumber);\n\t\t\t\tif (minimapLineRange) {\n\t\t\t\t\tranges.push({ fromLineNumber: minimapLineRange[0], toLineNumber: minimapLineRange[1] });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ranges.length) {\n\t\t\t\treturn this._actual.onTokensChanged(ranges);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this._actual.onTokensChanged(e.ranges);\n\t\t}\n\t}\n\tpublic override onTokensColorsChanged(e: viewEvents.ViewTokensColorsChangedEvent): boolean {\n\t\tthis._onOptionsMaybeChanged();\n\t\treturn this._actual.onTokensColorsChanged();\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._actual.onZonesChanged();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._shouldCheckSampling) {\n\t\t\tthis._shouldCheckSampling = false;\n\t\t\tthis._recreateLineSampling();\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tlet viewportStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tlet viewportEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tif (this._samplingState) {\n\t\t\tviewportStartLineNumber = this._samplingState.modelLineToMinimapLine(viewportStartLineNumber);\n\t\t\tviewportEndLineNumber = this._samplingState.modelLineToMinimapLine(viewportEndLineNumber);\n\t\t}\n\n\t\tconst minimapCtx: IMinimapRenderingContext = {\n\t\t\tviewportContainsWhitespaceGaps: (ctx.viewportData.whitespaceViewportData.length > 0),\n\n\t\t\tscrollWidth: ctx.scrollWidth,\n\t\t\tscrollHeight: ctx.scrollHeight,\n\n\t\t\tviewportStartLineNumber: viewportStartLineNumber,\n\t\t\tviewportEndLineNumber: viewportEndLineNumber,\n\t\t\tviewportStartLineNumberVerticalOffset: ctx.getVerticalOffsetForLineNumber(viewportStartLineNumber),\n\n\t\t\tscrollTop: ctx.scrollTop,\n\t\t\tscrollLeft: ctx.scrollLeft,\n\n\t\t\tviewportWidth: ctx.viewportWidth,\n\t\t\tviewportHeight: ctx.viewportHeight,\n\t\t};\n\t\tthis._actual.render(minimapCtx);\n\t}\n\n\t//#region IMinimapModel\n\n\tprivate _recreateLineSampling(): void {\n\t\tthis._minimapSelections = null;\n\n\t\tconst wasSampling = Boolean(this._samplingState);\n\t\tconst [samplingState, events] = MinimapSamplingState.compute(this.options, this._context.viewModel.getLineCount(), this._samplingState);\n\t\tthis._samplingState = samplingState;\n\n\t\tif (wasSampling && this._samplingState) {\n\t\t\t// was sampling, is sampling\n\t\t\tfor (const event of events) {\n\t\t\t\tswitch (event.type) {\n\t\t\t\t\tcase 'deleted':\n\t\t\t\t\t\tthis._actual.onLinesDeleted(event.deleteFromLineNumber, event.deleteToLineNumber);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'inserted':\n\t\t\t\t\t\tthis._actual.onLinesInserted(event.insertFromLineNumber, event.insertToLineNumber);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flush':\n\t\t\t\t\t\tthis._actual.onFlushed();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getLineCount(): number {\n\t\tif (this._samplingState) {\n\t\t\treturn this._samplingState.minimapLines.length;\n\t\t}\n\t\treturn this._context.viewModel.getLineCount();\n\t}\n\n\tpublic getRealLineCount(): number {\n\t\treturn this._context.viewModel.getLineCount();\n\t}\n\n\tpublic getLineContent(lineNumber: number): string {\n\t\tif (this._samplingState) {\n\t\t\treturn this._context.viewModel.getLineContent(this._samplingState.minimapLines[lineNumber - 1]);\n\t\t}\n\t\treturn this._context.viewModel.getLineContent(lineNumber);\n\t}\n\n\tpublic getLineMaxColumn(lineNumber: number): number {\n\t\tif (this._samplingState) {\n\t\t\treturn this._context.viewModel.getLineMaxColumn(this._samplingState.minimapLines[lineNumber - 1]);\n\t\t}\n\t\treturn this._context.viewModel.getLineMaxColumn(lineNumber);\n\t}\n\n\tpublic getMinimapLinesRenderingData(startLineNumber: number, endLineNumber: number, needed: boolean[]): (ViewLineData | null)[] {\n\t\tif (this._samplingState) {\n\t\t\tconst result: (ViewLineData | null)[] = [];\n\t\t\tfor (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n\t\t\t\tif (needed[lineIndex]) {\n\t\t\t\t\tresult[lineIndex] = this._context.viewModel.getViewLineData(this._samplingState.minimapLines[startLineNumber + lineIndex - 1]);\n\t\t\t\t} else {\n\t\t\t\t\tresult[lineIndex] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn this._context.viewModel.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed).data;\n\t}\n\n\tpublic getSelections(): Selection[] {\n\t\tif (this._minimapSelections === null) {\n\t\t\tif (this._samplingState) {\n\t\t\t\tthis._minimapSelections = [];\n\t\t\t\tfor (const selection of this._selections) {\n\t\t\t\t\tconst [minimapLineStart, minimapLineEnd] = this._samplingState.decorationLineRangeToMinimapLineRange(selection.startLineNumber, selection.endLineNumber);\n\t\t\t\t\tthis._minimapSelections.push(new Selection(minimapLineStart, selection.startColumn, minimapLineEnd, selection.endColumn));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._minimapSelections = this._selections;\n\t\t\t}\n\t\t}\n\t\treturn this._minimapSelections;\n\t}\n\n\tpublic getMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[] {\n\t\treturn this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n\t\t\t.filter(decoration => !decoration.options.minimap?.sectionHeaderStyle);\n\t}\n\n\tpublic getSectionHeaderDecorationsInViewport(startLineNumber: number, endLineNumber: number): ViewModelDecoration[] {\n\t\tconst headerHeightInMinimapLines = this.options.sectionHeaderFontSize / this.options.minimapLineHeight;\n\t\tstartLineNumber = Math.floor(Math.max(1, startLineNumber - headerHeightInMinimapLines));\n\t\treturn this._getMinimapDecorationsInViewport(startLineNumber, endLineNumber)\n\t\t\t.filter(decoration => !!decoration.options.minimap?.sectionHeaderStyle);\n\t}\n\n\tprivate _getMinimapDecorationsInViewport(startLineNumber: number, endLineNumber: number) {\n\t\tlet visibleRange: Range;\n\t\tif (this._samplingState) {\n\t\t\tconst modelStartLineNumber = this._samplingState.minimapLines[startLineNumber - 1];\n\t\t\tconst modelEndLineNumber = this._samplingState.minimapLines[endLineNumber - 1];\n\t\t\tvisibleRange = new Range(modelStartLineNumber, 1, modelEndLineNumber, this._context.viewModel.getLineMaxColumn(modelEndLineNumber));\n\t\t} else {\n\t\t\tvisibleRange = new Range(startLineNumber, 1, endLineNumber, this._context.viewModel.getLineMaxColumn(endLineNumber));\n\t\t}\n\t\tconst decorations = this._context.viewModel.getMinimapDecorationsInRange(visibleRange);\n\n\t\tif (this._samplingState) {\n\t\t\tconst result: ViewModelDecoration[] = [];\n\t\t\tfor (const decoration of decorations) {\n\t\t\t\tif (!decoration.options.minimap) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst range = decoration.range;\n\t\t\t\tconst minimapStartLineNumber = this._samplingState.modelLineToMinimapLine(range.startLineNumber);\n\t\t\t\tconst minimapEndLineNumber = this._samplingState.modelLineToMinimapLine(range.endLineNumber);\n\t\t\t\tresult.push(new ViewModelDecoration(new Range(minimapStartLineNumber, range.startColumn, minimapEndLineNumber, range.endColumn), decoration.options));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\treturn decorations;\n\t}\n\n\tpublic getSectionHeaderText(decoration: ViewModelDecoration, fitWidth: (s: string) => string): string | null {\n\t\tconst headerText = decoration.options.minimap?.sectionHeaderText;\n\t\tif (!headerText) {\n\t\t\treturn null;\n\t\t}\n\t\tconst cachedText = this._sectionHeaderCache.get(headerText);\n\t\tif (cachedText) {\n\t\t\treturn cachedText;\n\t\t}\n\t\tconst fittedText = fitWidth(headerText);\n\t\tthis._sectionHeaderCache.set(headerText, fittedText);\n\t\treturn fittedText;\n\t}\n\n\tpublic getOptions(): TextModelResolvedOptions {\n\t\treturn this._context.viewModel.model.getOptions();\n\t}\n\n\tpublic revealLineNumber(lineNumber: number): void {\n\t\tif (this._samplingState) {\n\t\t\tlineNumber = this._samplingState.minimapLines[lineNumber - 1];\n\t\t}\n\t\tthis._context.viewModel.revealRange(\n\t\t\t'mouse',\n\t\t\tfalse,\n\t\t\tnew Range(lineNumber, 1, lineNumber, 1),\n\t\t\tviewEvents.VerticalRevealType.Center,\n\t\t\tScrollType.Smooth\n\t\t);\n\t}\n\n\tpublic setScrollTop(scrollTop: number): void {\n\t\tthis._context.viewModel.viewLayout.setScrollPosition({\n\t\t\tscrollTop: scrollTop\n\t\t}, ScrollType.Immediate);\n\t}\n\n\t//#endregion\n}\n\nclass InnerMinimap extends Disposable {\n\n\tprivate readonly _theme: EditorTheme;\n\tprivate readonly _model: IMinimapModel;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _shadow: FastDomNode<HTMLElement>;\n\tprivate readonly _canvas: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _decorationsCanvas: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _slider: FastDomNode<HTMLElement>;\n\tprivate readonly _sliderHorizontal: FastDomNode<HTMLElement>;\n\tprivate readonly _pointerDownListener: IDisposable;\n\tprivate readonly _sliderPointerMoveMonitor: GlobalPointerMoveMonitor;\n\tprivate readonly _sliderPointerDownListener: IDisposable;\n\tprivate readonly _gestureDisposable: IDisposable;\n\tprivate readonly _sliderTouchStartListener: IDisposable;\n\tprivate readonly _sliderTouchMoveListener: IDisposable;\n\tprivate readonly _sliderTouchEndListener: IDisposable;\n\n\tprivate _lastRenderData: RenderData | null;\n\tprivate _selectionColor: Color | undefined;\n\tprivate _renderDecorations: boolean = false;\n\tprivate _gestureInProgress: boolean = false;\n\tprivate _buffers: MinimapBuffers | null;\n\tprivate _isMouseOverMinimap: boolean = false;\n\tprivate _hideDelayedScheduler: RunOnceScheduler;\n\n\tconstructor(\n\t\ttheme: EditorTheme,\n\t\tmodel: IMinimapModel\n\t) {\n\t\tsuper();\n\n\t\tthis._theme = theme;\n\t\tthis._model = model;\n\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\tthis._selectionColor = this._theme.getColor(minimapSelection);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.Minimap);\n\t\tthis._domNode.setClassName(this._getMinimapDomNodeClassName());\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._shadow = createFastDomNode(document.createElement('div'));\n\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\tthis._domNode.appendChild(this._shadow);\n\n\t\tthis._canvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis._canvas.setPosition('absolute');\n\t\tthis._canvas.setLeft(0);\n\t\tthis._domNode.appendChild(this._canvas);\n\n\t\tthis._decorationsCanvas = createFastDomNode(document.createElement('canvas'));\n\t\tthis._decorationsCanvas.setPosition('absolute');\n\t\tthis._decorationsCanvas.setClassName('minimap-decorations-layer');\n\t\tthis._decorationsCanvas.setLeft(0);\n\t\tthis._domNode.appendChild(this._decorationsCanvas);\n\n\t\tthis._slider = createFastDomNode(document.createElement('div'));\n\t\tthis._slider.setPosition('absolute');\n\t\tthis._slider.setClassName('minimap-slider');\n\t\tthis._slider.setLayerHinting(true);\n\t\tthis._slider.setContain('strict');\n\t\tthis._domNode.appendChild(this._slider);\n\n\t\tthis._sliderHorizontal = createFastDomNode(document.createElement('div'));\n\t\tthis._sliderHorizontal.setPosition('absolute');\n\t\tthis._sliderHorizontal.setClassName('minimap-slider-horizontal');\n\t\tthis._slider.appendChild(this._sliderHorizontal);\n\n\t\tthis._applyLayout();\n\n\t\tthis._hideDelayedScheduler = this._register(new RunOnceScheduler(() => this._hideImmediatelyIfMouseIsOutside(), 500));\n\n\t\tthis._register(dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.MOUSE_OVER, () => {\n\t\t\tthis._isMouseOverMinimap = true;\n\t\t}));\n\t\tthis._register(dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.MOUSE_LEAVE, () => {\n\t\t\tthis._isMouseOverMinimap = false;\n\t\t}));\n\n\t\tthis._pointerDownListener = dom.addStandardDisposableListener(this._domNode.domNode, dom.EventType.POINTER_DOWN, (e) => {\n\t\t\te.preventDefault();\n\n\t\t\tconst isMouse = (e.pointerType === 'mouse');\n\t\t\tconst isLeftClick = (e.button === 0);\n\n\t\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\t\tif (renderMinimap === RenderMinimap.None) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._lastRenderData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._model.options.size !== 'proportional') {\n\t\t\t\tif (isLeftClick && this._lastRenderData) {\n\t\t\t\t\t// pretend the click occurred in the center of the slider\n\t\t\t\t\tconst position = dom.getDomNodePagePosition(this._slider.domNode);\n\t\t\t\t\tconst initialPosY = position.top + position.height / 2;\n\t\t\t\t\tthis._startSliderDragging(e, initialPosY, this._lastRenderData.renderedLayout);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isLeftClick || !isMouse) {\n\t\t\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\t\t\tconst internalOffsetY = (this._model.options.canvasInnerHeight / this._model.options.canvasOuterHeight) * e.offsetY;\n\t\t\t\tconst lineIndex = Math.floor(internalOffsetY / minimapLineHeight);\n\n\t\t\t\tlet lineNumber = lineIndex + this._lastRenderData.renderedLayout.startLineNumber - this._lastRenderData.renderedLayout.topPaddingLineCount;\n\t\t\t\tlineNumber = Math.min(lineNumber, this._model.getLineCount());\n\n\t\t\t\tthis._model.revealLineNumber(lineNumber);\n\t\t\t}\n\t\t});\n\n\t\tthis._sliderPointerMoveMonitor = new GlobalPointerMoveMonitor();\n\n\t\tthis._sliderPointerDownListener = dom.addStandardDisposableListener(this._slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (e.button === 0 && this._lastRenderData) {\n\t\t\t\tthis._startSliderDragging(e, e.pageY, this._lastRenderData.renderedLayout);\n\t\t\t}\n\t\t});\n\n\t\tthis._gestureDisposable = Gesture.addTarget(this._domNode.domNode);\n\t\tthis._sliderTouchStartListener = dom.addDisposableListener(this._domNode.domNode, EventType.Start, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this._lastRenderData) {\n\t\t\t\tthis._slider.toggleClassName('active', true);\n\t\t\t\tthis._gestureInProgress = true;\n\t\t\t\tthis.scrollDueToTouchEvent(e);\n\t\t\t}\n\t\t}, { passive: false });\n\n\t\tthis._sliderTouchMoveListener = dom.addDisposableListener(this._domNode.domNode, EventType.Change, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tif (this._lastRenderData && this._gestureInProgress) {\n\t\t\t\tthis.scrollDueToTouchEvent(e);\n\t\t\t}\n\t\t}, { passive: false });\n\n\t\tthis._sliderTouchEndListener = dom.addStandardDisposableListener(this._domNode.domNode, EventType.End, (e: GestureEvent) => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tthis._gestureInProgress = false;\n\t\t\tthis._slider.toggleClassName('active', false);\n\t\t});\n\t}\n\n\tprivate _hideSoon() {\n\t\tthis._hideDelayedScheduler.cancel();\n\t\tthis._hideDelayedScheduler.schedule();\n\t}\n\n\tprivate _hideImmediatelyIfMouseIsOutside() {\n\t\tif (this._isMouseOverMinimap) {\n\t\t\tthis._hideSoon();\n\t\t\treturn;\n\t\t}\n\t\tthis._domNode.toggleClassName('active', false);\n\t}\n\n\tprivate _startSliderDragging(e: PointerEvent, initialPosY: number, initialSliderState: MinimapLayout): void {\n\t\tif (!e.target || !(e.target instanceof Element)) {\n\t\t\treturn;\n\t\t}\n\t\tconst initialPosX = e.pageX;\n\n\t\tthis._slider.toggleClassName('active', true);\n\n\t\tconst handlePointerMove = (posy: number, posx: number) => {\n\t\t\tconst minimapPosition = dom.getDomNodePagePosition(this._domNode.domNode);\n\t\t\tconst pointerOrthogonalDelta = Math.min(\n\t\t\t\tMath.abs(posx - initialPosX),\n\t\t\t\tMath.abs(posx - minimapPosition.left),\n\t\t\t\tMath.abs(posx - minimapPosition.left - minimapPosition.width)\n\t\t\t);\n\n\t\t\tif (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n\t\t\t\t// The pointer has wondered away from the scrollbar => reset dragging\n\t\t\t\tthis._model.setScrollTop(initialSliderState.scrollTop);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst pointerDelta = posy - initialPosY;\n\t\t\tthis._model.setScrollTop(initialSliderState.getDesiredScrollTopFromDelta(pointerDelta));\n\t\t};\n\n\t\tif (e.pageY !== initialPosY) {\n\t\t\thandlePointerMove(e.pageY, initialPosX);\n\t\t}\n\n\t\tthis._sliderPointerMoveMonitor.startMonitoring(\n\t\t\te.target,\n\t\t\te.pointerId,\n\t\t\te.buttons,\n\t\t\tpointerMoveData => handlePointerMove(pointerMoveData.pageY, pointerMoveData.pageX),\n\t\t\t() => {\n\t\t\t\tthis._slider.toggleClassName('active', false);\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate scrollDueToTouchEvent(touch: GestureEvent) {\n\t\tconst startY = this._domNode.domNode.getBoundingClientRect().top;\n\t\tconst scrollTop = this._lastRenderData!.renderedLayout.getDesiredScrollTopFromTouchLocation(touch.pageY - startY);\n\t\tthis._model.setScrollTop(scrollTop);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._pointerDownListener.dispose();\n\t\tthis._sliderPointerMoveMonitor.dispose();\n\t\tthis._sliderPointerDownListener.dispose();\n\t\tthis._gestureDisposable.dispose();\n\t\tthis._sliderTouchStartListener.dispose();\n\t\tthis._sliderTouchMoveListener.dispose();\n\t\tthis._sliderTouchEndListener.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tprivate _getMinimapDomNodeClassName(): string {\n\t\tconst class_ = ['minimap'];\n\t\tif (this._model.options.showSlider === 'always') {\n\t\t\tclass_.push('slider-always');\n\t\t} else {\n\t\t\tclass_.push('slider-mouseover');\n\t\t}\n\n\t\tif (this._model.options.autohide === 'mouseover') {\n\t\t\tclass_.push('minimap-autohide-mouseover');\n\t\t} else if (this._model.options.autohide === 'scroll') {\n\t\t\tclass_.push('minimap-autohide-scroll');\n\t\t}\n\n\t\treturn class_.join(' ');\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _applyLayout(): void {\n\t\tthis._domNode.setLeft(this._model.options.minimapLeft);\n\t\tthis._domNode.setWidth(this._model.options.minimapWidth);\n\t\tthis._domNode.setHeight(this._model.options.minimapHeight);\n\t\tthis._shadow.setHeight(this._model.options.minimapHeight);\n\n\t\tthis._canvas.setWidth(this._model.options.canvasOuterWidth);\n\t\tthis._canvas.setHeight(this._model.options.canvasOuterHeight);\n\t\tthis._canvas.domNode.width = this._model.options.canvasInnerWidth;\n\t\tthis._canvas.domNode.height = this._model.options.canvasInnerHeight;\n\n\t\tthis._decorationsCanvas.setWidth(this._model.options.canvasOuterWidth);\n\t\tthis._decorationsCanvas.setHeight(this._model.options.canvasOuterHeight);\n\t\tthis._decorationsCanvas.domNode.width = this._model.options.canvasInnerWidth;\n\t\tthis._decorationsCanvas.domNode.height = this._model.options.canvasInnerHeight;\n\n\t\tthis._slider.setWidth(this._model.options.minimapWidth);\n\t}\n\n\tprivate _getBuffer(): ImageData | null {\n\t\tif (!this._buffers) {\n\t\t\tif (this._model.options.canvasInnerWidth > 0 && this._model.options.canvasInnerHeight > 0) {\n\t\t\t\tthis._buffers = new MinimapBuffers(\n\t\t\t\t\tthis._canvas.domNode.getContext('2d')!,\n\t\t\t\t\tthis._model.options.canvasInnerWidth,\n\t\t\t\t\tthis._model.options.canvasInnerHeight,\n\t\t\t\t\tthis._model.options.backgroundColor\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this._buffers ? this._buffers.getBuffer() : null;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic onDidChangeOptions(): void {\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\tthis._applyLayout();\n\t\tthis._domNode.setClassName(this._getMinimapDomNodeClassName());\n\t}\n\tpublic onSelectionChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onDecorationsChanged(): boolean {\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onFlushed(): boolean {\n\t\tthis._lastRenderData = null;\n\t\treturn true;\n\t}\n\tpublic onLinesChanged(changeFromLineNumber: number, changeCount: number): boolean {\n\t\tif (this._lastRenderData) {\n\t\t\treturn this._lastRenderData.onLinesChanged(changeFromLineNumber, changeCount);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onLinesDeleted(deleteFromLineNumber: number, deleteToLineNumber: number): boolean {\n\t\tthis._lastRenderData?.onLinesDeleted(deleteFromLineNumber, deleteToLineNumber);\n\t\treturn true;\n\t}\n\tpublic onLinesInserted(insertFromLineNumber: number, insertToLineNumber: number): boolean {\n\t\tthis._lastRenderData?.onLinesInserted(insertFromLineNumber, insertToLineNumber);\n\t\treturn true;\n\t}\n\tpublic onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (this._model.options.autohide === 'scroll' && (e.scrollTopChanged || e.scrollHeightChanged)) {\n\t\t\tthis._domNode.toggleClassName('active', true);\n\t\t\tthis._hideSoon();\n\t\t}\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onThemeChanged(): boolean {\n\t\tthis._selectionColor = this._theme.getColor(minimapSelection);\n\t\tthis._renderDecorations = true;\n\t\treturn true;\n\t}\n\tpublic onTokensChanged(ranges: { fromLineNumber: number; toLineNumber: number }[]): boolean {\n\t\tif (this._lastRenderData) {\n\t\t\treturn this._lastRenderData.onTokensChanged(ranges);\n\t\t}\n\t\treturn false;\n\t}\n\tpublic onTokensColorsChanged(): boolean {\n\t\tthis._lastRenderData = null;\n\t\tthis._buffers = null;\n\t\treturn true;\n\t}\n\tpublic onZonesChanged(): boolean {\n\t\tthis._lastRenderData = null;\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic render(renderingCtx: IMinimapRenderingContext): void {\n\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\tif (renderMinimap === RenderMinimap.None) {\n\t\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\t\tthis._sliderHorizontal.setWidth(0);\n\t\t\tthis._sliderHorizontal.setHeight(0);\n\t\t\treturn;\n\t\t}\n\t\tif (renderingCtx.scrollLeft + renderingCtx.viewportWidth >= renderingCtx.scrollWidth) {\n\t\t\tthis._shadow.setClassName('minimap-shadow-hidden');\n\t\t} else {\n\t\t\tthis._shadow.setClassName('minimap-shadow-visible');\n\t\t}\n\n\t\tconst layout = MinimapLayout.create(\n\t\t\tthis._model.options,\n\t\t\trenderingCtx.viewportStartLineNumber,\n\t\t\trenderingCtx.viewportEndLineNumber,\n\t\t\trenderingCtx.viewportStartLineNumberVerticalOffset,\n\t\t\trenderingCtx.viewportHeight,\n\t\t\trenderingCtx.viewportContainsWhitespaceGaps,\n\t\t\tthis._model.getLineCount(),\n\t\t\tthis._model.getRealLineCount(),\n\t\t\trenderingCtx.scrollTop,\n\t\t\trenderingCtx.scrollHeight,\n\t\t\tthis._lastRenderData ? this._lastRenderData.renderedLayout : null\n\t\t);\n\t\tthis._slider.setDisplay(layout.sliderNeeded ? 'block' : 'none');\n\t\tthis._slider.setTop(layout.sliderTop);\n\t\tthis._slider.setHeight(layout.sliderHeight);\n\n\t\t// Compute horizontal slider coordinates\n\t\tthis._sliderHorizontal.setLeft(0);\n\t\tthis._sliderHorizontal.setWidth(this._model.options.minimapWidth);\n\t\tthis._sliderHorizontal.setTop(0);\n\t\tthis._sliderHorizontal.setHeight(layout.sliderHeight);\n\n\t\tthis.renderDecorations(layout);\n\t\tthis._lastRenderData = this.renderLines(layout);\n\t}\n\n\tprivate renderDecorations(layout: MinimapLayout) {\n\t\tif (this._renderDecorations) {\n\t\t\tthis._renderDecorations = false;\n\t\t\tconst selections = this._model.getSelections();\n\t\t\tselections.sort(Range.compareRangesUsingStarts);\n\n\t\t\tconst decorations = this._model.getMinimapDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n\t\t\tdecorations.sort((a, b) => (a.options.zIndex || 0) - (b.options.zIndex || 0));\n\n\t\t\tconst { canvasInnerWidth, canvasInnerHeight } = this._model.options;\n\t\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\t\tconst minimapCharWidth = this._model.options.minimapCharWidth;\n\t\t\tconst tabSize = this._model.getOptions().tabSize;\n\t\t\tconst canvasContext = this._decorationsCanvas.domNode.getContext('2d')!;\n\n\t\t\tcanvasContext.clearRect(0, 0, canvasInnerWidth, canvasInnerHeight);\n\n\t\t\t// We first need to render line highlights and then render decorations on top of those.\n\t\t\t// But we need to pick a single color for each line, and use that as a line highlight.\n\t\t\t// This needs to be the color of the decoration with the highest `zIndex`, but priority\n\t\t\t// is given to the selection.\n\n\t\t\tconst highlightedLines = new ContiguousLineMap<boolean>(layout.startLineNumber, layout.endLineNumber, false);\n\t\t\tthis._renderSelectionLineHighlights(canvasContext, selections, highlightedLines, layout, minimapLineHeight);\n\t\t\tthis._renderDecorationsLineHighlights(canvasContext, decorations, highlightedLines, layout, minimapLineHeight);\n\n\t\t\tconst lineOffsetMap = new ContiguousLineMap<number[] | null>(layout.startLineNumber, layout.endLineNumber, null);\n\t\t\tthis._renderSelectionsHighlights(canvasContext, selections, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n\t\t\tthis._renderDecorationsHighlights(canvasContext, decorations, lineOffsetMap, layout, minimapLineHeight, tabSize, minimapCharWidth, canvasInnerWidth);\n\t\t\tthis._renderSectionHeaders(layout);\n\t\t}\n\t}\n\n\tprivate _renderSelectionLineHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tselections: Selection[],\n\t\thighlightedLines: ContiguousLineMap<boolean>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number\n\t): void {\n\t\tif (!this._selectionColor || this._selectionColor.isTransparent()) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvasContext.fillStyle = this._selectionColor.transparent(0.5).toString();\n\n\t\tlet y1 = 0;\n\t\tlet y2 = 0;\n\n\t\tfor (const selection of selections) {\n\t\t\tconst intersection = layout.intersectWithViewport(selection);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\thighlightedLines.set(line, true);\n\t\t\t}\n\n\t\t\tconst yy1 = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n\t\t\tconst yy2 = layout.getYForLineNumber(endLineNumber, minimapLineHeight);\n\n\t\t\tif (y2 >= yy1) {\n\t\t\t\t// merge into previous\n\t\t\t\ty2 = yy2;\n\t\t\t} else {\n\t\t\t\tif (y2 > y1) {\n\t\t\t\t\t// flush\n\t\t\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n\t\t\t\t}\n\t\t\t\ty1 = yy1;\n\t\t\t\ty2 = yy2;\n\t\t\t}\n\t\t}\n\n\t\tif (y2 > y1) {\n\t\t\t// flush\n\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y1, canvasContext.canvas.width, y2 - y1);\n\t\t}\n\t}\n\n\tprivate _renderDecorationsLineHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tdecorations: ViewModelDecoration[],\n\t\thighlightedLines: ContiguousLineMap<boolean>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number\n\t): void {\n\n\t\tconst highlightColors = new Map<string, string>();\n\n\t\t// Loop backwards to hit first decorations with higher `zIndex`\n\t\tfor (let i = decorations.length - 1; i >= 0; i--) {\n\t\t\tconst decoration = decorations[i];\n\n\t\t\tconst minimapOptions = <ModelDecorationMinimapOptions | null | undefined>decoration.options.minimap;\n\t\t\tif (!minimapOptions || minimapOptions.position !== MinimapPosition.Inline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst intersection = layout.intersectWithViewport(decoration.range);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tconst decorationColor = minimapOptions.getColor(this._theme.value);\n\t\t\tif (!decorationColor || decorationColor.isTransparent()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet highlightColor = highlightColors.get(decorationColor.toString());\n\t\t\tif (!highlightColor) {\n\t\t\t\thighlightColor = decorationColor.transparent(0.5).toString();\n\t\t\t\thighlightColors.set(decorationColor.toString(), highlightColor);\n\t\t\t}\n\n\t\t\tcanvasContext.fillStyle = highlightColor;\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tif (highlightedLines.has(line)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\thighlightedLines.set(line, true);\n\t\t\t\tconst y = layout.getYForLineNumber(startLineNumber, minimapLineHeight);\n\t\t\t\tcanvasContext.fillRect(MINIMAP_GUTTER_WIDTH, y, canvasContext.canvas.width, minimapLineHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderSelectionsHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tselections: Selection[],\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlayout: MinimapLayout,\n\t\tlineHeight: number,\n\t\ttabSize: number,\n\t\tcharacterWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\tif (!this._selectionColor || this._selectionColor.isTransparent()) {\n\t\t\treturn;\n\t\t}\n\t\tfor (const selection of selections) {\n\t\t\tconst intersection = layout.intersectWithViewport(selection);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tthis.renderDecorationOnLine(canvasContext, lineOffsetMap, selection, this._selectionColor, layout, line, lineHeight, lineHeight, tabSize, characterWidth, canvasInnerWidth);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _renderDecorationsHighlights(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tdecorations: ViewModelDecoration[],\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlayout: MinimapLayout,\n\t\tminimapLineHeight: number,\n\t\ttabSize: number,\n\t\tcharacterWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\t// Loop forwards to hit first decorations with lower `zIndex`\n\t\tfor (const decoration of decorations) {\n\n\t\t\tconst minimapOptions = <ModelDecorationMinimapOptions | null | undefined>decoration.options.minimap;\n\t\t\tif (!minimapOptions) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst intersection = layout.intersectWithViewport(decoration.range);\n\t\t\tif (!intersection) {\n\t\t\t\t// entirely outside minimap's viewport\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst [startLineNumber, endLineNumber] = intersection;\n\n\t\t\tconst decorationColor = minimapOptions.getColor(this._theme.value);\n\t\t\tif (!decorationColor || decorationColor.isTransparent()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (let line = startLineNumber; line <= endLineNumber; line++) {\n\t\t\t\tswitch (minimapOptions.position) {\n\n\t\t\t\t\tcase MinimapPosition.Inline:\n\t\t\t\t\t\tthis.renderDecorationOnLine(canvasContext, lineOffsetMap, decoration.range, decorationColor, layout, line, minimapLineHeight, minimapLineHeight, tabSize, characterWidth, canvasInnerWidth);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase MinimapPosition.Gutter: {\n\t\t\t\t\t\tconst y = layout.getYForLineNumber(line, minimapLineHeight);\n\t\t\t\t\t\tconst x = 2;\n\t\t\t\t\t\tthis.renderDecoration(canvasContext, decorationColor, x, y, GUTTER_DECORATION_WIDTH, minimapLineHeight);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderDecorationOnLine(\n\t\tcanvasContext: CanvasRenderingContext2D,\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tdecorationRange: Range,\n\t\tdecorationColor: Color | undefined,\n\t\tlayout: MinimapLayout,\n\t\tlineNumber: number,\n\t\theight: number,\n\t\tminimapLineHeight: number,\n\t\ttabSize: number,\n\t\tcharWidth: number,\n\t\tcanvasInnerWidth: number\n\t): void {\n\t\tconst y = layout.getYForLineNumber(lineNumber, minimapLineHeight);\n\n\t\t// Skip rendering the line if it's vertically outside our viewport\n\t\tif (y + height < 0 || y > this._model.options.canvasInnerHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { startLineNumber, endLineNumber } = decorationRange;\n\t\tconst startColumn = (startLineNumber === lineNumber ? decorationRange.startColumn : 1);\n\t\tconst endColumn = (endLineNumber === lineNumber ? decorationRange.endColumn : this._model.getLineMaxColumn(lineNumber));\n\n\t\tconst x1 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, startColumn, tabSize, charWidth, canvasInnerWidth);\n\t\tconst x2 = this.getXOffsetForPosition(lineOffsetMap, lineNumber, endColumn, tabSize, charWidth, canvasInnerWidth);\n\n\t\tthis.renderDecoration(canvasContext, decorationColor, x1, y, x2 - x1, height);\n\t}\n\n\tprivate getXOffsetForPosition(\n\t\tlineOffsetMap: ContiguousLineMap<number[] | null>,\n\t\tlineNumber: number,\n\t\tcolumn: number,\n\t\ttabSize: number,\n\t\tcharWidth: number,\n\t\tcanvasInnerWidth: number\n\t): number {\n\t\tif (column === 1) {\n\t\t\treturn MINIMAP_GUTTER_WIDTH;\n\t\t}\n\n\t\tconst minimumXOffset = (column - 1) * charWidth;\n\t\tif (minimumXOffset >= canvasInnerWidth) {\n\t\t\t// there is no need to look at actual characters,\n\t\t\t// as this column is certainly after the minimap width\n\t\t\treturn canvasInnerWidth;\n\t\t}\n\n\t\t// Cache line offset data so that it is only read once per line\n\t\tlet lineIndexToXOffset = lineOffsetMap.get(lineNumber);\n\t\tif (!lineIndexToXOffset) {\n\t\t\tconst lineData = this._model.getLineContent(lineNumber);\n\t\t\tlineIndexToXOffset = [MINIMAP_GUTTER_WIDTH];\n\t\t\tlet prevx = MINIMAP_GUTTER_WIDTH;\n\t\t\tfor (let i = 1; i < lineData.length + 1; i++) {\n\t\t\t\tconst charCode = lineData.charCodeAt(i - 1);\n\t\t\t\tconst dx = charCode === CharCode.Tab\n\t\t\t\t\t? tabSize * charWidth\n\t\t\t\t\t: strings.isFullWidthCharacter(charCode)\n\t\t\t\t\t\t? 2 * charWidth\n\t\t\t\t\t\t: charWidth;\n\n\t\t\t\tconst x = prevx + dx;\n\t\t\t\tif (x >= canvasInnerWidth) {\n\t\t\t\t\t// no need to keep on going, as we've hit the canvas width\n\t\t\t\t\tlineIndexToXOffset[i] = canvasInnerWidth;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlineIndexToXOffset[i] = x;\n\t\t\t\tprevx = x;\n\t\t\t}\n\n\t\t\tlineOffsetMap.set(lineNumber, lineIndexToXOffset);\n\t\t}\n\n\t\tif (column - 1 < lineIndexToXOffset.length) {\n\t\t\treturn lineIndexToXOffset[column - 1];\n\t\t}\n\t\t// goes over the canvas width\n\t\treturn canvasInnerWidth;\n\t}\n\n\tprivate renderDecoration(canvasContext: CanvasRenderingContext2D, decorationColor: Color | undefined, x: number, y: number, width: number, height: number) {\n\t\tcanvasContext.fillStyle = decorationColor && decorationColor.toString() || '';\n\t\tcanvasContext.fillRect(x, y, width, height);\n\t}\n\n\tprivate _renderSectionHeaders(layout: MinimapLayout) {\n\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\t\tconst sectionHeaderFontSize = this._model.options.sectionHeaderFontSize;\n\t\tconst sectionHeaderLetterSpacing = this._model.options.sectionHeaderLetterSpacing;\n\t\tconst backgroundFillHeight = sectionHeaderFontSize * 1.5;\n\t\tconst { canvasInnerWidth } = this._model.options;\n\n\t\tconst backgroundColor = this._model.options.backgroundColor;\n\t\tconst backgroundFill = `rgb(${backgroundColor.r} ${backgroundColor.g} ${backgroundColor.b} / .7)`;\n\t\tconst foregroundColor = this._model.options.sectionHeaderFontColor;\n\t\tconst foregroundFill = `rgb(${foregroundColor.r} ${foregroundColor.g} ${foregroundColor.b})`;\n\t\tconst separatorStroke = foregroundFill;\n\n\t\tconst canvasContext = this._decorationsCanvas.domNode.getContext('2d')!;\n\t\tcanvasContext.letterSpacing = sectionHeaderLetterSpacing + 'px';\n\t\tcanvasContext.font = '500 ' + sectionHeaderFontSize + 'px ' + this._model.options.sectionHeaderFontFamily;\n\t\tcanvasContext.strokeStyle = separatorStroke;\n\t\tcanvasContext.lineWidth = 0.4;\n\n\t\tconst decorations = this._model.getSectionHeaderDecorationsInViewport(layout.startLineNumber, layout.endLineNumber);\n\t\tdecorations.sort((a, b) => a.range.startLineNumber - b.range.startLineNumber);\n\n\t\tconst fitWidth = InnerMinimap._fitSectionHeader.bind(null, canvasContext,\n\t\t\tcanvasInnerWidth - MINIMAP_GUTTER_WIDTH);\n\n\t\tfor (const decoration of decorations) {\n\t\t\tconst y = layout.getYForLineNumber(decoration.range.startLineNumber, minimapLineHeight) + sectionHeaderFontSize;\n\t\t\tconst backgroundFillY = y - sectionHeaderFontSize;\n\t\t\tconst separatorY = backgroundFillY + 2;\n\t\t\tconst headerText = this._model.getSectionHeaderText(decoration, fitWidth);\n\n\t\t\tInnerMinimap._renderSectionLabel(\n\t\t\t\tcanvasContext,\n\t\t\t\theaderText,\n\t\t\t\tdecoration.options.minimap?.sectionHeaderStyle === MinimapSectionHeaderStyle.Underlined,\n\t\t\t\tbackgroundFill,\n\t\t\t\tforegroundFill,\n\t\t\t\tcanvasInnerWidth,\n\t\t\t\tbackgroundFillY,\n\t\t\t\tbackgroundFillHeight,\n\t\t\t\ty,\n\t\t\t\tseparatorY);\n\t\t}\n\t}\n\n\tprivate static _fitSectionHeader(\n\t\ttarget: CanvasRenderingContext2D,\n\t\tmaxWidth: number,\n\t\theaderText: string,\n\t): string {\n\t\tif (!headerText) {\n\t\t\treturn headerText;\n\t\t}\n\n\t\tconst ellipsis = '…';\n\t\tconst width = target.measureText(headerText).width;\n\t\tconst ellipsisWidth = target.measureText(ellipsis).width;\n\n\t\tif (width <= maxWidth || width <= ellipsisWidth) {\n\t\t\treturn headerText;\n\t\t}\n\n\t\tconst len = headerText.length;\n\t\tconst averageCharWidth = width / headerText.length;\n\t\tconst maxCharCount = Math.floor((maxWidth - ellipsisWidth) / averageCharWidth) - 1;\n\n\t\t// Find a halfway point that isn't after whitespace\n\t\tlet halfCharCount = Math.ceil(maxCharCount / 2);\n\t\twhile (halfCharCount > 0 && /\\s/.test(headerText[halfCharCount - 1])) {\n\t\t\t--halfCharCount;\n\t\t}\n\n\t\t// Split with ellipsis\n\t\treturn headerText.substring(0, halfCharCount)\n\t\t\t+ ellipsis + headerText.substring(len - (maxCharCount - halfCharCount));\n\t}\n\n\tprivate static _renderSectionLabel(\n\t\ttarget: CanvasRenderingContext2D,\n\t\theaderText: string | null,\n\t\thasSeparatorLine: boolean,\n\t\tbackgroundFill: string,\n\t\tforegroundFill: string,\n\t\tminimapWidth: number,\n\t\tbackgroundFillY: number,\n\t\tbackgroundFillHeight: number,\n\t\ttextY: number,\n\t\tseparatorY: number\n\t): void {\n\t\tif (headerText) {\n\t\t\ttarget.fillStyle = backgroundFill;\n\t\t\ttarget.fillRect(0, backgroundFillY, minimapWidth, backgroundFillHeight);\n\n\t\t\ttarget.fillStyle = foregroundFill;\n\t\t\ttarget.fillText(headerText, MINIMAP_GUTTER_WIDTH, textY);\n\t\t}\n\n\t\tif (hasSeparatorLine) {\n\t\t\ttarget.beginPath();\n\t\t\ttarget.moveTo(0, separatorY);\n\t\t\ttarget.lineTo(minimapWidth, separatorY);\n\t\t\ttarget.closePath();\n\t\t\ttarget.stroke();\n\t\t}\n\t}\n\n\tprivate renderLines(layout: MinimapLayout): RenderData | null {\n\t\tconst startLineNumber = layout.startLineNumber;\n\t\tconst endLineNumber = layout.endLineNumber;\n\t\tconst minimapLineHeight = this._model.options.minimapLineHeight;\n\n\t\t// Check if nothing changed w.r.t. lines from last frame\n\t\tif (this._lastRenderData && this._lastRenderData.linesEquals(layout)) {\n\t\t\tconst _lastData = this._lastRenderData._get();\n\t\t\t// Nice!! Nothing changed from last frame\n\t\t\treturn new RenderData(layout, _lastData.imageData, _lastData.lines);\n\t\t}\n\n\t\t// Oh well!! We need to repaint some lines...\n\n\t\tconst imageData = this._getBuffer();\n\t\tif (!imageData) {\n\t\t\t// 0 width or 0 height canvas, nothing to do\n\t\t\treturn null;\n\t\t}\n\n\t\t// Render untouched lines by using last rendered data.\n\t\tconst [_dirtyY1, _dirtyY2, needed] = InnerMinimap._renderUntouchedLines(\n\t\t\timageData,\n\t\t\tlayout.topPaddingLineCount,\n\t\t\tstartLineNumber,\n\t\t\tendLineNumber,\n\t\t\tminimapLineHeight,\n\t\t\tthis._lastRenderData\n\t\t);\n\n\t\t// Fetch rendering info from view model for rest of lines that need rendering.\n\t\tconst lineInfo = this._model.getMinimapLinesRenderingData(startLineNumber, endLineNumber, needed);\n\t\tconst tabSize = this._model.getOptions().tabSize;\n\t\tconst defaultBackground = this._model.options.defaultBackgroundColor;\n\t\tconst background = this._model.options.backgroundColor;\n\t\tconst foregroundAlpha = this._model.options.foregroundAlpha;\n\t\tconst tokensColorTracker = this._model.tokensColorTracker;\n\t\tconst useLighterFont = tokensColorTracker.backgroundIsLight();\n\t\tconst renderMinimap = this._model.options.renderMinimap;\n\t\tconst charRenderer = this._model.options.charRenderer();\n\t\tconst fontScale = this._model.options.fontScale;\n\t\tconst minimapCharWidth = this._model.options.minimapCharWidth;\n\n\t\tconst baseCharHeight = (renderMinimap === RenderMinimap.Text ? Constants.BASE_CHAR_HEIGHT : Constants.BASE_CHAR_HEIGHT + 1);\n\t\tconst renderMinimapLineHeight = baseCharHeight * fontScale;\n\t\tconst innerLinePadding = (minimapLineHeight > renderMinimapLineHeight ? Math.floor((minimapLineHeight - renderMinimapLineHeight) / 2) : 0);\n\n\t\t// Render the rest of lines\n\t\tconst backgroundA = background.a / 255;\n\t\tconst renderBackground = new RGBA8(\n\t\t\tMath.round((background.r - defaultBackground.r) * backgroundA + defaultBackground.r),\n\t\t\tMath.round((background.g - defaultBackground.g) * backgroundA + defaultBackground.g),\n\t\t\tMath.round((background.b - defaultBackground.b) * backgroundA + defaultBackground.b),\n\t\t\t255\n\t\t);\n\t\tlet dy = layout.topPaddingLineCount * minimapLineHeight;\n\t\tconst renderedLines: MinimapLine[] = [];\n\t\tfor (let lineIndex = 0, lineCount = endLineNumber - startLineNumber + 1; lineIndex < lineCount; lineIndex++) {\n\t\t\tif (needed[lineIndex]) {\n\t\t\t\tInnerMinimap._renderLine(\n\t\t\t\t\timageData,\n\t\t\t\t\trenderBackground,\n\t\t\t\t\tbackground.a,\n\t\t\t\t\tuseLighterFont,\n\t\t\t\t\trenderMinimap,\n\t\t\t\t\tminimapCharWidth,\n\t\t\t\t\ttokensColorTracker,\n\t\t\t\t\tforegroundAlpha,\n\t\t\t\t\tcharRenderer,\n\t\t\t\t\tdy,\n\t\t\t\t\tinnerLinePadding,\n\t\t\t\t\ttabSize,\n\t\t\t\t\tlineInfo[lineIndex]!,\n\t\t\t\t\tfontScale,\n\t\t\t\t\tminimapLineHeight\n\t\t\t\t);\n\t\t\t}\n\t\t\trenderedLines[lineIndex] = new MinimapLine(dy);\n\t\t\tdy += minimapLineHeight;\n\t\t}\n\n\t\tconst dirtyY1 = (_dirtyY1 === -1 ? 0 : _dirtyY1);\n\t\tconst dirtyY2 = (_dirtyY2 === -1 ? imageData.height : _dirtyY2);\n\t\tconst dirtyHeight = dirtyY2 - dirtyY1;\n\n\t\t// Finally, paint to the canvas\n\t\tconst ctx = this._canvas.domNode.getContext('2d')!;\n\t\tctx.putImageData(imageData, 0, 0, 0, dirtyY1, imageData.width, dirtyHeight);\n\n\t\t// Save rendered data for reuse on next frame if possible\n\t\treturn new RenderData(\n\t\t\tlayout,\n\t\t\timageData,\n\t\t\trenderedLines\n\t\t);\n\t}\n\n\tprivate static _renderUntouchedLines(\n\t\ttarget: ImageData,\n\t\ttopPaddingLineCount: number,\n\t\tstartLineNumber: number,\n\t\tendLineNumber: number,\n\t\tminimapLineHeight: number,\n\t\tlastRenderData: RenderData | null,\n\t): [number, number, boolean[]] {\n\n\t\tconst needed: boolean[] = [];\n\t\tif (!lastRenderData) {\n\t\t\tfor (let i = 0, len = endLineNumber - startLineNumber + 1; i < len; i++) {\n\t\t\t\tneeded[i] = true;\n\t\t\t}\n\t\t\treturn [-1, -1, needed];\n\t\t}\n\n\t\tconst _lastData = lastRenderData._get();\n\t\tconst lastTargetData = _lastData.imageData.data;\n\t\tconst lastStartLineNumber = _lastData.rendLineNumberStart;\n\t\tconst lastLines = _lastData.lines;\n\t\tconst lastLinesLength = lastLines.length;\n\t\tconst WIDTH = target.width;\n\t\tconst targetData = target.data;\n\n\t\tconst maxDestPixel = (endLineNumber - startLineNumber + 1) * minimapLineHeight * WIDTH * 4;\n\t\tlet dirtyPixel1 = -1; // the pixel offset up to which all the data is equal to the prev frame\n\t\tlet dirtyPixel2 = -1; // the pixel offset after which all the data is equal to the prev frame\n\n\t\tlet copySourceStart = -1;\n\t\tlet copySourceEnd = -1;\n\t\tlet copyDestStart = -1;\n\t\tlet copyDestEnd = -1;\n\n\t\tlet dest_dy = topPaddingLineCount * minimapLineHeight;\n\t\tfor (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\t\tconst lastLineIndex = lineNumber - lastStartLineNumber;\n\t\t\tconst source_dy = (lastLineIndex >= 0 && lastLineIndex < lastLinesLength ? lastLines[lastLineIndex].dy : -1);\n\n\t\t\tif (source_dy === -1) {\n\t\t\t\tneeded[lineIndex] = true;\n\t\t\t\tdest_dy += minimapLineHeight;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst sourceStart = source_dy * WIDTH * 4;\n\t\t\tconst sourceEnd = (source_dy + minimapLineHeight) * WIDTH * 4;\n\t\t\tconst destStart = dest_dy * WIDTH * 4;\n\t\t\tconst destEnd = (dest_dy + minimapLineHeight) * WIDTH * 4;\n\n\t\t\tif (copySourceEnd === sourceStart && copyDestEnd === destStart) {\n\t\t\t\t// contiguous zone => extend copy request\n\t\t\t\tcopySourceEnd = sourceEnd;\n\t\t\t\tcopyDestEnd = destEnd;\n\t\t\t} else {\n\t\t\t\tif (copySourceStart !== -1) {\n\t\t\t\t\t// flush existing copy request\n\t\t\t\t\ttargetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\t\t\t\t\tif (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n\t\t\t\t\t\tdirtyPixel1 = copySourceEnd;\n\t\t\t\t\t}\n\t\t\t\t\tif (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n\t\t\t\t\t\tdirtyPixel2 = copySourceStart;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcopySourceStart = sourceStart;\n\t\t\t\tcopySourceEnd = sourceEnd;\n\t\t\t\tcopyDestStart = destStart;\n\t\t\t\tcopyDestEnd = destEnd;\n\t\t\t}\n\n\t\t\tneeded[lineIndex] = false;\n\t\t\tdest_dy += minimapLineHeight;\n\t\t}\n\n\t\tif (copySourceStart !== -1) {\n\t\t\t// flush existing copy request\n\t\t\ttargetData.set(lastTargetData.subarray(copySourceStart, copySourceEnd), copyDestStart);\n\t\t\tif (dirtyPixel1 === -1 && copySourceStart === 0 && copySourceStart === copyDestStart) {\n\t\t\t\tdirtyPixel1 = copySourceEnd;\n\t\t\t}\n\t\t\tif (dirtyPixel2 === -1 && copySourceEnd === maxDestPixel && copySourceStart === copyDestStart) {\n\t\t\t\tdirtyPixel2 = copySourceStart;\n\t\t\t}\n\t\t}\n\n\t\tconst dirtyY1 = (dirtyPixel1 === -1 ? -1 : dirtyPixel1 / (WIDTH * 4));\n\t\tconst dirtyY2 = (dirtyPixel2 === -1 ? -1 : dirtyPixel2 / (WIDTH * 4));\n\n\t\treturn [dirtyY1, dirtyY2, needed];\n\t}\n\n\tprivate static _renderLine(\n\t\ttarget: ImageData,\n\t\tbackgroundColor: RGBA8,\n\t\tbackgroundAlpha: number,\n\t\tuseLighterFont: boolean,\n\t\trenderMinimap: RenderMinimap,\n\t\tcharWidth: number,\n\t\tcolorTracker: MinimapTokensColorTracker,\n\t\tforegroundAlpha: number,\n\t\tminimapCharRenderer: MinimapCharRenderer,\n\t\tdy: number,\n\t\tinnerLinePadding: number,\n\t\ttabSize: number,\n\t\tlineData: ViewLineData,\n\t\tfontScale: number,\n\t\tminimapLineHeight: number\n\t): void {\n\t\tconst content = lineData.content;\n\t\tconst tokens = lineData.tokens;\n\t\tconst maxDx = target.width - charWidth;\n\t\tconst force1pxHeight = (minimapLineHeight === 1);\n\n\t\tlet dx = MINIMAP_GUTTER_WIDTH;\n\t\tlet charIndex = 0;\n\t\tlet tabsCharDelta = 0;\n\n\t\tfor (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n\t\t\tconst tokenEndIndex = tokens.getEndOffset(tokenIndex);\n\t\t\tconst tokenColorId = tokens.getForeground(tokenIndex);\n\t\t\tconst tokenColor = colorTracker.getColor(tokenColorId);\n\n\t\t\tfor (; charIndex < tokenEndIndex; charIndex++) {\n\t\t\t\tif (dx > maxDx) {\n\t\t\t\t\t// hit edge of minimap\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst charCode = content.charCodeAt(charIndex);\n\n\t\t\t\tif (charCode === CharCode.Tab) {\n\t\t\t\t\tconst insertSpacesCount = tabSize - (charIndex + tabsCharDelta) % tabSize;\n\t\t\t\t\ttabsCharDelta += insertSpacesCount - 1;\n\t\t\t\t\t// No need to render anything since tab is invisible\n\t\t\t\t\tdx += insertSpacesCount * charWidth;\n\t\t\t\t} else if (charCode === CharCode.Space) {\n\t\t\t\t\t// No need to render anything since space is invisible\n\t\t\t\t\tdx += charWidth;\n\t\t\t\t} else {\n\t\t\t\t\t// Render twice for a full width character\n\t\t\t\t\tconst count = strings.isFullWidthCharacter(charCode) ? 2 : 1;\n\n\t\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\t\tif (renderMinimap === RenderMinimap.Blocks) {\n\t\t\t\t\t\t\tminimapCharRenderer.blockRenderChar(target, dx, dy + innerLinePadding, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, force1pxHeight);\n\t\t\t\t\t\t} else { // RenderMinimap.Text\n\t\t\t\t\t\t\tminimapCharRenderer.renderChar(target, dx, dy + innerLinePadding, charCode, tokenColor, foregroundAlpha, backgroundColor, backgroundAlpha, fontScale, useLighterFont, force1pxHeight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdx += charWidth;\n\n\t\t\t\t\t\tif (dx > maxDx) {\n\t\t\t\t\t\t\t// hit edge of minimap\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass ContiguousLineMap<T> {\n\n\tprivate readonly _startLineNumber: number;\n\tprivate readonly _endLineNumber: number;\n\tprivate readonly _defaultValue: T;\n\tprivate readonly _values: T[];\n\n\tconstructor(startLineNumber: number, endLineNumber: number, defaultValue: T) {\n\t\tthis._startLineNumber = startLineNumber;\n\t\tthis._endLineNumber = endLineNumber;\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._values = [];\n\t\tfor (let i = 0, count = this._endLineNumber - this._startLineNumber + 1; i < count; i++) {\n\t\t\tthis._values[i] = defaultValue;\n\t\t}\n\t}\n\n\tpublic has(lineNumber: number): boolean {\n\t\treturn (this.get(lineNumber) !== this._defaultValue);\n\t}\n\n\tpublic set(lineNumber: number, value: T): void {\n\t\tif (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n\t\t\treturn;\n\t\t}\n\t\tthis._values[lineNumber - this._startLineNumber] = value;\n\t}\n\n\tpublic get(lineNumber: number): T {\n\t\tif (lineNumber < this._startLineNumber || lineNumber > this._endLineNumber) {\n\t\t\treturn this._defaultValue;\n\t\t}\n\t\treturn this._values[lineNumber - this._startLineNumber];\n\t}\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5739, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overlayWidgets/vs/editor/browser/viewParts/overlayWidgets/overlayWidgets.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './overlayWidgets.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverlayWidget, IOverlayWidgetPosition, IOverlayWidgetPositionCoordinates, OverlayWidgetPositionPreference } from '../../editorBrowser.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport * as dom from '../../../../base/browser/dom.js';\n\n\ninterface IWidgetData {\n\twidget: IOverlayWidget;\n\tpreference: OverlayWidgetPositionPreference | IOverlayWidgetPositionCoordinates | null;\n\tstack?: number;\n\tdomNode: FastDomNode<HTMLElement>;\n}\n\ninterface IWidgetMap {\n\t[key: string]: IWidgetData;\n}\n\n/*\n * This view part for rendering the overlay widgets, which are\n * floating widgets positioned based on the editor's viewport,\n * such as the find widget.\n */\nexport class ViewOverlayWidgets extends ViewPart {\n\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate _widgets: IWidgetMap;\n\tprivate _viewDomNodeRect: dom.IDomNodePagePosition;\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tpublic readonly overflowingOverlayWidgetsDomNode: FastDomNode<HTMLElement>;\n\tprivate _verticalScrollbarWidth: number;\n\tprivate _minimapWidth: number;\n\tprivate _horizontalScrollbarHeight: number;\n\tprivate _editorHeight: number;\n\tprivate _editorWidth: number;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._viewDomNode = viewDomNode;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._widgets = {};\n\t\tthis._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = layoutInfo.minimap.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = layoutInfo.height;\n\t\tthis._editorWidth = layoutInfo.width;\n\t\tthis._viewDomNodeRect = { top: 0, left: 0, width: 0, height: 0 };\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.OverlayWidgets);\n\t\tthis._domNode.setClassName('overlayWidgets');\n\n\t\tthis.overflowingOverlayWidgetsDomNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.overflowingOverlayWidgetsDomNode, PartFingerprint.OverflowingOverlayWidgets);\n\t\tthis.overflowingOverlayWidgetsDomNode.setClassName('overflowingOverlayWidgets');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = layoutInfo.minimap.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = layoutInfo.height;\n\t\tthis._editorWidth = layoutInfo.width;\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _widgetCanOverflow(widget: IOverlayWidget): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst allowOverflow = options.get(EditorOption.allowOverflow);\n\t\treturn (widget.allowEditorOverflow || false) && allowOverflow;\n\t}\n\n\tpublic addWidget(widget: IOverlayWidget): void {\n\t\tconst domNode = createFastDomNode(widget.getDomNode());\n\n\t\tthis._widgets[widget.getId()] = {\n\t\t\twidget: widget,\n\t\t\tpreference: null,\n\t\t\tdomNode: domNode\n\t\t};\n\n\t\t// This is sync because a widget wants to be in the dom\n\t\tdomNode.setPosition('absolute');\n\t\tdomNode.setAttribute('widgetId', widget.getId());\n\n\t\tif (this._widgetCanOverflow(widget)) {\n\t\t\tthis.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n\t\t} else {\n\t\t\tthis._domNode.appendChild(domNode);\n\t\t}\n\n\t\tthis.setShouldRender();\n\t\tthis._updateMaxMinWidth();\n\t}\n\n\tpublic setWidgetPosition(widget: IOverlayWidget, position: IOverlayWidgetPosition | null): boolean {\n\t\tconst widgetData = this._widgets[widget.getId()];\n\t\tconst preference = position ? position.preference : null;\n\t\tconst stack = position?.stackOridinal;\n\t\tif (widgetData.preference === preference && widgetData.stack === stack) {\n\t\t\tthis._updateMaxMinWidth();\n\t\t\treturn false;\n\t\t}\n\n\t\twidgetData.preference = preference;\n\t\twidgetData.stack = stack;\n\t\tthis.setShouldRender();\n\t\tthis._updateMaxMinWidth();\n\n\t\treturn true;\n\t}\n\n\tpublic removeWidget(widget: IOverlayWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst widgetData = this._widgets[widgetId];\n\t\t\tconst domNode = widgetData.domNode.domNode;\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tdomNode.remove();\n\t\t\tthis.setShouldRender();\n\t\t\tthis._updateMaxMinWidth();\n\t\t}\n\t}\n\n\tprivate _updateMaxMinWidth(): void {\n\t\tlet maxMinWidth = 0;\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tconst widget = this._widgets[widgetId];\n\t\t\tconst widgetMinWidthInPx = widget.widget.getMinContentWidthInPx?.();\n\t\t\tif (typeof widgetMinWidthInPx !== 'undefined') {\n\t\t\t\tmaxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n\t\t\t}\n\t\t}\n\t\tthis._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n\t}\n\n\tprivate _renderWidget(widgetData: IWidgetData, stackCoordinates: number[]): void {\n\t\tconst domNode = widgetData.domNode;\n\n\t\tif (widgetData.preference === null) {\n\t\t\tdomNode.setTop('');\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxRight = (2 * this._verticalScrollbarWidth) + this._minimapWidth;\n\t\tif (widgetData.preference === OverlayWidgetPositionPreference.TOP_RIGHT_CORNER || widgetData.preference === OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER) {\n\t\t\tif (widgetData.preference === OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER) {\n\t\t\t\tconst widgetHeight = domNode.domNode.clientHeight;\n\t\t\t\tdomNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(0);\n\t\t\t}\n\n\t\t\tif (widgetData.stack !== undefined) {\n\t\t\t\tdomNode.setTop(stackCoordinates[widgetData.preference]);\n\t\t\t\tstackCoordinates[widgetData.preference] += domNode.domNode.clientWidth;\n\t\t\t} else {\n\t\t\t\tdomNode.setRight(maxRight);\n\t\t\t}\n\t\t} else if (widgetData.preference === OverlayWidgetPositionPreference.TOP_CENTER) {\n\t\t\tdomNode.domNode.style.right = '50%';\n\t\t\tif (widgetData.stack !== undefined) {\n\t\t\t\tdomNode.setTop(stackCoordinates[OverlayWidgetPositionPreference.TOP_CENTER]);\n\t\t\t\tstackCoordinates[OverlayWidgetPositionPreference.TOP_CENTER] += domNode.domNode.clientHeight;\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(0);\n\t\t\t}\n\t\t} else {\n\t\t\tconst { top, left } = widgetData.preference;\n\t\t\tconst fixedOverflowWidgets = this._context.configuration.options.get(EditorOption.fixedOverflowWidgets);\n\t\t\tif (fixedOverflowWidgets && this._widgetCanOverflow(widgetData.widget)) {\n\t\t\t\t// top, left are computed relative to the editor and we need them relative to the page\n\t\t\t\tconst editorBoundingBox = this._viewDomNodeRect;\n\t\t\t\tdomNode.setTop(top + editorBoundingBox.top);\n\t\t\t\tdomNode.setLeft(left + editorBoundingBox.left);\n\t\t\t\tdomNode.setPosition('fixed');\n\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(top);\n\t\t\t\tdomNode.setLeft(left);\n\t\t\t\tdomNode.setPosition('absolute');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._viewDomNodeRect = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._editorWidth);\n\n\t\tconst keys = Object.keys(this._widgets);\n\t\tconst stackCoordinates = Array.from({ length: OverlayWidgetPositionPreference.TOP_CENTER + 1 }, () => 0);\n\t\tkeys.sort((a, b) => (this._widgets[a].stack || 0) - (this._widgets[b].stack || 0));\n\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tthis._renderWidget(this._widgets[widgetId], stackCoordinates);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './overlayWidgets.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverlayWidget, IOverlayWidgetPosition, IOverlayWidgetPositionCoordinates, OverlayWidgetPositionPreference } from '../../editorBrowser.js';\nimport { PartFingerprint, PartFingerprints, ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport * as dom from '../../../../base/browser/dom.js';\n\n\ninterface IWidgetData {\n\twidget: IOverlayWidget;\n\tpreference: OverlayWidgetPositionPreference | IOverlayWidgetPositionCoordinates | null;\n\tstack?: number;\n\tdomNode: FastDomNode<HTMLElement>;\n}\n\ninterface IWidgetMap {\n\t[key: string]: IWidgetData;\n}\n\n/*\n * This view part for rendering the overlay widgets, which are\n * floating widgets positioned based on the editor's viewport,\n * such as the find widget.\n */\nexport class ViewOverlayWidgets extends ViewPart {\n\n\tprivate readonly _viewDomNode: FastDomNode<HTMLElement>;\n\tprivate _widgets: IWidgetMap;\n\tprivate _viewDomNodeRect: dom.IDomNodePagePosition;\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tpublic readonly overflowingOverlayWidgetsDomNode: FastDomNode<HTMLElement>;\n\tprivate _verticalScrollbarWidth: number;\n\tprivate _minimapWidth: number;\n\tprivate _horizontalScrollbarHeight: number;\n\tprivate _editorHeight: number;\n\tprivate _editorWidth: number;\n\n\tconstructor(context: ViewContext, viewDomNode: FastDomNode<HTMLElement>) {\n\t\tsuper(context);\n\t\tthis._viewDomNode = viewDomNode;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._widgets = {};\n\t\tthis._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = layoutInfo.minimap.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = layoutInfo.height;\n\t\tthis._editorWidth = layoutInfo.width;\n\t\tthis._viewDomNodeRect = { top: 0, left: 0, width: 0, height: 0 };\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this._domNode, PartFingerprint.OverlayWidgets);\n\t\tthis._domNode.setClassName('overlayWidgets');\n\n\t\tthis.overflowingOverlayWidgetsDomNode = createFastDomNode(document.createElement('div'));\n\t\tPartFingerprints.write(this.overflowingOverlayWidgetsDomNode, PartFingerprint.OverflowingOverlayWidgets);\n\t\tthis.overflowingOverlayWidgetsDomNode.setClassName('overflowingOverlayWidgets');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._widgets = {};\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._verticalScrollbarWidth = layoutInfo.verticalScrollbarWidth;\n\t\tthis._minimapWidth = layoutInfo.minimap.minimapWidth;\n\t\tthis._horizontalScrollbarHeight = layoutInfo.horizontalScrollbarHeight;\n\t\tthis._editorHeight = layoutInfo.height;\n\t\tthis._editorWidth = layoutInfo.width;\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _widgetCanOverflow(widget: IOverlayWidget): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst allowOverflow = options.get(EditorOption.allowOverflow);\n\t\treturn (widget.allowEditorOverflow || false) && allowOverflow;\n\t}\n\n\tpublic addWidget(widget: IOverlayWidget): void {\n\t\tconst domNode = createFastDomNode(widget.getDomNode());\n\n\t\tthis._widgets[widget.getId()] = {\n\t\t\twidget: widget,\n\t\t\tpreference: null,\n\t\t\tdomNode: domNode\n\t\t};\n\n\t\t// This is sync because a widget wants to be in the dom\n\t\tdomNode.setPosition('absolute');\n\t\tdomNode.setAttribute('widgetId', widget.getId());\n\n\t\tif (this._widgetCanOverflow(widget)) {\n\t\t\tthis.overflowingOverlayWidgetsDomNode.appendChild(domNode);\n\t\t} else {\n\t\t\tthis._domNode.appendChild(domNode);\n\t\t}\n\n\t\tthis.setShouldRender();\n\t\tthis._updateMaxMinWidth();\n\t}\n\n\tpublic setWidgetPosition(widget: IOverlayWidget, position: IOverlayWidgetPosition | null): boolean {\n\t\tconst widgetData = this._widgets[widget.getId()];\n\t\tconst preference = position ? position.preference : null;\n\t\tconst stack = position?.stackOridinal;\n\t\tif (widgetData.preference === preference && widgetData.stack === stack) {\n\t\t\tthis._updateMaxMinWidth();\n\t\t\treturn false;\n\t\t}\n\n\t\twidgetData.preference = preference;\n\t\twidgetData.stack = stack;\n\t\tthis.setShouldRender();\n\t\tthis._updateMaxMinWidth();\n\n\t\treturn true;\n\t}\n\n\tpublic removeWidget(widget: IOverlayWidget): void {\n\t\tconst widgetId = widget.getId();\n\t\tif (this._widgets.hasOwnProperty(widgetId)) {\n\t\t\tconst widgetData = this._widgets[widgetId];\n\t\t\tconst domNode = widgetData.domNode.domNode;\n\t\t\tdelete this._widgets[widgetId];\n\n\t\t\tdomNode.remove();\n\t\t\tthis.setShouldRender();\n\t\t\tthis._updateMaxMinWidth();\n\t\t}\n\t}\n\n\tprivate _updateMaxMinWidth(): void {\n\t\tlet maxMinWidth = 0;\n\t\tconst keys = Object.keys(this._widgets);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tconst widget = this._widgets[widgetId];\n\t\t\tconst widgetMinWidthInPx = widget.widget.getMinContentWidthInPx?.();\n\t\t\tif (typeof widgetMinWidthInPx !== 'undefined') {\n\t\t\t\tmaxMinWidth = Math.max(maxMinWidth, widgetMinWidthInPx);\n\t\t\t}\n\t\t}\n\t\tthis._context.viewLayout.setOverlayWidgetsMinWidth(maxMinWidth);\n\t}\n\n\tprivate _renderWidget(widgetData: IWidgetData, stackCoordinates: number[]): void {\n\t\tconst domNode = widgetData.domNode;\n\n\t\tif (widgetData.preference === null) {\n\t\t\tdomNode.setTop('');\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxRight = (2 * this._verticalScrollbarWidth) + this._minimapWidth;\n\t\tif (widgetData.preference === OverlayWidgetPositionPreference.TOP_RIGHT_CORNER || widgetData.preference === OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER) {\n\t\t\tif (widgetData.preference === OverlayWidgetPositionPreference.BOTTOM_RIGHT_CORNER) {\n\t\t\t\tconst widgetHeight = domNode.domNode.clientHeight;\n\t\t\t\tdomNode.setTop((this._editorHeight - widgetHeight - 2 * this._horizontalScrollbarHeight));\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(0);\n\t\t\t}\n\n\t\t\tif (widgetData.stack !== undefined) {\n\t\t\t\tdomNode.setTop(stackCoordinates[widgetData.preference]);\n\t\t\t\tstackCoordinates[widgetData.preference] += domNode.domNode.clientWidth;\n\t\t\t} else {\n\t\t\t\tdomNode.setRight(maxRight);\n\t\t\t}\n\t\t} else if (widgetData.preference === OverlayWidgetPositionPreference.TOP_CENTER) {\n\t\t\tdomNode.domNode.style.right = '50%';\n\t\t\tif (widgetData.stack !== undefined) {\n\t\t\t\tdomNode.setTop(stackCoordinates[OverlayWidgetPositionPreference.TOP_CENTER]);\n\t\t\t\tstackCoordinates[OverlayWidgetPositionPreference.TOP_CENTER] += domNode.domNode.clientHeight;\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(0);\n\t\t\t}\n\t\t} else {\n\t\t\tconst { top, left } = widgetData.preference;\n\t\t\tconst fixedOverflowWidgets = this._context.configuration.options.get(EditorOption.fixedOverflowWidgets);\n\t\t\tif (fixedOverflowWidgets && this._widgetCanOverflow(widgetData.widget)) {\n\t\t\t\t// top, left are computed relative to the editor and we need them relative to the page\n\t\t\t\tconst editorBoundingBox = this._viewDomNodeRect;\n\t\t\t\tdomNode.setTop(top + editorBoundingBox.top);\n\t\t\t\tdomNode.setLeft(left + editorBoundingBox.left);\n\t\t\t\tdomNode.setPosition('fixed');\n\n\t\t\t} else {\n\t\t\t\tdomNode.setTop(top);\n\t\t\t\tdomNode.setLeft(left);\n\t\t\t\tdomNode.setPosition('absolute');\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._viewDomNodeRect = dom.getDomNodePagePosition(this._viewDomNode.domNode);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._editorWidth);\n\n\t\tconst keys = Object.keys(this._widgets);\n\t\tconst stackCoordinates = Array.from({ length: OverlayWidgetPositionPreference.TOP_CENTER + 1 }, () => 0);\n\t\tkeys.sort((a, b) => (this._widgets[a].stack || 0) - (this._widgets[b].stack || 0));\n\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst widgetId = keys[i];\n\t\t\tthis._renderWidget(this._widgets[widgetId], stackCoordinates);\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAGhG,OAAO,EAAe,iBAAiB,EAAE,MAAM,yCAAyC,CAAC;AAEzF,OAAO,EAAmB,gBAAgB,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAKrF,OAAO,KAAK,GAAG,MAAM,iCAAiC,CAAC;;;;;AAmBjD,MAAO,kBAAmB,SAAQ,kMAAQ;IAa/C,YAAY,OAAoB,EAAE,WAAqC,CAAA;QACtE,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAEhC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QACpD,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,CAAC;QAExD,IAAI,CAAC,QAAQ,GAAG,CAAA,CAAE,CAAC;QACnB,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC,sBAAsB,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,yBAAyB,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG;YAAE,GAAG,EAAE,CAAC;YAAE,IAAI,EAAE,CAAC;YAAE,KAAK,EAAE,CAAC;YAAE,MAAM,EAAE,CAAC;QAAA,CAAE,CAAC;QAEjE,IAAI,CAAC,QAAQ,OAAG,oMAAiB,EAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACjE,0MAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAA,EAAA,kCAAA,GAAiC,CAAC;QACtE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;QAE7C,IAAI,CAAC,gCAAgC,OAAG,oMAAiB,EAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACzF,0MAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,gCAAgC,EAAA,EAAA,6CAAA,GAA4C,CAAC;QACzG,IAAI,CAAC,gCAAgC,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;IACjF,CAAC;IAEe,OAAO,GAAA;QACtB,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,CAAA,CAAE,CAAC;IACpB,CAAC;IAEM,UAAU,GAAA;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED,iCAAiC;IAEjB,sBAAsB,CAAC,CAA2C,EAAA;QACjF,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QACpD,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,CAAC;QAExD,IAAI,CAAC,uBAAuB,GAAG,UAAU,CAAC,sBAAsB,CAAC;QACjE,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,0BAA0B,GAAG,UAAU,CAAC,yBAAyB,CAAC;QACvE,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,KAAK,CAAC;QACrC,OAAO,IAAI,CAAC;IACb,CAAC;IAED,+BAA+B;IAEvB,kBAAkB,CAAC,MAAsB,EAAA;QAChD,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QACpD,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAA,EAAA,8BAAA,GAA4B,CAAC;QAC9D,OAAO,CAAC,MAAM,CAAC,mBAAmB,IAAI,KAAK,CAAC,IAAI,aAAa,CAAC;IAC/D,CAAC;IAEM,SAAS,CAAC,MAAsB,EAAA;QACtC,MAAM,OAAO,OAAG,oMAAiB,EAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC;QAEvD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG;YAC/B,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,OAAO;SAChB,CAAC;QAEF,uDAAuD;QACvD,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAChC,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QAEjD,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC;YACrC,IAAI,CAAC,gCAAgC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5D,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAEM,iBAAiB,CAAC,MAAsB,EAAE,QAAuC,EAAA;QACvF,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;QACjD,MAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;QACzD,MAAM,KAAK,GAAG,QAAQ,EAAE,aAAa,CAAC;QACtC,IAAI,UAAU,CAAC,UAAU,KAAK,UAAU,IAAI,UAAU,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;YACxE,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAO,KAAK,CAAC;QACd,CAAC;QAED,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;QACnC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,OAAO,IAAI,CAAC;IACb,CAAC;IAEM,YAAY,CAAC,MAAsB,EAAA;QACzC,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC3C,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC;YAC3C,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE/B,OAAO,CAAC,MAAM,EAAE,CAAC;YACjB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC3B,CAAC;IACF,CAAC;IAEO,kBAAkB,GAAA;QACzB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC;YACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACvC,MAAM,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAE,EAAE,CAAC;YACpE,IAAI,OAAO,kBAAkB,KAAK,WAAW,EAAE,CAAC;gBAC/C,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;YACzD,CAAC;QACF,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC;IACjE,CAAC;IAEO,aAAa,CAAC,UAAuB,EAAE,gBAA0B,EAAA;QACxE,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC;QAEnC,IAAI,UAAU,CAAC,UAAU,KAAK,IAAI,EAAE,CAAC;YACpC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YACnB,OAAO;QACR,CAAC;QAED,MAAM,QAAQ,GAAG,AAAC,CAAC,GAAG,IAAI,CAAC,uBAAuB,CAAC,EAAG,IAAI,CAAC,aAAa,CAAC;QACzE,IAAI,UAAU,CAAC,UAAU,KAAA,EAAA,oDAAA,EAAqD,KAAI,UAAU,CAAC,UAAU,KAAA,EAAA,uDAAA,EAAwD,GAAE,CAAC;YACjK,IAAI,UAAU,CAAC,UAAU,KAAA,EAAA,uDAAA,EAAwD,GAAE,CAAC;gBACnF,MAAM,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;gBAClD,OAAO,CAAC,MAAM,CAAC,AAAC,IAAI,CAAC,aAAa,GAAG,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;YAC3F,CAAC,MAAM,CAAC;gBACP,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;YAED,IAAI,UAAU,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;gBACpC,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxD,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC;YACxE,CAAC,MAAM,CAAC;gBACP,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC5B,CAAC;QACF,CAAC,MAAM,IAAI,UAAU,CAAC,UAAU,KAAA,EAAA,8CAAA,EAA+C,GAAE,CAAC;YACjF,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;YACpC,IAAI,UAAU,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;gBACpC,OAAO,CAAC,MAAM,CAAC,gBAAgB,CAAA,EAAA,8CAAA,IAA4C,CAAC,CAAC;gBAC7E,gBAAgB,CAAA,EAAA,8CAAA,IAA4C,IAAI,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;YAC9F,CAAC,MAAM,CAAC;gBACP,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;QACF,CAAC,MAAM,CAAC;YACP,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,UAAU,CAAC;YAC5C,MAAM,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,GAAA,qCAAA,GAAmC,CAAC;YACxG,IAAI,oBAAoB,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;gBACxE,sFAAsF;gBACtF,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAChD,OAAO,CAAC,MAAM,CAAC,GAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBAC5C,OAAO,CAAC,OAAO,CAAC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBAC/C,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAE9B,CAAC,MAAM,CAAC;gBACP,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACpB,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtB,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YACjC,CAAC;QACF,CAAC;IACF,CAAC;IAEM,aAAa,CAAC,GAAqB,EAAA;QACzC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,6LAAsB,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC/E,CAAC;IAEM,MAAM,CAAC,GAA+B,EAAA;QAC5C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE1C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC;YAAE,MAAM,EAAE,EAAA,8CAAA,MAA6C,CAAC;QAAA,CAAE,EAAE,GAAG,CAAG,CAAD,AAAE,CAAC,CAAC;QACzG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,AAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;QAEnF,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC;YACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAC/D,CAAC;IACF,CAAC;CACD","debugId":null}},
    {"offset": {"line": 5922, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/vs/editor/browser/viewParts/overviewRuler/decorationsOverviewRuler.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground, editorMultiCursorSecondaryForeground, editorMultiCursorPrimaryForeground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { EditorTheme } from '../../../common/editorTheme.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\n\nclass Settings {\n\n\tpublic readonly lineHeight: number;\n\tpublic readonly pixelRatio: number;\n\tpublic readonly overviewRulerLanes: number;\n\n\tpublic readonly renderBorder: boolean;\n\tpublic readonly borderColor: string | null;\n\n\tpublic readonly hideCursor: boolean;\n\tpublic readonly cursorColorSingle: string | null;\n\tpublic readonly cursorColorPrimary: string | null;\n\tpublic readonly cursorColorSecondary: string | null;\n\n\tpublic readonly themeType: 'light' | 'dark' | 'hcLight' | 'hcDark';\n\tpublic readonly backgroundColor: Color | null;\n\n\tpublic readonly top: number;\n\tpublic readonly right: number;\n\tpublic readonly domWidth: number;\n\tpublic readonly domHeight: number;\n\tpublic readonly canvasWidth: number;\n\tpublic readonly canvasHeight: number;\n\n\tpublic readonly x: number[];\n\tpublic readonly w: number[];\n\n\tconstructor(config: IEditorConfiguration, theme: EditorTheme) {\n\t\tconst options = config.options;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tthis.overviewRulerLanes = options.get(EditorOption.overviewRulerLanes);\n\n\t\tthis.renderBorder = options.get(EditorOption.overviewRulerBorder);\n\t\tconst borderColor = theme.getColor(editorOverviewRulerBorder);\n\t\tthis.borderColor = borderColor ? borderColor.toString() : null;\n\n\t\tthis.hideCursor = options.get(EditorOption.hideCursorInOverviewRuler);\n\t\tconst cursorColorSingle = theme.getColor(editorCursorForeground);\n\t\tthis.cursorColorSingle = cursorColorSingle ? cursorColorSingle.transparent(0.7).toString() : null;\n\t\tconst cursorColorPrimary = theme.getColor(editorMultiCursorPrimaryForeground);\n\t\tthis.cursorColorPrimary = cursorColorPrimary ? cursorColorPrimary.transparent(0.7).toString() : null;\n\t\tconst cursorColorSecondary = theme.getColor(editorMultiCursorSecondaryForeground);\n\t\tthis.cursorColorSecondary = cursorColorSecondary ? cursorColorSecondary.transparent(0.7).toString() : null;\n\n\t\tthis.themeType = theme.type;\n\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\t\tconst minimapEnabled = minimapOpts.enabled;\n\t\tconst minimapSide = minimapOpts.side;\n\t\tconst themeColor = theme.getColor(editorOverviewRulerBackground);\n\t\tconst defaultBackground = TokenizationRegistry.getDefaultBackground();\n\n\t\tif (themeColor) {\n\t\t\tthis.backgroundColor = themeColor;\n\t\t} else if (minimapEnabled && minimapSide === 'right') {\n\t\t\tthis.backgroundColor = defaultBackground;\n\t\t} else {\n\t\t\tthis.backgroundColor = null;\n\t\t}\n\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst position = layoutInfo.overviewRuler;\n\t\tthis.top = position.top;\n\t\tthis.right = position.right;\n\t\tthis.domWidth = position.width;\n\t\tthis.domHeight = position.height;\n\t\tif (this.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis.canvasWidth = 0;\n\t\t\tthis.canvasHeight = 0;\n\t\t} else {\n\t\t\tthis.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n\t\t\tthis.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n\t\t}\n\n\t\tconst [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n\t\tthis.x = x;\n\t\tthis.w = w;\n\t}\n\n\tprivate _initLanes(canvasLeftOffset: number, canvasWidth: number, laneCount: number): [number[], number[]] {\n\t\tconst remainingWidth = canvasWidth - canvasLeftOffset;\n\n\t\tif (laneCount >= 3) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst rightWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst centerWidth = remainingWidth - leftWidth - rightWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst centerOffset = leftOffset + leftWidth;\n\t\t\tconst rightOffset = leftOffset + leftWidth + centerWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tcenterOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tcenterOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tcenterWidth, // Center\n\t\t\t\t\tleftWidth + centerWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Right\n\t\t\t\t\tcenterWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else if (laneCount === 2) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 2);\n\t\t\tconst rightWidth = remainingWidth - leftWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst rightOffset = leftOffset + leftWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tleftOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tleftOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tleftWidth, // Center\n\t\t\t\t\tleftWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Right\n\t\t\t\t\tleftWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else {\n\t\t\tconst offset = canvasLeftOffset;\n\t\t\tconst width = remainingWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\toffset, // Left\n\t\t\t\t\toffset, // Center\n\t\t\t\t\toffset, // Left | Center\n\t\t\t\t\toffset, // Right\n\t\t\t\t\toffset, // Left | Right\n\t\t\t\t\toffset, // Center | Right\n\t\t\t\t\toffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\twidth, // Left\n\t\t\t\t\twidth, // Center\n\t\t\t\t\twidth, // Left | Center\n\t\t\t\t\twidth, // Right\n\t\t\t\t\twidth, // Left | Right\n\t\t\t\t\twidth, // Center | Right\n\t\t\t\t\twidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t}\n\t}\n\n\tpublic equals(other: Settings): boolean {\n\t\treturn (\n\t\t\tthis.lineHeight === other.lineHeight\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.overviewRulerLanes === other.overviewRulerLanes\n\t\t\t&& this.renderBorder === other.renderBorder\n\t\t\t&& this.borderColor === other.borderColor\n\t\t\t&& this.hideCursor === other.hideCursor\n\t\t\t&& this.cursorColorSingle === other.cursorColorSingle\n\t\t\t&& this.cursorColorPrimary === other.cursorColorPrimary\n\t\t\t&& this.cursorColorSecondary === other.cursorColorSecondary\n\t\t\t&& this.themeType === other.themeType\n\t\t\t&& Color.equals(this.backgroundColor, other.backgroundColor)\n\t\t\t&& this.top === other.top\n\t\t\t&& this.right === other.right\n\t\t\t&& this.domWidth === other.domWidth\n\t\t\t&& this.domHeight === other.domHeight\n\t\t\t&& this.canvasWidth === other.canvasWidth\n\t\t\t&& this.canvasHeight === other.canvasHeight\n\t\t);\n\t}\n}\n\nconst enum Constants {\n\tMIN_DECORATION_HEIGHT = 6\n}\n\nconst enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\ntype Cursor = {\n\tposition: Position;\n\tcolor: string | null;\n};\n\nconst enum ShouldRenderValue {\n\tNotNeeded = 0,\n\tMaybe = 1,\n\tNeeded = 2\n}\n\nexport class DecorationsOverviewRuler extends ViewPart {\n\n\tprivate _actualShouldRender: ShouldRenderValue = ShouldRenderValue.NotNeeded;\n\n\tprivate readonly _tokensColorTrackerListener: IDisposable;\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate _settings!: Settings;\n\tprivate _cursorPositions: Cursor[];\n\n\tprivate _renderedDecorations: OverviewRulerDecorationsGroup[] = [];\n\tprivate _renderedCursorPositions: Cursor[] = [];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setClassName('decorationsOverviewRuler');\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._updateSettings(false);\n\n\t\tthis._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n\t\t\tif (e.changedColorMap) {\n\t\t\t\tthis._updateSettings(true);\n\t\t\t}\n\t\t});\n\n\t\tthis._cursorPositions = [{ position: new Position(1, 1), color: this._settings.cursorColorSingle }];\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._tokensColorTrackerListener.dispose();\n\t}\n\n\tprivate _updateSettings(renderNow: boolean): boolean {\n\t\tconst newSettings = new Settings(this._context.configuration, this._context.theme);\n\t\tif (this._settings && this._settings.equals(newSettings)) {\n\t\t\t// nothing to do\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._settings = newSettings;\n\n\t\tthis._domNode.setTop(this._settings.top);\n\t\tthis._domNode.setRight(this._settings.right);\n\t\tthis._domNode.setWidth(this._settings.domWidth);\n\t\tthis._domNode.setHeight(this._settings.domHeight);\n\t\tthis._domNode.domNode.width = this._settings.canvasWidth;\n\t\tthis._domNode.domNode.height = this._settings.canvasHeight;\n\n\t\tif (renderNow) {\n\t\t\tthis._render();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tprivate _markRenderingIsNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\treturn true;\n\t}\n\n\tprivate _markRenderingIsMaybeNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Maybe;\n\t\treturn true;\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._cursorPositions = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tlet color = this._settings.cursorColorSingle;\n\t\t\tif (len > 1) {\n\t\t\t\tcolor = i === 0 ? this._settings.cursorColorPrimary : this._settings.cursorColorSecondary;\n\t\t\t}\n\t\t\tthis._cursorPositions.push({ position: e.selections[i].getPosition(), color });\n\t\t}\n\t\tthis._cursorPositions.sort((a, b) => Position.compare(a.position, b.position));\n\t\treturn this._markRenderingIsMaybeNeeded();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsOverviewRuler) {\n\t\t\treturn this._markRenderingIsMaybeNeeded();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(editorCtx: RestrictedRenderingContext): void {\n\t\tthis._render();\n\t\tthis._actualShouldRender = ShouldRenderValue.NotNeeded;\n\t}\n\n\tprivate _render(): void {\n\t\tconst backgroundColor = this._settings.backgroundColor;\n\t\tif (this._settings.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n\t\t\tthis._domNode.setDisplay('none');\n\t\t\treturn;\n\t\t}\n\n\t\tconst decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n\t\tdecorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.position.lineNumber === b.position.lineNumber && a.color === b.color)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe) {\n\t\t\t// both decorations and cursor positions are unchanged, nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedDecorations = decorations;\n\t\tthis._renderedCursorPositions = this._cursorPositions;\n\n\t\tthis._domNode.setDisplay('block');\n\t\tconst canvasWidth = this._settings.canvasWidth;\n\t\tconst canvasHeight = this._settings.canvasHeight;\n\t\tconst lineHeight = this._settings.lineHeight;\n\t\tconst viewLayout = this._context.viewLayout;\n\t\tconst outerHeight = this._context.viewLayout.getScrollHeight();\n\t\tconst heightRatio = canvasHeight / outerHeight;\n\n\t\tconst minDecorationHeight = (Constants.MIN_DECORATION_HEIGHT * this._settings.pixelRatio) | 0;\n\t\tconst halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n\n\t\tconst canvasCtx = this._domNode.domNode.getContext('2d')!;\n\t\tif (backgroundColor) {\n\t\t\tif (backgroundColor.isOpaque()) {\n\t\t\t\t// We have a background color which is opaque, we can just paint the entire surface with it\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t} else {\n\t\t\t\t// We have a background color which is transparent, we need to first clear the surface and\n\t\t\t\t// then fill it\n\t\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t}\n\t\t} else {\n\t\t\t// We don't have a background color\n\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t}\n\n\t\tconst x = this._settings.x;\n\t\tconst w = this._settings.w;\n\n\n\n\t\tfor (const decorationGroup of decorations) {\n\t\t\tconst color = decorationGroup.color;\n\t\t\tconst decorationGroupData = decorationGroup.data;\n\n\t\t\tcanvasCtx.fillStyle = color;\n\n\t\t\tlet prevLane = 0;\n\t\t\tlet prevY1 = 0;\n\t\t\tlet prevY2 = 0;\n\t\t\tfor (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n\t\t\t\tconst lane = decorationGroupData[3 * i];\n\t\t\t\tconst startLineNumber = decorationGroupData[3 * i + 1];\n\t\t\t\tconst endLineNumber = decorationGroupData[3 * i + 2];\n\n\t\t\t\tlet y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n\t\t\t\tlet y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n\t\t\t\tconst height = y2 - y1;\n\t\t\t\tif (height < minDecorationHeight) {\n\t\t\t\t\tlet yCenter = ((y1 + y2) / 2) | 0;\n\t\t\t\t\tif (yCenter < halfMinDecorationHeight) {\n\t\t\t\t\t\tyCenter = halfMinDecorationHeight;\n\t\t\t\t\t} else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n\t\t\t\t\t\tyCenter = canvasHeight - halfMinDecorationHeight;\n\t\t\t\t\t}\n\t\t\t\t\ty1 = yCenter - halfMinDecorationHeight;\n\t\t\t\t\ty2 = yCenter + halfMinDecorationHeight;\n\t\t\t\t}\n\n\t\t\t\tif (y1 > prevY2 + 1 || lane !== prevLane) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevLane = lane;\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t}\n\n\t\t// Draw cursors\n\t\tif (!this._settings.hideCursor) {\n\t\t\tconst cursorHeight = (2 * this._settings.pixelRatio) | 0;\n\t\t\tconst halfCursorHeight = (cursorHeight / 2) | 0;\n\t\t\tconst cursorX = this._settings.x[OverviewRulerLane.Full];\n\t\t\tconst cursorW = this._settings.w[OverviewRulerLane.Full];\n\n\t\t\tlet prevY1 = -100;\n\t\t\tlet prevY2 = -100;\n\t\t\tlet prevColor: string | null = null;\n\t\t\tfor (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n\t\t\t\tconst color = this._cursorPositions[i].color;\n\t\t\t\tif (!color) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst cursor = this._cursorPositions[i].position;\n\n\t\t\t\tlet yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n\t\t\t\tif (yCenter < halfCursorHeight) {\n\t\t\t\t\tyCenter = halfCursorHeight;\n\t\t\t\t} else if (yCenter + halfCursorHeight > canvasHeight) {\n\t\t\t\t\tyCenter = canvasHeight - halfCursorHeight;\n\t\t\t\t}\n\t\t\t\tconst y1 = yCenter - halfCursorHeight;\n\t\t\t\tconst y2 = y1 + cursorHeight;\n\n\t\t\t\tif (y1 > prevY2 + 1 || color !== prevColor) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0 && prevColor) {\n\t\t\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevColor = color;\n\t\t\t\tcanvasCtx.fillStyle = color;\n\t\t\t}\n\t\t\tif (prevColor) {\n\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t}\n\t\t}\n\n\t\tif (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n\t\t\tcanvasCtx.beginPath();\n\t\t\tcanvasCtx.lineWidth = 1;\n\t\t\tcanvasCtx.strokeStyle = this._settings.borderColor;\n\t\t\tcanvasCtx.moveTo(0, 0);\n\t\t\tcanvasCtx.lineTo(0, canvasHeight);\n\t\t\tcanvasCtx.moveTo(1, 0);\n\t\t\tcanvasCtx.lineTo(canvasWidth, 0);\n\t\t\tcanvasCtx.stroke();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { IDisposable } from '../../../../base/common/lifecycle.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { editorCursorForeground, editorOverviewRulerBorder, editorOverviewRulerBackground, editorMultiCursorSecondaryForeground, editorMultiCursorPrimaryForeground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { EditorTheme } from '../../../common/editorTheme.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { OverviewRulerDecorationsGroup } from '../../../common/viewModel.js';\nimport { equals } from '../../../../base/common/arrays.js';\n\nclass Settings {\n\n\tpublic readonly lineHeight: number;\n\tpublic readonly pixelRatio: number;\n\tpublic readonly overviewRulerLanes: number;\n\n\tpublic readonly renderBorder: boolean;\n\tpublic readonly borderColor: string | null;\n\n\tpublic readonly hideCursor: boolean;\n\tpublic readonly cursorColorSingle: string | null;\n\tpublic readonly cursorColorPrimary: string | null;\n\tpublic readonly cursorColorSecondary: string | null;\n\n\tpublic readonly themeType: 'light' | 'dark' | 'hcLight' | 'hcDark';\n\tpublic readonly backgroundColor: Color | null;\n\n\tpublic readonly top: number;\n\tpublic readonly right: number;\n\tpublic readonly domWidth: number;\n\tpublic readonly domHeight: number;\n\tpublic readonly canvasWidth: number;\n\tpublic readonly canvasHeight: number;\n\n\tpublic readonly x: number[];\n\tpublic readonly w: number[];\n\n\tconstructor(config: IEditorConfiguration, theme: EditorTheme) {\n\t\tconst options = config.options;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.pixelRatio = options.get(EditorOption.pixelRatio);\n\t\tthis.overviewRulerLanes = options.get(EditorOption.overviewRulerLanes);\n\n\t\tthis.renderBorder = options.get(EditorOption.overviewRulerBorder);\n\t\tconst borderColor = theme.getColor(editorOverviewRulerBorder);\n\t\tthis.borderColor = borderColor ? borderColor.toString() : null;\n\n\t\tthis.hideCursor = options.get(EditorOption.hideCursorInOverviewRuler);\n\t\tconst cursorColorSingle = theme.getColor(editorCursorForeground);\n\t\tthis.cursorColorSingle = cursorColorSingle ? cursorColorSingle.transparent(0.7).toString() : null;\n\t\tconst cursorColorPrimary = theme.getColor(editorMultiCursorPrimaryForeground);\n\t\tthis.cursorColorPrimary = cursorColorPrimary ? cursorColorPrimary.transparent(0.7).toString() : null;\n\t\tconst cursorColorSecondary = theme.getColor(editorMultiCursorSecondaryForeground);\n\t\tthis.cursorColorSecondary = cursorColorSecondary ? cursorColorSecondary.transparent(0.7).toString() : null;\n\n\t\tthis.themeType = theme.type;\n\n\t\tconst minimapOpts = options.get(EditorOption.minimap);\n\t\tconst minimapEnabled = minimapOpts.enabled;\n\t\tconst minimapSide = minimapOpts.side;\n\t\tconst themeColor = theme.getColor(editorOverviewRulerBackground);\n\t\tconst defaultBackground = TokenizationRegistry.getDefaultBackground();\n\n\t\tif (themeColor) {\n\t\t\tthis.backgroundColor = themeColor;\n\t\t} else if (minimapEnabled && minimapSide === 'right') {\n\t\t\tthis.backgroundColor = defaultBackground;\n\t\t} else {\n\t\t\tthis.backgroundColor = null;\n\t\t}\n\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst position = layoutInfo.overviewRuler;\n\t\tthis.top = position.top;\n\t\tthis.right = position.right;\n\t\tthis.domWidth = position.width;\n\t\tthis.domHeight = position.height;\n\t\tif (this.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis.canvasWidth = 0;\n\t\t\tthis.canvasHeight = 0;\n\t\t} else {\n\t\t\tthis.canvasWidth = (this.domWidth * this.pixelRatio) | 0;\n\t\t\tthis.canvasHeight = (this.domHeight * this.pixelRatio) | 0;\n\t\t}\n\n\t\tconst [x, w] = this._initLanes(1, this.canvasWidth, this.overviewRulerLanes);\n\t\tthis.x = x;\n\t\tthis.w = w;\n\t}\n\n\tprivate _initLanes(canvasLeftOffset: number, canvasWidth: number, laneCount: number): [number[], number[]] {\n\t\tconst remainingWidth = canvasWidth - canvasLeftOffset;\n\n\t\tif (laneCount >= 3) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst rightWidth = Math.floor(remainingWidth / 3);\n\t\t\tconst centerWidth = remainingWidth - leftWidth - rightWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst centerOffset = leftOffset + leftWidth;\n\t\t\tconst rightOffset = leftOffset + leftWidth + centerWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tcenterOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tcenterOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tcenterWidth, // Center\n\t\t\t\t\tleftWidth + centerWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Right\n\t\t\t\t\tcenterWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + centerWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else if (laneCount === 2) {\n\t\t\tconst leftWidth = Math.floor(remainingWidth / 2);\n\t\t\tconst rightWidth = remainingWidth - leftWidth;\n\t\t\tconst leftOffset = canvasLeftOffset;\n\t\t\tconst rightOffset = leftOffset + leftWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\tleftOffset, // Left\n\t\t\t\t\tleftOffset, // Center\n\t\t\t\t\tleftOffset, // Left | Center\n\t\t\t\t\trightOffset, // Right\n\t\t\t\t\tleftOffset, // Left | Right\n\t\t\t\t\tleftOffset, // Center | Right\n\t\t\t\t\tleftOffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\tleftWidth, // Left\n\t\t\t\t\tleftWidth, // Center\n\t\t\t\t\tleftWidth, // Left | Center\n\t\t\t\t\trightWidth, // Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Right\n\t\t\t\t\tleftWidth + rightWidth, // Center | Right\n\t\t\t\t\tleftWidth + rightWidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t} else {\n\t\t\tconst offset = canvasLeftOffset;\n\t\t\tconst width = remainingWidth;\n\n\t\t\treturn [\n\t\t\t\t[\n\t\t\t\t\t0,\n\t\t\t\t\toffset, // Left\n\t\t\t\t\toffset, // Center\n\t\t\t\t\toffset, // Left | Center\n\t\t\t\t\toffset, // Right\n\t\t\t\t\toffset, // Left | Right\n\t\t\t\t\toffset, // Center | Right\n\t\t\t\t\toffset, // Left | Center | Right\n\t\t\t\t], [\n\t\t\t\t\t0,\n\t\t\t\t\twidth, // Left\n\t\t\t\t\twidth, // Center\n\t\t\t\t\twidth, // Left | Center\n\t\t\t\t\twidth, // Right\n\t\t\t\t\twidth, // Left | Right\n\t\t\t\t\twidth, // Center | Right\n\t\t\t\t\twidth, // Left | Center | Right\n\t\t\t\t]\n\t\t\t];\n\t\t}\n\t}\n\n\tpublic equals(other: Settings): boolean {\n\t\treturn (\n\t\t\tthis.lineHeight === other.lineHeight\n\t\t\t&& this.pixelRatio === other.pixelRatio\n\t\t\t&& this.overviewRulerLanes === other.overviewRulerLanes\n\t\t\t&& this.renderBorder === other.renderBorder\n\t\t\t&& this.borderColor === other.borderColor\n\t\t\t&& this.hideCursor === other.hideCursor\n\t\t\t&& this.cursorColorSingle === other.cursorColorSingle\n\t\t\t&& this.cursorColorPrimary === other.cursorColorPrimary\n\t\t\t&& this.cursorColorSecondary === other.cursorColorSecondary\n\t\t\t&& this.themeType === other.themeType\n\t\t\t&& Color.equals(this.backgroundColor, other.backgroundColor)\n\t\t\t&& this.top === other.top\n\t\t\t&& this.right === other.right\n\t\t\t&& this.domWidth === other.domWidth\n\t\t\t&& this.domHeight === other.domHeight\n\t\t\t&& this.canvasWidth === other.canvasWidth\n\t\t\t&& this.canvasHeight === other.canvasHeight\n\t\t);\n\t}\n}\n\nconst enum Constants {\n\tMIN_DECORATION_HEIGHT = 6\n}\n\nconst enum OverviewRulerLane {\n\tLeft = 1,\n\tCenter = 2,\n\tRight = 4,\n\tFull = 7\n}\n\ntype Cursor = {\n\tposition: Position;\n\tcolor: string | null;\n};\n\nconst enum ShouldRenderValue {\n\tNotNeeded = 0,\n\tMaybe = 1,\n\tNeeded = 2\n}\n\nexport class DecorationsOverviewRuler extends ViewPart {\n\n\tprivate _actualShouldRender: ShouldRenderValue = ShouldRenderValue.NotNeeded;\n\n\tprivate readonly _tokensColorTrackerListener: IDisposable;\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate _settings!: Settings;\n\tprivate _cursorPositions: Cursor[];\n\n\tprivate _renderedDecorations: OverviewRulerDecorationsGroup[] = [];\n\tprivate _renderedCursorPositions: Cursor[] = [];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setClassName('decorationsOverviewRuler');\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._updateSettings(false);\n\n\t\tthis._tokensColorTrackerListener = TokenizationRegistry.onDidChange((e) => {\n\t\t\tif (e.changedColorMap) {\n\t\t\t\tthis._updateSettings(true);\n\t\t\t}\n\t\t});\n\n\t\tthis._cursorPositions = [{ position: new Position(1, 1), color: this._settings.cursorColorSingle }];\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._tokensColorTrackerListener.dispose();\n\t}\n\n\tprivate _updateSettings(renderNow: boolean): boolean {\n\t\tconst newSettings = new Settings(this._context.configuration, this._context.theme);\n\t\tif (this._settings && this._settings.equals(newSettings)) {\n\t\t\t// nothing to do\n\t\t\treturn false;\n\t\t}\n\n\t\tthis._settings = newSettings;\n\n\t\tthis._domNode.setTop(this._settings.top);\n\t\tthis._domNode.setRight(this._settings.right);\n\t\tthis._domNode.setWidth(this._settings.domWidth);\n\t\tthis._domNode.setHeight(this._settings.domHeight);\n\t\tthis._domNode.domNode.width = this._settings.canvasWidth;\n\t\tthis._domNode.domNode.height = this._settings.canvasHeight;\n\n\t\tif (renderNow) {\n\t\t\tthis._render();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t// ---- begin view event handlers\n\n\tprivate _markRenderingIsNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\treturn true;\n\t}\n\n\tprivate _markRenderingIsMaybeNeeded(): true {\n\t\tthis._actualShouldRender = ShouldRenderValue.Maybe;\n\t\treturn true;\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._cursorPositions = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tlet color = this._settings.cursorColorSingle;\n\t\t\tif (len > 1) {\n\t\t\t\tcolor = i === 0 ? this._settings.cursorColorPrimary : this._settings.cursorColorSecondary;\n\t\t\t}\n\t\t\tthis._cursorPositions.push({ position: e.selections[i].getPosition(), color });\n\t\t}\n\t\tthis._cursorPositions.sort((a, b) => Position.compare(a.position, b.position));\n\t\treturn this._markRenderingIsMaybeNeeded();\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\tif (e.affectsOverviewRuler) {\n\t\t\treturn this._markRenderingIsMaybeNeeded();\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged ? this._markRenderingIsNeeded() : false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn this._markRenderingIsNeeded();\n\t}\n\tpublic override onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean {\n\t\treturn this._updateSettings(false) ? this._markRenderingIsNeeded() : false;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(editorCtx: RestrictedRenderingContext): void {\n\t\tthis._render();\n\t\tthis._actualShouldRender = ShouldRenderValue.NotNeeded;\n\t}\n\n\tprivate _render(): void {\n\t\tconst backgroundColor = this._settings.backgroundColor;\n\t\tif (this._settings.overviewRulerLanes === 0) {\n\t\t\t// overview ruler is off\n\t\t\tthis._domNode.setBackgroundColor(backgroundColor ? Color.Format.CSS.formatHexA(backgroundColor) : '');\n\t\t\tthis._domNode.setDisplay('none');\n\t\t\treturn;\n\t\t}\n\n\t\tconst decorations = this._context.viewModel.getAllOverviewRulerDecorations(this._context.theme);\n\t\tdecorations.sort(OverviewRulerDecorationsGroup.compareByRenderingProps);\n\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !OverviewRulerDecorationsGroup.equalsArr(this._renderedDecorations, decorations)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe && !equals(this._renderedCursorPositions, this._cursorPositions, (a, b) => a.position.lineNumber === b.position.lineNumber && a.color === b.color)) {\n\t\t\tthis._actualShouldRender = ShouldRenderValue.Needed;\n\t\t}\n\t\tif (this._actualShouldRender === ShouldRenderValue.Maybe) {\n\t\t\t// both decorations and cursor positions are unchanged, nothing to do\n\t\t\treturn;\n\t\t}\n\t\tthis._renderedDecorations = decorations;\n\t\tthis._renderedCursorPositions = this._cursorPositions;\n\n\t\tthis._domNode.setDisplay('block');\n\t\tconst canvasWidth = this._settings.canvasWidth;\n\t\tconst canvasHeight = this._settings.canvasHeight;\n\t\tconst lineHeight = this._settings.lineHeight;\n\t\tconst viewLayout = this._context.viewLayout;\n\t\tconst outerHeight = this._context.viewLayout.getScrollHeight();\n\t\tconst heightRatio = canvasHeight / outerHeight;\n\n\t\tconst minDecorationHeight = (Constants.MIN_DECORATION_HEIGHT * this._settings.pixelRatio) | 0;\n\t\tconst halfMinDecorationHeight = (minDecorationHeight / 2) | 0;\n\n\t\tconst canvasCtx = this._domNode.domNode.getContext('2d')!;\n\t\tif (backgroundColor) {\n\t\t\tif (backgroundColor.isOpaque()) {\n\t\t\t\t// We have a background color which is opaque, we can just paint the entire surface with it\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t} else {\n\t\t\t\t// We have a background color which is transparent, we need to first clear the surface and\n\t\t\t\t// then fill it\n\t\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t\tcanvasCtx.fillStyle = Color.Format.CSS.formatHexA(backgroundColor);\n\t\t\t\tcanvasCtx.fillRect(0, 0, canvasWidth, canvasHeight);\n\t\t\t}\n\t\t} else {\n\t\t\t// We don't have a background color\n\t\t\tcanvasCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t\t}\n\n\t\tconst x = this._settings.x;\n\t\tconst w = this._settings.w;\n\n\n\n\t\tfor (const decorationGroup of decorations) {\n\t\t\tconst color = decorationGroup.color;\n\t\t\tconst decorationGroupData = decorationGroup.data;\n\n\t\t\tcanvasCtx.fillStyle = color;\n\n\t\t\tlet prevLane = 0;\n\t\t\tlet prevY1 = 0;\n\t\t\tlet prevY2 = 0;\n\t\t\tfor (let i = 0, len = decorationGroupData.length / 3; i < len; i++) {\n\t\t\t\tconst lane = decorationGroupData[3 * i];\n\t\t\t\tconst startLineNumber = decorationGroupData[3 * i + 1];\n\t\t\t\tconst endLineNumber = decorationGroupData[3 * i + 2];\n\n\t\t\t\tlet y1 = (viewLayout.getVerticalOffsetForLineNumber(startLineNumber) * heightRatio) | 0;\n\t\t\t\tlet y2 = ((viewLayout.getVerticalOffsetForLineNumber(endLineNumber) + lineHeight) * heightRatio) | 0;\n\t\t\t\tconst height = y2 - y1;\n\t\t\t\tif (height < minDecorationHeight) {\n\t\t\t\t\tlet yCenter = ((y1 + y2) / 2) | 0;\n\t\t\t\t\tif (yCenter < halfMinDecorationHeight) {\n\t\t\t\t\t\tyCenter = halfMinDecorationHeight;\n\t\t\t\t\t} else if (yCenter + halfMinDecorationHeight > canvasHeight) {\n\t\t\t\t\t\tyCenter = canvasHeight - halfMinDecorationHeight;\n\t\t\t\t\t}\n\t\t\t\t\ty1 = yCenter - halfMinDecorationHeight;\n\t\t\t\t\ty2 = yCenter + halfMinDecorationHeight;\n\t\t\t\t}\n\n\t\t\t\tif (y1 > prevY2 + 1 || lane !== prevLane) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevLane = lane;\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcanvasCtx.fillRect(x[prevLane], prevY1, w[prevLane], prevY2 - prevY1);\n\t\t}\n\n\t\t// Draw cursors\n\t\tif (!this._settings.hideCursor) {\n\t\t\tconst cursorHeight = (2 * this._settings.pixelRatio) | 0;\n\t\t\tconst halfCursorHeight = (cursorHeight / 2) | 0;\n\t\t\tconst cursorX = this._settings.x[OverviewRulerLane.Full];\n\t\t\tconst cursorW = this._settings.w[OverviewRulerLane.Full];\n\n\t\t\tlet prevY1 = -100;\n\t\t\tlet prevY2 = -100;\n\t\t\tlet prevColor: string | null = null;\n\t\t\tfor (let i = 0, len = this._cursorPositions.length; i < len; i++) {\n\t\t\t\tconst color = this._cursorPositions[i].color;\n\t\t\t\tif (!color) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst cursor = this._cursorPositions[i].position;\n\n\t\t\t\tlet yCenter = (viewLayout.getVerticalOffsetForLineNumber(cursor.lineNumber) * heightRatio) | 0;\n\t\t\t\tif (yCenter < halfCursorHeight) {\n\t\t\t\t\tyCenter = halfCursorHeight;\n\t\t\t\t} else if (yCenter + halfCursorHeight > canvasHeight) {\n\t\t\t\t\tyCenter = canvasHeight - halfCursorHeight;\n\t\t\t\t}\n\t\t\t\tconst y1 = yCenter - halfCursorHeight;\n\t\t\t\tconst y2 = y1 + cursorHeight;\n\n\t\t\t\tif (y1 > prevY2 + 1 || color !== prevColor) {\n\t\t\t\t\t// flush prev\n\t\t\t\t\tif (i !== 0 && prevColor) {\n\t\t\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t\t\t}\n\t\t\t\t\tprevY1 = y1;\n\t\t\t\t\tprevY2 = y2;\n\t\t\t\t} else {\n\t\t\t\t\t// merge into prev\n\t\t\t\t\tif (y2 > prevY2) {\n\t\t\t\t\t\tprevY2 = y2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprevColor = color;\n\t\t\t\tcanvasCtx.fillStyle = color;\n\t\t\t}\n\t\t\tif (prevColor) {\n\t\t\t\tcanvasCtx.fillRect(cursorX, prevY1, cursorW, prevY2 - prevY1);\n\t\t\t}\n\t\t}\n\n\t\tif (this._settings.renderBorder && this._settings.borderColor && this._settings.overviewRulerLanes > 0) {\n\t\t\tcanvasCtx.beginPath();\n\t\t\tcanvasCtx.lineWidth = 1;\n\t\t\tcanvasCtx.strokeStyle = this._settings.borderColor;\n\t\t\tcanvasCtx.moveTo(0, 0);\n\t\t\tcanvasCtx.lineTo(0, canvasHeight);\n\t\t\tcanvasCtx.moveTo(1, 0);\n\t\t\tcanvasCtx.lineTo(canvasWidth, 0);\n\t\t\tcanvasCtx.stroke();\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAe,iBAAiB,EAAE,MAAM,yCAAyC,CAAC;AACzF,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AAEzD,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAE5D,OAAO,EAAE,oBAAoB,EAAE,MAAM,8BAA8B,CAAC;AACpE,OAAO,EAAE,sBAAsB,EAAE,yBAAyB,EAAE,6BAA6B,EAAE,oCAAoC,EAAE,kCAAkC,EAAE,MAAM,6CAA6C,CAAC;AAMzN,OAAO,EAAE,6BAA6B,EAAE,MAAM,8BAA8B,CAAC;AAC7E,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;;;;;;;;;AAE3D,MAAM,QAAQ;IA2Bb,YAAY,MAA4B,EAAE,KAAkB,CAAA;QAC3D,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,2BAAA,GAAyB,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,CAAC;QACvD,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,mCAAA,GAAiC,CAAC;QAEvE,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,oCAAA,GAAkC,CAAC;QAClE,MAAM,WAAW,GAAG,KAAK,CAAC,QAAQ,CAAC,6NAAyB,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAE/D,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,0CAAA,GAAwC,CAAC;QACtE,MAAM,iBAAiB,GAAG,KAAK,CAAC,QAAQ,CAAC,0NAAsB,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAClG,MAAM,kBAAkB,GAAG,KAAK,CAAC,QAAQ,CAAC,sOAAkC,CAAC,CAAC;QAC9E,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACrG,MAAM,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,wOAAoC,CAAC,CAAC;QAClF,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QAE3G,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;QAE5B,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,wBAAA,GAAsB,CAAC;QACtD,MAAM,cAAc,GAAG,WAAW,CAAC,OAAO,CAAC;QAC3C,MAAM,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC;QACrC,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,iOAA6B,CAAC,CAAC;QACjE,MAAM,iBAAiB,GAAG,sMAAoB,CAAC,oBAAoB,EAAE,CAAC;QAEtE,IAAI,UAAU,EAAE,CAAC;YAChB,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QACnC,CAAC,MAAM,IAAI,cAAc,IAAI,WAAW,KAAK,OAAO,EAAE,CAAC;YACtD,IAAI,CAAC,eAAe,GAAG,iBAAiB,CAAC;QAC1C,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7B,CAAC;QAED,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,CAAC;QACxD,MAAM,QAAQ,GAAG,UAAU,CAAC,aAAa,CAAC;QAC1C,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;QACjC,IAAI,IAAI,CAAC,kBAAkB,KAAK,CAAC,EAAE,CAAC;YACnC,wBAAwB;YACxB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACvB,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,WAAW,GAAG,AAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC;YACzD,IAAI,CAAC,YAAY,GAAG,AAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC;QAC5D,CAAC;QAED,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7E,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACZ,CAAC;IAEO,UAAU,CAAC,gBAAwB,EAAE,WAAmB,EAAE,SAAiB,EAAA;QAClF,MAAM,cAAc,GAAG,WAAW,GAAG,gBAAgB,CAAC;QAEtD,IAAI,SAAS,IAAI,CAAC,EAAE,CAAC;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YACjD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YAClD,MAAM,WAAW,GAAG,cAAc,GAAG,SAAS,GAAG,UAAU,CAAC;YAC5D,MAAM,UAAU,GAAG,gBAAgB,CAAC;YACpC,MAAM,YAAY,GAAG,UAAU,GAAG,SAAS,CAAC;YAC5C,MAAM,WAAW,GAAG,UAAU,GAAG,SAAS,GAAG,WAAW,CAAC;YAEzD,OAAO;gBACN;oBACC,CAAC;oBACD,UAAU,EAAE,OAAO;oBACnB,YAAY,EAAE,SAAS;oBACvB,UAAU,EAAE,gBAAgB;oBAC5B,WAAW,EAAE,QAAQ;oBACrB,UAAU,EAAE,eAAe;oBAC3B,YAAY,EAAE,iBAAiB;oBAC/B,UAAU,EAAE,wBAAwB;iBACpC;gBAAE;oBACF,CAAC;oBACD,SAAS,EAAE,OAAO;oBAClB,WAAW,EAAE,SAAS;oBACtB,SAAS,GAAG,WAAW,EAAE,gBAAgB;oBACzC,UAAU,EAAE,QAAQ;oBACpB,SAAS,GAAG,WAAW,GAAG,UAAU,EAAE,eAAe;oBACrD,WAAW,GAAG,UAAU,EAAE,iBAAiB;oBAC3C,SAAS,GAAG,WAAW,GAAG,UAAU,EAAE,wBAAwB;iBAC9D;aACD,CAAC;QACH,CAAC,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE,CAAC;YAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YACjD,MAAM,UAAU,GAAG,cAAc,GAAG,SAAS,CAAC;YAC9C,MAAM,UAAU,GAAG,gBAAgB,CAAC;YACpC,MAAM,WAAW,GAAG,UAAU,GAAG,SAAS,CAAC;YAE3C,OAAO;gBACN;oBACC,CAAC;oBACD,UAAU,EAAE,OAAO;oBACnB,UAAU,EAAE,SAAS;oBACrB,UAAU,EAAE,gBAAgB;oBAC5B,WAAW,EAAE,QAAQ;oBACrB,UAAU,EAAE,eAAe;oBAC3B,UAAU,EAAE,iBAAiB;oBAC7B,UAAU,EAAE,wBAAwB;iBACpC;gBAAE;oBACF,CAAC;oBACD,SAAS,EAAE,OAAO;oBAClB,SAAS,EAAE,SAAS;oBACpB,SAAS,EAAE,gBAAgB;oBAC3B,UAAU,EAAE,QAAQ;oBACpB,SAAS,GAAG,UAAU,EAAE,eAAe;oBACvC,SAAS,GAAG,UAAU,EAAE,iBAAiB;oBACzC,SAAS,GAAG,UAAU,EAAE,wBAAwB;iBAChD;aACD,CAAC;QACH,CAAC,MAAM,CAAC;YACP,MAAM,MAAM,GAAG,gBAAgB,CAAC;YAChC,MAAM,KAAK,GAAG,cAAc,CAAC;YAE7B,OAAO;gBACN;oBACC,CAAC;oBACD,MAAM,EAAE,OAAO;oBACf,MAAM,EAAE,SAAS;oBACjB,MAAM,EAAE,gBAAgB;oBACxB,MAAM,EAAE,QAAQ;oBAChB,MAAM,EAAE,eAAe;oBACvB,MAAM,EAAE,iBAAiB;oBACzB,MAAM,EAAE,wBAAwB;iBAChC;gBAAE;oBACF,CAAC;oBACD,KAAK,EAAE,OAAO;oBACd,KAAK,EAAE,SAAS;oBAChB,KAAK,EAAE,gBAAgB;oBACvB,KAAK,EAAE,QAAQ;oBACf,KAAK,EAAE,eAAe;oBACtB,KAAK,EAAE,iBAAiB;oBACxB,KAAK,EAAE,wBAAwB;iBAC/B;aACD,CAAC;QACH,CAAC;IACF,CAAC;IAEM,MAAM,CAAC,KAAe,EAAA;QAC5B,OAAO,AACN,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACjC,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACpC,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,kBAAkB,IACpD,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,YAAY,IACxC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,IACtC,IAAI,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IACpC,IAAI,CAAC,iBAAiB,KAAK,KAAK,CAAC,iBAAiB,IAClD,IAAI,CAAC,kBAAkB,KAAK,KAAK,CAAC,kBAAkB,IACpD,IAAI,CAAC,oBAAoB,KAAK,KAAK,CAAC,oBAAoB,IACxD,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,IAClC,iLAAK,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,eAAe,CAAC,IACzD,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,IACtB,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,IAC1B,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,IAChC,IAAI,CAAC,SAAS,KAAK,KAAK,CAAC,SAAS,IAClC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,WAAW,IACtC,IAAI,CAAC,YAAY,KAAK,KAAK,CAAC,YAAY,CAC3C,CAAC;IACH,CAAC;CACD;AAwBK,MAAO,wBAAyB,SAAQ,kMAAQ;IAYrD,YAAY,OAAoB,CAAA;QAC/B,KAAK,CAAC,OAAO,CAAC,CAAC;QAXR,IAAA,CAAA,mBAAmB,GAAA,EAAA,+BAAA,GAAkD;QAOrE,IAAA,CAAA,oBAAoB,GAAoC,EAAE,CAAC;QAC3D,IAAA,CAAA,wBAAwB,GAAa,EAAE,CAAC;QAK/C,IAAI,CAAC,QAAQ,OAAG,oMAAiB,EAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAElD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAE5B,IAAI,CAAC,2BAA2B,GAAG,sMAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,EAAE;YACzE,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,GAAG;YAAC;gBAAE,QAAQ,EAAE,IAAI,iMAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,iBAAiB;YAAA,CAAE;SAAC,CAAC;IACrG,CAAC;IAEe,OAAO,GAAA;QACtB,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE,CAAC;IAC5C,CAAC;IAEO,eAAe,CAAC,SAAkB,EAAA;QACzC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACnF,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC;YAC1D,gBAAgB;YAChB,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAE7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QACzD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;QAE3D,IAAI,SAAS,EAAE,CAAC;YACf,IAAI,CAAC,OAAO,EAAE,CAAC;QAChB,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAED,iCAAiC;IAEzB,sBAAsB,GAAA;QAC7B,IAAI,CAAC,mBAAmB,GAAA,EAAA,4BAAA,EAA2B,CAAC;QACpD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,2BAA2B,GAAA;QAClC,IAAI,CAAC,mBAAmB,GAAA,EAAA,2BAAA,EAA0B,CAAC;QACnD,OAAO,IAAI,CAAC;IACb,CAAC;IAEe,sBAAsB,CAAC,CAA2C,EAAA;QACjF,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;IAC5E,CAAC;IACe,oBAAoB,CAAC,CAAyC,EAAA;QAC7E,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC;YACzD,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC;YAC7C,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC;gBACb,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC;YAC3F,CAAC;YACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAAE,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;gBAAE,KAAK;YAAA,CAAE,CAAC,CAAC;QAChF,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,gMAAS,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC/E,OAAO,IAAI,CAAC,2BAA2B,EAAE,CAAC;IAC3C,CAAC;IACe,oBAAoB,CAAC,CAAyC,EAAA;QAC7E,IAAI,CAAC,CAAC,oBAAoB,EAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,2BAA2B,EAAE,CAAC;QAC3C,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IACe,SAAS,CAAC,CAA8B,EAAA;QACvD,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;IACtC,CAAC;IACe,eAAe,CAAC,CAAoC,EAAA;QACnE,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;IACtE,CAAC;IACe,cAAc,CAAC,CAAmC,EAAA;QACjE,OAAO,IAAI,CAAC,sBAAsB,EAAE,CAAC;IACtC,CAAC;IACe,cAAc,CAAC,CAAmC,EAAA;QACjE,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;IAC5E,CAAC;IAED,+BAA+B;IAExB,UAAU,GAAA;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;IAC9B,CAAC;IAEM,aAAa,CAAC,GAAqB,EAAA;IACzC,kBAAkB;IACnB,CAAC;IAEM,MAAM,CAAC,SAAqC,EAAA;QAClD,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,mBAAmB,GAAA,EAAA,+BAAA,EAA8B,CAAC;IACxD,CAAC;IAEO,OAAO,GAAA;QACd,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;QACvD,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,KAAK,CAAC,EAAE,CAAC;YAC7C,wBAAwB;YACxB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC,CAAC,iLAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACtG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACjC,OAAO;QACR,CAAC;QAED,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAChG,WAAW,CAAC,IAAI,CAAC,+MAA6B,CAAC,uBAAuB,CAAC,CAAC;QAExE,IAAI,IAAI,CAAC,mBAAmB,KAAA,EAAA,2BAAA,EAA4B,KAAI,CAAC,+MAA6B,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,WAAW,CAAC,EAAE,CAAC;YAC9I,IAAI,CAAC,mBAAmB,GAAA,EAAA,4BAAA,EAA2B,CAAC;QACrD,CAAC;QACD,IAAI,IAAI,CAAC,mBAAmB,KAAA,EAAA,2BAAA,EAA4B,KAAI,KAAC,mLAAM,EAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,QAAQ,CAAC,UAAU,KAAK,CAAC,CAAC,QAAQ,CAAC,UAAU,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;YAC7M,IAAI,CAAC,mBAAmB,GAAA,EAAA,4BAAA,EAA2B,CAAC;QACrD,CAAC;QACD,IAAI,IAAI,CAAC,mBAAmB,KAAA,EAAA,2BAAA,EAA4B,GAAE,CAAC;YAC1D,qEAAqE;YACrE,OAAO;QACR,CAAC;QACD,IAAI,CAAC,oBAAoB,GAAG,WAAW,CAAC;QACxC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAEtD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAC/C,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;QACjD,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;QAC/D,MAAM,WAAW,GAAG,YAAY,GAAG,WAAW,CAAC;QAE/C,MAAM,mBAAmB,GAAG,AAAC,EAAA,mCAAA,MAAkC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC;QAC9F,MAAM,uBAAuB,GAAG,AAAC,mBAAmB,GAAG,CAAC,CAAC,EAAG,CAAC,CAAC;QAE9D,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC;QAC1D,IAAI,eAAe,EAAE,CAAC;YACrB,IAAI,eAAe,CAAC,QAAQ,EAAE,EAAE,CAAC;gBAChC,2FAA2F;gBAC3F,SAAS,CAAC,SAAS,GAAG,iLAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBACnE,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;YACrD,CAAC,MAAM,CAAC;gBACP,0FAA0F;gBAC1F,eAAe;gBACf,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBACrD,SAAS,CAAC,SAAS,GAAG,iLAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;gBACnE,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;YACrD,CAAC;QACF,CAAC,MAAM,CAAC;YACP,mCAAmC;YACnC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;QACtD,CAAC;QAED,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3B,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAI3B,KAAK,MAAM,eAAe,IAAI,WAAW,CAAE,CAAC;YAC3C,MAAM,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC;YACpC,MAAM,mBAAmB,GAAG,eAAe,CAAC,IAAI,CAAC;YAEjD,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;YAE5B,IAAI,QAAQ,GAAG,CAAC,CAAC;YACjB,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,IAAI,MAAM,GAAG,CAAC,CAAC;YACf,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC;gBACpE,MAAM,IAAI,GAAG,mBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxC,MAAM,eAAe,GAAG,mBAAmB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvD,MAAM,aAAa,GAAG,mBAAmB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAErD,IAAI,EAAE,GAAG,AAAC,UAAU,CAAC,8BAA8B,CAAC,eAAe,CAAC,GAAG,WAAW,CAAC,EAAG,CAAC,CAAC;gBACxF,IAAI,EAAE,GAAI,AAAD,CAAE,UAAU,CAAC,8BAA8B,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC,GAAG,WAAW,CAAC,EAAG,CAAC,CAAC;gBACrG,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;gBACvB,IAAI,MAAM,GAAG,mBAAmB,EAAE,CAAC;oBAClC,IAAI,OAAO,GAAG,AAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAG,CAAC,CAAC;oBAClC,IAAI,OAAO,GAAG,uBAAuB,EAAE,CAAC;wBACvC,OAAO,GAAG,uBAAuB,CAAC;oBACnC,CAAC,MAAM,IAAI,OAAO,GAAG,uBAAuB,GAAG,YAAY,EAAE,CAAC;wBAC7D,OAAO,GAAG,YAAY,GAAG,uBAAuB,CAAC;oBAClD,CAAC;oBACD,EAAE,GAAG,OAAO,GAAG,uBAAuB,CAAC;oBACvC,EAAE,GAAG,OAAO,GAAG,uBAAuB,CAAC;gBACxC,CAAC;gBAED,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,IAAI,KAAK,QAAQ,EAAE,CAAC;oBAC1C,aAAa;oBACb,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;wBACb,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;oBACvE,CAAC;oBACD,QAAQ,GAAG,IAAI,CAAC;oBAChB,MAAM,GAAG,EAAE,CAAC;oBACZ,MAAM,GAAG,EAAE,CAAC;gBACb,CAAC,MAAM,CAAC;oBACP,kBAAkB;oBAClB,IAAI,EAAE,GAAG,MAAM,EAAE,CAAC;wBACjB,MAAM,GAAG,EAAE,CAAC;oBACb,CAAC;gBACF,CAAC;YACF,CAAC;YACD,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QACvE,CAAC;QAED,eAAe;QACf,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;YAChC,MAAM,YAAY,GAAG,AAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC;YACzD,MAAM,gBAAgB,GAAI,AAAD,YAAa,GAAG,CAAC,CAAC,EAAG,CAAC,CAAC;YAChD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA,EAAA,0BAAA,IAAwB,CAAC;YACzD,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAA,EAAA,0BAAA,IAAwB,CAAC;YAEzD,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC;YAClB,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC;YAClB,IAAI,SAAS,GAAkB,IAAI,CAAC;YACpC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE,CAAC;gBAClE,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAC7C,IAAI,CAAC,KAAK,EAAE,CAAC;oBACZ,SAAS;gBACV,CAAC;gBACD,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAEjD,IAAI,OAAO,GAAG,AAAC,UAAU,CAAC,8BAA8B,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,WAAW,CAAC,EAAG,CAAC,CAAC;gBAC/F,IAAI,OAAO,GAAG,gBAAgB,EAAE,CAAC;oBAChC,OAAO,GAAG,gBAAgB,CAAC;gBAC5B,CAAC,MAAM,IAAI,OAAO,GAAG,gBAAgB,GAAG,YAAY,EAAE,CAAC;oBACtD,OAAO,GAAG,YAAY,GAAG,gBAAgB,CAAC;gBAC3C,CAAC;gBACD,MAAM,EAAE,GAAG,OAAO,GAAG,gBAAgB,CAAC;gBACtC,MAAM,EAAE,GAAG,EAAE,GAAG,YAAY,CAAC;gBAE7B,IAAI,EAAE,GAAG,MAAM,GAAG,CAAC,IAAI,KAAK,KAAK,SAAS,EAAE,CAAC;oBAC5C,aAAa;oBACb,IAAI,CAAC,KAAK,CAAC,IAAI,SAAS,EAAE,CAAC;wBAC1B,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;oBAC/D,CAAC;oBACD,MAAM,GAAG,EAAE,CAAC;oBACZ,MAAM,GAAG,EAAE,CAAC;gBACb,CAAC,MAAM,CAAC;oBACP,kBAAkB;oBAClB,IAAI,EAAE,GAAG,MAAM,EAAE,CAAC;wBACjB,MAAM,GAAG,EAAE,CAAC;oBACb,CAAC;gBACF,CAAC;gBACD,SAAS,GAAG,KAAK,CAAC;gBAClB,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;YAC7B,CAAC;YACD,IAAI,SAAS,EAAE,CAAC;gBACf,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;YAC/D,CAAC;QACF,CAAC;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,CAAC,EAAE,CAAC;YACxG,SAAS,CAAC,SAAS,EAAE,CAAC;YACtB,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YACxB,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YACnD,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;YAClC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACjC,SAAS,CAAC,MAAM,EAAE,CAAC;QACpB,CAAC;IACF,CAAC;CACD","debugId":null}},
    {"offset": {"line": 6334, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/overviewRuler.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/overviewRuler/overviewRuler.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/overviewRuler/vs/editor/browser/viewParts/overviewRuler/overviewRuler.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverviewRuler } from '../../editorBrowser.js';\nimport { OverviewRulerPosition, EditorOption } from '../../../common/config/editorOptions.js';\nimport { ColorZone, OverviewRulerZone, OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\n\n/**\n * The overview ruler appears underneath the editor scroll bar and shows things\n * like the cursor, various decorations, etc.\n */\nexport class OverviewRuler extends ViewEventHandler implements IOverviewRuler {\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _zoneManager: OverviewZoneManager;\n\n\tconstructor(context: ViewContext, cssClassName: string) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setClassName(cssClassName);\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\n\t\tthis._zoneManager = new OverviewZoneManager((lineNumber: number) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n\t\tthis._zoneManager.setDOMWidth(0);\n\t\tthis._zoneManager.setDOMHeight(0);\n\t\tthis._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n\t\tthis._zoneManager.setLineHeight(options.get(EditorOption.lineHeight));\n\n\t\tthis._zoneManager.setPixelRatio(options.get(EditorOption.pixelRatio));\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (e.hasChanged(EditorOption.lineHeight)) {\n\t\t\tthis._zoneManager.setLineHeight(options.get(EditorOption.lineHeight));\n\t\t\tthis._render();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.pixelRatio)) {\n\t\t\tthis._zoneManager.setPixelRatio(options.get(EditorOption.pixelRatio));\n\t\t\tthis._domNode.setWidth(this._zoneManager.getDOMWidth());\n\t\t\tthis._domNode.setHeight(this._zoneManager.getDOMHeight());\n\t\t\tthis._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n\t\t\tthis._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n\t\t\tthis._render();\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tthis._render();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (e.scrollHeightChanged) {\n\t\t\tthis._zoneManager.setOuterHeight(e.scrollHeight);\n\t\t\tthis._render();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\tthis._render();\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic setLayout(position: OverviewRulerPosition): void {\n\t\tthis._domNode.setTop(position.top);\n\t\tthis._domNode.setRight(position.right);\n\n\t\tlet hasChanged = false;\n\t\thasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n\t\thasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n\n\t\tif (hasChanged) {\n\t\t\tthis._domNode.setWidth(this._zoneManager.getDOMWidth());\n\t\t\tthis._domNode.setHeight(this._zoneManager.getDOMHeight());\n\t\t\tthis._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n\t\t\tthis._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n\n\t\t\tthis._render();\n\t\t}\n\t}\n\n\tpublic setZones(zones: OverviewRulerZone[]): void {\n\t\tthis._zoneManager.setZones(zones);\n\t\tthis._render();\n\t}\n\n\tprivate _render(): boolean {\n\t\tif (this._zoneManager.getOuterHeight() === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst width = this._zoneManager.getCanvasWidth();\n\t\tconst height = this._zoneManager.getCanvasHeight();\n\n\t\tconst colorZones = this._zoneManager.resolveColorZones();\n\t\tconst id2Color = this._zoneManager.getId2Color();\n\n\t\tconst ctx = this._domNode.domNode.getContext('2d')!;\n\t\tctx.clearRect(0, 0, width, height);\n\t\tif (colorZones.length > 0) {\n\t\t\tthis._renderOneLane(ctx, colorZones, id2Color, width);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _renderOneLane(ctx: CanvasRenderingContext2D, colorZones: ColorZone[], id2Color: string[], width: number): void {\n\n\t\tlet currentColorId = 0;\n\t\tlet currentFrom = 0;\n\t\tlet currentTo = 0;\n\n\t\tfor (const zone of colorZones) {\n\n\t\t\tconst zoneColorId = zone.colorId;\n\t\t\tconst zoneFrom = zone.from;\n\t\t\tconst zoneTo = zone.to;\n\n\t\t\tif (zoneColorId !== currentColorId) {\n\t\t\t\tctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n\n\t\t\t\tcurrentColorId = zoneColorId;\n\t\t\t\tctx.fillStyle = id2Color[currentColorId];\n\t\t\t\tcurrentFrom = zoneFrom;\n\t\t\t\tcurrentTo = zoneTo;\n\t\t\t} else {\n\t\t\t\tif (currentTo >= zoneFrom) {\n\t\t\t\t\tcurrentTo = Math.max(currentTo, zoneTo);\n\t\t\t\t} else {\n\t\t\t\t\tctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n\t\t\t\t\tcurrentFrom = zoneFrom;\n\t\t\t\t\tcurrentTo = zoneTo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IOverviewRuler } from '../../editorBrowser.js';\nimport { OverviewRulerPosition, EditorOption } from '../../../common/config/editorOptions.js';\nimport { ColorZone, OverviewRulerZone, OverviewZoneManager } from '../../../common/viewModel/overviewZoneManager.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewEventHandler } from '../../../common/viewEventHandler.js';\n\n/**\n * The overview ruler appears underneath the editor scroll bar and shows things\n * like the cursor, various decorations, etc.\n */\nexport class OverviewRuler extends ViewEventHandler implements IOverviewRuler {\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _domNode: FastDomNode<HTMLCanvasElement>;\n\tprivate readonly _zoneManager: OverviewZoneManager;\n\n\tconstructor(context: ViewContext, cssClassName: string) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\n\t\tthis._domNode = createFastDomNode(document.createElement('canvas'));\n\t\tthis._domNode.setClassName(cssClassName);\n\t\tthis._domNode.setPosition('absolute');\n\t\tthis._domNode.setLayerHinting(true);\n\t\tthis._domNode.setContain('strict');\n\n\t\tthis._zoneManager = new OverviewZoneManager((lineNumber: number) => this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber));\n\t\tthis._zoneManager.setDOMWidth(0);\n\t\tthis._zoneManager.setDOMHeight(0);\n\t\tthis._zoneManager.setOuterHeight(this._context.viewLayout.getScrollHeight());\n\t\tthis._zoneManager.setLineHeight(options.get(EditorOption.lineHeight));\n\n\t\tthis._zoneManager.setPixelRatio(options.get(EditorOption.pixelRatio));\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tsuper.dispose();\n\t}\n\n\t// ---- begin view event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (e.hasChanged(EditorOption.lineHeight)) {\n\t\t\tthis._zoneManager.setLineHeight(options.get(EditorOption.lineHeight));\n\t\t\tthis._render();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.pixelRatio)) {\n\t\t\tthis._zoneManager.setPixelRatio(options.get(EditorOption.pixelRatio));\n\t\t\tthis._domNode.setWidth(this._zoneManager.getDOMWidth());\n\t\t\tthis._domNode.setHeight(this._zoneManager.getDOMHeight());\n\t\t\tthis._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n\t\t\tthis._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n\t\t\tthis._render();\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\tthis._render();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tif (e.scrollHeightChanged) {\n\t\t\tthis._zoneManager.setOuterHeight(e.scrollHeight);\n\t\t\tthis._render();\n\t\t}\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\tthis._render();\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tpublic getDomNode(): HTMLElement {\n\t\treturn this._domNode.domNode;\n\t}\n\n\tpublic setLayout(position: OverviewRulerPosition): void {\n\t\tthis._domNode.setTop(position.top);\n\t\tthis._domNode.setRight(position.right);\n\n\t\tlet hasChanged = false;\n\t\thasChanged = this._zoneManager.setDOMWidth(position.width) || hasChanged;\n\t\thasChanged = this._zoneManager.setDOMHeight(position.height) || hasChanged;\n\n\t\tif (hasChanged) {\n\t\t\tthis._domNode.setWidth(this._zoneManager.getDOMWidth());\n\t\t\tthis._domNode.setHeight(this._zoneManager.getDOMHeight());\n\t\t\tthis._domNode.domNode.width = this._zoneManager.getCanvasWidth();\n\t\t\tthis._domNode.domNode.height = this._zoneManager.getCanvasHeight();\n\n\t\t\tthis._render();\n\t\t}\n\t}\n\n\tpublic setZones(zones: OverviewRulerZone[]): void {\n\t\tthis._zoneManager.setZones(zones);\n\t\tthis._render();\n\t}\n\n\tprivate _render(): boolean {\n\t\tif (this._zoneManager.getOuterHeight() === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst width = this._zoneManager.getCanvasWidth();\n\t\tconst height = this._zoneManager.getCanvasHeight();\n\n\t\tconst colorZones = this._zoneManager.resolveColorZones();\n\t\tconst id2Color = this._zoneManager.getId2Color();\n\n\t\tconst ctx = this._domNode.domNode.getContext('2d')!;\n\t\tctx.clearRect(0, 0, width, height);\n\t\tif (colorZones.length > 0) {\n\t\t\tthis._renderOneLane(ctx, colorZones, id2Color, width);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate _renderOneLane(ctx: CanvasRenderingContext2D, colorZones: ColorZone[], id2Color: string[], width: number): void {\n\n\t\tlet currentColorId = 0;\n\t\tlet currentFrom = 0;\n\t\tlet currentTo = 0;\n\n\t\tfor (const zone of colorZones) {\n\n\t\t\tconst zoneColorId = zone.colorId;\n\t\t\tconst zoneFrom = zone.from;\n\t\t\tconst zoneTo = zone.to;\n\n\t\t\tif (zoneColorId !== currentColorId) {\n\t\t\t\tctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n\n\t\t\t\tcurrentColorId = zoneColorId;\n\t\t\t\tctx.fillStyle = id2Color[currentColorId];\n\t\t\t\tcurrentFrom = zoneFrom;\n\t\t\t\tcurrentTo = zoneTo;\n\t\t\t} else {\n\t\t\t\tif (currentTo >= zoneFrom) {\n\t\t\t\t\tcurrentTo = Math.max(currentTo, zoneTo);\n\t\t\t\t} else {\n\t\t\t\t\tctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n\t\t\t\t\tcurrentFrom = zoneFrom;\n\t\t\t\t\tcurrentTo = zoneTo;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.fillRect(0, currentFrom, width, currentTo - currentFrom);\n\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6469, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/rulers.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/rulers/rulers.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulers/vs/editor/browser/viewParts/rulers/rulers.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './rulers.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption, IRulerOption } from '../../../common/config/editorOptions.js';\n\n/**\n * Rulers are vertical lines that appear at certain columns in the editor. There can be >= 0 rulers\n * at a time.\n */\nexport class Rulers extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _renderedRulers: FastDomNode<HTMLElement>[];\n\tprivate _rulers: IRulerOption[];\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tthis.domNode = createFastDomNode<HTMLElement>(document.createElement('div'));\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setClassName('view-rulers');\n\t\tthis._renderedRulers = [];\n\t\tconst options = this._context.configuration.options;\n\t\tthis._rulers = options.get(EditorOption.rulers);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._rulers = options.get(EditorOption.rulers);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tprivate _ensureRulersCount(): void {\n\t\tconst currentCount = this._renderedRulers.length;\n\t\tconst desiredCount = this._rulers.length;\n\n\t\tif (currentCount === desiredCount) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentCount < desiredCount) {\n\t\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\t\tconst rulerWidth = tabSize;\n\t\t\tlet addCount = desiredCount - currentCount;\n\t\t\twhile (addCount > 0) {\n\t\t\t\tconst node = createFastDomNode(document.createElement('div'));\n\t\t\t\tnode.setClassName('view-ruler');\n\t\t\t\tnode.setWidth(rulerWidth);\n\t\t\t\tthis.domNode.appendChild(node);\n\t\t\t\tthis._renderedRulers.push(node);\n\t\t\t\taddCount--;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet removeCount = currentCount - desiredCount;\n\t\twhile (removeCount > 0) {\n\t\t\tconst node = this._renderedRulers.pop()!;\n\t\t\tthis.domNode.removeChild(node);\n\t\t\tremoveCount--;\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\n\t\tthis._ensureRulersCount();\n\n\t\tfor (let i = 0, len = this._rulers.length; i < len; i++) {\n\t\t\tconst node = this._renderedRulers[i];\n\t\t\tconst ruler = this._rulers[i];\n\n\t\t\tnode.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n\t\t\tnode.setHeight(Math.min(ctx.scrollHeight, 1000000));\n\t\t\tnode.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './rulers.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption, IRulerOption } from '../../../common/config/editorOptions.js';\n\n/**\n * Rulers are vertical lines that appear at certain columns in the editor. There can be >= 0 rulers\n * at a time.\n */\nexport class Rulers extends ViewPart {\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\tprivate readonly _renderedRulers: FastDomNode<HTMLElement>[];\n\tprivate _rulers: IRulerOption[];\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tthis.domNode = createFastDomNode<HTMLElement>(document.createElement('div'));\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setClassName('view-rulers');\n\t\tthis._renderedRulers = [];\n\t\tconst options = this._context.configuration.options;\n\t\tthis._rulers = options.get(EditorOption.rulers);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._rulers = options.get(EditorOption.rulers);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollHeightChanged;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tprivate _ensureRulersCount(): void {\n\t\tconst currentCount = this._renderedRulers.length;\n\t\tconst desiredCount = this._rulers.length;\n\n\t\tif (currentCount === desiredCount) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentCount < desiredCount) {\n\t\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\t\tconst rulerWidth = tabSize;\n\t\t\tlet addCount = desiredCount - currentCount;\n\t\t\twhile (addCount > 0) {\n\t\t\t\tconst node = createFastDomNode(document.createElement('div'));\n\t\t\t\tnode.setClassName('view-ruler');\n\t\t\t\tnode.setWidth(rulerWidth);\n\t\t\t\tthis.domNode.appendChild(node);\n\t\t\t\tthis._renderedRulers.push(node);\n\t\t\t\taddCount--;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet removeCount = currentCount - desiredCount;\n\t\twhile (removeCount > 0) {\n\t\t\tconst node = this._renderedRulers.pop()!;\n\t\t\tthis.domNode.removeChild(node);\n\t\t\tremoveCount--;\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\n\t\tthis._ensureRulersCount();\n\n\t\tfor (let i = 0, len = this._rulers.length; i < len; i++) {\n\t\t\tconst node = this._renderedRulers[i];\n\t\t\tconst ruler = this._rulers[i];\n\n\t\t\tnode.setBoxShadow(ruler.color ? `1px 0 0 0 ${ruler.color} inset` : ``);\n\t\t\tnode.setHeight(Math.min(ctx.scrollHeight, 1000000));\n\t\t\tnode.setLeft(ruler.column * this._typicalHalfwidthCharacterWidth);\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6553, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/scrollDecoration/vs/editor/browser/viewParts/scrollDecoration/scrollDecoration.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './scrollDecoration.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\n\nexport class ScrollDecorationViewPart extends ViewPart {\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _scrollTop: number;\n\tprivate _width: number;\n\tprivate _shouldShow: boolean;\n\tprivate _useShadows: boolean;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._scrollTop = 0;\n\t\tthis._width = 0;\n\t\tthis._updateWidth();\n\t\tthis._shouldShow = false;\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tthis._useShadows = scrollbar.useShadows;\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _updateShouldShow(): boolean {\n\t\tconst newShouldShow = (this._useShadows && this._scrollTop > 0);\n\t\tif (this._shouldShow !== newShouldShow) {\n\t\t\tthis._shouldShow = newShouldShow;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _updateWidth(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tif (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n\t\t\tthis._width = layoutInfo.width;\n\t\t} else {\n\t\t\tthis._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n\t\t}\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tthis._useShadows = scrollbar.useShadows;\n\t\tthis._updateWidth();\n\t\tthis._updateShouldShow();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn this._updateShouldShow();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._width);\n\t\tthis._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './scrollDecoration.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\n\nexport class ScrollDecorationViewPart extends ViewPart {\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\tprivate _scrollTop: number;\n\tprivate _width: number;\n\tprivate _shouldShow: boolean;\n\tprivate _useShadows: boolean;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tthis._scrollTop = 0;\n\t\tthis._width = 0;\n\t\tthis._updateWidth();\n\t\tthis._shouldShow = false;\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tthis._useShadows = scrollbar.useShadows;\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tprivate _updateShouldShow(): boolean {\n\t\tconst newShouldShow = (this._useShadows && this._scrollTop > 0);\n\t\tif (this._shouldShow !== newShouldShow) {\n\t\t\tthis._shouldShow = newShouldShow;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tprivate _updateWidth(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tif (layoutInfo.minimap.renderMinimap === 0 || (layoutInfo.minimap.minimapWidth > 0 && layoutInfo.minimap.minimapLeft === 0)) {\n\t\t\tthis._width = layoutInfo.width;\n\t\t} else {\n\t\t\tthis._width = layoutInfo.width - layoutInfo.verticalScrollbarWidth;\n\t\t}\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst scrollbar = options.get(EditorOption.scrollbar);\n\t\tthis._useShadows = scrollbar.useShadows;\n\t\tthis._updateWidth();\n\t\tthis._updateShouldShow();\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn this._updateShouldShow();\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._domNode.setWidth(this._width);\n\t\tthis._domNode.setClassName(this._shouldShow ? 'scroll-decoration' : '');\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6628, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/selections.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/selections/selections.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/selections/vs/editor/browser/viewParts/selections/selections.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HorizontalRange, LineVisibleRanges, RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\nconst enum CornerStyle {\n\tEXTERN,\n\tINTERN,\n\tFLAT\n}\n\ninterface IVisibleRangeEndPointStyle {\n\ttop: CornerStyle;\n\tbottom: CornerStyle;\n}\n\nclass HorizontalRangeWithStyle {\n\tpublic left: number;\n\tpublic width: number;\n\tpublic startStyle: IVisibleRangeEndPointStyle | null;\n\tpublic endStyle: IVisibleRangeEndPointStyle | null;\n\n\tconstructor(other: HorizontalRange) {\n\t\tthis.left = other.left;\n\t\tthis.width = other.width;\n\t\tthis.startStyle = null;\n\t\tthis.endStyle = null;\n\t}\n}\n\nclass LineVisibleRangesWithStyle {\n\tpublic lineNumber: number;\n\tpublic ranges: HorizontalRangeWithStyle[];\n\n\tconstructor(lineNumber: number, ranges: HorizontalRangeWithStyle[]) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.ranges = ranges;\n\t}\n}\n\nfunction toStyledRange(item: HorizontalRange): HorizontalRangeWithStyle {\n\treturn new HorizontalRangeWithStyle(item);\n}\n\nfunction toStyled(item: LineVisibleRanges): LineVisibleRangesWithStyle {\n\treturn new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\n\n/**\n * This view part displays selected text to the user. Every line has its own selection overlay.\n */\nexport class SelectionsOverlay extends DynamicViewOverlay {\n\n\tprivate static readonly SELECTION_CLASS_NAME = 'selected-text';\n\tprivate static readonly SELECTION_TOP_LEFT = 'top-left-radius';\n\tprivate static readonly SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\n\tprivate static readonly SELECTION_TOP_RIGHT = 'top-right-radius';\n\tprivate static readonly SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\n\tprivate static readonly EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\n\n\tprivate static readonly ROUNDED_PIECE_WIDTH = 10;\n\n\tprivate readonly _context: ViewContext;\n\tprivate _roundedSelection: boolean;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _selections: Range[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis._selections = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;//e.inlineDecorationsChanged;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _visibleRangesHaveGaps(linesVisibleRanges: LineVisibleRangesWithStyle[]): boolean {\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[i];\n\n\t\t\tif (lineVisibleRanges.ranges.length > 1) {\n\t\t\t\t// There are two ranges on the same line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _enrichVisibleRangesWithStyle(viewport: Range, linesVisibleRanges: LineVisibleRangesWithStyle[], previousFrame: LineVisibleRangesWithStyle[] | null): void {\n\t\tconst epsilon = this._typicalHalfwidthCharacterWidth / 4;\n\t\tlet previousFrameTop: HorizontalRangeWithStyle | null = null;\n\t\tlet previousFrameBottom: HorizontalRangeWithStyle | null = null;\n\n\t\tif (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n\n\t\t\tconst topLineNumber = linesVisibleRanges[0].lineNumber;\n\t\t\tif (topLineNumber === viewport.startLineNumber) {\n\t\t\t\tfor (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === topLineNumber) {\n\t\t\t\t\t\tpreviousFrameTop = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n\t\t\tif (bottomLineNumber === viewport.endLineNumber) {\n\t\t\t\tfor (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === bottomLineNumber) {\n\t\t\t\t\t\tpreviousFrameBottom = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (previousFrameTop && !previousFrameTop.startStyle) {\n\t\t\t\tpreviousFrameTop = null;\n\t\t\t}\n\t\t\tif (previousFrameBottom && !previousFrameBottom.startStyle) {\n\t\t\t\tpreviousFrameBottom = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\t// We know for a fact that there is precisely one range on each line\n\t\t\tconst curLineRange = linesVisibleRanges[i].ranges[0];\n\t\t\tconst curLeft = curLineRange.left;\n\t\t\tconst curRight = curLineRange.left + curLineRange.width;\n\n\t\t\tconst startStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tconst endStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tif (i > 0) {\n\t\t\t\t// Look above\n\t\t\t\tconst prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n\t\t\t\tconst prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - prevLeft) < epsilon) {\n\t\t\t\t\tstartStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (curLeft > prevLeft) {\n\t\t\t\t\tstartStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - prevRight) < epsilon) {\n\t\t\t\t\tendStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (prevLeft < curRight && curRight < prevRight) {\n\t\t\t\t\tendStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameTop) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.top = previousFrameTop.startStyle!.top;\n\t\t\t\tendStyle.top = previousFrameTop.endStyle!.top;\n\t\t\t}\n\n\t\t\tif (i + 1 < len) {\n\t\t\t\t// Look below\n\t\t\t\tconst nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n\t\t\t\tconst nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - nextLeft) < epsilon) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (nextLeft < curLeft && curLeft < nextRight) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - nextRight) < epsilon) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (curRight < nextRight) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameBottom) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.bottom = previousFrameBottom.startStyle!.bottom;\n\t\t\t\tendStyle.bottom = previousFrameBottom.endStyle!.bottom;\n\t\t\t}\n\n\t\t\tcurLineRange.startStyle = startStyle;\n\t\t\tcurLineRange.endStyle = endStyle;\n\t\t}\n\t}\n\n\tprivate _getVisibleRangesWithStyle(selection: Range, ctx: RenderingContext, previousFrame: LineVisibleRangesWithStyle[] | null): LineVisibleRangesWithStyle[] {\n\t\tconst _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n\t\tconst linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n\t\tconst visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n\n\t\tif (!visibleRangesHaveGaps && this._roundedSelection) {\n\t\t\tthis._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n\t\t}\n\n\t\t// The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n\t\treturn linesVisibleRanges;\n\t}\n\n\tprivate _createSelectionPiece(top: number, bottom: number, className: string, left: number, width: number): string {\n\t\treturn (\n\t\t\t'<div class=\"cslr '\n\t\t\t+ className\n\t\t\t+ '\" style=\"'\n\t\t\t+ 'top:' + top.toString() + 'px;'\n\t\t\t+ 'bottom:' + bottom.toString() + 'px;'\n\t\t\t+ 'left:' + left.toString() + 'px;'\n\t\t\t+ 'width:' + width.toString() + 'px;'\n\t\t\t+ '\"></div>'\n\t\t);\n\t}\n\n\tprivate _actualRenderOneSelection(output2: [string, string][], visibleStartLineNumber: number, hasMultipleSelections: boolean, visibleRanges: LineVisibleRangesWithStyle[]): void {\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n\n\t\tconst firstLineNumber = visibleRanges[0].lineNumber;\n\t\tconst lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n\n\t\tfor (let i = 0, len = visibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = visibleRanges[i];\n\t\t\tconst lineNumber = lineVisibleRanges.lineNumber;\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\n\t\t\tconst top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n\t\t\tconst bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n\n\t\t\tlet innerCornerOutput = '';\n\t\t\tlet restOfSelectionOutput = '';\n\n\t\t\tfor (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[j];\n\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN || startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the left\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN || endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the right\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet className = SelectionsOverlay.SELECTION_CLASS_NAME;\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (startStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trestOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n\t\t\t}\n\n\t\t\toutput2[lineIndex][0] += innerCornerOutput;\n\t\t\toutput2[lineIndex][1] += restOfSelectionOutput;\n\t\t}\n\t}\n\n\tprivate _previousFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\tpublic prepareRender(ctx: RenderingContext): void {\n\n\t\t// Build HTML for inner corners separate from HTML for the rest of selections,\n\t\t// as the inner corner HTML can interfere with that of other selections.\n\t\t// In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n\t\tconst output: [string, string][] = [];\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = ['', ''];\n\t\t}\n\n\t\tconst thisFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\t\tfor (let i = 0, len = this._selections.length; i < len; i++) {\n\t\t\tconst selection = this._selections[i];\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\tthisFrameVisibleRangesWithStyle[i] = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n\t\t\tthisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n\t\t\tthis._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n\t\t}\n\n\t\tthis._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n\t\tthis._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n\tif (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n\t\tcollector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n\t}\n});\n\nfunction abs(n: number): number {\n\treturn n < 0 ? -n : n;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './selections.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Range } from '../../../common/core/range.js';\nimport { HorizontalRange, LineVisibleRanges, RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { editorSelectionForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\nconst enum CornerStyle {\n\tEXTERN,\n\tINTERN,\n\tFLAT\n}\n\ninterface IVisibleRangeEndPointStyle {\n\ttop: CornerStyle;\n\tbottom: CornerStyle;\n}\n\nclass HorizontalRangeWithStyle {\n\tpublic left: number;\n\tpublic width: number;\n\tpublic startStyle: IVisibleRangeEndPointStyle | null;\n\tpublic endStyle: IVisibleRangeEndPointStyle | null;\n\n\tconstructor(other: HorizontalRange) {\n\t\tthis.left = other.left;\n\t\tthis.width = other.width;\n\t\tthis.startStyle = null;\n\t\tthis.endStyle = null;\n\t}\n}\n\nclass LineVisibleRangesWithStyle {\n\tpublic lineNumber: number;\n\tpublic ranges: HorizontalRangeWithStyle[];\n\n\tconstructor(lineNumber: number, ranges: HorizontalRangeWithStyle[]) {\n\t\tthis.lineNumber = lineNumber;\n\t\tthis.ranges = ranges;\n\t}\n}\n\nfunction toStyledRange(item: HorizontalRange): HorizontalRangeWithStyle {\n\treturn new HorizontalRangeWithStyle(item);\n}\n\nfunction toStyled(item: LineVisibleRanges): LineVisibleRangesWithStyle {\n\treturn new LineVisibleRangesWithStyle(item.lineNumber, item.ranges.map(toStyledRange));\n}\n\n/**\n * This view part displays selected text to the user. Every line has its own selection overlay.\n */\nexport class SelectionsOverlay extends DynamicViewOverlay {\n\n\tprivate static readonly SELECTION_CLASS_NAME = 'selected-text';\n\tprivate static readonly SELECTION_TOP_LEFT = 'top-left-radius';\n\tprivate static readonly SELECTION_BOTTOM_LEFT = 'bottom-left-radius';\n\tprivate static readonly SELECTION_TOP_RIGHT = 'top-right-radius';\n\tprivate static readonly SELECTION_BOTTOM_RIGHT = 'bottom-right-radius';\n\tprivate static readonly EDITOR_BACKGROUND_CLASS_NAME = 'monaco-editor-background';\n\n\tprivate static readonly ROUNDED_PIECE_WIDTH = 10;\n\n\tprivate readonly _context: ViewContext;\n\tprivate _roundedSelection: boolean;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\tprivate _selections: Range[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis._selections = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._roundedSelection = options.get(EditorOption.roundedSelection);\n\t\tthis._typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;//e.inlineDecorationsChanged;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tprivate _visibleRangesHaveGaps(linesVisibleRanges: LineVisibleRangesWithStyle[]): boolean {\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = linesVisibleRanges[i];\n\n\t\t\tif (lineVisibleRanges.ranges.length > 1) {\n\t\t\t\t// There are two ranges on the same line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate _enrichVisibleRangesWithStyle(viewport: Range, linesVisibleRanges: LineVisibleRangesWithStyle[], previousFrame: LineVisibleRangesWithStyle[] | null): void {\n\t\tconst epsilon = this._typicalHalfwidthCharacterWidth / 4;\n\t\tlet previousFrameTop: HorizontalRangeWithStyle | null = null;\n\t\tlet previousFrameBottom: HorizontalRangeWithStyle | null = null;\n\n\t\tif (previousFrame && previousFrame.length > 0 && linesVisibleRanges.length > 0) {\n\n\t\t\tconst topLineNumber = linesVisibleRanges[0].lineNumber;\n\t\t\tif (topLineNumber === viewport.startLineNumber) {\n\t\t\t\tfor (let i = 0; !previousFrameTop && i < previousFrame.length; i++) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === topLineNumber) {\n\t\t\t\t\t\tpreviousFrameTop = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bottomLineNumber = linesVisibleRanges[linesVisibleRanges.length - 1].lineNumber;\n\t\t\tif (bottomLineNumber === viewport.endLineNumber) {\n\t\t\t\tfor (let i = previousFrame.length - 1; !previousFrameBottom && i >= 0; i--) {\n\t\t\t\t\tif (previousFrame[i].lineNumber === bottomLineNumber) {\n\t\t\t\t\t\tpreviousFrameBottom = previousFrame[i].ranges[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (previousFrameTop && !previousFrameTop.startStyle) {\n\t\t\t\tpreviousFrameTop = null;\n\t\t\t}\n\t\t\tif (previousFrameBottom && !previousFrameBottom.startStyle) {\n\t\t\t\tpreviousFrameBottom = null;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0, len = linesVisibleRanges.length; i < len; i++) {\n\t\t\t// We know for a fact that there is precisely one range on each line\n\t\t\tconst curLineRange = linesVisibleRanges[i].ranges[0];\n\t\t\tconst curLeft = curLineRange.left;\n\t\t\tconst curRight = curLineRange.left + curLineRange.width;\n\n\t\t\tconst startStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tconst endStyle = {\n\t\t\t\ttop: CornerStyle.EXTERN,\n\t\t\t\tbottom: CornerStyle.EXTERN\n\t\t\t};\n\n\t\t\tif (i > 0) {\n\t\t\t\t// Look above\n\t\t\t\tconst prevLeft = linesVisibleRanges[i - 1].ranges[0].left;\n\t\t\t\tconst prevRight = linesVisibleRanges[i - 1].ranges[0].left + linesVisibleRanges[i - 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - prevLeft) < epsilon) {\n\t\t\t\t\tstartStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (curLeft > prevLeft) {\n\t\t\t\t\tstartStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - prevRight) < epsilon) {\n\t\t\t\t\tendStyle.top = CornerStyle.FLAT;\n\t\t\t\t} else if (prevLeft < curRight && curRight < prevRight) {\n\t\t\t\t\tendStyle.top = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameTop) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.top = previousFrameTop.startStyle!.top;\n\t\t\t\tendStyle.top = previousFrameTop.endStyle!.top;\n\t\t\t}\n\n\t\t\tif (i + 1 < len) {\n\t\t\t\t// Look below\n\t\t\t\tconst nextLeft = linesVisibleRanges[i + 1].ranges[0].left;\n\t\t\t\tconst nextRight = linesVisibleRanges[i + 1].ranges[0].left + linesVisibleRanges[i + 1].ranges[0].width;\n\n\t\t\t\tif (abs(curLeft - nextLeft) < epsilon) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (nextLeft < curLeft && curLeft < nextRight) {\n\t\t\t\t\tstartStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\n\t\t\t\tif (abs(curRight - nextRight) < epsilon) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.FLAT;\n\t\t\t\t} else if (curRight < nextRight) {\n\t\t\t\t\tendStyle.bottom = CornerStyle.INTERN;\n\t\t\t\t}\n\t\t\t} else if (previousFrameBottom) {\n\t\t\t\t// Accept some hiccups near the viewport edges to save on repaints\n\t\t\t\tstartStyle.bottom = previousFrameBottom.startStyle!.bottom;\n\t\t\t\tendStyle.bottom = previousFrameBottom.endStyle!.bottom;\n\t\t\t}\n\n\t\t\tcurLineRange.startStyle = startStyle;\n\t\t\tcurLineRange.endStyle = endStyle;\n\t\t}\n\t}\n\n\tprivate _getVisibleRangesWithStyle(selection: Range, ctx: RenderingContext, previousFrame: LineVisibleRangesWithStyle[] | null): LineVisibleRangesWithStyle[] {\n\t\tconst _linesVisibleRanges = ctx.linesVisibleRangesForRange(selection, true) || [];\n\t\tconst linesVisibleRanges = _linesVisibleRanges.map(toStyled);\n\t\tconst visibleRangesHaveGaps = this._visibleRangesHaveGaps(linesVisibleRanges);\n\n\t\tif (!visibleRangesHaveGaps && this._roundedSelection) {\n\t\t\tthis._enrichVisibleRangesWithStyle(ctx.visibleRange, linesVisibleRanges, previousFrame);\n\t\t}\n\n\t\t// The visible ranges are sorted TOP-BOTTOM and LEFT-RIGHT\n\t\treturn linesVisibleRanges;\n\t}\n\n\tprivate _createSelectionPiece(top: number, bottom: number, className: string, left: number, width: number): string {\n\t\treturn (\n\t\t\t'<div class=\"cslr '\n\t\t\t+ className\n\t\t\t+ '\" style=\"'\n\t\t\t+ 'top:' + top.toString() + 'px;'\n\t\t\t+ 'bottom:' + bottom.toString() + 'px;'\n\t\t\t+ 'left:' + left.toString() + 'px;'\n\t\t\t+ 'width:' + width.toString() + 'px;'\n\t\t\t+ '\"></div>'\n\t\t);\n\t}\n\n\tprivate _actualRenderOneSelection(output2: [string, string][], visibleStartLineNumber: number, hasMultipleSelections: boolean, visibleRanges: LineVisibleRangesWithStyle[]): void {\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRangesHaveStyle = !!visibleRanges[0].ranges[0].startStyle;\n\n\t\tconst firstLineNumber = visibleRanges[0].lineNumber;\n\t\tconst lastLineNumber = visibleRanges[visibleRanges.length - 1].lineNumber;\n\n\t\tfor (let i = 0, len = visibleRanges.length; i < len; i++) {\n\t\t\tconst lineVisibleRanges = visibleRanges[i];\n\t\t\tconst lineNumber = lineVisibleRanges.lineNumber;\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\n\t\t\tconst top = hasMultipleSelections ? (lineNumber === firstLineNumber ? 1 : 0) : 0;\n\t\t\tconst bottom = hasMultipleSelections ? (lineNumber !== firstLineNumber && lineNumber === lastLineNumber ? 1 : 0) : 0;\n\n\t\t\tlet innerCornerOutput = '';\n\t\t\tlet restOfSelectionOutput = '';\n\n\t\t\tfor (let j = 0, lenJ = lineVisibleRanges.ranges.length; j < lenJ; j++) {\n\t\t\t\tconst visibleRange = lineVisibleRanges.ranges[j];\n\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN || startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the left\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (startStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (startStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left - SelectionsOverlay.ROUNDED_PIECE_WIDTH, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN || endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t// Reverse rounded corner to the right\n\n\t\t\t\t\t\t// First comes the selection (blue layer)\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, SelectionsOverlay.SELECTION_CLASS_NAME, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\n\t\t\t\t\t\t// Second comes the background (white layer) with inverse border radius\n\t\t\t\t\t\tlet className = SelectionsOverlay.EDITOR_BACKGROUND_CLASS_NAME;\n\t\t\t\t\t\tif (endStyle.top === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (endStyle.bottom === CornerStyle.INTERN) {\n\t\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinnerCornerOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left + visibleRange.width, SelectionsOverlay.ROUNDED_PIECE_WIDTH);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet className = SelectionsOverlay.SELECTION_CLASS_NAME;\n\t\t\t\tif (visibleRangesHaveStyle) {\n\t\t\t\t\tconst startStyle = visibleRange.startStyle!;\n\t\t\t\t\tconst endStyle = visibleRange.endStyle!;\n\t\t\t\t\tif (startStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (startStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_LEFT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.top === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_TOP_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t\tif (endStyle.bottom === CornerStyle.EXTERN) {\n\t\t\t\t\t\tclassName += ' ' + SelectionsOverlay.SELECTION_BOTTOM_RIGHT;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trestOfSelectionOutput += this._createSelectionPiece(top, bottom, className, visibleRange.left, visibleRange.width);\n\t\t\t}\n\n\t\t\toutput2[lineIndex][0] += innerCornerOutput;\n\t\t\toutput2[lineIndex][1] += restOfSelectionOutput;\n\t\t}\n\t}\n\n\tprivate _previousFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\tpublic prepareRender(ctx: RenderingContext): void {\n\n\t\t// Build HTML for inner corners separate from HTML for the rest of selections,\n\t\t// as the inner corner HTML can interfere with that of other selections.\n\t\t// In final render, make sure to place the inner corner HTML before the rest of selection HTML. See issue #77777.\n\t\tconst output: [string, string][] = [];\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\toutput[lineIndex] = ['', ''];\n\t\t}\n\n\t\tconst thisFrameVisibleRangesWithStyle: (LineVisibleRangesWithStyle[] | null)[] = [];\n\t\tfor (let i = 0, len = this._selections.length; i < len; i++) {\n\t\t\tconst selection = this._selections[i];\n\t\t\tif (selection.isEmpty()) {\n\t\t\t\tthisFrameVisibleRangesWithStyle[i] = null;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRangesWithStyle = this._getVisibleRangesWithStyle(selection, ctx, this._previousFrameVisibleRangesWithStyle[i]);\n\t\t\tthisFrameVisibleRangesWithStyle[i] = visibleRangesWithStyle;\n\t\t\tthis._actualRenderOneSelection(output, visibleStartLineNumber, this._selections.length > 1, visibleRangesWithStyle);\n\t\t}\n\n\t\tthis._previousFrameVisibleRangesWithStyle = thisFrameVisibleRangesWithStyle;\n\t\tthis._renderResult = output.map(([internalCorners, restOfSelection]) => internalCorners + restOfSelection);\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\tconst editorSelectionForegroundColor = theme.getColor(editorSelectionForeground);\n\tif (editorSelectionForegroundColor && !editorSelectionForegroundColor.isTransparent()) {\n\t\tcollector.addRule(`.monaco-editor .view-line span.inline-selected-text { color: ${editorSelectionForegroundColor}; }`);\n\t}\n});\n\nfunction abs(n: number): number {\n\treturn n < 0 ? -n : n;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6965, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursor.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewCursors/viewCursor.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/vs/editor/browser/viewParts/viewCursors/viewCursor.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\n\nexport interface IViewCursorRenderData {\n\tdomNode: HTMLElement;\n\tposition: Position;\n\tcontentLeft: number;\n\twidth: number;\n\theight: number;\n}\n\nclass ViewCursorRenderData {\n\tconstructor(\n\t\tpublic readonly top: number,\n\t\tpublic readonly left: number,\n\t\tpublic readonly paddingLeft: number,\n\t\tpublic readonly width: number,\n\t\tpublic readonly height: number,\n\t\tpublic readonly textContent: string,\n\t\tpublic readonly textContentClassName: string\n\t) { }\n}\n\nexport enum CursorPlurality {\n\tSingle,\n\tMultiPrimary,\n\tMultiSecondary,\n}\n\nexport class ViewCursor {\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _lineCursorWidth: number;\n\tprivate _lineCursorHeight: number;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\n\tprivate _isVisible: boolean;\n\n\tprivate _position: Position;\n\tprivate _pluralityClass: string;\n\n\tprivate _lastRenderedContent: string;\n\tprivate _renderData: ViewCursorRenderData | null;\n\n\tconstructor(context: ViewContext, plurality: CursorPlurality) {\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._lineCursorWidth = Math.min(options.get(EditorOption.cursorWidth), this._typicalHalfwidthCharacterWidth);\n\t\tthis._lineCursorHeight = options.get(EditorOption.cursorHeight);\n\n\t\tthis._isVisible = true;\n\n\t\t// Create the dom node\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tthis._domNode.setHeight(this._context.viewLayout.getLineHeightForLineNumber(1));\n\t\tthis._domNode.setTop(0);\n\t\tthis._domNode.setLeft(0);\n\t\tapplyFontInfo(this._domNode, fontInfo);\n\t\tthis._domNode.setDisplay('none');\n\n\t\tthis._position = new Position(1, 1);\n\t\tthis._pluralityClass = '';\n\t\tthis.setPlurality(plurality);\n\n\t\tthis._lastRenderedContent = '';\n\t\tthis._renderData = null;\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getPosition(): Position {\n\t\treturn this._position;\n\t}\n\n\tpublic setPlurality(plurality: CursorPlurality) {\n\t\tswitch (plurality) {\n\t\t\tdefault:\n\t\t\tcase CursorPlurality.Single:\n\t\t\t\tthis._pluralityClass = '';\n\t\t\t\tbreak;\n\n\t\t\tcase CursorPlurality.MultiPrimary:\n\t\t\t\tthis._pluralityClass = 'cursor-primary';\n\t\t\t\tbreak;\n\n\t\t\tcase CursorPlurality.MultiSecondary:\n\t\t\t\tthis._pluralityClass = 'cursor-secondary';\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic show(): void {\n\t\tif (!this._isVisible) {\n\t\t\tthis._domNode.setVisibility('inherit');\n\t\t\tthis._isVisible = true;\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (this._isVisible) {\n\t\t\tthis._domNode.setVisibility('hidden');\n\t\t\tthis._isVisible = false;\n\t\t}\n\t}\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._lineCursorWidth = Math.min(options.get(EditorOption.cursorWidth), this._typicalHalfwidthCharacterWidth);\n\t\tthis._lineCursorHeight = options.get(EditorOption.cursorHeight);\n\t\tapplyFontInfo(this._domNode, fontInfo);\n\n\t\treturn true;\n\t}\n\n\tpublic onCursorPositionChanged(position: Position, pauseAnimation: boolean): boolean {\n\t\tif (pauseAnimation) {\n\t\t\tthis._domNode.domNode.style.transitionProperty = 'none';\n\t\t} else {\n\t\t\tthis._domNode.domNode.style.transitionProperty = '';\n\t\t}\n\t\tthis._position = position;\n\t\treturn true;\n\t}\n\n\t/**\n\t * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n\t * Also returns the next grapheme.\n\t */\n\tprivate _getGraphemeAwarePosition(): [Position, string] {\n\t\tconst { lineNumber, column } = this._position;\n\t\tconst lineContent = this._context.viewModel.getLineContent(lineNumber);\n\t\tconst [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n\t\treturn [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n\t}\n\n\tprivate _prepareRender(ctx: RenderingContext): ViewCursorRenderData | null {\n\t\tlet textContent = '';\n\t\tlet textContentClassName = '';\n\t\tconst [position, nextGrapheme] = this._getGraphemeAwarePosition();\n\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(position.lineNumber);\n\t\tconst lineCursorHeight = (\n\t\t\tthis._lineCursorHeight === 0\n\t\t\t\t? lineHeight // 0 indicates that the cursor should take the full line height\n\t\t\t\t: Math.min(lineHeight, this._lineCursorHeight)\n\t\t);\n\t\tconst lineHeightAdjustment = (lineHeight - lineCursorHeight) / 2;\n\n\t\tif (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(position);\n\t\t\tif (!visibleRange || visibleRange.outsideRenderedLine) {\n\t\t\t\t// Outside viewport\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst window = dom.getWindow(this._domNode.domNode);\n\t\t\tlet width: number;\n\t\t\tif (this._cursorStyle === TextEditorCursorStyle.Line) {\n\t\t\t\twidth = dom.computeScreenAwareSize(window, this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n\t\t\t\tif (width > 2) {\n\t\t\t\t\ttextContent = nextGrapheme;\n\t\t\t\t\ttextContentClassName = this._getTokenClassName(position);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twidth = dom.computeScreenAwareSize(window, 1);\n\t\t\t}\n\n\t\t\tlet left = visibleRange.left;\n\t\t\tlet paddingLeft = 0;\n\t\t\tif (width >= 2 && left >= 1) {\n\t\t\t\t// shift the cursor a bit between the characters\n\t\t\t\tpaddingLeft = 1;\n\t\t\t\tleft -= paddingLeft;\n\t\t\t}\n\n\t\t\tconst top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta + lineHeightAdjustment;\n\t\t\treturn new ViewCursorRenderData(top, left, paddingLeft, width, lineCursorHeight, textContent, textContentClassName);\n\t\t}\n\n\t\tconst visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n\t\tif (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n\t\t\t// Outside viewport\n\t\t\treturn null;\n\t\t}\n\n\t\tconst firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n\t\tif (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n\t\t\t// Outside viewport\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = firstVisibleRangeForCharacter.ranges[0];\n\t\tconst width = (\n\t\t\tnextGrapheme === '\\t'\n\t\t\t\t? this._typicalHalfwidthCharacterWidth\n\t\t\t\t: (range.width < 1\n\t\t\t\t\t? this._typicalHalfwidthCharacterWidth\n\t\t\t\t\t: range.width)\n\t\t);\n\n\t\tif (this._cursorStyle === TextEditorCursorStyle.Block) {\n\t\t\ttextContent = nextGrapheme;\n\t\t\ttextContentClassName = this._getTokenClassName(position);\n\t\t}\n\n\t\tlet top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n\t\tlet height = lineHeight;\n\n\t\t// Underline might interfere with clicking\n\t\tif (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n\t\t\ttop += lineHeight - 2;\n\t\t\theight = 2;\n\t\t}\n\n\t\treturn new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n\t}\n\n\tprivate _getTokenClassName(position: Position): string {\n\t\tconst lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n\t\tconst tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n\t\treturn lineData.tokens.getClassName(tokenIndex);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._renderData = this._prepareRender(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): IViewCursorRenderData | null {\n\t\tif (!this._renderData) {\n\t\t\tthis._domNode.setDisplay('none');\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._lastRenderedContent !== this._renderData.textContent) {\n\t\t\tthis._lastRenderedContent = this._renderData.textContent;\n\t\t\tthis._domNode.domNode.textContent = this._lastRenderedContent;\n\t\t}\n\n\t\tthis._domNode.setClassName(`cursor ${this._pluralityClass} ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n\n\t\tthis._domNode.setDisplay('block');\n\t\tthis._domNode.setTop(this._renderData.top);\n\t\tthis._domNode.setLeft(this._renderData.left);\n\t\tthis._domNode.setPaddingLeft(this._renderData.paddingLeft);\n\t\tthis._domNode.setWidth(this._renderData.width);\n\t\tthis._domNode.setLineHeight(this._renderData.height);\n\t\tthis._domNode.setHeight(this._renderData.height);\n\n\t\treturn {\n\t\t\tdomNode: this._domNode.domNode,\n\t\t\tposition: this._position,\n\t\t\tcontentLeft: this._renderData.left,\n\t\t\theight: this._renderData.height,\n\t\t\twidth: 2\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../config/domFontInfo.js';\nimport { TextEditorCursorStyle, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../base/browser/ui/mouseCursor/mouseCursor.js';\n\nexport interface IViewCursorRenderData {\n\tdomNode: HTMLElement;\n\tposition: Position;\n\tcontentLeft: number;\n\twidth: number;\n\theight: number;\n}\n\nclass ViewCursorRenderData {\n\tconstructor(\n\t\tpublic readonly top: number,\n\t\tpublic readonly left: number,\n\t\tpublic readonly paddingLeft: number,\n\t\tpublic readonly width: number,\n\t\tpublic readonly height: number,\n\t\tpublic readonly textContent: string,\n\t\tpublic readonly textContentClassName: string\n\t) { }\n}\n\nexport enum CursorPlurality {\n\tSingle,\n\tMultiPrimary,\n\tMultiSecondary,\n}\n\nexport class ViewCursor {\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _lineCursorWidth: number;\n\tprivate _lineCursorHeight: number;\n\tprivate _typicalHalfwidthCharacterWidth: number;\n\n\tprivate _isVisible: boolean;\n\n\tprivate _position: Position;\n\tprivate _pluralityClass: string;\n\n\tprivate _lastRenderedContent: string;\n\tprivate _renderData: ViewCursorRenderData | null;\n\n\tconstructor(context: ViewContext, plurality: CursorPlurality) {\n\t\tthis._context = context;\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._lineCursorWidth = Math.min(options.get(EditorOption.cursorWidth), this._typicalHalfwidthCharacterWidth);\n\t\tthis._lineCursorHeight = options.get(EditorOption.cursorHeight);\n\n\t\tthis._isVisible = true;\n\n\t\t// Create the dom node\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setClassName(`cursor ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tthis._domNode.setHeight(this._context.viewLayout.getLineHeightForLineNumber(1));\n\t\tthis._domNode.setTop(0);\n\t\tthis._domNode.setLeft(0);\n\t\tapplyFontInfo(this._domNode, fontInfo);\n\t\tthis._domNode.setDisplay('none');\n\n\t\tthis._position = new Position(1, 1);\n\t\tthis._pluralityClass = '';\n\t\tthis.setPlurality(plurality);\n\n\t\tthis._lastRenderedContent = '';\n\t\tthis._renderData = null;\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\tpublic getPosition(): Position {\n\t\treturn this._position;\n\t}\n\n\tpublic setPlurality(plurality: CursorPlurality) {\n\t\tswitch (plurality) {\n\t\t\tdefault:\n\t\t\tcase CursorPlurality.Single:\n\t\t\t\tthis._pluralityClass = '';\n\t\t\t\tbreak;\n\n\t\t\tcase CursorPlurality.MultiPrimary:\n\t\t\t\tthis._pluralityClass = 'cursor-primary';\n\t\t\t\tbreak;\n\n\t\t\tcase CursorPlurality.MultiSecondary:\n\t\t\t\tthis._pluralityClass = 'cursor-secondary';\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic show(): void {\n\t\tif (!this._isVisible) {\n\t\t\tthis._domNode.setVisibility('inherit');\n\t\t\tthis._isVisible = true;\n\t\t}\n\t}\n\n\tpublic hide(): void {\n\t\tif (this._isVisible) {\n\t\t\tthis._domNode.setVisibility('hidden');\n\t\t\tthis._isVisible = false;\n\t\t}\n\t}\n\n\tpublic onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n\t\tthis._lineCursorWidth = Math.min(options.get(EditorOption.cursorWidth), this._typicalHalfwidthCharacterWidth);\n\t\tthis._lineCursorHeight = options.get(EditorOption.cursorHeight);\n\t\tapplyFontInfo(this._domNode, fontInfo);\n\n\t\treturn true;\n\t}\n\n\tpublic onCursorPositionChanged(position: Position, pauseAnimation: boolean): boolean {\n\t\tif (pauseAnimation) {\n\t\t\tthis._domNode.domNode.style.transitionProperty = 'none';\n\t\t} else {\n\t\t\tthis._domNode.domNode.style.transitionProperty = '';\n\t\t}\n\t\tthis._position = position;\n\t\treturn true;\n\t}\n\n\t/**\n\t * If `this._position` is inside a grapheme, returns the position where the grapheme starts.\n\t * Also returns the next grapheme.\n\t */\n\tprivate _getGraphemeAwarePosition(): [Position, string] {\n\t\tconst { lineNumber, column } = this._position;\n\t\tconst lineContent = this._context.viewModel.getLineContent(lineNumber);\n\t\tconst [startOffset, endOffset] = strings.getCharContainingOffset(lineContent, column - 1);\n\t\treturn [new Position(lineNumber, startOffset + 1), lineContent.substring(startOffset, endOffset)];\n\t}\n\n\tprivate _prepareRender(ctx: RenderingContext): ViewCursorRenderData | null {\n\t\tlet textContent = '';\n\t\tlet textContentClassName = '';\n\t\tconst [position, nextGrapheme] = this._getGraphemeAwarePosition();\n\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(position.lineNumber);\n\t\tconst lineCursorHeight = (\n\t\t\tthis._lineCursorHeight === 0\n\t\t\t\t? lineHeight // 0 indicates that the cursor should take the full line height\n\t\t\t\t: Math.min(lineHeight, this._lineCursorHeight)\n\t\t);\n\t\tconst lineHeightAdjustment = (lineHeight - lineCursorHeight) / 2;\n\n\t\tif (this._cursorStyle === TextEditorCursorStyle.Line || this._cursorStyle === TextEditorCursorStyle.LineThin) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(position);\n\t\t\tif (!visibleRange || visibleRange.outsideRenderedLine) {\n\t\t\t\t// Outside viewport\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst window = dom.getWindow(this._domNode.domNode);\n\t\t\tlet width: number;\n\t\t\tif (this._cursorStyle === TextEditorCursorStyle.Line) {\n\t\t\t\twidth = dom.computeScreenAwareSize(window, this._lineCursorWidth > 0 ? this._lineCursorWidth : 2);\n\t\t\t\tif (width > 2) {\n\t\t\t\t\ttextContent = nextGrapheme;\n\t\t\t\t\ttextContentClassName = this._getTokenClassName(position);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twidth = dom.computeScreenAwareSize(window, 1);\n\t\t\t}\n\n\t\t\tlet left = visibleRange.left;\n\t\t\tlet paddingLeft = 0;\n\t\t\tif (width >= 2 && left >= 1) {\n\t\t\t\t// shift the cursor a bit between the characters\n\t\t\t\tpaddingLeft = 1;\n\t\t\t\tleft -= paddingLeft;\n\t\t\t}\n\n\t\t\tconst top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta + lineHeightAdjustment;\n\t\t\treturn new ViewCursorRenderData(top, left, paddingLeft, width, lineCursorHeight, textContent, textContentClassName);\n\t\t}\n\n\t\tconst visibleRangeForCharacter = ctx.linesVisibleRangesForRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column + nextGrapheme.length), false);\n\t\tif (!visibleRangeForCharacter || visibleRangeForCharacter.length === 0) {\n\t\t\t// Outside viewport\n\t\t\treturn null;\n\t\t}\n\n\t\tconst firstVisibleRangeForCharacter = visibleRangeForCharacter[0];\n\t\tif (firstVisibleRangeForCharacter.outsideRenderedLine || firstVisibleRangeForCharacter.ranges.length === 0) {\n\t\t\t// Outside viewport\n\t\t\treturn null;\n\t\t}\n\n\t\tconst range = firstVisibleRangeForCharacter.ranges[0];\n\t\tconst width = (\n\t\t\tnextGrapheme === '\\t'\n\t\t\t\t? this._typicalHalfwidthCharacterWidth\n\t\t\t\t: (range.width < 1\n\t\t\t\t\t? this._typicalHalfwidthCharacterWidth\n\t\t\t\t\t: range.width)\n\t\t);\n\n\t\tif (this._cursorStyle === TextEditorCursorStyle.Block) {\n\t\t\ttextContent = nextGrapheme;\n\t\t\ttextContentClassName = this._getTokenClassName(position);\n\t\t}\n\n\t\tlet top = ctx.getVerticalOffsetForLineNumber(position.lineNumber) - ctx.bigNumbersDelta;\n\t\tlet height = lineHeight;\n\n\t\t// Underline might interfere with clicking\n\t\tif (this._cursorStyle === TextEditorCursorStyle.Underline || this._cursorStyle === TextEditorCursorStyle.UnderlineThin) {\n\t\t\ttop += lineHeight - 2;\n\t\t\theight = 2;\n\t\t}\n\n\t\treturn new ViewCursorRenderData(top, range.left, 0, width, height, textContent, textContentClassName);\n\t}\n\n\tprivate _getTokenClassName(position: Position): string {\n\t\tconst lineData = this._context.viewModel.getViewLineData(position.lineNumber);\n\t\tconst tokenIndex = lineData.tokens.findTokenIndexAtOffset(position.column - 1);\n\t\treturn lineData.tokens.getClassName(tokenIndex);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._renderData = this._prepareRender(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): IViewCursorRenderData | null {\n\t\tif (!this._renderData) {\n\t\t\tthis._domNode.setDisplay('none');\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this._lastRenderedContent !== this._renderData.textContent) {\n\t\t\tthis._lastRenderedContent = this._renderData.textContent;\n\t\t\tthis._domNode.domNode.textContent = this._lastRenderedContent;\n\t\t}\n\n\t\tthis._domNode.setClassName(`cursor ${this._pluralityClass} ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ${this._renderData.textContentClassName}`);\n\n\t\tthis._domNode.setDisplay('block');\n\t\tthis._domNode.setTop(this._renderData.top);\n\t\tthis._domNode.setLeft(this._renderData.left);\n\t\tthis._domNode.setPaddingLeft(this._renderData.paddingLeft);\n\t\tthis._domNode.setWidth(this._renderData.width);\n\t\tthis._domNode.setLineHeight(this._renderData.height);\n\t\tthis._domNode.setHeight(this._renderData.height);\n\n\t\treturn {\n\t\t\tdomNode: this._domNode.domNode,\n\t\t\tposition: this._position,\n\t\t\tcontentLeft: this._renderData.left,\n\t\t\theight: this._renderData.height,\n\t\t\twidth: 2\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7192, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/viewCursors.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewCursors/viewCursors.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewCursors/vs/editor/browser/viewParts/viewCursors/viewCursors.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './viewCursors.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { IViewCursorRenderData, ViewCursor, CursorPlurality } from './viewCursor.js';\nimport { TextEditorCursorBlinkingStyle, TextEditorCursorStyle, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport {\n\teditorCursorBackground, editorCursorForeground,\n\teditorMultiCursorPrimaryForeground, editorMultiCursorPrimaryBackground,\n\teditorMultiCursorSecondaryForeground, editorMultiCursorSecondaryBackground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { CursorChangeReason } from '../../../common/cursorEvents.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\n\n/**\n * View cursors is a view part responsible for rendering the primary cursor and\n * any secondary cursors that are currently active.\n */\nexport class ViewCursors extends ViewPart {\n\n\tstatic readonly BLINK_INTERVAL = 500;\n\n\tprivate _readOnly: boolean;\n\tprivate _cursorBlinking: TextEditorCursorBlinkingStyle;\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _cursorSmoothCaretAnimation: 'off' | 'explicit' | 'on';\n\tprivate _editContextEnabled: boolean;\n\tprivate _selectionIsEmpty: boolean;\n\tprivate _isComposingInput: boolean;\n\n\tprivate _isVisible: boolean;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly _startCursorBlinkAnimation: TimeoutTimer;\n\tprivate readonly _cursorFlatBlinkInterval: IntervalTimer;\n\tprivate _blinkingEnabled: boolean;\n\n\tprivate _editorHasFocus: boolean;\n\n\tprivate readonly _primaryCursor: ViewCursor;\n\tprivate readonly _secondaryCursors: ViewCursor[];\n\tprivate _renderData: IViewCursorRenderData[];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tconst options = this._context.configuration.options;\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._isComposingInput = false;\n\n\t\tthis._isVisible = false;\n\n\t\tthis._primaryCursor = new ViewCursor(this._context, CursorPlurality.Single);\n\t\tthis._secondaryCursors = [];\n\t\tthis._renderData = [];\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t\tthis._updateDomClassName();\n\n\t\tthis._domNode.appendChild(this._primaryCursor.getDomNode());\n\n\t\tthis._startCursorBlinkAnimation = new TimeoutTimer();\n\t\tthis._cursorFlatBlinkInterval = new WindowIntervalTimer();\n\n\t\tthis._blinkingEnabled = false;\n\n\t\tthis._editorHasFocus = false;\n\t\tthis._updateBlinking();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._startCursorBlinkAnimation.dispose();\n\t\tthis._cursorFlatBlinkInterval.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onCompositionStart(e: viewEvents.ViewCompositionStartEvent): boolean {\n\t\tthis._isComposingInput = true;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onCompositionEnd(e: viewEvents.ViewCompositionEndEvent): boolean {\n\t\tthis._isComposingInput = false;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\n\t\tthis._updateBlinking();\n\t\tthis._updateDomClassName();\n\n\t\tthis._primaryCursor.onConfigurationChanged(e);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate _onCursorPositionChanged(position: Position, secondaryPositions: Position[], reason: CursorChangeReason): void {\n\t\tconst pauseAnimation = (\n\t\t\tthis._secondaryCursors.length !== secondaryPositions.length\n\t\t\t|| (this._cursorSmoothCaretAnimation === 'explicit' && reason !== CursorChangeReason.Explicit)\n\t\t);\n\t\tthis._primaryCursor.setPlurality(secondaryPositions.length ? CursorPlurality.MultiPrimary : CursorPlurality.Single);\n\t\tthis._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n\t\tthis._updateBlinking();\n\n\t\tif (this._secondaryCursors.length < secondaryPositions.length) {\n\t\t\t// Create new cursors\n\t\t\tconst addCnt = secondaryPositions.length - this._secondaryCursors.length;\n\t\t\tfor (let i = 0; i < addCnt; i++) {\n\t\t\t\tconst newCursor = new ViewCursor(this._context, CursorPlurality.MultiSecondary);\n\t\t\t\tthis._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n\t\t\t\tthis._secondaryCursors.push(newCursor);\n\t\t\t}\n\t\t} else if (this._secondaryCursors.length > secondaryPositions.length) {\n\t\t\t// Remove some cursors\n\t\t\tconst removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n\t\t\tfor (let i = 0; i < removeCnt; i++) {\n\t\t\t\tthis._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n\t\t\t\tthis._secondaryCursors.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < secondaryPositions.length; i++) {\n\t\t\tthis._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n\t\t}\n\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst positions: Position[] = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tpositions[i] = e.selections[i].getPosition();\n\t\t}\n\t\tthis._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n\n\t\tconst selectionIsEmpty = e.selections[0].isEmpty();\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\tthis._updateDomClassName();\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis._editorHasFocus = e.isFocused;\n\t\tthis._updateBlinking();\n\t\treturn false;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tconst shouldRender = (position: Position) => {\n\t\t\tfor (let i = 0, len = e.ranges.length; i < len; i++) {\n\t\t\t\tif (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (shouldRender(this._primaryCursor.getPosition())) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const secondaryCursor of this._secondaryCursors) {\n\t\t\tif (shouldRender(secondaryCursor.getPosition())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// ---- blinking logic\n\n\tprivate _getCursorBlinking(): TextEditorCursorBlinkingStyle {\n\t\t// TODO: Remove the following if statement when experimental edit context is made default sole implementation\n\t\tif (this._isComposingInput && !this._editContextEnabled) {\n\t\t\t// avoid double cursors\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (!this._editorHasFocus) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (this._readOnly) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Solid;\n\t\t}\n\t\treturn this._cursorBlinking;\n\t}\n\n\tprivate _updateBlinking(): void {\n\t\tthis._startCursorBlinkAnimation.cancel();\n\t\tthis._cursorFlatBlinkInterval.cancel();\n\n\t\tconst blinkingStyle = this._getCursorBlinking();\n\n\t\t// hidden and solid are special as they involve no animations\n\t\tconst isHidden = (blinkingStyle === TextEditorCursorBlinkingStyle.Hidden);\n\t\tconst isSolid = (blinkingStyle === TextEditorCursorBlinkingStyle.Solid);\n\n\t\tif (isHidden) {\n\t\t\tthis._hide();\n\t\t} else {\n\t\t\tthis._show();\n\t\t}\n\n\t\tthis._blinkingEnabled = false;\n\t\tthis._updateDomClassName();\n\n\t\tif (!isHidden && !isSolid) {\n\t\t\tif (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n\t\t\t\t// flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n\t\t\t\tthis._cursorFlatBlinkInterval.cancelAndSet(() => {\n\t\t\t\t\tif (this._isVisible) {\n\t\t\t\t\t\tthis._hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._show();\n\t\t\t\t\t}\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n\t\t\t} else {\n\t\t\t\tthis._startCursorBlinkAnimation.setIfNotSet(() => {\n\t\t\t\t\tthis._blinkingEnabled = true;\n\t\t\t\t\tthis._updateDomClassName();\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL);\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- end blinking logic\n\n\tprivate _updateDomClassName(): void {\n\t\tthis._domNode.setClassName(this._getClassName());\n\t}\n\n\tprivate _getClassName(): string {\n\t\tlet result = 'cursors-layer';\n\t\tif (!this._selectionIsEmpty) {\n\t\t\tresult += ' has-selection';\n\t\t}\n\t\tswitch (this._cursorStyle) {\n\t\t\tcase TextEditorCursorStyle.Line:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Block:\n\t\t\t\tresult += ' cursor-block-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Underline:\n\t\t\t\tresult += ' cursor-underline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.LineThin:\n\t\t\t\tresult += ' cursor-line-thin-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.BlockOutline:\n\t\t\t\tresult += ' cursor-block-outline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.UnderlineThin:\n\t\t\t\tresult += ' cursor-underline-thin-style';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t}\n\t\tif (this._blinkingEnabled) {\n\t\t\tswitch (this._getCursorBlinking()) {\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Blink:\n\t\t\t\t\tresult += ' cursor-blink';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Smooth:\n\t\t\t\t\tresult += ' cursor-smooth';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Phase:\n\t\t\t\t\tresult += ' cursor-phase';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Expand:\n\t\t\t\t\tresult += ' cursor-expand';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Solid:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t}\n\t\t} else {\n\t\t\tresult += ' cursor-solid';\n\t\t}\n\t\tif (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n\t\t\tresult += ' cursor-smooth-caret-animation';\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _show(): void {\n\t\tthis._primaryCursor.show();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].show();\n\t\t}\n\t\tthis._isVisible = true;\n\t}\n\n\tprivate _hide(): void {\n\t\tthis._primaryCursor.hide();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].hide();\n\t\t}\n\t\tthis._isVisible = false;\n\t}\n\n\t// ---- IViewPart implementation\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursor.prepareRender(ctx);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst renderData: IViewCursorRenderData[] = [];\n\t\tlet renderDataLen = 0;\n\n\t\tconst primaryRenderData = this._primaryCursor.render(ctx);\n\t\tif (primaryRenderData) {\n\t\t\trenderData[renderDataLen++] = primaryRenderData;\n\t\t}\n\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tconst secondaryRenderData = this._secondaryCursors[i].render(ctx);\n\t\t\tif (secondaryRenderData) {\n\t\t\t\trenderData[renderDataLen++] = secondaryRenderData;\n\t\t\t}\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic getLastRenderData(): IViewCursorRenderData[] {\n\t\treturn this._renderData;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\ttype CursorTheme = {\n\t\tforeground: string;\n\t\tbackground: string;\n\t\tclass: string;\n\t};\n\n\tconst cursorThemes: CursorTheme[] = [\n\t\t{ class: '.cursor', foreground: editorCursorForeground, background: editorCursorBackground },\n\t\t{ class: '.cursor-primary', foreground: editorMultiCursorPrimaryForeground, background: editorMultiCursorPrimaryBackground },\n\t\t{ class: '.cursor-secondary', foreground: editorMultiCursorSecondaryForeground, background: editorMultiCursorSecondaryBackground },\n\t];\n\n\tfor (const cursorTheme of cursorThemes) {\n\t\tconst caret = theme.getColor(cursorTheme.foreground);\n\t\tif (caret) {\n\t\t\tlet caretBackground = theme.getColor(cursorTheme.background);\n\t\t\tif (!caretBackground) {\n\t\t\t\tcaretBackground = caret.opposite();\n\t\t\t}\n\t\t\tcollector.addRule(`.monaco-editor .cursors-layer ${cursorTheme.class} { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(`.monaco-editor .cursors-layer.has-selection ${cursorTheme.class} { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './viewCursors.css';\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../../base/common/async.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { IViewCursorRenderData, ViewCursor, CursorPlurality } from './viewCursor.js';\nimport { TextEditorCursorBlinkingStyle, TextEditorCursorStyle, EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport {\n\teditorCursorBackground, editorCursorForeground,\n\teditorMultiCursorPrimaryForeground, editorMultiCursorPrimaryBackground,\n\teditorMultiCursorSecondaryForeground, editorMultiCursorSecondaryBackground } from '../../../common/core/editorColorRegistry.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { CursorChangeReason } from '../../../common/cursorEvents.js';\nimport { WindowIntervalTimer, getWindow } from '../../../../base/browser/dom.js';\n\n/**\n * View cursors is a view part responsible for rendering the primary cursor and\n * any secondary cursors that are currently active.\n */\nexport class ViewCursors extends ViewPart {\n\n\tstatic readonly BLINK_INTERVAL = 500;\n\n\tprivate _readOnly: boolean;\n\tprivate _cursorBlinking: TextEditorCursorBlinkingStyle;\n\tprivate _cursorStyle: TextEditorCursorStyle;\n\tprivate _cursorSmoothCaretAnimation: 'off' | 'explicit' | 'on';\n\tprivate _editContextEnabled: boolean;\n\tprivate _selectionIsEmpty: boolean;\n\tprivate _isComposingInput: boolean;\n\n\tprivate _isVisible: boolean;\n\n\tprivate readonly _domNode: FastDomNode<HTMLElement>;\n\n\tprivate readonly _startCursorBlinkAnimation: TimeoutTimer;\n\tprivate readonly _cursorFlatBlinkInterval: IntervalTimer;\n\tprivate _blinkingEnabled: boolean;\n\n\tprivate _editorHasFocus: boolean;\n\n\tprivate readonly _primaryCursor: ViewCursor;\n\tprivate readonly _secondaryCursors: ViewCursor[];\n\tprivate _renderData: IViewCursorRenderData[];\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\n\t\tconst options = this._context.configuration.options;\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\t\tthis._selectionIsEmpty = true;\n\t\tthis._isComposingInput = false;\n\n\t\tthis._isVisible = false;\n\n\t\tthis._primaryCursor = new ViewCursor(this._context, CursorPlurality.Single);\n\t\tthis._secondaryCursors = [];\n\t\tthis._renderData = [];\n\n\t\tthis._domNode = createFastDomNode(document.createElement('div'));\n\t\tthis._domNode.setAttribute('role', 'presentation');\n\t\tthis._domNode.setAttribute('aria-hidden', 'true');\n\t\tthis._updateDomClassName();\n\n\t\tthis._domNode.appendChild(this._primaryCursor.getDomNode());\n\n\t\tthis._startCursorBlinkAnimation = new TimeoutTimer();\n\t\tthis._cursorFlatBlinkInterval = new WindowIntervalTimer();\n\n\t\tthis._blinkingEnabled = false;\n\n\t\tthis._editorHasFocus = false;\n\t\tthis._updateBlinking();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._startCursorBlinkAnimation.dispose();\n\t\tthis._cursorFlatBlinkInterval.dispose();\n\t}\n\n\tpublic getDomNode(): FastDomNode<HTMLElement> {\n\t\treturn this._domNode;\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onCompositionStart(e: viewEvents.ViewCompositionStartEvent): boolean {\n\t\tthis._isComposingInput = true;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onCompositionEnd(e: viewEvents.ViewCompositionEndEvent): boolean {\n\t\tthis._isComposingInput = false;\n\t\tthis._updateBlinking();\n\t\treturn true;\n\t}\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\n\t\tthis._readOnly = options.get(EditorOption.readOnly);\n\t\tthis._cursorBlinking = options.get(EditorOption.cursorBlinking);\n\t\tthis._cursorStyle = options.get(EditorOption.effectiveCursorStyle);\n\t\tthis._cursorSmoothCaretAnimation = options.get(EditorOption.cursorSmoothCaretAnimation);\n\t\tthis._editContextEnabled = options.get(EditorOption.effectiveEditContext);\n\n\t\tthis._updateBlinking();\n\t\tthis._updateDomClassName();\n\n\t\tthis._primaryCursor.onConfigurationChanged(e);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].onConfigurationChanged(e);\n\t\t}\n\t\treturn true;\n\t}\n\tprivate _onCursorPositionChanged(position: Position, secondaryPositions: Position[], reason: CursorChangeReason): void {\n\t\tconst pauseAnimation = (\n\t\t\tthis._secondaryCursors.length !== secondaryPositions.length\n\t\t\t|| (this._cursorSmoothCaretAnimation === 'explicit' && reason !== CursorChangeReason.Explicit)\n\t\t);\n\t\tthis._primaryCursor.setPlurality(secondaryPositions.length ? CursorPlurality.MultiPrimary : CursorPlurality.Single);\n\t\tthis._primaryCursor.onCursorPositionChanged(position, pauseAnimation);\n\t\tthis._updateBlinking();\n\n\t\tif (this._secondaryCursors.length < secondaryPositions.length) {\n\t\t\t// Create new cursors\n\t\t\tconst addCnt = secondaryPositions.length - this._secondaryCursors.length;\n\t\t\tfor (let i = 0; i < addCnt; i++) {\n\t\t\t\tconst newCursor = new ViewCursor(this._context, CursorPlurality.MultiSecondary);\n\t\t\t\tthis._domNode.domNode.insertBefore(newCursor.getDomNode().domNode, this._primaryCursor.getDomNode().domNode.nextSibling);\n\t\t\t\tthis._secondaryCursors.push(newCursor);\n\t\t\t}\n\t\t} else if (this._secondaryCursors.length > secondaryPositions.length) {\n\t\t\t// Remove some cursors\n\t\t\tconst removeCnt = this._secondaryCursors.length - secondaryPositions.length;\n\t\t\tfor (let i = 0; i < removeCnt; i++) {\n\t\t\t\tthis._domNode.removeChild(this._secondaryCursors[0].getDomNode());\n\t\t\t\tthis._secondaryCursors.splice(0, 1);\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < secondaryPositions.length; i++) {\n\t\t\tthis._secondaryCursors[i].onCursorPositionChanged(secondaryPositions[i], pauseAnimation);\n\t\t}\n\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tconst positions: Position[] = [];\n\t\tfor (let i = 0, len = e.selections.length; i < len; i++) {\n\t\t\tpositions[i] = e.selections[i].getPosition();\n\t\t}\n\t\tthis._onCursorPositionChanged(positions[0], positions.slice(1), e.reason);\n\n\t\tconst selectionIsEmpty = e.selections[0].isEmpty();\n\t\tif (this._selectionIsEmpty !== selectionIsEmpty) {\n\t\t\tthis._selectionIsEmpty = selectionIsEmpty;\n\t\t\tthis._updateDomClassName();\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\tthis._editorHasFocus = e.isFocused;\n\t\tthis._updateBlinking();\n\t\treturn false;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean {\n\t\tconst shouldRender = (position: Position) => {\n\t\t\tfor (let i = 0, len = e.ranges.length; i < len; i++) {\n\t\t\t\tif (e.ranges[i].fromLineNumber <= position.lineNumber && position.lineNumber <= e.ranges[i].toLineNumber) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tif (shouldRender(this._primaryCursor.getPosition())) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const secondaryCursor of this._secondaryCursors) {\n\t\t\tif (shouldRender(secondaryCursor.getPosition())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// ---- blinking logic\n\n\tprivate _getCursorBlinking(): TextEditorCursorBlinkingStyle {\n\t\t// TODO: Remove the following if statement when experimental edit context is made default sole implementation\n\t\tif (this._isComposingInput && !this._editContextEnabled) {\n\t\t\t// avoid double cursors\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (!this._editorHasFocus) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Hidden;\n\t\t}\n\t\tif (this._readOnly) {\n\t\t\treturn TextEditorCursorBlinkingStyle.Solid;\n\t\t}\n\t\treturn this._cursorBlinking;\n\t}\n\n\tprivate _updateBlinking(): void {\n\t\tthis._startCursorBlinkAnimation.cancel();\n\t\tthis._cursorFlatBlinkInterval.cancel();\n\n\t\tconst blinkingStyle = this._getCursorBlinking();\n\n\t\t// hidden and solid are special as they involve no animations\n\t\tconst isHidden = (blinkingStyle === TextEditorCursorBlinkingStyle.Hidden);\n\t\tconst isSolid = (blinkingStyle === TextEditorCursorBlinkingStyle.Solid);\n\n\t\tif (isHidden) {\n\t\t\tthis._hide();\n\t\t} else {\n\t\t\tthis._show();\n\t\t}\n\n\t\tthis._blinkingEnabled = false;\n\t\tthis._updateDomClassName();\n\n\t\tif (!isHidden && !isSolid) {\n\t\t\tif (blinkingStyle === TextEditorCursorBlinkingStyle.Blink) {\n\t\t\t\t// flat blinking is handled by JavaScript to save battery life due to Chromium step timing issue https://bugs.chromium.org/p/chromium/issues/detail?id=361587\n\t\t\t\tthis._cursorFlatBlinkInterval.cancelAndSet(() => {\n\t\t\t\t\tif (this._isVisible) {\n\t\t\t\t\t\tthis._hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._show();\n\t\t\t\t\t}\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL, getWindow(this._domNode.domNode));\n\t\t\t} else {\n\t\t\t\tthis._startCursorBlinkAnimation.setIfNotSet(() => {\n\t\t\t\t\tthis._blinkingEnabled = true;\n\t\t\t\t\tthis._updateDomClassName();\n\t\t\t\t}, ViewCursors.BLINK_INTERVAL);\n\t\t\t}\n\t\t}\n\t}\n\n\t// --- end blinking logic\n\n\tprivate _updateDomClassName(): void {\n\t\tthis._domNode.setClassName(this._getClassName());\n\t}\n\n\tprivate _getClassName(): string {\n\t\tlet result = 'cursors-layer';\n\t\tif (!this._selectionIsEmpty) {\n\t\t\tresult += ' has-selection';\n\t\t}\n\t\tswitch (this._cursorStyle) {\n\t\t\tcase TextEditorCursorStyle.Line:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Block:\n\t\t\t\tresult += ' cursor-block-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.Underline:\n\t\t\t\tresult += ' cursor-underline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.LineThin:\n\t\t\t\tresult += ' cursor-line-thin-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.BlockOutline:\n\t\t\t\tresult += ' cursor-block-outline-style';\n\t\t\t\tbreak;\n\t\t\tcase TextEditorCursorStyle.UnderlineThin:\n\t\t\t\tresult += ' cursor-underline-thin-style';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tresult += ' cursor-line-style';\n\t\t}\n\t\tif (this._blinkingEnabled) {\n\t\t\tswitch (this._getCursorBlinking()) {\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Blink:\n\t\t\t\t\tresult += ' cursor-blink';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Smooth:\n\t\t\t\t\tresult += ' cursor-smooth';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Phase:\n\t\t\t\t\tresult += ' cursor-phase';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Expand:\n\t\t\t\t\tresult += ' cursor-expand';\n\t\t\t\t\tbreak;\n\t\t\t\tcase TextEditorCursorBlinkingStyle.Solid:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tresult += ' cursor-solid';\n\t\t\t}\n\t\t} else {\n\t\t\tresult += ' cursor-solid';\n\t\t}\n\t\tif (this._cursorSmoothCaretAnimation === 'on' || this._cursorSmoothCaretAnimation === 'explicit') {\n\t\t\tresult += ' cursor-smooth-caret-animation';\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate _show(): void {\n\t\tthis._primaryCursor.show();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].show();\n\t\t}\n\t\tthis._isVisible = true;\n\t}\n\n\tprivate _hide(): void {\n\t\tthis._primaryCursor.hide();\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].hide();\n\t\t}\n\t\tthis._isVisible = false;\n\t}\n\n\t// ---- IViewPart implementation\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursor.prepareRender(ctx);\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tthis._secondaryCursors[i].prepareRender(ctx);\n\t\t}\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst renderData: IViewCursorRenderData[] = [];\n\t\tlet renderDataLen = 0;\n\n\t\tconst primaryRenderData = this._primaryCursor.render(ctx);\n\t\tif (primaryRenderData) {\n\t\t\trenderData[renderDataLen++] = primaryRenderData;\n\t\t}\n\n\t\tfor (let i = 0, len = this._secondaryCursors.length; i < len; i++) {\n\t\t\tconst secondaryRenderData = this._secondaryCursors[i].render(ctx);\n\t\t\tif (secondaryRenderData) {\n\t\t\t\trenderData[renderDataLen++] = secondaryRenderData;\n\t\t\t}\n\t\t}\n\n\t\tthis._renderData = renderData;\n\t}\n\n\tpublic getLastRenderData(): IViewCursorRenderData[] {\n\t\treturn this._renderData;\n\t}\n}\n\nregisterThemingParticipant((theme, collector) => {\n\ttype CursorTheme = {\n\t\tforeground: string;\n\t\tbackground: string;\n\t\tclass: string;\n\t};\n\n\tconst cursorThemes: CursorTheme[] = [\n\t\t{ class: '.cursor', foreground: editorCursorForeground, background: editorCursorBackground },\n\t\t{ class: '.cursor-primary', foreground: editorMultiCursorPrimaryForeground, background: editorMultiCursorPrimaryBackground },\n\t\t{ class: '.cursor-secondary', foreground: editorMultiCursorSecondaryForeground, background: editorMultiCursorSecondaryBackground },\n\t];\n\n\tfor (const cursorTheme of cursorThemes) {\n\t\tconst caret = theme.getColor(cursorTheme.foreground);\n\t\tif (caret) {\n\t\t\tlet caretBackground = theme.getColor(cursorTheme.background);\n\t\t\tif (!caretBackground) {\n\t\t\t\tcaretBackground = caret.opposite();\n\t\t\t}\n\t\t\tcollector.addRule(`.monaco-editor .cursors-layer ${cursorTheme.class} { background-color: ${caret}; border-color: ${caret}; color: ${caretBackground}; }`);\n\t\t\tif (isHighContrast(theme.type)) {\n\t\t\t\tcollector.addRule(`.monaco-editor .cursors-layer.has-selection ${cursorTheme.class} { border-left: 1px solid ${caretBackground}; border-right: 1px solid ${caretBackground}; }`);\n\t\t\t}\n\t\t}\n\t}\n});\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7548, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/viewZones.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewZones/viewZones.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewZones/vs/editor/browser/viewParts/viewZones/viewZones.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { IViewZone, IViewZoneChangeAccessor } from '../../editorBrowser.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { IEditorWhitespace, IViewWhitespaceViewportData, IWhitespaceChangeAccessor } from '../../../common/viewModel.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\ninterface IMyViewZone {\n\twhitespaceId: string;\n\tdelegate: IViewZone;\n\tisInHiddenArea: boolean;\n\tisVisible: boolean;\n\tdomNode: FastDomNode<HTMLElement>;\n\tmarginDomNode: FastDomNode<HTMLElement> | null;\n}\n\ninterface IComputedViewZoneProps {\n\tisInHiddenArea: boolean;\n\tafterViewLineNumber: number;\n\theightInPx: number;\n\tminWidthInPx: number;\n}\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\n/**\n * A view zone is a rectangle that is a section that is inserted into the editor\n * lines that can be used for various purposes such as showing a diffs, peeking\n * an implementation, etc.\n */\nexport class ViewZones extends ViewPart {\n\n\tprivate _zones: { [id: string]: IMyViewZone };\n\tprivate _lineHeight: number;\n\tprivate _contentWidth: number;\n\tprivate _contentLeft: number;\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tpublic marginDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName('view-zones');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis.marginDomNode = createFastDomNode(document.createElement('div'));\n\t\tthis.marginDomNode.setClassName('margin-view-zones');\n\t\tthis.marginDomNode.setPosition('absolute');\n\t\tthis.marginDomNode.setAttribute('role', 'presentation');\n\t\tthis.marginDomNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._zones = {};\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._zones = {};\n\t}\n\n\t// ---- begin view event handlers\n\n\tprivate _recomputeWhitespacesProps(): boolean {\n\t\tconst whitespaces = this._context.viewLayout.getWhitespaces();\n\t\tconst oldWhitespaces = new Map<string, IEditorWhitespace>();\n\t\tfor (const whitespace of whitespaces) {\n\t\t\toldWhitespaces.set(whitespace.id, whitespace);\n\t\t}\n\t\tlet hadAChange = false;\n\t\tthis._context.viewModel.changeWhitespace((whitespaceAccessor: IWhitespaceChangeAccessor) => {\n\t\t\tconst keys = Object.keys(this._zones);\n\t\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\t\tconst id = keys[i];\n\t\t\t\tconst zone = this._zones[id];\n\t\t\t\tconst props = this._computeWhitespaceProps(zone.delegate);\n\t\t\t\tzone.isInHiddenArea = props.isInHiddenArea;\n\t\t\t\tconst oldWhitespace = oldWhitespaces.get(id);\n\t\t\t\tif (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n\t\t\t\t\twhitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n\t\t\t\t\tthis._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\t\t\t\t\thadAChange = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn hadAChange;\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tif (e.hasChanged(EditorOption.lineHeight)) {\n\t\t\tthis._recomputeWhitespacesProps();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic override onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean {\n\t\treturn this._recomputeWhitespacesProps();\n\t}\n\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollWidthChanged;\n\t}\n\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _getZoneOrdinal(zone: IViewZone): number {\n\t\treturn zone.ordinal ?? zone.afterColumn ?? 10000;\n\t}\n\n\tprivate _computeWhitespaceProps(zone: IViewZone): IComputedViewZoneProps {\n\t\tif (zone.afterLineNumber === 0) {\n\t\t\treturn {\n\t\t\t\tisInHiddenArea: false,\n\t\t\t\tafterViewLineNumber: 0,\n\t\t\t\theightInPx: this._heightInPixels(zone),\n\t\t\t\tminWidthInPx: this._minWidthInPixels(zone)\n\t\t\t};\n\t\t}\n\n\t\tlet zoneAfterModelPosition: Position;\n\t\tif (typeof zone.afterColumn !== 'undefined') {\n\t\t\tzoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zone.afterLineNumber,\n\t\t\t\tcolumn: zone.afterColumn\n\t\t\t});\n\t\t} else {\n\t\t\tconst validAfterLineNumber = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zone.afterLineNumber,\n\t\t\t\tcolumn: 1\n\t\t\t}).lineNumber;\n\n\t\t\tzoneAfterModelPosition = new Position(\n\t\t\t\tvalidAfterLineNumber,\n\t\t\t\tthis._context.viewModel.model.getLineMaxColumn(validAfterLineNumber)\n\t\t\t);\n\t\t}\n\n\t\tlet zoneBeforeModelPosition: Position;\n\t\tif (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n\t\t\tzoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zoneAfterModelPosition.lineNumber + 1,\n\t\t\t\tcolumn: 1\n\t\t\t});\n\t\t} else {\n\t\t\tzoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zoneAfterModelPosition.lineNumber,\n\t\t\t\tcolumn: zoneAfterModelPosition.column + 1\n\t\t\t});\n\t\t}\n\n\t\tconst viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n\t\tconst isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n\t\treturn {\n\t\t\tisInHiddenArea: !isVisible,\n\t\t\tafterViewLineNumber: viewPosition.lineNumber,\n\t\t\theightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n\t\t\tminWidthInPx: this._minWidthInPixels(zone)\n\t\t};\n\t}\n\n\tpublic changeViewZones(callback: (changeAccessor: IViewZoneChangeAccessor) => any): boolean {\n\t\tlet zonesHaveChanged = false;\n\n\t\tthis._context.viewModel.changeWhitespace((whitespaceAccessor: IWhitespaceChangeAccessor) => {\n\n\t\t\tconst changeAccessor: IViewZoneChangeAccessor = {\n\t\t\t\taddZone: (zone: IViewZone): string => {\n\t\t\t\t\tzonesHaveChanged = true;\n\t\t\t\t\treturn this._addZone(whitespaceAccessor, zone);\n\t\t\t\t},\n\t\t\t\tremoveZone: (id: string): void => {\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tzonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n\t\t\t\t},\n\t\t\t\tlayoutZone: (id: string): void => {\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tzonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsafeInvoke1Arg(callback, changeAccessor);\n\n\t\t\t// Invalidate changeAccessor\n\t\t\tchangeAccessor.addZone = invalidFunc;\n\t\t\tchangeAccessor.removeZone = invalidFunc;\n\t\t\tchangeAccessor.layoutZone = invalidFunc;\n\t\t});\n\n\t\treturn zonesHaveChanged;\n\t}\n\n\tprivate _addZone(whitespaceAccessor: IWhitespaceChangeAccessor, zone: IViewZone): string {\n\t\tconst props = this._computeWhitespaceProps(zone);\n\t\tconst whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n\n\t\tconst myZone: IMyViewZone = {\n\t\t\twhitespaceId: whitespaceId,\n\t\t\tdelegate: zone,\n\t\t\tisInHiddenArea: props.isInHiddenArea,\n\t\t\tisVisible: false,\n\t\t\tdomNode: createFastDomNode(zone.domNode),\n\t\t\tmarginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n\t\t};\n\n\t\tthis._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n\n\t\tmyZone.domNode.setPosition('absolute');\n\t\tmyZone.domNode.domNode.style.width = '100%';\n\t\tmyZone.domNode.setDisplay('none');\n\t\tmyZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n\t\tthis.domNode.appendChild(myZone.domNode);\n\n\t\tif (myZone.marginDomNode) {\n\t\t\tmyZone.marginDomNode.setPosition('absolute');\n\t\t\tmyZone.marginDomNode.domNode.style.width = '100%';\n\t\t\tmyZone.marginDomNode.setDisplay('none');\n\t\t\tmyZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n\t\t\tthis.marginDomNode.appendChild(myZone.marginDomNode);\n\t\t}\n\n\t\tthis._zones[myZone.whitespaceId] = myZone;\n\n\n\t\tthis.setShouldRender();\n\n\t\treturn myZone.whitespaceId;\n\t}\n\n\tprivate _removeZone(whitespaceAccessor: IWhitespaceChangeAccessor, id: string): boolean {\n\t\tif (this._zones.hasOwnProperty(id)) {\n\t\t\tconst zone = this._zones[id];\n\t\t\tdelete this._zones[id];\n\t\t\twhitespaceAccessor.removeWhitespace(zone.whitespaceId);\n\n\t\t\tzone.domNode.removeAttribute('monaco-visible-view-zone');\n\t\t\tzone.domNode.removeAttribute('monaco-view-zone');\n\t\t\tzone.domNode.domNode.remove();\n\n\t\t\tif (zone.marginDomNode) {\n\t\t\t\tzone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n\t\t\t\tzone.marginDomNode.removeAttribute('monaco-view-zone');\n\t\t\t\tzone.marginDomNode.domNode.remove();\n\t\t\t}\n\n\t\t\tthis.setShouldRender();\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _layoutZone(whitespaceAccessor: IWhitespaceChangeAccessor, id: string): boolean {\n\t\tif (this._zones.hasOwnProperty(id)) {\n\t\t\tconst zone = this._zones[id];\n\t\t\tconst props = this._computeWhitespaceProps(zone.delegate);\n\t\t\tzone.isInHiddenArea = props.isInHiddenArea;\n\t\t\t// const newOrdinal = this._getZoneOrdinal(zone.delegate);\n\t\t\twhitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n\t\t\t// TODO@Alex: change `newOrdinal` too\n\n\t\t\tthis._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\t\t\tthis.setShouldRender();\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldSuppressMouseDownOnViewZone(id: string): boolean {\n\t\tif (this._zones.hasOwnProperty(id)) {\n\t\t\tconst zone = this._zones[id];\n\t\t\treturn Boolean(zone.delegate.suppressMouseDown);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _heightInPixels(zone: IViewZone): number {\n\t\tif (typeof zone.heightInPx === 'number') {\n\t\t\treturn zone.heightInPx;\n\t\t}\n\t\tif (typeof zone.heightInLines === 'number') {\n\t\t\treturn this._lineHeight * zone.heightInLines;\n\t\t}\n\t\treturn this._lineHeight;\n\t}\n\n\tprivate _minWidthInPixels(zone: IViewZone): number {\n\t\tif (typeof zone.minWidthInPx === 'number') {\n\t\t\treturn zone.minWidthInPx;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate _safeCallOnComputedHeight(zone: IViewZone, height: number): void {\n\t\tif (typeof zone.onComputedHeight === 'function') {\n\t\t\ttry {\n\t\t\t\tzone.onComputedHeight(height);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _safeCallOnDomNodeTop(zone: IViewZone, top: number): void {\n\t\tif (typeof zone.onDomNodeTop === 'function') {\n\t\t\ttry {\n\t\t\t\tzone.onDomNodeTop(top);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n\t\tconst visibleZones: { [id: string]: IViewWhitespaceViewportData } = {};\n\n\t\tlet hasVisibleZone = false;\n\t\tfor (const visibleWhitespace of visibleWhitespaces) {\n\t\t\tif (this._zones[visibleWhitespace.id].isInHiddenArea) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvisibleZones[visibleWhitespace.id] = visibleWhitespace;\n\t\t\thasVisibleZone = true;\n\t\t}\n\n\t\tconst keys = Object.keys(this._zones);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst id = keys[i];\n\t\t\tconst zone = this._zones[id];\n\n\t\t\tlet newTop = 0;\n\t\t\tlet newHeight = 0;\n\t\t\tlet newDisplay = 'none';\n\t\t\tif (visibleZones.hasOwnProperty(id)) {\n\t\t\t\tnewTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n\t\t\t\tnewHeight = visibleZones[id].height;\n\t\t\t\tnewDisplay = 'block';\n\t\t\t\t// zone is visible\n\t\t\t\tif (!zone.isVisible) {\n\t\t\t\t\tzone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n\t\t\t\t\tzone.isVisible = true;\n\t\t\t\t}\n\t\t\t\tthis._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n\t\t\t} else {\n\t\t\t\tif (zone.isVisible) {\n\t\t\t\t\tzone.domNode.removeAttribute('monaco-visible-view-zone');\n\t\t\t\t\tzone.isVisible = false;\n\t\t\t\t}\n\t\t\t\tthis._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n\t\t\t}\n\t\t\tzone.domNode.setTop(newTop);\n\t\t\tzone.domNode.setHeight(newHeight);\n\t\t\tzone.domNode.setDisplay(newDisplay);\n\n\t\t\tif (zone.marginDomNode) {\n\t\t\t\tzone.marginDomNode.setTop(newTop);\n\t\t\t\tzone.marginDomNode.setHeight(newHeight);\n\t\t\t\tzone.marginDomNode.setDisplay(newDisplay);\n\t\t\t}\n\t\t}\n\n\t\tif (hasVisibleZone) {\n\t\t\tthis.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n\t\t\tthis.marginDomNode.setWidth(this._contentLeft);\n\t\t}\n\t}\n}\n\nfunction safeInvoke1Arg(func: Function, arg1: any): any {\n\ttry {\n\t\treturn func(arg1);\n\t} catch (e) {\n\t\tonUnexpectedError(e);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode, createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { IViewZone, IViewZoneChangeAccessor } from '../../editorBrowser.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { Position } from '../../../common/core/position.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { IEditorWhitespace, IViewWhitespaceViewportData, IWhitespaceChangeAccessor } from '../../../common/viewModel.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\n\ninterface IMyViewZone {\n\twhitespaceId: string;\n\tdelegate: IViewZone;\n\tisInHiddenArea: boolean;\n\tisVisible: boolean;\n\tdomNode: FastDomNode<HTMLElement>;\n\tmarginDomNode: FastDomNode<HTMLElement> | null;\n}\n\ninterface IComputedViewZoneProps {\n\tisInHiddenArea: boolean;\n\tafterViewLineNumber: number;\n\theightInPx: number;\n\tminWidthInPx: number;\n}\n\nconst invalidFunc = () => { throw new Error(`Invalid change accessor`); };\n\n/**\n * A view zone is a rectangle that is a section that is inserted into the editor\n * lines that can be used for various purposes such as showing a diffs, peeking\n * an implementation, etc.\n */\nexport class ViewZones extends ViewPart {\n\n\tprivate _zones: { [id: string]: IMyViewZone };\n\tprivate _lineHeight: number;\n\tprivate _contentWidth: number;\n\tprivate _contentLeft: number;\n\n\tpublic domNode: FastDomNode<HTMLElement>;\n\n\tpublic marginDomNode: FastDomNode<HTMLElement>;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper(context);\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tthis.domNode = createFastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName('view-zones');\n\t\tthis.domNode.setPosition('absolute');\n\t\tthis.domNode.setAttribute('role', 'presentation');\n\t\tthis.domNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis.marginDomNode = createFastDomNode(document.createElement('div'));\n\t\tthis.marginDomNode.setClassName('margin-view-zones');\n\t\tthis.marginDomNode.setPosition('absolute');\n\t\tthis.marginDomNode.setAttribute('role', 'presentation');\n\t\tthis.marginDomNode.setAttribute('aria-hidden', 'true');\n\n\t\tthis._zones = {};\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._zones = {};\n\t}\n\n\t// ---- begin view event handlers\n\n\tprivate _recomputeWhitespacesProps(): boolean {\n\t\tconst whitespaces = this._context.viewLayout.getWhitespaces();\n\t\tconst oldWhitespaces = new Map<string, IEditorWhitespace>();\n\t\tfor (const whitespace of whitespaces) {\n\t\t\toldWhitespaces.set(whitespace.id, whitespace);\n\t\t}\n\t\tlet hadAChange = false;\n\t\tthis._context.viewModel.changeWhitespace((whitespaceAccessor: IWhitespaceChangeAccessor) => {\n\t\t\tconst keys = Object.keys(this._zones);\n\t\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\t\tconst id = keys[i];\n\t\t\t\tconst zone = this._zones[id];\n\t\t\t\tconst props = this._computeWhitespaceProps(zone.delegate);\n\t\t\t\tzone.isInHiddenArea = props.isInHiddenArea;\n\t\t\t\tconst oldWhitespace = oldWhitespaces.get(id);\n\t\t\t\tif (oldWhitespace && (oldWhitespace.afterLineNumber !== props.afterViewLineNumber || oldWhitespace.height !== props.heightInPx)) {\n\t\t\t\t\twhitespaceAccessor.changeOneWhitespace(id, props.afterViewLineNumber, props.heightInPx);\n\t\t\t\t\tthis._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\t\t\t\t\thadAChange = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn hadAChange;\n\t}\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\n\t\tif (e.hasChanged(EditorOption.lineHeight)) {\n\t\t\tthis._recomputeWhitespacesProps();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tpublic override onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean {\n\t\treturn this._recomputeWhitespacesProps();\n\t}\n\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged || e.scrollWidthChanged;\n\t}\n\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// ---- end view event handlers\n\n\tprivate _getZoneOrdinal(zone: IViewZone): number {\n\t\treturn zone.ordinal ?? zone.afterColumn ?? 10000;\n\t}\n\n\tprivate _computeWhitespaceProps(zone: IViewZone): IComputedViewZoneProps {\n\t\tif (zone.afterLineNumber === 0) {\n\t\t\treturn {\n\t\t\t\tisInHiddenArea: false,\n\t\t\t\tafterViewLineNumber: 0,\n\t\t\t\theightInPx: this._heightInPixels(zone),\n\t\t\t\tminWidthInPx: this._minWidthInPixels(zone)\n\t\t\t};\n\t\t}\n\n\t\tlet zoneAfterModelPosition: Position;\n\t\tif (typeof zone.afterColumn !== 'undefined') {\n\t\t\tzoneAfterModelPosition = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zone.afterLineNumber,\n\t\t\t\tcolumn: zone.afterColumn\n\t\t\t});\n\t\t} else {\n\t\t\tconst validAfterLineNumber = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zone.afterLineNumber,\n\t\t\t\tcolumn: 1\n\t\t\t}).lineNumber;\n\n\t\t\tzoneAfterModelPosition = new Position(\n\t\t\t\tvalidAfterLineNumber,\n\t\t\t\tthis._context.viewModel.model.getLineMaxColumn(validAfterLineNumber)\n\t\t\t);\n\t\t}\n\n\t\tlet zoneBeforeModelPosition: Position;\n\t\tif (zoneAfterModelPosition.column === this._context.viewModel.model.getLineMaxColumn(zoneAfterModelPosition.lineNumber)) {\n\t\t\tzoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zoneAfterModelPosition.lineNumber + 1,\n\t\t\t\tcolumn: 1\n\t\t\t});\n\t\t} else {\n\t\t\tzoneBeforeModelPosition = this._context.viewModel.model.validatePosition({\n\t\t\t\tlineNumber: zoneAfterModelPosition.lineNumber,\n\t\t\t\tcolumn: zoneAfterModelPosition.column + 1\n\t\t\t});\n\t\t}\n\n\t\tconst viewPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(zoneAfterModelPosition, zone.afterColumnAffinity, true);\n\t\tconst isVisible = zone.showInHiddenAreas || this._context.viewModel.coordinatesConverter.modelPositionIsVisible(zoneBeforeModelPosition);\n\t\treturn {\n\t\t\tisInHiddenArea: !isVisible,\n\t\t\tafterViewLineNumber: viewPosition.lineNumber,\n\t\t\theightInPx: (isVisible ? this._heightInPixels(zone) : 0),\n\t\t\tminWidthInPx: this._minWidthInPixels(zone)\n\t\t};\n\t}\n\n\tpublic changeViewZones(callback: (changeAccessor: IViewZoneChangeAccessor) => any): boolean {\n\t\tlet zonesHaveChanged = false;\n\n\t\tthis._context.viewModel.changeWhitespace((whitespaceAccessor: IWhitespaceChangeAccessor) => {\n\n\t\t\tconst changeAccessor: IViewZoneChangeAccessor = {\n\t\t\t\taddZone: (zone: IViewZone): string => {\n\t\t\t\t\tzonesHaveChanged = true;\n\t\t\t\t\treturn this._addZone(whitespaceAccessor, zone);\n\t\t\t\t},\n\t\t\t\tremoveZone: (id: string): void => {\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tzonesHaveChanged = this._removeZone(whitespaceAccessor, id) || zonesHaveChanged;\n\t\t\t\t},\n\t\t\t\tlayoutZone: (id: string): void => {\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tzonesHaveChanged = this._layoutZone(whitespaceAccessor, id) || zonesHaveChanged;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tsafeInvoke1Arg(callback, changeAccessor);\n\n\t\t\t// Invalidate changeAccessor\n\t\t\tchangeAccessor.addZone = invalidFunc;\n\t\t\tchangeAccessor.removeZone = invalidFunc;\n\t\t\tchangeAccessor.layoutZone = invalidFunc;\n\t\t});\n\n\t\treturn zonesHaveChanged;\n\t}\n\n\tprivate _addZone(whitespaceAccessor: IWhitespaceChangeAccessor, zone: IViewZone): string {\n\t\tconst props = this._computeWhitespaceProps(zone);\n\t\tconst whitespaceId = whitespaceAccessor.insertWhitespace(props.afterViewLineNumber, this._getZoneOrdinal(zone), props.heightInPx, props.minWidthInPx);\n\n\t\tconst myZone: IMyViewZone = {\n\t\t\twhitespaceId: whitespaceId,\n\t\t\tdelegate: zone,\n\t\t\tisInHiddenArea: props.isInHiddenArea,\n\t\t\tisVisible: false,\n\t\t\tdomNode: createFastDomNode(zone.domNode),\n\t\t\tmarginDomNode: zone.marginDomNode ? createFastDomNode(zone.marginDomNode) : null\n\t\t};\n\n\t\tthis._safeCallOnComputedHeight(myZone.delegate, props.heightInPx);\n\n\t\tmyZone.domNode.setPosition('absolute');\n\t\tmyZone.domNode.domNode.style.width = '100%';\n\t\tmyZone.domNode.setDisplay('none');\n\t\tmyZone.domNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n\t\tthis.domNode.appendChild(myZone.domNode);\n\n\t\tif (myZone.marginDomNode) {\n\t\t\tmyZone.marginDomNode.setPosition('absolute');\n\t\t\tmyZone.marginDomNode.domNode.style.width = '100%';\n\t\t\tmyZone.marginDomNode.setDisplay('none');\n\t\t\tmyZone.marginDomNode.setAttribute('monaco-view-zone', myZone.whitespaceId);\n\t\t\tthis.marginDomNode.appendChild(myZone.marginDomNode);\n\t\t}\n\n\t\tthis._zones[myZone.whitespaceId] = myZone;\n\n\n\t\tthis.setShouldRender();\n\n\t\treturn myZone.whitespaceId;\n\t}\n\n\tprivate _removeZone(whitespaceAccessor: IWhitespaceChangeAccessor, id: string): boolean {\n\t\tif (this._zones.hasOwnProperty(id)) {\n\t\t\tconst zone = this._zones[id];\n\t\t\tdelete this._zones[id];\n\t\t\twhitespaceAccessor.removeWhitespace(zone.whitespaceId);\n\n\t\t\tzone.domNode.removeAttribute('monaco-visible-view-zone');\n\t\t\tzone.domNode.removeAttribute('monaco-view-zone');\n\t\t\tzone.domNode.domNode.remove();\n\n\t\t\tif (zone.marginDomNode) {\n\t\t\t\tzone.marginDomNode.removeAttribute('monaco-visible-view-zone');\n\t\t\t\tzone.marginDomNode.removeAttribute('monaco-view-zone');\n\t\t\t\tzone.marginDomNode.domNode.remove();\n\t\t\t}\n\n\t\t\tthis.setShouldRender();\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _layoutZone(whitespaceAccessor: IWhitespaceChangeAccessor, id: string): boolean {\n\t\tif (this._zones.hasOwnProperty(id)) {\n\t\t\tconst zone = this._zones[id];\n\t\t\tconst props = this._computeWhitespaceProps(zone.delegate);\n\t\t\tzone.isInHiddenArea = props.isInHiddenArea;\n\t\t\t// const newOrdinal = this._getZoneOrdinal(zone.delegate);\n\t\t\twhitespaceAccessor.changeOneWhitespace(zone.whitespaceId, props.afterViewLineNumber, props.heightInPx);\n\t\t\t// TODO@Alex: change `newOrdinal` too\n\n\t\t\tthis._safeCallOnComputedHeight(zone.delegate, props.heightInPx);\n\t\t\tthis.setShouldRender();\n\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic shouldSuppressMouseDownOnViewZone(id: string): boolean {\n\t\tif (this._zones.hasOwnProperty(id)) {\n\t\t\tconst zone = this._zones[id];\n\t\t\treturn Boolean(zone.delegate.suppressMouseDown);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _heightInPixels(zone: IViewZone): number {\n\t\tif (typeof zone.heightInPx === 'number') {\n\t\t\treturn zone.heightInPx;\n\t\t}\n\t\tif (typeof zone.heightInLines === 'number') {\n\t\t\treturn this._lineHeight * zone.heightInLines;\n\t\t}\n\t\treturn this._lineHeight;\n\t}\n\n\tprivate _minWidthInPixels(zone: IViewZone): number {\n\t\tif (typeof zone.minWidthInPx === 'number') {\n\t\t\treturn zone.minWidthInPx;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate _safeCallOnComputedHeight(zone: IViewZone, height: number): void {\n\t\tif (typeof zone.onComputedHeight === 'function') {\n\t\t\ttry {\n\t\t\t\tzone.onComputedHeight(height);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _safeCallOnDomNodeTop(zone: IViewZone, top: number): void {\n\t\tif (typeof zone.onDomNodeTop === 'function') {\n\t\t\ttry {\n\t\t\t\tzone.onDomNodeTop(top);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tconst visibleWhitespaces = ctx.viewportData.whitespaceViewportData;\n\t\tconst visibleZones: { [id: string]: IViewWhitespaceViewportData } = {};\n\n\t\tlet hasVisibleZone = false;\n\t\tfor (const visibleWhitespace of visibleWhitespaces) {\n\t\t\tif (this._zones[visibleWhitespace.id].isInHiddenArea) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvisibleZones[visibleWhitespace.id] = visibleWhitespace;\n\t\t\thasVisibleZone = true;\n\t\t}\n\n\t\tconst keys = Object.keys(this._zones);\n\t\tfor (let i = 0, len = keys.length; i < len; i++) {\n\t\t\tconst id = keys[i];\n\t\t\tconst zone = this._zones[id];\n\n\t\t\tlet newTop = 0;\n\t\t\tlet newHeight = 0;\n\t\t\tlet newDisplay = 'none';\n\t\t\tif (visibleZones.hasOwnProperty(id)) {\n\t\t\t\tnewTop = visibleZones[id].verticalOffset - ctx.bigNumbersDelta;\n\t\t\t\tnewHeight = visibleZones[id].height;\n\t\t\t\tnewDisplay = 'block';\n\t\t\t\t// zone is visible\n\t\t\t\tif (!zone.isVisible) {\n\t\t\t\t\tzone.domNode.setAttribute('monaco-visible-view-zone', 'true');\n\t\t\t\t\tzone.isVisible = true;\n\t\t\t\t}\n\t\t\t\tthis._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(visibleZones[id].verticalOffset));\n\t\t\t} else {\n\t\t\t\tif (zone.isVisible) {\n\t\t\t\t\tzone.domNode.removeAttribute('monaco-visible-view-zone');\n\t\t\t\t\tzone.isVisible = false;\n\t\t\t\t}\n\t\t\t\tthis._safeCallOnDomNodeTop(zone.delegate, ctx.getScrolledTopFromAbsoluteTop(-1000000));\n\t\t\t}\n\t\t\tzone.domNode.setTop(newTop);\n\t\t\tzone.domNode.setHeight(newHeight);\n\t\t\tzone.domNode.setDisplay(newDisplay);\n\n\t\t\tif (zone.marginDomNode) {\n\t\t\t\tzone.marginDomNode.setTop(newTop);\n\t\t\t\tzone.marginDomNode.setHeight(newHeight);\n\t\t\t\tzone.marginDomNode.setDisplay(newDisplay);\n\t\t\t}\n\t\t}\n\n\t\tif (hasVisibleZone) {\n\t\t\tthis.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n\t\t\tthis.marginDomNode.setWidth(this._contentLeft);\n\t\t}\n\t}\n}\n\nfunction safeInvoke1Arg(func: Function, arg1: any): any {\n\ttry {\n\t\treturn func(arg1);\n\t} catch (e) {\n\t\tonUnexpectedError(e);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7881, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/whitespace.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/whitespace/whitespace.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/whitespace/vs/editor/browser/viewParts/whitespace/whitespace.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewLineRenderingData } from '../../../common/viewModel.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nimport { OffsetRange } from '../../../common/core/ranges/offsetRange.js';\n\n/**\n * The whitespace overlay will visual certain whitespace depending on the\n * current editor configuration (boundary, selection, etc.).\n */\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _options: WhitespaceOptions;\n\tprivate _selection: Selection[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._options = new WhitespaceOptions(this._context.configuration);\n\t\tthis._selection = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst newOptions = new WhitespaceOptions(this._context.configuration);\n\t\tif (this._options.equals(newOptions)) {\n\t\t\treturn e.hasChanged(EditorOption.layoutInfo);\n\t\t}\n\t\tthis._options = newOptions;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selection = e.selections;\n\t\tif (this._options.renderWhitespace === 'selection') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._options.renderWhitespace === 'none') {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst startLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst endLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst lineCount = endLineNumber - startLineNumber + 1;\n\t\tconst needed = new Array<boolean>(lineCount);\n\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\tneeded[i] = true;\n\t\t}\n\n\t\tthis._renderResult = [];\n\t\tfor (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n\t\t\tconst lineData = this._context.viewModel.getViewLineRenderingData(lineNumber);\n\n\t\t\tlet selectionsOnLine: OffsetRange[] | null = null;\n\t\t\tif (this._options.renderWhitespace === 'selection') {\n\t\t\t\tconst selections = this._selection;\n\t\t\t\tfor (const selection of selections) {\n\n\t\t\t\t\tif (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n\t\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n\t\t\t\t\tconst endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n\n\t\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectionsOnLine.push(new OffsetRange(startColumn - 1, endColumn - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n\t\t}\n\t}\n\n\tprivate _applyRenderWhitespace(ctx: RenderingContext, lineNumber: number, selections: OffsetRange[] | null, lineData: ViewLineRenderingData): string {\n\t\tif (lineData.hasVariableFonts) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this._options.renderWhitespace === 'selection' && !selections) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n\t\t\treturn '';\n\t\t}\n\t\tconst color = this._context.theme.getColor(editorWhitespaces);\n\t\tconst USE_SVG = this._options.renderWithSVG;\n\n\t\tconst lineContent = lineData.content;\n\t\tconst len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n\t\tconst continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n\t\tconst fauxIndentLength = lineData.minColumn - 1;\n\t\tconst onlyBoundary = (this._options.renderWhitespace === 'boundary');\n\t\tconst onlyTrailing = (this._options.renderWhitespace === 'trailing');\n\t\tconst lineHeight = ctx.getLineHeightForLineNumber(lineNumber);\n\t\tconst middotWidth = this._options.middotWidth;\n\t\tconst wsmiddotWidth = this._options.wsmiddotWidth;\n\t\tconst spaceWidth = this._options.spaceWidth;\n\t\tconst wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n\t\tconst middotDiff = Math.abs(middotWidth - spaceWidth);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n\n\t\tconst canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n\n\t\tlet result: string = '';\n\n\t\tlet lineIsEmptyOrWhitespace = false;\n\t\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n\t\tlet lastNonWhitespaceIndex: number;\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tlineIsEmptyOrWhitespace = true;\n\t\t\tfirstNonWhitespaceIndex = len;\n\t\t\tlastNonWhitespaceIndex = len;\n\t\t} else {\n\t\t\tlastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n\t\t}\n\n\t\tlet currentSelectionIndex = 0;\n\t\tlet currentSelection = selections && selections[currentSelectionIndex];\n\t\tlet maxLeft = 0;\n\n\t\tfor (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n\t\t\tconst chCode = lineContent.charCodeAt(charIndex);\n\n\t\t\tif (currentSelection && currentSelection.endExclusive <= charIndex) {\n\t\t\t\tcurrentSelectionIndex++;\n\t\t\t\tcurrentSelection = selections && selections[currentSelectionIndex];\n\t\t\t}\n\n\t\t\tif (chCode !== CharCode.Tab && chCode !== CharCode.Space) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n\t\t\t\t// If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === CharCode.Space) {\n\t\t\t\t// rendering only boundary whitespace\n\t\t\t\tconst prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : CharCode.Null);\n\t\t\t\tconst nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : CharCode.Null);\n\t\t\t\tif (prevChCode !== CharCode.Space && nextChCode !== CharCode.Space) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n\t\t\t\tconst prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : CharCode.Null);\n\t\t\t\tconst isSingleTrailingSpace = (chCode === CharCode.Space && (prevCharCode !== CharCode.Space && prevCharCode !== CharCode.Tab));\n\t\t\t\tif (isSingleTrailingSpace) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selections && !(currentSelection && currentSelection.start <= charIndex && charIndex < currentSelection.endExclusive)) {\n\t\t\t\t// If rendering whitespace on selection, check that the charIndex falls within a selection\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n\t\t\tif (!visibleRange) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (USE_SVG) {\n\t\t\t\tmaxLeft = Math.max(maxLeft, visibleRange.left);\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (USE_SVG) {\n\t\t\tmaxLeft = Math.round(maxLeft + spaceWidth);\n\t\t\treturn (\n\t\t\t\t`<svg style=\"bottom:0;position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n\t\t\t\t+ result\n\t\t\t\t+ `</svg>`\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _renderArrow(lineHeight: number, spaceWidth: number, left: number): string {\n\t\tconst strokeWidth = spaceWidth / 7;\n\t\tconst width = spaceWidth;\n\t\tconst dy = lineHeight / 2;\n\t\tconst dx = left;\n\n\t\tconst p1 = { x: 0, y: strokeWidth / 2 };\n\t\tconst p2 = { x: 100 / 125 * width, y: p1.y };\n\t\tconst p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n\t\tconst p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n\t\tconst p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n\t\tconst p6 = { x: p5.x, y: -p5.y };\n\t\tconst p7 = { x: p4.x, y: -p4.y };\n\t\tconst p8 = { x: p3.x, y: -p3.y };\n\t\tconst p9 = { x: p2.x, y: -p2.y };\n\t\tconst p10 = { x: p1.x, y: -p1.y };\n\n\t\tconst p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n\t\tconst parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n\t\treturn `<path d=\"M ${parts}\" />`;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nclass WhitespaceOptions {\n\n\tpublic readonly renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\tpublic readonly renderWithSVG: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\n\tconstructor(config: IEditorConfiguration) {\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tif (experimentalWhitespaceRendering === 'off') {\n\t\t\t// whitespace is rendered in the view line\n\t\t\tthis.renderWhitespace = 'none';\n\t\t\tthis.renderWithSVG = false;\n\t\t} else if (experimentalWhitespaceRendering === 'svg') {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = true;\n\t\t} else {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = false;\n\t\t}\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t}\n\n\tpublic equals(other: WhitespaceOptions): boolean {\n\t\treturn (\n\t\t\tthis.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.renderWithSVG === other.renderWithSVG\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.middotWidth === other.middotWidth\n\t\t\t&& this.wsmiddotWidth === other.wsmiddotWidth\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './whitespace.css';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewLineRenderingData } from '../../../common/viewModel.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IEditorConfiguration } from '../../../common/config/editorConfiguration.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { Position } from '../../../common/core/position.js';\nimport { editorWhitespaces } from '../../../common/core/editorColorRegistry.js';\nimport { OffsetRange } from '../../../common/core/ranges/offsetRange.js';\n\n/**\n * The whitespace overlay will visual certain whitespace depending on the\n * current editor configuration (boundary, selection, etc.).\n */\nexport class WhitespaceOverlay extends DynamicViewOverlay {\n\n\tprivate readonly _context: ViewContext;\n\tprivate _options: WhitespaceOptions;\n\tprivate _selection: Selection[];\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._options = new WhitespaceOptions(this._context.configuration);\n\t\tthis._selection = [];\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst newOptions = new WhitespaceOptions(this._context.configuration);\n\t\tif (this._options.equals(newOptions)) {\n\t\t\treturn e.hasChanged(EditorOption.layoutInfo);\n\t\t}\n\t\tthis._options = newOptions;\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selection = e.selections;\n\t\tif (this._options.renderWhitespace === 'selection') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tif (this._options.renderWhitespace === 'none') {\n\t\t\tthis._renderResult = null;\n\t\t\treturn;\n\t\t}\n\n\t\tconst startLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst endLineNumber = ctx.visibleRange.endLineNumber;\n\t\tconst lineCount = endLineNumber - startLineNumber + 1;\n\t\tconst needed = new Array<boolean>(lineCount);\n\t\tfor (let i = 0; i < lineCount; i++) {\n\t\t\tneeded[i] = true;\n\t\t}\n\n\t\tthis._renderResult = [];\n\t\tfor (let lineNumber = ctx.viewportData.startLineNumber; lineNumber <= ctx.viewportData.endLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - ctx.viewportData.startLineNumber;\n\t\t\tconst lineData = this._context.viewModel.getViewLineRenderingData(lineNumber);\n\n\t\t\tlet selectionsOnLine: OffsetRange[] | null = null;\n\t\t\tif (this._options.renderWhitespace === 'selection') {\n\t\t\t\tconst selections = this._selection;\n\t\t\t\tfor (const selection of selections) {\n\n\t\t\t\t\tif (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n\t\t\t\t\t\t// Selection does not intersect line\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n\t\t\t\t\tconst endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n\n\t\t\t\t\tif (startColumn < endColumn) {\n\t\t\t\t\t\tif (!selectionsOnLine) {\n\t\t\t\t\t\t\tselectionsOnLine = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectionsOnLine.push(new OffsetRange(startColumn - 1, endColumn - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._renderResult[lineIndex] = this._applyRenderWhitespace(ctx, lineNumber, selectionsOnLine, lineData);\n\t\t}\n\t}\n\n\tprivate _applyRenderWhitespace(ctx: RenderingContext, lineNumber: number, selections: OffsetRange[] | null, lineData: ViewLineRenderingData): string {\n\t\tif (lineData.hasVariableFonts) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this._options.renderWhitespace === 'selection' && !selections) {\n\t\t\treturn '';\n\t\t}\n\t\tif (this._options.renderWhitespace === 'trailing' && lineData.continuesWithWrappedLine) {\n\t\t\treturn '';\n\t\t}\n\t\tconst color = this._context.theme.getColor(editorWhitespaces);\n\t\tconst USE_SVG = this._options.renderWithSVG;\n\n\t\tconst lineContent = lineData.content;\n\t\tconst len = (this._options.stopRenderingLineAfter === -1 ? lineContent.length : Math.min(this._options.stopRenderingLineAfter, lineContent.length));\n\t\tconst continuesWithWrappedLine = lineData.continuesWithWrappedLine;\n\t\tconst fauxIndentLength = lineData.minColumn - 1;\n\t\tconst onlyBoundary = (this._options.renderWhitespace === 'boundary');\n\t\tconst onlyTrailing = (this._options.renderWhitespace === 'trailing');\n\t\tconst lineHeight = ctx.getLineHeightForLineNumber(lineNumber);\n\t\tconst middotWidth = this._options.middotWidth;\n\t\tconst wsmiddotWidth = this._options.wsmiddotWidth;\n\t\tconst spaceWidth = this._options.spaceWidth;\n\t\tconst wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n\t\tconst middotDiff = Math.abs(middotWidth - spaceWidth);\n\n\t\t// U+2E31 - WORD SEPARATOR MIDDLE DOT\n\t\t// U+00B7 - MIDDLE DOT\n\t\tconst renderSpaceCharCode = (wsmiddotDiff < middotDiff ? 0x2E31 : 0xB7);\n\n\t\tconst canUseHalfwidthRightwardsArrow = this._options.canUseHalfwidthRightwardsArrow;\n\n\t\tlet result: string = '';\n\n\t\tlet lineIsEmptyOrWhitespace = false;\n\t\tlet firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n\t\tlet lastNonWhitespaceIndex: number;\n\t\tif (firstNonWhitespaceIndex === -1) {\n\t\t\tlineIsEmptyOrWhitespace = true;\n\t\t\tfirstNonWhitespaceIndex = len;\n\t\t\tlastNonWhitespaceIndex = len;\n\t\t} else {\n\t\t\tlastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n\t\t}\n\n\t\tlet currentSelectionIndex = 0;\n\t\tlet currentSelection = selections && selections[currentSelectionIndex];\n\t\tlet maxLeft = 0;\n\n\t\tfor (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n\t\t\tconst chCode = lineContent.charCodeAt(charIndex);\n\n\t\t\tif (currentSelection && currentSelection.endExclusive <= charIndex) {\n\t\t\t\tcurrentSelectionIndex++;\n\t\t\t\tcurrentSelection = selections && selections[currentSelectionIndex];\n\t\t\t}\n\n\t\t\tif (chCode !== CharCode.Tab && chCode !== CharCode.Space) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (onlyTrailing && !lineIsEmptyOrWhitespace && charIndex <= lastNonWhitespaceIndex) {\n\t\t\t\t// If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (onlyBoundary && charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex && chCode === CharCode.Space) {\n\t\t\t\t// rendering only boundary whitespace\n\t\t\t\tconst prevChCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : CharCode.Null);\n\t\t\t\tconst nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : CharCode.Null);\n\t\t\t\tif (prevChCode !== CharCode.Space && nextChCode !== CharCode.Space) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (onlyBoundary && continuesWithWrappedLine && charIndex === len - 1) {\n\t\t\t\tconst prevCharCode = (charIndex - 1 >= 0 ? lineContent.charCodeAt(charIndex - 1) : CharCode.Null);\n\t\t\t\tconst isSingleTrailingSpace = (chCode === CharCode.Space && (prevCharCode !== CharCode.Space && prevCharCode !== CharCode.Tab));\n\t\t\t\tif (isSingleTrailingSpace) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selections && !(currentSelection && currentSelection.start <= charIndex && charIndex < currentSelection.endExclusive)) {\n\t\t\t\t// If rendering whitespace on selection, check that the charIndex falls within a selection\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(new Position(lineNumber, charIndex + 1));\n\t\t\tif (!visibleRange) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (USE_SVG) {\n\t\t\t\tmaxLeft = Math.max(maxLeft, visibleRange.left);\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += this._renderArrow(lineHeight, spaceWidth, visibleRange.left);\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<circle cx=\"${(visibleRange.left + spaceWidth / 2).toFixed(2)}\" cy=\"${(lineHeight / 2).toFixed(2)}\" r=\"${(spaceWidth / 7).toFixed(2)}\" />`;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (chCode === CharCode.Tab) {\n\t\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${canUseHalfwidthRightwardsArrow ? String.fromCharCode(0xFFEB) : String.fromCharCode(0x2192)}</div>`;\n\t\t\t\t} else {\n\t\t\t\t\tresult += `<div class=\"mwh\" style=\"left:${visibleRange.left}px;height:${lineHeight}px;\">${String.fromCharCode(renderSpaceCharCode)}</div>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (USE_SVG) {\n\t\t\tmaxLeft = Math.round(maxLeft + spaceWidth);\n\t\t\treturn (\n\t\t\t\t`<svg style=\"bottom:0;position:absolute;width:${maxLeft}px;height:${lineHeight}px\" viewBox=\"0 0 ${maxLeft} ${lineHeight}\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"${color}\">`\n\t\t\t\t+ result\n\t\t\t\t+ `</svg>`\n\t\t\t);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _renderArrow(lineHeight: number, spaceWidth: number, left: number): string {\n\t\tconst strokeWidth = spaceWidth / 7;\n\t\tconst width = spaceWidth;\n\t\tconst dy = lineHeight / 2;\n\t\tconst dx = left;\n\n\t\tconst p1 = { x: 0, y: strokeWidth / 2 };\n\t\tconst p2 = { x: 100 / 125 * width, y: p1.y };\n\t\tconst p3 = { x: p2.x - 0.2 * p2.x, y: p2.y + 0.2 * p2.x };\n\t\tconst p4 = { x: p3.x + 0.1 * p2.x, y: p3.y + 0.1 * p2.x };\n\t\tconst p5 = { x: p4.x + 0.35 * p2.x, y: p4.y - 0.35 * p2.x };\n\t\tconst p6 = { x: p5.x, y: -p5.y };\n\t\tconst p7 = { x: p4.x, y: -p4.y };\n\t\tconst p8 = { x: p3.x, y: -p3.y };\n\t\tconst p9 = { x: p2.x, y: -p2.y };\n\t\tconst p10 = { x: p1.x, y: -p1.y };\n\n\t\tconst p = [p1, p2, p3, p4, p5, p6, p7, p8, p9, p10];\n\t\tconst parts = p.map((p) => `${(dx + p.x).toFixed(2)} ${(dy + p.y).toFixed(2)}`).join(' L ');\n\t\treturn `<path d=\"M ${parts}\" />`;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n\nclass WhitespaceOptions {\n\n\tpublic readonly renderWhitespace: 'none' | 'boundary' | 'selection' | 'trailing' | 'all';\n\tpublic readonly renderWithSVG: boolean;\n\tpublic readonly spaceWidth: number;\n\tpublic readonly middotWidth: number;\n\tpublic readonly wsmiddotWidth: number;\n\tpublic readonly canUseHalfwidthRightwardsArrow: boolean;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stopRenderingLineAfter: number;\n\n\tconstructor(config: IEditorConfiguration) {\n\t\tconst options = config.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tif (experimentalWhitespaceRendering === 'off') {\n\t\t\t// whitespace is rendered in the view line\n\t\t\tthis.renderWhitespace = 'none';\n\t\t\tthis.renderWithSVG = false;\n\t\t} else if (experimentalWhitespaceRendering === 'svg') {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = true;\n\t\t} else {\n\t\t\tthis.renderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t\tthis.renderWithSVG = false;\n\t\t}\n\t\tthis.spaceWidth = fontInfo.spaceWidth;\n\t\tthis.middotWidth = fontInfo.middotWidth;\n\t\tthis.wsmiddotWidth = fontInfo.wsmiddotWidth;\n\t\tthis.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t}\n\n\tpublic equals(other: WhitespaceOptions): boolean {\n\t\treturn (\n\t\t\tthis.renderWhitespace === other.renderWhitespace\n\t\t\t&& this.renderWithSVG === other.renderWithSVG\n\t\t\t&& this.spaceWidth === other.spaceWidth\n\t\t\t&& this.middotWidth === other.middotWidth\n\t\t\t&& this.wsmiddotWidth === other.wsmiddotWidth\n\t\t\t&& this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n\t\t\t&& this.lineHeight === other.lineHeight\n\t\t\t&& this.stopRenderingLineAfter === other.stopRenderingLineAfter\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8186, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLinesGpu/viewLinesGpu.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLinesGpu/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/viewLinesGpu/viewLinesGpu.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/viewLinesGpu/vs/editor/browser/viewParts/viewLinesGpu/viewLinesGpu.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../base/browser/dom.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { autorun, runOnChange } from '../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { TextureAtlasPage } from '../../gpu/atlas/textureAtlasPage.js';\nimport { BindingId, type IGpuRenderStrategy } from '../../gpu/gpu.js';\nimport { GPULifecycle } from '../../gpu/gpuDisposable.js';\nimport { quadVertices } from '../../gpu/gpuUtils.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { FloatHorizontalRange, HorizontalPosition, HorizontalRange, IViewLines, LineVisibleRanges, RenderingContext, RestrictedRenderingContext, VisibleRanges } from '../../view/renderingContext.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewLineOptions } from '../viewLines/viewLineOptions.js';\nimport type * as viewEvents from '../../../common/viewEvents.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { TextureAtlas } from '../../gpu/atlas/textureAtlas.js';\nimport { createContentSegmenter, type IContentSegmenter } from '../../gpu/contentSegmenter.js';\nimport { ViewportRenderStrategy } from '../../gpu/renderStrategy/viewportRenderStrategy.js';\nimport { FullFileRenderStrategy } from '../../gpu/renderStrategy/fullFileRenderStrategy.js';\nimport { MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { ViewLineRenderingData } from '../../../common/viewModel.js';\nimport { GlyphRasterizer } from '../../gpu/raster/glyphRasterizer.js';\n\nconst enum GlyphStorageBufferInfo {\n\tFloatsPerEntry = 2 + 2 + 2,\n\tBytesPerEntry = GlyphStorageBufferInfo.FloatsPerEntry * 4,\n\tOffset_TexturePosition = 0,\n\tOffset_TextureSize = 2,\n\tOffset_OriginPosition = 4,\n}\n\n/**\n * The GPU implementation of the ViewLines part.\n */\nexport class ViewLinesGpu extends ViewPart implements IViewLines {\n\n\tprivate readonly canvas: HTMLCanvasElement;\n\n\tprivate _initViewportData?: ViewportData[];\n\tprivate _lastViewportData?: ViewportData;\n\tprivate _lastViewLineOptions?: ViewLineOptions;\n\n\tprivate _device!: GPUDevice;\n\tprivate _renderPassDescriptor!: GPURenderPassDescriptor;\n\tprivate _renderPassColorAttachment!: GPURenderPassColorAttachment;\n\tprivate _bindGroup!: GPUBindGroup;\n\tprivate _pipeline!: GPURenderPipeline;\n\n\tprivate _vertexBuffer!: GPUBuffer;\n\n\tprivate _glyphStorageBuffer!: GPUBuffer;\n\tprivate _atlasGpuTexture!: GPUTexture;\n\tprivate readonly _atlasGpuTextureVersions: number[] = [];\n\n\tprivate _initialized = false;\n\n\tprivate readonly _glyphRasterizer: MutableDisposable<GlyphRasterizer> = this._register(new MutableDisposable());\n\tprivate readonly _renderStrategy: MutableDisposable<IGpuRenderStrategy> = this._register(new MutableDisposable());\n\tprivate _rebuildBindGroup?: () => void;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tprivate readonly _viewGpuContext: ViewGpuContext,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tsuper(context);\n\n\t\tthis.canvas = this._viewGpuContext.canvas.domNode;\n\n\t\t// Re-render the following frame after canvas device pixel dimensions change, provided a\n\t\t// new render does not occur.\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._viewGpuContext.canvasDevicePixelDimensions.read(reader);\n\t\t\tconst lastViewportData = this._lastViewportData;\n\t\t\tif (lastViewportData) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (lastViewportData === this._lastViewportData) {\n\t\t\t\t\t\tthis.renderText(lastViewportData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis.initWebgpu();\n\t}\n\n\tasync initWebgpu() {\n\t\t// #region General\n\n\t\tthis._device = ViewGpuContext.deviceSync || await ViewGpuContext.device;\n\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst atlas = ViewGpuContext.atlas;\n\n\t\t// Rerender when the texture atlas deletes glyphs\n\t\tthis._register(atlas.onDidDeleteGlyphs(() => {\n\t\t\tthis._atlasGpuTextureVersions.length = 0;\n\t\t\tthis._atlasGpuTextureVersions[0] = 0;\n\t\t\tthis._atlasGpuTextureVersions[1] = 0;\n\t\t\tthis._renderStrategy.value!.reset();\n\t\t}));\n\n\t\tconst presentationFormat = navigator.gpu.getPreferredCanvasFormat();\n\t\tthis._viewGpuContext.ctx.configure({\n\t\t\tdevice: this._device,\n\t\t\tformat: presentationFormat,\n\t\t\talphaMode: 'premultiplied',\n\t\t});\n\n\t\tthis._renderPassColorAttachment = {\n\t\t\tview: null!, // Will be filled at render time\n\t\t\tloadOp: 'load',\n\t\t\tstoreOp: 'store',\n\t\t};\n\t\tthis._renderPassDescriptor = {\n\t\t\tlabel: 'Monaco render pass',\n\t\t\tcolorAttachments: [this._renderPassColorAttachment],\n\t\t};\n\n\t\t// #endregion General\n\n\t\t// #region Uniforms\n\n\t\tlet layoutInfoUniformBuffer: GPUBuffer;\n\t\t{\n\t\t\tconst enum Info {\n\t\t\t\tFloatsPerEntry = 6,\n\t\t\t\tBytesPerEntry = Info.FloatsPerEntry * 4,\n\t\t\t\tOffset_CanvasWidth____ = 0,\n\t\t\t\tOffset_CanvasHeight___ = 1,\n\t\t\t\tOffset_ViewportOffsetX = 2,\n\t\t\t\tOffset_ViewportOffsetY = 3,\n\t\t\t\tOffset_ViewportWidth__ = 4,\n\t\t\t\tOffset_ViewportHeight_ = 5,\n\t\t\t}\n\t\t\tconst bufferValues = new Float32Array(Info.FloatsPerEntry);\n\t\t\tconst updateBufferValues = (canvasDevicePixelWidth: number = this.canvas.width, canvasDevicePixelHeight: number = this.canvas.height) => {\n\t\t\t\tbufferValues[Info.Offset_CanvasWidth____] = canvasDevicePixelWidth;\n\t\t\t\tbufferValues[Info.Offset_CanvasHeight___] = canvasDevicePixelHeight;\n\t\t\t\tbufferValues[Info.Offset_ViewportOffsetX] = Math.ceil(this._context.configuration.options.get(EditorOption.layoutInfo).contentLeft * getActiveWindow().devicePixelRatio);\n\t\t\t\tbufferValues[Info.Offset_ViewportOffsetY] = 0;\n\t\t\t\tbufferValues[Info.Offset_ViewportWidth__] = bufferValues[Info.Offset_CanvasWidth____] - bufferValues[Info.Offset_ViewportOffsetX];\n\t\t\t\tbufferValues[Info.Offset_ViewportHeight_] = bufferValues[Info.Offset_CanvasHeight___] - bufferValues[Info.Offset_ViewportOffsetY];\n\t\t\t\treturn bufferValues;\n\t\t\t};\n\t\t\tlayoutInfoUniformBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\t\tlabel: 'Monaco uniform buffer',\n\t\t\t\tsize: Info.BytesPerEntry,\n\t\t\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n\t\t\t}, () => updateBufferValues())).object;\n\t\t\tthis._register(runOnChange(this._viewGpuContext.canvasDevicePixelDimensions, ({ width, height }) => {\n\t\t\t\tthis._device.queue.writeBuffer(layoutInfoUniformBuffer, 0, updateBufferValues(width, height));\n\t\t\t}));\n\t\t\tthis._register(runOnChange(this._viewGpuContext.contentLeft, () => {\n\t\t\t\tthis._device.queue.writeBuffer(layoutInfoUniformBuffer, 0, updateBufferValues());\n\t\t\t}));\n\t\t}\n\n\t\tlet atlasInfoUniformBuffer: GPUBuffer;\n\t\t{\n\t\t\tconst enum Info {\n\t\t\t\tFloatsPerEntry = 2,\n\t\t\t\tBytesPerEntry = Info.FloatsPerEntry * 4,\n\t\t\t\tOffset_Width_ = 0,\n\t\t\t\tOffset_Height = 1,\n\t\t\t}\n\t\t\tatlasInfoUniformBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\t\tlabel: 'Monaco atlas info uniform buffer',\n\t\t\t\tsize: Info.BytesPerEntry,\n\t\t\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n\t\t\t}, () => {\n\t\t\t\tconst values = new Float32Array(Info.FloatsPerEntry);\n\t\t\t\tvalues[Info.Offset_Width_] = atlas.pageSize;\n\t\t\t\tvalues[Info.Offset_Height] = atlas.pageSize;\n\t\t\t\treturn values;\n\t\t\t})).object;\n\t\t}\n\n\t\t// #endregion Uniforms\n\n\t\t// #region Storage buffers\n\n\t\tconst fontFamily = this._context.configuration.options.get(EditorOption.fontFamily);\n\t\tconst fontSize = this._context.configuration.options.get(EditorOption.fontSize);\n\t\tthis._glyphRasterizer.value = this._register(new GlyphRasterizer(fontSize, fontFamily, this._viewGpuContext.devicePixelRatio.get(), ViewGpuContext.decorationStyleCache));\n\t\tthis._register(runOnChange(this._viewGpuContext.devicePixelRatio, () => {\n\t\t\tthis._refreshGlyphRasterizer();\n\t\t}));\n\n\n\t\tthis._renderStrategy.value = this._instantiationService.createInstance(FullFileRenderStrategy, this._context, this._viewGpuContext, this._device, this._glyphRasterizer as { value: GlyphRasterizer });\n\t\t// this._renderStrategy.value = this._instantiationService.createInstance(ViewportRenderStrategy, this._context, this._viewGpuContext, this._device);\n\n\t\tthis._glyphStorageBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\tlabel: 'Monaco glyph storage buffer',\n\t\t\tsize: TextureAtlas.maximumPageCount * (TextureAtlasPage.maximumGlyphCount * GlyphStorageBufferInfo.BytesPerEntry),\n\t\t\tusage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n\t\t})).object;\n\t\tthis._atlasGpuTextureVersions[0] = 0;\n\t\tthis._atlasGpuTextureVersions[1] = 0;\n\t\tthis._atlasGpuTexture = this._register(GPULifecycle.createTexture(this._device, {\n\t\t\tlabel: 'Monaco atlas texture',\n\t\t\tformat: 'rgba8unorm',\n\t\t\tsize: { width: atlas.pageSize, height: atlas.pageSize, depthOrArrayLayers: TextureAtlas.maximumPageCount },\n\t\t\tdimension: '2d',\n\t\t\tusage: GPUTextureUsage.TEXTURE_BINDING |\n\t\t\t\tGPUTextureUsage.COPY_DST |\n\t\t\t\tGPUTextureUsage.RENDER_ATTACHMENT,\n\t\t})).object;\n\n\t\tthis._updateAtlasStorageBufferAndTexture();\n\n\t\t// #endregion Storage buffers\n\n\t\t// #region Vertex buffer\n\n\t\tthis._vertexBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\tlabel: 'Monaco vertex buffer',\n\t\t\tsize: quadVertices.byteLength,\n\t\t\tusage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n\t\t}, quadVertices)).object;\n\n\t\t// #endregion Vertex buffer\n\n\t\t// #region Shader module\n\n\t\tconst module = this._device.createShaderModule({\n\t\t\tlabel: 'Monaco shader module',\n\t\t\tcode: this._renderStrategy.value!.wgsl,\n\t\t});\n\n\t\t// #endregion Shader module\n\n\t\t// #region Pipeline\n\n\t\tthis._pipeline = this._device.createRenderPipeline({\n\t\t\tlabel: 'Monaco render pipeline',\n\t\t\tlayout: 'auto',\n\t\t\tvertex: {\n\t\t\t\tmodule,\n\t\t\t\tbuffers: [\n\t\t\t\t\t{\n\t\t\t\t\t\tarrayStride: 2 * Float32Array.BYTES_PER_ELEMENT, // 2 floats, 4 bytes each\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{ shaderLocation: 0, offset: 0, format: 'float32x2' },  // position\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tfragment: {\n\t\t\t\tmodule,\n\t\t\t\ttargets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tformat: presentationFormat,\n\t\t\t\t\t\tblend: {\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tsrcFactor: 'src-alpha',\n\t\t\t\t\t\t\t\tdstFactor: 'one-minus-src-alpha'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\talpha: {\n\t\t\t\t\t\t\t\tsrcFactor: 'src-alpha',\n\t\t\t\t\t\t\t\tdstFactor: 'one-minus-src-alpha'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\n\t\t// #endregion Pipeline\n\n\t\t// #region Bind group\n\n\t\tthis._rebuildBindGroup = () => {\n\t\t\tthis._bindGroup = this._device.createBindGroup({\n\t\t\t\tlabel: 'Monaco bind group',\n\t\t\t\tlayout: this._pipeline.getBindGroupLayout(0),\n\t\t\t\tentries: [\n\t\t\t\t\t// TODO: Pass in generically as array?\n\t\t\t\t\t{ binding: BindingId.GlyphInfo, resource: { buffer: this._glyphStorageBuffer } },\n\t\t\t\t\t{\n\t\t\t\t\t\tbinding: BindingId.TextureSampler, resource: this._device.createSampler({\n\t\t\t\t\t\t\tlabel: 'Monaco atlas sampler',\n\t\t\t\t\t\t\tmagFilter: 'nearest',\n\t\t\t\t\t\t\tminFilter: 'nearest',\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\t{ binding: BindingId.Texture, resource: this._atlasGpuTexture.createView() },\n\t\t\t\t\t{ binding: BindingId.LayoutInfoUniform, resource: { buffer: layoutInfoUniformBuffer } },\n\t\t\t\t\t{ binding: BindingId.AtlasDimensionsUniform, resource: { buffer: atlasInfoUniformBuffer } },\n\t\t\t\t\t...this._renderStrategy.value!.bindGroupEntries\n\t\t\t\t],\n\t\t\t});\n\t\t};\n\t\tthis._rebuildBindGroup();\n\n\t\t// endregion Bind group\n\n\t\tthis._initialized = true;\n\n\t\t// Render the initial viewport immediately after initialization\n\t\tif (this._initViewportData) {\n\t\t\t// HACK: Rendering multiple times in the same frame like this isn't ideal, but there\n\t\t\t//       isn't an easy way to merge viewport data\n\t\t\tfor (const viewportData of this._initViewportData) {\n\t\t\t\tthis.renderText(viewportData);\n\t\t\t}\n\t\t\tthis._initViewportData = undefined;\n\t\t}\n\t}\n\n\tprivate _refreshRenderStrategy(viewportData: ViewportData) {\n\t\tif (this._renderStrategy.value?.type === 'viewport') {\n\t\t\treturn;\n\t\t}\n\t\tif (viewportData.endLineNumber < FullFileRenderStrategy.maxSupportedLines && this._viewportMaxColumn(viewportData) < FullFileRenderStrategy.maxSupportedColumns) {\n\t\t\treturn;\n\t\t}\n\t\tthis._logService.trace(`File is larger than ${FullFileRenderStrategy.maxSupportedLines} lines or ${FullFileRenderStrategy.maxSupportedColumns} columns, switching to viewport render strategy`);\n\t\tconst viewportRenderStrategy = this._instantiationService.createInstance(ViewportRenderStrategy, this._context, this._viewGpuContext, this._device, this._glyphRasterizer as { value: GlyphRasterizer });\n\t\tthis._renderStrategy.value = viewportRenderStrategy;\n\t\tthis._register(viewportRenderStrategy.onDidChangeBindGroupEntries(() => this._rebuildBindGroup?.()));\n\t\tthis._rebuildBindGroup?.();\n\t}\n\n\tprivate _viewportMaxColumn(viewportData: ViewportData): number {\n\t\tlet maxColumn = 0;\n\t\tlet lineData: ViewLineRenderingData;\n\t\tfor (let i = viewportData.startLineNumber; i <= viewportData.endLineNumber; i++) {\n\t\t\tlineData = viewportData.getViewLineRenderingData(i);\n\t\t\tmaxColumn = Math.max(maxColumn, lineData.maxColumn);\n\t\t}\n\t\treturn maxColumn;\n\t}\n\n\tprivate _updateAtlasStorageBufferAndTexture() {\n\t\tfor (const [layerIndex, page] of ViewGpuContext.atlas.pages.entries()) {\n\t\t\tif (layerIndex >= TextureAtlas.maximumPageCount) {\n\t\t\t\tconsole.log(`Attempt to upload atlas page [${layerIndex}], only ${TextureAtlas.maximumPageCount} are supported currently`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip the update if it's already the latest version\n\t\t\tif (page.version === this._atlasGpuTextureVersions[layerIndex]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._logService.trace('Updating atlas page[', layerIndex, '] from version ', this._atlasGpuTextureVersions[layerIndex], ' to version ', page.version);\n\n\t\t\tconst entryCount = GlyphStorageBufferInfo.FloatsPerEntry * TextureAtlasPage.maximumGlyphCount;\n\t\t\tconst values = new Float32Array(entryCount);\n\t\t\tlet entryOffset = 0;\n\t\t\tfor (const glyph of page.glyphs) {\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TexturePosition] = glyph.x;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TexturePosition + 1] = glyph.y;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TextureSize] = glyph.w;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TextureSize + 1] = glyph.h;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_OriginPosition] = glyph.originOffsetX;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_OriginPosition + 1] = glyph.originOffsetY;\n\t\t\t\tentryOffset += GlyphStorageBufferInfo.FloatsPerEntry;\n\t\t\t}\n\t\t\tif (entryOffset / GlyphStorageBufferInfo.FloatsPerEntry > TextureAtlasPage.maximumGlyphCount) {\n\t\t\t\tthrow new Error(`Attempting to write more glyphs (${entryOffset / GlyphStorageBufferInfo.FloatsPerEntry}) than the GPUBuffer can hold (${TextureAtlasPage.maximumGlyphCount})`);\n\t\t\t}\n\t\t\tthis._device.queue.writeBuffer(\n\t\t\t\tthis._glyphStorageBuffer,\n\t\t\t\tlayerIndex * GlyphStorageBufferInfo.FloatsPerEntry * TextureAtlasPage.maximumGlyphCount * Float32Array.BYTES_PER_ELEMENT,\n\t\t\t\tvalues,\n\t\t\t\t0,\n\t\t\t\tGlyphStorageBufferInfo.FloatsPerEntry * TextureAtlasPage.maximumGlyphCount\n\t\t\t);\n\t\t\tif (page.usedArea.right - page.usedArea.left > 0 && page.usedArea.bottom - page.usedArea.top > 0) {\n\t\t\t\tthis._device.queue.copyExternalImageToTexture(\n\t\t\t\t\t{ source: page.source },\n\t\t\t\t\t{\n\t\t\t\t\t\ttexture: this._atlasGpuTexture,\n\t\t\t\t\t\torigin: {\n\t\t\t\t\t\t\tx: page.usedArea.left,\n\t\t\t\t\t\t\ty: page.usedArea.top,\n\t\t\t\t\t\t\tz: layerIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: page.usedArea.right - page.usedArea.left + 1,\n\t\t\t\t\t\theight: page.usedArea.bottom - page.usedArea.top + 1\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._atlasGpuTextureVersions[layerIndex] = page.version;\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthrow new BugIndicatingError('Should not be called');\n\t}\n\n\tpublic override render(ctx: RestrictedRenderingContext): void {\n\t\tthrow new BugIndicatingError('Should not be called');\n\t}\n\n\t// #region Event handlers\n\n\t// Since ViewLinesGpu currently coordinates rendering to the canvas, it must listen to all\n\t// changed events that any GPU part listens to. This is because any drawing to the canvas will\n\t// clear it for that frame, so all parts must be rendered every time.\n\t//\n\t// Additionally, since this is intrinsically linked to ViewLines, it must also listen to events\n\t// from that side. Luckily rendering is cheap, it's only when uploaded data changes does it\n\t// start to cost.\n\n\toverride onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._refreshGlyphRasterizer();\n\t\treturn true;\n\t}\n\toverride onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean { return true; }\n\toverride onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean { return true; }\n\toverride onFlushed(e: viewEvents.ViewFlushedEvent): boolean { return true; }\n\n\toverride onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean { return true; }\n\toverride onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean { return true; }\n\toverride onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean { return true; }\n\toverride onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean { return true; }\n\toverride onRevealRangeRequest(e: viewEvents.ViewRevealRangeRequestEvent): boolean { return true; }\n\toverride onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean { return true; }\n\toverride onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean { return true; }\n\toverride onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean { return true; }\n\n\t// #endregion\n\n\tprivate _refreshGlyphRasterizer() {\n\t\tconst glyphRasterizer = this._glyphRasterizer.value;\n\t\tif (!glyphRasterizer) {\n\t\t\treturn;\n\t\t}\n\t\tconst fontFamily = this._context.configuration.options.get(EditorOption.fontFamily);\n\t\tconst fontSize = this._context.configuration.options.get(EditorOption.fontSize);\n\t\tconst devicePixelRatio = this._viewGpuContext.devicePixelRatio.get();\n\t\tif (\n\t\t\tglyphRasterizer.fontFamily !== fontFamily ||\n\t\t\tglyphRasterizer.fontSize !== fontSize ||\n\t\t\tglyphRasterizer.devicePixelRatio !== devicePixelRatio\n\t\t) {\n\t\t\tthis._glyphRasterizer.value = new GlyphRasterizer(fontSize, fontFamily, devicePixelRatio, ViewGpuContext.decorationStyleCache);\n\t\t}\n\t}\n\n\tpublic renderText(viewportData: ViewportData): void {\n\t\tif (this._initialized) {\n\t\t\tthis._refreshRenderStrategy(viewportData);\n\t\t\treturn this._renderText(viewportData);\n\t\t} else {\n\t\t\tthis._initViewportData = this._initViewportData ?? [];\n\t\t\tthis._initViewportData.push(viewportData);\n\t\t}\n\t}\n\n\tprivate _renderText(viewportData: ViewportData): void {\n\t\tthis._viewGpuContext.rectangleRenderer.draw(viewportData);\n\n\t\tconst options = new ViewLineOptions(this._context.configuration, this._context.theme.type);\n\n\t\tthis._renderStrategy.value!.update(viewportData, options);\n\n\t\tthis._updateAtlasStorageBufferAndTexture();\n\n\t\tconst encoder = this._device.createCommandEncoder({ label: 'Monaco command encoder' });\n\n\t\tthis._renderPassColorAttachment.view = this._viewGpuContext.ctx.getCurrentTexture().createView({ label: 'Monaco canvas texture view' });\n\t\tconst pass = encoder.beginRenderPass(this._renderPassDescriptor);\n\t\tpass.setPipeline(this._pipeline);\n\t\tpass.setVertexBuffer(0, this._vertexBuffer);\n\n\t\t// Only draw the content area\n\t\tconst contentLeft = Math.ceil(this._viewGpuContext.contentLeft.get() * this._viewGpuContext.devicePixelRatio.get());\n\t\tpass.setScissorRect(contentLeft, 0, this.canvas.width - contentLeft, this.canvas.height);\n\n\t\tpass.setBindGroup(0, this._bindGroup);\n\n\t\tthis._renderStrategy.value!.draw(pass, viewportData);\n\n\t\tpass.end();\n\n\t\tconst commandBuffer = encoder.finish();\n\n\t\tthis._device.queue.submit([commandBuffer]);\n\n\t\tthis._lastViewportData = viewportData;\n\t\tthis._lastViewLineOptions = options;\n\t}\n\n\tlinesVisibleRangesForRange(_range: Range, includeNewLines: boolean): LineVisibleRanges[] | null {\n\t\tif (!this._lastViewportData) {\n\t\t\treturn null;\n\t\t}\n\t\tconst originalEndLineNumber = _range.endLineNumber;\n\t\tconst range = Range.intersectRanges(_range, this._lastViewportData.visibleRange);\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rendStartLineNumber = this._lastViewportData.startLineNumber;\n\t\tconst rendEndLineNumber = this._lastViewportData.endLineNumber;\n\n\t\tconst viewportData = this._lastViewportData;\n\t\tconst viewLineOptions = this._lastViewLineOptions;\n\n\t\tif (!viewportData || !viewLineOptions) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst visibleRanges: LineVisibleRanges[] = [];\n\n\t\tlet nextLineModelLineNumber: number = 0;\n\t\tif (includeNewLines) {\n\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n\t\t}\n\n\t\tfor (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\n\t\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n\t\t\tconst continuesInNextLine = lineNumber !== originalEndLineNumber;\n\t\t\tconst endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n\n\t\t\tconst visibleRangesForLine = this._visibleRangesForLineRange(lineNumber, startColumn, endColumn);\n\n\t\t\tif (!visibleRangesForLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (includeNewLines && lineNumber < originalEndLineNumber) {\n\t\t\t\tconst currentLineModelLineNumber = nextLineModelLineNumber;\n\t\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n\n\t\t\t\tif (currentLineModelLineNumber !== nextLineModelLineNumber) {\n\t\t\t\t\tvisibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += viewLineOptions.spaceWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvisibleRanges.push(new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine));\n\t\t}\n\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn visibleRanges;\n\t}\n\n\tprivate _visibleRangesForLineRange(lineNumber: number, startColumn: number, endColumn: number): VisibleRanges | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tconst viewportData = this._lastViewportData;\n\t\tconst viewLineOptions = this._lastViewLineOptions;\n\n\t\tif (!viewportData || !viewLineOptions || lineNumber < viewportData.startLineNumber || lineNumber > viewportData.endLineNumber) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Resolve tab widths for this line\n\t\tconst lineData = viewportData.getViewLineRenderingData(lineNumber);\n\t\tconst content = lineData.content;\n\n\t\tlet contentSegmenter: IContentSegmenter | undefined;\n\t\tif (!(lineData.isBasicASCII && viewLineOptions.useMonospaceOptimizations)) {\n\t\t\tcontentSegmenter = createContentSegmenter(lineData, viewLineOptions);\n\t\t}\n\n\t\tlet chars: string | undefined = '';\n\n\t\tlet resolvedStartColumn = 0;\n\t\tlet resolvedStartCssPixelOffset = 0;\n\t\tfor (let x = 0; x < startColumn - 1; x++) {\n\t\t\tif (lineData.isBasicASCII && viewLineOptions.useMonospaceOptimizations) {\n\t\t\t\tchars = content.charAt(x);\n\t\t\t} else {\n\t\t\t\tchars = contentSegmenter!.getSegmentAtIndex(x);\n\t\t\t\tif (chars === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedStartCssPixelOffset += (this._renderStrategy.value!.glyphRasterizer.getTextMetrics(chars).width / getActiveWindow().devicePixelRatio) - viewLineOptions.spaceWidth;\n\t\t\t}\n\t\t\tif (chars === '\\t') {\n\t\t\t\tresolvedStartColumn = CursorColumns.nextRenderTabStop(resolvedStartColumn, lineData.tabSize);\n\t\t\t} else {\n\t\t\t\tresolvedStartColumn++;\n\t\t\t}\n\t\t}\n\t\tlet resolvedEndColumn = resolvedStartColumn;\n\t\tlet resolvedEndCssPixelOffset = 0;\n\t\tfor (let x = startColumn - 1; x < endColumn - 1; x++) {\n\t\t\tif (lineData.isBasicASCII && viewLineOptions.useMonospaceOptimizations) {\n\t\t\t\tchars = content.charAt(x);\n\t\t\t} else {\n\t\t\t\tchars = contentSegmenter!.getSegmentAtIndex(x);\n\t\t\t\tif (chars === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedEndCssPixelOffset += (this._renderStrategy.value!.glyphRasterizer.getTextMetrics(chars).width / getActiveWindow().devicePixelRatio) - viewLineOptions.spaceWidth;\n\t\t\t}\n\t\t\tif (chars === '\\t') {\n\t\t\t\tresolvedEndColumn = CursorColumns.nextRenderTabStop(resolvedEndColumn, lineData.tabSize);\n\t\t\t} else {\n\t\t\t\tresolvedEndColumn++;\n\t\t\t}\n\t\t}\n\n\t\t// Visible horizontal range in _scaled_ pixels\n\t\tconst result = new VisibleRanges(false, [new FloatHorizontalRange(\n\t\t\tresolvedStartColumn * viewLineOptions.spaceWidth + resolvedStartCssPixelOffset,\n\t\t\t(resolvedEndColumn - resolvedStartColumn) * viewLineOptions.spaceWidth + resolvedEndCssPixelOffset)\n\t\t]);\n\n\t\treturn result;\n\t}\n\n\tvisibleRangeForPosition(position: Position): HorizontalPosition | null {\n\t\tconst visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n\t\tif (!visibleRanges) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n\t}\n\n\tgetLineWidth(lineNumber: number): number | undefined {\n\t\tif (!this._lastViewportData || !this._lastViewLineOptions) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._viewGpuContext.canRender(this._lastViewLineOptions, this._lastViewportData, lineNumber)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst lineData = this._lastViewportData.getViewLineRenderingData(lineNumber);\n\t\tconst lineRange = this._visibleRangesForLineRange(lineNumber, 1, lineData.maxColumn);\n\t\tconst lastRange = lineRange?.ranges.at(-1);\n\t\tif (lastRange) {\n\t\t\treturn lastRange.width;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetPositionAtCoordinate(lineNumber: number, mouseContentHorizontalOffset: number): Position | undefined {\n\t\tif (!this._lastViewportData || !this._lastViewLineOptions) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._viewGpuContext.canRender(this._lastViewLineOptions, this._lastViewportData, lineNumber)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst lineData = this._lastViewportData.getViewLineRenderingData(lineNumber);\n\t\tconst content = lineData.content;\n\t\tconst dpr = getActiveWindow().devicePixelRatio;\n\t\tconst mouseContentHorizontalOffsetDevicePixels = mouseContentHorizontalOffset * dpr;\n\t\tconst spaceWidthDevicePixels = this._lastViewLineOptions.spaceWidth * dpr;\n\t\tconst contentSegmenter = createContentSegmenter(lineData, this._lastViewLineOptions);\n\n\t\tlet widthSoFar = 0;\n\t\tlet charWidth = 0;\n\t\tlet tabXOffset = 0;\n\t\tlet column = 0;\n\t\tfor (let x = 0; x < content.length; x++) {\n\t\t\tconst chars = contentSegmenter.getSegmentAtIndex(x);\n\n\t\t\t// Part of an earlier segment\n\t\t\tif (chars === undefined) {\n\t\t\t\tcolumn++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get the width of the character\n\t\t\tif (chars === '\\t') {\n\t\t\t\t// Find the pixel offset between the current position and the next tab stop\n\t\t\t\tconst offsetBefore = x + tabXOffset;\n\t\t\t\ttabXOffset = CursorColumns.nextRenderTabStop(x + tabXOffset, lineData.tabSize);\n\t\t\t\tcharWidth = spaceWidthDevicePixels * (tabXOffset - offsetBefore);\n\t\t\t\t// Convert back to offset excluding x and the current character\n\t\t\t\ttabXOffset -= x + 1;\n\t\t\t} else if (lineData.isBasicASCII && this._lastViewLineOptions.useMonospaceOptimizations) {\n\t\t\t\tcharWidth = spaceWidthDevicePixels;\n\t\t\t} else {\n\t\t\t\tcharWidth = this._renderStrategy.value!.glyphRasterizer.getTextMetrics(chars).width;\n\t\t\t}\n\n\t\t\tif (mouseContentHorizontalOffsetDevicePixels < widthSoFar + charWidth / 2) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\twidthSoFar += charWidth;\n\t\t\tcolumn++;\n\t\t}\n\n\t\treturn new Position(lineNumber, column + 1);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getActiveWindow } from '../../../../base/browser/dom.js';\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { autorun, runOnChange } from '../../../../base/common/observable.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ViewportData } from '../../../common/viewLayout/viewLinesViewportData.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { TextureAtlasPage } from '../../gpu/atlas/textureAtlasPage.js';\nimport { BindingId, type IGpuRenderStrategy } from '../../gpu/gpu.js';\nimport { GPULifecycle } from '../../gpu/gpuDisposable.js';\nimport { quadVertices } from '../../gpu/gpuUtils.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { FloatHorizontalRange, HorizontalPosition, HorizontalRange, IViewLines, LineVisibleRanges, RenderingContext, RestrictedRenderingContext, VisibleRanges } from '../../view/renderingContext.js';\nimport { ViewPart } from '../../view/viewPart.js';\nimport { ViewLineOptions } from '../viewLines/viewLineOptions.js';\nimport type * as viewEvents from '../../../common/viewEvents.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { TextureAtlas } from '../../gpu/atlas/textureAtlas.js';\nimport { createContentSegmenter, type IContentSegmenter } from '../../gpu/contentSegmenter.js';\nimport { ViewportRenderStrategy } from '../../gpu/renderStrategy/viewportRenderStrategy.js';\nimport { FullFileRenderStrategy } from '../../gpu/renderStrategy/fullFileRenderStrategy.js';\nimport { MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { ViewLineRenderingData } from '../../../common/viewModel.js';\nimport { GlyphRasterizer } from '../../gpu/raster/glyphRasterizer.js';\n\nconst enum GlyphStorageBufferInfo {\n\tFloatsPerEntry = 2 + 2 + 2,\n\tBytesPerEntry = GlyphStorageBufferInfo.FloatsPerEntry * 4,\n\tOffset_TexturePosition = 0,\n\tOffset_TextureSize = 2,\n\tOffset_OriginPosition = 4,\n}\n\n/**\n * The GPU implementation of the ViewLines part.\n */\nexport class ViewLinesGpu extends ViewPart implements IViewLines {\n\n\tprivate readonly canvas: HTMLCanvasElement;\n\n\tprivate _initViewportData?: ViewportData[];\n\tprivate _lastViewportData?: ViewportData;\n\tprivate _lastViewLineOptions?: ViewLineOptions;\n\n\tprivate _device!: GPUDevice;\n\tprivate _renderPassDescriptor!: GPURenderPassDescriptor;\n\tprivate _renderPassColorAttachment!: GPURenderPassColorAttachment;\n\tprivate _bindGroup!: GPUBindGroup;\n\tprivate _pipeline!: GPURenderPipeline;\n\n\tprivate _vertexBuffer!: GPUBuffer;\n\n\tprivate _glyphStorageBuffer!: GPUBuffer;\n\tprivate _atlasGpuTexture!: GPUTexture;\n\tprivate readonly _atlasGpuTextureVersions: number[] = [];\n\n\tprivate _initialized = false;\n\n\tprivate readonly _glyphRasterizer: MutableDisposable<GlyphRasterizer> = this._register(new MutableDisposable());\n\tprivate readonly _renderStrategy: MutableDisposable<IGpuRenderStrategy> = this._register(new MutableDisposable());\n\tprivate _rebuildBindGroup?: () => void;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tprivate readonly _viewGpuContext: ViewGpuContext,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tsuper(context);\n\n\t\tthis.canvas = this._viewGpuContext.canvas.domNode;\n\n\t\t// Re-render the following frame after canvas device pixel dimensions change, provided a\n\t\t// new render does not occur.\n\t\tthis._register(autorun(reader => {\n\t\t\tthis._viewGpuContext.canvasDevicePixelDimensions.read(reader);\n\t\t\tconst lastViewportData = this._lastViewportData;\n\t\t\tif (lastViewportData) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (lastViewportData === this._lastViewportData) {\n\t\t\t\t\t\tthis.renderText(lastViewportData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis.initWebgpu();\n\t}\n\n\tasync initWebgpu() {\n\t\t// #region General\n\n\t\tthis._device = ViewGpuContext.deviceSync || await ViewGpuContext.device;\n\n\t\tif (this._store.isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst atlas = ViewGpuContext.atlas;\n\n\t\t// Rerender when the texture atlas deletes glyphs\n\t\tthis._register(atlas.onDidDeleteGlyphs(() => {\n\t\t\tthis._atlasGpuTextureVersions.length = 0;\n\t\t\tthis._atlasGpuTextureVersions[0] = 0;\n\t\t\tthis._atlasGpuTextureVersions[1] = 0;\n\t\t\tthis._renderStrategy.value!.reset();\n\t\t}));\n\n\t\tconst presentationFormat = navigator.gpu.getPreferredCanvasFormat();\n\t\tthis._viewGpuContext.ctx.configure({\n\t\t\tdevice: this._device,\n\t\t\tformat: presentationFormat,\n\t\t\talphaMode: 'premultiplied',\n\t\t});\n\n\t\tthis._renderPassColorAttachment = {\n\t\t\tview: null!, // Will be filled at render time\n\t\t\tloadOp: 'load',\n\t\t\tstoreOp: 'store',\n\t\t};\n\t\tthis._renderPassDescriptor = {\n\t\t\tlabel: 'Monaco render pass',\n\t\t\tcolorAttachments: [this._renderPassColorAttachment],\n\t\t};\n\n\t\t// #endregion General\n\n\t\t// #region Uniforms\n\n\t\tlet layoutInfoUniformBuffer: GPUBuffer;\n\t\t{\n\t\t\tconst enum Info {\n\t\t\t\tFloatsPerEntry = 6,\n\t\t\t\tBytesPerEntry = Info.FloatsPerEntry * 4,\n\t\t\t\tOffset_CanvasWidth____ = 0,\n\t\t\t\tOffset_CanvasHeight___ = 1,\n\t\t\t\tOffset_ViewportOffsetX = 2,\n\t\t\t\tOffset_ViewportOffsetY = 3,\n\t\t\t\tOffset_ViewportWidth__ = 4,\n\t\t\t\tOffset_ViewportHeight_ = 5,\n\t\t\t}\n\t\t\tconst bufferValues = new Float32Array(Info.FloatsPerEntry);\n\t\t\tconst updateBufferValues = (canvasDevicePixelWidth: number = this.canvas.width, canvasDevicePixelHeight: number = this.canvas.height) => {\n\t\t\t\tbufferValues[Info.Offset_CanvasWidth____] = canvasDevicePixelWidth;\n\t\t\t\tbufferValues[Info.Offset_CanvasHeight___] = canvasDevicePixelHeight;\n\t\t\t\tbufferValues[Info.Offset_ViewportOffsetX] = Math.ceil(this._context.configuration.options.get(EditorOption.layoutInfo).contentLeft * getActiveWindow().devicePixelRatio);\n\t\t\t\tbufferValues[Info.Offset_ViewportOffsetY] = 0;\n\t\t\t\tbufferValues[Info.Offset_ViewportWidth__] = bufferValues[Info.Offset_CanvasWidth____] - bufferValues[Info.Offset_ViewportOffsetX];\n\t\t\t\tbufferValues[Info.Offset_ViewportHeight_] = bufferValues[Info.Offset_CanvasHeight___] - bufferValues[Info.Offset_ViewportOffsetY];\n\t\t\t\treturn bufferValues;\n\t\t\t};\n\t\t\tlayoutInfoUniformBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\t\tlabel: 'Monaco uniform buffer',\n\t\t\t\tsize: Info.BytesPerEntry,\n\t\t\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n\t\t\t}, () => updateBufferValues())).object;\n\t\t\tthis._register(runOnChange(this._viewGpuContext.canvasDevicePixelDimensions, ({ width, height }) => {\n\t\t\t\tthis._device.queue.writeBuffer(layoutInfoUniformBuffer, 0, updateBufferValues(width, height));\n\t\t\t}));\n\t\t\tthis._register(runOnChange(this._viewGpuContext.contentLeft, () => {\n\t\t\t\tthis._device.queue.writeBuffer(layoutInfoUniformBuffer, 0, updateBufferValues());\n\t\t\t}));\n\t\t}\n\n\t\tlet atlasInfoUniformBuffer: GPUBuffer;\n\t\t{\n\t\t\tconst enum Info {\n\t\t\t\tFloatsPerEntry = 2,\n\t\t\t\tBytesPerEntry = Info.FloatsPerEntry * 4,\n\t\t\t\tOffset_Width_ = 0,\n\t\t\t\tOffset_Height = 1,\n\t\t\t}\n\t\t\tatlasInfoUniformBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\t\tlabel: 'Monaco atlas info uniform buffer',\n\t\t\t\tsize: Info.BytesPerEntry,\n\t\t\t\tusage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,\n\t\t\t}, () => {\n\t\t\t\tconst values = new Float32Array(Info.FloatsPerEntry);\n\t\t\t\tvalues[Info.Offset_Width_] = atlas.pageSize;\n\t\t\t\tvalues[Info.Offset_Height] = atlas.pageSize;\n\t\t\t\treturn values;\n\t\t\t})).object;\n\t\t}\n\n\t\t// #endregion Uniforms\n\n\t\t// #region Storage buffers\n\n\t\tconst fontFamily = this._context.configuration.options.get(EditorOption.fontFamily);\n\t\tconst fontSize = this._context.configuration.options.get(EditorOption.fontSize);\n\t\tthis._glyphRasterizer.value = this._register(new GlyphRasterizer(fontSize, fontFamily, this._viewGpuContext.devicePixelRatio.get(), ViewGpuContext.decorationStyleCache));\n\t\tthis._register(runOnChange(this._viewGpuContext.devicePixelRatio, () => {\n\t\t\tthis._refreshGlyphRasterizer();\n\t\t}));\n\n\n\t\tthis._renderStrategy.value = this._instantiationService.createInstance(FullFileRenderStrategy, this._context, this._viewGpuContext, this._device, this._glyphRasterizer as { value: GlyphRasterizer });\n\t\t// this._renderStrategy.value = this._instantiationService.createInstance(ViewportRenderStrategy, this._context, this._viewGpuContext, this._device);\n\n\t\tthis._glyphStorageBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\tlabel: 'Monaco glyph storage buffer',\n\t\t\tsize: TextureAtlas.maximumPageCount * (TextureAtlasPage.maximumGlyphCount * GlyphStorageBufferInfo.BytesPerEntry),\n\t\t\tusage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\n\t\t})).object;\n\t\tthis._atlasGpuTextureVersions[0] = 0;\n\t\tthis._atlasGpuTextureVersions[1] = 0;\n\t\tthis._atlasGpuTexture = this._register(GPULifecycle.createTexture(this._device, {\n\t\t\tlabel: 'Monaco atlas texture',\n\t\t\tformat: 'rgba8unorm',\n\t\t\tsize: { width: atlas.pageSize, height: atlas.pageSize, depthOrArrayLayers: TextureAtlas.maximumPageCount },\n\t\t\tdimension: '2d',\n\t\t\tusage: GPUTextureUsage.TEXTURE_BINDING |\n\t\t\t\tGPUTextureUsage.COPY_DST |\n\t\t\t\tGPUTextureUsage.RENDER_ATTACHMENT,\n\t\t})).object;\n\n\t\tthis._updateAtlasStorageBufferAndTexture();\n\n\t\t// #endregion Storage buffers\n\n\t\t// #region Vertex buffer\n\n\t\tthis._vertexBuffer = this._register(GPULifecycle.createBuffer(this._device, {\n\t\t\tlabel: 'Monaco vertex buffer',\n\t\t\tsize: quadVertices.byteLength,\n\t\t\tusage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\n\t\t}, quadVertices)).object;\n\n\t\t// #endregion Vertex buffer\n\n\t\t// #region Shader module\n\n\t\tconst module = this._device.createShaderModule({\n\t\t\tlabel: 'Monaco shader module',\n\t\t\tcode: this._renderStrategy.value!.wgsl,\n\t\t});\n\n\t\t// #endregion Shader module\n\n\t\t// #region Pipeline\n\n\t\tthis._pipeline = this._device.createRenderPipeline({\n\t\t\tlabel: 'Monaco render pipeline',\n\t\t\tlayout: 'auto',\n\t\t\tvertex: {\n\t\t\t\tmodule,\n\t\t\t\tbuffers: [\n\t\t\t\t\t{\n\t\t\t\t\t\tarrayStride: 2 * Float32Array.BYTES_PER_ELEMENT, // 2 floats, 4 bytes each\n\t\t\t\t\t\tattributes: [\n\t\t\t\t\t\t\t{ shaderLocation: 0, offset: 0, format: 'float32x2' },  // position\n\t\t\t\t\t\t],\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tfragment: {\n\t\t\t\tmodule,\n\t\t\t\ttargets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tformat: presentationFormat,\n\t\t\t\t\t\tblend: {\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tsrcFactor: 'src-alpha',\n\t\t\t\t\t\t\t\tdstFactor: 'one-minus-src-alpha'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\talpha: {\n\t\t\t\t\t\t\t\tsrcFactor: 'src-alpha',\n\t\t\t\t\t\t\t\tdstFactor: 'one-minus-src-alpha'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t},\n\t\t});\n\n\t\t// #endregion Pipeline\n\n\t\t// #region Bind group\n\n\t\tthis._rebuildBindGroup = () => {\n\t\t\tthis._bindGroup = this._device.createBindGroup({\n\t\t\t\tlabel: 'Monaco bind group',\n\t\t\t\tlayout: this._pipeline.getBindGroupLayout(0),\n\t\t\t\tentries: [\n\t\t\t\t\t// TODO: Pass in generically as array?\n\t\t\t\t\t{ binding: BindingId.GlyphInfo, resource: { buffer: this._glyphStorageBuffer } },\n\t\t\t\t\t{\n\t\t\t\t\t\tbinding: BindingId.TextureSampler, resource: this._device.createSampler({\n\t\t\t\t\t\t\tlabel: 'Monaco atlas sampler',\n\t\t\t\t\t\t\tmagFilter: 'nearest',\n\t\t\t\t\t\t\tminFilter: 'nearest',\n\t\t\t\t\t\t})\n\t\t\t\t\t},\n\t\t\t\t\t{ binding: BindingId.Texture, resource: this._atlasGpuTexture.createView() },\n\t\t\t\t\t{ binding: BindingId.LayoutInfoUniform, resource: { buffer: layoutInfoUniformBuffer } },\n\t\t\t\t\t{ binding: BindingId.AtlasDimensionsUniform, resource: { buffer: atlasInfoUniformBuffer } },\n\t\t\t\t\t...this._renderStrategy.value!.bindGroupEntries\n\t\t\t\t],\n\t\t\t});\n\t\t};\n\t\tthis._rebuildBindGroup();\n\n\t\t// endregion Bind group\n\n\t\tthis._initialized = true;\n\n\t\t// Render the initial viewport immediately after initialization\n\t\tif (this._initViewportData) {\n\t\t\t// HACK: Rendering multiple times in the same frame like this isn't ideal, but there\n\t\t\t//       isn't an easy way to merge viewport data\n\t\t\tfor (const viewportData of this._initViewportData) {\n\t\t\t\tthis.renderText(viewportData);\n\t\t\t}\n\t\t\tthis._initViewportData = undefined;\n\t\t}\n\t}\n\n\tprivate _refreshRenderStrategy(viewportData: ViewportData) {\n\t\tif (this._renderStrategy.value?.type === 'viewport') {\n\t\t\treturn;\n\t\t}\n\t\tif (viewportData.endLineNumber < FullFileRenderStrategy.maxSupportedLines && this._viewportMaxColumn(viewportData) < FullFileRenderStrategy.maxSupportedColumns) {\n\t\t\treturn;\n\t\t}\n\t\tthis._logService.trace(`File is larger than ${FullFileRenderStrategy.maxSupportedLines} lines or ${FullFileRenderStrategy.maxSupportedColumns} columns, switching to viewport render strategy`);\n\t\tconst viewportRenderStrategy = this._instantiationService.createInstance(ViewportRenderStrategy, this._context, this._viewGpuContext, this._device, this._glyphRasterizer as { value: GlyphRasterizer });\n\t\tthis._renderStrategy.value = viewportRenderStrategy;\n\t\tthis._register(viewportRenderStrategy.onDidChangeBindGroupEntries(() => this._rebuildBindGroup?.()));\n\t\tthis._rebuildBindGroup?.();\n\t}\n\n\tprivate _viewportMaxColumn(viewportData: ViewportData): number {\n\t\tlet maxColumn = 0;\n\t\tlet lineData: ViewLineRenderingData;\n\t\tfor (let i = viewportData.startLineNumber; i <= viewportData.endLineNumber; i++) {\n\t\t\tlineData = viewportData.getViewLineRenderingData(i);\n\t\t\tmaxColumn = Math.max(maxColumn, lineData.maxColumn);\n\t\t}\n\t\treturn maxColumn;\n\t}\n\n\tprivate _updateAtlasStorageBufferAndTexture() {\n\t\tfor (const [layerIndex, page] of ViewGpuContext.atlas.pages.entries()) {\n\t\t\tif (layerIndex >= TextureAtlas.maximumPageCount) {\n\t\t\t\tconsole.log(`Attempt to upload atlas page [${layerIndex}], only ${TextureAtlas.maximumPageCount} are supported currently`);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Skip the update if it's already the latest version\n\t\t\tif (page.version === this._atlasGpuTextureVersions[layerIndex]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis._logService.trace('Updating atlas page[', layerIndex, '] from version ', this._atlasGpuTextureVersions[layerIndex], ' to version ', page.version);\n\n\t\t\tconst entryCount = GlyphStorageBufferInfo.FloatsPerEntry * TextureAtlasPage.maximumGlyphCount;\n\t\t\tconst values = new Float32Array(entryCount);\n\t\t\tlet entryOffset = 0;\n\t\t\tfor (const glyph of page.glyphs) {\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TexturePosition] = glyph.x;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TexturePosition + 1] = glyph.y;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TextureSize] = glyph.w;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_TextureSize + 1] = glyph.h;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_OriginPosition] = glyph.originOffsetX;\n\t\t\t\tvalues[entryOffset + GlyphStorageBufferInfo.Offset_OriginPosition + 1] = glyph.originOffsetY;\n\t\t\t\tentryOffset += GlyphStorageBufferInfo.FloatsPerEntry;\n\t\t\t}\n\t\t\tif (entryOffset / GlyphStorageBufferInfo.FloatsPerEntry > TextureAtlasPage.maximumGlyphCount) {\n\t\t\t\tthrow new Error(`Attempting to write more glyphs (${entryOffset / GlyphStorageBufferInfo.FloatsPerEntry}) than the GPUBuffer can hold (${TextureAtlasPage.maximumGlyphCount})`);\n\t\t\t}\n\t\t\tthis._device.queue.writeBuffer(\n\t\t\t\tthis._glyphStorageBuffer,\n\t\t\t\tlayerIndex * GlyphStorageBufferInfo.FloatsPerEntry * TextureAtlasPage.maximumGlyphCount * Float32Array.BYTES_PER_ELEMENT,\n\t\t\t\tvalues,\n\t\t\t\t0,\n\t\t\t\tGlyphStorageBufferInfo.FloatsPerEntry * TextureAtlasPage.maximumGlyphCount\n\t\t\t);\n\t\t\tif (page.usedArea.right - page.usedArea.left > 0 && page.usedArea.bottom - page.usedArea.top > 0) {\n\t\t\t\tthis._device.queue.copyExternalImageToTexture(\n\t\t\t\t\t{ source: page.source },\n\t\t\t\t\t{\n\t\t\t\t\t\ttexture: this._atlasGpuTexture,\n\t\t\t\t\t\torigin: {\n\t\t\t\t\t\t\tx: page.usedArea.left,\n\t\t\t\t\t\t\ty: page.usedArea.top,\n\t\t\t\t\t\t\tz: layerIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\twidth: page.usedArea.right - page.usedArea.left + 1,\n\t\t\t\t\t\theight: page.usedArea.bottom - page.usedArea.top + 1\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._atlasGpuTextureVersions[layerIndex] = page.version;\n\t\t}\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthrow new BugIndicatingError('Should not be called');\n\t}\n\n\tpublic override render(ctx: RestrictedRenderingContext): void {\n\t\tthrow new BugIndicatingError('Should not be called');\n\t}\n\n\t// #region Event handlers\n\n\t// Since ViewLinesGpu currently coordinates rendering to the canvas, it must listen to all\n\t// changed events that any GPU part listens to. This is because any drawing to the canvas will\n\t// clear it for that frame, so all parts must be rendered every time.\n\t//\n\t// Additionally, since this is intrinsically linked to ViewLines, it must also listen to events\n\t// from that side. Luckily rendering is cheap, it's only when uploaded data changes does it\n\t// start to cost.\n\n\toverride onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._refreshGlyphRasterizer();\n\t\treturn true;\n\t}\n\toverride onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean { return true; }\n\toverride onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean { return true; }\n\toverride onFlushed(e: viewEvents.ViewFlushedEvent): boolean { return true; }\n\n\toverride onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean { return true; }\n\toverride onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean { return true; }\n\toverride onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean { return true; }\n\toverride onLineMappingChanged(e: viewEvents.ViewLineMappingChangedEvent): boolean { return true; }\n\toverride onRevealRangeRequest(e: viewEvents.ViewRevealRangeRequestEvent): boolean { return true; }\n\toverride onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean { return true; }\n\toverride onThemeChanged(e: viewEvents.ViewThemeChangedEvent): boolean { return true; }\n\toverride onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean { return true; }\n\n\t// #endregion\n\n\tprivate _refreshGlyphRasterizer() {\n\t\tconst glyphRasterizer = this._glyphRasterizer.value;\n\t\tif (!glyphRasterizer) {\n\t\t\treturn;\n\t\t}\n\t\tconst fontFamily = this._context.configuration.options.get(EditorOption.fontFamily);\n\t\tconst fontSize = this._context.configuration.options.get(EditorOption.fontSize);\n\t\tconst devicePixelRatio = this._viewGpuContext.devicePixelRatio.get();\n\t\tif (\n\t\t\tglyphRasterizer.fontFamily !== fontFamily ||\n\t\t\tglyphRasterizer.fontSize !== fontSize ||\n\t\t\tglyphRasterizer.devicePixelRatio !== devicePixelRatio\n\t\t) {\n\t\t\tthis._glyphRasterizer.value = new GlyphRasterizer(fontSize, fontFamily, devicePixelRatio, ViewGpuContext.decorationStyleCache);\n\t\t}\n\t}\n\n\tpublic renderText(viewportData: ViewportData): void {\n\t\tif (this._initialized) {\n\t\t\tthis._refreshRenderStrategy(viewportData);\n\t\t\treturn this._renderText(viewportData);\n\t\t} else {\n\t\t\tthis._initViewportData = this._initViewportData ?? [];\n\t\t\tthis._initViewportData.push(viewportData);\n\t\t}\n\t}\n\n\tprivate _renderText(viewportData: ViewportData): void {\n\t\tthis._viewGpuContext.rectangleRenderer.draw(viewportData);\n\n\t\tconst options = new ViewLineOptions(this._context.configuration, this._context.theme.type);\n\n\t\tthis._renderStrategy.value!.update(viewportData, options);\n\n\t\tthis._updateAtlasStorageBufferAndTexture();\n\n\t\tconst encoder = this._device.createCommandEncoder({ label: 'Monaco command encoder' });\n\n\t\tthis._renderPassColorAttachment.view = this._viewGpuContext.ctx.getCurrentTexture().createView({ label: 'Monaco canvas texture view' });\n\t\tconst pass = encoder.beginRenderPass(this._renderPassDescriptor);\n\t\tpass.setPipeline(this._pipeline);\n\t\tpass.setVertexBuffer(0, this._vertexBuffer);\n\n\t\t// Only draw the content area\n\t\tconst contentLeft = Math.ceil(this._viewGpuContext.contentLeft.get() * this._viewGpuContext.devicePixelRatio.get());\n\t\tpass.setScissorRect(contentLeft, 0, this.canvas.width - contentLeft, this.canvas.height);\n\n\t\tpass.setBindGroup(0, this._bindGroup);\n\n\t\tthis._renderStrategy.value!.draw(pass, viewportData);\n\n\t\tpass.end();\n\n\t\tconst commandBuffer = encoder.finish();\n\n\t\tthis._device.queue.submit([commandBuffer]);\n\n\t\tthis._lastViewportData = viewportData;\n\t\tthis._lastViewLineOptions = options;\n\t}\n\n\tlinesVisibleRangesForRange(_range: Range, includeNewLines: boolean): LineVisibleRanges[] | null {\n\t\tif (!this._lastViewportData) {\n\t\t\treturn null;\n\t\t}\n\t\tconst originalEndLineNumber = _range.endLineNumber;\n\t\tconst range = Range.intersectRanges(_range, this._lastViewportData.visibleRange);\n\t\tif (!range) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst rendStartLineNumber = this._lastViewportData.startLineNumber;\n\t\tconst rendEndLineNumber = this._lastViewportData.endLineNumber;\n\n\t\tconst viewportData = this._lastViewportData;\n\t\tconst viewLineOptions = this._lastViewLineOptions;\n\n\t\tif (!viewportData || !viewLineOptions) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst visibleRanges: LineVisibleRanges[] = [];\n\n\t\tlet nextLineModelLineNumber: number = 0;\n\t\tif (includeNewLines) {\n\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(range.startLineNumber, 1)).lineNumber;\n\t\t}\n\n\t\tfor (let lineNumber = range.startLineNumber; lineNumber <= range.endLineNumber; lineNumber++) {\n\n\t\t\tif (lineNumber < rendStartLineNumber || lineNumber > rendEndLineNumber) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst startColumn = lineNumber === range.startLineNumber ? range.startColumn : 1;\n\t\t\tconst continuesInNextLine = lineNumber !== originalEndLineNumber;\n\t\t\tconst endColumn = continuesInNextLine ? this._context.viewModel.getLineMaxColumn(lineNumber) : range.endColumn;\n\n\t\t\tconst visibleRangesForLine = this._visibleRangesForLineRange(lineNumber, startColumn, endColumn);\n\n\t\t\tif (!visibleRangesForLine) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (includeNewLines && lineNumber < originalEndLineNumber) {\n\t\t\t\tconst currentLineModelLineNumber = nextLineModelLineNumber;\n\t\t\t\tnextLineModelLineNumber = this._context.viewModel.coordinatesConverter.convertViewPositionToModelPosition(new Position(lineNumber + 1, 1)).lineNumber;\n\n\t\t\t\tif (currentLineModelLineNumber !== nextLineModelLineNumber) {\n\t\t\t\t\tvisibleRangesForLine.ranges[visibleRangesForLine.ranges.length - 1].width += viewLineOptions.spaceWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvisibleRanges.push(new LineVisibleRanges(visibleRangesForLine.outsideRenderedLine, lineNumber, HorizontalRange.from(visibleRangesForLine.ranges), continuesInNextLine));\n\t\t}\n\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn visibleRanges;\n\t}\n\n\tprivate _visibleRangesForLineRange(lineNumber: number, startColumn: number, endColumn: number): VisibleRanges | null {\n\t\tif (this.shouldRender()) {\n\t\t\t// Cannot read from the DOM because it is dirty\n\t\t\t// i.e. the model & the dom are out of sync, so I'd be reading something stale\n\t\t\treturn null;\n\t\t}\n\n\t\tconst viewportData = this._lastViewportData;\n\t\tconst viewLineOptions = this._lastViewLineOptions;\n\n\t\tif (!viewportData || !viewLineOptions || lineNumber < viewportData.startLineNumber || lineNumber > viewportData.endLineNumber) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Resolve tab widths for this line\n\t\tconst lineData = viewportData.getViewLineRenderingData(lineNumber);\n\t\tconst content = lineData.content;\n\n\t\tlet contentSegmenter: IContentSegmenter | undefined;\n\t\tif (!(lineData.isBasicASCII && viewLineOptions.useMonospaceOptimizations)) {\n\t\t\tcontentSegmenter = createContentSegmenter(lineData, viewLineOptions);\n\t\t}\n\n\t\tlet chars: string | undefined = '';\n\n\t\tlet resolvedStartColumn = 0;\n\t\tlet resolvedStartCssPixelOffset = 0;\n\t\tfor (let x = 0; x < startColumn - 1; x++) {\n\t\t\tif (lineData.isBasicASCII && viewLineOptions.useMonospaceOptimizations) {\n\t\t\t\tchars = content.charAt(x);\n\t\t\t} else {\n\t\t\t\tchars = contentSegmenter!.getSegmentAtIndex(x);\n\t\t\t\tif (chars === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedStartCssPixelOffset += (this._renderStrategy.value!.glyphRasterizer.getTextMetrics(chars).width / getActiveWindow().devicePixelRatio) - viewLineOptions.spaceWidth;\n\t\t\t}\n\t\t\tif (chars === '\\t') {\n\t\t\t\tresolvedStartColumn = CursorColumns.nextRenderTabStop(resolvedStartColumn, lineData.tabSize);\n\t\t\t} else {\n\t\t\t\tresolvedStartColumn++;\n\t\t\t}\n\t\t}\n\t\tlet resolvedEndColumn = resolvedStartColumn;\n\t\tlet resolvedEndCssPixelOffset = 0;\n\t\tfor (let x = startColumn - 1; x < endColumn - 1; x++) {\n\t\t\tif (lineData.isBasicASCII && viewLineOptions.useMonospaceOptimizations) {\n\t\t\t\tchars = content.charAt(x);\n\t\t\t} else {\n\t\t\t\tchars = contentSegmenter!.getSegmentAtIndex(x);\n\t\t\t\tif (chars === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tresolvedEndCssPixelOffset += (this._renderStrategy.value!.glyphRasterizer.getTextMetrics(chars).width / getActiveWindow().devicePixelRatio) - viewLineOptions.spaceWidth;\n\t\t\t}\n\t\t\tif (chars === '\\t') {\n\t\t\t\tresolvedEndColumn = CursorColumns.nextRenderTabStop(resolvedEndColumn, lineData.tabSize);\n\t\t\t} else {\n\t\t\t\tresolvedEndColumn++;\n\t\t\t}\n\t\t}\n\n\t\t// Visible horizontal range in _scaled_ pixels\n\t\tconst result = new VisibleRanges(false, [new FloatHorizontalRange(\n\t\t\tresolvedStartColumn * viewLineOptions.spaceWidth + resolvedStartCssPixelOffset,\n\t\t\t(resolvedEndColumn - resolvedStartColumn) * viewLineOptions.spaceWidth + resolvedEndCssPixelOffset)\n\t\t]);\n\n\t\treturn result;\n\t}\n\n\tvisibleRangeForPosition(position: Position): HorizontalPosition | null {\n\t\tconst visibleRanges = this._visibleRangesForLineRange(position.lineNumber, position.column, position.column);\n\t\tif (!visibleRanges) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new HorizontalPosition(visibleRanges.outsideRenderedLine, visibleRanges.ranges[0].left);\n\t}\n\n\tgetLineWidth(lineNumber: number): number | undefined {\n\t\tif (!this._lastViewportData || !this._lastViewLineOptions) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._viewGpuContext.canRender(this._lastViewLineOptions, this._lastViewportData, lineNumber)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst lineData = this._lastViewportData.getViewLineRenderingData(lineNumber);\n\t\tconst lineRange = this._visibleRangesForLineRange(lineNumber, 1, lineData.maxColumn);\n\t\tconst lastRange = lineRange?.ranges.at(-1);\n\t\tif (lastRange) {\n\t\t\treturn lastRange.width;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetPositionAtCoordinate(lineNumber: number, mouseContentHorizontalOffset: number): Position | undefined {\n\t\tif (!this._lastViewportData || !this._lastViewLineOptions) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._viewGpuContext.canRender(this._lastViewLineOptions, this._lastViewportData, lineNumber)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst lineData = this._lastViewportData.getViewLineRenderingData(lineNumber);\n\t\tconst content = lineData.content;\n\t\tconst dpr = getActiveWindow().devicePixelRatio;\n\t\tconst mouseContentHorizontalOffsetDevicePixels = mouseContentHorizontalOffset * dpr;\n\t\tconst spaceWidthDevicePixels = this._lastViewLineOptions.spaceWidth * dpr;\n\t\tconst contentSegmenter = createContentSegmenter(lineData, this._lastViewLineOptions);\n\n\t\tlet widthSoFar = 0;\n\t\tlet charWidth = 0;\n\t\tlet tabXOffset = 0;\n\t\tlet column = 0;\n\t\tfor (let x = 0; x < content.length; x++) {\n\t\t\tconst chars = contentSegmenter.getSegmentAtIndex(x);\n\n\t\t\t// Part of an earlier segment\n\t\t\tif (chars === undefined) {\n\t\t\t\tcolumn++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Get the width of the character\n\t\t\tif (chars === '\\t') {\n\t\t\t\t// Find the pixel offset between the current position and the next tab stop\n\t\t\t\tconst offsetBefore = x + tabXOffset;\n\t\t\t\ttabXOffset = CursorColumns.nextRenderTabStop(x + tabXOffset, lineData.tabSize);\n\t\t\t\tcharWidth = spaceWidthDevicePixels * (tabXOffset - offsetBefore);\n\t\t\t\t// Convert back to offset excluding x and the current character\n\t\t\t\ttabXOffset -= x + 1;\n\t\t\t} else if (lineData.isBasicASCII && this._lastViewLineOptions.useMonospaceOptimizations) {\n\t\t\t\tcharWidth = spaceWidthDevicePixels;\n\t\t\t} else {\n\t\t\t\tcharWidth = this._renderStrategy.value!.glyphRasterizer.getTextMetrics(chars).width;\n\t\t\t}\n\n\t\t\tif (mouseContentHorizontalOffsetDevicePixels < widthSoFar + charWidth / 2) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\twidthSoFar += charWidth;\n\t\t\tcolumn++;\n\t\t}\n\n\t\treturn new Position(lineNumber, column + 1);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8833, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulersGpu/rulersGpu.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulersGpu/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/rulersGpu/rulersGpu.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/rulersGpu/vs/editor/browser/viewParts/rulersGpu/rulersGpu.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { IObjectCollectionBufferEntry } from '../../gpu/objectCollectionBuffer.js';\nimport { RectangleRenderer, RectangleRendererEntrySpec } from '../../gpu/rectangleRenderer.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { editorRuler } from '../../../common/core/editorColorRegistry.js';\nimport { autorun, type IReader } from '../../../../base/common/observable.js';\n\n/**\n * Rulers are vertical lines that appear at certain columns in the editor. There can be >= 0 rulers\n * at a time.\n */\nexport class RulersGpu extends ViewPart {\n\n\tprivate readonly _gpuShapes: IObjectCollectionBufferEntry<RectangleRendererEntrySpec>[] = [];\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tprivate readonly _viewGpuContext: ViewGpuContext\n\t) {\n\t\tsuper(context);\n\t\tthis._register(autorun(reader => this._updateEntries(reader)));\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._updateEntries(undefined);\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\t// Rendering is handled by RectangleRenderer\n\t}\n\n\tprivate _updateEntries(reader: IReader | undefined) {\n\t\tconst options = this._context.configuration.options;\n\t\tconst rulers = options.get(EditorOption.rulers);\n\t\tconst typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tconst devicePixelRatio = this._viewGpuContext.devicePixelRatio.read(reader);\n\t\tfor (let i = 0, len = rulers.length; i < len; i++) {\n\t\t\tconst ruler = rulers[i];\n\t\t\tconst shape = this._gpuShapes[i];\n\t\t\tconst color = ruler.color ? Color.fromHex(ruler.color) : this._context.theme.getColor(editorRuler) ?? Color.white;\n\t\t\tconst rulerData: Parameters<RectangleRenderer['register']> = [\n\t\t\t\truler.column * typicalHalfwidthCharacterWidth * devicePixelRatio,\n\t\t\t\t0,\n\t\t\t\tMath.max(1, Math.ceil(devicePixelRatio)),\n\t\t\t\tNumber.MAX_SAFE_INTEGER,\n\t\t\t\tcolor.rgba.r / 255,\n\t\t\t\tcolor.rgba.g / 255,\n\t\t\t\tcolor.rgba.b / 255,\n\t\t\t\tcolor.rgba.a,\n\t\t\t];\n\t\t\tif (!shape) {\n\t\t\t\tthis._gpuShapes[i] = this._viewGpuContext.rectangleRenderer.register(...rulerData);\n\t\t\t} else {\n\t\t\t\tshape.setRaw(rulerData);\n\t\t\t}\n\t\t}\n\t\twhile (this._gpuShapes.length > rulers.length) {\n\t\t\tthis._gpuShapes.splice(-1, 1)[0].dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ViewPart } from '../../view/viewPart.js';\nimport { RenderingContext, RestrictedRenderingContext } from '../../view/renderingContext.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { IObjectCollectionBufferEntry } from '../../gpu/objectCollectionBuffer.js';\nimport { RectangleRenderer, RectangleRendererEntrySpec } from '../../gpu/rectangleRenderer.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { editorRuler } from '../../../common/core/editorColorRegistry.js';\nimport { autorun, type IReader } from '../../../../base/common/observable.js';\n\n/**\n * Rulers are vertical lines that appear at certain columns in the editor. There can be >= 0 rulers\n * at a time.\n */\nexport class RulersGpu extends ViewPart {\n\n\tprivate readonly _gpuShapes: IObjectCollectionBufferEntry<RectangleRendererEntrySpec>[] = [];\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\tprivate readonly _viewGpuContext: ViewGpuContext\n\t) {\n\t\tsuper(context);\n\t\tthis._register(autorun(reader => this._updateEntries(reader)));\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tthis._updateEntries(undefined);\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\t// Nothing to read\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\t// Rendering is handled by RectangleRenderer\n\t}\n\n\tprivate _updateEntries(reader: IReader | undefined) {\n\t\tconst options = this._context.configuration.options;\n\t\tconst rulers = options.get(EditorOption.rulers);\n\t\tconst typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tconst devicePixelRatio = this._viewGpuContext.devicePixelRatio.read(reader);\n\t\tfor (let i = 0, len = rulers.length; i < len; i++) {\n\t\t\tconst ruler = rulers[i];\n\t\t\tconst shape = this._gpuShapes[i];\n\t\t\tconst color = ruler.color ? Color.fromHex(ruler.color) : this._context.theme.getColor(editorRuler) ?? Color.white;\n\t\t\tconst rulerData: Parameters<RectangleRenderer['register']> = [\n\t\t\t\truler.column * typicalHalfwidthCharacterWidth * devicePixelRatio,\n\t\t\t\t0,\n\t\t\t\tMath.max(1, Math.ceil(devicePixelRatio)),\n\t\t\t\tNumber.MAX_SAFE_INTEGER,\n\t\t\t\tcolor.rgba.r / 255,\n\t\t\t\tcolor.rgba.g / 255,\n\t\t\t\tcolor.rgba.b / 255,\n\t\t\t\tcolor.rgba.a,\n\t\t\t];\n\t\t\tif (!shape) {\n\t\t\t\tthis._gpuShapes[i] = this._viewGpuContext.rectangleRenderer.register(...rulerData);\n\t\t\t} else {\n\t\t\t\tshape.setRaw(rulerData);\n\t\t\t}\n\t\t}\n\t\twhile (this._gpuShapes.length > rulers.length) {\n\t\t\tthis._gpuShapes.splice(-1, 1)[0].dispose();\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8902, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/gpuMark/gpuMark.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/gpuMark/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/viewParts/gpuMark/gpuMark.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/viewParts/gpuMark/vs/editor/browser/viewParts/gpuMark/gpuMark.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewLineOptions } from '../viewLines/viewLineOptions.js';\nimport './gpuMark.css';\n\n/**\n * A mark on lines to make identification of GPU-rendered lines vs DOM easier.\n */\nexport class GpuMarkOverlay extends DynamicViewOverlay {\n\n\tpublic static readonly CLASS_NAME = 'gpu-mark';\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext, private readonly _viewGpuContext: ViewGpuContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst viewportData = ctx.viewportData;\n\t\tconst options = new ViewLineOptions(this._context.configuration, this._context.theme.type);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst cannotRenderReasons = this._viewGpuContext.canRenderDetailed(options, viewportData, lineNumber);\n\t\t\toutput[lineIndex] = cannotRenderReasons.length ? `<div class=\"${GpuMarkOverlay.CLASS_NAME}\" title=\"Cannot render on GPU: ${cannotRenderReasons.join(', ')}\"></div>` : '';\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as viewEvents from '../../../common/viewEvents.js';\nimport { ViewContext } from '../../../common/viewModel/viewContext.js';\nimport { ViewGpuContext } from '../../gpu/viewGpuContext.js';\nimport { DynamicViewOverlay } from '../../view/dynamicViewOverlay.js';\nimport { RenderingContext } from '../../view/renderingContext.js';\nimport { ViewLineOptions } from '../viewLines/viewLineOptions.js';\nimport './gpuMark.css';\n\n/**\n * A mark on lines to make identification of GPU-rendered lines vs DOM easier.\n */\nexport class GpuMarkOverlay extends DynamicViewOverlay {\n\n\tpublic static readonly CLASS_NAME = 'gpu-mark';\n\n\tprivate readonly _context: ViewContext;\n\n\tprivate _renderResult: string[] | null;\n\n\tconstructor(context: ViewContext, private readonly _viewGpuContext: ViewGpuContext) {\n\t\tsuper();\n\t\tthis._context = context;\n\t\tthis._renderResult = null;\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tthis._renderResult = null;\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\treturn e.scrollTopChanged;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tconst visibleStartLineNumber = ctx.visibleRange.startLineNumber;\n\t\tconst visibleEndLineNumber = ctx.visibleRange.endLineNumber;\n\n\t\tconst viewportData = ctx.viewportData;\n\t\tconst options = new ViewLineOptions(this._context.configuration, this._context.theme.type);\n\n\t\tconst output: string[] = [];\n\t\tfor (let lineNumber = visibleStartLineNumber; lineNumber <= visibleEndLineNumber; lineNumber++) {\n\t\t\tconst lineIndex = lineNumber - visibleStartLineNumber;\n\t\t\tconst cannotRenderReasons = this._viewGpuContext.canRenderDetailed(options, viewportData, lineNumber);\n\t\t\toutput[lineIndex] = cannotRenderReasons.length ? `<div class=\"${GpuMarkOverlay.CLASS_NAME}\" title=\"Cannot render on GPU: ${cannotRenderReasons.join(', ')}\"></div>` : '';\n\t\t}\n\n\t\tthis._renderResult = output;\n\t}\n\n\tpublic render(startLineNumber: number, lineNumber: number): string {\n\t\tif (!this._renderResult) {\n\t\t\treturn '';\n\t\t}\n\t\tconst lineIndex = lineNumber - startLineNumber;\n\t\tif (lineIndex < 0 || lineIndex >= this._renderResult.length) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._renderResult[lineIndex];\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}