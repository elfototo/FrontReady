{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/liza/Desktop/FrontReady/src/app/qwestion/page.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { FaArrowRotateLeft } from \"react-icons/fa6\";\nimport questionsData from \"../data/qwestion.json\";\nimport { FaLink } from \"react-icons/fa\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { oneDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport Image from \"next/image\";\nimport ReactMarkdown from \"react-markdown\";\nimport { TbPointFilled } from \"react-icons/tb\";\nimport { MdNotificationImportant } from \"react-icons/md\";\n\ntype ContentBlock =\n  | { type: \"title\"; text: string }\n  | { type: \"paragraph\"; text: string }\n  | { type: \"mainParagraph\"; text: string }\n  | { type: \"list\"; items: string[] }\n  | { type: \"links\"; items: string[] }\n  | { type: \"code\"; code: string; language?: string }\n  | { type: string; [key: string]: unknown }\n  | { type: \"image\"; url: string }\n  | { type: \"table\"; headers: string[]; rows: string[][] };\n\ntype Question = {\n  id: number;\n  title: string;\n  content: ContentBlock[] | string;\n  [key: string]: unknown;\n};\n\nexport default function Qwestions() {\n  const questions: Question[] = questionsData;\n\n  return (\n    <div className=\"font-sans grid justify-items-center p-8 pb-20 gap-16 sm:p-20\">\n      <div className=\"flex justify-between\">\n        <h1 className=\"text-4xl\">Вопросы</h1>\n        <Link href={\"/\"}>\n          <div className=\"flex items-center gap-2\">\n            <FaArrowRotateLeft size={12} /> назад\n          </div>\n        </Link>\n      </div>\n\n      <div className=\"flex gap-6\">\n        <div className=\"w-[20%]\">\n          <h2 className=\"text-2xl\">Список</h2>\n          <ul className=\"list-disc list-inside\">\n            {questions.map((item) => (\n              <li\n                key={item.id}\n                className=\"flex items-center cursor-pointer text-gray-400  hover:text-black dark:hover:text-white py-2 border-t-1 solid border-gray-300\"\n              >\n                <a href={`#${item.title}`} className=\"flex items-center gap-2\">\n                  <h3>{item.title}</h3>\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"w-[80%]\">\n          {questions.map((item) => (\n            <div key={item.id} id={item.title} className=\"my-10\">\n              <h2 className=\"font-bold text-2xl\">\n                <ReactMarkdown\n                  components={{\n                    code({ children }) {\n                      return (\n                        <code className=\"bg-gray-100 dark:bg-gray-700 rounded text-sm p-1 font-bold\">\n                          {children}\n                        </code>\n                      );\n                    },\n                  }}\n                >\n                  {item.title}\n                </ReactMarkdown>\n              </h2>\n\n              {Array.isArray(item.content) &&\n                item.content.map((block, index) => {\n                  const key = `${item.id}-${block.type}-${index}`;\n\n                  switch (block.type) {\n                    case \"title\":\n                      return (\n                        <h3 key={key} className=\"my-4 font-bold underline\">\n                          <ReactMarkdown\n                            components={{\n                              code({ children }) {\n                                return (\n                                  <code className=\"bg-gray-100 dark:bg-gray-700 dark:text-gray-200 rounded text-sm p-1 font-bold\">\n                                    {children}\n                                  </code>\n                                );\n                              },\n                            }}\n                          >\n                            {(block as { text: string }).text}\n                          </ReactMarkdown>\n                        </h3>\n                      );\n\n                    case \"paragraph\":\n                      return (\n                        <h3 key={key} className=\"my-4\">\n                          <ReactMarkdown\n                            components={{\n                              code({ children }) {\n                                return (\n                                  <code className=\"bg-gray-100 dark:bg-gray-700 dark:text-gray-200 rounded text-sm p-1 font-bold\">\n                                    {children}\n                                  </code>\n                                );\n                              },\n                            }}\n                          >\n                            {(block as { text: string }).text}\n                          </ReactMarkdown>\n                        </h3>\n                      );\n\n                    case \"mainParagraph\":\n                      return (\n                        <h3\n                          key={key}\n                          className=\"my-4 border px-4 py-4 rounded-xl flex items-center\"\n                        >\n                          <div className=\"text-gray-200 pr-4\">\n                            <MdNotificationImportant size={40} />\n                          </div>\n                          <ReactMarkdown\n                            components={{\n                              code({ children }) {\n                                return (\n                                  <code className=\"bg-gray-100 dark:bg-gray-700 dark:text-gray-200 rounded text-sm p-1 font-bold\">\n                                    {children}\n                                  </code>\n                                );\n                              },\n                            }}\n                          >\n                            {(block as { text: string }).text}\n                          </ReactMarkdown>\n                        </h3>\n                      );\n\n                    case \"positive\":\n                      if (!(\"items\" in block) || !Array.isArray(block.items))\n                        return null;\n\n                      return (\n                        <ul\n                          key={key}\n                          className=\"my-4 ml-4  px-8 py-4 rounded-xl bg-green-50 dark:bg-green-950 dark:text-gray-200\"\n                        >\n                          {block.items.map((li, i) => (\n                            <li key={i} className=\"flex\">\n                              <div className=\"pt-[5px] pr-2 text-green-500\">\n                                <TbPointFilled size={12} />\n                              </div>\n\n                              <ReactMarkdown\n                                components={{\n                                  code({ children }) {\n                                    return (\n                                      <code className=\"bg-green-200 dark:bg-green-900  dark:text-gray-200 rounded text-sm p-1 font-bold\">\n                                        {children}\n                                      </code>\n                                    );\n                                  },\n                                }}\n                              >\n                                {li}\n                              </ReactMarkdown>\n                            </li>\n                          ))}\n                        </ul>\n                      );\n\n                    case \"negative\":\n                      if (!(\"items\" in block) || !Array.isArray(block.items))\n                        return null;\n\n                      return (\n                        <ul\n                          key={key}\n                          className=\"my-4 ml-4 px-8 py-4 rounded-xl bg-red-50 dark:bg-red-950\"\n                        >\n                          {block.items.map((li, i) => (\n                            <li key={i} className=\"flex\">\n                              <div className=\"pt-[5px] pr-2 text-red-500\">\n                                <TbPointFilled size={12} />\n                              </div>\n\n                              <ReactMarkdown\n                                components={{\n                                  code({ children }) {\n                                    return (\n                                      <code className=\"bg-red-200 dark:bg-red-900 rounded text-sm p-1 font-bold\">\n                                        {children}\n                                      </code>\n                                    );\n                                  },\n                                }}\n                              >\n                                {li}\n                              </ReactMarkdown>\n                            </li>\n                          ))}\n                        </ul>\n                      );\n\n                    case \"main\":\n                      if (!(\"items\" in block) || !Array.isArray(block.items))\n                        return null;\n\n                      return (\n                        <ul\n                          key={key}\n                          className=\"my-4 px-4 py-4 rounded-xl border flex items-center\"\n                        >\n                          <div className=\"text-gray-200 pr-2\">\n                            <MdNotificationImportant size={40} />\n                          </div>\n                          <div>\n                            {block.items.map((li, i) => (\n                              <li key={i} className=\"flex\">\n                                <div className=\"pt-[5px] pr-2 text-gray-400\">\n                                  <TbPointFilled size={12} />\n                                </div>\n                                <ReactMarkdown\n                                  components={{\n                                    code({ children }) {\n                                      return (\n                                        <code className=\"bg-gray-100 dark:bg-gray-700 rounded text-sm p-1 font-bold\">\n                                          {children}\n                                        </code>\n                                      );\n                                    },\n                                  }}\n                                >\n                                  {li}\n                                </ReactMarkdown>\n                              </li>\n                            ))}\n                          </div>\n                        </ul>\n                      );\n\n                    case \"list\":\n                      if (!(\"items\" in block) || !Array.isArray(block.items))\n                        return null;\n\n                      return (\n                        <ul\n                          key={key}\n                          className=\"my-4 ml-4 px-8 py-4 rounded-xl\"\n                        >\n                          {block.items.map((li, i) => (\n                            <li key={i} className=\"flex\">\n                              <div className=\"pt-[5px] pr-2 text-gray-500\">\n                                <TbPointFilled size={12} />\n                              </div>\n                              <ReactMarkdown\n                                components={{\n                                  code({ children }) {\n                                    return (\n                                      <code className=\"bg-gray-100 dark:bg-gray-700 rounded text-sm p-1 font-bold\">\n                                        {children}\n                                      </code>\n                                    );\n                                  },\n                                }}\n                              >\n                                {li}\n                              </ReactMarkdown>\n                            </li>\n                          ))}\n                        </ul>\n                      );\n\n                    case \"links\":\n                      if (!(\"items\" in block) || !Array.isArray(block.items))\n                        return null;\n\n                      return (\n                        <div\n                          key={key}\n                          className=\"my-4 mx-4 grid-cols-1 text-green-600\"\n                        >\n                          {block.items.map((link, i) => (\n                            <a\n                              key={i}\n                              href={link}\n                              target=\"_blank\"\n                              rel=\"noopen noreferrer\"\n                              className=\"flex gap-2 items-center hover:underline\"\n                            >\n                              <FaLink size={10} /> {link}\n                            </a>\n                          ))}\n                        </div>\n                      );\n\n                    case \"code\":\n                      if (!(\"code\" in block && typeof block.code === \"string\"))\n                        return null;\n                      return (\n                        <SyntaxHighlighter\n                          key={key}\n                          language=\"javascript\"\n                          style={oneDark}\n                          showLineNumbers\n                          customStyle={{ borderRadius: \"8px\", padding: \"12px\" }}\n                        >\n                          {block.code}\n                        </SyntaxHighlighter>\n                      );\n\n                    case \"image\":\n                      return (\n                        <Image\n                          key={key}\n                          src={(block as { url: string }).url}\n                          alt=\"\"\n                          width={1000}\n                          height={1000}\n                          className=\"w-[80%] h-full p-5 bg-white m-auto\"\n                        />\n                      );\n\n                    case \"table\":\n                      if (\n                        !(\"headers\" in block) ||\n                        !(\"rows\" in block) ||\n                        !Array.isArray(block.headers) ||\n                        !Array.isArray(block.rows)\n                      ) {\n                        return null;\n                      }\n                      return (\n                        <table\n                          key={key}\n                          className=\"my-6 border-collapse border bprder-gray-400 w-full \"\n                        >\n                          <thead className=\"bg-green-200\">\n                            <tr>\n                              {block.headers.map((header, i) => (\n                                <th\n                                  key={i}\n                                  className=\"border border-gray-400 px-4 py-2\"\n                                >\n                                  <ReactMarkdown\n                                    components={{\n                                      code({ children }) {\n                                        return (\n                                          <code className=\"bg-gray-100 dark:bg-gray-700 rounded text-sm p-1 font-bold\">\n                                            {children}\n                                          </code>\n                                        );\n                                      },\n                                    }}\n                                  >\n                                    {header}\n                                  </ReactMarkdown>\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {block.rows.map((row, i) => (\n                              <tr key={i}>\n                                {row.map((cell: string, j: number) => (\n                                  <td\n                                    key={j}\n                                    className=\"border border-gray-400 px-4 py-2\"\n                                  >\n                                    <ReactMarkdown\n                                      components={{\n                                        code({ children }) {\n                                          return (\n                                            <code className=\"bg-gray-100 dark:bg-gray-700 rounded text-sm p-1 font-bold\">\n                                              {children}\n                                            </code>\n                                          );\n                                        },\n                                      }}\n                                    >\n                                      {cell}\n                                    </ReactMarkdown>\n                                  </td>\n                                ))}\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      );\n\n                    default:\n                      return null;\n                  }\n                })}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}