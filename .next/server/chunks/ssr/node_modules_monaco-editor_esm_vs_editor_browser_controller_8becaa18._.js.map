{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/mouseTarget.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/vs/editor/browser/controller/mouseTarget.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPointerHandlerHelper } from './mouseHandler.js';\nimport { IMouseTargetContentEmptyData, IMouseTargetMarginData, IMouseTarget, IMouseTargetContentEmpty, IMouseTargetContentText, IMouseTargetContentWidget, IMouseTargetMargin, IMouseTargetOutsideEditor, IMouseTargetOverlayWidget, IMouseTargetScrollbar, IMouseTargetTextarea, IMouseTargetUnknown, IMouseTargetViewZone, IMouseTargetContentTextData, IMouseTargetViewZoneData, MouseTargetType } from '../editorBrowser.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorPagePosition, PageCoordinates, CoordinatesRelativeToEditor } from '../editorDom.js';\nimport { PartFingerprint, PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/viewLines/viewLine.js';\nimport { IViewCursorRenderData } from '../viewParts/viewCursors/viewCursor.js';\nimport { EditorLayoutInfo, EditorOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { HorizontalPosition } from '../view/renderingContext.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { IViewModel } from '../../common/viewModel.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations, Direction } from '../../common/cursor/cursorAtomicMoveOperations.js';\nimport { PositionAffinity, TextDirection } from '../../common/model.js';\nimport { InjectedText } from '../../common/modelLineProjectionData.js';\nimport { Mutable } from '../../../base/common/types.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { ViewLinesGpu } from '../viewParts/viewLinesGpu/viewLinesGpu.js';\n\nconst enum HitTestResultType {\n\tUnknown,\n\tContent,\n}\n\nclass UnknownHitTestResult {\n\treadonly type = HitTestResultType.Unknown;\n\tconstructor(\n\t\treadonly hitTarget: HTMLElement | null = null\n\t) { }\n}\n\nclass ContentHitTestResult {\n\treadonly type = HitTestResultType.Content;\n\n\tget hitTarget(): HTMLElement { return this.spanNode; }\n\n\tconstructor(\n\t\treadonly position: Position,\n\t\treadonly spanNode: HTMLElement,\n\t\treadonly injectedText: InjectedText | null,\n\t) { }\n}\n\ntype HitTestResult = UnknownHitTestResult | ContentHitTestResult;\n\nnamespace HitTestResult {\n\texport function createFromDOMInfo(ctx: HitTestContext, spanNode: HTMLElement, offset: number): HitTestResult {\n\t\tconst position = ctx.getPositionFromDOMInfo(spanNode, offset);\n\t\tif (position) {\n\t\t\treturn new ContentHitTestResult(position, spanNode, null);\n\t\t}\n\t\treturn new UnknownHitTestResult(spanNode);\n\t}\n}\n\nexport class PointerHandlerLastRenderData {\n\tconstructor(\n\t\tpublic readonly lastViewCursorsRenderData: IViewCursorRenderData[],\n\t\tpublic readonly lastTextareaPosition: Position | null\n\t) { }\n}\n\nexport class MouseTarget {\n\n\tprivate static _deduceRage(position: Position): EditorRange;\n\tprivate static _deduceRage(position: Position, range: EditorRange | null): EditorRange;\n\tprivate static _deduceRage(position: Position | null): EditorRange | null;\n\tprivate static _deduceRage(position: Position | null, range: EditorRange | null = null): EditorRange | null {\n\t\tif (!range && position) {\n\t\t\treturn new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t}\n\t\treturn range ?? null;\n\t}\n\tpublic static createUnknown(element: HTMLElement | null, mouseColumn: number, position: Position | null): IMouseTargetUnknown {\n\t\treturn { type: MouseTargetType.UNKNOWN, element, mouseColumn, position, range: this._deduceRage(position) };\n\t}\n\tpublic static createTextarea(element: HTMLElement | null, mouseColumn: number): IMouseTargetTextarea {\n\t\treturn { type: MouseTargetType.TEXTAREA, element, mouseColumn, position: null, range: null };\n\t}\n\tpublic static createMargin(type: MouseTargetType.GUTTER_GLYPH_MARGIN | MouseTargetType.GUTTER_LINE_NUMBERS | MouseTargetType.GUTTER_LINE_DECORATIONS, element: HTMLElement | null, mouseColumn: number, position: Position, range: EditorRange, detail: IMouseTargetMarginData): IMouseTargetMargin {\n\t\treturn { type, element, mouseColumn, position, range, detail };\n\t}\n\tpublic static createViewZone(type: MouseTargetType.GUTTER_VIEW_ZONE | MouseTargetType.CONTENT_VIEW_ZONE, element: HTMLElement | null, mouseColumn: number, position: Position, detail: IMouseTargetViewZoneData): IMouseTargetViewZone {\n\t\treturn { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n\t}\n\tpublic static createContentText(element: HTMLElement | null, mouseColumn: number, position: Position, range: EditorRange | null, detail: IMouseTargetContentTextData): IMouseTargetContentText {\n\t\treturn { type: MouseTargetType.CONTENT_TEXT, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n\t}\n\tpublic static createContentEmpty(element: HTMLElement | null, mouseColumn: number, position: Position, detail: IMouseTargetContentEmptyData): IMouseTargetContentEmpty {\n\t\treturn { type: MouseTargetType.CONTENT_EMPTY, element, mouseColumn, position, range: this._deduceRage(position), detail };\n\t}\n\tpublic static createContentWidget(element: HTMLElement | null, mouseColumn: number, detail: string): IMouseTargetContentWidget {\n\t\treturn { type: MouseTargetType.CONTENT_WIDGET, element, mouseColumn, position: null, range: null, detail };\n\t}\n\tpublic static createScrollbar(element: HTMLElement | null, mouseColumn: number, position: Position): IMouseTargetScrollbar {\n\t\treturn { type: MouseTargetType.SCROLLBAR, element, mouseColumn, position, range: this._deduceRage(position) };\n\t}\n\tpublic static createOverlayWidget(element: HTMLElement | null, mouseColumn: number, detail: string): IMouseTargetOverlayWidget {\n\t\treturn { type: MouseTargetType.OVERLAY_WIDGET, element, mouseColumn, position: null, range: null, detail };\n\t}\n\tpublic static createOutsideEditor(mouseColumn: number, position: Position, outsidePosition: 'above' | 'below' | 'left' | 'right', outsideDistance: number): IMouseTargetOutsideEditor {\n\t\treturn { type: MouseTargetType.OUTSIDE_EDITOR, element: null, mouseColumn, position, range: this._deduceRage(position), outsidePosition, outsideDistance };\n\t}\n\n\tprivate static _typeToString(type: MouseTargetType): string {\n\t\tif (type === MouseTargetType.TEXTAREA) {\n\t\t\treturn 'TEXTAREA';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\treturn 'GUTTER_GLYPH_MARGIN';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_LINE_NUMBERS) {\n\t\t\treturn 'GUTTER_LINE_NUMBERS';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn 'GUTTER_LINE_DECORATIONS';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_VIEW_ZONE) {\n\t\t\treturn 'GUTTER_VIEW_ZONE';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn 'CONTENT_TEXT';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\treturn 'CONTENT_EMPTY';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\treturn 'CONTENT_VIEW_ZONE';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_WIDGET) {\n\t\t\treturn 'CONTENT_WIDGET';\n\t\t}\n\t\tif (type === MouseTargetType.OVERVIEW_RULER) {\n\t\t\treturn 'OVERVIEW_RULER';\n\t\t}\n\t\tif (type === MouseTargetType.SCROLLBAR) {\n\t\t\treturn 'SCROLLBAR';\n\t\t}\n\t\tif (type === MouseTargetType.OVERLAY_WIDGET) {\n\t\t\treturn 'OVERLAY_WIDGET';\n\t\t}\n\t\treturn 'UNKNOWN';\n\t}\n\n\tpublic static toString(target: IMouseTarget): string {\n\t\treturn this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify((<any>target).detail);\n\t}\n}\n\nclass ElementPath {\n\n\tpublic static isTextArea(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length === 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.TextArea\n\t\t);\n\t}\n\n\tpublic static isChildOfViewLines(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ViewLines\n\t\t);\n\t}\n\n\tpublic static isStrictChildOfViewLines(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length > 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ViewLines\n\t\t);\n\t}\n\n\tpublic static isChildOfScrollableElement(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.ScrollableElement\n\t\t);\n\t}\n\n\tpublic static isChildOfMinimap(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.Minimap\n\t\t);\n\t}\n\n\tpublic static isChildOfContentWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ContentWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowGuard(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowingContentWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowingContentWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverlayWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.OverlayWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowingOverlayWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowingOverlayWidgets\n\t\t);\n\t}\n}\n\nexport class HitTestContext {\n\n\tpublic readonly viewModel: IViewModel;\n\tpublic readonly layoutInfo: EditorLayoutInfo;\n\tpublic readonly viewDomNode: HTMLElement;\n\tpublic readonly viewLinesGpu: ViewLinesGpu | undefined;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stickyTabStops: boolean;\n\tpublic readonly typicalHalfwidthCharacterWidth: number;\n\tpublic readonly lastRenderData: PointerHandlerLastRenderData;\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\n\tconstructor(context: ViewContext, viewHelper: IPointerHandlerHelper, lastRenderData: PointerHandlerLastRenderData) {\n\t\tthis.viewModel = context.viewModel;\n\t\tconst options = context.configuration.options;\n\t\tthis.layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis.viewDomNode = viewHelper.viewDomNode;\n\t\tthis.viewLinesGpu = viewHelper.viewLinesGpu;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stickyTabStops = options.get(EditorOption.stickyTabStops);\n\t\tthis.typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis.lastRenderData = lastRenderData;\n\t\tthis._context = context;\n\t\tthis._viewHelper = viewHelper;\n\t}\n\n\tpublic getZoneAtCoord(mouseVerticalOffset: number): IMouseTargetViewZoneData | null {\n\t\treturn HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n\t}\n\n\tpublic static getZoneAtCoord(context: ViewContext, mouseVerticalOffset: number): IMouseTargetViewZoneData | null {\n\t\t// The target is either a view zone or the empty space after the last view-line\n\t\tconst viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n\n\t\tif (viewZoneWhitespace) {\n\t\t\tconst viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n\t\t\tconst lineCount = context.viewModel.getLineCount();\n\t\t\tlet positionBefore: Position | null = null;\n\t\t\tlet position: Position | null;\n\t\t\tlet positionAfter: Position | null = null;\n\n\t\t\tif (viewZoneWhitespace.afterLineNumber !== lineCount) {\n\t\t\t\t// There are more lines after this view zone\n\t\t\t\tpositionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n\t\t\t}\n\t\t\tif (viewZoneWhitespace.afterLineNumber > 0) {\n\t\t\t\t// There are more lines above this view zone\n\t\t\t\tpositionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n\t\t\t}\n\n\t\t\tif (positionAfter === null) {\n\t\t\t\tposition = positionBefore;\n\t\t\t} else if (positionBefore === null) {\n\t\t\t\tposition = positionAfter;\n\t\t\t} else if (mouseVerticalOffset < viewZoneMiddle) {\n\t\t\t\tposition = positionBefore;\n\t\t\t} else {\n\t\t\t\tposition = positionAfter;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tviewZoneId: viewZoneWhitespace.id,\n\t\t\t\tafterLineNumber: viewZoneWhitespace.afterLineNumber,\n\t\t\t\tpositionBefore: positionBefore,\n\t\t\t\tpositionAfter: positionAfter,\n\t\t\t\tposition: position!\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getFullLineRangeAtCoord(mouseVerticalOffset: number): { range: EditorRange; isAfterLines: boolean } {\n\t\tif (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n\t\t\t// Below the last line\n\t\t\tconst lineNumber = this._context.viewModel.getLineCount();\n\t\t\tconst maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n\t\t\treturn {\n\t\t\t\trange: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n\t\t\t\tisAfterLines: true\n\t\t\t};\n\t\t}\n\n\t\tconst lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\t\tconst maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n\t\treturn {\n\t\t\trange: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n\t\t\tisAfterLines: false\n\t\t};\n\t}\n\n\tpublic getLineNumberAtVerticalOffset(mouseVerticalOffset: number): number {\n\t\treturn this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\t}\n\n\tpublic isAfterLines(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n\t}\n\n\tpublic isInTopPadding(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n\t}\n\n\tpublic isInBottomPadding(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n\t}\n\n\tpublic getVerticalOffsetForLineNumber(lineNumber: number): number {\n\t\treturn this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n\t}\n\n\tpublic findAttribute(element: Element, attr: string): string | null {\n\t\treturn HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n\t}\n\n\tprivate static _findAttribute(element: Element, attr: string, stopAt: Element): string | null {\n\t\twhile (element && element !== element.ownerDocument.body) {\n\t\t\tif (element.hasAttribute && element.hasAttribute(attr)) {\n\t\t\t\treturn element.getAttribute(attr);\n\t\t\t}\n\t\t\tif (element === stopAt) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telement = <Element>element.parentNode;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getLineWidth(lineNumber: number): number {\n\t\treturn this._viewHelper.getLineWidth(lineNumber);\n\t}\n\n\tpublic isRtl(lineNumber: number): boolean {\n\t\treturn this.viewModel.getTextDirection(lineNumber) === TextDirection.RTL;\n\n\t}\n\n\tpublic visibleRangeForPosition(lineNumber: number, column: number): HorizontalPosition | null {\n\t\treturn this._viewHelper.visibleRangeForPosition(lineNumber, column);\n\t}\n\n\tpublic getPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null {\n\t\treturn this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n\t}\n\n\tpublic getCurrentScrollTop(): number {\n\t\treturn this._context.viewLayout.getCurrentScrollTop();\n\t}\n\n\tpublic getCurrentScrollLeft(): number {\n\t\treturn this._context.viewLayout.getCurrentScrollLeft();\n\t}\n}\n\nabstract class BareHitTestRequest {\n\n\tpublic readonly editorPos: EditorPagePosition;\n\tpublic readonly pos: PageCoordinates;\n\tpublic readonly relativePos: CoordinatesRelativeToEditor;\n\tpublic readonly mouseVerticalOffset: number;\n\tpublic readonly isInMarginArea: boolean;\n\tpublic readonly isInContentArea: boolean;\n\tpublic readonly mouseContentHorizontalOffset: number;\n\n\tprotected readonly mouseColumn: number;\n\n\tconstructor(ctx: HitTestContext, editorPos: EditorPagePosition, pos: PageCoordinates, relativePos: CoordinatesRelativeToEditor) {\n\t\tthis.editorPos = editorPos;\n\t\tthis.pos = pos;\n\t\tthis.relativePos = relativePos;\n\n\t\tthis.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n\t\tthis.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n\t\tthis.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n\t\tthis.isInContentArea = !this.isInMarginArea;\n\t\tthis.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n\t}\n}\n\nclass HitTestRequest extends BareHitTestRequest {\n\tprivate readonly _ctx: HitTestContext;\n\tprivate readonly _eventTarget: HTMLElement | null;\n\tpublic readonly hitTestResult = new Lazy(() => MouseTargetFactory.doHitTest(this._ctx, this));\n\tprivate _useHitTestTarget: boolean;\n\tprivate _targetPathCacheElement: HTMLElement | null = null;\n\tprivate _targetPathCacheValue: Uint8Array = new Uint8Array(0);\n\n\tpublic get target(): HTMLElement | null {\n\t\tif (this._useHitTestTarget) {\n\t\t\treturn this.hitTestResult.value.hitTarget;\n\t\t}\n\t\treturn this._eventTarget;\n\t}\n\n\tpublic get targetPath(): Uint8Array {\n\t\tif (this._targetPathCacheElement !== this.target) {\n\t\t\tthis._targetPathCacheElement = this.target;\n\t\t\tthis._targetPathCacheValue = PartFingerprints.collect(this.target, this._ctx.viewDomNode);\n\t\t}\n\t\treturn this._targetPathCacheValue;\n\t}\n\n\tconstructor(ctx: HitTestContext, editorPos: EditorPagePosition, pos: PageCoordinates, relativePos: CoordinatesRelativeToEditor, eventTarget: HTMLElement | null) {\n\t\tsuper(ctx, editorPos, pos, relativePos);\n\t\tthis._ctx = ctx;\n\t\tthis._eventTarget = eventTarget;\n\n\t\t// If no event target is passed in, we will use the hit test target\n\t\tconst hasEventTarget = Boolean(this._eventTarget);\n\t\tthis._useHitTestTarget = !hasEventTarget;\n\t}\n\n\tpublic override toString(): string {\n\t\treturn `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? (<HTMLElement>this.target).outerHTML : null}`;\n\t}\n\n\tpublic get wouldBenefitFromHitTestTargetSwitch(): boolean {\n\t\treturn (\n\t\t\t!this._useHitTestTarget\n\t\t\t&& this.hitTestResult.value.hitTarget !== null\n\t\t\t&& this.target !== this.hitTestResult.value.hitTarget\n\t\t);\n\t}\n\n\tpublic switchToHitTestTarget(): void {\n\t\tthis._useHitTestTarget = true;\n\t}\n\n\tprivate _getMouseColumn(position: Position | null = null): number {\n\t\tif (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n\t\t\t// Most likely, the line contains foreign decorations...\n\t\t\treturn CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n\t\t}\n\t\treturn this.mouseColumn;\n\t}\n\n\tpublic fulfillUnknown(position: Position | null = null): IMouseTargetUnknown {\n\t\treturn MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n\t}\n\tpublic fulfillTextarea(): IMouseTargetTextarea {\n\t\treturn MouseTarget.createTextarea(this.target, this._getMouseColumn());\n\t}\n\tpublic fulfillMargin(type: MouseTargetType.GUTTER_GLYPH_MARGIN | MouseTargetType.GUTTER_LINE_NUMBERS | MouseTargetType.GUTTER_LINE_DECORATIONS, position: Position, range: EditorRange, detail: IMouseTargetMarginData): IMouseTargetMargin {\n\t\treturn MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n\t}\n\tpublic fulfillViewZone(type: MouseTargetType.GUTTER_VIEW_ZONE | MouseTargetType.CONTENT_VIEW_ZONE, position: Position, detail: IMouseTargetViewZoneData): IMouseTargetViewZone {\n\t\treturn MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n\t}\n\tpublic fulfillContentText(position: Position, range: EditorRange | null, detail: IMouseTargetContentTextData): IMouseTargetContentText {\n\t\treturn MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n\t}\n\tpublic fulfillContentEmpty(position: Position, detail: IMouseTargetContentEmptyData): IMouseTargetContentEmpty {\n\t\treturn MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n\t}\n\tpublic fulfillContentWidget(detail: string): IMouseTargetContentWidget {\n\t\treturn MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n\t}\n\tpublic fulfillScrollbar(position: Position): IMouseTargetScrollbar {\n\t\treturn MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n\t}\n\tpublic fulfillOverlayWidget(detail: string): IMouseTargetOverlayWidget {\n\t\treturn MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n\t}\n}\n\ninterface ResolvedHitTestRequest extends HitTestRequest {\n\treadonly target: HTMLElement;\n}\n\nconst EMPTY_CONTENT_AFTER_LINES: IMouseTargetContentEmptyData = { isAfterLines: true };\n\nfunction createEmptyContentDataInLines(horizontalDistanceToText: number): IMouseTargetContentEmptyData {\n\treturn {\n\t\tisAfterLines: false,\n\t\thorizontalDistanceToText: horizontalDistanceToText\n\t};\n}\n\nexport class MouseTargetFactory {\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\n\tconstructor(context: ViewContext, viewHelper: IPointerHandlerHelper) {\n\t\tthis._context = context;\n\t\tthis._viewHelper = viewHelper;\n\t}\n\n\tpublic mouseTargetIsWidget(e: EditorMouseEvent): boolean {\n\t\tconst t = <Element>e.target;\n\t\tconst path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n\n\t\t// Is it a content widget?\n\t\tif (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Is it an overlay widget?\n\t\tif (ElementPath.isChildOfOverlayWidgets(path) || ElementPath.isChildOfOverflowingOverlayWidgets(path)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic createMouseTarget(lastRenderData: PointerHandlerLastRenderData, editorPos: EditorPagePosition, pos: PageCoordinates, relativePos: CoordinatesRelativeToEditor, target: HTMLElement | null): IMouseTarget {\n\t\tconst ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n\t\tconst request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n\t\ttry {\n\t\t\tconst r = MouseTargetFactory._createMouseTarget(ctx, request);\n\n\t\t\tif (r.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t\t// Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n\t\t\t\tif (ctx.stickyTabStops && r.position !== null) {\n\t\t\t\t\tconst position = MouseTargetFactory._snapToSoftTabBoundary(r.position, ctx.viewModel);\n\t\t\t\t\tconst range = EditorRange.fromPositions(position, position).plusRange(r.range);\n\t\t\t\t\treturn request.fulfillContentText(position, range, r.detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log(MouseTarget.toString(r));\n\t\t\treturn r;\n\t\t} catch (err) {\n\t\t\t// console.log(err);\n\t\t\treturn request.fulfillUnknown();\n\t\t}\n\t}\n\n\tprivate static _createMouseTarget(ctx: HitTestContext, request: HitTestRequest): IMouseTarget {\n\n\t\t// console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n\n\t\tif (request.target === null) {\n\t\t\t// No target\n\t\t\treturn request.fulfillUnknown();\n\t\t}\n\n\t\t// we know for a fact that request.target is not null\n\t\tconst resolvedRequest = <ResolvedHitTestRequest>request;\n\n\t\tlet result: IMouseTarget | null = null;\n\n\t\tif (!ElementPath.isChildOfOverflowGuard(request.targetPath) && !ElementPath.isChildOfOverflowingContentWidgets(request.targetPath) && !ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n\t\t\t// We only render dom nodes inside the overflow guard or in the overflowing content widgets\n\t\t\tresult = result || request.fulfillUnknown();\n\t\t}\n\n\t\tresult = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n\n\t\treturn (result || request.fulfillUnknown());\n\t}\n\n\tprivate static _hitTestContentWidget(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it a content widget?\n\t\tif (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n\t\t\tconst widgetId = ctx.findAttribute(request.target, 'widgetId');\n\t\t\tif (widgetId) {\n\t\t\t\treturn request.fulfillContentWidget(widgetId);\n\t\t\t} else {\n\t\t\t\treturn request.fulfillUnknown();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestOverlayWidget(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it an overlay widget?\n\t\tif (ElementPath.isChildOfOverlayWidgets(request.targetPath) || ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n\t\t\tconst widgetId = ctx.findAttribute(request.target, 'widgetId');\n\t\t\tif (widgetId) {\n\t\t\t\treturn request.fulfillOverlayWidget(widgetId);\n\t\t\t} else {\n\t\t\t\treturn request.fulfillUnknown();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewCursor(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\n\t\tif (request.target) {\n\t\t\t// Check if we've hit a painted cursor\n\t\t\tconst lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\n\t\t\tfor (const d of lastViewCursorsRenderData) {\n\n\t\t\t\tif (request.target === d.domNode) {\n\t\t\t\t\treturn request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (request.isInContentArea) {\n\t\t\t// Edge has a bug when hit-testing the exact position of a cursor,\n\t\t\t// instead of returning the correct dom node, it returns the\n\t\t\t// first or last rendered view line dom node, therefore help it out\n\t\t\t// and first check if we are on top of a cursor\n\n\t\t\tconst lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\t\t\tconst mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n\t\t\tconst mouseVerticalOffset = request.mouseVerticalOffset;\n\n\t\t\tfor (const d of lastViewCursorsRenderData) {\n\n\t\t\t\tif (mouseContentHorizontalOffset < d.contentLeft) {\n\t\t\t\t\t// mouse position is to the left of the cursor\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n\t\t\t\t\t// mouse position is to the right of the cursor\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n\n\t\t\t\tif (\n\t\t\t\t\tcursorVerticalOffset <= mouseVerticalOffset\n\t\t\t\t\t&& mouseVerticalOffset <= cursorVerticalOffset + d.height\n\t\t\t\t) {\n\t\t\t\t\treturn request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewZone(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tconst viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n\t\tif (viewZoneData) {\n\t\t\tconst mouseTargetType = (request.isInContentArea ? MouseTargetType.CONTENT_VIEW_ZONE : MouseTargetType.GUTTER_VIEW_ZONE);\n\t\t\treturn request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestTextArea(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it the textarea?\n\t\tif (ElementPath.isTextArea(request.targetPath)) {\n\t\t\tif (ctx.lastRenderData.lastTextareaPosition) {\n\t\t\t\treturn request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n\t\t\t}\n\t\t\treturn request.fulfillTextarea();\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestMargin(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (request.isInMarginArea) {\n\t\t\tconst res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n\t\t\tconst pos = res.range.getStartPosition();\n\t\t\tlet offset = Math.abs(request.relativePos.x);\n\t\t\tconst detail: Mutable<IMouseTargetMarginData> = {\n\t\t\t\tisAfterLines: res.isAfterLines,\n\t\t\t\tglyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n\t\t\t\tglyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n\t\t\t\tlineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n\t\t\t\toffsetX: offset\n\t\t\t};\n\n\t\t\toffset -= ctx.layoutInfo.glyphMarginLeft;\n\n\t\t\tif (offset <= ctx.layoutInfo.glyphMarginWidth) {\n\t\t\t\t// On the glyph margin\n\t\t\t\tconst modelCoordinate = ctx.viewModel.coordinatesConverter.convertViewPositionToModelPosition(res.range.getStartPosition());\n\t\t\t\tconst lanes = ctx.viewModel.glyphLanes.getLanesAtLine(modelCoordinate.lineNumber);\n\t\t\t\tdetail.glyphMarginLane = lanes[Math.floor(offset / ctx.lineHeight)];\n\t\t\t\treturn request.fulfillMargin(MouseTargetType.GUTTER_GLYPH_MARGIN, pos, res.range, detail);\n\t\t\t}\n\t\t\toffset -= ctx.layoutInfo.glyphMarginWidth;\n\n\t\t\tif (offset <= ctx.layoutInfo.lineNumbersWidth) {\n\t\t\t\t// On the line numbers\n\t\t\t\treturn request.fulfillMargin(MouseTargetType.GUTTER_LINE_NUMBERS, pos, res.range, detail);\n\t\t\t}\n\t\t\toffset -= ctx.layoutInfo.lineNumbersWidth;\n\n\t\t\t// On the line decorations\n\t\t\treturn request.fulfillMargin(MouseTargetType.GUTTER_LINE_DECORATIONS, pos, res.range, detail);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewLines(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (!ElementPath.isChildOfViewLines(request.targetPath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n\t\t\treturn request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n\t\t}\n\n\t\t// Check if it is below any lines and any view zones\n\t\tif (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n\t\t\t// This most likely indicates it happened after the last view-line\n\t\t\tconst lineCount = ctx.viewModel.getLineCount();\n\t\t\tconst maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n\t\t\treturn request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n\t\t}\n\n\t\t// Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n\t\t// See https://github.com/microsoft/vscode/issues/46942\n\t\tif (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n\t\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst lineLength = ctx.viewModel.getLineLength(lineNumber);\n\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\tif (lineLength === 0) {\n\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\treturn request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n\t\t\t}\n\n\t\t\tconst isRtl = ctx.isRtl(lineNumber);\n\t\t\tif (isRtl) {\n\t\t\t\tif (request.mouseContentHorizontalOffset + lineWidth <= ctx.layoutInfo.contentWidth - ctx.layoutInfo.verticalScrollbarWidth) {\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t\t}\n\t\t\t} else if (request.mouseContentHorizontalOffset >= lineWidth) {\n\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ctx.viewLinesGpu) {\n\t\t\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\t\tif (ctx.viewModel.getLineLength(lineNumber) === 0) {\n\t\t\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\treturn request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n\t\t\t\t}\n\n\t\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\t\tconst isRtl = ctx.isRtl(lineNumber);\n\t\t\t\tif (isRtl) {\n\t\t\t\t\tif (request.mouseContentHorizontalOffset + lineWidth <= ctx.layoutInfo.contentWidth - ctx.layoutInfo.verticalScrollbarWidth) {\n\t\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t\t\t}\n\t\t\t\t} else if (request.mouseContentHorizontalOffset >= lineWidth) {\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t\t}\n\n\t\t\t\tconst position = ctx.viewLinesGpu.getPositionAtCoordinate(lineNumber, request.mouseContentHorizontalOffset);\n\t\t\t\tif (position) {\n\t\t\t\t\tconst detail: IMouseTargetContentTextData = {\n\t\t\t\t\t\tinjectedText: null,\n\t\t\t\t\t\tmightBeForeignElement: false\n\t\t\t\t\t};\n\t\t\t\t\treturn request.fulfillContentText(position, EditorRange.fromPositions(position, position), detail);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Do the hit test (if not already done)\n\t\tconst hitTestResult = request.hitTestResult.value;\n\n\t\tif (hitTestResult.type === HitTestResultType.Content) {\n\t\t\treturn MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n\t\t}\n\n\t\t// We didn't hit content...\n\t\tif (request.wouldBenefitFromHitTestTargetSwitch) {\n\t\t\t// We actually hit something different... Give it one last change by trying again with this new target\n\t\t\trequest.switchToHitTestTarget();\n\t\t\treturn this._createMouseTarget(ctx, request);\n\t\t}\n\n\t\t// We have tried everything...\n\t\treturn request.fulfillUnknown();\n\t}\n\n\tprivate static _hitTestMinimap(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (ElementPath.isChildOfMinimap(request.targetPath)) {\n\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n\t\t\treturn request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestScrollbarSlider(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n\t\t\tif (request.target && request.target.nodeType === 1) {\n\t\t\t\tconst className = request.target.className;\n\t\t\t\tif (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n\t\t\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\t\t\tconst maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n\t\t\t\t\treturn request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestScrollbar(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it the overview ruler?\n\t\t// Is it a child of the scrollable element?\n\t\tif (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n\t\t\treturn request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getMouseColumn(relativePos: CoordinatesRelativeToEditor): number {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n\t\treturn MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth);\n\t}\n\n\tpublic static _getMouseColumn(mouseContentHorizontalOffset: number, typicalHalfwidthCharacterWidth: number): number {\n\t\tif (mouseContentHorizontalOffset < 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n\t\treturn (chars + 1);\n\t}\n\n\tprivate static createMouseTargetFromHitTestPosition(ctx: HitTestContext, request: HitTestRequest, spanNode: HTMLElement, pos: Position, injectedText: InjectedText | null): IMouseTarget {\n\t\tconst lineNumber = pos.lineNumber;\n\t\tconst column = pos.column;\n\n\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\n\t\tif (request.mouseContentHorizontalOffset > lineWidth) {\n\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t}\n\n\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n\n\t\tif (!visibleRange) {\n\t\t\treturn request.fulfillUnknown(pos);\n\t\t}\n\n\t\tconst columnHorizontalOffset = visibleRange.left;\n\n\t\tif (Math.abs(request.mouseContentHorizontalOffset - columnHorizontalOffset) < 1) {\n\t\t\treturn request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n\t\t}\n\n\t\t// Let's define a, b, c and check if the offset is in between them...\n\t\tinterface OffsetColumn { offset: number; column: number }\n\n\t\tconst points: OffsetColumn[] = [];\n\t\tpoints.push({ offset: visibleRange.left, column: column });\n\t\tif (column > 1) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n\t\t\tif (visibleRange) {\n\t\t\t\tpoints.push({ offset: visibleRange.left, column: column - 1 });\n\t\t\t}\n\t\t}\n\t\tconst lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n\t\tif (column < lineMaxColumn) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n\t\t\tif (visibleRange) {\n\t\t\t\tpoints.push({ offset: visibleRange.left, column: column + 1 });\n\t\t\t}\n\t\t}\n\n\t\tpoints.sort((a, b) => a.offset - b.offset);\n\n\t\tconst mouseCoordinates = request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode));\n\t\tconst spanNodeClientRect = spanNode.getBoundingClientRect();\n\t\tconst mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n\n\t\tlet rng: EditorRange | null = null;\n\n\t\tfor (let i = 1; i < points.length; i++) {\n\t\t\tconst prev = points[i - 1];\n\t\t\tconst curr = points[i];\n\t\t\tif (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n\t\t\t\trng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/152819\n\t\t\t\t// Due to the use of zwj, the browser's hit test result is skewed towards the left\n\t\t\t\t// Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n\n\t\t\t\tconst prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n\t\t\t\tconst nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n\n\t\t\t\tpos = (\n\t\t\t\t\tprevDelta < nextDelta\n\t\t\t\t\t\t? new Position(lineNumber, prev.column)\n\t\t\t\t\t\t: new Position(lineNumber, curr.column)\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn request.fulfillContentText(pos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n\t}\n\n\t/**\n\t * Most probably WebKit browsers and Edge\n\t */\n\tprivate static _doHitTestWithCaretRangeFromPoint(ctx: HitTestContext, request: BareHitTestRequest): HitTestResult {\n\n\t\t// In Chrome, especially on Linux it is possible to click between lines,\n\t\t// so try to adjust the `hity` below so that it lands in the center of a line\n\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\tconst lineStartVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n\t\tconst lineEndVerticalOffset = lineStartVerticalOffset + ctx.lineHeight;\n\n\t\tconst isBelowLastLine = (\n\t\t\tlineNumber === ctx.viewModel.getLineCount()\n\t\t\t&& request.mouseVerticalOffset > lineEndVerticalOffset\n\t\t);\n\n\t\tif (!isBelowLastLine) {\n\t\t\tconst lineCenteredVerticalOffset = Math.floor((lineStartVerticalOffset + lineEndVerticalOffset) / 2);\n\t\t\tlet adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n\n\t\t\tif (adjustedPageY <= request.editorPos.y) {\n\t\t\t\tadjustedPageY = request.editorPos.y + 1;\n\t\t\t}\n\t\t\tif (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n\t\t\t\tadjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n\t\t\t}\n\n\t\t\tconst adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n\n\t\t\tconst r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n\t\t\tif (r.type === HitTestResultType.Content) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\t// Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n\t\treturn this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n\t}\n\n\tprivate static _actualDoHitTestWithCaretRangeFromPoint(ctx: HitTestContext, coords: ClientCoordinates): HitTestResult {\n\t\tconst shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n\t\tlet range: Range;\n\t\tif (shadowRoot) {\n\t\t\tif (typeof (<any>shadowRoot).caretRangeFromPoint === 'undefined') {\n\t\t\t\trange = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n\t\t\t} else {\n\t\t\t\trange = (<any>shadowRoot).caretRangeFromPoint(coords.clientX, coords.clientY);\n\t\t\t}\n\t\t} else {\n\t\t\trange = (<any>ctx.viewDomNode.ownerDocument).caretRangeFromPoint(coords.clientX, coords.clientY);\n\t\t}\n\n\t\tif (!range || !range.startContainer) {\n\t\t\treturn new UnknownHitTestResult();\n\t\t}\n\n\t\t// Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n\t\tconst startContainer = range.startContainer;\n\n\t\tif (startContainer.nodeType === startContainer.TEXT_NODE) {\n\t\t\t// startContainer is expected to be the token text\n\t\t\tconst parent1 = startContainer.parentNode; // expected to be the token span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\t\t\tconst parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\t\t\tconst parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? (<HTMLElement>parent3).className : null;\n\n\t\t\tif (parent3ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>parent1, range.startOffset);\n\t\t\t} else {\n\t\t\t\treturn new UnknownHitTestResult(<HTMLElement>startContainer.parentNode);\n\t\t\t}\n\t\t} else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n\t\t\t// startContainer is expected to be the token span\n\t\t\tconst parent1 = startContainer.parentNode; // expected to be the view line container span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n\t\t\tconst parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? (<HTMLElement>parent2).className : null;\n\n\t\t\tif (parent2ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>startContainer, (<HTMLElement>startContainer).textContent!.length);\n\t\t\t} else {\n\t\t\t\treturn new UnknownHitTestResult(<HTMLElement>startContainer);\n\t\t\t}\n\t\t}\n\n\t\treturn new UnknownHitTestResult();\n\t}\n\n\t/**\n\t * Most probably Gecko\n\t */\n\tprivate static _doHitTestWithCaretPositionFromPoint(ctx: HitTestContext, coords: ClientCoordinates): HitTestResult {\n\t\tconst hitResult: { offsetNode: Node; offset: number } = (<any>ctx.viewDomNode.ownerDocument).caretPositionFromPoint(coords.clientX, coords.clientY);\n\n\t\tif (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n\t\t\t// offsetNode is expected to be the token text\n\t\t\tconst parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\t\t\tconst parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\t\t\tconst parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? (<HTMLElement>parent3).className : null;\n\n\t\t\tif (parent3ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>hitResult.offsetNode.parentNode, hitResult.offset);\n\t\t\t} else {\n\t\t\t\treturn new UnknownHitTestResult(<HTMLElement>hitResult.offsetNode.parentNode);\n\t\t\t}\n\t\t}\n\n\t\t// For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n\t\t// Some other times, it returns the `<span>` with the inline decoration\n\t\tif (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n\t\t\tconst parent1 = hitResult.offsetNode.parentNode;\n\t\t\tconst parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? (<HTMLElement>parent1).className : null;\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null;\n\t\t\tconst parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? (<HTMLElement>parent2).className : null;\n\n\t\t\tif (parent1ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\t// it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n\t\t\t\tconst tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n\t\t\t\tif (tokenSpan) {\n\t\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>tokenSpan, 0);\n\t\t\t\t}\n\t\t\t} else if (parent2ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\t// it returned the `<span>` with the inline decoration\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>hitResult.offsetNode, 0);\n\t\t\t}\n\t\t}\n\n\t\treturn new UnknownHitTestResult(<HTMLElement>hitResult.offsetNode);\n\t}\n\n\tprivate static _snapToSoftTabBoundary(position: Position, viewModel: IViewModel): Position {\n\t\tconst lineContent = viewModel.getLineContent(position.lineNumber);\n\t\tconst { tabSize } = viewModel.model.getOptions();\n\t\tconst newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, Direction.Nearest);\n\t\tif (newPosition !== -1) {\n\t\t\treturn new Position(position.lineNumber, newPosition + 1);\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic static doHitTest(ctx: HitTestContext, request: BareHitTestRequest): HitTestResult {\n\n\t\tlet result: HitTestResult = new UnknownHitTestResult();\n\t\tif (typeof (<any>ctx.viewDomNode.ownerDocument).caretRangeFromPoint === 'function') {\n\t\t\tresult = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n\t\t} else if ((<any>ctx.viewDomNode.ownerDocument).caretPositionFromPoint) {\n\t\t\tresult = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n\t\t}\n\t\tif (result.type === HitTestResultType.Content) {\n\t\t\tconst injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n\n\t\t\tconst normalizedPosition = ctx.viewModel.normalizePosition(result.position, PositionAffinity.None);\n\t\t\tif (injectedText || !normalizedPosition.equals(result.position)) {\n\t\t\t\tresult = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction shadowCaretRangeFromPoint(shadowRoot: ShadowRoot, x: number, y: number): Range {\n\tconst range = document.createRange();\n\n\t// Get the element under the point\n\tlet el: HTMLElement | null = (<any>shadowRoot).elementFromPoint(x, y);\n\t// When el is not null, it may be div.monaco-mouse-cursor-text Element, which has not childNodes, we don't need to handle it.\n\tif (el?.hasChildNodes()) {\n\t\t// Get the last child of the element until its firstChild is a text node\n\t\t// This assumes that the pointer is on the right of the line, out of the tokens\n\t\t// and that we want to get the offset of the last token of the line\n\t\twhile (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n\t\t\tel = <HTMLElement>el.lastChild;\n\t\t}\n\n\t\t// Grab its rect\n\t\tconst rect = el.getBoundingClientRect();\n\n\t\t// And its font (the computed shorthand font property might be empty, see #3217)\n\t\tconst elWindow = dom.getWindow(el);\n\t\tconst fontStyle = elWindow.getComputedStyle(el, null).getPropertyValue('font-style');\n\t\tconst fontVariant = elWindow.getComputedStyle(el, null).getPropertyValue('font-variant');\n\t\tconst fontWeight = elWindow.getComputedStyle(el, null).getPropertyValue('font-weight');\n\t\tconst fontSize = elWindow.getComputedStyle(el, null).getPropertyValue('font-size');\n\t\tconst lineHeight = elWindow.getComputedStyle(el, null).getPropertyValue('line-height');\n\t\tconst fontFamily = elWindow.getComputedStyle(el, null).getPropertyValue('font-family');\n\t\tconst font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n\n\t\t// And also its txt content\n\t\tconst text = el.innerText;\n\n\t\t// Position the pixel cursor at the left of the element\n\t\tlet pixelCursor = rect.left;\n\t\tlet offset = 0;\n\t\tlet step: number;\n\n\t\t// If the point is on the right of the box put the cursor after the last character\n\t\tif (x > rect.left + rect.width) {\n\t\t\toffset = text.length;\n\t\t} else {\n\t\t\tconst charWidthReader = CharWidthReader.getInstance();\n\t\t\t// Goes through all the characters of the innerText, and checks if the x of the point\n\t\t\t// belongs to the character.\n\t\t\tfor (let i = 0; i < text.length + 1; i++) {\n\t\t\t\t// The step is half the width of the character\n\t\t\t\tstep = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n\t\t\t\t// Move to the center of the character\n\t\t\t\tpixelCursor += step;\n\t\t\t\t// If the x of the point is smaller that the position of the cursor, the point is over that character\n\t\t\t\tif (x < pixelCursor) {\n\t\t\t\t\toffset = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Move between the current character and the next\n\t\t\t\tpixelCursor += step;\n\t\t\t}\n\t\t}\n\n\t\t// Creates a range with the text node of the element and set the offset found\n\t\trange.setStart(el.firstChild!, offset);\n\t\trange.setEnd(el.firstChild!, offset);\n\t}\n\n\treturn range;\n}\n\nclass CharWidthReader {\n\tprivate static _INSTANCE: CharWidthReader | null = null;\n\n\tpublic static getInstance(): CharWidthReader {\n\t\tif (!CharWidthReader._INSTANCE) {\n\t\t\tCharWidthReader._INSTANCE = new CharWidthReader();\n\t\t}\n\t\treturn CharWidthReader._INSTANCE;\n\t}\n\n\tprivate readonly _cache: { [cacheKey: string]: number };\n\tprivate readonly _canvas: HTMLCanvasElement;\n\n\tprivate constructor() {\n\t\tthis._cache = {};\n\t\tthis._canvas = document.createElement('canvas');\n\t}\n\n\tpublic getCharWidth(char: string, font: string): number {\n\t\tconst cacheKey = char + font;\n\t\tif (this._cache[cacheKey]) {\n\t\t\treturn this._cache[cacheKey];\n\t\t}\n\n\t\tconst context = this._canvas.getContext('2d')!;\n\t\tcontext.font = font;\n\t\tconst metrics = context.measureText(char);\n\t\tconst width = metrics.width;\n\t\tthis._cache[cacheKey] = width;\n\t\treturn width;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IPointerHandlerHelper } from './mouseHandler.js';\nimport { IMouseTargetContentEmptyData, IMouseTargetMarginData, IMouseTarget, IMouseTargetContentEmpty, IMouseTargetContentText, IMouseTargetContentWidget, IMouseTargetMargin, IMouseTargetOutsideEditor, IMouseTargetOverlayWidget, IMouseTargetScrollbar, IMouseTargetTextarea, IMouseTargetUnknown, IMouseTargetViewZone, IMouseTargetContentTextData, IMouseTargetViewZoneData, MouseTargetType } from '../editorBrowser.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorPagePosition, PageCoordinates, CoordinatesRelativeToEditor } from '../editorDom.js';\nimport { PartFingerprint, PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/viewLines/viewLine.js';\nimport { IViewCursorRenderData } from '../viewParts/viewCursors/viewCursor.js';\nimport { EditorLayoutInfo, EditorOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { HorizontalPosition } from '../view/renderingContext.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { IViewModel } from '../../common/viewModel.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations, Direction } from '../../common/cursor/cursorAtomicMoveOperations.js';\nimport { PositionAffinity, TextDirection } from '../../common/model.js';\nimport { InjectedText } from '../../common/modelLineProjectionData.js';\nimport { Mutable } from '../../../base/common/types.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { ViewLinesGpu } from '../viewParts/viewLinesGpu/viewLinesGpu.js';\n\nconst enum HitTestResultType {\n\tUnknown,\n\tContent,\n}\n\nclass UnknownHitTestResult {\n\treadonly type = HitTestResultType.Unknown;\n\tconstructor(\n\t\treadonly hitTarget: HTMLElement | null = null\n\t) { }\n}\n\nclass ContentHitTestResult {\n\treadonly type = HitTestResultType.Content;\n\n\tget hitTarget(): HTMLElement { return this.spanNode; }\n\n\tconstructor(\n\t\treadonly position: Position,\n\t\treadonly spanNode: HTMLElement,\n\t\treadonly injectedText: InjectedText | null,\n\t) { }\n}\n\ntype HitTestResult = UnknownHitTestResult | ContentHitTestResult;\n\nnamespace HitTestResult {\n\texport function createFromDOMInfo(ctx: HitTestContext, spanNode: HTMLElement, offset: number): HitTestResult {\n\t\tconst position = ctx.getPositionFromDOMInfo(spanNode, offset);\n\t\tif (position) {\n\t\t\treturn new ContentHitTestResult(position, spanNode, null);\n\t\t}\n\t\treturn new UnknownHitTestResult(spanNode);\n\t}\n}\n\nexport class PointerHandlerLastRenderData {\n\tconstructor(\n\t\tpublic readonly lastViewCursorsRenderData: IViewCursorRenderData[],\n\t\tpublic readonly lastTextareaPosition: Position | null\n\t) { }\n}\n\nexport class MouseTarget {\n\n\tprivate static _deduceRage(position: Position): EditorRange;\n\tprivate static _deduceRage(position: Position, range: EditorRange | null): EditorRange;\n\tprivate static _deduceRage(position: Position | null): EditorRange | null;\n\tprivate static _deduceRage(position: Position | null, range: EditorRange | null = null): EditorRange | null {\n\t\tif (!range && position) {\n\t\t\treturn new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n\t\t}\n\t\treturn range ?? null;\n\t}\n\tpublic static createUnknown(element: HTMLElement | null, mouseColumn: number, position: Position | null): IMouseTargetUnknown {\n\t\treturn { type: MouseTargetType.UNKNOWN, element, mouseColumn, position, range: this._deduceRage(position) };\n\t}\n\tpublic static createTextarea(element: HTMLElement | null, mouseColumn: number): IMouseTargetTextarea {\n\t\treturn { type: MouseTargetType.TEXTAREA, element, mouseColumn, position: null, range: null };\n\t}\n\tpublic static createMargin(type: MouseTargetType.GUTTER_GLYPH_MARGIN | MouseTargetType.GUTTER_LINE_NUMBERS | MouseTargetType.GUTTER_LINE_DECORATIONS, element: HTMLElement | null, mouseColumn: number, position: Position, range: EditorRange, detail: IMouseTargetMarginData): IMouseTargetMargin {\n\t\treturn { type, element, mouseColumn, position, range, detail };\n\t}\n\tpublic static createViewZone(type: MouseTargetType.GUTTER_VIEW_ZONE | MouseTargetType.CONTENT_VIEW_ZONE, element: HTMLElement | null, mouseColumn: number, position: Position, detail: IMouseTargetViewZoneData): IMouseTargetViewZone {\n\t\treturn { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n\t}\n\tpublic static createContentText(element: HTMLElement | null, mouseColumn: number, position: Position, range: EditorRange | null, detail: IMouseTargetContentTextData): IMouseTargetContentText {\n\t\treturn { type: MouseTargetType.CONTENT_TEXT, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n\t}\n\tpublic static createContentEmpty(element: HTMLElement | null, mouseColumn: number, position: Position, detail: IMouseTargetContentEmptyData): IMouseTargetContentEmpty {\n\t\treturn { type: MouseTargetType.CONTENT_EMPTY, element, mouseColumn, position, range: this._deduceRage(position), detail };\n\t}\n\tpublic static createContentWidget(element: HTMLElement | null, mouseColumn: number, detail: string): IMouseTargetContentWidget {\n\t\treturn { type: MouseTargetType.CONTENT_WIDGET, element, mouseColumn, position: null, range: null, detail };\n\t}\n\tpublic static createScrollbar(element: HTMLElement | null, mouseColumn: number, position: Position): IMouseTargetScrollbar {\n\t\treturn { type: MouseTargetType.SCROLLBAR, element, mouseColumn, position, range: this._deduceRage(position) };\n\t}\n\tpublic static createOverlayWidget(element: HTMLElement | null, mouseColumn: number, detail: string): IMouseTargetOverlayWidget {\n\t\treturn { type: MouseTargetType.OVERLAY_WIDGET, element, mouseColumn, position: null, range: null, detail };\n\t}\n\tpublic static createOutsideEditor(mouseColumn: number, position: Position, outsidePosition: 'above' | 'below' | 'left' | 'right', outsideDistance: number): IMouseTargetOutsideEditor {\n\t\treturn { type: MouseTargetType.OUTSIDE_EDITOR, element: null, mouseColumn, position, range: this._deduceRage(position), outsidePosition, outsideDistance };\n\t}\n\n\tprivate static _typeToString(type: MouseTargetType): string {\n\t\tif (type === MouseTargetType.TEXTAREA) {\n\t\t\treturn 'TEXTAREA';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_GLYPH_MARGIN) {\n\t\t\treturn 'GUTTER_GLYPH_MARGIN';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_LINE_NUMBERS) {\n\t\t\treturn 'GUTTER_LINE_NUMBERS';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_LINE_DECORATIONS) {\n\t\t\treturn 'GUTTER_LINE_DECORATIONS';\n\t\t}\n\t\tif (type === MouseTargetType.GUTTER_VIEW_ZONE) {\n\t\t\treturn 'GUTTER_VIEW_ZONE';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_TEXT) {\n\t\t\treturn 'CONTENT_TEXT';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_EMPTY) {\n\t\t\treturn 'CONTENT_EMPTY';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_VIEW_ZONE) {\n\t\t\treturn 'CONTENT_VIEW_ZONE';\n\t\t}\n\t\tif (type === MouseTargetType.CONTENT_WIDGET) {\n\t\t\treturn 'CONTENT_WIDGET';\n\t\t}\n\t\tif (type === MouseTargetType.OVERVIEW_RULER) {\n\t\t\treturn 'OVERVIEW_RULER';\n\t\t}\n\t\tif (type === MouseTargetType.SCROLLBAR) {\n\t\t\treturn 'SCROLLBAR';\n\t\t}\n\t\tif (type === MouseTargetType.OVERLAY_WIDGET) {\n\t\t\treturn 'OVERLAY_WIDGET';\n\t\t}\n\t\treturn 'UNKNOWN';\n\t}\n\n\tpublic static toString(target: IMouseTarget): string {\n\t\treturn this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify((<any>target).detail);\n\t}\n}\n\nclass ElementPath {\n\n\tpublic static isTextArea(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length === 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.TextArea\n\t\t);\n\t}\n\n\tpublic static isChildOfViewLines(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ViewLines\n\t\t);\n\t}\n\n\tpublic static isStrictChildOfViewLines(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length > 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ViewLines\n\t\t);\n\t}\n\n\tpublic static isChildOfScrollableElement(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.ScrollableElement\n\t\t);\n\t}\n\n\tpublic static isChildOfMinimap(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.Minimap\n\t\t);\n\t}\n\n\tpublic static isChildOfContentWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 4\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[3] === PartFingerprint.ContentWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowGuard(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowingContentWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowingContentWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverlayWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 2\n\t\t\t&& path[0] === PartFingerprint.OverflowGuard\n\t\t\t&& path[1] === PartFingerprint.OverlayWidgets\n\t\t);\n\t}\n\n\tpublic static isChildOfOverflowingOverlayWidgets(path: Uint8Array): boolean {\n\t\treturn (\n\t\t\tpath.length >= 1\n\t\t\t&& path[0] === PartFingerprint.OverflowingOverlayWidgets\n\t\t);\n\t}\n}\n\nexport class HitTestContext {\n\n\tpublic readonly viewModel: IViewModel;\n\tpublic readonly layoutInfo: EditorLayoutInfo;\n\tpublic readonly viewDomNode: HTMLElement;\n\tpublic readonly viewLinesGpu: ViewLinesGpu | undefined;\n\tpublic readonly lineHeight: number;\n\tpublic readonly stickyTabStops: boolean;\n\tpublic readonly typicalHalfwidthCharacterWidth: number;\n\tpublic readonly lastRenderData: PointerHandlerLastRenderData;\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\n\tconstructor(context: ViewContext, viewHelper: IPointerHandlerHelper, lastRenderData: PointerHandlerLastRenderData) {\n\t\tthis.viewModel = context.viewModel;\n\t\tconst options = context.configuration.options;\n\t\tthis.layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tthis.viewDomNode = viewHelper.viewDomNode;\n\t\tthis.viewLinesGpu = viewHelper.viewLinesGpu;\n\t\tthis.lineHeight = options.get(EditorOption.lineHeight);\n\t\tthis.stickyTabStops = options.get(EditorOption.stickyTabStops);\n\t\tthis.typicalHalfwidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tthis.lastRenderData = lastRenderData;\n\t\tthis._context = context;\n\t\tthis._viewHelper = viewHelper;\n\t}\n\n\tpublic getZoneAtCoord(mouseVerticalOffset: number): IMouseTargetViewZoneData | null {\n\t\treturn HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n\t}\n\n\tpublic static getZoneAtCoord(context: ViewContext, mouseVerticalOffset: number): IMouseTargetViewZoneData | null {\n\t\t// The target is either a view zone or the empty space after the last view-line\n\t\tconst viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n\n\t\tif (viewZoneWhitespace) {\n\t\t\tconst viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n\t\t\tconst lineCount = context.viewModel.getLineCount();\n\t\t\tlet positionBefore: Position | null = null;\n\t\t\tlet position: Position | null;\n\t\t\tlet positionAfter: Position | null = null;\n\n\t\t\tif (viewZoneWhitespace.afterLineNumber !== lineCount) {\n\t\t\t\t// There are more lines after this view zone\n\t\t\t\tpositionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n\t\t\t}\n\t\t\tif (viewZoneWhitespace.afterLineNumber > 0) {\n\t\t\t\t// There are more lines above this view zone\n\t\t\t\tpositionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n\t\t\t}\n\n\t\t\tif (positionAfter === null) {\n\t\t\t\tposition = positionBefore;\n\t\t\t} else if (positionBefore === null) {\n\t\t\t\tposition = positionAfter;\n\t\t\t} else if (mouseVerticalOffset < viewZoneMiddle) {\n\t\t\t\tposition = positionBefore;\n\t\t\t} else {\n\t\t\t\tposition = positionAfter;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tviewZoneId: viewZoneWhitespace.id,\n\t\t\t\tafterLineNumber: viewZoneWhitespace.afterLineNumber,\n\t\t\t\tpositionBefore: positionBefore,\n\t\t\t\tpositionAfter: positionAfter,\n\t\t\t\tposition: position!\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getFullLineRangeAtCoord(mouseVerticalOffset: number): { range: EditorRange; isAfterLines: boolean } {\n\t\tif (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n\t\t\t// Below the last line\n\t\t\tconst lineNumber = this._context.viewModel.getLineCount();\n\t\t\tconst maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n\t\t\treturn {\n\t\t\t\trange: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n\t\t\t\tisAfterLines: true\n\t\t\t};\n\t\t}\n\n\t\tconst lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\t\tconst maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n\t\treturn {\n\t\t\trange: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n\t\t\tisAfterLines: false\n\t\t};\n\t}\n\n\tpublic getLineNumberAtVerticalOffset(mouseVerticalOffset: number): number {\n\t\treturn this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n\t}\n\n\tpublic isAfterLines(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n\t}\n\n\tpublic isInTopPadding(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n\t}\n\n\tpublic isInBottomPadding(mouseVerticalOffset: number): boolean {\n\t\treturn this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n\t}\n\n\tpublic getVerticalOffsetForLineNumber(lineNumber: number): number {\n\t\treturn this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n\t}\n\n\tpublic findAttribute(element: Element, attr: string): string | null {\n\t\treturn HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n\t}\n\n\tprivate static _findAttribute(element: Element, attr: string, stopAt: Element): string | null {\n\t\twhile (element && element !== element.ownerDocument.body) {\n\t\t\tif (element.hasAttribute && element.hasAttribute(attr)) {\n\t\t\t\treturn element.getAttribute(attr);\n\t\t\t}\n\t\t\tif (element === stopAt) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telement = <Element>element.parentNode;\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getLineWidth(lineNumber: number): number {\n\t\treturn this._viewHelper.getLineWidth(lineNumber);\n\t}\n\n\tpublic isRtl(lineNumber: number): boolean {\n\t\treturn this.viewModel.getTextDirection(lineNumber) === TextDirection.RTL;\n\n\t}\n\n\tpublic visibleRangeForPosition(lineNumber: number, column: number): HorizontalPosition | null {\n\t\treturn this._viewHelper.visibleRangeForPosition(lineNumber, column);\n\t}\n\n\tpublic getPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null {\n\t\treturn this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n\t}\n\n\tpublic getCurrentScrollTop(): number {\n\t\treturn this._context.viewLayout.getCurrentScrollTop();\n\t}\n\n\tpublic getCurrentScrollLeft(): number {\n\t\treturn this._context.viewLayout.getCurrentScrollLeft();\n\t}\n}\n\nabstract class BareHitTestRequest {\n\n\tpublic readonly editorPos: EditorPagePosition;\n\tpublic readonly pos: PageCoordinates;\n\tpublic readonly relativePos: CoordinatesRelativeToEditor;\n\tpublic readonly mouseVerticalOffset: number;\n\tpublic readonly isInMarginArea: boolean;\n\tpublic readonly isInContentArea: boolean;\n\tpublic readonly mouseContentHorizontalOffset: number;\n\n\tprotected readonly mouseColumn: number;\n\n\tconstructor(ctx: HitTestContext, editorPos: EditorPagePosition, pos: PageCoordinates, relativePos: CoordinatesRelativeToEditor) {\n\t\tthis.editorPos = editorPos;\n\t\tthis.pos = pos;\n\t\tthis.relativePos = relativePos;\n\n\t\tthis.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n\t\tthis.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n\t\tthis.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n\t\tthis.isInContentArea = !this.isInMarginArea;\n\t\tthis.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n\t}\n}\n\nclass HitTestRequest extends BareHitTestRequest {\n\tprivate readonly _ctx: HitTestContext;\n\tprivate readonly _eventTarget: HTMLElement | null;\n\tpublic readonly hitTestResult = new Lazy(() => MouseTargetFactory.doHitTest(this._ctx, this));\n\tprivate _useHitTestTarget: boolean;\n\tprivate _targetPathCacheElement: HTMLElement | null = null;\n\tprivate _targetPathCacheValue: Uint8Array = new Uint8Array(0);\n\n\tpublic get target(): HTMLElement | null {\n\t\tif (this._useHitTestTarget) {\n\t\t\treturn this.hitTestResult.value.hitTarget;\n\t\t}\n\t\treturn this._eventTarget;\n\t}\n\n\tpublic get targetPath(): Uint8Array {\n\t\tif (this._targetPathCacheElement !== this.target) {\n\t\t\tthis._targetPathCacheElement = this.target;\n\t\t\tthis._targetPathCacheValue = PartFingerprints.collect(this.target, this._ctx.viewDomNode);\n\t\t}\n\t\treturn this._targetPathCacheValue;\n\t}\n\n\tconstructor(ctx: HitTestContext, editorPos: EditorPagePosition, pos: PageCoordinates, relativePos: CoordinatesRelativeToEditor, eventTarget: HTMLElement | null) {\n\t\tsuper(ctx, editorPos, pos, relativePos);\n\t\tthis._ctx = ctx;\n\t\tthis._eventTarget = eventTarget;\n\n\t\t// If no event target is passed in, we will use the hit test target\n\t\tconst hasEventTarget = Boolean(this._eventTarget);\n\t\tthis._useHitTestTarget = !hasEventTarget;\n\t}\n\n\tpublic override toString(): string {\n\t\treturn `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? (<HTMLElement>this.target).outerHTML : null}`;\n\t}\n\n\tpublic get wouldBenefitFromHitTestTargetSwitch(): boolean {\n\t\treturn (\n\t\t\t!this._useHitTestTarget\n\t\t\t&& this.hitTestResult.value.hitTarget !== null\n\t\t\t&& this.target !== this.hitTestResult.value.hitTarget\n\t\t);\n\t}\n\n\tpublic switchToHitTestTarget(): void {\n\t\tthis._useHitTestTarget = true;\n\t}\n\n\tprivate _getMouseColumn(position: Position | null = null): number {\n\t\tif (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n\t\t\t// Most likely, the line contains foreign decorations...\n\t\t\treturn CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n\t\t}\n\t\treturn this.mouseColumn;\n\t}\n\n\tpublic fulfillUnknown(position: Position | null = null): IMouseTargetUnknown {\n\t\treturn MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n\t}\n\tpublic fulfillTextarea(): IMouseTargetTextarea {\n\t\treturn MouseTarget.createTextarea(this.target, this._getMouseColumn());\n\t}\n\tpublic fulfillMargin(type: MouseTargetType.GUTTER_GLYPH_MARGIN | MouseTargetType.GUTTER_LINE_NUMBERS | MouseTargetType.GUTTER_LINE_DECORATIONS, position: Position, range: EditorRange, detail: IMouseTargetMarginData): IMouseTargetMargin {\n\t\treturn MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n\t}\n\tpublic fulfillViewZone(type: MouseTargetType.GUTTER_VIEW_ZONE | MouseTargetType.CONTENT_VIEW_ZONE, position: Position, detail: IMouseTargetViewZoneData): IMouseTargetViewZone {\n\t\treturn MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n\t}\n\tpublic fulfillContentText(position: Position, range: EditorRange | null, detail: IMouseTargetContentTextData): IMouseTargetContentText {\n\t\treturn MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n\t}\n\tpublic fulfillContentEmpty(position: Position, detail: IMouseTargetContentEmptyData): IMouseTargetContentEmpty {\n\t\treturn MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n\t}\n\tpublic fulfillContentWidget(detail: string): IMouseTargetContentWidget {\n\t\treturn MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n\t}\n\tpublic fulfillScrollbar(position: Position): IMouseTargetScrollbar {\n\t\treturn MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n\t}\n\tpublic fulfillOverlayWidget(detail: string): IMouseTargetOverlayWidget {\n\t\treturn MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n\t}\n}\n\ninterface ResolvedHitTestRequest extends HitTestRequest {\n\treadonly target: HTMLElement;\n}\n\nconst EMPTY_CONTENT_AFTER_LINES: IMouseTargetContentEmptyData = { isAfterLines: true };\n\nfunction createEmptyContentDataInLines(horizontalDistanceToText: number): IMouseTargetContentEmptyData {\n\treturn {\n\t\tisAfterLines: false,\n\t\thorizontalDistanceToText: horizontalDistanceToText\n\t};\n}\n\nexport class MouseTargetFactory {\n\n\tprivate readonly _context: ViewContext;\n\tprivate readonly _viewHelper: IPointerHandlerHelper;\n\n\tconstructor(context: ViewContext, viewHelper: IPointerHandlerHelper) {\n\t\tthis._context = context;\n\t\tthis._viewHelper = viewHelper;\n\t}\n\n\tpublic mouseTargetIsWidget(e: EditorMouseEvent): boolean {\n\t\tconst t = <Element>e.target;\n\t\tconst path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n\n\t\t// Is it a content widget?\n\t\tif (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Is it an overlay widget?\n\t\tif (ElementPath.isChildOfOverlayWidgets(path) || ElementPath.isChildOfOverflowingOverlayWidgets(path)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic createMouseTarget(lastRenderData: PointerHandlerLastRenderData, editorPos: EditorPagePosition, pos: PageCoordinates, relativePos: CoordinatesRelativeToEditor, target: HTMLElement | null): IMouseTarget {\n\t\tconst ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n\t\tconst request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n\t\ttry {\n\t\t\tconst r = MouseTargetFactory._createMouseTarget(ctx, request);\n\n\t\t\tif (r.type === MouseTargetType.CONTENT_TEXT) {\n\t\t\t\t// Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n\t\t\t\tif (ctx.stickyTabStops && r.position !== null) {\n\t\t\t\t\tconst position = MouseTargetFactory._snapToSoftTabBoundary(r.position, ctx.viewModel);\n\t\t\t\t\tconst range = EditorRange.fromPositions(position, position).plusRange(r.range);\n\t\t\t\t\treturn request.fulfillContentText(position, range, r.detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log(MouseTarget.toString(r));\n\t\t\treturn r;\n\t\t} catch (err) {\n\t\t\t// console.log(err);\n\t\t\treturn request.fulfillUnknown();\n\t\t}\n\t}\n\n\tprivate static _createMouseTarget(ctx: HitTestContext, request: HitTestRequest): IMouseTarget {\n\n\t\t// console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n\n\t\tif (request.target === null) {\n\t\t\t// No target\n\t\t\treturn request.fulfillUnknown();\n\t\t}\n\n\t\t// we know for a fact that request.target is not null\n\t\tconst resolvedRequest = <ResolvedHitTestRequest>request;\n\n\t\tlet result: IMouseTarget | null = null;\n\n\t\tif (!ElementPath.isChildOfOverflowGuard(request.targetPath) && !ElementPath.isChildOfOverflowingContentWidgets(request.targetPath) && !ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n\t\t\t// We only render dom nodes inside the overflow guard or in the overflowing content widgets\n\t\t\tresult = result || request.fulfillUnknown();\n\t\t}\n\n\t\tresult = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest);\n\t\tresult = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n\n\t\treturn (result || request.fulfillUnknown());\n\t}\n\n\tprivate static _hitTestContentWidget(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it a content widget?\n\t\tif (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n\t\t\tconst widgetId = ctx.findAttribute(request.target, 'widgetId');\n\t\t\tif (widgetId) {\n\t\t\t\treturn request.fulfillContentWidget(widgetId);\n\t\t\t} else {\n\t\t\t\treturn request.fulfillUnknown();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestOverlayWidget(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it an overlay widget?\n\t\tif (ElementPath.isChildOfOverlayWidgets(request.targetPath) || ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n\t\t\tconst widgetId = ctx.findAttribute(request.target, 'widgetId');\n\t\t\tif (widgetId) {\n\t\t\t\treturn request.fulfillOverlayWidget(widgetId);\n\t\t\t} else {\n\t\t\t\treturn request.fulfillUnknown();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewCursor(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\n\t\tif (request.target) {\n\t\t\t// Check if we've hit a painted cursor\n\t\t\tconst lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\n\t\t\tfor (const d of lastViewCursorsRenderData) {\n\n\t\t\t\tif (request.target === d.domNode) {\n\t\t\t\t\treturn request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (request.isInContentArea) {\n\t\t\t// Edge has a bug when hit-testing the exact position of a cursor,\n\t\t\t// instead of returning the correct dom node, it returns the\n\t\t\t// first or last rendered view line dom node, therefore help it out\n\t\t\t// and first check if we are on top of a cursor\n\n\t\t\tconst lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n\t\t\tconst mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n\t\t\tconst mouseVerticalOffset = request.mouseVerticalOffset;\n\n\t\t\tfor (const d of lastViewCursorsRenderData) {\n\n\t\t\t\tif (mouseContentHorizontalOffset < d.contentLeft) {\n\t\t\t\t\t// mouse position is to the left of the cursor\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n\t\t\t\t\t// mouse position is to the right of the cursor\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n\n\t\t\t\tif (\n\t\t\t\t\tcursorVerticalOffset <= mouseVerticalOffset\n\t\t\t\t\t&& mouseVerticalOffset <= cursorVerticalOffset + d.height\n\t\t\t\t) {\n\t\t\t\t\treturn request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewZone(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tconst viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n\t\tif (viewZoneData) {\n\t\t\tconst mouseTargetType = (request.isInContentArea ? MouseTargetType.CONTENT_VIEW_ZONE : MouseTargetType.GUTTER_VIEW_ZONE);\n\t\t\treturn request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestTextArea(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it the textarea?\n\t\tif (ElementPath.isTextArea(request.targetPath)) {\n\t\t\tif (ctx.lastRenderData.lastTextareaPosition) {\n\t\t\t\treturn request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n\t\t\t}\n\t\t\treturn request.fulfillTextarea();\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestMargin(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (request.isInMarginArea) {\n\t\t\tconst res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n\t\t\tconst pos = res.range.getStartPosition();\n\t\t\tlet offset = Math.abs(request.relativePos.x);\n\t\t\tconst detail: Mutable<IMouseTargetMarginData> = {\n\t\t\t\tisAfterLines: res.isAfterLines,\n\t\t\t\tglyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n\t\t\t\tglyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n\t\t\t\tlineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n\t\t\t\toffsetX: offset\n\t\t\t};\n\n\t\t\toffset -= ctx.layoutInfo.glyphMarginLeft;\n\n\t\t\tif (offset <= ctx.layoutInfo.glyphMarginWidth) {\n\t\t\t\t// On the glyph margin\n\t\t\t\tconst modelCoordinate = ctx.viewModel.coordinatesConverter.convertViewPositionToModelPosition(res.range.getStartPosition());\n\t\t\t\tconst lanes = ctx.viewModel.glyphLanes.getLanesAtLine(modelCoordinate.lineNumber);\n\t\t\t\tdetail.glyphMarginLane = lanes[Math.floor(offset / ctx.lineHeight)];\n\t\t\t\treturn request.fulfillMargin(MouseTargetType.GUTTER_GLYPH_MARGIN, pos, res.range, detail);\n\t\t\t}\n\t\t\toffset -= ctx.layoutInfo.glyphMarginWidth;\n\n\t\t\tif (offset <= ctx.layoutInfo.lineNumbersWidth) {\n\t\t\t\t// On the line numbers\n\t\t\t\treturn request.fulfillMargin(MouseTargetType.GUTTER_LINE_NUMBERS, pos, res.range, detail);\n\t\t\t}\n\t\t\toffset -= ctx.layoutInfo.lineNumbersWidth;\n\n\t\t\t// On the line decorations\n\t\t\treturn request.fulfillMargin(MouseTargetType.GUTTER_LINE_DECORATIONS, pos, res.range, detail);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestViewLines(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (!ElementPath.isChildOfViewLines(request.targetPath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n\t\t\treturn request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n\t\t}\n\n\t\t// Check if it is below any lines and any view zones\n\t\tif (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n\t\t\t// This most likely indicates it happened after the last view-line\n\t\t\tconst lineCount = ctx.viewModel.getLineCount();\n\t\t\tconst maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n\t\t\treturn request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n\t\t}\n\n\t\t// Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n\t\t// See https://github.com/microsoft/vscode/issues/46942\n\t\tif (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n\t\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst lineLength = ctx.viewModel.getLineLength(lineNumber);\n\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\tif (lineLength === 0) {\n\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\treturn request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n\t\t\t}\n\n\t\t\tconst isRtl = ctx.isRtl(lineNumber);\n\t\t\tif (isRtl) {\n\t\t\t\tif (request.mouseContentHorizontalOffset + lineWidth <= ctx.layoutInfo.contentWidth - ctx.layoutInfo.verticalScrollbarWidth) {\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t\t}\n\t\t\t} else if (request.mouseContentHorizontalOffset >= lineWidth) {\n\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ctx.viewLinesGpu) {\n\t\t\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\t\tif (ctx.viewModel.getLineLength(lineNumber) === 0) {\n\t\t\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\treturn request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n\t\t\t\t}\n\n\t\t\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\t\t\t\tconst isRtl = ctx.isRtl(lineNumber);\n\t\t\t\tif (isRtl) {\n\t\t\t\t\tif (request.mouseContentHorizontalOffset + lineWidth <= ctx.layoutInfo.contentWidth - ctx.layoutInfo.verticalScrollbarWidth) {\n\t\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t\t\t}\n\t\t\t\t} else if (request.mouseContentHorizontalOffset >= lineWidth) {\n\t\t\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\t\t\tconst pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n\t\t\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t\t\t}\n\n\t\t\t\tconst position = ctx.viewLinesGpu.getPositionAtCoordinate(lineNumber, request.mouseContentHorizontalOffset);\n\t\t\t\tif (position) {\n\t\t\t\t\tconst detail: IMouseTargetContentTextData = {\n\t\t\t\t\t\tinjectedText: null,\n\t\t\t\t\t\tmightBeForeignElement: false\n\t\t\t\t\t};\n\t\t\t\t\treturn request.fulfillContentText(position, EditorRange.fromPositions(position, position), detail);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Do the hit test (if not already done)\n\t\tconst hitTestResult = request.hitTestResult.value;\n\n\t\tif (hitTestResult.type === HitTestResultType.Content) {\n\t\t\treturn MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n\t\t}\n\n\t\t// We didn't hit content...\n\t\tif (request.wouldBenefitFromHitTestTargetSwitch) {\n\t\t\t// We actually hit something different... Give it one last change by trying again with this new target\n\t\t\trequest.switchToHitTestTarget();\n\t\t\treturn this._createMouseTarget(ctx, request);\n\t\t}\n\n\t\t// We have tried everything...\n\t\treturn request.fulfillUnknown();\n\t}\n\n\tprivate static _hitTestMinimap(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (ElementPath.isChildOfMinimap(request.targetPath)) {\n\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n\t\t\treturn request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestScrollbarSlider(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\tif (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n\t\t\tif (request.target && request.target.nodeType === 1) {\n\t\t\t\tconst className = request.target.className;\n\t\t\t\tif (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n\t\t\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\t\t\tconst maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n\t\t\t\t\treturn request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate static _hitTestScrollbar(ctx: HitTestContext, request: ResolvedHitTestRequest): IMouseTarget | null {\n\t\t// Is it the overview ruler?\n\t\t// Is it a child of the scrollable element?\n\t\tif (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n\t\t\tconst possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\t\tconst maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n\t\t\treturn request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getMouseColumn(relativePos: CoordinatesRelativeToEditor): number {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n\t\treturn MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth);\n\t}\n\n\tpublic static _getMouseColumn(mouseContentHorizontalOffset: number, typicalHalfwidthCharacterWidth: number): number {\n\t\tif (mouseContentHorizontalOffset < 0) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n\t\treturn (chars + 1);\n\t}\n\n\tprivate static createMouseTargetFromHitTestPosition(ctx: HitTestContext, request: HitTestRequest, spanNode: HTMLElement, pos: Position, injectedText: InjectedText | null): IMouseTarget {\n\t\tconst lineNumber = pos.lineNumber;\n\t\tconst column = pos.column;\n\n\t\tconst lineWidth = ctx.getLineWidth(lineNumber);\n\n\t\tif (request.mouseContentHorizontalOffset > lineWidth) {\n\t\t\tconst detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n\t\t\treturn request.fulfillContentEmpty(pos, detail);\n\t\t}\n\n\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n\n\t\tif (!visibleRange) {\n\t\t\treturn request.fulfillUnknown(pos);\n\t\t}\n\n\t\tconst columnHorizontalOffset = visibleRange.left;\n\n\t\tif (Math.abs(request.mouseContentHorizontalOffset - columnHorizontalOffset) < 1) {\n\t\t\treturn request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n\t\t}\n\n\t\t// Let's define a, b, c and check if the offset is in between them...\n\t\tinterface OffsetColumn { offset: number; column: number }\n\n\t\tconst points: OffsetColumn[] = [];\n\t\tpoints.push({ offset: visibleRange.left, column: column });\n\t\tif (column > 1) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n\t\t\tif (visibleRange) {\n\t\t\t\tpoints.push({ offset: visibleRange.left, column: column - 1 });\n\t\t\t}\n\t\t}\n\t\tconst lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n\t\tif (column < lineMaxColumn) {\n\t\t\tconst visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n\t\t\tif (visibleRange) {\n\t\t\t\tpoints.push({ offset: visibleRange.left, column: column + 1 });\n\t\t\t}\n\t\t}\n\n\t\tpoints.sort((a, b) => a.offset - b.offset);\n\n\t\tconst mouseCoordinates = request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode));\n\t\tconst spanNodeClientRect = spanNode.getBoundingClientRect();\n\t\tconst mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n\n\t\tlet rng: EditorRange | null = null;\n\n\t\tfor (let i = 1; i < points.length; i++) {\n\t\t\tconst prev = points[i - 1];\n\t\t\tconst curr = points[i];\n\t\t\tif (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n\t\t\t\trng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/152819\n\t\t\t\t// Due to the use of zwj, the browser's hit test result is skewed towards the left\n\t\t\t\t// Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n\n\t\t\t\tconst prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n\t\t\t\tconst nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n\n\t\t\t\tpos = (\n\t\t\t\t\tprevDelta < nextDelta\n\t\t\t\t\t\t? new Position(lineNumber, prev.column)\n\t\t\t\t\t\t: new Position(lineNumber, curr.column)\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn request.fulfillContentText(pos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n\t}\n\n\t/**\n\t * Most probably WebKit browsers and Edge\n\t */\n\tprivate static _doHitTestWithCaretRangeFromPoint(ctx: HitTestContext, request: BareHitTestRequest): HitTestResult {\n\n\t\t// In Chrome, especially on Linux it is possible to click between lines,\n\t\t// so try to adjust the `hity` below so that it lands in the center of a line\n\t\tconst lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n\t\tconst lineStartVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n\t\tconst lineEndVerticalOffset = lineStartVerticalOffset + ctx.lineHeight;\n\n\t\tconst isBelowLastLine = (\n\t\t\tlineNumber === ctx.viewModel.getLineCount()\n\t\t\t&& request.mouseVerticalOffset > lineEndVerticalOffset\n\t\t);\n\n\t\tif (!isBelowLastLine) {\n\t\t\tconst lineCenteredVerticalOffset = Math.floor((lineStartVerticalOffset + lineEndVerticalOffset) / 2);\n\t\t\tlet adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n\n\t\t\tif (adjustedPageY <= request.editorPos.y) {\n\t\t\t\tadjustedPageY = request.editorPos.y + 1;\n\t\t\t}\n\t\t\tif (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n\t\t\t\tadjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n\t\t\t}\n\n\t\t\tconst adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n\n\t\t\tconst r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n\t\t\tif (r.type === HitTestResultType.Content) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\n\t\t// Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n\t\treturn this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n\t}\n\n\tprivate static _actualDoHitTestWithCaretRangeFromPoint(ctx: HitTestContext, coords: ClientCoordinates): HitTestResult {\n\t\tconst shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n\t\tlet range: Range;\n\t\tif (shadowRoot) {\n\t\t\tif (typeof (<any>shadowRoot).caretRangeFromPoint === 'undefined') {\n\t\t\t\trange = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n\t\t\t} else {\n\t\t\t\trange = (<any>shadowRoot).caretRangeFromPoint(coords.clientX, coords.clientY);\n\t\t\t}\n\t\t} else {\n\t\t\trange = (<any>ctx.viewDomNode.ownerDocument).caretRangeFromPoint(coords.clientX, coords.clientY);\n\t\t}\n\n\t\tif (!range || !range.startContainer) {\n\t\t\treturn new UnknownHitTestResult();\n\t\t}\n\n\t\t// Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n\t\tconst startContainer = range.startContainer;\n\n\t\tif (startContainer.nodeType === startContainer.TEXT_NODE) {\n\t\t\t// startContainer is expected to be the token text\n\t\t\tconst parent1 = startContainer.parentNode; // expected to be the token span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\t\t\tconst parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\t\t\tconst parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? (<HTMLElement>parent3).className : null;\n\n\t\t\tif (parent3ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>parent1, range.startOffset);\n\t\t\t} else {\n\t\t\t\treturn new UnknownHitTestResult(<HTMLElement>startContainer.parentNode);\n\t\t\t}\n\t\t} else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n\t\t\t// startContainer is expected to be the token span\n\t\t\tconst parent1 = startContainer.parentNode; // expected to be the view line container span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n\t\t\tconst parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? (<HTMLElement>parent2).className : null;\n\n\t\t\tif (parent2ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>startContainer, (<HTMLElement>startContainer).textContent!.length);\n\t\t\t} else {\n\t\t\t\treturn new UnknownHitTestResult(<HTMLElement>startContainer);\n\t\t\t}\n\t\t}\n\n\t\treturn new UnknownHitTestResult();\n\t}\n\n\t/**\n\t * Most probably Gecko\n\t */\n\tprivate static _doHitTestWithCaretPositionFromPoint(ctx: HitTestContext, coords: ClientCoordinates): HitTestResult {\n\t\tconst hitResult: { offsetNode: Node; offset: number } = (<any>ctx.viewDomNode.ownerDocument).caretPositionFromPoint(coords.clientX, coords.clientY);\n\n\t\tif (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n\t\t\t// offsetNode is expected to be the token text\n\t\t\tconst parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n\t\t\tconst parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n\t\t\tconst parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? (<HTMLElement>parent3).className : null;\n\n\t\t\tif (parent3ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>hitResult.offsetNode.parentNode, hitResult.offset);\n\t\t\t} else {\n\t\t\t\treturn new UnknownHitTestResult(<HTMLElement>hitResult.offsetNode.parentNode);\n\t\t\t}\n\t\t}\n\n\t\t// For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n\t\t// Some other times, it returns the `<span>` with the inline decoration\n\t\tif (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n\t\t\tconst parent1 = hitResult.offsetNode.parentNode;\n\t\t\tconst parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? (<HTMLElement>parent1).className : null;\n\t\t\tconst parent2 = parent1 ? parent1.parentNode : null;\n\t\t\tconst parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? (<HTMLElement>parent2).className : null;\n\n\t\t\tif (parent1ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\t// it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n\t\t\t\tconst tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n\t\t\t\tif (tokenSpan) {\n\t\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>tokenSpan, 0);\n\t\t\t\t}\n\t\t\t} else if (parent2ClassName === ViewLine.CLASS_NAME) {\n\t\t\t\t// it returned the `<span>` with the inline decoration\n\t\t\t\treturn HitTestResult.createFromDOMInfo(ctx, <HTMLElement>hitResult.offsetNode, 0);\n\t\t\t}\n\t\t}\n\n\t\treturn new UnknownHitTestResult(<HTMLElement>hitResult.offsetNode);\n\t}\n\n\tprivate static _snapToSoftTabBoundary(position: Position, viewModel: IViewModel): Position {\n\t\tconst lineContent = viewModel.getLineContent(position.lineNumber);\n\t\tconst { tabSize } = viewModel.model.getOptions();\n\t\tconst newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, Direction.Nearest);\n\t\tif (newPosition !== -1) {\n\t\t\treturn new Position(position.lineNumber, newPosition + 1);\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic static doHitTest(ctx: HitTestContext, request: BareHitTestRequest): HitTestResult {\n\n\t\tlet result: HitTestResult = new UnknownHitTestResult();\n\t\tif (typeof (<any>ctx.viewDomNode.ownerDocument).caretRangeFromPoint === 'function') {\n\t\t\tresult = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n\t\t} else if ((<any>ctx.viewDomNode.ownerDocument).caretPositionFromPoint) {\n\t\t\tresult = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n\t\t}\n\t\tif (result.type === HitTestResultType.Content) {\n\t\t\tconst injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n\n\t\t\tconst normalizedPosition = ctx.viewModel.normalizePosition(result.position, PositionAffinity.None);\n\t\t\tif (injectedText || !normalizedPosition.equals(result.position)) {\n\t\t\t\tresult = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction shadowCaretRangeFromPoint(shadowRoot: ShadowRoot, x: number, y: number): Range {\n\tconst range = document.createRange();\n\n\t// Get the element under the point\n\tlet el: HTMLElement | null = (<any>shadowRoot).elementFromPoint(x, y);\n\t// When el is not null, it may be div.monaco-mouse-cursor-text Element, which has not childNodes, we don't need to handle it.\n\tif (el?.hasChildNodes()) {\n\t\t// Get the last child of the element until its firstChild is a text node\n\t\t// This assumes that the pointer is on the right of the line, out of the tokens\n\t\t// and that we want to get the offset of the last token of the line\n\t\twhile (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n\t\t\tel = <HTMLElement>el.lastChild;\n\t\t}\n\n\t\t// Grab its rect\n\t\tconst rect = el.getBoundingClientRect();\n\n\t\t// And its font (the computed shorthand font property might be empty, see #3217)\n\t\tconst elWindow = dom.getWindow(el);\n\t\tconst fontStyle = elWindow.getComputedStyle(el, null).getPropertyValue('font-style');\n\t\tconst fontVariant = elWindow.getComputedStyle(el, null).getPropertyValue('font-variant');\n\t\tconst fontWeight = elWindow.getComputedStyle(el, null).getPropertyValue('font-weight');\n\t\tconst fontSize = elWindow.getComputedStyle(el, null).getPropertyValue('font-size');\n\t\tconst lineHeight = elWindow.getComputedStyle(el, null).getPropertyValue('line-height');\n\t\tconst fontFamily = elWindow.getComputedStyle(el, null).getPropertyValue('font-family');\n\t\tconst font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n\n\t\t// And also its txt content\n\t\tconst text = el.innerText;\n\n\t\t// Position the pixel cursor at the left of the element\n\t\tlet pixelCursor = rect.left;\n\t\tlet offset = 0;\n\t\tlet step: number;\n\n\t\t// If the point is on the right of the box put the cursor after the last character\n\t\tif (x > rect.left + rect.width) {\n\t\t\toffset = text.length;\n\t\t} else {\n\t\t\tconst charWidthReader = CharWidthReader.getInstance();\n\t\t\t// Goes through all the characters of the innerText, and checks if the x of the point\n\t\t\t// belongs to the character.\n\t\t\tfor (let i = 0; i < text.length + 1; i++) {\n\t\t\t\t// The step is half the width of the character\n\t\t\t\tstep = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n\t\t\t\t// Move to the center of the character\n\t\t\t\tpixelCursor += step;\n\t\t\t\t// If the x of the point is smaller that the position of the cursor, the point is over that character\n\t\t\t\tif (x < pixelCursor) {\n\t\t\t\t\toffset = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// Move between the current character and the next\n\t\t\t\tpixelCursor += step;\n\t\t\t}\n\t\t}\n\n\t\t// Creates a range with the text node of the element and set the offset found\n\t\trange.setStart(el.firstChild!, offset);\n\t\trange.setEnd(el.firstChild!, offset);\n\t}\n\n\treturn range;\n}\n\nclass CharWidthReader {\n\tprivate static _INSTANCE: CharWidthReader | null = null;\n\n\tpublic static getInstance(): CharWidthReader {\n\t\tif (!CharWidthReader._INSTANCE) {\n\t\t\tCharWidthReader._INSTANCE = new CharWidthReader();\n\t\t}\n\t\treturn CharWidthReader._INSTANCE;\n\t}\n\n\tprivate readonly _cache: { [cacheKey: string]: number };\n\tprivate readonly _canvas: HTMLCanvasElement;\n\n\tprivate constructor() {\n\t\tthis._cache = {};\n\t\tthis._canvas = document.createElement('canvas');\n\t}\n\n\tpublic getCharWidth(char: string, font: string): number {\n\t\tconst cacheKey = char + font;\n\t\tif (this._cache[cacheKey]) {\n\t\t\treturn this._cache[cacheKey];\n\t\t}\n\n\t\tconst context = this._canvas.getContext('2d')!;\n\t\tcontext.font = font;\n\t\tconst metrics = context.measureText(char);\n\t\tconst width = metrics.width;\n\t\tthis._cache[cacheKey] = width;\n\t\treturn width;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1047, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/dragScrolling.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/dragScrolling.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/vs/editor/browser/controller/dragScrolling.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { NavigationCommandRevealType } from '../coreCommands.js';\nimport { IMouseTarget, IMouseTargetOutsideEditor } from '../editorBrowser.js';\nimport { createCoordinatesRelativeToEditor, createEditorPagePosition, EditorMouseEvent, PageCoordinates } from '../editorDom.js';\nimport { IPointerHandlerHelper } from './mouseHandler.js';\nimport { MouseTarget, MouseTargetFactory } from './mouseTarget.js';\n\nexport abstract class DragScrolling extends Disposable {\n\n\tprivate _operation: DragScrollingOperation | null;\n\n\tconstructor(\n\t\tprotected readonly _context: ViewContext,\n\t\tprotected readonly _viewHelper: IPointerHandlerHelper,\n\t\tprotected readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tprotected readonly _dispatchMouse: (position: IMouseTarget, inSelectionMode: boolean, revealType: NavigationCommandRevealType) => void\n\t) {\n\t\tsuper();\n\t\tthis._operation = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.stop();\n\t}\n\n\tpublic start(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): void {\n\t\tif (this._operation) {\n\t\t\tthis._operation.setPosition(position, mouseEvent);\n\t\t} else {\n\t\t\tthis._operation = this._createDragScrollingOperation(position, mouseEvent);\n\t\t}\n\t}\n\n\tpublic stop(): void {\n\t\tif (this._operation) {\n\t\t\tthis._operation.dispose();\n\t\t\tthis._operation = null;\n\t\t}\n\t}\n\n\tprotected abstract _createDragScrollingOperation(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): DragScrollingOperation;\n}\n\nexport abstract class DragScrollingOperation extends Disposable {\n\n\tprotected _position: IMouseTargetOutsideEditor;\n\tprotected _mouseEvent: EditorMouseEvent;\n\tprivate _lastTime: number;\n\tprotected _animationFrameDisposable: IDisposable;\n\n\tconstructor(\n\t\tprotected readonly _context: ViewContext,\n\t\tprotected readonly _viewHelper: IPointerHandlerHelper,\n\t\tprotected readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tprotected readonly _dispatchMouse: (position: IMouseTarget, inSelectionMode: boolean, revealType: NavigationCommandRevealType) => void,\n\t\tposition: IMouseTargetOutsideEditor,\n\t\tmouseEvent: EditorMouseEvent\n\t) {\n\t\tsuper();\n\t\tthis._position = position;\n\t\tthis._mouseEvent = mouseEvent;\n\t\tthis._lastTime = Date.now();\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseEvent.browserEvent), () => this._execute());\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._animationFrameDisposable.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic setPosition(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): void {\n\t\tthis._position = position;\n\t\tthis._mouseEvent = mouseEvent;\n\t}\n\n\t/**\n\t * update internal state and return elapsed ms since last time\n\t */\n\tprotected _tick(): number {\n\t\tconst now = Date.now();\n\t\tconst elapsed = now - this._lastTime;\n\t\tthis._lastTime = now;\n\t\treturn elapsed;\n\t}\n\n\tprotected abstract _execute(): void;\n\n}\n\nexport class TopBottomDragScrolling extends DragScrolling {\n\tprotected _createDragScrollingOperation(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): DragScrollingOperation {\n\t\treturn new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n\t}\n}\n\nexport class TopBottomDragScrollingOperation extends DragScrollingOperation {\n\n\t/**\n\t * get the number of lines per second to auto-scroll\n\t */\n\tprivate _getScrollSpeed(): number {\n\t\tconst lineHeight = this._context.configuration.options.get(EditorOption.lineHeight);\n\t\tconst viewportInLines = this._context.configuration.options.get(EditorOption.layoutInfo).height / lineHeight;\n\t\tconst outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n\n\t\tif (outsideDistanceInLines <= 1.5) {\n\t\t\treturn Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n\t\t}\n\t\tif (outsideDistanceInLines <= 3) {\n\t\t\treturn Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n\t\t}\n\t\treturn Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n\t}\n\n\tprotected _execute(): void {\n\t\tconst lineHeight = this._context.configuration.options.get(EditorOption.lineHeight);\n\t\tconst scrollSpeedInLines = this._getScrollSpeed();\n\t\tconst elapsed = this._tick();\n\t\tconst scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n\t\tconst scrollValue = (this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels);\n\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n\t\tthis._viewHelper.renderNow();\n\n\t\tconst viewportData = this._context.viewLayout.getLinesViewportData();\n\t\tconst edgeLineNumber = (this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber);\n\n\t\t// First, try to find a position that matches the horizontal position of the mouse\n\t\tlet mouseTarget: IMouseTarget;\n\t\t{\n\t\t\tconst editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n\t\t\tconst horizontalScrollbarHeight = this._context.configuration.options.get(EditorOption.layoutInfo).horizontalScrollbarHeight;\n\t\t\tconst pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n\t\t\tconst relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n\t\t\tmouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n\t\t}\n\t\tif (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n\t\t\tif (this._position.outsidePosition === 'above') {\n\t\t\t\tmouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n\t\t\t} else {\n\t\t\t\tmouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n\t\t\t}\n\t\t}\n\n\t\tthis._dispatchMouse(mouseTarget, true, NavigationCommandRevealType.None);\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), () => this._execute());\n\t}\n}\n\nexport class LeftRightDragScrolling extends DragScrolling {\n\tprotected _createDragScrollingOperation(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): DragScrollingOperation {\n\t\treturn new LeftRightDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n\t}\n}\n\nexport class LeftRightDragScrollingOperation extends DragScrollingOperation {\n\n\t/**\n\t * get the number of cols per second to auto-scroll\n\t */\n\tprivate _getScrollSpeed(): number {\n\t\tconst charWidth = this._context.configuration.options.get(EditorOption.fontInfo).typicalFullwidthCharacterWidth;\n\t\tconst viewportInChars = this._context.configuration.options.get(EditorOption.layoutInfo).contentWidth / charWidth;\n\t\tconst outsideDistanceInChars = this._position.outsideDistance / charWidth;\n\t\tif (outsideDistanceInChars <= 1.5) {\n\t\t\treturn Math.max(30, viewportInChars * (1 + outsideDistanceInChars));\n\t\t}\n\t\tif (outsideDistanceInChars <= 3) {\n\t\t\treturn Math.max(60, viewportInChars * (2 + outsideDistanceInChars));\n\t\t}\n\t\treturn Math.max(200, viewportInChars * (7 + outsideDistanceInChars));\n\t}\n\n\tprotected _execute(): void {\n\t\tconst charWidth = this._context.configuration.options.get(EditorOption.fontInfo).typicalFullwidthCharacterWidth;\n\t\tconst scrollSpeedInChars = this._getScrollSpeed();\n\t\tconst elapsed = this._tick();\n\t\tconst scrollInPixels = scrollSpeedInChars * (elapsed / 1000) * charWidth * 0.5;\n\t\tconst scrollValue = (this._position.outsidePosition === 'left' ? -scrollInPixels : scrollInPixels);\n\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(scrollValue, 0);\n\t\tthis._viewHelper.renderNow();\n\n\t\tif (!this._position.position) {\n\t\t\treturn;\n\t\t}\n\t\tconst edgeLineNumber = this._position.position.lineNumber;\n\n\t\t// First, try to find a position that matches the horizontal position of the mouse\n\t\tlet mouseTarget: IMouseTarget;\n\t\t{\n\t\t\tconst editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n\t\t\tconst horizontalScrollbarHeight = this._context.configuration.options.get(EditorOption.layoutInfo).horizontalScrollbarHeight;\n\t\t\tconst pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n\t\t\tconst relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n\t\t\tmouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n\t\t}\n\n\t\tif (this._position.outsidePosition === 'left') {\n\t\t\tmouseTarget = MouseTarget.createOutsideEditor(mouseTarget.mouseColumn, new Position(edgeLineNumber, mouseTarget.mouseColumn), 'left', this._position.outsideDistance);\n\t\t} else {\n\t\t\tmouseTarget = MouseTarget.createOutsideEditor(mouseTarget.mouseColumn, new Position(edgeLineNumber, mouseTarget.mouseColumn), 'right', this._position.outsideDistance);\n\t\t}\n\n\t\tthis._dispatchMouse(mouseTarget, true, NavigationCommandRevealType.None);\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), () => this._execute());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\nimport { Position } from '../../common/core/position.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { NavigationCommandRevealType } from '../coreCommands.js';\nimport { IMouseTarget, IMouseTargetOutsideEditor } from '../editorBrowser.js';\nimport { createCoordinatesRelativeToEditor, createEditorPagePosition, EditorMouseEvent, PageCoordinates } from '../editorDom.js';\nimport { IPointerHandlerHelper } from './mouseHandler.js';\nimport { MouseTarget, MouseTargetFactory } from './mouseTarget.js';\n\nexport abstract class DragScrolling extends Disposable {\n\n\tprivate _operation: DragScrollingOperation | null;\n\n\tconstructor(\n\t\tprotected readonly _context: ViewContext,\n\t\tprotected readonly _viewHelper: IPointerHandlerHelper,\n\t\tprotected readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tprotected readonly _dispatchMouse: (position: IMouseTarget, inSelectionMode: boolean, revealType: NavigationCommandRevealType) => void\n\t) {\n\t\tsuper();\n\t\tthis._operation = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.stop();\n\t}\n\n\tpublic start(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): void {\n\t\tif (this._operation) {\n\t\t\tthis._operation.setPosition(position, mouseEvent);\n\t\t} else {\n\t\t\tthis._operation = this._createDragScrollingOperation(position, mouseEvent);\n\t\t}\n\t}\n\n\tpublic stop(): void {\n\t\tif (this._operation) {\n\t\t\tthis._operation.dispose();\n\t\t\tthis._operation = null;\n\t\t}\n\t}\n\n\tprotected abstract _createDragScrollingOperation(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): DragScrollingOperation;\n}\n\nexport abstract class DragScrollingOperation extends Disposable {\n\n\tprotected _position: IMouseTargetOutsideEditor;\n\tprotected _mouseEvent: EditorMouseEvent;\n\tprivate _lastTime: number;\n\tprotected _animationFrameDisposable: IDisposable;\n\n\tconstructor(\n\t\tprotected readonly _context: ViewContext,\n\t\tprotected readonly _viewHelper: IPointerHandlerHelper,\n\t\tprotected readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tprotected readonly _dispatchMouse: (position: IMouseTarget, inSelectionMode: boolean, revealType: NavigationCommandRevealType) => void,\n\t\tposition: IMouseTargetOutsideEditor,\n\t\tmouseEvent: EditorMouseEvent\n\t) {\n\t\tsuper();\n\t\tthis._position = position;\n\t\tthis._mouseEvent = mouseEvent;\n\t\tthis._lastTime = Date.now();\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseEvent.browserEvent), () => this._execute());\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._animationFrameDisposable.dispose();\n\t\tsuper.dispose();\n\t}\n\n\tpublic setPosition(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): void {\n\t\tthis._position = position;\n\t\tthis._mouseEvent = mouseEvent;\n\t}\n\n\t/**\n\t * update internal state and return elapsed ms since last time\n\t */\n\tprotected _tick(): number {\n\t\tconst now = Date.now();\n\t\tconst elapsed = now - this._lastTime;\n\t\tthis._lastTime = now;\n\t\treturn elapsed;\n\t}\n\n\tprotected abstract _execute(): void;\n\n}\n\nexport class TopBottomDragScrolling extends DragScrolling {\n\tprotected _createDragScrollingOperation(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): DragScrollingOperation {\n\t\treturn new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n\t}\n}\n\nexport class TopBottomDragScrollingOperation extends DragScrollingOperation {\n\n\t/**\n\t * get the number of lines per second to auto-scroll\n\t */\n\tprivate _getScrollSpeed(): number {\n\t\tconst lineHeight = this._context.configuration.options.get(EditorOption.lineHeight);\n\t\tconst viewportInLines = this._context.configuration.options.get(EditorOption.layoutInfo).height / lineHeight;\n\t\tconst outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n\n\t\tif (outsideDistanceInLines <= 1.5) {\n\t\t\treturn Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n\t\t}\n\t\tif (outsideDistanceInLines <= 3) {\n\t\t\treturn Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n\t\t}\n\t\treturn Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n\t}\n\n\tprotected _execute(): void {\n\t\tconst lineHeight = this._context.configuration.options.get(EditorOption.lineHeight);\n\t\tconst scrollSpeedInLines = this._getScrollSpeed();\n\t\tconst elapsed = this._tick();\n\t\tconst scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n\t\tconst scrollValue = (this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels);\n\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n\t\tthis._viewHelper.renderNow();\n\n\t\tconst viewportData = this._context.viewLayout.getLinesViewportData();\n\t\tconst edgeLineNumber = (this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber);\n\n\t\t// First, try to find a position that matches the horizontal position of the mouse\n\t\tlet mouseTarget: IMouseTarget;\n\t\t{\n\t\t\tconst editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n\t\t\tconst horizontalScrollbarHeight = this._context.configuration.options.get(EditorOption.layoutInfo).horizontalScrollbarHeight;\n\t\t\tconst pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n\t\t\tconst relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n\t\t\tmouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n\t\t}\n\t\tif (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n\t\t\tif (this._position.outsidePosition === 'above') {\n\t\t\t\tmouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n\t\t\t} else {\n\t\t\t\tmouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n\t\t\t}\n\t\t}\n\n\t\tthis._dispatchMouse(mouseTarget, true, NavigationCommandRevealType.None);\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), () => this._execute());\n\t}\n}\n\nexport class LeftRightDragScrolling extends DragScrolling {\n\tprotected _createDragScrollingOperation(position: IMouseTargetOutsideEditor, mouseEvent: EditorMouseEvent): DragScrollingOperation {\n\t\treturn new LeftRightDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n\t}\n}\n\nexport class LeftRightDragScrollingOperation extends DragScrollingOperation {\n\n\t/**\n\t * get the number of cols per second to auto-scroll\n\t */\n\tprivate _getScrollSpeed(): number {\n\t\tconst charWidth = this._context.configuration.options.get(EditorOption.fontInfo).typicalFullwidthCharacterWidth;\n\t\tconst viewportInChars = this._context.configuration.options.get(EditorOption.layoutInfo).contentWidth / charWidth;\n\t\tconst outsideDistanceInChars = this._position.outsideDistance / charWidth;\n\t\tif (outsideDistanceInChars <= 1.5) {\n\t\t\treturn Math.max(30, viewportInChars * (1 + outsideDistanceInChars));\n\t\t}\n\t\tif (outsideDistanceInChars <= 3) {\n\t\t\treturn Math.max(60, viewportInChars * (2 + outsideDistanceInChars));\n\t\t}\n\t\treturn Math.max(200, viewportInChars * (7 + outsideDistanceInChars));\n\t}\n\n\tprotected _execute(): void {\n\t\tconst charWidth = this._context.configuration.options.get(EditorOption.fontInfo).typicalFullwidthCharacterWidth;\n\t\tconst scrollSpeedInChars = this._getScrollSpeed();\n\t\tconst elapsed = this._tick();\n\t\tconst scrollInPixels = scrollSpeedInChars * (elapsed / 1000) * charWidth * 0.5;\n\t\tconst scrollValue = (this._position.outsidePosition === 'left' ? -scrollInPixels : scrollInPixels);\n\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(scrollValue, 0);\n\t\tthis._viewHelper.renderNow();\n\n\t\tif (!this._position.position) {\n\t\t\treturn;\n\t\t}\n\t\tconst edgeLineNumber = this._position.position.lineNumber;\n\n\t\t// First, try to find a position that matches the horizontal position of the mouse\n\t\tlet mouseTarget: IMouseTarget;\n\t\t{\n\t\t\tconst editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n\t\t\tconst horizontalScrollbarHeight = this._context.configuration.options.get(EditorOption.layoutInfo).horizontalScrollbarHeight;\n\t\t\tconst pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n\t\t\tconst relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n\t\t\tmouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n\t\t}\n\n\t\tif (this._position.outsidePosition === 'left') {\n\t\t\tmouseTarget = MouseTarget.createOutsideEditor(mouseTarget.mouseColumn, new Position(edgeLineNumber, mouseTarget.mouseColumn), 'left', this._position.outsideDistance);\n\t\t} else {\n\t\t\tmouseTarget = MouseTarget.createOutsideEditor(mouseTarget.mouseColumn, new Position(edgeLineNumber, mouseTarget.mouseColumn), 'right', this._position.outsideDistance);\n\t\t}\n\n\t\tthis._dispatchMouse(mouseTarget, true, NavigationCommandRevealType.None);\n\t\tthis._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(dom.getWindow(mouseTarget.element), () => this._execute());\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/mouseHandler.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/vs/editor/browser/controller/mouseHandler.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent, IMouseWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory, PointerHandlerLastRenderData } from './mouseTarget.js';\nimport { IMouseTarget, IMouseTargetViewZoneData, MouseTargetType } from '../editorBrowser.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor } from '../editorDom.js';\nimport { ViewController } from '../view/viewController.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { HorizontalPosition } from '../view/renderingContext.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../common/viewEvents.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\nimport { NavigationCommandRevealType } from '../coreCommands.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ViewLinesGpu } from '../viewParts/viewLinesGpu/viewLinesGpu.js';\nimport { TopBottomDragScrolling, LeftRightDragScrolling } from './dragScrolling.js';\n\nexport interface IPointerHandlerHelper {\n\tviewDomNode: HTMLElement;\n\tlinesContentDomNode: HTMLElement;\n\tviewLinesDomNode: HTMLElement;\n\tviewLinesGpu: ViewLinesGpu | undefined;\n\n\tfocusTextArea(): void;\n\tdispatchTextAreaEvent(event: CustomEvent): void;\n\n\t/**\n\t * Get the last rendered information for cursors & textarea.\n\t */\n\tgetLastRenderData(): PointerHandlerLastRenderData;\n\n\t/**\n\t * Render right now\n\t */\n\trenderNow(): void;\n\n\tshouldSuppressMouseDownOnViewZone(viewZoneId: string): boolean;\n\tshouldSuppressMouseDownOnWidget(widgetId: string): boolean;\n\n\t/**\n\t * Decode a position from a rendered dom node\n\t */\n\tgetPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null;\n\n\tvisibleRangeForPosition(lineNumber: number, column: number): HorizontalPosition | null;\n\tgetLineWidth(lineNumber: number): number;\n}\n\nexport class MouseHandler extends ViewEventHandler {\n\n\tprotected _context: ViewContext;\n\tprotected viewController: ViewController;\n\tprotected viewHelper: IPointerHandlerHelper;\n\tprotected mouseTargetFactory: MouseTargetFactory;\n\tprotected readonly _mouseDownOperation: MouseDownOperation;\n\tprivate lastMouseLeaveTime: number;\n\tprivate _height: number;\n\tprivate _mouseLeaveMonitor: IDisposable | null = null;\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis.viewController = viewController;\n\t\tthis.viewHelper = viewHelper;\n\t\tthis.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n\n\t\tthis._mouseDownOperation = this._register(new MouseDownOperation(\n\t\t\tthis._context,\n\t\t\tthis.viewController,\n\t\t\tthis.viewHelper,\n\t\t\tthis.mouseTargetFactory,\n\t\t\t(e, testEventTarget) => this._createMouseTarget(e, testEventTarget),\n\t\t\t(e) => this._getMouseColumn(e)\n\t\t));\n\n\t\tthis.lastMouseLeaveTime = -1;\n\t\tthis._height = this._context.configuration.options.get(EditorOption.layoutInfo).height;\n\n\t\tconst mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n\n\t\tthis._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n\n\t\tthis._register(mouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n\t\t\tthis._onMouseMove(e);\n\n\t\t\t// See https://github.com/microsoft/vscode/issues/138789\n\t\t\t// When moving the mouse really quickly, the browser sometimes forgets to\n\t\t\t// send us a `mouseleave` or `mouseout` event. We therefore install here\n\t\t\t// a global `mousemove` listener to manually recover if the mouse goes outside\n\t\t\t// the editor. As soon as the mouse leaves outside of the editor, we\n\t\t\t// remove this listener\n\n\t\t\tif (!this._mouseLeaveMonitor) {\n\t\t\t\tthis._mouseLeaveMonitor = dom.addDisposableListener(this.viewHelper.viewDomNode.ownerDocument, 'mousemove', (e) => {\n\t\t\t\t\tif (!this.viewHelper.viewDomNode.contains(e.target as Node | null)) {\n\t\t\t\t\t\t// went outside the editor!\n\t\t\t\t\t\tthis._onMouseLeave(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n\n\t\tthis._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n\n\t\t// `pointerdown` events can't be used to determine if there's a double click, or triple click\n\t\t// because their `e.detail` is always 0.\n\t\t// We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n\t\t// for `element.setPointerCapture`.\n\t\tlet capturePointerId: number = 0;\n\t\tthis._register(mouseEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => {\n\t\t\tcapturePointerId = pointerId;\n\t\t}));\n\t\t// The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n\t\t// I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n\t\t// the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n\t\t// See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n\t\t// To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, (e: PointerEvent) => {\n\t\t\tthis._mouseDownOperation.onPointerUp();\n\t\t}));\n\t\tthis._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e, capturePointerId)));\n\t\tthis._setupMouseWheelZoomListener();\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _setupMouseWheelZoomListener(): void {\n\n\t\tconst classifier = MouseWheelClassifier.INSTANCE;\n\n\t\tlet prevMouseWheelTime = 0;\n\t\tlet gestureStartZoomLevel = EditorZoom.getZoomLevel();\n\t\tlet gestureHasZoomModifiers = false;\n\t\tlet gestureAccumulatedDelta = 0;\n\n\t\tconst onMouseWheel = (browserEvent: IMouseWheelEvent) => {\n\t\t\tthis.viewController.emitMouseWheel(browserEvent);\n\n\t\t\tif (!this._context.configuration.options.get(EditorOption.mouseWheelZoom)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst e = new StandardWheelEvent(browserEvent);\n\t\t\tclassifier.acceptStandardWheelEvent(e);\n\n\t\t\tif (classifier.isPhysicalMouseWheel()) {\n\t\t\t\tif (hasMouseWheelZoomModifiers(browserEvent)) {\n\t\t\t\t\tconst zoomLevel: number = EditorZoom.getZoomLevel();\n\t\t\t\t\tconst delta = e.deltaY > 0 ? 1 : -1;\n\t\t\t\t\tEditorZoom.setZoomLevel(zoomLevel + delta);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n\t\t\t\t// we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n\t\t\t\t// we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n\t\t\t\tif (Date.now() - prevMouseWheelTime > 50) {\n\t\t\t\t\t// reset if more than 50ms have passed\n\t\t\t\t\tgestureStartZoomLevel = EditorZoom.getZoomLevel();\n\t\t\t\t\tgestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n\t\t\t\t\tgestureAccumulatedDelta = 0;\n\t\t\t\t}\n\n\t\t\t\tprevMouseWheelTime = Date.now();\n\t\t\t\tgestureAccumulatedDelta += e.deltaY;\n\n\t\t\t\tif (gestureHasZoomModifiers) {\n\t\t\t\t\tEditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\n\n\t\tfunction hasMouseWheelZoomModifiers(browserEvent: IMouseWheelEvent): boolean {\n\t\t\treturn (\n\t\t\t\tplatform.isMacintosh\n\t\t\t\t\t// on macOS we support cmd + two fingers scroll (`metaKey` set)\n\t\t\t\t\t// and also the two fingers pinch gesture (`ctrKey` set)\n\t\t\t\t\t? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n\t\t\t\t\t: (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey)\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tif (this._mouseLeaveMonitor) {\n\t\t\tthis._mouseLeaveMonitor.dispose();\n\t\t\tthis._mouseLeaveMonitor = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\t// layout change\n\t\t\tconst height = this._context.configuration.options.get(EditorOption.layoutInfo).height;\n\t\t\tif (this._height !== height) {\n\t\t\t\tthis._height = height;\n\t\t\t\tthis._mouseDownOperation.onHeightChanged();\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._mouseDownOperation.onCursorStateChanged(e);\n\t\treturn false;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\treturn false;\n\t}\n\t// --- end event handlers\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): IMouseTarget | null {\n\t\tconst clientPos = new ClientCoordinates(clientX, clientY);\n\t\tconst pos = clientPos.toPageCoordinates(dom.getWindow(this.viewHelper.viewDomNode));\n\t\tconst editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n\n\t\tif (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n\t\treturn this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n\t}\n\n\tprotected _createMouseTarget(e: EditorMouseEvent, testEventTarget: boolean): IMouseTarget {\n\t\tlet target = e.target;\n\t\tif (!this.viewHelper.viewDomNode.contains(target)) {\n\t\t\tconst shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n\t\t\tif (shadowRoot) {\n\t\t\t\ttarget = (<any>shadowRoot).elementsFromPoint(e.posx, e.posy).find(\n\t\t\t\t\t(el: Element) => this.viewHelper.viewDomNode.contains(el)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n\t}\n\n\tprivate _getMouseColumn(e: EditorMouseEvent): number {\n\t\treturn this.mouseTargetFactory.getMouseColumn(e.relativePos);\n\t}\n\n\tprotected _onContextMenu(e: EditorMouseEvent, testEventTarget: boolean): void {\n\t\tthis.viewController.emitContextMenu({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, testEventTarget)\n\t\t});\n\t}\n\n\tprotected _onMouseMove(e: EditorMouseEvent): void {\n\t\tconst targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n\t\tif (!targetIsWidget) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (this._mouseDownOperation.isActive()) {\n\t\t\t// In selection/drag operation\n\t\t\treturn;\n\t\t}\n\t\tconst actualMouseMoveTime = e.timestamp;\n\t\tif (actualMouseMoveTime < this.lastMouseLeaveTime) {\n\t\t\t// Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewController.emitMouseMove({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true)\n\t\t});\n\t}\n\n\tprotected _onMouseLeave(e: EditorMouseEvent): void {\n\t\tif (this._mouseLeaveMonitor) {\n\t\t\tthis._mouseLeaveMonitor.dispose();\n\t\t\tthis._mouseLeaveMonitor = null;\n\t\t}\n\t\tthis.lastMouseLeaveTime = (new Date()).getTime();\n\t\tthis.viewController.emitMouseLeave({\n\t\t\tevent: e,\n\t\t\ttarget: null\n\t\t});\n\t}\n\n\tprotected _onMouseUp(e: EditorMouseEvent): void {\n\t\tthis.viewController.emitMouseUp({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true)\n\t\t});\n\t}\n\n\tprotected _onMouseDown(e: EditorMouseEvent, pointerId: number): void {\n\t\tconst t = this._createMouseTarget(e, true);\n\n\t\tconst targetIsContent = (t.type === MouseTargetType.CONTENT_TEXT || t.type === MouseTargetType.CONTENT_EMPTY);\n\t\tconst targetIsGutter = (t.type === MouseTargetType.GUTTER_GLYPH_MARGIN || t.type === MouseTargetType.GUTTER_LINE_NUMBERS || t.type === MouseTargetType.GUTTER_LINE_DECORATIONS);\n\t\tconst targetIsLineNumbers = (t.type === MouseTargetType.GUTTER_LINE_NUMBERS);\n\t\tconst selectOnLineNumbers = this._context.configuration.options.get(EditorOption.selectOnLineNumbers);\n\t\tconst targetIsViewZone = (t.type === MouseTargetType.CONTENT_VIEW_ZONE || t.type === MouseTargetType.GUTTER_VIEW_ZONE);\n\t\tconst targetIsWidget = (t.type === MouseTargetType.CONTENT_WIDGET);\n\n\t\tlet shouldHandle = e.leftButton || e.middleButton;\n\t\tif (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n\t\t\tshouldHandle = false;\n\t\t}\n\n\t\tconst focus = () => {\n\t\t\te.preventDefault();\n\t\t\tthis.viewHelper.focusTextArea();\n\t\t};\n\n\t\tif (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n\t\t\tfocus();\n\t\t\tthis._mouseDownOperation.start(t.type, e, pointerId);\n\n\t\t} else if (targetIsGutter) {\n\t\t\t// Do not steal focus\n\t\t\te.preventDefault();\n\t\t} else if (targetIsViewZone) {\n\t\t\tconst viewZoneData = t.detail;\n\t\t\tif (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\tfocus();\n\t\t\t\tthis._mouseDownOperation.start(t.type, e, pointerId);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t} else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(<string>t.detail)) {\n\t\t\tfocus();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tthis.viewController.emitMouseDown({\n\t\t\tevent: e,\n\t\t\ttarget: t\n\t\t});\n\t}\n}\n\nclass MouseDownOperation extends Disposable {\n\n\tprivate readonly _createMouseTarget: (e: EditorMouseEvent, testEventTarget: boolean) => IMouseTarget;\n\tprivate readonly _getMouseColumn: (e: EditorMouseEvent) => number;\n\n\tprivate readonly _mouseMoveMonitor: GlobalEditorPointerMoveMonitor;\n\tprivate readonly _topBottomDragScrolling: TopBottomDragScrolling;\n\tprivate readonly _leftRightDragScrolling: LeftRightDragScrolling;\n\tprivate readonly _mouseState: MouseDownState;\n\n\tprivate _currentSelection: Selection;\n\tprivate _isActive: boolean;\n\tprivate _lastMouseEvent: EditorMouseEvent | null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\tprivate readonly _viewHelper: IPointerHandlerHelper,\n\t\tprivate readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tcreateMouseTarget: (e: EditorMouseEvent, testEventTarget: boolean) => IMouseTarget,\n\t\tgetMouseColumn: (e: EditorMouseEvent) => number\n\t) {\n\t\tsuper();\n\t\tthis._createMouseTarget = createMouseTarget;\n\t\tthis._getMouseColumn = getMouseColumn;\n\n\t\tthis._mouseMoveMonitor = this._register(new GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode));\n\t\tthis._topBottomDragScrolling = this._register(new TopBottomDragScrolling(\n\t\t\tthis._context,\n\t\t\tthis._viewHelper,\n\t\t\tthis._mouseTargetFactory,\n\t\t\t(position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)\n\t\t));\n\t\tthis._leftRightDragScrolling = this._register(new LeftRightDragScrolling(\n\t\t\tthis._context,\n\t\t\tthis._viewHelper,\n\t\t\tthis._mouseTargetFactory,\n\t\t\t(position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)\n\t\t));\n\t\tthis._mouseState = new MouseDownState();\n\n\t\tthis._currentSelection = new Selection(1, 1, 1, 1);\n\t\tthis._isActive = false;\n\t\tthis._lastMouseEvent = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic isActive(): boolean {\n\t\treturn this._isActive;\n\t}\n\n\tprivate _onMouseDownThenMove(e: EditorMouseEvent): void {\n\t\tthis._lastMouseEvent = e;\n\t\tthis._mouseState.setModifiers(e);\n\n\t\tconst position = this._findMousePosition(e, false);\n\t\tif (!position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._mouseState.isDragAndDrop) {\n\t\t\tthis._viewController.emitMouseDrag({\n\t\t\t\tevent: e,\n\t\t\t\ttarget: position\n\t\t\t});\n\t\t} else {\n\t\t\tif (position.type === MouseTargetType.OUTSIDE_EDITOR) {\n\t\t\t\tif (position.outsidePosition === 'above' || position.outsidePosition === 'below') {\n\t\t\t\t\tthis._topBottomDragScrolling.start(position, e);\n\t\t\t\t\tthis._leftRightDragScrolling.stop();\n\t\t\t\t} else {\n\t\t\t\t\tthis._leftRightDragScrolling.start(position, e);\n\t\t\t\t\tthis._topBottomDragScrolling.stop();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._topBottomDragScrolling.stop();\n\t\t\t\tthis._leftRightDragScrolling.stop();\n\t\t\t\tthis._dispatchMouse(position, true, NavigationCommandRevealType.Minimal);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic start(targetType: MouseTargetType, e: EditorMouseEvent, pointerId: number): void {\n\t\tthis._lastMouseEvent = e;\n\n\t\tthis._mouseState.setStartedOnLineNumbers(targetType === MouseTargetType.GUTTER_LINE_NUMBERS);\n\t\tthis._mouseState.setStartButtons(e);\n\t\tthis._mouseState.setModifiers(e);\n\t\tconst position = this._findMousePosition(e, true);\n\t\tif (!position || !position.position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.trySetCount(e.detail, position.position);\n\n\t\t// Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n\t\te.detail = this._mouseState.count;\n\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (!options.get(EditorOption.readOnly)\n\t\t\t&& options.get(EditorOption.dragAndDrop)\n\t\t\t&& !options.get(EditorOption.columnSelection)\n\t\t\t&& !this._mouseState.altKey // we don't support multiple mouse\n\t\t\t&& e.detail < 2 // only single click on a selection can work\n\t\t\t&& !this._isActive // the mouse is not down yet\n\t\t\t&& !this._currentSelection.isEmpty() // we don't drag single cursor\n\t\t\t&& (position.type === MouseTargetType.CONTENT_TEXT) // single click on text\n\t\t\t&& position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n\t\t) {\n\t\t\tthis._mouseState.isDragAndDrop = true;\n\t\t\tthis._isActive = true;\n\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tthis._viewHelper.viewLinesDomNode,\n\t\t\t\tpointerId,\n\t\t\t\te.buttons,\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t(browserEvent?: MouseEvent | KeyboardEvent) => {\n\t\t\t\t\tconst position = this._findMousePosition(this._lastMouseEvent!, false);\n\n\t\t\t\t\tif (dom.isKeyboardEvent(browserEvent)) {\n\t\t\t\t\t\t// cancel\n\t\t\t\t\t\tthis._viewController.emitMouseDropCanceled();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._viewController.emitMouseDrop({\n\t\t\t\t\t\t\tevent: this._lastMouseEvent!,\n\t\t\t\t\t\t\ttarget: (position ? this._createMouseTarget(this._lastMouseEvent!, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._stop();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.isDragAndDrop = false;\n\t\tthis._dispatchMouse(position, e.shiftKey, NavigationCommandRevealType.Minimal);\n\n\t\tif (!this._isActive) {\n\t\t\tthis._isActive = true;\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tthis._viewHelper.viewLinesDomNode,\n\t\t\t\tpointerId,\n\t\t\t\te.buttons,\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t() => this._stop()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _stop(): void {\n\t\tthis._isActive = false;\n\t\tthis._topBottomDragScrolling.stop();\n\t\tthis._leftRightDragScrolling.stop();\n\t}\n\n\tpublic onHeightChanged(): void {\n\t\tthis._mouseMoveMonitor.stopMonitoring();\n\t}\n\n\tpublic onPointerUp(): void {\n\t\tthis._mouseMoveMonitor.stopMonitoring();\n\t}\n\n\tpublic onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): void {\n\t\tthis._currentSelection = e.selections[0];\n\t}\n\n\tprivate _getPositionOutsideEditor(e: EditorMouseEvent): IMouseTarget | null {\n\t\tconst editorContent = e.editorPos;\n\t\tconst model = this._context.viewModel;\n\t\tconst viewLayout = this._context.viewLayout;\n\n\t\tconst mouseColumn = this._getMouseColumn(e);\n\n\t\tif (e.posy < editorContent.y) {\n\t\t\tconst outsideDistance = editorContent.y - e.posy;\n\t\t\tconst verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n\t\t}\n\n\t\tif (e.posy > editorContent.y + editorContent.height) {\n\t\t\tconst outsideDistance = e.posy - editorContent.y - editorContent.height;\n\t\t\tconst verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'below', outsideDistance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', outsideDistance);\n\t\t}\n\n\t\tconst possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n\n\t\tconst layoutInfo = this._context.configuration.options.get(EditorOption.layoutInfo);\n\n\t\tconst xLeftBoundary = layoutInfo.contentLeft;\n\t\tif (e.relativePos.x <= xLeftBoundary) {\n\t\t\tconst outsideDistance = xLeftBoundary - e.relativePos.x;\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', outsideDistance);\n\t\t}\n\n\t\tconst contentRight = (\n\t\t\tlayoutInfo.minimap.minimapLeft === 0\n\t\t\t\t? layoutInfo.width - layoutInfo.verticalScrollbarWidth // Happens when minimap is hidden\n\t\t\t\t: layoutInfo.minimap.minimapLeft\n\t\t);\n\t\tconst xRightBoundary = contentRight;\n\t\tif (e.relativePos.x >= xRightBoundary) {\n\t\t\tconst outsideDistance = e.relativePos.x - xRightBoundary;\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', outsideDistance);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMousePosition(e: EditorMouseEvent, testEventTarget: boolean): IMouseTarget | null {\n\t\tconst positionOutsideEditor = this._getPositionOutsideEditor(e);\n\t\tif (positionOutsideEditor) {\n\t\t\treturn positionOutsideEditor;\n\t\t}\n\n\t\tconst t = this._createMouseTarget(e, testEventTarget);\n\t\tconst hintedPosition = t.position;\n\t\tif (!hintedPosition) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (t.type === MouseTargetType.CONTENT_VIEW_ZONE || t.type === MouseTargetType.GUTTER_VIEW_ZONE) {\n\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(t.detail);\n\t\t\tif (newPosition) {\n\t\t\t\treturn MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n\t\t\t}\n\t\t}\n\n\t\treturn t;\n\t}\n\n\tprivate _helpPositionJumpOverViewZone(viewZoneData: IMouseTargetViewZoneData): Position | null {\n\t\t// Force position on view zones to go above or below depending on where selection started from\n\t\tconst selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n\t\tconst positionBefore = viewZoneData.positionBefore;\n\t\tconst positionAfter = viewZoneData.positionAfter;\n\n\t\tif (positionBefore && positionAfter) {\n\t\t\tif (positionBefore.isBefore(selectionStart)) {\n\t\t\t\treturn positionBefore;\n\t\t\t} else {\n\t\t\t\treturn positionAfter;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _dispatchMouse(position: IMouseTarget, inSelectionMode: boolean, revealType: NavigationCommandRevealType): void {\n\t\tif (!position.position) {\n\t\t\treturn;\n\t\t}\n\t\tthis._viewController.dispatchMouse({\n\t\t\tposition: position.position,\n\t\t\tmouseColumn: position.mouseColumn,\n\t\t\tstartedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n\t\t\trevealType,\n\n\t\t\tinSelectionMode: inSelectionMode,\n\t\t\tmouseDownCount: this._mouseState.count,\n\t\t\taltKey: this._mouseState.altKey,\n\t\t\tctrlKey: this._mouseState.ctrlKey,\n\t\t\tmetaKey: this._mouseState.metaKey,\n\t\t\tshiftKey: this._mouseState.shiftKey,\n\n\t\t\tleftButton: this._mouseState.leftButton,\n\t\t\tmiddleButton: this._mouseState.middleButton,\n\n\t\t\tonInjectedText: position.type === MouseTargetType.CONTENT_TEXT && position.detail.injectedText !== null\n\t\t});\n\t}\n}\n\nclass MouseDownState {\n\n\tprivate static readonly CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n\n\tprivate _altKey: boolean;\n\tpublic get altKey(): boolean { return this._altKey; }\n\n\tprivate _ctrlKey: boolean;\n\tpublic get ctrlKey(): boolean { return this._ctrlKey; }\n\n\tprivate _metaKey: boolean;\n\tpublic get metaKey(): boolean { return this._metaKey; }\n\n\tprivate _shiftKey: boolean;\n\tpublic get shiftKey(): boolean { return this._shiftKey; }\n\n\tprivate _leftButton: boolean;\n\tpublic get leftButton(): boolean { return this._leftButton; }\n\n\tprivate _middleButton: boolean;\n\tpublic get middleButton(): boolean { return this._middleButton; }\n\n\tprivate _startedOnLineNumbers: boolean;\n\tpublic get startedOnLineNumbers(): boolean { return this._startedOnLineNumbers; }\n\n\tprivate _lastMouseDownPosition: Position | null;\n\tprivate _lastMouseDownPositionEqualCount: number;\n\tprivate _lastMouseDownCount: number;\n\tprivate _lastSetMouseDownCountTime: number;\n\tpublic isDragAndDrop: boolean;\n\n\tconstructor() {\n\t\tthis._altKey = false;\n\t\tthis._ctrlKey = false;\n\t\tthis._metaKey = false;\n\t\tthis._shiftKey = false;\n\t\tthis._leftButton = false;\n\t\tthis._middleButton = false;\n\t\tthis._startedOnLineNumbers = false;\n\t\tthis._lastMouseDownPosition = null;\n\t\tthis._lastMouseDownPositionEqualCount = 0;\n\t\tthis._lastMouseDownCount = 0;\n\t\tthis._lastSetMouseDownCountTime = 0;\n\t\tthis.isDragAndDrop = false;\n\t}\n\n\tpublic get count(): number {\n\t\treturn this._lastMouseDownCount;\n\t}\n\n\tpublic setModifiers(source: EditorMouseEvent) {\n\t\tthis._altKey = source.altKey;\n\t\tthis._ctrlKey = source.ctrlKey;\n\t\tthis._metaKey = source.metaKey;\n\t\tthis._shiftKey = source.shiftKey;\n\t}\n\n\tpublic setStartButtons(source: EditorMouseEvent) {\n\t\tthis._leftButton = source.leftButton;\n\t\tthis._middleButton = source.middleButton;\n\t}\n\n\tpublic setStartedOnLineNumbers(startedOnLineNumbers: boolean): void {\n\t\tthis._startedOnLineNumbers = startedOnLineNumbers;\n\t}\n\n\tpublic trySetCount(setMouseDownCount: number, newMouseDownPosition: Position): void {\n\t\t// a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tconst currentTime = (new Date()).getTime();\n\t\tif (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n\t\t\tsetMouseDownCount = 1;\n\t\t}\n\t\tthis._lastSetMouseDownCountTime = currentTime;\n\n\t\t// b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tif (setMouseDownCount > this._lastMouseDownCount + 1) {\n\t\t\tsetMouseDownCount = this._lastMouseDownCount + 1;\n\t\t}\n\n\t\t// c. Invalidate multiple clicking if the logical position is different\n\t\tif (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n\t\t\tthis._lastMouseDownPositionEqualCount++;\n\t\t} else {\n\t\t\tthis._lastMouseDownPositionEqualCount = 1;\n\t\t}\n\t\tthis._lastMouseDownPosition = newMouseDownPosition;\n\n\t\t// Finally set the lastMouseDownCount\n\t\tthis._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent, IMouseWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory, PointerHandlerLastRenderData } from './mouseTarget.js';\nimport { IMouseTarget, IMouseTargetViewZoneData, MouseTargetType } from '../editorBrowser.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor } from '../editorDom.js';\nimport { ViewController } from '../view/viewController.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { HorizontalPosition } from '../view/renderingContext.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../common/viewEvents.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { EditorOption } from '../../common/config/editorOptions.js';\nimport { NavigationCommandRevealType } from '../coreCommands.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { ViewLinesGpu } from '../viewParts/viewLinesGpu/viewLinesGpu.js';\nimport { TopBottomDragScrolling, LeftRightDragScrolling } from './dragScrolling.js';\n\nexport interface IPointerHandlerHelper {\n\tviewDomNode: HTMLElement;\n\tlinesContentDomNode: HTMLElement;\n\tviewLinesDomNode: HTMLElement;\n\tviewLinesGpu: ViewLinesGpu | undefined;\n\n\tfocusTextArea(): void;\n\tdispatchTextAreaEvent(event: CustomEvent): void;\n\n\t/**\n\t * Get the last rendered information for cursors & textarea.\n\t */\n\tgetLastRenderData(): PointerHandlerLastRenderData;\n\n\t/**\n\t * Render right now\n\t */\n\trenderNow(): void;\n\n\tshouldSuppressMouseDownOnViewZone(viewZoneId: string): boolean;\n\tshouldSuppressMouseDownOnWidget(widgetId: string): boolean;\n\n\t/**\n\t * Decode a position from a rendered dom node\n\t */\n\tgetPositionFromDOMInfo(spanNode: HTMLElement, offset: number): Position | null;\n\n\tvisibleRangeForPosition(lineNumber: number, column: number): HorizontalPosition | null;\n\tgetLineWidth(lineNumber: number): number;\n}\n\nexport class MouseHandler extends ViewEventHandler {\n\n\tprotected _context: ViewContext;\n\tprotected viewController: ViewController;\n\tprotected viewHelper: IPointerHandlerHelper;\n\tprotected mouseTargetFactory: MouseTargetFactory;\n\tprotected readonly _mouseDownOperation: MouseDownOperation;\n\tprivate lastMouseLeaveTime: number;\n\tprivate _height: number;\n\tprivate _mouseLeaveMonitor: IDisposable | null = null;\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis.viewController = viewController;\n\t\tthis.viewHelper = viewHelper;\n\t\tthis.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n\n\t\tthis._mouseDownOperation = this._register(new MouseDownOperation(\n\t\t\tthis._context,\n\t\t\tthis.viewController,\n\t\t\tthis.viewHelper,\n\t\t\tthis.mouseTargetFactory,\n\t\t\t(e, testEventTarget) => this._createMouseTarget(e, testEventTarget),\n\t\t\t(e) => this._getMouseColumn(e)\n\t\t));\n\n\t\tthis.lastMouseLeaveTime = -1;\n\t\tthis._height = this._context.configuration.options.get(EditorOption.layoutInfo).height;\n\n\t\tconst mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n\n\t\tthis._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n\n\t\tthis._register(mouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n\t\t\tthis._onMouseMove(e);\n\n\t\t\t// See https://github.com/microsoft/vscode/issues/138789\n\t\t\t// When moving the mouse really quickly, the browser sometimes forgets to\n\t\t\t// send us a `mouseleave` or `mouseout` event. We therefore install here\n\t\t\t// a global `mousemove` listener to manually recover if the mouse goes outside\n\t\t\t// the editor. As soon as the mouse leaves outside of the editor, we\n\t\t\t// remove this listener\n\n\t\t\tif (!this._mouseLeaveMonitor) {\n\t\t\t\tthis._mouseLeaveMonitor = dom.addDisposableListener(this.viewHelper.viewDomNode.ownerDocument, 'mousemove', (e) => {\n\t\t\t\t\tif (!this.viewHelper.viewDomNode.contains(e.target as Node | null)) {\n\t\t\t\t\t\t// went outside the editor!\n\t\t\t\t\t\tthis._onMouseLeave(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n\n\t\tthis._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n\n\t\t// `pointerdown` events can't be used to determine if there's a double click, or triple click\n\t\t// because their `e.detail` is always 0.\n\t\t// We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n\t\t// for `element.setPointerCapture`.\n\t\tlet capturePointerId: number = 0;\n\t\tthis._register(mouseEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => {\n\t\t\tcapturePointerId = pointerId;\n\t\t}));\n\t\t// The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n\t\t// I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n\t\t// the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n\t\t// See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n\t\t// To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, (e: PointerEvent) => {\n\t\t\tthis._mouseDownOperation.onPointerUp();\n\t\t}));\n\t\tthis._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e, capturePointerId)));\n\t\tthis._setupMouseWheelZoomListener();\n\n\t\tthis._context.addEventHandler(this);\n\t}\n\n\tprivate _setupMouseWheelZoomListener(): void {\n\n\t\tconst classifier = MouseWheelClassifier.INSTANCE;\n\n\t\tlet prevMouseWheelTime = 0;\n\t\tlet gestureStartZoomLevel = EditorZoom.getZoomLevel();\n\t\tlet gestureHasZoomModifiers = false;\n\t\tlet gestureAccumulatedDelta = 0;\n\n\t\tconst onMouseWheel = (browserEvent: IMouseWheelEvent) => {\n\t\t\tthis.viewController.emitMouseWheel(browserEvent);\n\n\t\t\tif (!this._context.configuration.options.get(EditorOption.mouseWheelZoom)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst e = new StandardWheelEvent(browserEvent);\n\t\t\tclassifier.acceptStandardWheelEvent(e);\n\n\t\t\tif (classifier.isPhysicalMouseWheel()) {\n\t\t\t\tif (hasMouseWheelZoomModifiers(browserEvent)) {\n\t\t\t\t\tconst zoomLevel: number = EditorZoom.getZoomLevel();\n\t\t\t\t\tconst delta = e.deltaY > 0 ? 1 : -1;\n\t\t\t\t\tEditorZoom.setZoomLevel(zoomLevel + delta);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n\t\t\t\t// we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n\t\t\t\t// we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n\t\t\t\tif (Date.now() - prevMouseWheelTime > 50) {\n\t\t\t\t\t// reset if more than 50ms have passed\n\t\t\t\t\tgestureStartZoomLevel = EditorZoom.getZoomLevel();\n\t\t\t\t\tgestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n\t\t\t\t\tgestureAccumulatedDelta = 0;\n\t\t\t\t}\n\n\t\t\t\tprevMouseWheelTime = Date.now();\n\t\t\t\tgestureAccumulatedDelta += e.deltaY;\n\n\t\t\t\tif (gestureHasZoomModifiers) {\n\t\t\t\t\tEditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\n\n\t\tfunction hasMouseWheelZoomModifiers(browserEvent: IMouseWheelEvent): boolean {\n\t\t\treturn (\n\t\t\t\tplatform.isMacintosh\n\t\t\t\t\t// on macOS we support cmd + two fingers scroll (`metaKey` set)\n\t\t\t\t\t// and also the two fingers pinch gesture (`ctrKey` set)\n\t\t\t\t\t? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n\t\t\t\t\t: (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey)\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._context.removeEventHandler(this);\n\t\tif (this._mouseLeaveMonitor) {\n\t\t\tthis._mouseLeaveMonitor.dispose();\n\t\t\tthis._mouseLeaveMonitor = null;\n\t\t}\n\t\tsuper.dispose();\n\t}\n\n\t// --- begin event handlers\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tif (e.hasChanged(EditorOption.layoutInfo)) {\n\t\t\t// layout change\n\t\t\tconst height = this._context.configuration.options.get(EditorOption.layoutInfo).height;\n\t\t\tif (this._height !== height) {\n\t\t\t\tthis._height = height;\n\t\t\t\tthis._mouseDownOperation.onHeightChanged();\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._mouseDownOperation.onCursorStateChanged(e);\n\t\treturn false;\n\t}\n\tpublic override onFocusChanged(e: viewEvents.ViewFocusChangedEvent): boolean {\n\t\treturn false;\n\t}\n\t// --- end event handlers\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): IMouseTarget | null {\n\t\tconst clientPos = new ClientCoordinates(clientX, clientY);\n\t\tconst pos = clientPos.toPageCoordinates(dom.getWindow(this.viewHelper.viewDomNode));\n\t\tconst editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n\n\t\tif (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n\t\treturn this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n\t}\n\n\tprotected _createMouseTarget(e: EditorMouseEvent, testEventTarget: boolean): IMouseTarget {\n\t\tlet target = e.target;\n\t\tif (!this.viewHelper.viewDomNode.contains(target)) {\n\t\t\tconst shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n\t\t\tif (shadowRoot) {\n\t\t\t\ttarget = (<any>shadowRoot).elementsFromPoint(e.posx, e.posy).find(\n\t\t\t\t\t(el: Element) => this.viewHelper.viewDomNode.contains(el)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n\t}\n\n\tprivate _getMouseColumn(e: EditorMouseEvent): number {\n\t\treturn this.mouseTargetFactory.getMouseColumn(e.relativePos);\n\t}\n\n\tprotected _onContextMenu(e: EditorMouseEvent, testEventTarget: boolean): void {\n\t\tthis.viewController.emitContextMenu({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, testEventTarget)\n\t\t});\n\t}\n\n\tprotected _onMouseMove(e: EditorMouseEvent): void {\n\t\tconst targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n\t\tif (!targetIsWidget) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (this._mouseDownOperation.isActive()) {\n\t\t\t// In selection/drag operation\n\t\t\treturn;\n\t\t}\n\t\tconst actualMouseMoveTime = e.timestamp;\n\t\tif (actualMouseMoveTime < this.lastMouseLeaveTime) {\n\t\t\t// Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.viewController.emitMouseMove({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true)\n\t\t});\n\t}\n\n\tprotected _onMouseLeave(e: EditorMouseEvent): void {\n\t\tif (this._mouseLeaveMonitor) {\n\t\t\tthis._mouseLeaveMonitor.dispose();\n\t\t\tthis._mouseLeaveMonitor = null;\n\t\t}\n\t\tthis.lastMouseLeaveTime = (new Date()).getTime();\n\t\tthis.viewController.emitMouseLeave({\n\t\t\tevent: e,\n\t\t\ttarget: null\n\t\t});\n\t}\n\n\tprotected _onMouseUp(e: EditorMouseEvent): void {\n\t\tthis.viewController.emitMouseUp({\n\t\t\tevent: e,\n\t\t\ttarget: this._createMouseTarget(e, true)\n\t\t});\n\t}\n\n\tprotected _onMouseDown(e: EditorMouseEvent, pointerId: number): void {\n\t\tconst t = this._createMouseTarget(e, true);\n\n\t\tconst targetIsContent = (t.type === MouseTargetType.CONTENT_TEXT || t.type === MouseTargetType.CONTENT_EMPTY);\n\t\tconst targetIsGutter = (t.type === MouseTargetType.GUTTER_GLYPH_MARGIN || t.type === MouseTargetType.GUTTER_LINE_NUMBERS || t.type === MouseTargetType.GUTTER_LINE_DECORATIONS);\n\t\tconst targetIsLineNumbers = (t.type === MouseTargetType.GUTTER_LINE_NUMBERS);\n\t\tconst selectOnLineNumbers = this._context.configuration.options.get(EditorOption.selectOnLineNumbers);\n\t\tconst targetIsViewZone = (t.type === MouseTargetType.CONTENT_VIEW_ZONE || t.type === MouseTargetType.GUTTER_VIEW_ZONE);\n\t\tconst targetIsWidget = (t.type === MouseTargetType.CONTENT_WIDGET);\n\n\t\tlet shouldHandle = e.leftButton || e.middleButton;\n\t\tif (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n\t\t\tshouldHandle = false;\n\t\t}\n\n\t\tconst focus = () => {\n\t\t\te.preventDefault();\n\t\t\tthis.viewHelper.focusTextArea();\n\t\t};\n\n\t\tif (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n\t\t\tfocus();\n\t\t\tthis._mouseDownOperation.start(t.type, e, pointerId);\n\n\t\t} else if (targetIsGutter) {\n\t\t\t// Do not steal focus\n\t\t\te.preventDefault();\n\t\t} else if (targetIsViewZone) {\n\t\t\tconst viewZoneData = t.detail;\n\t\t\tif (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n\t\t\t\tfocus();\n\t\t\t\tthis._mouseDownOperation.start(t.type, e, pointerId);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t} else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(<string>t.detail)) {\n\t\t\tfocus();\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tthis.viewController.emitMouseDown({\n\t\t\tevent: e,\n\t\t\ttarget: t\n\t\t});\n\t}\n}\n\nclass MouseDownOperation extends Disposable {\n\n\tprivate readonly _createMouseTarget: (e: EditorMouseEvent, testEventTarget: boolean) => IMouseTarget;\n\tprivate readonly _getMouseColumn: (e: EditorMouseEvent) => number;\n\n\tprivate readonly _mouseMoveMonitor: GlobalEditorPointerMoveMonitor;\n\tprivate readonly _topBottomDragScrolling: TopBottomDragScrolling;\n\tprivate readonly _leftRightDragScrolling: LeftRightDragScrolling;\n\tprivate readonly _mouseState: MouseDownState;\n\n\tprivate _currentSelection: Selection;\n\tprivate _isActive: boolean;\n\tprivate _lastMouseEvent: EditorMouseEvent | null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\tprivate readonly _viewHelper: IPointerHandlerHelper,\n\t\tprivate readonly _mouseTargetFactory: MouseTargetFactory,\n\t\tcreateMouseTarget: (e: EditorMouseEvent, testEventTarget: boolean) => IMouseTarget,\n\t\tgetMouseColumn: (e: EditorMouseEvent) => number\n\t) {\n\t\tsuper();\n\t\tthis._createMouseTarget = createMouseTarget;\n\t\tthis._getMouseColumn = getMouseColumn;\n\n\t\tthis._mouseMoveMonitor = this._register(new GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode));\n\t\tthis._topBottomDragScrolling = this._register(new TopBottomDragScrolling(\n\t\t\tthis._context,\n\t\t\tthis._viewHelper,\n\t\t\tthis._mouseTargetFactory,\n\t\t\t(position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)\n\t\t));\n\t\tthis._leftRightDragScrolling = this._register(new LeftRightDragScrolling(\n\t\t\tthis._context,\n\t\t\tthis._viewHelper,\n\t\t\tthis._mouseTargetFactory,\n\t\t\t(position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)\n\t\t));\n\t\tthis._mouseState = new MouseDownState();\n\n\t\tthis._currentSelection = new Selection(1, 1, 1, 1);\n\t\tthis._isActive = false;\n\t\tthis._lastMouseEvent = null;\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\tpublic isActive(): boolean {\n\t\treturn this._isActive;\n\t}\n\n\tprivate _onMouseDownThenMove(e: EditorMouseEvent): void {\n\t\tthis._lastMouseEvent = e;\n\t\tthis._mouseState.setModifiers(e);\n\n\t\tconst position = this._findMousePosition(e, false);\n\t\tif (!position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._mouseState.isDragAndDrop) {\n\t\t\tthis._viewController.emitMouseDrag({\n\t\t\t\tevent: e,\n\t\t\t\ttarget: position\n\t\t\t});\n\t\t} else {\n\t\t\tif (position.type === MouseTargetType.OUTSIDE_EDITOR) {\n\t\t\t\tif (position.outsidePosition === 'above' || position.outsidePosition === 'below') {\n\t\t\t\t\tthis._topBottomDragScrolling.start(position, e);\n\t\t\t\t\tthis._leftRightDragScrolling.stop();\n\t\t\t\t} else {\n\t\t\t\t\tthis._leftRightDragScrolling.start(position, e);\n\t\t\t\t\tthis._topBottomDragScrolling.stop();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._topBottomDragScrolling.stop();\n\t\t\t\tthis._leftRightDragScrolling.stop();\n\t\t\t\tthis._dispatchMouse(position, true, NavigationCommandRevealType.Minimal);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic start(targetType: MouseTargetType, e: EditorMouseEvent, pointerId: number): void {\n\t\tthis._lastMouseEvent = e;\n\n\t\tthis._mouseState.setStartedOnLineNumbers(targetType === MouseTargetType.GUTTER_LINE_NUMBERS);\n\t\tthis._mouseState.setStartButtons(e);\n\t\tthis._mouseState.setModifiers(e);\n\t\tconst position = this._findMousePosition(e, true);\n\t\tif (!position || !position.position) {\n\t\t\t// Ignoring because position is unknown\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.trySetCount(e.detail, position.position);\n\n\t\t// Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n\t\te.detail = this._mouseState.count;\n\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (!options.get(EditorOption.readOnly)\n\t\t\t&& options.get(EditorOption.dragAndDrop)\n\t\t\t&& !options.get(EditorOption.columnSelection)\n\t\t\t&& !this._mouseState.altKey // we don't support multiple mouse\n\t\t\t&& e.detail < 2 // only single click on a selection can work\n\t\t\t&& !this._isActive // the mouse is not down yet\n\t\t\t&& !this._currentSelection.isEmpty() // we don't drag single cursor\n\t\t\t&& (position.type === MouseTargetType.CONTENT_TEXT) // single click on text\n\t\t\t&& position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n\t\t) {\n\t\t\tthis._mouseState.isDragAndDrop = true;\n\t\t\tthis._isActive = true;\n\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tthis._viewHelper.viewLinesDomNode,\n\t\t\t\tpointerId,\n\t\t\t\te.buttons,\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t(browserEvent?: MouseEvent | KeyboardEvent) => {\n\t\t\t\t\tconst position = this._findMousePosition(this._lastMouseEvent!, false);\n\n\t\t\t\t\tif (dom.isKeyboardEvent(browserEvent)) {\n\t\t\t\t\t\t// cancel\n\t\t\t\t\t\tthis._viewController.emitMouseDropCanceled();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._viewController.emitMouseDrop({\n\t\t\t\t\t\t\tevent: this._lastMouseEvent!,\n\t\t\t\t\t\t\ttarget: (position ? this._createMouseTarget(this._lastMouseEvent!, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._stop();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._mouseState.isDragAndDrop = false;\n\t\tthis._dispatchMouse(position, e.shiftKey, NavigationCommandRevealType.Minimal);\n\n\t\tif (!this._isActive) {\n\t\t\tthis._isActive = true;\n\t\t\tthis._mouseMoveMonitor.startMonitoring(\n\t\t\t\tthis._viewHelper.viewLinesDomNode,\n\t\t\t\tpointerId,\n\t\t\t\te.buttons,\n\t\t\t\t(e) => this._onMouseDownThenMove(e),\n\t\t\t\t() => this._stop()\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate _stop(): void {\n\t\tthis._isActive = false;\n\t\tthis._topBottomDragScrolling.stop();\n\t\tthis._leftRightDragScrolling.stop();\n\t}\n\n\tpublic onHeightChanged(): void {\n\t\tthis._mouseMoveMonitor.stopMonitoring();\n\t}\n\n\tpublic onPointerUp(): void {\n\t\tthis._mouseMoveMonitor.stopMonitoring();\n\t}\n\n\tpublic onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): void {\n\t\tthis._currentSelection = e.selections[0];\n\t}\n\n\tprivate _getPositionOutsideEditor(e: EditorMouseEvent): IMouseTarget | null {\n\t\tconst editorContent = e.editorPos;\n\t\tconst model = this._context.viewModel;\n\t\tconst viewLayout = this._context.viewLayout;\n\n\t\tconst mouseColumn = this._getMouseColumn(e);\n\n\t\tif (e.posy < editorContent.y) {\n\t\t\tconst outsideDistance = editorContent.y - e.posy;\n\t\t\tconst verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n\t\t}\n\n\t\tif (e.posy > editorContent.y + editorContent.height) {\n\t\t\tconst outsideDistance = e.posy - editorContent.y - editorContent.height;\n\t\t\tconst verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n\t\t\tconst viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n\t\t\tif (viewZoneData) {\n\t\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n\t\t\t\tif (newPosition) {\n\t\t\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'below', outsideDistance);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', outsideDistance);\n\t\t}\n\n\t\tconst possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n\n\t\tconst layoutInfo = this._context.configuration.options.get(EditorOption.layoutInfo);\n\n\t\tconst xLeftBoundary = layoutInfo.contentLeft;\n\t\tif (e.relativePos.x <= xLeftBoundary) {\n\t\t\tconst outsideDistance = xLeftBoundary - e.relativePos.x;\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', outsideDistance);\n\t\t}\n\n\t\tconst contentRight = (\n\t\t\tlayoutInfo.minimap.minimapLeft === 0\n\t\t\t\t? layoutInfo.width - layoutInfo.verticalScrollbarWidth // Happens when minimap is hidden\n\t\t\t\t: layoutInfo.minimap.minimapLeft\n\t\t);\n\t\tconst xRightBoundary = contentRight;\n\t\tif (e.relativePos.x >= xRightBoundary) {\n\t\t\tconst outsideDistance = e.relativePos.x - xRightBoundary;\n\t\t\treturn MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', outsideDistance);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate _findMousePosition(e: EditorMouseEvent, testEventTarget: boolean): IMouseTarget | null {\n\t\tconst positionOutsideEditor = this._getPositionOutsideEditor(e);\n\t\tif (positionOutsideEditor) {\n\t\t\treturn positionOutsideEditor;\n\t\t}\n\n\t\tconst t = this._createMouseTarget(e, testEventTarget);\n\t\tconst hintedPosition = t.position;\n\t\tif (!hintedPosition) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (t.type === MouseTargetType.CONTENT_VIEW_ZONE || t.type === MouseTargetType.GUTTER_VIEW_ZONE) {\n\t\t\tconst newPosition = this._helpPositionJumpOverViewZone(t.detail);\n\t\t\tif (newPosition) {\n\t\t\t\treturn MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n\t\t\t}\n\t\t}\n\n\t\treturn t;\n\t}\n\n\tprivate _helpPositionJumpOverViewZone(viewZoneData: IMouseTargetViewZoneData): Position | null {\n\t\t// Force position on view zones to go above or below depending on where selection started from\n\t\tconst selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n\t\tconst positionBefore = viewZoneData.positionBefore;\n\t\tconst positionAfter = viewZoneData.positionAfter;\n\n\t\tif (positionBefore && positionAfter) {\n\t\t\tif (positionBefore.isBefore(selectionStart)) {\n\t\t\t\treturn positionBefore;\n\t\t\t} else {\n\t\t\t\treturn positionAfter;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate _dispatchMouse(position: IMouseTarget, inSelectionMode: boolean, revealType: NavigationCommandRevealType): void {\n\t\tif (!position.position) {\n\t\t\treturn;\n\t\t}\n\t\tthis._viewController.dispatchMouse({\n\t\t\tposition: position.position,\n\t\t\tmouseColumn: position.mouseColumn,\n\t\t\tstartedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n\t\t\trevealType,\n\n\t\t\tinSelectionMode: inSelectionMode,\n\t\t\tmouseDownCount: this._mouseState.count,\n\t\t\taltKey: this._mouseState.altKey,\n\t\t\tctrlKey: this._mouseState.ctrlKey,\n\t\t\tmetaKey: this._mouseState.metaKey,\n\t\t\tshiftKey: this._mouseState.shiftKey,\n\n\t\t\tleftButton: this._mouseState.leftButton,\n\t\t\tmiddleButton: this._mouseState.middleButton,\n\n\t\t\tonInjectedText: position.type === MouseTargetType.CONTENT_TEXT && position.detail.injectedText !== null\n\t\t});\n\t}\n}\n\nclass MouseDownState {\n\n\tprivate static readonly CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n\n\tprivate _altKey: boolean;\n\tpublic get altKey(): boolean { return this._altKey; }\n\n\tprivate _ctrlKey: boolean;\n\tpublic get ctrlKey(): boolean { return this._ctrlKey; }\n\n\tprivate _metaKey: boolean;\n\tpublic get metaKey(): boolean { return this._metaKey; }\n\n\tprivate _shiftKey: boolean;\n\tpublic get shiftKey(): boolean { return this._shiftKey; }\n\n\tprivate _leftButton: boolean;\n\tpublic get leftButton(): boolean { return this._leftButton; }\n\n\tprivate _middleButton: boolean;\n\tpublic get middleButton(): boolean { return this._middleButton; }\n\n\tprivate _startedOnLineNumbers: boolean;\n\tpublic get startedOnLineNumbers(): boolean { return this._startedOnLineNumbers; }\n\n\tprivate _lastMouseDownPosition: Position | null;\n\tprivate _lastMouseDownPositionEqualCount: number;\n\tprivate _lastMouseDownCount: number;\n\tprivate _lastSetMouseDownCountTime: number;\n\tpublic isDragAndDrop: boolean;\n\n\tconstructor() {\n\t\tthis._altKey = false;\n\t\tthis._ctrlKey = false;\n\t\tthis._metaKey = false;\n\t\tthis._shiftKey = false;\n\t\tthis._leftButton = false;\n\t\tthis._middleButton = false;\n\t\tthis._startedOnLineNumbers = false;\n\t\tthis._lastMouseDownPosition = null;\n\t\tthis._lastMouseDownPositionEqualCount = 0;\n\t\tthis._lastMouseDownCount = 0;\n\t\tthis._lastSetMouseDownCountTime = 0;\n\t\tthis.isDragAndDrop = false;\n\t}\n\n\tpublic get count(): number {\n\t\treturn this._lastMouseDownCount;\n\t}\n\n\tpublic setModifiers(source: EditorMouseEvent) {\n\t\tthis._altKey = source.altKey;\n\t\tthis._ctrlKey = source.ctrlKey;\n\t\tthis._metaKey = source.metaKey;\n\t\tthis._shiftKey = source.shiftKey;\n\t}\n\n\tpublic setStartButtons(source: EditorMouseEvent) {\n\t\tthis._leftButton = source.leftButton;\n\t\tthis._middleButton = source.middleButton;\n\t}\n\n\tpublic setStartedOnLineNumbers(startedOnLineNumbers: boolean): void {\n\t\tthis._startedOnLineNumbers = startedOnLineNumbers;\n\t}\n\n\tpublic trySetCount(setMouseDownCount: number, newMouseDownPosition: Position): void {\n\t\t// a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tconst currentTime = (new Date()).getTime();\n\t\tif (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n\t\t\tsetMouseDownCount = 1;\n\t\t}\n\t\tthis._lastSetMouseDownCountTime = currentTime;\n\n\t\t// b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n\t\tif (setMouseDownCount > this._lastMouseDownCount + 1) {\n\t\t\tsetMouseDownCount = this._lastMouseDownCount + 1;\n\t\t}\n\n\t\t// c. Invalidate multiple clicking if the logical position is different\n\t\tif (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n\t\t\tthis._lastMouseDownPositionEqualCount++;\n\t\t} else {\n\t\t\tthis._lastMouseDownPositionEqualCount = 1;\n\t\t}\n\t\tthis._lastMouseDownPosition = newMouseDownPosition;\n\n\t\t// Finally set the lastMouseDownCount\n\t\tthis._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n\t}\n\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,KAAK,GAAG,MAAM,8BAA8B,CAAC;AACpD,OAAO,EAAE,kBAAkB,EAAoB,MAAM,qCAAqC,CAAC;AAC3F,OAAO,EAAE,UAAU,EAAe,MAAM,mCAAmC,CAAC;AAC5E,OAAO,KAAK,QAAQ,MAAM,kCAAkC,CAAC;AAC7D,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,kBAAkB,EAAgC,MAAM,kBAAkB,CAAC;AAEjH,OAAO,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,uBAAuB,EAAE,8BAA8B,EAAE,wBAAwB,EAAE,iCAAiC,EAAE,MAAM,iBAAiB,CAAC;AAE5L,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAC/D,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAC;AAI3D,OAAO,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AAGpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,yDAAyD,CAAC;AAE/F,OAAO,EAAE,sBAAsB,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAC;;;;;;;;;;;;;AAiC9E,MAAO,YAAa,SAAQ,yMAAgB;IAWjD,YAAY,OAAoB,EAAE,cAA8B,EAAE,UAAiC,CAAA;QAClG,KAAK,EAAE,CAAC;QAHD,IAAA,CAAA,kBAAkB,GAAuB,IAAI,CAAC;QAKrD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,qNAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAE5E,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,kBAAkB,CAC/D,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,kBAAkB,EACvB,CAAC,CAAC,EAAE,eAAe,EAAE,CAAG,CAAD,GAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,eAAe,CAAC,EACnE,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAC9B,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,EAAC,MAAM,CAAC;QAEvF,MAAM,WAAW,GAAG,IAAI,0MAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE7E,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,cAAc,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;QAE5G,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;YACzE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAErB,wDAAwD;YACxD,yEAAyE;YACzE,wEAAwE;YACxE,8EAA8E;YAC9E,oEAAoE;YACpE,uBAAuB;YAEvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC9B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,4LAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,EAAE;oBACjH,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAqB,CAAC,EAAE,CAAC;wBACpE,2BAA2B;wBAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,mMAAgB,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;oBACjF,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9F,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpG,6FAA6F;QAC7F,wCAAwC;QACxC,iGAAiG;QACjG,mCAAmC;QACnC,IAAI,gBAAgB,GAAW,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE;YACtF,gBAAgB,GAAG,SAAS,CAAC;QAC9B,CAAC,CAAC,CAAC,CAAC;QACJ,kHAAkH;QAClH,yHAAyH;QACzH,mHAAmH;QACnH,yEAAyE;QACzE,kGAAkG;QAClG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4LAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,gLAAS,CAAC,UAAU,EAAE,CAAC,CAAe,EAAE,EAAE;YACnH,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,YAAY,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpH,IAAI,CAAC,4BAA4B,EAAE,CAAC;QAEpC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;IAEO,4BAA4B,GAAA;QAEnC,MAAM,UAAU,GAAG,gOAAoB,CAAC,QAAQ,CAAC;QAEjD,IAAI,kBAAkB,GAAG,CAAC,CAAC;QAC3B,IAAI,qBAAqB,GAAG,uMAAU,CAAC,YAAY,EAAE,CAAC;QACtD,IAAI,uBAAuB,GAAG,KAAK,CAAC;QACpC,IAAI,uBAAuB,GAAG,CAAC,CAAC;QAEhC,MAAM,YAAY,GAAG,CAAC,YAA8B,EAAE,EAAE;YACvD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAEjD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,GAAA,+BAAA,GAA6B,GAAE,CAAC;gBAC3E,OAAO;YACR,CAAC;YAED,MAAM,CAAC,GAAG,IAAI,oMAAkB,CAAC,YAAY,CAAC,CAAC;YAC/C,UAAU,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;YAEvC,IAAI,UAAU,CAAC,oBAAoB,EAAE,EAAE,CAAC;gBACvC,IAAI,0BAA0B,CAAC,YAAY,CAAC,EAAE,CAAC;oBAC9C,MAAM,SAAS,GAAW,uMAAU,CAAC,YAAY,EAAE,CAAC;oBACpD,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACpC,uMAAU,CAAC,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;oBAC3C,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;gBACrB,CAAC;YACF,CAAC,MAAM,CAAC;gBACP,oGAAoG;gBACpG,kGAAkG;gBAClG,oGAAoG;gBACpG,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,kBAAkB,GAAG,EAAE,EAAE,CAAC;oBAC1C,sCAAsC;oBACtC,qBAAqB,GAAG,uMAAU,CAAC,YAAY,EAAE,CAAC;oBAClD,uBAAuB,GAAG,0BAA0B,CAAC,YAAY,CAAC,CAAC;oBACnE,uBAAuB,GAAG,CAAC,CAAC;gBAC7B,CAAC;gBAED,kBAAkB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBAChC,uBAAuB,IAAI,CAAC,CAAC,MAAM,CAAC;gBAEpC,IAAI,uBAAuB,EAAE,CAAC;oBAC7B,uMAAU,CAAC,YAAY,CAAC,qBAAqB,GAAG,uBAAuB,GAAG,CAAC,CAAC,CAAC;oBAC7E,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;gBACrB,CAAC;YACF,CAAC;QACF,CAAC,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4LAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,gLAAS,CAAC,WAAW,EAAE,YAAY,EAAE;YAAE,OAAO,EAAE,IAAI;YAAE,OAAO,EAAE,KAAK;QAAA,CAAE,CAAC,CAAC,CAAC;QAEnJ,SAAS,0BAA0B,CAAC,YAA8B;YACjE,OAAO,AACN,QAAQ,CAAC,iLAAW,GAGhB,CAAC,YAAY,CAAC,OAAO,IAAI,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EACjG,YAAY,CAAC,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CACpG,CAAC;QACH,CAAC;IACF,CAAC;IAEe,OAAO,GAAA;QACtB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,KAAK,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,2BAA2B;IACX,sBAAsB,CAAC,CAA2C,EAAA;QACjF,IAAI,CAAC,CAAC,UAAU,CAAA,IAAA,2BAAA,GAAyB,GAAE,CAAC;YAC3C,gBAAgB;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,EAAC,MAAM,CAAC;YACvF,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM,EAAE,CAAC;gBAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBACtB,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;YAC5C,CAAC;QACF,CAAC;QACD,OAAO,KAAK,CAAC;IACd,CAAC;IACe,oBAAoB,CAAC,CAAyC,EAAA;QAC7E,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO,KAAK,CAAC;IACd,CAAC;IACe,cAAc,CAAC,CAAmC,EAAA;QACjE,OAAO,KAAK,CAAC;IACd,CAAC;IACD,yBAAyB;IAElB,sBAAsB,CAAC,OAAe,EAAE,OAAe,EAAA;QAC7D,MAAM,SAAS,GAAG,IAAI,oMAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC1D,MAAM,GAAG,GAAG,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,gLAAS,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;QACpF,MAAM,SAAS,OAAG,2MAAwB,EAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAExE,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;YACnI,OAAO,IAAI,CAAC;QACb,CAAC;QAED,MAAM,WAAW,OAAG,oNAAiC,EAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;QACnG,OAAO,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IAC1H,CAAC;IAES,kBAAkB,CAAC,CAAmB,EAAE,eAAwB,EAAA;QACzE,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACnD,MAAM,UAAU,GAAG,GAAG,CAAC,oLAAa,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAClE,IAAI,UAAU,EAAE,CAAC;gBAChB,MAAM,GAAS,UAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAChE,CAAC,EAAW,EAAE,CAAG,CAAD,GAAK,CAAC,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,CACzD,CAAC;YACH,CAAC;QACF,CAAC;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC3J,CAAC;IAEO,eAAe,CAAC,CAAmB,EAAA;QAC1C,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;IAC9D,CAAC;IAES,cAAc,CAAC,CAAmB,EAAE,eAAwB,EAAA;QACrE,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC;YACnC,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,eAAe,CAAC;SACnD,CAAC,CAAC;IACJ,CAAC;IAES,YAAY,CAAC,CAAmB,EAAA;QACzC,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,EAAE,CAAC;YACrB,CAAC,CAAC,cAAc,EAAE,CAAC;QACpB,CAAC;QAED,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,EAAE,CAAC;YACzC,8BAA8B;YAC9B,OAAO;QACR,CAAC;QACD,MAAM,mBAAmB,GAAG,CAAC,CAAC,SAAS,CAAC;QACxC,IAAI,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACnD,gGAAgG;YAChG,OAAO;QACR,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;YACjC,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC;SACxC,CAAC,CAAC;IACJ,CAAC;IAES,aAAa,CAAC,CAAmB,EAAA;QAC1C,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAClC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,kBAAkB,GAAG,AAAC,IAAI,IAAI,EAAE,CAAC,AAAC,OAAO,EAAE,CAAC;QACjD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;YAClC,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,IAAI;SACZ,CAAC,CAAC;IACJ,CAAC;IAES,UAAU,CAAC,CAAmB,EAAA;QACvC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC;YAC/B,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC;SACxC,CAAC,CAAC;IACJ,CAAC;IAES,YAAY,CAAC,CAAmB,EAAE,SAAiB,EAAA;QAC5D,MAAM,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAE3C,MAAM,eAAe,GAAG,AAAC,CAAC,CAAC,IAAI,KAAA,EAAA,gCAAA,EAAiC,KAAI,CAAC,CAAC,IAAI,KAAA,EAAA,iCAAA,EAAkC,CAAC,CAAC;QAC9G,MAAM,cAAc,GAAG,AAAC,CAAC,CAAC,IAAI,KAAA,EAAA,uCAAA,EAAwC,KAAI,CAAC,CAAC,IAAI,KAAA,EAAA,uCAAA,EAAwC,KAAI,CAAC,CAAC,IAAI,KAAA,EAAA,2CAAA,EAA4C,CAAC,CAAC;QAChL,MAAM,mBAAmB,GAAG,AAAC,CAAC,CAAC,IAAI,KAAA,EAAA,uCAAA,EAAwC,CAAC,CAAC;QAC7E,MAAM,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,oCAAA,GAAkC,CAAC;QACtG,MAAM,gBAAgB,GAAG,AAAC,CAAC,CAAC,IAAI,KAAA,EAAA,qCAAA,EAAsC,KAAI,CAAC,CAAC,IAAI,KAAA,EAAA,oCAAA,EAAqC,CAAC,CAAC;QACvH,MAAM,cAAc,GAAI,AAAD,CAAE,CAAC,IAAI,KAAA,EAAA,kCAAA,EAAmC,CAAC,CAAC;QAEnE,IAAI,YAAY,GAAG,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,YAAY,CAAC;QAClD,IAAI,QAAQ,CAAC,iLAAW,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YACvD,YAAY,GAAG,KAAK,CAAC;QACtB,CAAC;QAED,MAAM,KAAK,GAAG,GAAG,EAAE;YAClB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC;QACjC,CAAC,CAAC;QAEF,IAAI,YAAY,IAAI,CAAC,eAAe,IAAI,AAAC,mBAAmB,IAAI,mBAAmB,AAAC,CAAC,EAAE,CAAC;YACvF,KAAK,EAAE,CAAC;YACR,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;QAEtD,CAAC,MAAM,IAAI,cAAc,EAAE,CAAC;YAC3B,qBAAqB;YACrB,CAAC,CAAC,cAAc,EAAE,CAAC;QACpB,CAAC,MAAM,IAAI,gBAAgB,EAAE,CAAC;YAC7B,MAAM,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC;YAC9B,IAAI,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,iCAAiC,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC;gBAChG,KAAK,EAAE,CAAC;gBACR,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;gBACrD,CAAC,CAAC,cAAc,EAAE,CAAC;YACpB,CAAC;QACF,CAAC,MAAM,IAAI,cAAc,IAAI,IAAI,CAAC,UAAU,CAAC,+BAA+B,CAAS,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;YAChG,KAAK,EAAE,CAAC;YACR,CAAC,CAAC,cAAc,EAAE,CAAC;QACpB,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;YACjC,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;SACT,CAAC,CAAC;IACJ,CAAC;CACD;AAED,MAAM,kBAAmB,SAAQ,0LAAU;IAc1C,YACkB,QAAqB,EACrB,eAA+B,EAC/B,WAAkC,EAClC,mBAAuC,EACxD,iBAAkF,EAClF,cAA+C,CAAA;QAE/C,KAAK,EAAE,CAAC;QAPS,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAa;QACrB,IAAA,CAAA,eAAe,GAAf,eAAe,CAAgB;QAC/B,IAAA,CAAA,WAAW,GAAX,WAAW,CAAuB;QAClC,IAAA,CAAA,mBAAmB,GAAnB,mBAAmB,CAAoB;QAKxD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAC5C,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QAEtC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,iNAA8B,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,2NAAsB,CACvE,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,mBAAmB,EACxB,CAAC,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,CAAG,CAAD,GAAK,CAAC,cAAc,CAAC,QAAQ,EAAE,eAAe,EAAE,UAAU,CAAC,CACrG,CAAC,CAAC;QACH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,2NAAsB,CACvE,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,mBAAmB,EACxB,CAAC,QAAQ,EAAE,eAAe,EAAE,UAAU,EAAE,CAAG,CAAD,GAAK,CAAC,cAAc,CAAC,QAAQ,EAAE,eAAe,EAAE,UAAU,CAAC,CACrG,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,EAAE,CAAC;QAExC,IAAI,CAAC,iBAAiB,GAAG,IAAI,mMAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC7B,CAAC;IAEe,OAAO,GAAA;QACtB,KAAK,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEM,QAAQ,GAAA;QACd,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAEO,oBAAoB,CAAC,CAAmB,EAAA;QAC/C,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,uCAAuC;YACvC,OAAO;QACR,CAAC;QAED,IAAI,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;YACpC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;gBAClC,KAAK,EAAE,CAAC;gBACR,MAAM,EAAE,QAAQ;aAChB,CAAC,CAAC;QACJ,CAAC,MAAM,CAAC;YACP,IAAI,QAAQ,CAAC,IAAI,KAAA,GAAA,kCAAA,EAAmC,GAAE,CAAC;gBACtD,IAAI,QAAQ,CAAC,eAAe,KAAK,OAAO,IAAI,QAAQ,CAAC,eAAe,KAAK,OAAO,EAAE,CAAC;oBAClF,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;gBACrC,CAAC,MAAM,CAAC;oBACP,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;gBACrC,CAAC;YACF,CAAC,MAAM,CAAC;gBACP,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;gBACpC,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;gBACpC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAA,EAAA,uCAAA,GAAsC,CAAC;YAC1E,CAAC;QACF,CAAC;IACF,CAAC;IAEM,KAAK,CAAC,UAA2B,EAAE,CAAmB,EAAE,SAAiB,EAAA;QAC/E,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QAEzB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,UAAU,KAAA,EAAA,uCAAA,EAAwC,CAAC,CAAC;QAC7F,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrC,uCAAuC;YACvC,OAAO;QACR,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAE1D,iHAAiH;QACjH,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAElC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QAEpD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,yBAAA,GAAuB,KACnC,OAAO,CAAC,GAAG,CAAA,GAAA,4BAAA,GAA0B,KACrC,CAAC,OAAO,CAAC,GAAG,CAAA,GAAA,gCAAA,GAA8B,KAC1C,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,kCAAkC;YAC3D,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,4CAA4C;YACzD,CAAC,IAAI,CAAC,SAAS,CAAC,4BAA4B;YAC5C,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,8BAA8B;YAC/D,QAAQ,CAAC,IAAI,KAAA,EAAA,gCAAA,EAAiC,CAAC,CAAC,GACjD,QAAQ,CAAC,QAAQ,GADuD,CACnD,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,8BAA8B;UAChH,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CACrC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EACjC,SAAS,EACT,CAAC,CAAC,OAAO,EACT,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,EACnC,CAAC,YAAyC,EAAE,EAAE;gBAC7C,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAgB,EAAE,KAAK,CAAC,CAAC;gBAEvE,IAAI,GAAG,CAAC,sLAAe,CAAC,YAAY,CAAC,EAAE,CAAC;oBACvC,SAAS;oBACT,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC;gBAC9C,CAAC,MAAM,CAAC;oBACP,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;wBAClC,KAAK,EAAE,IAAI,CAAC,eAAgB;wBAC5B,MAAM,EAAE,AAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAgB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,gEAAgE;qBACjJ,CAAC,CAAC;gBACJ,CAAC;gBAED,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,CAAC,CACD,CAAC;YAEF,OAAO;QACR,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,KAAK,CAAC;QACvC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,EAAA,EAAA,uCAAA,GAAsC,CAAC;QAE/E,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,iBAAiB,CAAC,eAAe,CACrC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EACjC,SAAS,EACT,CAAC,CAAC,OAAO,EACT,CAAC,CAAC,EAAE,CAAG,CAAD,GAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,EACnC,GAAG,CAAG,CAAD,GAAK,CAAC,KAAK,EAAE,CAClB,CAAC;QACH,CAAC;IACF,CAAC;IAEO,KAAK,GAAA;QACZ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,uBAAuB,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAEM,eAAe,GAAA;QACrB,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAEM,WAAW,GAAA;QACjB,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAEM,oBAAoB,CAAC,CAAyC,EAAA;QACpE,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;IAEO,yBAAyB,CAAC,CAAmB,EAAA;QACpD,MAAM,aAAa,GAAG,CAAC,CAAC,SAAS,CAAC;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QACtC,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;QAE5C,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAE5C,IAAI,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC;YAC9B,MAAM,eAAe,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACjD,MAAM,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,mBAAmB,EAAE,GAAG,eAAe,EAAE,CAAC,CAAC,CAAC;YACvF,MAAM,YAAY,GAAG,iNAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YAClF,IAAI,YAAY,EAAE,CAAC;gBAClB,MAAM,WAAW,GAAG,IAAI,CAAC,6BAA6B,CAAC,YAAY,CAAC,CAAC;gBACrE,IAAI,WAAW,EAAE,CAAC;oBACjB,OAAO,8MAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;gBAC5F,CAAC;YACF,CAAC;YAED,MAAM,eAAe,GAAG,UAAU,CAAC,6BAA6B,CAAC,cAAc,CAAC,CAAC;YACjF,OAAO,8MAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,iMAAQ,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;QACjH,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;YACrD,MAAM,eAAe,GAAG,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC;YACxE,MAAM,cAAc,GAAG,UAAU,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAC1E,MAAM,YAAY,GAAG,iNAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;YAClF,IAAI,YAAY,EAAE,CAAC;gBAClB,MAAM,WAAW,GAAG,IAAI,CAAC,6BAA6B,CAAC,YAAY,CAAC,CAAC;gBACrE,IAAI,WAAW,EAAE,CAAC;oBACjB,OAAO,8MAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;gBAC5F,CAAC;YACF,CAAC;YAED,MAAM,eAAe,GAAG,UAAU,CAAC,6BAA6B,CAAC,cAAc,CAAC,CAAC;YACjF,OAAO,8MAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,iMAAQ,CAAC,eAAe,EAAE,KAAK,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;QACvJ,CAAC;QAED,MAAM,kBAAkB,GAAG,UAAU,CAAC,6BAA6B,CAAC,UAAU,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAExH,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,CAAC;QAEpF,MAAM,aAAa,GAAG,UAAU,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;YACtC,MAAM,eAAe,GAAG,aAAa,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACxD,OAAO,8MAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,iMAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;QACnH,CAAC;QAED,MAAM,YAAY,GAAG,AACpB,UAAU,CAAC,OAAO,CAAC,WAAW,KAAK,CAAC,GACjC,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,sBAAsB,CAAC,iCAAiC;WACtF,UAAU,CAAC,OAAO,CAAC,WAAW,CACjC,CAAC;QACF,MAAM,cAAc,GAAG,YAAY,CAAC;QACpC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;YACvC,MAAM,eAAe,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,cAAc,CAAC;YACzD,OAAO,8MAAW,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,iMAAQ,CAAC,kBAAkB,EAAE,KAAK,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;QAC7J,CAAC;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,kBAAkB,CAAC,CAAmB,EAAE,eAAwB,EAAA;QACvE,MAAM,qBAAqB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC;QAChE,IAAI,qBAAqB,EAAE,CAAC;YAC3B,OAAO,qBAAqB,CAAC;QAC9B,CAAC;QAED,MAAM,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;QACtD,MAAM,cAAc,GAAG,CAAC,CAAC,QAAQ,CAAC;QAClC,IAAI,CAAC,cAAc,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC;QACb,CAAC;QAED,IAAI,CAAC,CAAC,IAAI,KAAA,EAAA,qCAAA,EAAsC,KAAI,CAAC,CAAC,IAAI,KAAA,EAAA,oCAAA,EAAqC,GAAE,CAAC;YACjG,MAAM,WAAW,GAAG,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACjE,IAAI,WAAW,EAAE,CAAC;gBACjB,OAAO,8MAAW,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAC5F,CAAC;QACF,CAAC;QAED,OAAO,CAAC,CAAC;IACV,CAAC;IAEO,6BAA6B,CAAC,YAAsC,EAAA;QAC3E,8FAA8F;QAC9F,MAAM,cAAc,GAAG,IAAI,iMAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,wBAAwB,EAAE,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QAClI,MAAM,cAAc,GAAG,YAAY,CAAC,cAAc,CAAC;QACnD,MAAM,aAAa,GAAG,YAAY,CAAC,aAAa,CAAC;QAEjD,IAAI,cAAc,IAAI,aAAa,EAAE,CAAC;YACrC,IAAI,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;gBAC7C,OAAO,cAAc,CAAC;YACvB,CAAC,MAAM,CAAC;gBACP,OAAO,aAAa,CAAC;YACtB,CAAC;QACF,CAAC;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,cAAc,CAAC,QAAsB,EAAE,eAAwB,EAAE,UAAuC,EAAA;QAC/G,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QACD,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;YAClC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC,oBAAoB;YAC3D,UAAU;YAEV,eAAe,EAAE,eAAe;YAChC,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;YACtC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;YAC/B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO;YACjC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;YAEnC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU;YACvC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,YAAY;YAE3C,cAAc,EAAE,QAAQ,CAAC,IAAI,KAAA,EAAA,gCAAA,EAAiC,KAAI,QAAQ,CAAC,MAAM,CAAC,YAAY,KAAK,IAAI;SACvG,CAAC,CAAC;IACJ,CAAC;CACD;AAED,MAAM,cAAc;;QAEK,IAAA,CAAA,2BAA2B,GAAG,GAAG,CAAC;IAAA,CAAA,CAAC,KAAK;IAGhE,IAAW,MAAM,GAAA;QAAc,OAAO,IAAI,CAAC,OAAO,CAAC;IAAC,CAAC;IAGrD,IAAW,OAAO,GAAA;QAAc,OAAO,IAAI,CAAC,QAAQ,CAAC;IAAC,CAAC;IAGvD,IAAW,OAAO,GAAA;QAAc,OAAO,IAAI,CAAC,QAAQ,CAAC;IAAC,CAAC;IAGvD,IAAW,QAAQ,GAAA;QAAc,OAAO,IAAI,CAAC,SAAS,CAAC;IAAC,CAAC;IAGzD,IAAW,UAAU,GAAA;QAAc,OAAO,IAAI,CAAC,WAAW,CAAC;IAAC,CAAC;IAG7D,IAAW,YAAY,GAAA;QAAc,OAAO,IAAI,CAAC,aAAa,CAAC;IAAC,CAAC;IAGjE,IAAW,oBAAoB,GAAA;QAAc,OAAO,IAAI,CAAC,qBAAqB,CAAC;IAAC,CAAC;IAQjF,aAAA;QACC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QACnC,IAAI,CAAC,gCAAgC,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,IAAW,KAAK,GAAA;QACf,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACjC,CAAC;IAEM,YAAY,CAAC,MAAwB,EAAA;QAC3C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;IAClC,CAAC;IAEM,eAAe,CAAC,MAAwB,EAAA;QAC9C,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,YAAY,CAAC;IAC1C,CAAC;IAEM,uBAAuB,CAAC,oBAA6B,EAAA;QAC3D,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;IACnD,CAAC;IAEM,WAAW,CAAC,iBAAyB,EAAE,oBAA8B,EAAA;QAC3E,oJAAoJ;QACpJ,MAAM,WAAW,GAAG,AAAC,IAAI,IAAI,EAAE,CAAC,AAAC,OAAO,EAAE,CAAC;QAC3C,IAAI,WAAW,GAAG,IAAI,CAAC,0BAA0B,GAAG,cAAc,CAAC,2BAA2B,EAAE,CAAC;YAChG,iBAAiB,GAAG,CAAC,CAAC;QACvB,CAAC;QACD,IAAI,CAAC,0BAA0B,GAAG,WAAW,CAAC;QAE9C,iKAAiK;QACjK,IAAI,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,EAAE,CAAC;YACtD,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;QAClD,CAAC;QAED,uEAAuE;QACvE,IAAI,IAAI,CAAC,sBAAsB,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC7F,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACzC,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,gCAAgC,GAAG,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,sBAAsB,GAAG,oBAAoB,CAAC;QAEnD,qCAAqC;QACrC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,gCAAgC,CAAC,CAAC;IAC/F,CAAC","debugId":null}},
    {"offset": {"line": 1788, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/clipboardUtils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/clipboardUtils.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/vs/editor/browser/controller/editContext/clipboardUtils.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IViewModel } from '../../../common/viewModel.js';\nimport { Range } from '../../../common/core/range.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { Mimes } from '../../../../base/common/mime.js';\n\nexport function getDataToCopy(viewModel: IViewModel, modelSelections: Range[], emptySelectionClipboard: boolean, copyWithSyntaxHighlighting: boolean): ClipboardDataToCopy {\n\tconst rawTextToCopy = viewModel.getPlainTextToCopy(modelSelections, emptySelectionClipboard, isWindows);\n\tconst newLineCharacter = viewModel.model.getEOL();\n\n\tconst isFromEmptySelection = (emptySelectionClipboard && modelSelections.length === 1 && modelSelections[0].isEmpty());\n\tconst multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n\tconst text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n\n\tlet html: string | null | undefined = undefined;\n\tlet mode: string | null = null;\n\tif (CopyOptions.forceCopyWithSyntaxHighlighting || (copyWithSyntaxHighlighting && text.length < 65536)) {\n\t\tconst richText = viewModel.getRichTextToCopy(modelSelections, emptySelectionClipboard);\n\t\tif (richText) {\n\t\t\thtml = richText.html;\n\t\t\tmode = richText.mode;\n\t\t}\n\t}\n\tconst dataToCopy: ClipboardDataToCopy = {\n\t\tisFromEmptySelection,\n\t\tmulticursorText,\n\t\ttext,\n\t\thtml,\n\t\tmode\n\t};\n\treturn dataToCopy;\n}\n\n/**\n * Every time we write to the clipboard, we record a bit of extra metadata here.\n * Every time we read from the cipboard, if the text matches our last written text,\n * we can fetch the previous metadata.\n */\nexport class InMemoryClipboardMetadataManager {\n\tpublic static readonly INSTANCE = new InMemoryClipboardMetadataManager();\n\n\tprivate _lastState: InMemoryClipboardMetadata | null;\n\n\tconstructor() {\n\t\tthis._lastState = null;\n\t}\n\n\tpublic set(lastCopiedValue: string, data: ClipboardStoredMetadata): void {\n\t\tthis._lastState = { lastCopiedValue, data };\n\t}\n\n\tpublic get(pastedText: string): ClipboardStoredMetadata | null {\n\t\tif (this._lastState && this._lastState.lastCopiedValue === pastedText) {\n\t\t\t// match!\n\t\t\treturn this._lastState.data;\n\t\t}\n\t\tthis._lastState = null;\n\t\treturn null;\n\t}\n}\n\nexport interface ClipboardDataToCopy {\n\tisFromEmptySelection: boolean;\n\tmulticursorText: string[] | null | undefined;\n\ttext: string;\n\thtml: string | null | undefined;\n\tmode: string | null;\n}\n\nexport interface ClipboardStoredMetadata {\n\tversion: 1;\n\tid: string | undefined;\n\tisFromEmptySelection: boolean | undefined;\n\tmulticursorText: string[] | null | undefined;\n\tmode: string | null;\n}\n\nexport const CopyOptions = {\n\tforceCopyWithSyntaxHighlighting: false\n};\n\ninterface InMemoryClipboardMetadata {\n\tlastCopiedValue: string;\n\tdata: ClipboardStoredMetadata;\n}\n\nexport const ClipboardEventUtils = {\n\n\tgetTextData(clipboardData: DataTransfer): [string, ClipboardStoredMetadata | null] {\n\t\tconst text = clipboardData.getData(Mimes.text);\n\t\tlet metadata: ClipboardStoredMetadata | null = null;\n\t\tconst rawmetadata = clipboardData.getData('vscode-editor-data');\n\t\tif (typeof rawmetadata === 'string') {\n\t\t\ttry {\n\t\t\t\tmetadata = <ClipboardStoredMetadata>JSON.parse(rawmetadata);\n\t\t\t\tif (metadata.version !== 1) {\n\t\t\t\t\tmetadata = null;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// no problem!\n\t\t\t}\n\t\t}\n\t\tif (text.length === 0 && metadata === null && clipboardData.files.length > 0) {\n\t\t\t// no textual data pasted, generate text from file names\n\t\t\tconst files: File[] = Array.prototype.slice.call(clipboardData.files, 0);\n\t\t\treturn [files.map(file => file.name).join('\\n'), null];\n\t\t}\n\t\treturn [text, metadata];\n\t},\n\n\tsetTextData(clipboardData: DataTransfer, text: string, html: string | null | undefined, metadata: ClipboardStoredMetadata): void {\n\t\tclipboardData.setData(Mimes.text, text);\n\t\tif (typeof html === 'string') {\n\t\t\tclipboardData.setData('text/html', html);\n\t\t}\n\t\tclipboardData.setData('vscode-editor-data', JSON.stringify(metadata));\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IViewModel } from '../../../common/viewModel.js';\nimport { Range } from '../../../common/core/range.js';\nimport { isWindows } from '../../../../base/common/platform.js';\nimport { Mimes } from '../../../../base/common/mime.js';\n\nexport function getDataToCopy(viewModel: IViewModel, modelSelections: Range[], emptySelectionClipboard: boolean, copyWithSyntaxHighlighting: boolean): ClipboardDataToCopy {\n\tconst rawTextToCopy = viewModel.getPlainTextToCopy(modelSelections, emptySelectionClipboard, isWindows);\n\tconst newLineCharacter = viewModel.model.getEOL();\n\n\tconst isFromEmptySelection = (emptySelectionClipboard && modelSelections.length === 1 && modelSelections[0].isEmpty());\n\tconst multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n\tconst text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n\n\tlet html: string | null | undefined = undefined;\n\tlet mode: string | null = null;\n\tif (CopyOptions.forceCopyWithSyntaxHighlighting || (copyWithSyntaxHighlighting && text.length < 65536)) {\n\t\tconst richText = viewModel.getRichTextToCopy(modelSelections, emptySelectionClipboard);\n\t\tif (richText) {\n\t\t\thtml = richText.html;\n\t\t\tmode = richText.mode;\n\t\t}\n\t}\n\tconst dataToCopy: ClipboardDataToCopy = {\n\t\tisFromEmptySelection,\n\t\tmulticursorText,\n\t\ttext,\n\t\thtml,\n\t\tmode\n\t};\n\treturn dataToCopy;\n}\n\n/**\n * Every time we write to the clipboard, we record a bit of extra metadata here.\n * Every time we read from the cipboard, if the text matches our last written text,\n * we can fetch the previous metadata.\n */\nexport class InMemoryClipboardMetadataManager {\n\tpublic static readonly INSTANCE = new InMemoryClipboardMetadataManager();\n\n\tprivate _lastState: InMemoryClipboardMetadata | null;\n\n\tconstructor() {\n\t\tthis._lastState = null;\n\t}\n\n\tpublic set(lastCopiedValue: string, data: ClipboardStoredMetadata): void {\n\t\tthis._lastState = { lastCopiedValue, data };\n\t}\n\n\tpublic get(pastedText: string): ClipboardStoredMetadata | null {\n\t\tif (this._lastState && this._lastState.lastCopiedValue === pastedText) {\n\t\t\t// match!\n\t\t\treturn this._lastState.data;\n\t\t}\n\t\tthis._lastState = null;\n\t\treturn null;\n\t}\n}\n\nexport interface ClipboardDataToCopy {\n\tisFromEmptySelection: boolean;\n\tmulticursorText: string[] | null | undefined;\n\ttext: string;\n\thtml: string | null | undefined;\n\tmode: string | null;\n}\n\nexport interface ClipboardStoredMetadata {\n\tversion: 1;\n\tid: string | undefined;\n\tisFromEmptySelection: boolean | undefined;\n\tmulticursorText: string[] | null | undefined;\n\tmode: string | null;\n}\n\nexport const CopyOptions = {\n\tforceCopyWithSyntaxHighlighting: false\n};\n\ninterface InMemoryClipboardMetadata {\n\tlastCopiedValue: string;\n\tdata: ClipboardStoredMetadata;\n}\n\nexport const ClipboardEventUtils = {\n\n\tgetTextData(clipboardData: DataTransfer): [string, ClipboardStoredMetadata | null] {\n\t\tconst text = clipboardData.getData(Mimes.text);\n\t\tlet metadata: ClipboardStoredMetadata | null = null;\n\t\tconst rawmetadata = clipboardData.getData('vscode-editor-data');\n\t\tif (typeof rawmetadata === 'string') {\n\t\t\ttry {\n\t\t\t\tmetadata = <ClipboardStoredMetadata>JSON.parse(rawmetadata);\n\t\t\t\tif (metadata.version !== 1) {\n\t\t\t\t\tmetadata = null;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// no problem!\n\t\t\t}\n\t\t}\n\t\tif (text.length === 0 && metadata === null && clipboardData.files.length > 0) {\n\t\t\t// no textual data pasted, generate text from file names\n\t\t\tconst files: File[] = Array.prototype.slice.call(clipboardData.files, 0);\n\t\t\treturn [files.map(file => file.name).join('\\n'), null];\n\t\t}\n\t\treturn [text, metadata];\n\t},\n\n\tsetTextData(clipboardData: DataTransfer, text: string, html: string | null | undefined, metadata: ClipboardStoredMetadata): void {\n\t\tclipboardData.setData(Mimes.text, text);\n\t\tif (typeof html === 'string') {\n\t\t\tclipboardData.setData('text/html', html);\n\t\t}\n\t\tclipboardData.setData('vscode-editor-data', JSON.stringify(metadata));\n\t}\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1891, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/textAreaEditContextState.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/textArea/textAreaEditContextState.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/vs/editor/browser/controller/editContext/textArea/textAreaEditContextState.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { commonPrefixLength, commonSuffixLength } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ISimpleScreenReaderContentState } from '../screenReaderUtils.js';\n\nexport const _debugComposition = false;\n\nexport interface ITextAreaWrapper {\n\tgetValue(): string;\n\tsetValue(reason: string, value: string): void;\n\n\tgetSelectionStart(): number;\n\tgetSelectionEnd(): number;\n\tsetSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void;\n}\n\nexport interface ITypeData {\n\ttext: string;\n\treplacePrevCharCnt: number;\n\treplaceNextCharCnt: number;\n\tpositionDelta: number;\n}\n\nexport class TextAreaState {\n\n\tpublic static readonly EMPTY = new TextAreaState('', 0, 0, null, undefined);\n\n\tconstructor(\n\t\tpublic readonly value: string,\n\t\t/** the offset where selection starts inside `value` */\n\t\tpublic readonly selectionStart: number,\n\t\t/** the offset where selection ends inside `value` */\n\t\tpublic readonly selectionEnd: number,\n\t\t/** the editor range in the view coordinate system that matches the selection inside `value` */\n\t\tpublic readonly selection: Range | null,\n\t\t/** the visible line count (wrapped, not necessarily matching \\n characters) for the text in `value` before `selectionStart` */\n\t\tpublic readonly newlineCountBeforeSelection: number | undefined,\n\t) { }\n\n\tpublic toString(): string {\n\t\treturn `[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`;\n\t}\n\n\tpublic static readFromTextArea(textArea: ITextAreaWrapper, previousState: TextAreaState | null): TextAreaState {\n\t\tconst value = textArea.getValue();\n\t\tconst selectionStart = textArea.getSelectionStart();\n\t\tconst selectionEnd = textArea.getSelectionEnd();\n\t\tlet newlineCountBeforeSelection: number | undefined = undefined;\n\t\tif (previousState) {\n\t\t\tconst valueBeforeSelectionStart = value.substring(0, selectionStart);\n\t\t\tconst previousValueBeforeSelectionStart = previousState.value.substring(0, previousState.selectionStart);\n\t\t\tif (valueBeforeSelectionStart === previousValueBeforeSelectionStart) {\n\t\t\t\tnewlineCountBeforeSelection = previousState.newlineCountBeforeSelection;\n\t\t\t}\n\t\t}\n\t\treturn new TextAreaState(value, selectionStart, selectionEnd, null, newlineCountBeforeSelection);\n\t}\n\n\tpublic collapseSelection(): TextAreaState {\n\t\tif (this.selectionStart === this.value.length) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new TextAreaState(this.value, this.value.length, this.value.length, null, undefined);\n\t}\n\n\tpublic isWrittenToTextArea(textArea: ITextAreaWrapper, select: boolean): boolean {\n\t\tconst valuesEqual = this.value === textArea.getValue();\n\t\tif (!select) {\n\t\t\treturn valuesEqual;\n\t\t}\n\t\tconst selectionsEqual = this.selectionStart === textArea.getSelectionStart() && this.selectionEnd === textArea.getSelectionEnd();\n\t\treturn selectionsEqual && valuesEqual;\n\t}\n\n\tpublic writeToTextArea(reason: string, textArea: ITextAreaWrapper, select: boolean): void {\n\t\tif (_debugComposition) {\n\t\t\tconsole.log(`writeToTextArea ${reason}: ${this.toString()}`);\n\t\t}\n\t\ttextArea.setValue(reason, this.value);\n\t\tif (select) {\n\t\t\ttextArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n\t\t}\n\t}\n\n\tpublic deduceEditorPosition(offset: number): [Position | null, number, number] {\n\t\tif (offset <= this.selectionStart) {\n\t\t\tconst str = this.value.substring(offset, this.selectionStart);\n\t\t\treturn this._finishDeduceEditorPosition(this.selection?.getStartPosition() ?? null, str, -1);\n\t\t}\n\t\tif (offset >= this.selectionEnd) {\n\t\t\tconst str = this.value.substring(this.selectionEnd, offset);\n\t\t\treturn this._finishDeduceEditorPosition(this.selection?.getEndPosition() ?? null, str, 1);\n\t\t}\n\t\tconst str1 = this.value.substring(this.selectionStart, offset);\n\t\tif (str1.indexOf(String.fromCharCode(8230)) === -1) {\n\t\t\treturn this._finishDeduceEditorPosition(this.selection?.getStartPosition() ?? null, str1, 1);\n\t\t}\n\t\tconst str2 = this.value.substring(offset, this.selectionEnd);\n\t\treturn this._finishDeduceEditorPosition(this.selection?.getEndPosition() ?? null, str2, -1);\n\t}\n\n\tprivate _finishDeduceEditorPosition(anchor: Position | null, deltaText: string, signum: number): [Position | null, number, number] {\n\t\tlet lineFeedCnt = 0;\n\t\tlet lastLineFeedIndex = -1;\n\t\twhile ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n\t\t\tlineFeedCnt++;\n\t\t}\n\t\treturn [anchor, signum * deltaText.length, lineFeedCnt];\n\t}\n\n\tpublic static deduceInput(previousState: TextAreaState, currentState: TextAreaState, couldBeEmojiInput: boolean): ITypeData {\n\t\tif (!previousState) {\n\t\t\t// This is the EMPTY state\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('------------------------deduceInput');\n\t\t\tconsole.log(`PREVIOUS STATE: ${previousState.toString()}`);\n\t\t\tconsole.log(`CURRENT STATE: ${currentState.toString()}`);\n\t\t}\n\n\t\tconst prefixLength = Math.min(\n\t\t\tcommonPrefixLength(previousState.value, currentState.value),\n\t\t\tpreviousState.selectionStart,\n\t\t\tcurrentState.selectionStart\n\t\t);\n\t\tconst suffixLength = Math.min(\n\t\t\tcommonSuffixLength(previousState.value, currentState.value),\n\t\t\tpreviousState.value.length - previousState.selectionEnd,\n\t\t\tcurrentState.value.length - currentState.selectionEnd\n\t\t);\n\t\tconst previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n\t\tconst currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n\t\tconst previousSelectionStart = previousState.selectionStart - prefixLength;\n\t\tconst previousSelectionEnd = previousState.selectionEnd - prefixLength;\n\t\tconst currentSelectionStart = currentState.selectionStart - prefixLength;\n\t\tconst currentSelectionEnd = currentState.selectionEnd - prefixLength;\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n\t\t\tconsole.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n\t\t}\n\n\t\tif (currentSelectionStart === currentSelectionEnd) {\n\t\t\t// no current selection\n\t\t\tconst replacePreviousCharacters = (previousState.selectionStart - prefixLength);\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`REMOVE PREVIOUS: ${replacePreviousCharacters} chars`);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttext: currentValue,\n\t\t\t\treplacePrevCharCnt: replacePreviousCharacters,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\t// there is a current selection => composition case\n\t\tconst replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n\t\treturn {\n\t\t\ttext: currentValue,\n\t\t\treplacePrevCharCnt: replacePreviousCharacters,\n\t\t\treplaceNextCharCnt: 0,\n\t\t\tpositionDelta: 0\n\t\t};\n\t}\n\n\tpublic static deduceAndroidCompositionInput(previousState: TextAreaState, currentState: TextAreaState): ITypeData {\n\t\tif (!previousState) {\n\t\t\t// This is the EMPTY state\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('------------------------deduceAndroidCompositionInput');\n\t\t\tconsole.log(`PREVIOUS STATE: ${previousState.toString()}`);\n\t\t\tconsole.log(`CURRENT STATE: ${currentState.toString()}`);\n\t\t}\n\n\t\tif (previousState.value === currentState.value) {\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: currentState.selectionEnd - previousState.selectionEnd\n\t\t\t};\n\t\t}\n\n\t\tconst prefixLength = Math.min(commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n\t\tconst suffixLength = Math.min(commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n\t\tconst previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n\t\tconst currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n\t\tconst previousSelectionStart = previousState.selectionStart - prefixLength;\n\t\tconst previousSelectionEnd = previousState.selectionEnd - prefixLength;\n\t\tconst currentSelectionStart = currentState.selectionStart - prefixLength;\n\t\tconst currentSelectionEnd = currentState.selectionEnd - prefixLength;\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n\t\t\tconsole.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n\t\t}\n\n\t\treturn {\n\t\t\ttext: currentValue,\n\t\t\treplacePrevCharCnt: previousSelectionEnd,\n\t\t\treplaceNextCharCnt: previousValue.length - previousSelectionEnd,\n\t\t\tpositionDelta: currentSelectionEnd - currentValue.length\n\t\t};\n\t}\n\n\tpublic static fromScreenReaderContentState(screenReaderContentState: ISimpleScreenReaderContentState) {\n\t\treturn new TextAreaState(\n\t\t\tscreenReaderContentState.value,\n\t\t\tscreenReaderContentState.selectionStart,\n\t\t\tscreenReaderContentState.selectionEnd,\n\t\t\tscreenReaderContentState.selection,\n\t\t\tscreenReaderContentState.newlineCountBeforeSelection\n\t\t);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { commonPrefixLength, commonSuffixLength } from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { ISimpleScreenReaderContentState } from '../screenReaderUtils.js';\n\nexport const _debugComposition = false;\n\nexport interface ITextAreaWrapper {\n\tgetValue(): string;\n\tsetValue(reason: string, value: string): void;\n\n\tgetSelectionStart(): number;\n\tgetSelectionEnd(): number;\n\tsetSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void;\n}\n\nexport interface ITypeData {\n\ttext: string;\n\treplacePrevCharCnt: number;\n\treplaceNextCharCnt: number;\n\tpositionDelta: number;\n}\n\nexport class TextAreaState {\n\n\tpublic static readonly EMPTY = new TextAreaState('', 0, 0, null, undefined);\n\n\tconstructor(\n\t\tpublic readonly value: string,\n\t\t/** the offset where selection starts inside `value` */\n\t\tpublic readonly selectionStart: number,\n\t\t/** the offset where selection ends inside `value` */\n\t\tpublic readonly selectionEnd: number,\n\t\t/** the editor range in the view coordinate system that matches the selection inside `value` */\n\t\tpublic readonly selection: Range | null,\n\t\t/** the visible line count (wrapped, not necessarily matching \\n characters) for the text in `value` before `selectionStart` */\n\t\tpublic readonly newlineCountBeforeSelection: number | undefined,\n\t) { }\n\n\tpublic toString(): string {\n\t\treturn `[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`;\n\t}\n\n\tpublic static readFromTextArea(textArea: ITextAreaWrapper, previousState: TextAreaState | null): TextAreaState {\n\t\tconst value = textArea.getValue();\n\t\tconst selectionStart = textArea.getSelectionStart();\n\t\tconst selectionEnd = textArea.getSelectionEnd();\n\t\tlet newlineCountBeforeSelection: number | undefined = undefined;\n\t\tif (previousState) {\n\t\t\tconst valueBeforeSelectionStart = value.substring(0, selectionStart);\n\t\t\tconst previousValueBeforeSelectionStart = previousState.value.substring(0, previousState.selectionStart);\n\t\t\tif (valueBeforeSelectionStart === previousValueBeforeSelectionStart) {\n\t\t\t\tnewlineCountBeforeSelection = previousState.newlineCountBeforeSelection;\n\t\t\t}\n\t\t}\n\t\treturn new TextAreaState(value, selectionStart, selectionEnd, null, newlineCountBeforeSelection);\n\t}\n\n\tpublic collapseSelection(): TextAreaState {\n\t\tif (this.selectionStart === this.value.length) {\n\t\t\treturn this;\n\t\t}\n\t\treturn new TextAreaState(this.value, this.value.length, this.value.length, null, undefined);\n\t}\n\n\tpublic isWrittenToTextArea(textArea: ITextAreaWrapper, select: boolean): boolean {\n\t\tconst valuesEqual = this.value === textArea.getValue();\n\t\tif (!select) {\n\t\t\treturn valuesEqual;\n\t\t}\n\t\tconst selectionsEqual = this.selectionStart === textArea.getSelectionStart() && this.selectionEnd === textArea.getSelectionEnd();\n\t\treturn selectionsEqual && valuesEqual;\n\t}\n\n\tpublic writeToTextArea(reason: string, textArea: ITextAreaWrapper, select: boolean): void {\n\t\tif (_debugComposition) {\n\t\t\tconsole.log(`writeToTextArea ${reason}: ${this.toString()}`);\n\t\t}\n\t\ttextArea.setValue(reason, this.value);\n\t\tif (select) {\n\t\t\ttextArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n\t\t}\n\t}\n\n\tpublic deduceEditorPosition(offset: number): [Position | null, number, number] {\n\t\tif (offset <= this.selectionStart) {\n\t\t\tconst str = this.value.substring(offset, this.selectionStart);\n\t\t\treturn this._finishDeduceEditorPosition(this.selection?.getStartPosition() ?? null, str, -1);\n\t\t}\n\t\tif (offset >= this.selectionEnd) {\n\t\t\tconst str = this.value.substring(this.selectionEnd, offset);\n\t\t\treturn this._finishDeduceEditorPosition(this.selection?.getEndPosition() ?? null, str, 1);\n\t\t}\n\t\tconst str1 = this.value.substring(this.selectionStart, offset);\n\t\tif (str1.indexOf(String.fromCharCode(8230)) === -1) {\n\t\t\treturn this._finishDeduceEditorPosition(this.selection?.getStartPosition() ?? null, str1, 1);\n\t\t}\n\t\tconst str2 = this.value.substring(offset, this.selectionEnd);\n\t\treturn this._finishDeduceEditorPosition(this.selection?.getEndPosition() ?? null, str2, -1);\n\t}\n\n\tprivate _finishDeduceEditorPosition(anchor: Position | null, deltaText: string, signum: number): [Position | null, number, number] {\n\t\tlet lineFeedCnt = 0;\n\t\tlet lastLineFeedIndex = -1;\n\t\twhile ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n\t\t\tlineFeedCnt++;\n\t\t}\n\t\treturn [anchor, signum * deltaText.length, lineFeedCnt];\n\t}\n\n\tpublic static deduceInput(previousState: TextAreaState, currentState: TextAreaState, couldBeEmojiInput: boolean): ITypeData {\n\t\tif (!previousState) {\n\t\t\t// This is the EMPTY state\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('------------------------deduceInput');\n\t\t\tconsole.log(`PREVIOUS STATE: ${previousState.toString()}`);\n\t\t\tconsole.log(`CURRENT STATE: ${currentState.toString()}`);\n\t\t}\n\n\t\tconst prefixLength = Math.min(\n\t\t\tcommonPrefixLength(previousState.value, currentState.value),\n\t\t\tpreviousState.selectionStart,\n\t\t\tcurrentState.selectionStart\n\t\t);\n\t\tconst suffixLength = Math.min(\n\t\t\tcommonSuffixLength(previousState.value, currentState.value),\n\t\t\tpreviousState.value.length - previousState.selectionEnd,\n\t\t\tcurrentState.value.length - currentState.selectionEnd\n\t\t);\n\t\tconst previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n\t\tconst currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n\t\tconst previousSelectionStart = previousState.selectionStart - prefixLength;\n\t\tconst previousSelectionEnd = previousState.selectionEnd - prefixLength;\n\t\tconst currentSelectionStart = currentState.selectionStart - prefixLength;\n\t\tconst currentSelectionEnd = currentState.selectionEnd - prefixLength;\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n\t\t\tconsole.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n\t\t}\n\n\t\tif (currentSelectionStart === currentSelectionEnd) {\n\t\t\t// no current selection\n\t\t\tconst replacePreviousCharacters = (previousState.selectionStart - prefixLength);\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`REMOVE PREVIOUS: ${replacePreviousCharacters} chars`);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttext: currentValue,\n\t\t\t\treplacePrevCharCnt: replacePreviousCharacters,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\t// there is a current selection => composition case\n\t\tconst replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n\t\treturn {\n\t\t\ttext: currentValue,\n\t\t\treplacePrevCharCnt: replacePreviousCharacters,\n\t\t\treplaceNextCharCnt: 0,\n\t\t\tpositionDelta: 0\n\t\t};\n\t}\n\n\tpublic static deduceAndroidCompositionInput(previousState: TextAreaState, currentState: TextAreaState): ITypeData {\n\t\tif (!previousState) {\n\t\t\t// This is the EMPTY state\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: 0\n\t\t\t};\n\t\t}\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log('------------------------deduceAndroidCompositionInput');\n\t\t\tconsole.log(`PREVIOUS STATE: ${previousState.toString()}`);\n\t\t\tconsole.log(`CURRENT STATE: ${currentState.toString()}`);\n\t\t}\n\n\t\tif (previousState.value === currentState.value) {\n\t\t\treturn {\n\t\t\t\ttext: '',\n\t\t\t\treplacePrevCharCnt: 0,\n\t\t\t\treplaceNextCharCnt: 0,\n\t\t\t\tpositionDelta: currentState.selectionEnd - previousState.selectionEnd\n\t\t\t};\n\t\t}\n\n\t\tconst prefixLength = Math.min(commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n\t\tconst suffixLength = Math.min(commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n\t\tconst previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n\t\tconst currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n\t\tconst previousSelectionStart = previousState.selectionStart - prefixLength;\n\t\tconst previousSelectionEnd = previousState.selectionEnd - prefixLength;\n\t\tconst currentSelectionStart = currentState.selectionStart - prefixLength;\n\t\tconst currentSelectionEnd = currentState.selectionEnd - prefixLength;\n\n\t\tif (_debugComposition) {\n\t\t\tconsole.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n\t\t\tconsole.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n\t\t}\n\n\t\treturn {\n\t\t\ttext: currentValue,\n\t\t\treplacePrevCharCnt: previousSelectionEnd,\n\t\t\treplaceNextCharCnt: previousValue.length - previousSelectionEnd,\n\t\t\tpositionDelta: currentSelectionEnd - currentValue.length\n\t\t};\n\t}\n\n\tpublic static fromScreenReaderContentState(screenReaderContentState: ISimpleScreenReaderContentState) {\n\t\treturn new TextAreaState(\n\t\t\tscreenReaderContentState.value,\n\t\t\tscreenReaderContentState.selectionStart,\n\t\t\tscreenReaderContentState.selectionEnd,\n\t\t\tscreenReaderContentState.selection,\n\t\t\tscreenReaderContentState.newlineCountBeforeSelection\n\t\t);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2069, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/textAreaEditContextInput.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/textArea/textAreaEditContextInput.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/vs/editor/browser/controller/editContext/textArea/textAreaEditContextInput.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '../../../../../base/browser/browser.js';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../../../base/browser/event.js';\nimport { IKeyboardEvent, StandardKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { inputLatency } from '../../../../../base/browser/performance.js';\nimport { RunOnceScheduler } from '../../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { OperatingSystem } from '../../../../../base/common/platform.js';\nimport * as strings from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { ILogService, LogLevel } from '../../../../../platform/log/common/log.js';\nimport { ClipboardDataToCopy, ClipboardEventUtils, ClipboardStoredMetadata, InMemoryClipboardMetadataManager } from '../clipboardUtils.js';\nimport { _debugComposition, ITextAreaWrapper, ITypeData, TextAreaState } from './textAreaEditContextState.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\n\nexport namespace TextAreaSyntethicEvents {\n\texport const Tap = '-monaco-textarea-synthetic-tap';\n}\n\nexport interface ICompositionData {\n}\n\n\nexport interface IPasteData {\n\ttext: string;\n\tmetadata: ClipboardStoredMetadata | null;\n}\n\nexport interface ITextAreaInputHost {\n\tgetDataToCopy(): ClipboardDataToCopy;\n\tgetScreenReaderContent(): TextAreaState;\n\tdeduceModelPosition(viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position;\n}\n\nexport interface ICompositionStartEvent {\n\tdata: string;\n}\n\nexport interface ICompleteTextAreaWrapper extends ITextAreaWrapper {\n\treadonly onKeyDown: Event<KeyboardEvent>;\n\treadonly onKeyUp: Event<KeyboardEvent>;\n\treadonly onCompositionStart: Event<CompositionEvent>;\n\treadonly onCompositionUpdate: Event<CompositionEvent>;\n\treadonly onCompositionEnd: Event<CompositionEvent>;\n\treadonly onInput: Event<InputEvent>;\n\treadonly onCut: Event<ClipboardEvent>;\n\treadonly onCopy: Event<ClipboardEvent>;\n\treadonly onPaste: Event<ClipboardEvent>;\n\treadonly onFocus: Event<FocusEvent>;\n\treadonly onBlur: Event<FocusEvent>;\n\treadonly onSyntheticTap: Event<void>;\n\n\treadonly ownerDocument: Document;\n\n\tsetIgnoreSelectionChangeTime(reason: string): void;\n\tgetIgnoreSelectionChangeTime(): number;\n\tresetSelectionChangeTime(): void;\n\n\thasFocus(): boolean;\n}\n\nexport interface IBrowser {\n\tisAndroid: boolean;\n\tisFirefox: boolean;\n\tisChrome: boolean;\n\tisSafari: boolean;\n}\n\nclass CompositionContext {\n\n\tprivate _lastTypeTextLength: number;\n\n\tconstructor() {\n\t\tthis._lastTypeTextLength = 0;\n\t}\n\n\tpublic handleCompositionUpdate(text: string | null | undefined): ITypeData {\n\t\ttext = text || '';\n\t\tconst typeInput: ITypeData = {\n\t\t\ttext: text,\n\t\t\treplacePrevCharCnt: this._lastTypeTextLength,\n\t\t\treplaceNextCharCnt: 0,\n\t\t\tpositionDelta: 0\n\t\t};\n\t\tthis._lastTypeTextLength = text.length;\n\t\treturn typeInput;\n\t}\n}\n\n/**\n * Writes screen reader content to the textarea and is able to analyze its input events to generate:\n *  - onCut\n *  - onPaste\n *  - onType\n *\n * Composition events are generated for presentation purposes (composition input is reflected in onType).\n */\nexport class TextAreaInput extends Disposable {\n\n\tprivate _onFocus = this._register(new Emitter<void>());\n\tpublic readonly onFocus: Event<void> = this._onFocus.event;\n\n\tprivate _onBlur = this._register(new Emitter<void>());\n\tpublic readonly onBlur: Event<void> = this._onBlur.event;\n\n\tprivate _onKeyDown = this._register(new Emitter<IKeyboardEvent>());\n\tpublic readonly onKeyDown: Event<IKeyboardEvent> = this._onKeyDown.event;\n\n\tprivate _onKeyUp = this._register(new Emitter<IKeyboardEvent>());\n\tpublic readonly onKeyUp: Event<IKeyboardEvent> = this._onKeyUp.event;\n\n\tprivate _onCut = this._register(new Emitter<void>());\n\tpublic readonly onCut: Event<void> = this._onCut.event;\n\n\tprivate _onPaste = this._register(new Emitter<IPasteData>());\n\tpublic readonly onPaste: Event<IPasteData> = this._onPaste.event;\n\n\tprivate _onType = this._register(new Emitter<ITypeData>());\n\tpublic readonly onType: Event<ITypeData> = this._onType.event;\n\n\tprivate _onCompositionStart = this._register(new Emitter<ICompositionStartEvent>());\n\tpublic readonly onCompositionStart: Event<ICompositionStartEvent> = this._onCompositionStart.event;\n\n\tprivate _onCompositionUpdate = this._register(new Emitter<ICompositionData>());\n\tpublic readonly onCompositionUpdate: Event<ICompositionData> = this._onCompositionUpdate.event;\n\n\tprivate _onCompositionEnd = this._register(new Emitter<void>());\n\tpublic readonly onCompositionEnd: Event<void> = this._onCompositionEnd.event;\n\n\tprivate _onSelectionChangeRequest = this._register(new Emitter<Selection>());\n\tpublic readonly onSelectionChangeRequest: Event<Selection> = this._onSelectionChangeRequest.event;\n\n\t// ---\n\n\tprivate readonly _asyncTriggerCut: RunOnceScheduler;\n\n\tprivate readonly _asyncFocusGainWriteScreenReaderContent: MutableDisposable<RunOnceScheduler> = this._register(new MutableDisposable());\n\n\tprivate _textAreaState: TextAreaState;\n\n\tpublic get textAreaState(): TextAreaState {\n\t\treturn this._textAreaState;\n\t}\n\n\tprivate _selectionChangeListener: IDisposable | null;\n\n\tprivate _hasFocus: boolean;\n\tprivate _currentComposition: CompositionContext | null;\n\n\tconstructor(\n\t\tprivate readonly _host: ITextAreaInputHost,\n\t\tprivate readonly _textArea: ICompleteTextAreaWrapper,\n\t\tprivate readonly _OS: OperatingSystem,\n\t\tprivate readonly _browser: IBrowser,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._asyncTriggerCut = this._register(new RunOnceScheduler(() => this._onCut.fire(), 0));\n\t\tthis._textAreaState = TextAreaState.EMPTY;\n\t\tthis._selectionChangeListener = null;\n\t\tif (this._accessibilityService.isScreenReaderOptimized()) {\n\t\t\tthis.writeNativeTextAreaContent('ctor');\n\t\t}\n\t\tthis._register(Event.runAndSubscribe(this._accessibilityService.onDidChangeScreenReaderOptimized, () => {\n\t\t\tif (this._accessibilityService.isScreenReaderOptimized() && !this._asyncFocusGainWriteScreenReaderContent.value) {\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.value = this._register(new RunOnceScheduler(() => this.writeNativeTextAreaContent('asyncFocusGain'), 0));\n\t\t\t} else {\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.clear();\n\t\t\t}\n\t\t}));\n\t\tthis._hasFocus = false;\n\t\tthis._currentComposition = null;\n\n\t\tlet lastKeyDown: IKeyboardEvent | null = null;\n\n\t\tthis._register(this._textArea.onKeyDown((_e) => {\n\t\t\tconst e = new StandardKeyboardEvent(_e);\n\t\t\tif (e.keyCode === KeyCode.KEY_IN_COMPOSITION\n\t\t\t\t|| (this._currentComposition && e.keyCode === KeyCode.Backspace)) {\n\t\t\t\t// Stop propagation for keyDown events if the IME is processing key input\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t// Prevent default always for `Esc`, otherwise it will generate a keypress\n\t\t\t\t// See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tlastKeyDown = e;\n\t\t\tthis._onKeyDown.fire(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onKeyUp((_e) => {\n\t\t\tconst e = new StandardKeyboardEvent(_e);\n\t\t\tthis._onKeyUp.fire(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onCompositionStart((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionstart]`, e);\n\t\t\t}\n\n\t\t\tconst currentComposition = new CompositionContext();\n\t\t\tif (this._currentComposition) {\n\t\t\t\t// simply reset the composition context\n\t\t\t\tthis._currentComposition = currentComposition;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._currentComposition = currentComposition;\n\n\t\t\tif (\n\t\t\t\tthis._OS === OperatingSystem.Macintosh\n\t\t\t\t&& lastKeyDown\n\t\t\t\t&& lastKeyDown.equals(KeyCode.KEY_IN_COMPOSITION)\n\t\t\t\t&& this._textAreaState.selectionStart === this._textAreaState.selectionEnd\n\t\t\t\t&& this._textAreaState.selectionStart > 0\n\t\t\t\t&& this._textAreaState.value.substr(this._textAreaState.selectionStart - 1, 1) === e.data\n\t\t\t\t&& (lastKeyDown.code === 'ArrowRight' || lastKeyDown.code === 'ArrowLeft')\n\t\t\t) {\n\t\t\t\t// Handling long press case on Chromium/Safari macOS + arrow key => pretend the character was selected\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(`[compositionstart] Handling long press case on macOS + arrow key`, e);\n\t\t\t\t}\n\t\t\t\t// Pretend the previous character was composed (in order to get it removed by subsequent compositionupdate events)\n\t\t\t\tcurrentComposition.handleCompositionUpdate('x');\n\t\t\t\tthis._onCompositionStart.fire({ data: e.data });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._browser.isAndroid) {\n\t\t\t\t// when tapping on the editor, Android enters composition mode to edit the current word\n\t\t\t\t// so we cannot clear the textarea on Android and we must pretend the current word was selected\n\t\t\t\tthis._onCompositionStart.fire({ data: e.data });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._onCompositionStart.fire({ data: e.data });\n\t\t}));\n\n\t\tthis._register(this._textArea.onCompositionUpdate((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionupdate]`, e);\n\t\t\t}\n\t\t\tconst currentComposition = this._currentComposition;\n\t\t\tif (!currentComposition) {\n\t\t\t\t// should not be possible to receive a 'compositionupdate' without a 'compositionstart'\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._browser.isAndroid) {\n\t\t\t\t// On Android, the data sent with the composition update event is unusable.\n\t\t\t\t// For example, if the cursor is in the middle of a word like Mic|osoft\n\t\t\t\t// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n\t\t\t\t// This is not really usable because it doesn't tell us where the edit began and where it ended.\n\t\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\t\tconst typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n\t\t\t\tthis._textAreaState = newState;\n\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\tthis._onCompositionUpdate.fire(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst typeInput = currentComposition.handleCompositionUpdate(e.data);\n\t\t\tthis._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\tthis._onType.fire(typeInput);\n\t\t\tthis._onCompositionUpdate.fire(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onCompositionEnd((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionend]`, e);\n\t\t\t}\n\t\t\tconst currentComposition = this._currentComposition;\n\t\t\tif (!currentComposition) {\n\t\t\t\t// https://github.com/microsoft/monaco-editor/issues/1663\n\t\t\t\t// On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._currentComposition = null;\n\n\t\t\tif (this._browser.isAndroid) {\n\t\t\t\t// On Android, the data sent with the composition update event is unusable.\n\t\t\t\t// For example, if the cursor is in the middle of a word like Mic|osoft\n\t\t\t\t// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n\t\t\t\t// This is not really usable because it doesn't tell us where the edit began and where it ended.\n\t\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\t\tconst typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n\t\t\t\tthis._textAreaState = newState;\n\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst typeInput = currentComposition.handleCompositionUpdate(e.data);\n\t\t\tthis._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\tthis._onType.fire(typeInput);\n\t\t\tthis._onCompositionEnd.fire();\n\t\t}));\n\n\t\tthis._register(this._textArea.onInput((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[input]`, e);\n\t\t\t}\n\n\t\t\t// Pretend here we touched the text area, as the `input` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received input event');\n\n\t\t\tif (this._currentComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\tconst typeInput = TextAreaState.deduceInput(this._textAreaState, newState, /*couldBeEmojiInput*/this._OS === OperatingSystem.Macintosh);\n\n\t\t\tif (typeInput.replacePrevCharCnt === 0 && typeInput.text.length === 1) {\n\t\t\t\t// one character was typed\n\t\t\t\tif (\n\t\t\t\t\tstrings.isHighSurrogate(typeInput.text.charCodeAt(0))\n\t\t\t\t\t|| typeInput.text.charCodeAt(0) === 0x7f /* Delete */\n\t\t\t\t) {\n\t\t\t\t\t// Ignore invalid input but keep it around for next time\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._textAreaState = newState;\n\t\t\tif (\n\t\t\t\ttypeInput.text !== ''\n\t\t\t\t|| typeInput.replacePrevCharCnt !== 0\n\t\t\t\t|| typeInput.replaceNextCharCnt !== 0\n\t\t\t\t|| typeInput.positionDelta !== 0\n\t\t\t) {\n\t\t\t\t// https://w3c.github.io/input-events/#interface-InputEvent-Attributes\n\t\t\t\tif (e.inputType === 'insertFromPaste') {\n\t\t\t\t\tthis._onPaste.fire({\n\t\t\t\t\t\ttext: typeInput.text,\n\t\t\t\t\t\tmetadata: InMemoryClipboardMetadataManager.INSTANCE.get(typeInput.text)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// --- Clipboard operations\n\n\t\tthis._register(this._textArea.onCut((e) => {\n\t\t\tthis._logService.trace(`TextAreaInput#onCut`, e);\n\t\t\t// Pretend here we touched the text area, as the `cut` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received cut event');\n\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t\tthis._asyncTriggerCut.schedule();\n\t\t}));\n\n\t\tthis._register(this._textArea.onCopy((e) => {\n\t\t\tthis._logService.trace(`TextAreaInput#onCopy`, e);\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onPaste((e) => {\n\t\t\tthis._logService.trace(`TextAreaInput#onPaste`, e);\n\t\t\t// Pretend here we touched the text area, as the `paste` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received paste event');\n\n\t\t\te.preventDefault();\n\n\t\t\tif (!e.clipboardData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\t\tthis._logService.trace(`TextAreaInput#onPaste with id : `, metadata?.id, ' with text.length: ', text.length);\n\t\t\tif (!text) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// try the in-memory store\n\t\t\tmetadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\n\t\t\tthis._logService.trace(`TextAreaInput#onPaste (before onPaste)`);\n\t\t\tthis._onPaste.fire({\n\t\t\t\ttext: text,\n\t\t\t\tmetadata: metadata\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._textArea.onFocus(() => {\n\t\t\tconst hadFocus = this._hasFocus;\n\n\t\t\tthis._setHasFocus(true);\n\n\t\t\tif (this._accessibilityService.isScreenReaderOptimized() && this._browser.isSafari && !hadFocus && this._hasFocus) {\n\t\t\t\t// When \"tabbing into\" the textarea, immediately after dispatching the 'focus' event,\n\t\t\t\t// Safari will always move the selection at offset 0 in the textarea\n\t\t\t\tif (!this._asyncFocusGainWriteScreenReaderContent.value) {\n\t\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.value = new RunOnceScheduler(() => this.writeNativeTextAreaContent('asyncFocusGain'), 0);\n\t\t\t\t}\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.value.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._textArea.onBlur(() => {\n\t\t\tif (this._currentComposition) {\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/112621\n\t\t\t\t// where compositionend is not triggered when the editor\n\t\t\t\t// is taken off-dom during a composition\n\n\t\t\t\t// Clear the flag to be able to write to the textarea\n\t\t\t\tthis._currentComposition = null;\n\n\t\t\t\t// Clear the textarea to avoid an unwanted cursor type\n\t\t\t\tthis.writeNativeTextAreaContent('blurWithoutCompositionEnd');\n\n\t\t\t\t// Fire artificial composition end\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t}\n\t\t\tthis._setHasFocus(false);\n\t\t}));\n\t\tthis._register(this._textArea.onSyntheticTap(() => {\n\t\t\tif (this._browser.isAndroid && this._currentComposition) {\n\t\t\t\t// on Android, tapping does not cancel the current composition, so the\n\t\t\t\t// textarea is stuck showing the old composition\n\n\t\t\t\t// Clear the flag to be able to write to the textarea\n\t\t\t\tthis._currentComposition = null;\n\n\t\t\t\t// Clear the textarea to avoid an unwanted cursor type\n\t\t\t\tthis.writeNativeTextAreaContent('tapWithoutCompositionEnd');\n\n\t\t\t\t// Fire artificial composition end\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _installSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event.\n\t\t//\n\t\t// The `selectionchange` event appears to be emitted under numerous other circumstances,\n\t\t// so it is quite a challenge to distinguish a `selectionchange` coming in from a user\n\t\t// using a Braille display from all the other cases.\n\t\t//\n\t\t// The problems with the `selectionchange` event are:\n\t\t//  * the event is emitted when the textarea is focused programmatically -- textarea.focus()\n\t\t//  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)\n\t\t//  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'\n\t\t//  * the event is emitted when tabbing into the textarea\n\t\t//  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)\n\t\t//  * the event sometimes comes in bursts for a single logical textarea operation\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn dom.addDisposableListener(this._textArea.ownerDocument, 'selectionchange', (e) => {//todo\n\t\t\tinputLatency.onSelectionChange();\n\n\t\t\tif (!this._hasFocus) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._currentComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._browser.isChrome) {\n\t\t\t\t// Support only for Chrome until testing happens on other browsers\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst now = Date.now();\n\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst delta2 = now - this._textArea.getIgnoreSelectionChangeTime();\n\t\t\tthis._textArea.resetSelectionChangeTime();\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the textarea\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._textAreaState.selection) {\n\t\t\t\t// Cannot correlate a position in the textarea with a position in the editor...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newValue = this._textArea.getValue();\n\t\t\tif (this._textAreaState.value !== newValue) {\n\t\t\t\t// Cannot correlate a position in the textarea with a position in the editor...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newSelectionStart = this._textArea.getSelectionStart();\n\t\t\tconst newSelectionEnd = this._textArea.getSelectionEnd();\n\t\t\tif (this._textAreaState.selectionStart === newSelectionStart && this._textAreaState.selectionEnd === newSelectionEnd) {\n\t\t\t\t// Nothing to do...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst _newSelectionStartPosition = this._textAreaState.deduceEditorPosition(newSelectionStart);\n\t\t\tconst newSelectionStartPosition = this._host.deduceModelPosition(_newSelectionStartPosition[0]!, _newSelectionStartPosition[1], _newSelectionStartPosition[2]);\n\n\t\t\tconst _newSelectionEndPosition = this._textAreaState.deduceEditorPosition(newSelectionEnd);\n\t\t\tconst newSelectionEndPosition = this._host.deduceModelPosition(_newSelectionEndPosition[0]!, _newSelectionEndPosition[1], _newSelectionEndPosition[2]);\n\n\t\t\tconst newSelection = new Selection(\n\t\t\t\tnewSelectionStartPosition.lineNumber, newSelectionStartPosition.column,\n\t\t\t\tnewSelectionEndPosition.lineNumber, newSelectionEndPosition.column\n\t\t\t);\n\n\t\t\tthis._onSelectionChangeRequest.fire(newSelection);\n\t\t});\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this._selectionChangeListener) {\n\t\t\tthis._selectionChangeListener.dispose();\n\t\t\tthis._selectionChangeListener = null;\n\t\t}\n\t}\n\n\tpublic focusTextArea(): void {\n\t\t// Setting this._hasFocus and writing the screen reader content\n\t\t// will result in a focus() and setSelectionRange() in the textarea\n\t\tthis._setHasFocus(true);\n\n\t\t// If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic isFocused(): boolean {\n\t\treturn this._hasFocus;\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tthis._setHasFocus(this._textArea.hasFocus());\n\t}\n\n\tprivate _setHasFocus(newHasFocus: boolean): void {\n\t\tif (this._hasFocus === newHasFocus) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._hasFocus = newHasFocus;\n\n\t\tif (this._selectionChangeListener) {\n\t\t\tthis._selectionChangeListener.dispose();\n\t\t\tthis._selectionChangeListener = null;\n\t\t}\n\t\tif (this._hasFocus) {\n\t\t\tthis._selectionChangeListener = this._installSelectionChangeListener();\n\t\t}\n\n\t\tif (this._hasFocus) {\n\t\t\tthis.writeNativeTextAreaContent('focusgain');\n\t\t}\n\n\t\tif (this._hasFocus) {\n\t\t\tthis._onFocus.fire();\n\t\t} else {\n\t\t\tthis._onBlur.fire();\n\t\t}\n\t}\n\n\tprivate _setAndWriteTextAreaState(reason: string, textAreaState: TextAreaState): void {\n\t\tif (!this._hasFocus) {\n\t\t\ttextAreaState = textAreaState.collapseSelection();\n\t\t}\n\t\tif (!textAreaState.isWrittenToTextArea(this._textArea, this._hasFocus)) {\n\t\t\tthis._logService.trace(`writeTextAreaState(reason: ${reason})`);\n\t\t}\n\t\ttextAreaState.writeToTextArea(reason, this._textArea, this._hasFocus);\n\t\tthis._textAreaState = textAreaState;\n\t}\n\n\tpublic writeNativeTextAreaContent(reason: string): void {\n\t\tif ((!this._accessibilityService.isScreenReaderOptimized() && reason === 'render') || this._currentComposition) {\n\t\t\t// Do not write to the text on render unless a screen reader is being used #192278\n\t\t\t// Do not write to the text area when doing composition\n\t\t\treturn;\n\t\t}\n\t\tthis._setAndWriteTextAreaState(reason, this._host.getScreenReaderContent());\n\t}\n\n\tprivate _ensureClipboardGetsEditorSelection(e: ClipboardEvent): void {\n\t\tconst dataToCopy = this._host.getDataToCopy();\n\t\tlet id = undefined;\n\t\tif (this._logService.getLevel() === LogLevel.Trace) {\n\t\t\tid = generateUuid();\n\t\t}\n\t\tconst storedMetadata: ClipboardStoredMetadata = {\n\t\t\tversion: 1,\n\t\t\tid,\n\t\t\tisFromEmptySelection: dataToCopy.isFromEmptySelection,\n\t\t\tmulticursorText: dataToCopy.multicursorText,\n\t\t\tmode: dataToCopy.mode\n\t\t};\n\t\tInMemoryClipboardMetadataManager.INSTANCE.set(\n\t\t\t// When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n\t\t\t// Firefox pastes \"LINE\\n\", so let's work around this quirk\n\t\t\t(this._browser.isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text),\n\t\t\tstoredMetadata\n\t\t);\n\n\t\te.preventDefault();\n\t\tif (e.clipboardData) {\n\t\t\tClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n\t\t}\n\t\tthis._logService.trace('TextAreaEditContextInput#_ensureClipboardGetsEditorSelection with id : ', id, ' with text.length: ', dataToCopy.text.length);\n\t}\n}\n\nexport class TextAreaWrapper extends Disposable implements ICompleteTextAreaWrapper {\n\n\tpublic readonly onKeyDown: Event<KeyboardEvent>;\n\tpublic readonly onKeyPress: Event<KeyboardEvent>;\n\tpublic readonly onKeyUp: Event<KeyboardEvent>;\n\tpublic readonly onCompositionStart: Event<CompositionEvent>;\n\tpublic readonly onCompositionUpdate: Event<CompositionEvent>;\n\tpublic readonly onCompositionEnd: Event<CompositionEvent>;\n\tpublic readonly onBeforeInput: Event<InputEvent>;\n\tpublic readonly onInput: Event<InputEvent>;\n\tpublic readonly onCut: Event<ClipboardEvent>;\n\tpublic readonly onCopy: Event<ClipboardEvent>;\n\tpublic readonly onPaste: Event<ClipboardEvent>;\n\tpublic readonly onFocus: Event<FocusEvent>;\n\tpublic readonly onBlur: Event<FocusEvent>; //  = this._register(new DomEmitter(this._actual, 'blur')).event;\n\n\tpublic get ownerDocument(): Document {\n\t\treturn this._actual.ownerDocument;\n\t}\n\n\tprivate _onSyntheticTap = this._register(new Emitter<void>());\n\tpublic readonly onSyntheticTap: Event<void> = this._onSyntheticTap.event;\n\n\tprivate _ignoreSelectionChangeTime: number;\n\n\tconstructor(\n\t\tprivate readonly _actual: HTMLTextAreaElement\n\t) {\n\t\tsuper();\n\t\tthis._ignoreSelectionChangeTime = 0;\n\t\tthis.onKeyDown = this._register(new DomEmitter(this._actual, 'keydown')).event;\n\t\tthis.onKeyPress = this._register(new DomEmitter(this._actual, 'keypress')).event;\n\t\tthis.onKeyUp = this._register(new DomEmitter(this._actual, 'keyup')).event;\n\t\tthis.onCompositionStart = this._register(new DomEmitter(this._actual, 'compositionstart')).event;\n\t\tthis.onCompositionUpdate = this._register(new DomEmitter(this._actual, 'compositionupdate')).event;\n\t\tthis.onCompositionEnd = this._register(new DomEmitter(this._actual, 'compositionend')).event;\n\t\tthis.onBeforeInput = this._register(new DomEmitter(this._actual, 'beforeinput')).event;\n\t\tthis.onInput = <Event<InputEvent>>this._register(new DomEmitter(this._actual, 'input')).event;\n\t\tthis.onCut = this._register(new DomEmitter(this._actual, 'cut')).event;\n\t\tthis.onCopy = this._register(new DomEmitter(this._actual, 'copy')).event;\n\t\tthis.onPaste = this._register(new DomEmitter(this._actual, 'paste')).event;\n\t\tthis.onFocus = this._register(new DomEmitter(this._actual, 'focus')).event;\n\t\tthis.onBlur = this._register(new DomEmitter(this._actual, 'blur')).event;\n\n\t\tthis._register(this.onKeyDown(() => inputLatency.onKeyDown()));\n\t\tthis._register(this.onBeforeInput(() => inputLatency.onBeforeInput()));\n\t\tthis._register(this.onInput(() => inputLatency.onInput()));\n\t\tthis._register(this.onKeyUp(() => inputLatency.onKeyUp()));\n\t\tthis._register(dom.addDisposableListener(this._actual, TextAreaSyntethicEvents.Tap, () => this._onSyntheticTap.fire()));\n\t}\n\n\tpublic hasFocus(): boolean {\n\t\tconst shadowRoot = dom.getShadowRoot(this._actual);\n\t\tif (shadowRoot) {\n\t\t\treturn shadowRoot.activeElement === this._actual;\n\t\t} else if (this._actual.isConnected) {\n\t\t\treturn dom.getActiveElement() === this._actual;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tpublic getIgnoreSelectionChangeTime(): number {\n\t\treturn this._ignoreSelectionChangeTime;\n\t}\n\n\tpublic resetSelectionChangeTime(): void {\n\t\tthis._ignoreSelectionChangeTime = 0;\n\t}\n\n\tpublic getValue(): string {\n\t\t// console.log('current value: ' + this._textArea.value);\n\t\treturn this._actual.value;\n\t}\n\n\tpublic setValue(reason: string, value: string): void {\n\t\tconst textArea = this._actual;\n\t\tif (textArea.value === value) {\n\t\t\t// No change\n\t\t\treturn;\n\t\t}\n\t\t// console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);\n\t\tthis.setIgnoreSelectionChangeTime('setValue');\n\t\ttextArea.value = value;\n\t}\n\n\tpublic getSelectionStart(): number {\n\t\treturn this._actual.selectionDirection === 'backward' ? this._actual.selectionEnd : this._actual.selectionStart;\n\t}\n\n\tpublic getSelectionEnd(): number {\n\t\treturn this._actual.selectionDirection === 'backward' ? this._actual.selectionStart : this._actual.selectionEnd;\n\t}\n\n\tpublic setSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void {\n\t\tconst textArea = this._actual;\n\n\t\tlet activeElement: Element | null = null;\n\t\tconst shadowRoot = dom.getShadowRoot(textArea);\n\t\tif (shadowRoot) {\n\t\t\tactiveElement = shadowRoot.activeElement;\n\t\t} else {\n\t\t\tactiveElement = dom.getActiveElement();\n\t\t}\n\t\tconst activeWindow = dom.getWindow(activeElement);\n\n\t\tconst currentIsFocused = (activeElement === textArea);\n\t\tconst currentSelectionStart = textArea.selectionStart;\n\t\tconst currentSelectionEnd = textArea.selectionEnd;\n\n\t\tif (currentIsFocused && currentSelectionStart === selectionStart && currentSelectionEnd === selectionEnd) {\n\t\t\t// No change\n\t\t\t// Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377\n\t\t\tif (browser.isFirefox && activeWindow.parent !== activeWindow) {\n\t\t\t\ttextArea.focus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);\n\n\t\tif (currentIsFocused) {\n\t\t\t// No need to focus, only need to change the selection range\n\t\t\tthis.setIgnoreSelectionChangeTime('setSelectionRange');\n\t\t\ttextArea.setSelectionRange(selectionStart, selectionEnd);\n\t\t\tif (browser.isFirefox && activeWindow.parent !== activeWindow) {\n\t\t\t\ttextArea.focus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If the focus is outside the textarea, browsers will try really hard to reveal the textarea.\n\t\t// Here, we try to undo the browser's desperate reveal.\n\t\ttry {\n\t\t\tconst scrollState = dom.saveParentsScrollTop(textArea);\n\t\t\tthis.setIgnoreSelectionChangeTime('setSelectionRange');\n\t\t\ttextArea.focus();\n\t\t\ttextArea.setSelectionRange(selectionStart, selectionEnd);\n\t\t\tdom.restoreParentsScrollTop(textArea, scrollState);\n\t\t} catch (e) {\n\t\t\t// Sometimes IE throws when setting selection (e.g. textarea is off-DOM)\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as browser from '../../../../../base/browser/browser.js';\nimport * as dom from '../../../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../../../base/browser/event.js';\nimport { IKeyboardEvent, StandardKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { inputLatency } from '../../../../../base/browser/performance.js';\nimport { RunOnceScheduler } from '../../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../../base/common/event.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { OperatingSystem } from '../../../../../base/common/platform.js';\nimport * as strings from '../../../../../base/common/strings.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { ILogService, LogLevel } from '../../../../../platform/log/common/log.js';\nimport { ClipboardDataToCopy, ClipboardEventUtils, ClipboardStoredMetadata, InMemoryClipboardMetadataManager } from '../clipboardUtils.js';\nimport { _debugComposition, ITextAreaWrapper, ITypeData, TextAreaState } from './textAreaEditContextState.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\n\nexport namespace TextAreaSyntethicEvents {\n\texport const Tap = '-monaco-textarea-synthetic-tap';\n}\n\nexport interface ICompositionData {\n}\n\n\nexport interface IPasteData {\n\ttext: string;\n\tmetadata: ClipboardStoredMetadata | null;\n}\n\nexport interface ITextAreaInputHost {\n\tgetDataToCopy(): ClipboardDataToCopy;\n\tgetScreenReaderContent(): TextAreaState;\n\tdeduceModelPosition(viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position;\n}\n\nexport interface ICompositionStartEvent {\n\tdata: string;\n}\n\nexport interface ICompleteTextAreaWrapper extends ITextAreaWrapper {\n\treadonly onKeyDown: Event<KeyboardEvent>;\n\treadonly onKeyUp: Event<KeyboardEvent>;\n\treadonly onCompositionStart: Event<CompositionEvent>;\n\treadonly onCompositionUpdate: Event<CompositionEvent>;\n\treadonly onCompositionEnd: Event<CompositionEvent>;\n\treadonly onInput: Event<InputEvent>;\n\treadonly onCut: Event<ClipboardEvent>;\n\treadonly onCopy: Event<ClipboardEvent>;\n\treadonly onPaste: Event<ClipboardEvent>;\n\treadonly onFocus: Event<FocusEvent>;\n\treadonly onBlur: Event<FocusEvent>;\n\treadonly onSyntheticTap: Event<void>;\n\n\treadonly ownerDocument: Document;\n\n\tsetIgnoreSelectionChangeTime(reason: string): void;\n\tgetIgnoreSelectionChangeTime(): number;\n\tresetSelectionChangeTime(): void;\n\n\thasFocus(): boolean;\n}\n\nexport interface IBrowser {\n\tisAndroid: boolean;\n\tisFirefox: boolean;\n\tisChrome: boolean;\n\tisSafari: boolean;\n}\n\nclass CompositionContext {\n\n\tprivate _lastTypeTextLength: number;\n\n\tconstructor() {\n\t\tthis._lastTypeTextLength = 0;\n\t}\n\n\tpublic handleCompositionUpdate(text: string | null | undefined): ITypeData {\n\t\ttext = text || '';\n\t\tconst typeInput: ITypeData = {\n\t\t\ttext: text,\n\t\t\treplacePrevCharCnt: this._lastTypeTextLength,\n\t\t\treplaceNextCharCnt: 0,\n\t\t\tpositionDelta: 0\n\t\t};\n\t\tthis._lastTypeTextLength = text.length;\n\t\treturn typeInput;\n\t}\n}\n\n/**\n * Writes screen reader content to the textarea and is able to analyze its input events to generate:\n *  - onCut\n *  - onPaste\n *  - onType\n *\n * Composition events are generated for presentation purposes (composition input is reflected in onType).\n */\nexport class TextAreaInput extends Disposable {\n\n\tprivate _onFocus = this._register(new Emitter<void>());\n\tpublic readonly onFocus: Event<void> = this._onFocus.event;\n\n\tprivate _onBlur = this._register(new Emitter<void>());\n\tpublic readonly onBlur: Event<void> = this._onBlur.event;\n\n\tprivate _onKeyDown = this._register(new Emitter<IKeyboardEvent>());\n\tpublic readonly onKeyDown: Event<IKeyboardEvent> = this._onKeyDown.event;\n\n\tprivate _onKeyUp = this._register(new Emitter<IKeyboardEvent>());\n\tpublic readonly onKeyUp: Event<IKeyboardEvent> = this._onKeyUp.event;\n\n\tprivate _onCut = this._register(new Emitter<void>());\n\tpublic readonly onCut: Event<void> = this._onCut.event;\n\n\tprivate _onPaste = this._register(new Emitter<IPasteData>());\n\tpublic readonly onPaste: Event<IPasteData> = this._onPaste.event;\n\n\tprivate _onType = this._register(new Emitter<ITypeData>());\n\tpublic readonly onType: Event<ITypeData> = this._onType.event;\n\n\tprivate _onCompositionStart = this._register(new Emitter<ICompositionStartEvent>());\n\tpublic readonly onCompositionStart: Event<ICompositionStartEvent> = this._onCompositionStart.event;\n\n\tprivate _onCompositionUpdate = this._register(new Emitter<ICompositionData>());\n\tpublic readonly onCompositionUpdate: Event<ICompositionData> = this._onCompositionUpdate.event;\n\n\tprivate _onCompositionEnd = this._register(new Emitter<void>());\n\tpublic readonly onCompositionEnd: Event<void> = this._onCompositionEnd.event;\n\n\tprivate _onSelectionChangeRequest = this._register(new Emitter<Selection>());\n\tpublic readonly onSelectionChangeRequest: Event<Selection> = this._onSelectionChangeRequest.event;\n\n\t// ---\n\n\tprivate readonly _asyncTriggerCut: RunOnceScheduler;\n\n\tprivate readonly _asyncFocusGainWriteScreenReaderContent: MutableDisposable<RunOnceScheduler> = this._register(new MutableDisposable());\n\n\tprivate _textAreaState: TextAreaState;\n\n\tpublic get textAreaState(): TextAreaState {\n\t\treturn this._textAreaState;\n\t}\n\n\tprivate _selectionChangeListener: IDisposable | null;\n\n\tprivate _hasFocus: boolean;\n\tprivate _currentComposition: CompositionContext | null;\n\n\tconstructor(\n\t\tprivate readonly _host: ITextAreaInputHost,\n\t\tprivate readonly _textArea: ICompleteTextAreaWrapper,\n\t\tprivate readonly _OS: OperatingSystem,\n\t\tprivate readonly _browser: IBrowser,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._asyncTriggerCut = this._register(new RunOnceScheduler(() => this._onCut.fire(), 0));\n\t\tthis._textAreaState = TextAreaState.EMPTY;\n\t\tthis._selectionChangeListener = null;\n\t\tif (this._accessibilityService.isScreenReaderOptimized()) {\n\t\t\tthis.writeNativeTextAreaContent('ctor');\n\t\t}\n\t\tthis._register(Event.runAndSubscribe(this._accessibilityService.onDidChangeScreenReaderOptimized, () => {\n\t\t\tif (this._accessibilityService.isScreenReaderOptimized() && !this._asyncFocusGainWriteScreenReaderContent.value) {\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.value = this._register(new RunOnceScheduler(() => this.writeNativeTextAreaContent('asyncFocusGain'), 0));\n\t\t\t} else {\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.clear();\n\t\t\t}\n\t\t}));\n\t\tthis._hasFocus = false;\n\t\tthis._currentComposition = null;\n\n\t\tlet lastKeyDown: IKeyboardEvent | null = null;\n\n\t\tthis._register(this._textArea.onKeyDown((_e) => {\n\t\t\tconst e = new StandardKeyboardEvent(_e);\n\t\t\tif (e.keyCode === KeyCode.KEY_IN_COMPOSITION\n\t\t\t\t|| (this._currentComposition && e.keyCode === KeyCode.Backspace)) {\n\t\t\t\t// Stop propagation for keyDown events if the IME is processing key input\n\t\t\t\te.stopPropagation();\n\t\t\t}\n\n\t\t\tif (e.equals(KeyCode.Escape)) {\n\t\t\t\t// Prevent default always for `Esc`, otherwise it will generate a keypress\n\t\t\t\t// See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tlastKeyDown = e;\n\t\t\tthis._onKeyDown.fire(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onKeyUp((_e) => {\n\t\t\tconst e = new StandardKeyboardEvent(_e);\n\t\t\tthis._onKeyUp.fire(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onCompositionStart((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionstart]`, e);\n\t\t\t}\n\n\t\t\tconst currentComposition = new CompositionContext();\n\t\t\tif (this._currentComposition) {\n\t\t\t\t// simply reset the composition context\n\t\t\t\tthis._currentComposition = currentComposition;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._currentComposition = currentComposition;\n\n\t\t\tif (\n\t\t\t\tthis._OS === OperatingSystem.Macintosh\n\t\t\t\t&& lastKeyDown\n\t\t\t\t&& lastKeyDown.equals(KeyCode.KEY_IN_COMPOSITION)\n\t\t\t\t&& this._textAreaState.selectionStart === this._textAreaState.selectionEnd\n\t\t\t\t&& this._textAreaState.selectionStart > 0\n\t\t\t\t&& this._textAreaState.value.substr(this._textAreaState.selectionStart - 1, 1) === e.data\n\t\t\t\t&& (lastKeyDown.code === 'ArrowRight' || lastKeyDown.code === 'ArrowLeft')\n\t\t\t) {\n\t\t\t\t// Handling long press case on Chromium/Safari macOS + arrow key => pretend the character was selected\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(`[compositionstart] Handling long press case on macOS + arrow key`, e);\n\t\t\t\t}\n\t\t\t\t// Pretend the previous character was composed (in order to get it removed by subsequent compositionupdate events)\n\t\t\t\tcurrentComposition.handleCompositionUpdate('x');\n\t\t\t\tthis._onCompositionStart.fire({ data: e.data });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this._browser.isAndroid) {\n\t\t\t\t// when tapping on the editor, Android enters composition mode to edit the current word\n\t\t\t\t// so we cannot clear the textarea on Android and we must pretend the current word was selected\n\t\t\t\tthis._onCompositionStart.fire({ data: e.data });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._onCompositionStart.fire({ data: e.data });\n\t\t}));\n\n\t\tthis._register(this._textArea.onCompositionUpdate((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionupdate]`, e);\n\t\t\t}\n\t\t\tconst currentComposition = this._currentComposition;\n\t\t\tif (!currentComposition) {\n\t\t\t\t// should not be possible to receive a 'compositionupdate' without a 'compositionstart'\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._browser.isAndroid) {\n\t\t\t\t// On Android, the data sent with the composition update event is unusable.\n\t\t\t\t// For example, if the cursor is in the middle of a word like Mic|osoft\n\t\t\t\t// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n\t\t\t\t// This is not really usable because it doesn't tell us where the edit began and where it ended.\n\t\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\t\tconst typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n\t\t\t\tthis._textAreaState = newState;\n\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\tthis._onCompositionUpdate.fire(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst typeInput = currentComposition.handleCompositionUpdate(e.data);\n\t\t\tthis._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\tthis._onType.fire(typeInput);\n\t\t\tthis._onCompositionUpdate.fire(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onCompositionEnd((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[compositionend]`, e);\n\t\t\t}\n\t\t\tconst currentComposition = this._currentComposition;\n\t\t\tif (!currentComposition) {\n\t\t\t\t// https://github.com/microsoft/monaco-editor/issues/1663\n\t\t\t\t// On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._currentComposition = null;\n\n\t\t\tif (this._browser.isAndroid) {\n\t\t\t\t// On Android, the data sent with the composition update event is unusable.\n\t\t\t\t// For example, if the cursor is in the middle of a word like Mic|osoft\n\t\t\t\t// and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n\t\t\t\t// This is not really usable because it doesn't tell us where the edit began and where it ended.\n\t\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\t\tconst typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n\t\t\t\tthis._textAreaState = newState;\n\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst typeInput = currentComposition.handleCompositionUpdate(e.data);\n\t\t\tthis._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\tthis._onType.fire(typeInput);\n\t\t\tthis._onCompositionEnd.fire();\n\t\t}));\n\n\t\tthis._register(this._textArea.onInput((e) => {\n\t\t\tif (_debugComposition) {\n\t\t\t\tconsole.log(`[input]`, e);\n\t\t\t}\n\n\t\t\t// Pretend here we touched the text area, as the `input` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received input event');\n\n\t\t\tif (this._currentComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n\t\t\tconst typeInput = TextAreaState.deduceInput(this._textAreaState, newState, /*couldBeEmojiInput*/this._OS === OperatingSystem.Macintosh);\n\n\t\t\tif (typeInput.replacePrevCharCnt === 0 && typeInput.text.length === 1) {\n\t\t\t\t// one character was typed\n\t\t\t\tif (\n\t\t\t\t\tstrings.isHighSurrogate(typeInput.text.charCodeAt(0))\n\t\t\t\t\t|| typeInput.text.charCodeAt(0) === 0x7f /* Delete */\n\t\t\t\t) {\n\t\t\t\t\t// Ignore invalid input but keep it around for next time\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._textAreaState = newState;\n\t\t\tif (\n\t\t\t\ttypeInput.text !== ''\n\t\t\t\t|| typeInput.replacePrevCharCnt !== 0\n\t\t\t\t|| typeInput.replaceNextCharCnt !== 0\n\t\t\t\t|| typeInput.positionDelta !== 0\n\t\t\t) {\n\t\t\t\t// https://w3c.github.io/input-events/#interface-InputEvent-Attributes\n\t\t\t\tif (e.inputType === 'insertFromPaste') {\n\t\t\t\t\tthis._onPaste.fire({\n\t\t\t\t\t\ttext: typeInput.text,\n\t\t\t\t\t\tmetadata: InMemoryClipboardMetadataManager.INSTANCE.get(typeInput.text)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis._onType.fire(typeInput);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// --- Clipboard operations\n\n\t\tthis._register(this._textArea.onCut((e) => {\n\t\t\tthis._logService.trace(`TextAreaInput#onCut`, e);\n\t\t\t// Pretend here we touched the text area, as the `cut` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received cut event');\n\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t\tthis._asyncTriggerCut.schedule();\n\t\t}));\n\n\t\tthis._register(this._textArea.onCopy((e) => {\n\t\t\tthis._logService.trace(`TextAreaInput#onCopy`, e);\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t}));\n\n\t\tthis._register(this._textArea.onPaste((e) => {\n\t\t\tthis._logService.trace(`TextAreaInput#onPaste`, e);\n\t\t\t// Pretend here we touched the text area, as the `paste` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._textArea.setIgnoreSelectionChangeTime('received paste event');\n\n\t\t\te.preventDefault();\n\n\t\t\tif (!e.clipboardData) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\t\tthis._logService.trace(`TextAreaInput#onPaste with id : `, metadata?.id, ' with text.length: ', text.length);\n\t\t\tif (!text) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// try the in-memory store\n\t\t\tmetadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\n\t\t\tthis._logService.trace(`TextAreaInput#onPaste (before onPaste)`);\n\t\t\tthis._onPaste.fire({\n\t\t\t\ttext: text,\n\t\t\t\tmetadata: metadata\n\t\t\t});\n\t\t}));\n\n\t\tthis._register(this._textArea.onFocus(() => {\n\t\t\tconst hadFocus = this._hasFocus;\n\n\t\t\tthis._setHasFocus(true);\n\n\t\t\tif (this._accessibilityService.isScreenReaderOptimized() && this._browser.isSafari && !hadFocus && this._hasFocus) {\n\t\t\t\t// When \"tabbing into\" the textarea, immediately after dispatching the 'focus' event,\n\t\t\t\t// Safari will always move the selection at offset 0 in the textarea\n\t\t\t\tif (!this._asyncFocusGainWriteScreenReaderContent.value) {\n\t\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.value = new RunOnceScheduler(() => this.writeNativeTextAreaContent('asyncFocusGain'), 0);\n\t\t\t\t}\n\t\t\t\tthis._asyncFocusGainWriteScreenReaderContent.value.schedule();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._textArea.onBlur(() => {\n\t\t\tif (this._currentComposition) {\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/112621\n\t\t\t\t// where compositionend is not triggered when the editor\n\t\t\t\t// is taken off-dom during a composition\n\n\t\t\t\t// Clear the flag to be able to write to the textarea\n\t\t\t\tthis._currentComposition = null;\n\n\t\t\t\t// Clear the textarea to avoid an unwanted cursor type\n\t\t\t\tthis.writeNativeTextAreaContent('blurWithoutCompositionEnd');\n\n\t\t\t\t// Fire artificial composition end\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t}\n\t\t\tthis._setHasFocus(false);\n\t\t}));\n\t\tthis._register(this._textArea.onSyntheticTap(() => {\n\t\t\tif (this._browser.isAndroid && this._currentComposition) {\n\t\t\t\t// on Android, tapping does not cancel the current composition, so the\n\t\t\t\t// textarea is stuck showing the old composition\n\n\t\t\t\t// Clear the flag to be able to write to the textarea\n\t\t\t\tthis._currentComposition = null;\n\n\t\t\t\t// Clear the textarea to avoid an unwanted cursor type\n\t\t\t\tthis.writeNativeTextAreaContent('tapWithoutCompositionEnd');\n\n\t\t\t\t// Fire artificial composition end\n\t\t\t\tthis._onCompositionEnd.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _installSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event.\n\t\t//\n\t\t// The `selectionchange` event appears to be emitted under numerous other circumstances,\n\t\t// so it is quite a challenge to distinguish a `selectionchange` coming in from a user\n\t\t// using a Braille display from all the other cases.\n\t\t//\n\t\t// The problems with the `selectionchange` event are:\n\t\t//  * the event is emitted when the textarea is focused programmatically -- textarea.focus()\n\t\t//  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)\n\t\t//  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'\n\t\t//  * the event is emitted when tabbing into the textarea\n\t\t//  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)\n\t\t//  * the event sometimes comes in bursts for a single logical textarea operation\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn dom.addDisposableListener(this._textArea.ownerDocument, 'selectionchange', (e) => {//todo\n\t\t\tinputLatency.onSelectionChange();\n\n\t\t\tif (!this._hasFocus) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._currentComposition) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this._browser.isChrome) {\n\t\t\t\t// Support only for Chrome until testing happens on other browsers\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst now = Date.now();\n\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst delta2 = now - this._textArea.getIgnoreSelectionChangeTime();\n\t\t\tthis._textArea.resetSelectionChangeTime();\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the textarea\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!this._textAreaState.selection) {\n\t\t\t\t// Cannot correlate a position in the textarea with a position in the editor...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newValue = this._textArea.getValue();\n\t\t\tif (this._textAreaState.value !== newValue) {\n\t\t\t\t// Cannot correlate a position in the textarea with a position in the editor...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newSelectionStart = this._textArea.getSelectionStart();\n\t\t\tconst newSelectionEnd = this._textArea.getSelectionEnd();\n\t\t\tif (this._textAreaState.selectionStart === newSelectionStart && this._textAreaState.selectionEnd === newSelectionEnd) {\n\t\t\t\t// Nothing to do...\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst _newSelectionStartPosition = this._textAreaState.deduceEditorPosition(newSelectionStart);\n\t\t\tconst newSelectionStartPosition = this._host.deduceModelPosition(_newSelectionStartPosition[0]!, _newSelectionStartPosition[1], _newSelectionStartPosition[2]);\n\n\t\t\tconst _newSelectionEndPosition = this._textAreaState.deduceEditorPosition(newSelectionEnd);\n\t\t\tconst newSelectionEndPosition = this._host.deduceModelPosition(_newSelectionEndPosition[0]!, _newSelectionEndPosition[1], _newSelectionEndPosition[2]);\n\n\t\t\tconst newSelection = new Selection(\n\t\t\t\tnewSelectionStartPosition.lineNumber, newSelectionStartPosition.column,\n\t\t\t\tnewSelectionEndPosition.lineNumber, newSelectionEndPosition.column\n\t\t\t);\n\n\t\t\tthis._onSelectionChangeRequest.fire(newSelection);\n\t\t});\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this._selectionChangeListener) {\n\t\t\tthis._selectionChangeListener.dispose();\n\t\t\tthis._selectionChangeListener = null;\n\t\t}\n\t}\n\n\tpublic focusTextArea(): void {\n\t\t// Setting this._hasFocus and writing the screen reader content\n\t\t// will result in a focus() and setSelectionRange() in the textarea\n\t\tthis._setHasFocus(true);\n\n\t\t// If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic isFocused(): boolean {\n\t\treturn this._hasFocus;\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tthis._setHasFocus(this._textArea.hasFocus());\n\t}\n\n\tprivate _setHasFocus(newHasFocus: boolean): void {\n\t\tif (this._hasFocus === newHasFocus) {\n\t\t\t// no change\n\t\t\treturn;\n\t\t}\n\t\tthis._hasFocus = newHasFocus;\n\n\t\tif (this._selectionChangeListener) {\n\t\t\tthis._selectionChangeListener.dispose();\n\t\t\tthis._selectionChangeListener = null;\n\t\t}\n\t\tif (this._hasFocus) {\n\t\t\tthis._selectionChangeListener = this._installSelectionChangeListener();\n\t\t}\n\n\t\tif (this._hasFocus) {\n\t\t\tthis.writeNativeTextAreaContent('focusgain');\n\t\t}\n\n\t\tif (this._hasFocus) {\n\t\t\tthis._onFocus.fire();\n\t\t} else {\n\t\t\tthis._onBlur.fire();\n\t\t}\n\t}\n\n\tprivate _setAndWriteTextAreaState(reason: string, textAreaState: TextAreaState): void {\n\t\tif (!this._hasFocus) {\n\t\t\ttextAreaState = textAreaState.collapseSelection();\n\t\t}\n\t\tif (!textAreaState.isWrittenToTextArea(this._textArea, this._hasFocus)) {\n\t\t\tthis._logService.trace(`writeTextAreaState(reason: ${reason})`);\n\t\t}\n\t\ttextAreaState.writeToTextArea(reason, this._textArea, this._hasFocus);\n\t\tthis._textAreaState = textAreaState;\n\t}\n\n\tpublic writeNativeTextAreaContent(reason: string): void {\n\t\tif ((!this._accessibilityService.isScreenReaderOptimized() && reason === 'render') || this._currentComposition) {\n\t\t\t// Do not write to the text on render unless a screen reader is being used #192278\n\t\t\t// Do not write to the text area when doing composition\n\t\t\treturn;\n\t\t}\n\t\tthis._setAndWriteTextAreaState(reason, this._host.getScreenReaderContent());\n\t}\n\n\tprivate _ensureClipboardGetsEditorSelection(e: ClipboardEvent): void {\n\t\tconst dataToCopy = this._host.getDataToCopy();\n\t\tlet id = undefined;\n\t\tif (this._logService.getLevel() === LogLevel.Trace) {\n\t\t\tid = generateUuid();\n\t\t}\n\t\tconst storedMetadata: ClipboardStoredMetadata = {\n\t\t\tversion: 1,\n\t\t\tid,\n\t\t\tisFromEmptySelection: dataToCopy.isFromEmptySelection,\n\t\t\tmulticursorText: dataToCopy.multicursorText,\n\t\t\tmode: dataToCopy.mode\n\t\t};\n\t\tInMemoryClipboardMetadataManager.INSTANCE.set(\n\t\t\t// When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n\t\t\t// Firefox pastes \"LINE\\n\", so let's work around this quirk\n\t\t\t(this._browser.isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text),\n\t\t\tstoredMetadata\n\t\t);\n\n\t\te.preventDefault();\n\t\tif (e.clipboardData) {\n\t\t\tClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n\t\t}\n\t\tthis._logService.trace('TextAreaEditContextInput#_ensureClipboardGetsEditorSelection with id : ', id, ' with text.length: ', dataToCopy.text.length);\n\t}\n}\n\nexport class TextAreaWrapper extends Disposable implements ICompleteTextAreaWrapper {\n\n\tpublic readonly onKeyDown: Event<KeyboardEvent>;\n\tpublic readonly onKeyPress: Event<KeyboardEvent>;\n\tpublic readonly onKeyUp: Event<KeyboardEvent>;\n\tpublic readonly onCompositionStart: Event<CompositionEvent>;\n\tpublic readonly onCompositionUpdate: Event<CompositionEvent>;\n\tpublic readonly onCompositionEnd: Event<CompositionEvent>;\n\tpublic readonly onBeforeInput: Event<InputEvent>;\n\tpublic readonly onInput: Event<InputEvent>;\n\tpublic readonly onCut: Event<ClipboardEvent>;\n\tpublic readonly onCopy: Event<ClipboardEvent>;\n\tpublic readonly onPaste: Event<ClipboardEvent>;\n\tpublic readonly onFocus: Event<FocusEvent>;\n\tpublic readonly onBlur: Event<FocusEvent>; //  = this._register(new DomEmitter(this._actual, 'blur')).event;\n\n\tpublic get ownerDocument(): Document {\n\t\treturn this._actual.ownerDocument;\n\t}\n\n\tprivate _onSyntheticTap = this._register(new Emitter<void>());\n\tpublic readonly onSyntheticTap: Event<void> = this._onSyntheticTap.event;\n\n\tprivate _ignoreSelectionChangeTime: number;\n\n\tconstructor(\n\t\tprivate readonly _actual: HTMLTextAreaElement\n\t) {\n\t\tsuper();\n\t\tthis._ignoreSelectionChangeTime = 0;\n\t\tthis.onKeyDown = this._register(new DomEmitter(this._actual, 'keydown')).event;\n\t\tthis.onKeyPress = this._register(new DomEmitter(this._actual, 'keypress')).event;\n\t\tthis.onKeyUp = this._register(new DomEmitter(this._actual, 'keyup')).event;\n\t\tthis.onCompositionStart = this._register(new DomEmitter(this._actual, 'compositionstart')).event;\n\t\tthis.onCompositionUpdate = this._register(new DomEmitter(this._actual, 'compositionupdate')).event;\n\t\tthis.onCompositionEnd = this._register(new DomEmitter(this._actual, 'compositionend')).event;\n\t\tthis.onBeforeInput = this._register(new DomEmitter(this._actual, 'beforeinput')).event;\n\t\tthis.onInput = <Event<InputEvent>>this._register(new DomEmitter(this._actual, 'input')).event;\n\t\tthis.onCut = this._register(new DomEmitter(this._actual, 'cut')).event;\n\t\tthis.onCopy = this._register(new DomEmitter(this._actual, 'copy')).event;\n\t\tthis.onPaste = this._register(new DomEmitter(this._actual, 'paste')).event;\n\t\tthis.onFocus = this._register(new DomEmitter(this._actual, 'focus')).event;\n\t\tthis.onBlur = this._register(new DomEmitter(this._actual, 'blur')).event;\n\n\t\tthis._register(this.onKeyDown(() => inputLatency.onKeyDown()));\n\t\tthis._register(this.onBeforeInput(() => inputLatency.onBeforeInput()));\n\t\tthis._register(this.onInput(() => inputLatency.onInput()));\n\t\tthis._register(this.onKeyUp(() => inputLatency.onKeyUp()));\n\t\tthis._register(dom.addDisposableListener(this._actual, TextAreaSyntethicEvents.Tap, () => this._onSyntheticTap.fire()));\n\t}\n\n\tpublic hasFocus(): boolean {\n\t\tconst shadowRoot = dom.getShadowRoot(this._actual);\n\t\tif (shadowRoot) {\n\t\t\treturn shadowRoot.activeElement === this._actual;\n\t\t} else if (this._actual.isConnected) {\n\t\t\treturn dom.getActiveElement() === this._actual;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tpublic getIgnoreSelectionChangeTime(): number {\n\t\treturn this._ignoreSelectionChangeTime;\n\t}\n\n\tpublic resetSelectionChangeTime(): void {\n\t\tthis._ignoreSelectionChangeTime = 0;\n\t}\n\n\tpublic getValue(): string {\n\t\t// console.log('current value: ' + this._textArea.value);\n\t\treturn this._actual.value;\n\t}\n\n\tpublic setValue(reason: string, value: string): void {\n\t\tconst textArea = this._actual;\n\t\tif (textArea.value === value) {\n\t\t\t// No change\n\t\t\treturn;\n\t\t}\n\t\t// console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);\n\t\tthis.setIgnoreSelectionChangeTime('setValue');\n\t\ttextArea.value = value;\n\t}\n\n\tpublic getSelectionStart(): number {\n\t\treturn this._actual.selectionDirection === 'backward' ? this._actual.selectionEnd : this._actual.selectionStart;\n\t}\n\n\tpublic getSelectionEnd(): number {\n\t\treturn this._actual.selectionDirection === 'backward' ? this._actual.selectionStart : this._actual.selectionEnd;\n\t}\n\n\tpublic setSelectionRange(reason: string, selectionStart: number, selectionEnd: number): void {\n\t\tconst textArea = this._actual;\n\n\t\tlet activeElement: Element | null = null;\n\t\tconst shadowRoot = dom.getShadowRoot(textArea);\n\t\tif (shadowRoot) {\n\t\t\tactiveElement = shadowRoot.activeElement;\n\t\t} else {\n\t\t\tactiveElement = dom.getActiveElement();\n\t\t}\n\t\tconst activeWindow = dom.getWindow(activeElement);\n\n\t\tconst currentIsFocused = (activeElement === textArea);\n\t\tconst currentSelectionStart = textArea.selectionStart;\n\t\tconst currentSelectionEnd = textArea.selectionEnd;\n\n\t\tif (currentIsFocused && currentSelectionStart === selectionStart && currentSelectionEnd === selectionEnd) {\n\t\t\t// No change\n\t\t\t// Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377\n\t\t\tif (browser.isFirefox && activeWindow.parent !== activeWindow) {\n\t\t\t\ttextArea.focus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);\n\n\t\tif (currentIsFocused) {\n\t\t\t// No need to focus, only need to change the selection range\n\t\t\tthis.setIgnoreSelectionChangeTime('setSelectionRange');\n\t\t\ttextArea.setSelectionRange(selectionStart, selectionEnd);\n\t\t\tif (browser.isFirefox && activeWindow.parent !== activeWindow) {\n\t\t\t\ttextArea.focus();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If the focus is outside the textarea, browsers will try really hard to reveal the textarea.\n\t\t// Here, we try to undo the browser's desperate reveal.\n\t\ttry {\n\t\t\tconst scrollState = dom.saveParentsScrollTop(textArea);\n\t\t\tthis.setIgnoreSelectionChangeTime('setSelectionRange');\n\t\t\ttextArea.focus();\n\t\t\ttextArea.setSelectionRange(selectionStart, selectionEnd);\n\t\t\tdom.restoreParentsScrollTop(textArea, scrollState);\n\t\t} catch (e) {\n\t\t\t// Sometimes IE throws when setting selection (e.g. textarea is off-DOM)\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2683, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/pointerHandler.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/vs/editor/browser/controller/pointerHandler.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { EventType, Gesture, GestureEvent } from '../../../base/browser/touch.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { IPointerHandlerHelper, MouseHandler } from './mouseHandler.js';\nimport { NavigationCommandRevealType } from '../coreCommands.js';\nimport { IMouseTarget, MouseTargetType } from '../editorBrowser.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { ViewController } from '../view/viewController.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { TextAreaSyntethicEvents } from './editContext/textArea/textAreaEditContextInput.js';\n\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n\tprivate _lastPointerType: string;\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper(context, viewController, viewHelper);\n\n\t\tthis._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e: MouseEvent) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n\n\t\tthis._lastPointerType = 'mouse';\n\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e: any) => {\n\t\t\tconst pointerType = e.pointerType;\n\t\t\tif (pointerType === 'mouse') {\n\t\t\t\tthis._lastPointerType = 'mouse';\n\t\t\t\treturn;\n\t\t\t} else if (pointerType === 'touch') {\n\t\t\t\tthis._lastPointerType = 'touch';\n\t\t\t} else {\n\t\t\t\tthis._lastPointerType = 'pen';\n\t\t\t}\n\t\t}));\n\n\t\t// PonterEvents\n\t\tconst pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n\n\t\tthis._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n\t\tthis._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n\t\tthis._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n\t\tthis._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n\t}\n\n\tprivate onTap(event: GestureEvent): void {\n\t\tif (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(<any>event.initialTarget)) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.viewHelper.focusTextArea();\n\t\tthis._dispatchGesture(event, /*inSelectionMode*/false);\n\t}\n\n\tprivate onChange(event: GestureEvent): void {\n\t\tif (this._lastPointerType === 'touch') {\n\t\t\tthis._context.viewModel.viewLayout.deltaScrollNow(-event.translationX, -event.translationY);\n\t\t}\n\t\tif (this._lastPointerType === 'pen') {\n\t\t\tthis._dispatchGesture(event, /*inSelectionMode*/true);\n\t\t}\n\t}\n\n\tprivate _dispatchGesture(event: GestureEvent, inSelectionMode: boolean): void {\n\t\tconst target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n\t\tif (target.position) {\n\t\t\tthis.viewController.dispatchMouse({\n\t\t\t\tposition: target.position,\n\t\t\t\tmouseColumn: target.position.column,\n\t\t\t\tstartedOnLineNumbers: false,\n\t\t\t\trevealType: NavigationCommandRevealType.Minimal,\n\t\t\t\tmouseDownCount: event.tapCount,\n\t\t\t\tinSelectionMode,\n\t\t\t\taltKey: false,\n\t\t\t\tctrlKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\tleftButton: false,\n\t\t\t\tmiddleButton: false,\n\t\t\t\tonInjectedText: target.type === MouseTargetType.CONTENT_TEXT && target.detail.injectedText !== null\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected override _onMouseDown(e: EditorMouseEvent, pointerId: number): void {\n\t\tif ((e.browserEvent as any).pointerType === 'touch') {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper._onMouseDown(e, pointerId);\n\t}\n}\n\nclass TouchHandler extends MouseHandler {\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper(context, viewController, viewHelper);\n\n\t\tthis._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e: MouseEvent) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n\t}\n\n\tprivate onTap(event: GestureEvent): void {\n\t\tevent.preventDefault();\n\n\t\tthis.viewHelper.focusTextArea();\n\n\t\tconst target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n\n\t\tif (target.position) {\n\t\t\t// Send the tap event also to the <textarea> (for input purposes)\n\t\t\tconst event = document.createEvent('CustomEvent');\n\t\t\tevent.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n\t\t\tthis.viewHelper.dispatchTextAreaEvent(event);\n\n\t\t\tthis.viewController.moveTo(target.position, NavigationCommandRevealType.Minimal);\n\t\t}\n\t}\n\n\tprivate onChange(e: GestureEvent): void {\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n\t}\n}\n\nexport class PointerHandler extends Disposable {\n\tprivate readonly handler: MouseHandler;\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper();\n\t\tconst isPhone = platform.isIOS || (platform.isAndroid && platform.isMobile);\n\t\tif (isPhone && BrowserFeatures.pointerEvents) {\n\t\t\tthis.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n\t\t} else if (mainWindow.TouchEvent) {\n\t\t\tthis.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n\t\t} else {\n\t\t\tthis.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n\t\t}\n\t}\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): IMouseTarget | null {\n\t\treturn this.handler.getTargetAtClientPoint(clientX, clientY);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { EventType, Gesture, GestureEvent } from '../../../base/browser/touch.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { IPointerHandlerHelper, MouseHandler } from './mouseHandler.js';\nimport { NavigationCommandRevealType } from '../coreCommands.js';\nimport { IMouseTarget, MouseTargetType } from '../editorBrowser.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { ViewController } from '../view/viewController.js';\nimport { ViewContext } from '../../common/viewModel/viewContext.js';\nimport { TextAreaSyntethicEvents } from './editContext/textArea/textAreaEditContextInput.js';\n\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n\tprivate _lastPointerType: string;\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper(context, viewController, viewHelper);\n\n\t\tthis._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e: MouseEvent) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n\n\t\tthis._lastPointerType = 'mouse';\n\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e: any) => {\n\t\t\tconst pointerType = e.pointerType;\n\t\t\tif (pointerType === 'mouse') {\n\t\t\t\tthis._lastPointerType = 'mouse';\n\t\t\t\treturn;\n\t\t\t} else if (pointerType === 'touch') {\n\t\t\t\tthis._lastPointerType = 'touch';\n\t\t\t} else {\n\t\t\t\tthis._lastPointerType = 'pen';\n\t\t\t}\n\t\t}));\n\n\t\t// PonterEvents\n\t\tconst pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n\n\t\tthis._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n\t\tthis._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n\t\tthis._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n\t\tthis._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n\t}\n\n\tprivate onTap(event: GestureEvent): void {\n\t\tif (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(<any>event.initialTarget)) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tthis.viewHelper.focusTextArea();\n\t\tthis._dispatchGesture(event, /*inSelectionMode*/false);\n\t}\n\n\tprivate onChange(event: GestureEvent): void {\n\t\tif (this._lastPointerType === 'touch') {\n\t\t\tthis._context.viewModel.viewLayout.deltaScrollNow(-event.translationX, -event.translationY);\n\t\t}\n\t\tif (this._lastPointerType === 'pen') {\n\t\t\tthis._dispatchGesture(event, /*inSelectionMode*/true);\n\t\t}\n\t}\n\n\tprivate _dispatchGesture(event: GestureEvent, inSelectionMode: boolean): void {\n\t\tconst target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n\t\tif (target.position) {\n\t\t\tthis.viewController.dispatchMouse({\n\t\t\t\tposition: target.position,\n\t\t\t\tmouseColumn: target.position.column,\n\t\t\t\tstartedOnLineNumbers: false,\n\t\t\t\trevealType: NavigationCommandRevealType.Minimal,\n\t\t\t\tmouseDownCount: event.tapCount,\n\t\t\t\tinSelectionMode,\n\t\t\t\taltKey: false,\n\t\t\t\tctrlKey: false,\n\t\t\t\tmetaKey: false,\n\t\t\t\tshiftKey: false,\n\t\t\t\tleftButton: false,\n\t\t\t\tmiddleButton: false,\n\t\t\t\tonInjectedText: target.type === MouseTargetType.CONTENT_TEXT && target.detail.injectedText !== null\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected override _onMouseDown(e: EditorMouseEvent, pointerId: number): void {\n\t\tif ((e.browserEvent as any).pointerType === 'touch') {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper._onMouseDown(e, pointerId);\n\t}\n}\n\nclass TouchHandler extends MouseHandler {\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper(context, viewController, viewHelper);\n\n\t\tthis._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n\t\tthis._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e: MouseEvent) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n\t}\n\n\tprivate onTap(event: GestureEvent): void {\n\t\tevent.preventDefault();\n\n\t\tthis.viewHelper.focusTextArea();\n\n\t\tconst target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n\n\t\tif (target.position) {\n\t\t\t// Send the tap event also to the <textarea> (for input purposes)\n\t\t\tconst event = document.createEvent('CustomEvent');\n\t\t\tevent.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n\t\t\tthis.viewHelper.dispatchTextAreaEvent(event);\n\n\t\t\tthis.viewController.moveTo(target.position, NavigationCommandRevealType.Minimal);\n\t\t}\n\t}\n\n\tprivate onChange(e: GestureEvent): void {\n\t\tthis._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n\t}\n}\n\nexport class PointerHandler extends Disposable {\n\tprivate readonly handler: MouseHandler;\n\n\tconstructor(context: ViewContext, viewController: ViewController, viewHelper: IPointerHandlerHelper) {\n\t\tsuper();\n\t\tconst isPhone = platform.isIOS || (platform.isAndroid && platform.isMobile);\n\t\tif (isPhone && BrowserFeatures.pointerEvents) {\n\t\t\tthis.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n\t\t} else if (mainWindow.TouchEvent) {\n\t\t\tthis.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n\t\t} else {\n\t\t\tthis.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n\t\t}\n\t}\n\n\tpublic getTargetAtClientPoint(clientX: number, clientY: number): IMouseTarget | null {\n\t\treturn this.handler.getTargetAtClientPoint(clientX, clientY);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2823, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/editContext.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/editContext.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/vs/editor/browser/controller/editContext/editContext.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorAriaOptions } from '../../editorBrowser.js';\nimport { ViewPart } from '../../view/viewPart.js';\n\nexport abstract class AbstractEditContext extends ViewPart {\n\tabstract domNode: FastDomNode<HTMLElement>;\n\tabstract focus(): void;\n\tabstract isFocused(): boolean;\n\tabstract refreshFocusState(): void;\n\tabstract setAriaOptions(options: IEditorAriaOptions): void;\n\tabstract getLastRenderData(): Position | null;\n\tabstract writeScreenReaderContent(reason: string): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport { Position } from '../../../common/core/position.js';\nimport { IEditorAriaOptions } from '../../editorBrowser.js';\nimport { ViewPart } from '../../view/viewPart.js';\n\nexport abstract class AbstractEditContext extends ViewPart {\n\tabstract domNode: FastDomNode<HTMLElement>;\n\tabstract focus(): void;\n\tabstract isFocused(): boolean;\n\tabstract refreshFocusState(): void;\n\tabstract setAriaOptions(options: IEditorAriaOptions): void;\n\tabstract getLastRenderData(): Position | null;\n\tabstract writeScreenReaderContent(reason: string): void;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAKhG,OAAO,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;;AAE5C,MAAgB,mBAAoB,SAAQ,kMAAQ;CAQzD","debugId":null}},
    {"offset": {"line": 2838, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/screenReaderUtils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/vs/editor/browser/controller/editContext/screenReaderUtils.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EndOfLinePreference } from '../../../common/model.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection, SelectionDirection } from '../../../common/core/selection.js';\nimport { EditorOption, IComputedEditorOptions } from '../../../common/config/editorOptions.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AccessibilitySupport } from '../../../../platform/accessibility/common/accessibility.js';\nimport * as nls from '../../../../nls.js';\nimport { ISimpleModel } from '../../../common/viewModel/screenReaderSimpleModel.js';\n\nexport interface IPagedScreenReaderStrategy<T> {\n}\n\nexport interface ISimpleScreenReaderContentState {\n\tvalue: string;\n\n\t/** the offset where selection starts inside `value` */\n\tselectionStart: number;\n\n\t/** the offset where selection ends inside `value` */\n\tselectionEnd: number;\n\n\t/** the editor range in the view coordinate system that matches the selection inside `value` */\n\tselection: Range;\n\n\t/** the position of the start of the `value` in the editor */\n\tstartPositionWithinEditor: Position;\n\n\t/** the visible line count (wrapped, not necessarily matching \\n characters) for the text in `value` before `selectionStart` */\n\tnewlineCountBeforeSelection: number;\n}\n\nexport class SimplePagedScreenReaderStrategy implements IPagedScreenReaderStrategy<ISimpleScreenReaderContentState> {\n\tprivate _getPageOfLine(lineNumber: number, linesPerPage: number): number {\n\t\treturn Math.floor((lineNumber - 1) / linesPerPage);\n\t}\n\n\tprivate _getRangeForPage(page: number, linesPerPage: number): Range {\n\t\tconst offset = page * linesPerPage;\n\t\tconst startLineNumber = offset + 1;\n\t\tconst endLineNumber = offset + linesPerPage;\n\t\treturn new Range(startLineNumber, 1, endLineNumber + 1, 1);\n\t}\n\n\tpublic fromEditorSelection(model: ISimpleModel, selection: Selection, linesPerPage: number, trimLongText: boolean): ISimpleScreenReaderContentState {\n\t\t// Chromium handles very poorly text even of a few thousand chars\n\t\t// Cut text to avoid stalling the entire UI\n\t\tconst LIMIT_CHARS = 500;\n\n\t\tconst selectionStartPage = this._getPageOfLine(selection.startLineNumber, linesPerPage);\n\t\tconst selectionStartPageRange = this._getRangeForPage(selectionStartPage, linesPerPage);\n\n\t\tconst selectionEndPage = this._getPageOfLine(selection.endLineNumber, linesPerPage);\n\t\tconst selectionEndPageRange = this._getRangeForPage(selectionEndPage, linesPerPage);\n\n\t\tlet pretextRange = selectionStartPageRange.intersectRanges(new Range(1, 1, selection.startLineNumber, selection.startColumn))!;\n\t\tif (trimLongText && model.getValueLengthInRange(pretextRange, EndOfLinePreference.LF) > LIMIT_CHARS) {\n\t\t\tconst pretextStart = model.modifyPosition(pretextRange.getEndPosition(), -LIMIT_CHARS);\n\t\t\tpretextRange = Range.fromPositions(pretextStart, pretextRange.getEndPosition());\n\t\t}\n\t\tconst pretext = model.getValueInRange(pretextRange, EndOfLinePreference.LF);\n\n\t\tconst lastLine = model.getLineCount();\n\t\tconst lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n\t\tlet posttextRange = selectionEndPageRange.intersectRanges(new Range(selection.endLineNumber, selection.endColumn, lastLine, lastLineMaxColumn))!;\n\t\tif (trimLongText && model.getValueLengthInRange(posttextRange, EndOfLinePreference.LF) > LIMIT_CHARS) {\n\t\t\tconst posttextEnd = model.modifyPosition(posttextRange.getStartPosition(), LIMIT_CHARS);\n\t\t\tposttextRange = Range.fromPositions(posttextRange.getStartPosition(), posttextEnd);\n\t\t}\n\t\tconst posttext = model.getValueInRange(posttextRange, EndOfLinePreference.LF);\n\n\n\t\tlet text: string;\n\t\tif (selectionStartPage === selectionEndPage || selectionStartPage + 1 === selectionEndPage) {\n\t\t\t// take full selection\n\t\t\ttext = model.getValueInRange(selection, EndOfLinePreference.LF);\n\t\t} else {\n\t\t\tconst selectionRange1 = selectionStartPageRange.intersectRanges(selection)!;\n\t\t\tconst selectionRange2 = selectionEndPageRange.intersectRanges(selection)!;\n\t\t\ttext = (\n\t\t\t\tmodel.getValueInRange(selectionRange1, EndOfLinePreference.LF)\n\t\t\t\t+ String.fromCharCode(8230)\n\t\t\t\t+ model.getValueInRange(selectionRange2, EndOfLinePreference.LF)\n\t\t\t);\n\t\t}\n\t\tif (trimLongText && text.length > 2 * LIMIT_CHARS) {\n\t\t\ttext = text.substring(0, LIMIT_CHARS) + String.fromCharCode(8230) + text.substring(text.length - LIMIT_CHARS, text.length);\n\t\t}\n\n\t\tlet selectionStart: number;\n\t\tlet selectionEnd: number;\n\t\tif (selection.getDirection() === SelectionDirection.LTR) {\n\t\t\tselectionStart = pretext.length;\n\t\t\tselectionEnd = pretext.length + text.length;\n\t\t} else {\n\t\t\tselectionEnd = pretext.length;\n\t\t\tselectionStart = pretext.length + text.length;\n\t\t}\n\t\treturn {\n\t\t\tvalue: pretext + text + posttext,\n\t\t\tselection: selection,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tstartPositionWithinEditor: pretextRange.getStartPosition(),\n\t\t\tnewlineCountBeforeSelection: pretextRange.endLineNumber - pretextRange.startLineNumber,\n\t\t};\n\t}\n}\n\nexport function ariaLabelForScreenReaderContent(options: IComputedEditorOptions, keybindingService: IKeybindingService) {\n\tconst accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\tif (accessibilitySupport === AccessibilitySupport.Disabled) {\n\n\t\tconst toggleKeybindingLabel = keybindingService.lookupKeybinding('editor.action.toggleScreenReaderAccessibilityMode')?.getAriaLabel();\n\t\tconst runCommandKeybindingLabel = keybindingService.lookupKeybinding('workbench.action.showCommands')?.getAriaLabel();\n\t\tconst keybindingEditorKeybindingLabel = keybindingService.lookupKeybinding('workbench.action.openGlobalKeybindings')?.getAriaLabel();\n\t\tconst editorNotAccessibleMessage = nls.localize('accessibilityModeOff', \"The editor is not accessible at this time.\");\n\t\tif (toggleKeybindingLabel) {\n\t\t\treturn nls.localize('accessibilityOffAriaLabel', \"{0} To enable screen reader optimized mode, use {1}\", editorNotAccessibleMessage, toggleKeybindingLabel);\n\t\t} else if (runCommandKeybindingLabel) {\n\t\t\treturn nls.localize('accessibilityOffAriaLabelNoKb', \"{0} To enable screen reader optimized mode, open the quick pick with {1} and run the command Toggle Screen Reader Accessibility Mode, which is currently not triggerable via keyboard.\", editorNotAccessibleMessage, runCommandKeybindingLabel);\n\t\t} else if (keybindingEditorKeybindingLabel) {\n\t\t\treturn nls.localize('accessibilityOffAriaLabelNoKbs', \"{0} Please assign a keybinding for the command Toggle Screen Reader Accessibility Mode by accessing the keybindings editor with {1} and run it.\", editorNotAccessibleMessage, keybindingEditorKeybindingLabel);\n\t\t} else {\n\t\t\t// SOS\n\t\t\treturn editorNotAccessibleMessage;\n\t\t}\n\t}\n\treturn options.get(EditorOption.ariaLabel);\n}\n\nexport function newlinecount(text: string): number {\n\tlet result = 0;\n\tlet startIndex = -1;\n\tdo {\n\t\tstartIndex = text.indexOf('\\n', startIndex + 1);\n\t\tif (startIndex === -1) {\n\t\t\tbreak;\n\t\t}\n\t\tresult++;\n\t} while (true);\n\treturn result;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2952, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/textAreaEditContext.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/textArea/vs/editor/browser/controller/editContext/textArea/textAreaEditContext.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './textAreaEditContext.css';\nimport * as nls from '../../../../../nls.js';\nimport * as browser from '../../../../../base/browser/browser.js';\nimport { FastDomNode, createFastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { IKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport * as platform from '../../../../../base/common/platform.js';\nimport * as strings from '../../../../../base/common/strings.js';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { PartFingerprint, PartFingerprints } from '../../../view/viewPart.js';\nimport { LineNumbersOverlay } from '../../../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../../../viewParts/margin/margin.js';\nimport { RenderLineNumbersType, EditorOption, IComputedEditorOptions, EditorOptions } from '../../../../common/config/editorOptions.js';\nimport { FontInfo } from '../../../../common/config/fontInfo.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { ScrollType } from '../../../../common/editorCommon.js';\nimport { EndOfLinePreference } from '../../../../common/model.js';\nimport { RenderingContext, RestrictedRenderingContext, HorizontalPosition, LineVisibleRanges } from '../../../view/renderingContext.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport * as viewEvents from '../../../../common/viewEvents.js';\nimport { AccessibilitySupport } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IEditorAriaOptions } from '../../../editorBrowser.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { TokenizationRegistry } from '../../../../common/languages.js';\nimport { ColorId, ITokenPresentation } from '../../../../common/encodedTokenAttributes.js';\nimport { Color } from '../../../../../base/common/color.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { AbstractEditContext } from '../editContext.js';\nimport { ICompositionData, IPasteData, ITextAreaInputHost, TextAreaInput, TextAreaWrapper } from './textAreaEditContextInput.js';\nimport { ariaLabelForScreenReaderContent, newlinecount, SimplePagedScreenReaderStrategy } from '../screenReaderUtils.js';\nimport { ClipboardDataToCopy, getDataToCopy } from '../clipboardUtils.js';\nimport { _debugComposition, ITypeData, TextAreaState } from './textAreaEditContextState.js';\nimport { getMapForWordSeparators, WordCharacterClass } from '../../../../common/core/wordCharacterClassifier.js';\n\nexport interface IVisibleRangeProvider {\n\tvisibleRangeForPosition(position: Position): HorizontalPosition | null;\n\tlinesVisibleRangesForRange(range: Range, includeNewLines: boolean): LineVisibleRanges[] | null;\n}\n\nclass VisibleTextAreaData {\n\t_visibleTextAreaBrand: void = undefined;\n\n\tpublic startPosition: Position | null = null;\n\tpublic endPosition: Position | null = null;\n\n\tpublic visibleTextareaStart: HorizontalPosition | null = null;\n\tpublic visibleTextareaEnd: HorizontalPosition | null = null;\n\n\t/**\n\t * When doing composition, the currently composed text might be split up into\n\t * multiple tokens, then merged again into a single token, etc. Here we attempt\n\t * to keep the presentation of the <textarea> stable by using the previous used\n\t * style if multiple tokens come into play. This avoids flickering.\n\t */\n\tprivate _previousPresentation: ITokenPresentation | null = null;\n\n\tconstructor(\n\t\tprivate readonly _context: ViewContext,\n\t\tpublic readonly modelLineNumber: number,\n\t\tpublic readonly distanceToModelLineStart: number,\n\t\tpublic readonly widthOfHiddenLineTextBefore: number,\n\t\tpublic readonly distanceToModelLineEnd: number,\n\t) {\n\t}\n\n\tprepareRender(visibleRangeProvider: IVisibleRangeProvider): void {\n\t\tconst startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n\t\tconst endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n\n\t\tthis.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n\t\tthis.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n\n\t\tif (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n\t\t\tthis.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n\t\t\tthis.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n\t\t} else {\n\t\t\t// TODO: what if the view positions are not on the same line?\n\t\t\tthis.visibleTextareaStart = null;\n\t\t\tthis.visibleTextareaEnd = null;\n\t\t}\n\t}\n\n\tdefinePresentation(tokenPresentation: ITokenPresentation | null): ITokenPresentation {\n\t\tif (!this._previousPresentation) {\n\t\t\t// To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n\t\t\tif (tokenPresentation) {\n\t\t\t\tthis._previousPresentation = tokenPresentation;\n\t\t\t} else {\n\t\t\t\tthis._previousPresentation = {\n\t\t\t\t\tforeground: ColorId.DefaultForeground,\n\t\t\t\t\titalic: false,\n\t\t\t\t\tbold: false,\n\t\t\t\t\tunderline: false,\n\t\t\t\t\tstrikethrough: false,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn this._previousPresentation;\n\t}\n}\n\nconst canUseZeroSizeTextarea = (browser.isFirefox);\n\nexport class TextAreaEditContext extends AbstractEditContext {\n\n\tprivate readonly _viewController: ViewController;\n\tprivate readonly _visibleRangeProvider: IVisibleRangeProvider;\n\tprivate _scrollLeft: number;\n\tprivate _scrollTop: number;\n\n\tprivate _accessibilitySupport!: AccessibilitySupport;\n\tprivate _accessibilityPageSize!: number;\n\tprivate _textAreaWrapping!: boolean;\n\tprivate _textAreaWidth!: number;\n\tprivate _contentLeft: number;\n\tprivate _contentWidth: number;\n\tprivate _contentHeight: number;\n\tprivate _fontInfo: FontInfo;\n\tprivate _emptySelectionClipboard: boolean;\n\tprivate _copyWithSyntaxHighlighting: boolean;\n\n\t/**\n\t * Defined only when the text area is visible (composition case).\n\t */\n\tprivate _visibleTextArea: VisibleTextAreaData | null;\n\tprivate _selections: Selection[];\n\tprivate _modelSelections: Selection[];\n\n\t/**\n\t * The position at which the textarea was rendered.\n\t * This is useful for hit-testing and determining the mouse position.\n\t */\n\tprivate _lastRenderPosition: Position | null;\n\n\tpublic readonly textArea: FastDomNode<HTMLTextAreaElement>;\n\tpublic readonly textAreaCover: FastDomNode<HTMLElement>;\n\tprivate readonly _textAreaInput: TextAreaInput;\n\n\tconstructor(\n\t\tcontext: ViewContext,\n\t\toverflowGuardContainer: FastDomNode<HTMLElement>,\n\t\tviewController: ViewController,\n\t\tvisibleRangeProvider: IVisibleRangeProvider,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService\n\t) {\n\t\tsuper(context);\n\n\t\tthis._viewController = viewController;\n\t\tthis._visibleRangeProvider = visibleRangeProvider;\n\t\tthis._scrollLeft = 0;\n\t\tthis._scrollTop = 0;\n\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._setAccessibilityOptions(options);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tthis._copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\n\t\tthis._visibleTextArea = null;\n\t\tthis._selections = [new Selection(1, 1, 1, 1)];\n\t\tthis._modelSelections = [new Selection(1, 1, 1, 1)];\n\t\tthis._lastRenderPosition = null;\n\n\t\t// Text Area (The focus will always be in the textarea when the cursor is blinking)\n\t\tthis.textArea = createFastDomNode(document.createElement('textarea'));\n\t\tPartFingerprints.write(this.textArea, PartFingerprint.TextArea);\n\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\tthis.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n\t\tthis.textArea.setAttribute('autocorrect', 'off');\n\t\tthis.textArea.setAttribute('autocapitalize', 'off');\n\t\tthis.textArea.setAttribute('autocomplete', 'off');\n\t\tthis.textArea.setAttribute('spellcheck', 'false');\n\t\tthis.textArea.setAttribute('aria-label', ariaLabelForScreenReaderContent(options, this._keybindingService));\n\t\tthis.textArea.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis.textArea.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\t\tthis.textArea.setAttribute('role', 'textbox');\n\t\tthis.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n\t\tthis.textArea.setAttribute('aria-multiline', 'true');\n\t\tthis.textArea.setAttribute('aria-autocomplete', options.get(EditorOption.readOnly) ? 'none' : 'both');\n\n\t\tthis._ensureReadOnlyAttribute();\n\n\t\tthis.textAreaCover = createFastDomNode(document.createElement('div'));\n\t\tthis.textAreaCover.setPosition('absolute');\n\n\t\toverflowGuardContainer.appendChild(this.textArea);\n\t\toverflowGuardContainer.appendChild(this.textAreaCover);\n\n\t\tconst simplePagedScreenReaderStrategy = new SimplePagedScreenReaderStrategy();\n\t\tconst textAreaInputHost: ITextAreaInputHost = {\n\t\t\tgetDataToCopy: (): ClipboardDataToCopy => {\n\t\t\t\treturn getDataToCopy(this._context.viewModel, this._modelSelections, this._emptySelectionClipboard, this._copyWithSyntaxHighlighting);\n\t\t\t},\n\t\t\tgetScreenReaderContent: (): TextAreaState => {\n\t\t\t\tif (this._accessibilitySupport === AccessibilitySupport.Disabled) {\n\t\t\t\t\t// We know for a fact that a screen reader is not attached\n\t\t\t\t\t// On OSX, we write the character before the cursor to allow for \"long-press\" composition\n\t\t\t\t\t// Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n\t\t\t\t\tconst selection = this._selections[0];\n\t\t\t\t\tif (platform.isMacintosh && selection.isEmpty()) {\n\t\t\t\t\t\tconst position = selection.getStartPosition();\n\n\t\t\t\t\t\tlet textBefore = this._getWordBeforePosition(position);\n\t\t\t\t\t\tif (textBefore.length === 0) {\n\t\t\t\t\t\t\ttextBefore = this._getCharacterBeforePosition(position);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (textBefore.length > 0) {\n\t\t\t\t\t\t\treturn new TextAreaState(textBefore, textBefore.length, textBefore.length, Range.fromPositions(position), 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// on macOS, write current selection into textarea will allow system text services pick selected text,\n\t\t\t\t\t// but we still want to limit the amount of text given Chromium handles very poorly text even of a few\n\t\t\t\t\t// thousand chars\n\t\t\t\t\t// (https://github.com/microsoft/vscode/issues/27799)\n\t\t\t\t\tconst LIMIT_CHARS = 500;\n\t\t\t\t\tif (platform.isMacintosh && !selection.isEmpty() && this._context.viewModel.getValueLengthInRange(selection, EndOfLinePreference.TextDefined) < LIMIT_CHARS) {\n\t\t\t\t\t\tconst text = this._context.viewModel.getValueInRange(selection, EndOfLinePreference.TextDefined);\n\t\t\t\t\t\treturn new TextAreaState(text, 0, text.length, selection, 0);\n\t\t\t\t\t}\n\n\t\t\t\t\t// on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n\t\t\t\t\t// if the textarea has no content selected. So if there is an editor selection, ensure something\n\t\t\t\t\t// is selected in the textarea.\n\t\t\t\t\tif (browser.isSafari && !selection.isEmpty()) {\n\t\t\t\t\t\tconst placeholderText = 'vscode-placeholder';\n\t\t\t\t\t\treturn new TextAreaState(placeholderText, 0, placeholderText.length, null, undefined);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn TextAreaState.EMPTY;\n\t\t\t\t}\n\n\t\t\t\tif (browser.isAndroid) {\n\t\t\t\t\t// when tapping in the editor on a word, Android enters composition mode.\n\t\t\t\t\t// in the `compositionstart` event we cannot clear the textarea, because\n\t\t\t\t\t// it then forgets to ever send a `compositionend`.\n\t\t\t\t\t// we therefore only write the current word in the textarea\n\t\t\t\t\tconst selection = this._selections[0];\n\t\t\t\t\tif (selection.isEmpty()) {\n\t\t\t\t\t\tconst position = selection.getStartPosition();\n\t\t\t\t\t\tconst [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n\t\t\t\t\t\tif (wordAtPosition.length > 0) {\n\t\t\t\t\t\t\treturn new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, Range.fromPositions(position), 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn TextAreaState.EMPTY;\n\t\t\t\t}\n\n\t\t\t\tconst screenReaderContentState = simplePagedScreenReaderStrategy.fromEditorSelection(this._context.viewModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === AccessibilitySupport.Unknown);\n\t\t\t\treturn TextAreaState.fromScreenReaderContentState(screenReaderContentState);\n\t\t\t},\n\n\t\t\tdeduceModelPosition: (viewAnchorPosition: Position, deltaOffset: number, lineFeedCnt: number): Position => {\n\t\t\t\treturn this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n\t\t\t}\n\t\t};\n\n\t\tconst textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n\t\tthis._textAreaInput = this._register(this._instantiationService.createInstance(TextAreaInput, textAreaInputHost, textAreaWrapper, platform.OS, {\n\t\t\tisAndroid: browser.isAndroid,\n\t\t\tisChrome: browser.isChrome,\n\t\t\tisFirefox: browser.isFirefox,\n\t\t\tisSafari: browser.isSafari,\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onKeyDown((e: IKeyboardEvent) => {\n\t\t\tthis._viewController.emitKeyDown(e);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onKeyUp((e: IKeyboardEvent) => {\n\t\t\tthis._viewController.emitKeyUp(e);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onPaste((e: IPasteData) => {\n\t\t\tlet pasteOnNewLine = false;\n\t\t\tlet multicursorText: string[] | null = null;\n\t\t\tlet mode: string | null = null;\n\t\t\tif (e.metadata) {\n\t\t\t\tpasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n\t\t\t\tmulticursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n\t\t\t\tmode = e.metadata.mode;\n\t\t\t}\n\t\t\tthis._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCut(() => {\n\t\t\tthis._viewController.cut();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onType((e: ITypeData) => {\n\t\t\tif (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n\t\t\t\t// must be handled through the new command\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n\t\t\t\t}\n\t\t\t\tthis._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n\t\t\t} else {\n\t\t\t\tif (_debugComposition) {\n\t\t\t\t\tconsole.log(` => type: <<${e.text}>>`);\n\t\t\t\t}\n\t\t\t\tthis._viewController.type(e.text);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onSelectionChangeRequest((modelSelection: Selection) => {\n\t\t\tthis._viewController.setSelection(modelSelection);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionStart((e) => {\n\n\t\t\t// The textarea might contain some content when composition starts.\n\t\t\t//\n\t\t\t// When we make the textarea visible, it always has a height of 1 line,\n\t\t\t// so we don't need to worry too much about content on lines above or below\n\t\t\t// the selection.\n\t\t\t//\n\t\t\t// However, the text on the current line needs to be made visible because\n\t\t\t// some IME methods allow to move to other glyphs on the current line\n\t\t\t// (by pressing arrow keys).\n\t\t\t//\n\t\t\t// (1) The textarea might contain only some parts of the current line,\n\t\t\t// like the word before the selection. Also, the content inside the textarea\n\t\t\t// can grow or shrink as composition occurs. We therefore anchor the textarea\n\t\t\t// in terms of distance to a certain line start and line end.\n\t\t\t//\n\t\t\t// (2) Also, we should not make \\t characters visible, because their rendering\n\t\t\t// inside the <textarea> will not align nicely with our rendering. We therefore\n\t\t\t// will hide (if necessary) some of the leading text on the current line.\n\n\t\t\tconst ta = this.textArea.domNode;\n\t\t\tconst modelSelection = this._modelSelections[0];\n\n\t\t\tconst { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n\t\t\t\t// Find the text that is on the current line before the selection\n\t\t\t\tconst textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n\t\t\t\tconst lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n\t\t\t\tconst lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n\n\t\t\t\t// We now search to see if we should hide some part of it (if it contains \\t)\n\t\t\t\tconst tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n\t\t\t\tconst desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n\t\t\t\tconst startModelPosition = modelSelection.getStartPosition();\n\t\t\t\tconst visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n\t\t\t\tconst distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n\t\t\t\tconst hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n\t\t\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\t\t\tconst widthOfHiddenTextBefore = measureText(this.textArea.domNode.ownerDocument, hiddenLineTextBefore, this._fontInfo, tabSize);\n\n\t\t\t\treturn { distanceToModelLineStart, widthOfHiddenTextBefore };\n\t\t\t})();\n\n\t\t\tconst { distanceToModelLineEnd } = (() => {\n\t\t\t\t// Find the text that is on the current line after the selection\n\t\t\t\tconst textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n\t\t\t\tconst lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n\t\t\t\tconst lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n\n\t\t\t\tconst tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n\t\t\t\tconst desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n\t\t\t\tconst endModelPosition = modelSelection.getEndPosition();\n\t\t\t\tconst visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n\t\t\t\tconst distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n\n\t\t\t\treturn { distanceToModelLineEnd };\n\t\t\t})();\n\n\t\t\t// Scroll to reveal the location in the editor where composition occurs\n\t\t\tthis._context.viewModel.revealRange(\n\t\t\t\t'keyboard',\n\t\t\t\ttrue,\n\t\t\t\tRange.fromPositions(this._selections[0].getStartPosition()),\n\t\t\t\tviewEvents.VerticalRevealType.Simple,\n\t\t\t\tScrollType.Immediate\n\t\t\t);\n\n\t\t\tthis._visibleTextArea = new VisibleTextAreaData(\n\t\t\t\tthis._context,\n\t\t\t\tmodelSelection.startLineNumber,\n\t\t\t\tdistanceToModelLineStart,\n\t\t\t\twidthOfHiddenTextBefore,\n\t\t\t\tdistanceToModelLineEnd,\n\t\t\t);\n\n\t\t\t// We turn off wrapping if the <textarea> becomes visible for composition\n\t\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\n\t\t\tthis._visibleTextArea.prepareRender(this._visibleRangeProvider);\n\t\t\tthis._render();\n\n\t\t\t// Show the textarea\n\t\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n\n\t\t\tthis._viewController.compositionStart();\n\t\t\tthis._context.viewModel.onCompositionStart();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionUpdate((e: ICompositionData) => {\n\t\t\tif (!this._visibleTextArea) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._visibleTextArea.prepareRender(this._visibleRangeProvider);\n\t\t\tthis._render();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onCompositionEnd(() => {\n\n\t\t\tthis._visibleTextArea = null;\n\n\t\t\t// We turn on wrapping as necessary if the <textarea> hides after composition\n\t\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\n\t\t\tthis._render();\n\n\t\t\tthis.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n\t\t\tthis._viewController.compositionEnd();\n\t\t\tthis._context.viewModel.onCompositionEnd();\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onFocus(() => {\n\t\t\tthis._context.viewModel.setHasFocus(true);\n\t\t}));\n\n\t\tthis._register(this._textAreaInput.onBlur(() => {\n\t\t\tthis._context.viewModel.setHasFocus(false);\n\t\t}));\n\n\t\tthis._register(IME.onDidChange(() => {\n\t\t\tthis._ensureReadOnlyAttribute();\n\t\t}));\n\t}\n\n\tpublic get domNode() {\n\t\treturn this.textArea;\n\t}\n\n\tpublic writeScreenReaderContent(reason: string): void {\n\t\tthis._textAreaInput.writeNativeTextAreaContent(reason);\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis.textArea.domNode.remove();\n\t\tthis.textAreaCover.domNode.remove();\n\t}\n\n\tprivate _getAndroidWordAtPosition(position: Position): [string, number] {\n\t\tconst ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\tconst wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS, []);\n\n\t\tlet goingLeft = true;\n\t\tlet startColumn = position.column;\n\t\tlet goingRight = true;\n\t\tlet endColumn = position.column;\n\t\tlet distance = 0;\n\t\twhile (distance < 50 && (goingLeft || goingRight)) {\n\t\t\tif (goingLeft && startColumn <= 1) {\n\t\t\t\tgoingLeft = false;\n\t\t\t}\n\t\t\tif (goingLeft) {\n\t\t\t\tconst charCode = lineContent.charCodeAt(startColumn - 2);\n\t\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\t\tif (charClass !== WordCharacterClass.Regular) {\n\t\t\t\t\tgoingLeft = false;\n\t\t\t\t} else {\n\t\t\t\t\tstartColumn--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (goingRight && endColumn > lineContent.length) {\n\t\t\t\tgoingRight = false;\n\t\t\t}\n\t\t\tif (goingRight) {\n\t\t\t\tconst charCode = lineContent.charCodeAt(endColumn - 1);\n\t\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\t\tif (charClass !== WordCharacterClass.Regular) {\n\t\t\t\t\tgoingRight = false;\n\t\t\t\t} else {\n\t\t\t\t\tendColumn++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdistance++;\n\t\t}\n\n\t\treturn [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n\t}\n\n\tprivate _getWordBeforePosition(position: Position): string {\n\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\tconst wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(EditorOption.wordSeparators), []);\n\n\t\tlet column = position.column;\n\t\tlet distance = 0;\n\t\twhile (column > 1) {\n\t\t\tconst charCode = lineContent.charCodeAt(column - 2);\n\t\t\tconst charClass = wordSeparators.get(charCode);\n\t\t\tif (charClass !== WordCharacterClass.Regular || distance > 50) {\n\t\t\t\treturn lineContent.substring(column - 1, position.column - 1);\n\t\t\t}\n\t\t\tdistance++;\n\t\t\tcolumn--;\n\t\t}\n\t\treturn lineContent.substring(0, position.column - 1);\n\t}\n\n\tprivate _getCharacterBeforePosition(position: Position): string {\n\t\tif (position.column > 1) {\n\t\t\tconst lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n\t\t\tconst charBefore = lineContent.charAt(position.column - 2);\n\t\t\tif (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n\t\t\t\treturn charBefore;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate _setAccessibilityOptions(options: IComputedEditorOptions): void {\n\t\tthis._accessibilitySupport = options.get(EditorOption.accessibilitySupport);\n\t\tconst accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t\tif (this._accessibilitySupport === AccessibilitySupport.Enabled && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n\t\t\t// If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n\t\t\tthis._accessibilityPageSize = 500;\n\t\t} else {\n\t\t\tthis._accessibilityPageSize = accessibilityPageSize;\n\t\t}\n\n\t\t// When wrapping is enabled and a screen reader might be attached,\n\t\t// we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).\n\t\t// This is because screen readers will read the text in the textarea and we'd like that the\n\t\t// wrapping points in the textarea match the wrapping points in the editor.\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst wrappingColumn = layoutInfo.wrappingColumn;\n\t\tif (wrappingColumn !== -1 && this._accessibilitySupport !== AccessibilitySupport.Disabled) {\n\t\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\t\tthis._textAreaWrapping = true;\n\t\t\tthis._textAreaWidth = Math.round(wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n\t\t} else {\n\t\t\tthis._textAreaWrapping = false;\n\t\t\tthis._textAreaWidth = (canUseZeroSizeTextarea ? 0 : 1);\n\t\t}\n\t}\n\n\t// --- begin event handlers\n\n\tpublic override onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\n\t\tthis._setAccessibilityOptions(options);\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tthis._copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\t\tthis.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n\t\tconst { tabSize } = this._context.viewModel.model.getOptions();\n\t\tthis.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n\t\tthis.textArea.setAttribute('aria-label', ariaLabelForScreenReaderContent(options, this._keybindingService));\n\t\tthis.textArea.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis.textArea.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\n\t\tif (e.hasChanged(EditorOption.domReadOnly) || e.hasChanged(EditorOption.readOnly)) {\n\t\t\tthis._ensureReadOnlyAttribute();\n\t\t}\n\n\t\tif (e.hasChanged(EditorOption.accessibilitySupport)) {\n\t\t\tthis._textAreaInput.writeNativeTextAreaContent('strategy changed');\n\t\t}\n\n\t\treturn true;\n\t}\n\tpublic override onCursorStateChanged(e: viewEvents.ViewCursorStateChangedEvent): boolean {\n\t\tthis._selections = e.selections.slice(0);\n\t\tthis._modelSelections = e.modelSelections.slice(0);\n\t\t// We must update the <textarea> synchronously, otherwise long press IME on macos breaks.\n\t\t// See https://github.com/microsoft/vscode/issues/165821\n\t\tthis._textAreaInput.writeNativeTextAreaContent('selection changed');\n\t\treturn true;\n\t}\n\tpublic override onDecorationsChanged(e: viewEvents.ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\tpublic override onFlushed(e: viewEvents.ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean {\n\t\treturn true;\n\t}\n\tpublic override onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean {\n\t\tthis._scrollLeft = e.scrollLeft;\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn true;\n\t}\n\tpublic override onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\t// --- end event handlers\n\n\t// --- begin view API\n\n\tpublic isFocused(): boolean {\n\t\treturn this._textAreaInput.isFocused();\n\t}\n\n\tpublic focus(): void {\n\t\tthis._textAreaInput.focusTextArea();\n\t}\n\n\tpublic refreshFocusState() {\n\t\tthis._textAreaInput.refreshFocusState();\n\t}\n\n\tpublic getLastRenderData(): Position | null {\n\t\treturn this._lastRenderPosition;\n\t}\n\n\tpublic setAriaOptions(options: IEditorAriaOptions): void {\n\t\tif (options.activeDescendant) {\n\t\t\tthis.textArea.setAttribute('aria-haspopup', 'true');\n\t\t\tthis.textArea.setAttribute('aria-autocomplete', 'list');\n\t\t\tthis.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n\t\t} else {\n\t\t\tthis.textArea.setAttribute('aria-haspopup', 'false');\n\t\t\tthis.textArea.setAttribute('aria-autocomplete', 'both');\n\t\t\tthis.textArea.removeAttribute('aria-activedescendant');\n\t\t}\n\t\tif (options.role) {\n\t\t\tthis.textArea.setAttribute('role', options.role);\n\t\t}\n\t}\n\n\t// --- end view API\n\n\tprivate _ensureReadOnlyAttribute(): void {\n\t\tconst options = this._context.configuration.options;\n\t\t// When someone requests to disable IME, we set the \"readonly\" attribute on the <textarea>.\n\t\t// This will prevent composition.\n\t\tconst useReadOnly = !IME.enabled || (options.get(EditorOption.domReadOnly) && options.get(EditorOption.readOnly));\n\t\tif (useReadOnly) {\n\t\t\tthis.textArea.setAttribute('readonly', 'true');\n\t\t} else {\n\t\t\tthis.textArea.removeAttribute('readonly');\n\t\t}\n\t}\n\n\tprivate _primaryCursorPosition: Position = new Position(1, 1);\n\tprivate _primaryCursorVisibleRange: HorizontalPosition | null = null;\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n\t\tthis._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n\t\tthis._visibleTextArea?.prepareRender(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._textAreaInput.writeNativeTextAreaContent('render');\n\t\tthis._render();\n\t}\n\n\tprivate _render(): void {\n\t\tif (this._visibleTextArea) {\n\t\t\t// The text area is visible for composition reasons\n\n\t\t\tconst visibleStart = this._visibleTextArea.visibleTextareaStart;\n\t\t\tconst visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n\t\t\tconst startPosition = this._visibleTextArea.startPosition;\n\t\t\tconst endPosition = this._visibleTextArea.endPosition;\n\t\t\tif (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n\t\t\t\tconst top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n\t\t\t\tconst lineCount = newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n\n\t\t\t\tlet scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n\t\t\t\tlet left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n\t\t\t\t// See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n\t\t\t\t// Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n\t\t\t\t// This could be caused by rounding errors that might only show up with certain font families.\n\t\t\t\t// In other words, a pixel might be lost when doing something like\n\t\t\t\t//      `Math.round(end) - Math.round(start)`\n\t\t\t\t// vs\n\t\t\t\t//      `Math.round(end - start)`\n\t\t\t\tlet width = visibleEnd.left - visibleStart.left + 1;\n\t\t\t\tif (left < this._contentLeft) {\n\t\t\t\t\t// the textarea would be rendered on top of the margin,\n\t\t\t\t\t// so reduce its width. We use the same technique as\n\t\t\t\t\t// for hiding text before\n\t\t\t\t\tconst delta = (this._contentLeft - left);\n\t\t\t\t\tleft += delta;\n\t\t\t\t\tscrollLeft += delta;\n\t\t\t\t\twidth -= delta;\n\t\t\t\t}\n\t\t\t\tif (width > this._contentWidth) {\n\t\t\t\t\t// the textarea would be wider than the content width,\n\t\t\t\t\t// so reduce its width.\n\t\t\t\t\twidth = this._contentWidth;\n\t\t\t\t}\n\n\t\t\t\t// Try to render the textarea with the color/font style to match the text under it\n\t\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(startPosition.lineNumber);\n\t\t\t\tconst fontSize = this._context.viewModel.getFontSizeAtPosition(this._primaryCursorPosition);\n\t\t\t\tconst viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n\t\t\t\tconst startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n\t\t\t\tconst endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n\t\t\t\tconst textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n\t\t\t\tconst presentation = this._visibleTextArea.definePresentation(\n\t\t\t\t\t(textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null)\n\t\t\t\t);\n\n\t\t\t\tthis.textArea.domNode.scrollTop = lineCount * lineHeight;\n\t\t\t\tthis.textArea.domNode.scrollLeft = scrollLeft;\n\n\t\t\t\tthis._doRender({\n\t\t\t\t\tlastRenderPosition: null,\n\t\t\t\t\ttop: top,\n\t\t\t\t\tleft: left,\n\t\t\t\t\twidth: width,\n\t\t\t\t\theight: lineHeight,\n\t\t\t\t\tuseCover: false,\n\t\t\t\t\tcolor: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n\t\t\t\t\titalic: presentation.italic,\n\t\t\t\t\tbold: presentation.bold,\n\t\t\t\t\tunderline: presentation.underline,\n\t\t\t\t\tstrikethrough: presentation.strikethrough,\n\t\t\t\t\tfontSize\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._primaryCursorVisibleRange) {\n\t\t\t// The primary cursor is outside the viewport => place textarea to the top left\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n\t\tif (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n\t\tif (top < 0 || top > this._contentHeight) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\t// The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n\n\t\tif (platform.isMacintosh || this._accessibilitySupport === AccessibilitySupport.Enabled) {\n\t\t\t// For the popup emoji input, we will make the text area as high as the line height\n\t\t\t// We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n\t\t\tconst lineNumber = this._primaryCursorPosition.lineNumber;\n\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(lineNumber);\n\t\t\tthis._doRender({\n\t\t\t\tlastRenderPosition: this._primaryCursorPosition,\n\t\t\t\ttop,\n\t\t\t\tleft: this._textAreaWrapping ? this._contentLeft : left,\n\t\t\t\twidth: this._textAreaWidth,\n\t\t\t\theight: lineHeight,\n\t\t\t\tuseCover: false\n\t\t\t});\n\t\t\t// In case the textarea contains a word, we're going to try to align the textarea's cursor\n\t\t\t// with our cursor by scrolling the textarea as much as possible\n\t\t\tthis.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n\t\t\tconst lineCount = this._textAreaInput.textAreaState.newlineCountBeforeSelection ?? newlinecount(this.textArea.domNode.value.substring(0, this.textArea.domNode.selectionStart));\n\t\t\tthis.textArea.domNode.scrollTop = lineCount * lineHeight;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._doRender({\n\t\t\tlastRenderPosition: this._primaryCursorPosition,\n\t\t\ttop: top,\n\t\t\tleft: this._textAreaWrapping ? this._contentLeft : left,\n\t\t\twidth: this._textAreaWidth,\n\t\t\theight: (canUseZeroSizeTextarea ? 0 : 1),\n\t\t\tuseCover: false\n\t\t});\n\t}\n\n\tprivate _renderAtTopLeft(): void {\n\t\t// (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n\t\t// specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n\t\tthis._doRender({\n\t\t\tlastRenderPosition: null,\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\twidth: this._textAreaWidth,\n\t\t\theight: (canUseZeroSizeTextarea ? 0 : 1),\n\t\t\tuseCover: true\n\t\t});\n\t}\n\n\tprivate _doRender(renderData: IRenderData): void {\n\t\tthis._lastRenderPosition = renderData.lastRenderPosition;\n\n\t\tconst ta = this.textArea;\n\t\tconst tac = this.textAreaCover;\n\n\t\tapplyFontInfo(ta, this._fontInfo);\n\t\tta.setTop(renderData.top);\n\t\tta.setLeft(renderData.left);\n\t\tta.setWidth(renderData.width);\n\t\tta.setHeight(renderData.height);\n\t\tta.setLineHeight(renderData.height);\n\n\t\tta.setFontSize(renderData.fontSize ?? this._fontInfo.fontSize);\n\t\tta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n\t\tta.setFontStyle(renderData.italic ? 'italic' : '');\n\t\tif (renderData.bold) {\n\t\t\t// fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n\t\t\tta.setFontWeight('bold');\n\t\t}\n\t\tta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n\n\t\ttac.setTop(renderData.useCover ? renderData.top : 0);\n\t\ttac.setLeft(renderData.useCover ? renderData.left : 0);\n\t\ttac.setWidth(renderData.useCover ? renderData.width : 0);\n\t\ttac.setHeight(renderData.useCover ? renderData.height : 0);\n\n\t\tconst options = this._context.configuration.options;\n\n\t\tif (options.get(EditorOption.glyphMargin)) {\n\t\t\ttac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n\t\t} else {\n\t\t\tif (options.get(EditorOption.lineNumbers).renderType !== RenderLineNumbersType.Off) {\n\t\t\t\ttac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n\t\t\t} else {\n\t\t\t\ttac.setClassName('monaco-editor-background textAreaCover');\n\t\t\t}\n\t\t}\n\t}\n}\n\ninterface IRenderData {\n\tlastRenderPosition: Position | null;\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n\tuseCover: boolean;\n\n\tfontSize?: string | null;\n\tcolor?: Color | null;\n\titalic?: boolean;\n\tbold?: boolean;\n\tunderline?: boolean;\n\tstrikethrough?: boolean;\n}\n\nfunction measureText(targetDocument: Document, text: string, fontInfo: FontInfo, tabSize: number): number {\n\tif (text.length === 0) {\n\t\treturn 0;\n\t}\n\n\tconst container = targetDocument.createElement('div');\n\tcontainer.style.position = 'absolute';\n\tcontainer.style.top = '-50000px';\n\tcontainer.style.width = '50000px';\n\n\tconst regularDomNode = targetDocument.createElement('span');\n\tapplyFontInfo(regularDomNode, fontInfo);\n\tregularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n\tregularDomNode.style.tabSize = `${tabSize * fontInfo.spaceWidth}px`; // just like the textarea\n\tregularDomNode.append(text);\n\tcontainer.appendChild(regularDomNode);\n\n\ttargetDocument.body.appendChild(container);\n\n\tconst res = regularDomNode.offsetWidth;\n\n\tcontainer.remove();\n\n\treturn res;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3711, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/nativeEditContextUtils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/nativeEditContextUtils.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/nativeEditContextUtils.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getActiveElement, getShadowRoot } from '../../../../../base/browser/dom.js';\nimport { IDisposable, Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\n\nexport interface ITypeData {\n\ttext: string;\n\treplacePrevCharCnt: number;\n\treplaceNextCharCnt: number;\n\tpositionDelta: number;\n}\n\nexport class FocusTracker extends Disposable {\n\tprivate _isFocused: boolean = false;\n\tprivate _isPaused: boolean = false;\n\n\tconstructor(\n\t\t@ILogService _logService: ILogService,\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly _onFocusChange: (newFocusValue: boolean) => void,\n\t) {\n\t\tsuper();\n\t\tthis._register(addDisposableListener(this._domNode, 'focus', () => {\n\t\t\t_logService.trace('NativeEditContext.focus');\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Here we don't trust the browser and instead we check\n\t\t\t// that the active element is the one we are tracking\n\t\t\t// (this happens when cmd+tab is used to switch apps)\n\t\t\tthis.refreshFocusState();\n\t\t}));\n\t\tthis._register(addDisposableListener(this._domNode, 'blur', () => {\n\t\t\t_logService.trace('NativeEditContext.blur');\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._handleFocusedChanged(false);\n\t\t}));\n\t}\n\n\tpublic pause(): void {\n\t\tthis._isPaused = true;\n\t}\n\n\tpublic resume(): void {\n\t\tthis._isPaused = false;\n\t\tthis.refreshFocusState();\n\t}\n\n\tprivate _handleFocusedChanged(focused: boolean): void {\n\t\tif (this._isFocused === focused) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isFocused = focused;\n\t\tthis._onFocusChange(this._isFocused);\n\t}\n\n\tpublic focus(): void {\n\t\tthis._domNode.focus();\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tconst shadowRoot = getShadowRoot(this._domNode);\n\t\tconst activeElement = shadowRoot ? shadowRoot.activeElement : getActiveElement();\n\t\tconst focused = this._domNode === activeElement;\n\t\tthis._handleFocusedChanged(focused);\n\t}\n\n\tget isFocused(): boolean {\n\t\treturn this._isFocused;\n\t}\n}\n\nexport function editContextAddDisposableListener<K extends keyof EditContextEventHandlersEventMap>(target: EventTarget, type: K, listener: (this: GlobalEventHandlers, ev: EditContextEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): IDisposable {\n\ttarget.addEventListener(type, listener as any, options);\n\treturn {\n\t\tdispose() {\n\t\t\ttarget.removeEventListener(type, listener as any);\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getActiveElement, getShadowRoot } from '../../../../../base/browser/dom.js';\nimport { IDisposable, Disposable } from '../../../../../base/common/lifecycle.js';\nimport { ILogService } from '../../../../../platform/log/common/log.js';\n\nexport interface ITypeData {\n\ttext: string;\n\treplacePrevCharCnt: number;\n\treplaceNextCharCnt: number;\n\tpositionDelta: number;\n}\n\nexport class FocusTracker extends Disposable {\n\tprivate _isFocused: boolean = false;\n\tprivate _isPaused: boolean = false;\n\n\tconstructor(\n\t\t@ILogService _logService: ILogService,\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly _onFocusChange: (newFocusValue: boolean) => void,\n\t) {\n\t\tsuper();\n\t\tthis._register(addDisposableListener(this._domNode, 'focus', () => {\n\t\t\t_logService.trace('NativeEditContext.focus');\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Here we don't trust the browser and instead we check\n\t\t\t// that the active element is the one we are tracking\n\t\t\t// (this happens when cmd+tab is used to switch apps)\n\t\t\tthis.refreshFocusState();\n\t\t}));\n\t\tthis._register(addDisposableListener(this._domNode, 'blur', () => {\n\t\t\t_logService.trace('NativeEditContext.blur');\n\t\t\tif (this._isPaused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._handleFocusedChanged(false);\n\t\t}));\n\t}\n\n\tpublic pause(): void {\n\t\tthis._isPaused = true;\n\t}\n\n\tpublic resume(): void {\n\t\tthis._isPaused = false;\n\t\tthis.refreshFocusState();\n\t}\n\n\tprivate _handleFocusedChanged(focused: boolean): void {\n\t\tif (this._isFocused === focused) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isFocused = focused;\n\t\tthis._onFocusChange(this._isFocused);\n\t}\n\n\tpublic focus(): void {\n\t\tthis._domNode.focus();\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tconst shadowRoot = getShadowRoot(this._domNode);\n\t\tconst activeElement = shadowRoot ? shadowRoot.activeElement : getActiveElement();\n\t\tconst focused = this._domNode === activeElement;\n\t\tthis._handleFocusedChanged(focused);\n\t}\n\n\tget isFocused(): boolean {\n\t\treturn this._isFocused;\n\t}\n}\n\nexport function editContextAddDisposableListener<K extends keyof EditContextEventHandlersEventMap>(target: EventTarget, type: K, listener: (this: GlobalEventHandlers, ev: EditContextEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): IDisposable {\n\ttarget.addEventListener(type, listener as any, options);\n\treturn {\n\t\tdispose() {\n\t\t\ttarget.removeEventListener(type, listener as any);\n\t\t}\n\t};\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3806, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/screenReaderContentRich.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/screenReaderContentRich.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/screenReaderContentRich.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getActiveWindow, isHTMLElement } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../../../base/browser/trustedTypes.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { EditorFontLigatures, EditorOption, FindComputedEditorOptionValueById, IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { StringBuilder } from '../../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../../common/viewLayout/lineDecorations.js';\nimport { CharacterMapping, RenderLineInput, renderViewLine } from '../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { IPagedScreenReaderStrategy } from '../screenReaderUtils.js';\nimport { ISimpleModel } from '../../../../common/viewModel/screenReaderSimpleModel.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { IScreenReaderContent } from './screenReaderUtils.js';\nimport { getColumnOfNodeOffset } from '../../../viewParts/viewLines/viewLine.js';\n\nconst ttPolicy = createTrustedTypesPolicy('richScreenReaderContent', { createHTML: value => value });\n\nconst LINE_NUMBER_ATTRIBUTE = 'data-line-number';\n\nexport class RichScreenReaderContent extends Disposable implements IScreenReaderContent {\n\n\tprivate readonly _selectionChangeListener = this._register(new MutableDisposable());\n\n\tprivate _accessibilityPageSize: number = 1;\n\tprivate _ignoreSelectionChangeTime: number = 0;\n\n\tprivate _state: RichScreenReaderState = new RichScreenReaderState([]);\n\tprivate _strategy: RichPagedScreenReaderStrategy = new RichPagedScreenReaderStrategy();\n\n\tprivate _renderedLines: Map<number, RichRenderedScreenReaderLine> = new Map();\n\tprivate _renderedSelection: Selection = new Selection(1, 1, 1, 1);\n\n\tconstructor(\n\t\tprivate readonly _domNode: FastDomNode<HTMLElement>,\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.onConfigurationChanged(this._context.configuration.options);\n\t}\n\n\tpublic updateScreenReaderContent(primarySelection: Selection): void {\n\t\tconst focusedElement = getActiveWindow().document.activeElement;\n\t\tif (!focusedElement || focusedElement !== this._domNode.domNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\tif (isScreenReaderOptimized) {\n\t\t\tconst state = this._getScreenReaderContentLineIntervals(primarySelection);\n\t\t\tif (!this._state.equals(state)) {\n\t\t\t\tthis._state = state;\n\t\t\t\tthis._renderedLines = this._renderScreenReaderContent(state);\n\t\t\t}\n\t\t\tif (!this._renderedSelection.equalsSelection(primarySelection)) {\n\t\t\t\tthis._renderedSelection = primarySelection;\n\t\t\t\tthis._setSelectionOnScreenReaderContent(this._context, this._renderedLines, primarySelection);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._state = new RichScreenReaderState([]);\n\t\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\t\tthis._domNode.domNode.textContent = '';\n\t\t}\n\t}\n\n\tpublic updateScrollTop(primarySelection: Selection): void {\n\t\tconst intervals = this._state.intervals;\n\t\tif (!intervals.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewLayout = this._context.viewModel.viewLayout;\n\t\tconst stateStartLineNumber = intervals[0].startLine;\n\t\tconst verticalOffsetOfStateStartLineNumber = viewLayout.getVerticalOffsetForLineNumber(stateStartLineNumber);\n\t\tconst verticalOffsetOfPositionLineNumber = viewLayout.getVerticalOffsetForLineNumber(primarySelection.positionLineNumber);\n\t\tthis._domNode.domNode.scrollTop = verticalOffsetOfPositionLineNumber - verticalOffsetOfStateStartLineNumber;\n\t}\n\n\tpublic onFocusChange(newFocusValue: boolean): void {\n\t\tif (newFocusValue) {\n\t\t\tthis._selectionChangeListener.value = this._setSelectionChangeListener();\n\t\t} else {\n\t\t\tthis._selectionChangeListener.value = undefined;\n\t\t}\n\t}\n\n\tpublic onConfigurationChanged(options: IComputedEditorOptions): void {\n\t\tthis._accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t}\n\n\tpublic onWillCut(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onCut');\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onWillPaste');\n\t}\n\n\t// --- private methods\n\n\tprivate _setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tprivate _setSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display or NVDA for example, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event and needs to be reflected within the editor.\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn addDisposableListener(this._domNode.domNode.ownerDocument, 'selectionchange', () => {\n\t\t\tconst activeElement = getActiveWindow().document.activeElement;\n\t\t\tconst isFocused = activeElement === this._domNode.domNode;\n\t\t\tif (!isFocused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\t\tif (!isScreenReaderOptimized || !IME.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst now = Date.now();\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst delta2 = now - this._ignoreSelectionChangeTime;\n\t\t\tthis._ignoreSelectionChangeTime = 0;\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the hidden div\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selection = this._getEditorSelectionFromDomRange();\n\t\t\tif (!selection) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._viewController.setSelection(selection);\n\t\t});\n\t}\n\n\tprivate _renderScreenReaderContent(state: RichScreenReaderState): Map<number, RichRenderedScreenReaderLine> {\n\t\tconst nodes: HTMLDivElement[] = [];\n\t\tconst renderedLines = new Map<number, RichRenderedScreenReaderLine>();\n\t\tfor (const interval of state.intervals) {\n\t\t\tfor (let lineNumber = interval.startLine; lineNumber <= interval.endLine; lineNumber++) {\n\t\t\t\tconst renderedLine = this._renderLine(lineNumber);\n\t\t\t\trenderedLines.set(lineNumber, renderedLine);\n\t\t\t\tnodes.push(renderedLine.domNode);\n\t\t\t}\n\t\t}\n\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\tthis._domNode.domNode.replaceChildren(...nodes);\n\t\treturn renderedLines;\n\t}\n\n\tprivate _renderLine(viewLineNumber: number): RichRenderedScreenReaderLine {\n\t\tconst viewModel = this._context.viewModel;\n\t\tconst positionLineData = viewModel.getViewLineRenderingData(viewLineNumber);\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t\tconst renderControlCharacters = options.get(EditorOption.renderControlCharacters);\n\t\tconst fontLigatures = options.get(EditorOption.fontLigatures);\n\t\tconst disableMonospaceOptimizations = options.get(EditorOption.disableMonospaceOptimizations);\n\t\tconst lineDecorations = LineDecoration.filter(positionLineData.inlineDecorations, viewLineNumber, positionLineData.minColumn, positionLineData.maxColumn);\n\t\tconst useMonospaceOptimizations = fontInfo.isMonospace && !disableMonospaceOptimizations;\n\t\tconst useFontLigatures = fontLigatures !== EditorFontLigatures.OFF;\n\t\tlet renderWhitespace: FindComputedEditorOptionValueById<EditorOption.renderWhitespace>;\n\t\tconst experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tif (experimentalWhitespaceRendering === 'off') {\n\t\t\trenderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t} else {\n\t\t\trenderWhitespace = 'none';\n\t\t}\n\t\tconst renderLineInput = new RenderLineInput(\n\t\t\tuseMonospaceOptimizations,\n\t\t\tfontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tpositionLineData.content,\n\t\t\tpositionLineData.continuesWithWrappedLine,\n\t\t\tpositionLineData.isBasicASCII,\n\t\t\tpositionLineData.containsRTL,\n\t\t\tpositionLineData.minColumn - 1,\n\t\t\tpositionLineData.tokens,\n\t\t\tlineDecorations,\n\t\t\tpositionLineData.tabSize,\n\t\t\tpositionLineData.startVisibleColumn,\n\t\t\tfontInfo.spaceWidth,\n\t\t\tfontInfo.middotWidth,\n\t\t\tfontInfo.wsmiddotWidth,\n\t\t\tstopRenderingLineAfter,\n\t\t\trenderWhitespace,\n\t\t\trenderControlCharacters,\n\t\t\tuseFontLigatures,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t0,\n\t\t\ttrue\n\t\t);\n\t\tconst htmlBuilder = new StringBuilder(10000);\n\t\tconst renderOutput = renderViewLine(renderLineInput, htmlBuilder);\n\t\tconst html = htmlBuilder.build();\n\t\tconst trustedhtml = ttPolicy?.createHTML(html) ?? html;\n\t\tconst lineHeight = viewModel.viewLayout.getLineHeightForLineNumber(viewLineNumber) + 'px';\n\t\tconst domNode = document.createElement('div');\n\t\tdomNode.innerHTML = trustedhtml as string;\n\t\tdomNode.style.lineHeight = lineHeight;\n\t\tdomNode.style.height = lineHeight;\n\t\tdomNode.setAttribute(LINE_NUMBER_ATTRIBUTE, viewLineNumber.toString());\n\t\treturn new RichRenderedScreenReaderLine(domNode, renderOutput.characterMapping);\n\t}\n\n\tprivate _setSelectionOnScreenReaderContent(context: ViewContext, renderedLines: Map<number, RichRenderedScreenReaderLine>, viewSelection: Selection): void {\n\t\tconst activeDocument = getActiveWindow().document;\n\t\tconst activeDocumentSelection = activeDocument.getSelection();\n\t\tif (!activeDocumentSelection) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineNumber = viewSelection.startLineNumber;\n\t\tconst endLineNumber = viewSelection.endLineNumber;\n\t\tconst startRenderedLine = renderedLines.get(startLineNumber);\n\t\tconst endRenderedLine = renderedLines.get(endLineNumber);\n\t\tif (!startRenderedLine || !endRenderedLine) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = context.viewModel;\n\t\tconst model = viewModel.model;\n\t\tconst coordinatesConverter = viewModel.coordinatesConverter;\n\t\tconst startRange = new Range(startLineNumber, 1, startLineNumber, viewSelection.selectionStartColumn);\n\t\tconst modelStartRange = coordinatesConverter.convertViewRangeToModelRange(startRange);\n\t\tconst characterCountForStart = model.getCharacterCountInRange(modelStartRange);\n\t\tconst endRange = new Range(endLineNumber, 1, endLineNumber, viewSelection.positionColumn);\n\t\tconst modelEndRange = coordinatesConverter.convertViewRangeToModelRange(endRange);\n\t\tconst characterCountForEnd = model.getCharacterCountInRange(modelEndRange);\n\t\tconst startDomPosition = startRenderedLine.characterMapping.getDomPosition(characterCountForStart);\n\t\tconst endDomPosition = endRenderedLine.characterMapping.getDomPosition(characterCountForEnd);\n\t\tconst startDomNode = startRenderedLine.domNode.firstChild!;\n\t\tconst endDomNode = endRenderedLine.domNode.firstChild!;\n\t\tconst startChildren = startDomNode.childNodes;\n\t\tconst endChildren = endDomNode.childNodes;\n\t\tconst startNode = startChildren.item(startDomPosition.partIndex);\n\t\tconst endNode = endChildren.item(endDomPosition.partIndex);\n\t\tif (!startNode.firstChild || !endNode.firstChild) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setIgnoreSelectionChangeTime('setRange');\n\t\tactiveDocumentSelection.setBaseAndExtent(\n\t\t\tstartNode.firstChild,\n\t\t\tviewSelection.startColumn === 1 ? 0 : startDomPosition.charIndex + 1,\n\t\t\tendNode.firstChild,\n\t\t\tviewSelection.endColumn === 1 ? 0 : endDomPosition.charIndex + 1\n\t\t);\n\t}\n\n\tprivate _getScreenReaderContentLineIntervals(primarySelection: Selection): RichScreenReaderState {\n\t\treturn this._strategy.fromEditorSelection(this._context.viewModel, primarySelection, this._accessibilityPageSize);\n\t}\n\n\tprivate _getEditorSelectionFromDomRange(): Selection | undefined {\n\t\tif (!this._renderedLines) {\n\t\t\treturn;\n\t\t}\n\t\tconst selection = getActiveWindow().document.getSelection();\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\t\tconst rangeCount = selection.rangeCount;\n\t\tif (rangeCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = selection.getRangeAt(0);\n\t\tconst startContainer = range.startContainer;\n\t\tconst endContainer = range.endContainer;\n\t\tconst startSpanElement = startContainer.parentElement;\n\t\tconst endSpanElement = endContainer.parentElement;\n\t\tif (!startSpanElement || !isHTMLElement(startSpanElement) || !endSpanElement || !isHTMLElement(endSpanElement)) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineDomNode = startSpanElement.parentElement?.parentElement;\n\t\tconst endLineDomNode = endSpanElement.parentElement?.parentElement;\n\t\tif (!startLineDomNode || !endLineDomNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineNumberAttribute = startLineDomNode.getAttribute(LINE_NUMBER_ATTRIBUTE);\n\t\tconst endLineNumberAttribute = endLineDomNode.getAttribute(LINE_NUMBER_ATTRIBUTE);\n\t\tif (!startLineNumberAttribute || !endLineNumberAttribute) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineNumber = parseInt(startLineNumberAttribute);\n\t\tconst endLineNumber = parseInt(endLineNumberAttribute);\n\t\tconst startMapping = this._renderedLines.get(startLineNumber)?.characterMapping;\n\t\tconst endMapping = this._renderedLines.get(endLineNumber)?.characterMapping;\n\t\tif (!startMapping || !endMapping) {\n\t\t\treturn;\n\t\t}\n\t\tconst startColumn = getColumnOfNodeOffset(startMapping, startSpanElement, range.startOffset);\n\t\tconst endColumn = getColumnOfNodeOffset(endMapping, endSpanElement, range.endOffset);\n\t\tif (selection.direction === 'forward') {\n\t\t\treturn new Selection(\n\t\t\t\tstartLineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber,\n\t\t\t\tendColumn\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Selection(\n\t\t\t\tendLineNumber,\n\t\t\t\tendColumn,\n\t\t\t\tstartLineNumber,\n\t\t\t\tstartColumn\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass RichRenderedScreenReaderLine {\n\tconstructor(\n\t\tpublic readonly domNode: HTMLDivElement,\n\t\tpublic readonly characterMapping: CharacterMapping\n\t) { }\n}\n\nclass LineInterval {\n\tconstructor(\n\t\tpublic readonly startLine: number,\n\t\tpublic readonly endLine: number\n\t) { }\n}\n\nclass RichScreenReaderState {\n\n\tconstructor(public readonly intervals: LineInterval[]) { }\n\n\tequals(other: RichScreenReaderState): boolean {\n\t\tif (this.intervals.length !== other.intervals.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.intervals.length; i++) {\n\t\t\tif (this.intervals[i].startLine !== other.intervals[i].startLine || this.intervals[i].endLine !== other.intervals[i].endLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nclass RichPagedScreenReaderStrategy implements IPagedScreenReaderStrategy<RichScreenReaderState> {\n\n\tconstructor() { }\n\n\tprivate _getPageOfLine(lineNumber: number, linesPerPage: number): number {\n\t\treturn Math.floor((lineNumber - 1) / linesPerPage);\n\t}\n\n\tprivate _getRangeForPage(context: ISimpleModel, page: number, linesPerPage: number): LineInterval {\n\t\tconst offset = page * linesPerPage;\n\t\tconst startLineNumber = offset + 1;\n\t\tconst endLineNumber = Math.min(offset + linesPerPage, context.getLineCount());\n\t\treturn new LineInterval(startLineNumber, endLineNumber);\n\t}\n\n\tpublic fromEditorSelection(context: ISimpleModel, viewSelection: Selection, linesPerPage: number): RichScreenReaderState {\n\t\tconst selectionStartPage = this._getPageOfLine(viewSelection.startLineNumber, linesPerPage);\n\t\tconst selectionStartPageRange = this._getRangeForPage(context, selectionStartPage, linesPerPage);\n\t\tconst selectionEndPage = this._getPageOfLine(viewSelection.endLineNumber, linesPerPage);\n\t\tconst selectionEndPageRange = this._getRangeForPage(context, selectionEndPage, linesPerPage);\n\t\tconst lineIntervals: LineInterval[] = [{ startLine: selectionStartPageRange.startLine, endLine: selectionStartPageRange.endLine }];\n\t\tif (selectionStartPage + 1 < selectionEndPage) {\n\t\t\tlineIntervals.push({ startLine: selectionEndPageRange.startLine, endLine: selectionEndPageRange.endLine });\n\t\t}\n\t\treturn new RichScreenReaderState(lineIntervals);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getActiveWindow, isHTMLElement } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../../../base/browser/trustedTypes.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { EditorFontLigatures, EditorOption, FindComputedEditorOptionValueById, IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { StringBuilder } from '../../../../common/core/stringBuilder.js';\nimport { LineDecoration } from '../../../../common/viewLayout/lineDecorations.js';\nimport { CharacterMapping, RenderLineInput, renderViewLine } from '../../../../common/viewLayout/viewLineRenderer.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { IPagedScreenReaderStrategy } from '../screenReaderUtils.js';\nimport { ISimpleModel } from '../../../../common/viewModel/screenReaderSimpleModel.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { IScreenReaderContent } from './screenReaderUtils.js';\nimport { getColumnOfNodeOffset } from '../../../viewParts/viewLines/viewLine.js';\n\nconst ttPolicy = createTrustedTypesPolicy('richScreenReaderContent', { createHTML: value => value });\n\nconst LINE_NUMBER_ATTRIBUTE = 'data-line-number';\n\nexport class RichScreenReaderContent extends Disposable implements IScreenReaderContent {\n\n\tprivate readonly _selectionChangeListener = this._register(new MutableDisposable());\n\n\tprivate _accessibilityPageSize: number = 1;\n\tprivate _ignoreSelectionChangeTime: number = 0;\n\n\tprivate _state: RichScreenReaderState = new RichScreenReaderState([]);\n\tprivate _strategy: RichPagedScreenReaderStrategy = new RichPagedScreenReaderStrategy();\n\n\tprivate _renderedLines: Map<number, RichRenderedScreenReaderLine> = new Map();\n\tprivate _renderedSelection: Selection = new Selection(1, 1, 1, 1);\n\n\tconstructor(\n\t\tprivate readonly _domNode: FastDomNode<HTMLElement>,\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.onConfigurationChanged(this._context.configuration.options);\n\t}\n\n\tpublic updateScreenReaderContent(primarySelection: Selection): void {\n\t\tconst focusedElement = getActiveWindow().document.activeElement;\n\t\tif (!focusedElement || focusedElement !== this._domNode.domNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\tif (isScreenReaderOptimized) {\n\t\t\tconst state = this._getScreenReaderContentLineIntervals(primarySelection);\n\t\t\tif (!this._state.equals(state)) {\n\t\t\t\tthis._state = state;\n\t\t\t\tthis._renderedLines = this._renderScreenReaderContent(state);\n\t\t\t}\n\t\t\tif (!this._renderedSelection.equalsSelection(primarySelection)) {\n\t\t\t\tthis._renderedSelection = primarySelection;\n\t\t\t\tthis._setSelectionOnScreenReaderContent(this._context, this._renderedLines, primarySelection);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._state = new RichScreenReaderState([]);\n\t\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\t\tthis._domNode.domNode.textContent = '';\n\t\t}\n\t}\n\n\tpublic updateScrollTop(primarySelection: Selection): void {\n\t\tconst intervals = this._state.intervals;\n\t\tif (!intervals.length) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewLayout = this._context.viewModel.viewLayout;\n\t\tconst stateStartLineNumber = intervals[0].startLine;\n\t\tconst verticalOffsetOfStateStartLineNumber = viewLayout.getVerticalOffsetForLineNumber(stateStartLineNumber);\n\t\tconst verticalOffsetOfPositionLineNumber = viewLayout.getVerticalOffsetForLineNumber(primarySelection.positionLineNumber);\n\t\tthis._domNode.domNode.scrollTop = verticalOffsetOfPositionLineNumber - verticalOffsetOfStateStartLineNumber;\n\t}\n\n\tpublic onFocusChange(newFocusValue: boolean): void {\n\t\tif (newFocusValue) {\n\t\t\tthis._selectionChangeListener.value = this._setSelectionChangeListener();\n\t\t} else {\n\t\t\tthis._selectionChangeListener.value = undefined;\n\t\t}\n\t}\n\n\tpublic onConfigurationChanged(options: IComputedEditorOptions): void {\n\t\tthis._accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t}\n\n\tpublic onWillCut(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onCut');\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onWillPaste');\n\t}\n\n\t// --- private methods\n\n\tprivate _setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tprivate _setSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display or NVDA for example, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event and needs to be reflected within the editor.\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn addDisposableListener(this._domNode.domNode.ownerDocument, 'selectionchange', () => {\n\t\t\tconst activeElement = getActiveWindow().document.activeElement;\n\t\t\tconst isFocused = activeElement === this._domNode.domNode;\n\t\t\tif (!isFocused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\t\tif (!isScreenReaderOptimized || !IME.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst now = Date.now();\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst delta2 = now - this._ignoreSelectionChangeTime;\n\t\t\tthis._ignoreSelectionChangeTime = 0;\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the hidden div\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selection = this._getEditorSelectionFromDomRange();\n\t\t\tif (!selection) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._viewController.setSelection(selection);\n\t\t});\n\t}\n\n\tprivate _renderScreenReaderContent(state: RichScreenReaderState): Map<number, RichRenderedScreenReaderLine> {\n\t\tconst nodes: HTMLDivElement[] = [];\n\t\tconst renderedLines = new Map<number, RichRenderedScreenReaderLine>();\n\t\tfor (const interval of state.intervals) {\n\t\t\tfor (let lineNumber = interval.startLine; lineNumber <= interval.endLine; lineNumber++) {\n\t\t\t\tconst renderedLine = this._renderLine(lineNumber);\n\t\t\t\trenderedLines.set(lineNumber, renderedLine);\n\t\t\t\tnodes.push(renderedLine.domNode);\n\t\t\t}\n\t\t}\n\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\tthis._domNode.domNode.replaceChildren(...nodes);\n\t\treturn renderedLines;\n\t}\n\n\tprivate _renderLine(viewLineNumber: number): RichRenderedScreenReaderLine {\n\t\tconst viewModel = this._context.viewModel;\n\t\tconst positionLineData = viewModel.getViewLineRenderingData(viewLineNumber);\n\t\tconst options = this._context.configuration.options;\n\t\tconst fontInfo = options.get(EditorOption.fontInfo);\n\t\tconst stopRenderingLineAfter = options.get(EditorOption.stopRenderingLineAfter);\n\t\tconst renderControlCharacters = options.get(EditorOption.renderControlCharacters);\n\t\tconst fontLigatures = options.get(EditorOption.fontLigatures);\n\t\tconst disableMonospaceOptimizations = options.get(EditorOption.disableMonospaceOptimizations);\n\t\tconst lineDecorations = LineDecoration.filter(positionLineData.inlineDecorations, viewLineNumber, positionLineData.minColumn, positionLineData.maxColumn);\n\t\tconst useMonospaceOptimizations = fontInfo.isMonospace && !disableMonospaceOptimizations;\n\t\tconst useFontLigatures = fontLigatures !== EditorFontLigatures.OFF;\n\t\tlet renderWhitespace: FindComputedEditorOptionValueById<EditorOption.renderWhitespace>;\n\t\tconst experimentalWhitespaceRendering = options.get(EditorOption.experimentalWhitespaceRendering);\n\t\tif (experimentalWhitespaceRendering === 'off') {\n\t\t\trenderWhitespace = options.get(EditorOption.renderWhitespace);\n\t\t} else {\n\t\t\trenderWhitespace = 'none';\n\t\t}\n\t\tconst renderLineInput = new RenderLineInput(\n\t\t\tuseMonospaceOptimizations,\n\t\t\tfontInfo.canUseHalfwidthRightwardsArrow,\n\t\t\tpositionLineData.content,\n\t\t\tpositionLineData.continuesWithWrappedLine,\n\t\t\tpositionLineData.isBasicASCII,\n\t\t\tpositionLineData.containsRTL,\n\t\t\tpositionLineData.minColumn - 1,\n\t\t\tpositionLineData.tokens,\n\t\t\tlineDecorations,\n\t\t\tpositionLineData.tabSize,\n\t\t\tpositionLineData.startVisibleColumn,\n\t\t\tfontInfo.spaceWidth,\n\t\t\tfontInfo.middotWidth,\n\t\t\tfontInfo.wsmiddotWidth,\n\t\t\tstopRenderingLineAfter,\n\t\t\trenderWhitespace,\n\t\t\trenderControlCharacters,\n\t\t\tuseFontLigatures,\n\t\t\tnull,\n\t\t\tnull,\n\t\t\t0,\n\t\t\ttrue\n\t\t);\n\t\tconst htmlBuilder = new StringBuilder(10000);\n\t\tconst renderOutput = renderViewLine(renderLineInput, htmlBuilder);\n\t\tconst html = htmlBuilder.build();\n\t\tconst trustedhtml = ttPolicy?.createHTML(html) ?? html;\n\t\tconst lineHeight = viewModel.viewLayout.getLineHeightForLineNumber(viewLineNumber) + 'px';\n\t\tconst domNode = document.createElement('div');\n\t\tdomNode.innerHTML = trustedhtml as string;\n\t\tdomNode.style.lineHeight = lineHeight;\n\t\tdomNode.style.height = lineHeight;\n\t\tdomNode.setAttribute(LINE_NUMBER_ATTRIBUTE, viewLineNumber.toString());\n\t\treturn new RichRenderedScreenReaderLine(domNode, renderOutput.characterMapping);\n\t}\n\n\tprivate _setSelectionOnScreenReaderContent(context: ViewContext, renderedLines: Map<number, RichRenderedScreenReaderLine>, viewSelection: Selection): void {\n\t\tconst activeDocument = getActiveWindow().document;\n\t\tconst activeDocumentSelection = activeDocument.getSelection();\n\t\tif (!activeDocumentSelection) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineNumber = viewSelection.startLineNumber;\n\t\tconst endLineNumber = viewSelection.endLineNumber;\n\t\tconst startRenderedLine = renderedLines.get(startLineNumber);\n\t\tconst endRenderedLine = renderedLines.get(endLineNumber);\n\t\tif (!startRenderedLine || !endRenderedLine) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewModel = context.viewModel;\n\t\tconst model = viewModel.model;\n\t\tconst coordinatesConverter = viewModel.coordinatesConverter;\n\t\tconst startRange = new Range(startLineNumber, 1, startLineNumber, viewSelection.selectionStartColumn);\n\t\tconst modelStartRange = coordinatesConverter.convertViewRangeToModelRange(startRange);\n\t\tconst characterCountForStart = model.getCharacterCountInRange(modelStartRange);\n\t\tconst endRange = new Range(endLineNumber, 1, endLineNumber, viewSelection.positionColumn);\n\t\tconst modelEndRange = coordinatesConverter.convertViewRangeToModelRange(endRange);\n\t\tconst characterCountForEnd = model.getCharacterCountInRange(modelEndRange);\n\t\tconst startDomPosition = startRenderedLine.characterMapping.getDomPosition(characterCountForStart);\n\t\tconst endDomPosition = endRenderedLine.characterMapping.getDomPosition(characterCountForEnd);\n\t\tconst startDomNode = startRenderedLine.domNode.firstChild!;\n\t\tconst endDomNode = endRenderedLine.domNode.firstChild!;\n\t\tconst startChildren = startDomNode.childNodes;\n\t\tconst endChildren = endDomNode.childNodes;\n\t\tconst startNode = startChildren.item(startDomPosition.partIndex);\n\t\tconst endNode = endChildren.item(endDomPosition.partIndex);\n\t\tif (!startNode.firstChild || !endNode.firstChild) {\n\t\t\treturn;\n\t\t}\n\t\tthis._setIgnoreSelectionChangeTime('setRange');\n\t\tactiveDocumentSelection.setBaseAndExtent(\n\t\t\tstartNode.firstChild,\n\t\t\tviewSelection.startColumn === 1 ? 0 : startDomPosition.charIndex + 1,\n\t\t\tendNode.firstChild,\n\t\t\tviewSelection.endColumn === 1 ? 0 : endDomPosition.charIndex + 1\n\t\t);\n\t}\n\n\tprivate _getScreenReaderContentLineIntervals(primarySelection: Selection): RichScreenReaderState {\n\t\treturn this._strategy.fromEditorSelection(this._context.viewModel, primarySelection, this._accessibilityPageSize);\n\t}\n\n\tprivate _getEditorSelectionFromDomRange(): Selection | undefined {\n\t\tif (!this._renderedLines) {\n\t\t\treturn;\n\t\t}\n\t\tconst selection = getActiveWindow().document.getSelection();\n\t\tif (!selection) {\n\t\t\treturn;\n\t\t}\n\t\tconst rangeCount = selection.rangeCount;\n\t\tif (rangeCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = selection.getRangeAt(0);\n\t\tconst startContainer = range.startContainer;\n\t\tconst endContainer = range.endContainer;\n\t\tconst startSpanElement = startContainer.parentElement;\n\t\tconst endSpanElement = endContainer.parentElement;\n\t\tif (!startSpanElement || !isHTMLElement(startSpanElement) || !endSpanElement || !isHTMLElement(endSpanElement)) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineDomNode = startSpanElement.parentElement?.parentElement;\n\t\tconst endLineDomNode = endSpanElement.parentElement?.parentElement;\n\t\tif (!startLineDomNode || !endLineDomNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineNumberAttribute = startLineDomNode.getAttribute(LINE_NUMBER_ATTRIBUTE);\n\t\tconst endLineNumberAttribute = endLineDomNode.getAttribute(LINE_NUMBER_ATTRIBUTE);\n\t\tif (!startLineNumberAttribute || !endLineNumberAttribute) {\n\t\t\treturn;\n\t\t}\n\t\tconst startLineNumber = parseInt(startLineNumberAttribute);\n\t\tconst endLineNumber = parseInt(endLineNumberAttribute);\n\t\tconst startMapping = this._renderedLines.get(startLineNumber)?.characterMapping;\n\t\tconst endMapping = this._renderedLines.get(endLineNumber)?.characterMapping;\n\t\tif (!startMapping || !endMapping) {\n\t\t\treturn;\n\t\t}\n\t\tconst startColumn = getColumnOfNodeOffset(startMapping, startSpanElement, range.startOffset);\n\t\tconst endColumn = getColumnOfNodeOffset(endMapping, endSpanElement, range.endOffset);\n\t\tif (selection.direction === 'forward') {\n\t\t\treturn new Selection(\n\t\t\t\tstartLineNumber,\n\t\t\t\tstartColumn,\n\t\t\t\tendLineNumber,\n\t\t\t\tendColumn\n\t\t\t);\n\t\t} else {\n\t\t\treturn new Selection(\n\t\t\t\tendLineNumber,\n\t\t\t\tendColumn,\n\t\t\t\tstartLineNumber,\n\t\t\t\tstartColumn\n\t\t\t);\n\t\t}\n\t}\n}\n\nclass RichRenderedScreenReaderLine {\n\tconstructor(\n\t\tpublic readonly domNode: HTMLDivElement,\n\t\tpublic readonly characterMapping: CharacterMapping\n\t) { }\n}\n\nclass LineInterval {\n\tconstructor(\n\t\tpublic readonly startLine: number,\n\t\tpublic readonly endLine: number\n\t) { }\n}\n\nclass RichScreenReaderState {\n\n\tconstructor(public readonly intervals: LineInterval[]) { }\n\n\tequals(other: RichScreenReaderState): boolean {\n\t\tif (this.intervals.length !== other.intervals.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.intervals.length; i++) {\n\t\t\tif (this.intervals[i].startLine !== other.intervals[i].startLine || this.intervals[i].endLine !== other.intervals[i].endLine) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nclass RichPagedScreenReaderStrategy implements IPagedScreenReaderStrategy<RichScreenReaderState> {\n\n\tconstructor() { }\n\n\tprivate _getPageOfLine(lineNumber: number, linesPerPage: number): number {\n\t\treturn Math.floor((lineNumber - 1) / linesPerPage);\n\t}\n\n\tprivate _getRangeForPage(context: ISimpleModel, page: number, linesPerPage: number): LineInterval {\n\t\tconst offset = page * linesPerPage;\n\t\tconst startLineNumber = offset + 1;\n\t\tconst endLineNumber = Math.min(offset + linesPerPage, context.getLineCount());\n\t\treturn new LineInterval(startLineNumber, endLineNumber);\n\t}\n\n\tpublic fromEditorSelection(context: ISimpleModel, viewSelection: Selection, linesPerPage: number): RichScreenReaderState {\n\t\tconst selectionStartPage = this._getPageOfLine(viewSelection.startLineNumber, linesPerPage);\n\t\tconst selectionStartPageRange = this._getRangeForPage(context, selectionStartPage, linesPerPage);\n\t\tconst selectionEndPage = this._getPageOfLine(viewSelection.endLineNumber, linesPerPage);\n\t\tconst selectionEndPageRange = this._getRangeForPage(context, selectionEndPage, linesPerPage);\n\t\tconst lineIntervals: LineInterval[] = [{ startLine: selectionStartPageRange.startLine, endLine: selectionStartPageRange.endLine }];\n\t\tif (selectionStartPage + 1 < selectionEndPage) {\n\t\t\tlineIntervals.push({ startLine: selectionEndPageRange.startLine, endLine: selectionEndPageRange.endLine });\n\t\t}\n\t\treturn new RichScreenReaderState(lineIntervals);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4158, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/screenReaderContentSimple.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/screenReaderContentSimple.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/screenReaderContentSimple.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { AccessibilitySupport, IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { EditorOption, IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { EndOfLineSequence } from '../../../../common/model.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { SimplePagedScreenReaderStrategy, ISimpleScreenReaderContentState } from '../screenReaderUtils.js';\nimport { PositionOffsetTransformer } from '../../../../common/core/text/positionToOffset.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { IScreenReaderContent } from './screenReaderUtils.js';\n\nexport class SimpleScreenReaderContent extends Disposable implements IScreenReaderContent {\n\n\tprivate readonly _selectionChangeListener = this._register(new MutableDisposable());\n\n\tprivate _accessibilityPageSize: number = 1;\n\tprivate _ignoreSelectionChangeTime: number = 0;\n\n\tprivate _state: ISimpleScreenReaderContentState | undefined;\n\tprivate _strategy: SimplePagedScreenReaderStrategy = new SimplePagedScreenReaderStrategy();\n\n\tconstructor(\n\t\tprivate readonly _domNode: FastDomNode<HTMLElement>,\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.onConfigurationChanged(this._context.configuration.options);\n\t}\n\n\tpublic updateScreenReaderContent(primarySelection: Selection): void {\n\t\tconst domNode = this._domNode.domNode;\n\t\tconst focusedElement = getActiveWindow().document.activeElement;\n\t\tif (!focusedElement || focusedElement !== domNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\tif (isScreenReaderOptimized) {\n\t\t\tthis._state = this._getScreenReaderContentState(primarySelection);\n\t\t\tif (domNode.textContent !== this._state.value) {\n\t\t\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\t\t\tdomNode.textContent = this._state.value;\n\t\t\t}\n\t\t\tconst selection = getActiveWindow().document.getSelection();\n\t\t\tif (!selection) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst data = this._getScreenReaderRange(this._state.selectionStart, this._state.selectionEnd);\n\t\t\tif (!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._setIgnoreSelectionChangeTime('setRange');\n\t\t\tselection.setBaseAndExtent(\n\t\t\t\tdata.anchorNode,\n\t\t\t\tdata.anchorOffset,\n\t\t\t\tdata.focusNode,\n\t\t\t\tdata.focusOffset\n\t\t\t);\n\t\t} else {\n\t\t\tthis._state = undefined;\n\t\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\t\tthis._domNode.domNode.textContent = '';\n\t\t}\n\t}\n\n\tpublic updateScrollTop(primarySelection: Selection): void {\n\t\tif (!this._state) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewLayout = this._context.viewModel.viewLayout;\n\t\tconst stateStartLineNumber = this._state.startPositionWithinEditor.lineNumber;\n\t\tconst verticalOffsetOfStateStartLineNumber = viewLayout.getVerticalOffsetForLineNumber(stateStartLineNumber);\n\t\tconst verticalOffsetOfPositionLineNumber = viewLayout.getVerticalOffsetForLineNumber(primarySelection.positionLineNumber);\n\t\tthis._domNode.domNode.scrollTop = verticalOffsetOfPositionLineNumber - verticalOffsetOfStateStartLineNumber;\n\t}\n\n\tpublic onFocusChange(newFocusValue: boolean): void {\n\t\tif (newFocusValue) {\n\t\t\tthis._selectionChangeListener.value = this._setSelectionChangeListener();\n\t\t} else {\n\t\t\tthis._selectionChangeListener.value = undefined;\n\t\t}\n\t}\n\n\tpublic onConfigurationChanged(options: IComputedEditorOptions): void {\n\t\tthis._accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t}\n\n\tpublic onWillCut(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onCut');\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onWillPaste');\n\t}\n\n\t// --- private methods\n\n\tpublic _setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tprivate _setSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display or NVDA for example, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event and needs to be reflected within the editor.\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn addDisposableListener(this._domNode.domNode.ownerDocument, 'selectionchange', () => {\n\t\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\t\tif (!this._state || !isScreenReaderOptimized || !IME.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst activeElement = getActiveWindow().document.activeElement;\n\t\t\tconst isFocused = activeElement === this._domNode.domNode;\n\t\t\tif (!isFocused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selection = getActiveWindow().document.getSelection();\n\t\t\tif (!selection) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rangeCount = selection.rangeCount;\n\t\t\tif (rangeCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst range = selection.getRangeAt(0);\n\n\t\t\tconst now = Date.now();\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst delta2 = now - this._ignoreSelectionChangeTime;\n\t\t\tthis._ignoreSelectionChangeTime = 0;\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the hidden div\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._viewController.setSelection(this._getEditorSelectionFromDomRange(this._context, this._state, selection.direction, range));\n\t\t});\n\t}\n\n\tprivate _getScreenReaderContentState(primarySelection: Selection): ISimpleScreenReaderContentState {\n\t\tconst state = this._strategy.fromEditorSelection(\n\t\t\tthis._context.viewModel,\n\t\t\tprimarySelection,\n\t\t\tthis._accessibilityPageSize,\n\t\t\tthis._accessibilityService.getAccessibilitySupport() === AccessibilitySupport.Unknown\n\t\t);\n\t\tconst endPosition = this._context.viewModel.model.getPositionAt(Infinity);\n\t\tlet value = state.value;\n\t\tif (endPosition.column === 1 && primarySelection.getEndPosition().equals(endPosition)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\t\tstate.value = value;\n\t\treturn state;\n\t}\n\n\tprivate _getScreenReaderRange(selectionOffsetStart: number, selectionOffsetEnd: number): { anchorNode: Node; anchorOffset: number; focusNode: Node; focusOffset: number } | undefined {\n\t\tconst textContent = this._domNode.domNode.firstChild;\n\t\tif (!textContent) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = new globalThis.Range();\n\t\trange.setStart(textContent, selectionOffsetStart);\n\t\trange.setEnd(textContent, selectionOffsetEnd);\n\t\treturn {\n\t\t\tanchorNode: textContent,\n\t\t\tanchorOffset: selectionOffsetStart,\n\t\t\tfocusNode: textContent,\n\t\t\tfocusOffset: selectionOffsetEnd\n\t\t};\n\t}\n\n\tprivate _getEditorSelectionFromDomRange(context: ViewContext, state: ISimpleScreenReaderContentState, direction: string, range: globalThis.Range): Selection {\n\t\tconst viewModel = context.viewModel;\n\t\tconst model = viewModel.model;\n\t\tconst coordinatesConverter = viewModel.coordinatesConverter;\n\t\tconst modelScreenReaderContentStartPositionWithinEditor = coordinatesConverter.convertViewPositionToModelPosition(state.startPositionWithinEditor);\n\t\tconst offsetOfStartOfScreenReaderContent = model.getOffsetAt(modelScreenReaderContentStartPositionWithinEditor);\n\t\tlet offsetOfSelectionStart = range.startOffset + offsetOfStartOfScreenReaderContent;\n\t\tlet offsetOfSelectionEnd = range.endOffset + offsetOfStartOfScreenReaderContent;\n\t\tconst modelUsesCRLF = model.getEndOfLineSequence() === EndOfLineSequence.CRLF;\n\t\tif (modelUsesCRLF) {\n\t\t\tconst screenReaderContentText = state.value;\n\t\t\tconst offsetTransformer = new PositionOffsetTransformer(screenReaderContentText);\n\t\t\tconst positionOfStartWithinText = offsetTransformer.getPosition(range.startOffset);\n\t\t\tconst positionOfEndWithinText = offsetTransformer.getPosition(range.endOffset);\n\t\t\toffsetOfSelectionStart += positionOfStartWithinText.lineNumber - 1;\n\t\t\toffsetOfSelectionEnd += positionOfEndWithinText.lineNumber - 1;\n\t\t}\n\t\tconst positionOfSelectionStart = model.getPositionAt(offsetOfSelectionStart);\n\t\tconst positionOfSelectionEnd = model.getPositionAt(offsetOfSelectionEnd);\n\t\tconst selectionStart = direction === 'forward' ? positionOfSelectionStart : positionOfSelectionEnd;\n\t\tconst selectionEnd = direction === 'forward' ? positionOfSelectionEnd : positionOfSelectionStart;\n\t\treturn Selection.fromPositions(selectionStart, selectionEnd);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener, getActiveWindow } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { AccessibilitySupport, IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { EditorOption, IComputedEditorOptions } from '../../../../common/config/editorOptions.js';\nimport { EndOfLineSequence } from '../../../../common/model.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { SimplePagedScreenReaderStrategy, ISimpleScreenReaderContentState } from '../screenReaderUtils.js';\nimport { PositionOffsetTransformer } from '../../../../common/core/text/positionToOffset.js';\nimport { Disposable, IDisposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { IScreenReaderContent } from './screenReaderUtils.js';\n\nexport class SimpleScreenReaderContent extends Disposable implements IScreenReaderContent {\n\n\tprivate readonly _selectionChangeListener = this._register(new MutableDisposable());\n\n\tprivate _accessibilityPageSize: number = 1;\n\tprivate _ignoreSelectionChangeTime: number = 0;\n\n\tprivate _state: ISimpleScreenReaderContentState | undefined;\n\tprivate _strategy: SimplePagedScreenReaderStrategy = new SimplePagedScreenReaderStrategy();\n\n\tconstructor(\n\t\tprivate readonly _domNode: FastDomNode<HTMLElement>,\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis.onConfigurationChanged(this._context.configuration.options);\n\t}\n\n\tpublic updateScreenReaderContent(primarySelection: Selection): void {\n\t\tconst domNode = this._domNode.domNode;\n\t\tconst focusedElement = getActiveWindow().document.activeElement;\n\t\tif (!focusedElement || focusedElement !== domNode) {\n\t\t\treturn;\n\t\t}\n\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\tif (isScreenReaderOptimized) {\n\t\t\tthis._state = this._getScreenReaderContentState(primarySelection);\n\t\t\tif (domNode.textContent !== this._state.value) {\n\t\t\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\t\t\tdomNode.textContent = this._state.value;\n\t\t\t}\n\t\t\tconst selection = getActiveWindow().document.getSelection();\n\t\t\tif (!selection) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst data = this._getScreenReaderRange(this._state.selectionStart, this._state.selectionEnd);\n\t\t\tif (!data) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._setIgnoreSelectionChangeTime('setRange');\n\t\t\tselection.setBaseAndExtent(\n\t\t\t\tdata.anchorNode,\n\t\t\t\tdata.anchorOffset,\n\t\t\t\tdata.focusNode,\n\t\t\t\tdata.focusOffset\n\t\t\t);\n\t\t} else {\n\t\t\tthis._state = undefined;\n\t\t\tthis._setIgnoreSelectionChangeTime('setValue');\n\t\t\tthis._domNode.domNode.textContent = '';\n\t\t}\n\t}\n\n\tpublic updateScrollTop(primarySelection: Selection): void {\n\t\tif (!this._state) {\n\t\t\treturn;\n\t\t}\n\t\tconst viewLayout = this._context.viewModel.viewLayout;\n\t\tconst stateStartLineNumber = this._state.startPositionWithinEditor.lineNumber;\n\t\tconst verticalOffsetOfStateStartLineNumber = viewLayout.getVerticalOffsetForLineNumber(stateStartLineNumber);\n\t\tconst verticalOffsetOfPositionLineNumber = viewLayout.getVerticalOffsetForLineNumber(primarySelection.positionLineNumber);\n\t\tthis._domNode.domNode.scrollTop = verticalOffsetOfPositionLineNumber - verticalOffsetOfStateStartLineNumber;\n\t}\n\n\tpublic onFocusChange(newFocusValue: boolean): void {\n\t\tif (newFocusValue) {\n\t\t\tthis._selectionChangeListener.value = this._setSelectionChangeListener();\n\t\t} else {\n\t\t\tthis._selectionChangeListener.value = undefined;\n\t\t}\n\t}\n\n\tpublic onConfigurationChanged(options: IComputedEditorOptions): void {\n\t\tthis._accessibilityPageSize = options.get(EditorOption.accessibilityPageSize);\n\t}\n\n\tpublic onWillCut(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onCut');\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis._setIgnoreSelectionChangeTime('onWillPaste');\n\t}\n\n\t// --- private methods\n\n\tpublic _setIgnoreSelectionChangeTime(reason: string): void {\n\t\tthis._ignoreSelectionChangeTime = Date.now();\n\t}\n\n\tprivate _setSelectionChangeListener(): IDisposable {\n\t\t// See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n\t\t// When using a Braille display or NVDA for example, it is possible for users to reposition the\n\t\t// system caret. This is reflected in Chrome as a `selectionchange` event and needs to be reflected within the editor.\n\n\t\t// `selectionchange` events often come multiple times for a single logical change\n\t\t// so throttle multiple `selectionchange` events that burst in a short period of time.\n\t\tlet previousSelectionChangeEventTime = 0;\n\t\treturn addDisposableListener(this._domNode.domNode.ownerDocument, 'selectionchange', () => {\n\t\t\tconst isScreenReaderOptimized = this._accessibilityService.isScreenReaderOptimized();\n\t\t\tif (!this._state || !isScreenReaderOptimized || !IME.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst activeElement = getActiveWindow().document.activeElement;\n\t\t\tconst isFocused = activeElement === this._domNode.domNode;\n\t\t\tif (!isFocused) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst selection = getActiveWindow().document.getSelection();\n\t\t\tif (!selection) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst rangeCount = selection.rangeCount;\n\t\t\tif (rangeCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst range = selection.getRangeAt(0);\n\n\t\t\tconst now = Date.now();\n\t\t\tconst delta1 = now - previousSelectionChangeEventTime;\n\t\t\tpreviousSelectionChangeEventTime = now;\n\t\t\tif (delta1 < 5) {\n\t\t\t\t// received another `selectionchange` event within 5ms of the previous `selectionchange` event\n\t\t\t\t// => ignore it\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst delta2 = now - this._ignoreSelectionChangeTime;\n\t\t\tthis._ignoreSelectionChangeTime = 0;\n\t\t\tif (delta2 < 100) {\n\t\t\t\t// received a `selectionchange` event within 100ms since we touched the hidden div\n\t\t\t\t// => ignore it, since we caused it\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._viewController.setSelection(this._getEditorSelectionFromDomRange(this._context, this._state, selection.direction, range));\n\t\t});\n\t}\n\n\tprivate _getScreenReaderContentState(primarySelection: Selection): ISimpleScreenReaderContentState {\n\t\tconst state = this._strategy.fromEditorSelection(\n\t\t\tthis._context.viewModel,\n\t\t\tprimarySelection,\n\t\t\tthis._accessibilityPageSize,\n\t\t\tthis._accessibilityService.getAccessibilitySupport() === AccessibilitySupport.Unknown\n\t\t);\n\t\tconst endPosition = this._context.viewModel.model.getPositionAt(Infinity);\n\t\tlet value = state.value;\n\t\tif (endPosition.column === 1 && primarySelection.getEndPosition().equals(endPosition)) {\n\t\t\tvalue += '\\n';\n\t\t}\n\t\tstate.value = value;\n\t\treturn state;\n\t}\n\n\tprivate _getScreenReaderRange(selectionOffsetStart: number, selectionOffsetEnd: number): { anchorNode: Node; anchorOffset: number; focusNode: Node; focusOffset: number } | undefined {\n\t\tconst textContent = this._domNode.domNode.firstChild;\n\t\tif (!textContent) {\n\t\t\treturn;\n\t\t}\n\t\tconst range = new globalThis.Range();\n\t\trange.setStart(textContent, selectionOffsetStart);\n\t\trange.setEnd(textContent, selectionOffsetEnd);\n\t\treturn {\n\t\t\tanchorNode: textContent,\n\t\t\tanchorOffset: selectionOffsetStart,\n\t\t\tfocusNode: textContent,\n\t\t\tfocusOffset: selectionOffsetEnd\n\t\t};\n\t}\n\n\tprivate _getEditorSelectionFromDomRange(context: ViewContext, state: ISimpleScreenReaderContentState, direction: string, range: globalThis.Range): Selection {\n\t\tconst viewModel = context.viewModel;\n\t\tconst model = viewModel.model;\n\t\tconst coordinatesConverter = viewModel.coordinatesConverter;\n\t\tconst modelScreenReaderContentStartPositionWithinEditor = coordinatesConverter.convertViewPositionToModelPosition(state.startPositionWithinEditor);\n\t\tconst offsetOfStartOfScreenReaderContent = model.getOffsetAt(modelScreenReaderContentStartPositionWithinEditor);\n\t\tlet offsetOfSelectionStart = range.startOffset + offsetOfStartOfScreenReaderContent;\n\t\tlet offsetOfSelectionEnd = range.endOffset + offsetOfStartOfScreenReaderContent;\n\t\tconst modelUsesCRLF = model.getEndOfLineSequence() === EndOfLineSequence.CRLF;\n\t\tif (modelUsesCRLF) {\n\t\t\tconst screenReaderContentText = state.value;\n\t\t\tconst offsetTransformer = new PositionOffsetTransformer(screenReaderContentText);\n\t\t\tconst positionOfStartWithinText = offsetTransformer.getPosition(range.startOffset);\n\t\t\tconst positionOfEndWithinText = offsetTransformer.getPosition(range.endOffset);\n\t\t\toffsetOfSelectionStart += positionOfStartWithinText.lineNumber - 1;\n\t\t\toffsetOfSelectionEnd += positionOfEndWithinText.lineNumber - 1;\n\t\t}\n\t\tconst positionOfSelectionStart = model.getPositionAt(offsetOfSelectionStart);\n\t\tconst positionOfSelectionEnd = model.getPositionAt(offsetOfSelectionEnd);\n\t\tconst selectionStart = direction === 'forward' ? positionOfSelectionStart : positionOfSelectionEnd;\n\t\tconst selectionEnd = direction === 'forward' ? positionOfSelectionEnd : positionOfSelectionStart;\n\t\treturn Selection.fromPositions(selectionStart, selectionEnd);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4365, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/screenReaderSupport.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/screenReaderSupport.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { Disposable, MutableDisposable } from '../../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../../nls.js';\nimport { IAccessibilityService } from '../../../../../platform/accessibility/common/accessibility.js';\nimport { IKeybindingService } from '../../../../../platform/keybinding/common/keybinding.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { FontInfo } from '../../../../common/config/fontInfo.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { ViewConfigurationChangedEvent, ViewCursorStateChangedEvent } from '../../../../common/viewEvents.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { applyFontInfo } from '../../../config/domFontInfo.js';\nimport { IEditorAriaOptions } from '../../../editorBrowser.js';\nimport { RestrictedRenderingContext, RenderingContext, HorizontalPosition } from '../../../view/renderingContext.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { ariaLabelForScreenReaderContent } from '../screenReaderUtils.js';\nimport { RichScreenReaderContent } from './screenReaderContentRich.js';\nimport { SimpleScreenReaderContent } from './screenReaderContentSimple.js';\nimport { IScreenReaderContent } from './screenReaderUtils.js';\n\nexport class ScreenReaderSupport extends Disposable {\n\n\t// Configuration values\n\tprivate _contentLeft: number = 1;\n\tprivate _contentWidth: number = 1;\n\tprivate _contentHeight: number = 1;\n\tprivate _divWidth: number = 1;\n\tprivate _fontInfo!: FontInfo;\n\tprivate _renderRichContent: boolean | undefined;\n\n\tprivate _primarySelection: Selection = new Selection(1, 1, 1, 1);\n\tprivate _primaryCursorVisibleRange: HorizontalPosition | null = null;\n\tprivate readonly _state: MutableDisposable<IScreenReaderContent>;\n\n\tconstructor(\n\t\tprivate readonly _domNode: FastDomNode<HTMLElement>,\n\t\tprivate readonly _context: ViewContext,\n\t\tprivate readonly _viewController: ViewController,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IAccessibilityService private readonly _accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis._state = this._register(new MutableDisposable<IScreenReaderContent>());\n\t\tthis._instantiateScreenReaderContent();\n\t\tthis._updateConfigurationSettings();\n\t\tthis._updateDomAttributes();\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis._state.value?.onWillPaste();\n\t}\n\n\tpublic onWillCut(): void {\n\t\tthis._state.value?.onWillCut();\n\t}\n\n\tpublic handleFocusChange(newFocusValue: boolean): void {\n\t\tthis._state.value?.onFocusChange(newFocusValue);\n\t\tthis.writeScreenReaderContent();\n\t}\n\n\tpublic onConfigurationChanged(e: ViewConfigurationChangedEvent): void {\n\t\tthis._instantiateScreenReaderContent();\n\t\tthis._updateConfigurationSettings();\n\t\tthis._updateDomAttributes();\n\t\tif (e.hasChanged(EditorOption.accessibilitySupport)) {\n\t\t\tthis.writeScreenReaderContent();\n\t\t}\n\t}\n\n\tprivate _instantiateScreenReaderContent(): void {\n\t\tconst renderRichContent = this._context.configuration.options.get(EditorOption.renderRichScreenReaderContent);\n\t\tif (this._renderRichContent !== renderRichContent) {\n\t\t\tthis._renderRichContent = renderRichContent;\n\t\t\tthis._state.value = this._createScreenReaderContent(renderRichContent);\n\t\t}\n\t}\n\n\tprivate _createScreenReaderContent(renderRichContent: boolean): IScreenReaderContent {\n\t\tif (renderRichContent) {\n\t\t\treturn new RichScreenReaderContent(this._domNode, this._context, this._viewController, this._accessibilityService);\n\t\t} else {\n\t\t\treturn new SimpleScreenReaderContent(this._domNode, this._context, this._viewController, this._accessibilityService);\n\t\t}\n\t}\n\n\tprivate _updateConfigurationSettings(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst layoutInfo = options.get(EditorOption.layoutInfo);\n\t\tconst wrappingColumn = layoutInfo.wrappingColumn;\n\t\tthis._contentLeft = layoutInfo.contentLeft;\n\t\tthis._contentWidth = layoutInfo.contentWidth;\n\t\tthis._contentHeight = layoutInfo.height;\n\t\tthis._fontInfo = options.get(EditorOption.fontInfo);\n\t\tthis._divWidth = Math.round(wrappingColumn * this._fontInfo.typicalHalfwidthCharacterWidth);\n\t\tthis._state.value?.onConfigurationChanged(options);\n\t}\n\n\tprivate _updateDomAttributes(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis._domNode.domNode.setAttribute('role', 'textbox');\n\t\tthis._domNode.domNode.setAttribute('aria-required', options.get(EditorOption.ariaRequired) ? 'true' : 'false');\n\t\tthis._domNode.domNode.setAttribute('aria-multiline', 'true');\n\t\tthis._domNode.domNode.setAttribute('aria-autocomplete', options.get(EditorOption.readOnly) ? 'none' : 'both');\n\t\tthis._domNode.domNode.setAttribute('aria-roledescription', localize('editor', \"editor\"));\n\t\tthis._domNode.domNode.setAttribute('aria-label', ariaLabelForScreenReaderContent(options, this._keybindingService));\n\t\tconst tabSize = this._context.viewModel.model.getOptions().tabSize;\n\t\tconst spaceWidth = options.get(EditorOption.fontInfo).spaceWidth;\n\t\tthis._domNode.domNode.style.tabSize = `${tabSize * spaceWidth}px`;\n\t\tconst wordWrapOverride2 = options.get(EditorOption.wordWrapOverride2);\n\t\tconst wordWrapOverride1 = (wordWrapOverride2 === 'inherit' ? options.get(EditorOption.wordWrapOverride1) : wordWrapOverride2);\n\t\tconst wordWrap = (wordWrapOverride1 === 'inherit' ? options.get(EditorOption.wordWrap) : wordWrapOverride1);\n\t\tthis._domNode.domNode.style.textWrap = wordWrap === 'off' ? 'nowrap' : 'wrap';\n\t}\n\n\tpublic onCursorStateChanged(e: ViewCursorStateChangedEvent): void {\n\t\tthis._primarySelection = e.selections[0] ?? new Selection(1, 1, 1, 1);\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis.writeScreenReaderContent();\n\t\tthis._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primarySelection.getPosition());\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tif (!this._primaryCursorVisibleRange) {\n\t\t\t// The primary cursor is outside the viewport => place textarea to the top left\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorScrollLeft = this._context.viewLayout.getCurrentScrollLeft();\n\t\tconst left = this._contentLeft + this._primaryCursorVisibleRange.left - editorScrollLeft;\n\t\tif (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorScrollTop = this._context.viewLayout.getCurrentScrollTop();\n\t\tconst positionLineNumber = this._primarySelection.positionLineNumber;\n\t\tconst top = this._context.viewLayout.getVerticalOffsetForLineNumber(positionLineNumber) - editorScrollTop;\n\t\tif (top < 0 || top > this._contentHeight) {\n\t\t\t// cursor is outside the viewport\n\t\t\tthis._renderAtTopLeft();\n\t\t\treturn;\n\t\t}\n\n\t\t// The <div> where we render the screen reader content does not support variable line heights,\n\t\t// all the lines must have the same height. We use the line height of the cursor position as the\n\t\t// line height for all lines.\n\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(positionLineNumber);\n\t\tthis._doRender(top, this._contentLeft, this._divWidth, lineHeight);\n\t\tthis._state.value?.updateScrollTop(this._primarySelection);\n\t}\n\n\tprivate _renderAtTopLeft(): void {\n\t\tthis._doRender(0, 0, this._contentWidth, 1);\n\t}\n\n\tprivate _doRender(top: number, left: number, width: number, height: number): void {\n\t\t// For correct alignment of the screen reader content, we need to apply the correct font\n\t\tapplyFontInfo(this._domNode, this._fontInfo);\n\n\t\tthis._domNode.setTop(top);\n\t\tthis._domNode.setLeft(left);\n\t\tthis._domNode.setWidth(width);\n\t\tthis._domNode.setHeight(height);\n\t\tthis._domNode.setLineHeight(height);\n\t}\n\n\tpublic setAriaOptions(options: IEditorAriaOptions): void {\n\t\tif (options.activeDescendant) {\n\t\t\tthis._domNode.setAttribute('aria-haspopup', 'true');\n\t\t\tthis._domNode.setAttribute('aria-autocomplete', 'list');\n\t\t\tthis._domNode.setAttribute('aria-activedescendant', options.activeDescendant);\n\t\t} else {\n\t\t\tthis._domNode.setAttribute('aria-haspopup', 'false');\n\t\t\tthis._domNode.setAttribute('aria-autocomplete', 'both');\n\t\t\tthis._domNode.removeAttribute('aria-activedescendant');\n\t\t}\n\t\tif (options.role) {\n\t\t\tthis._domNode.setAttribute('role', options.role);\n\t\t}\n\t}\n\n\tpublic writeScreenReaderContent(): void {\n\t\tthis._state.value?.updateScreenReaderContent(this._primarySelection);\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAGhG,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAE,MAAM,yCAAyC,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AACtG,OAAO,EAAE,kBAAkB,EAAE,MAAM,yDAAyD,CAAC;AAG7F,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AAGjE,OAAO,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAI/D,OAAO,EAAE,+BAA+B,EAAE,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAE,uBAAuB,EAAE,MAAM,8BAA8B,CAAC;AACvE,OAAO,EAAE,yBAAyB,EAAE,MAAM,gCAAgC,CAAC;;;;;;;;;;;;;;;;;;;;;AAGpE,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,0LAAU;IAclD,YACkB,QAAkC,EAClC,QAAqB,EACrB,eAA+B,EAC5B,kBAAuD,EACpD,qBAA6D,CAAA;QAEpF,KAAK,EAAE,CAAC;QANS,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAA0B;QAClC,IAAA,CAAA,QAAQ,GAAR,QAAQ,CAAa;QACrB,IAAA,CAAA,eAAe,GAAf,eAAe,CAAgB;QACX,IAAA,CAAA,kBAAkB,GAAlB,kBAAkB,CAAoB;QACnC,IAAA,CAAA,qBAAqB,GAArB,qBAAqB,CAAuB;QAjBrF,uBAAuB;QACf,IAAA,CAAA,YAAY,GAAW,CAAC,CAAC;QACzB,IAAA,CAAA,aAAa,GAAW,CAAC,CAAC;QAC1B,IAAA,CAAA,cAAc,GAAW,CAAC,CAAC;QAC3B,IAAA,CAAA,SAAS,GAAW,CAAC,CAAC;QAItB,IAAA,CAAA,iBAAiB,GAAc,IAAI,mMAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,IAAA,CAAA,0BAA0B,GAA8B,IAAI,CAAC;QAWpE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,iMAAiB,EAAwB,CAAC,CAAC;QAC5E,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC7B,CAAC;IAEM,WAAW,GAAA;QACjB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,CAAC;IAClC,CAAC;IAEM,SAAS,GAAA;QACf,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC;IAChC,CAAC;IAEM,iBAAiB,CAAC,aAAsB,EAAA;QAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,aAAa,CAAC,CAAC;QAChD,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACjC,CAAC;IAEM,sBAAsB,CAAC,CAAgC,EAAA;QAC7D,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,CAAC,UAAU,CAAA,EAAA,qCAAA,GAAmC,GAAE,CAAC;YACrD,IAAI,CAAC,wBAAwB,EAAE,CAAC;QACjC,CAAC;IACF,CAAC;IAEO,+BAA+B,GAAA;QACtC,MAAM,iBAAiB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,8CAAA,GAA4C,CAAC;QAC9G,IAAI,IAAI,CAAC,kBAAkB,KAAK,iBAAiB,EAAE,CAAC;YACnD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;YAC5C,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,CAAC;QACxE,CAAC;IACF,CAAC;IAEO,0BAA0B,CAAC,iBAA0B,EAAA;QAC5D,IAAI,iBAAiB,EAAE,CAAC;YACvB,OAAO,IAAI,+PAAuB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACpH,CAAC,MAAM,CAAC;YACP,OAAO,IAAI,mQAAyB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACtH,CAAC;IACF,CAAC;IAEO,4BAA4B,GAAA;QACnC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QACpD,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,2BAAA,GAAyB,CAAC;QACxD,MAAM,cAAc,GAAG,UAAU,CAAC,cAAc,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,WAAW,CAAC;QAC3C,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,YAAY,CAAC;QAC7C,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,yBAAA,GAAuB,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC;QAC5F,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,sBAAsB,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;IAEO,oBAAoB,GAAA;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,GAAG,CAAA,EAAA,6BAAA,GAA2B,CAAC,CAAC,EAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/G,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,EAAE,OAAO,CAAC,GAAG,CAAA,IAAA,yBAAA,GAAuB,CAAC,CAAC,EAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC9G,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,sBAAsB,MAAE,gLAAQ,EAAC,EAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QACzF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,MAAE,uPAA+B,EAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACpH,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC;QACnE,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA,GAAA,yBAAA,GAAuB,EAAC,UAAU,CAAC;QACjE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,OAAO,GAAG,UAAU,CAAA,EAAA,CAAI,CAAC;QAClE,MAAM,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAA,IAAA,kCAAA,GAAgC,CAAC;QACtE,MAAM,iBAAiB,GAAG,AAAC,iBAAiB,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,kCAAA,GAAgC,CAAC,CAAC,EAAC,iBAAiB,CAAC,CAAC;QAC9H,MAAM,QAAQ,GAAG,AAAC,iBAAiB,KAAK,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAA,IAAA,yBAAA,GAAuB,CAAC,CAAC,EAAC,iBAAiB,CAAC,CAAC;QAC5G,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;IAC/E,CAAC;IAEM,oBAAoB,CAAC,CAA8B,EAAA;QACzD,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,mMAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,CAAC;IAEM,aAAa,CAAC,GAAqB,EAAA;QACzC,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,0BAA0B,GAAG,GAAG,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC;IACrG,CAAC;IAEM,MAAM,CAAC,GAA+B,EAAA;QAC5C,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,CAAC;YACtC,+EAA+E;YAC/E,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC;QACzE,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,GAAG,gBAAgB,CAAC;QACzF,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YAC/E,iCAAiC;YACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,mBAAmB,EAAE,CAAC;QACvE,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;QACrE,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,8BAA8B,CAAC,kBAAkB,CAAC,GAAG,eAAe,CAAC;QAC1G,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1C,iCAAiC;YACjC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO;QACR,CAAC;QAED,8FAA8F;QAC9F,gGAAgG;QAChG,6BAA6B;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,CAAC;QAC3F,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC;IAEO,gBAAgB,GAAA;QACvB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC;IAEO,SAAS,CAAC,GAAW,EAAE,IAAY,EAAE,KAAa,EAAE,MAAc,EAAA;QACzE,wFAAwF;YACxF,4MAAa,EAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE7C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,cAAc,CAAC,OAA2B,EAAA;QAChD,IAAI,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,uBAAuB,EAAE,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAC/E,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,uBAAuB,CAAC,CAAC;QACxD,CAAC;QACD,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,CAAC;IACF,CAAC;IAEM,wBAAwB,GAAA;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,yBAAyB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACtE,CAAC;CACD,CAAA;AAzKY,mBAAmB,GAAA,WAAA;IAkB7B,QAAA,GAAA,qNAAkB,CAAA;IAClB,QAAA,GAAA,8NAAqB,CAAA;GAnBX,mBAAmB,CAyK/B","debugId":null}},
    {"offset": {"line": 4555, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/editContextFactory.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/editContextFactory.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/editContextFactory.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nexport namespace EditContext {\n\n\t/**\n\t * Create an edit context.\n\t */\n\texport function create(window: Window, options?: EditContextInit): EditContext {\n\t\treturn new (window as any).EditContext(options);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nexport namespace EditContext {\n\n\t/**\n\t * Create an edit context.\n\t */\n\texport function create(window: Window, options?: EditContextInit): EditContext {\n\t\treturn new (window as any).EditContext(options);\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAG1F,IAAW,WAAW,CAQ3B;AARD,CAAA,SAAiB,WAAW;IAE3B;;OAEG,CACH,SAAgB,MAAM,CAAC,MAAc,EAAE,OAAyB;QAC/D,OAAO,IAAK,MAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAFe,YAAA,MAAM,GAAA,MAErB,CAAA;AACF,CAAC,EARgB,WAAW,IAAA,CAAX,WAAW,GAAA,CAAA,CAAA,GAQ3B","debugId":null}},
    {"offset": {"line": 4575, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/nativeEditContextRegistry.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/nativeEditContextRegistry.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/nativeEditContextRegistry.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { NativeEditContext } from './nativeEditContext.js';\n\nclass NativeEditContextRegistryImpl {\n\n\tprivate _nativeEditContextMapping: Map<string, NativeEditContext> = new Map();\n\n\tregister(ownerID: string, nativeEditContext: NativeEditContext): IDisposable {\n\t\tthis._nativeEditContextMapping.set(ownerID, nativeEditContext);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._nativeEditContextMapping.delete(ownerID);\n\t\t\t}\n\t\t};\n\t}\n\n\tget(ownerID: string): NativeEditContext | undefined {\n\t\treturn this._nativeEditContextMapping.get(ownerID);\n\t}\n}\n\nexport const NativeEditContextRegistry = new NativeEditContextRegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from '../../../../../base/common/lifecycle.js';\nimport { NativeEditContext } from './nativeEditContext.js';\n\nclass NativeEditContextRegistryImpl {\n\n\tprivate _nativeEditContextMapping: Map<string, NativeEditContext> = new Map();\n\n\tregister(ownerID: string, nativeEditContext: NativeEditContext): IDisposable {\n\t\tthis._nativeEditContextMapping.set(ownerID, nativeEditContext);\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._nativeEditContextMapping.delete(ownerID);\n\t\t\t}\n\t\t};\n\t}\n\n\tget(ownerID: string): NativeEditContext | undefined {\n\t\treturn this._nativeEditContextMapping.get(ownerID);\n\t}\n}\n\nexport const NativeEditContextRegistry = new NativeEditContextRegistryImpl();\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAKhG,MAAM,6BAA6B;IAAnC,aAAA;QAES,IAAA,CAAA,yBAAyB,GAAmC,IAAI,GAAG,EAAE,CAAC;IAc/E,CAAC;IAZA,QAAQ,CAAC,OAAe,EAAE,iBAAoC,EAAA;QAC7D,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;QAC/D,OAAO;YACN,OAAO,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAChD,CAAC;SACD,CAAC;IACH,CAAC;IAED,GAAG,CAAC,OAAe,EAAA;QAClB,OAAO,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;CACD;AAEM,MAAM,yBAAyB,GAAG,IAAI,6BAA6B,EAAE,CAAC","debugId":null}},
    {"offset": {"line": 4603, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/nativeEditContext.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/browser/controller/editContext/native/nativeEditContext.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/browser/controller/editContext/native/vs/editor/browser/controller/editContext/native/nativeEditContext.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './nativeEditContext.css';\nimport { isFirefox } from '../../../../../base/browser/browser.js';\nimport { addDisposableListener, getActiveElement, getWindow, getWindowId } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { StandardKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { EndOfLinePreference, IModelDeltaDecoration } from '../../../../common/model.js';\nimport { ViewConfigurationChangedEvent, ViewCursorStateChangedEvent, ViewDecorationsChangedEvent, ViewFlushedEvent, ViewLinesChangedEvent, ViewLinesDeletedEvent, ViewLinesInsertedEvent, ViewScrollChangedEvent, ViewZonesChangedEvent } from '../../../../common/viewEvents.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { RestrictedRenderingContext, RenderingContext } from '../../../view/renderingContext.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { ClipboardEventUtils, ClipboardStoredMetadata, getDataToCopy, InMemoryClipboardMetadataManager } from '../clipboardUtils.js';\nimport { AbstractEditContext } from '../editContext.js';\nimport { editContextAddDisposableListener, FocusTracker, ITypeData } from './nativeEditContextUtils.js';\nimport { ScreenReaderSupport } from './screenReaderSupport.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { IVisibleRangeProvider } from '../textArea/textAreaEditContext.js';\nimport { PositionOffsetTransformer } from '../../../../common/core/text/positionToOffset.js';\nimport { EditContext } from './editContextFactory.js';\nimport { NativeEditContextRegistry } from './nativeEditContextRegistry.js';\nimport { IEditorAriaOptions } from '../../../editorBrowser.js';\nimport { isHighSurrogate, isLowSurrogate } from '../../../../../base/common/strings.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { ILogService, LogLevel } from '../../../../../platform/log/common/log.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\n\n// Corresponds to classes in nativeEditContext.css\nenum CompositionClassName {\n\tNONE = 'edit-context-composition-none',\n\tSECONDARY = 'edit-context-composition-secondary',\n\tPRIMARY = 'edit-context-composition-primary',\n}\n\ninterface ITextUpdateEvent {\n\ttext: string;\n\tselectionStart: number;\n\tselectionEnd: number;\n\tupdateRangeStart: number;\n\tupdateRangeEnd: number;\n}\n\nexport class NativeEditContext extends AbstractEditContext {\n\n\t// Text area used to handle paste events\n\tpublic readonly domNode: FastDomNode<HTMLDivElement>;\n\tprivate readonly _imeTextArea: FastDomNode<HTMLTextAreaElement>;\n\tprivate readonly _editContext: EditContext;\n\tprivate readonly _screenReaderSupport: ScreenReaderSupport;\n\tprivate _previousEditContextSelection: OffsetRange = new OffsetRange(0, 0);\n\tprivate _editContextPrimarySelection: Selection = new Selection(1, 1, 1, 1);\n\n\t// Overflow guard container\n\tprivate _parent: HTMLElement | undefined;\n\tprivate _decorations: string[] = [];\n\tprivate _primarySelection: Selection = new Selection(1, 1, 1, 1);\n\n\n\tprivate _targetWindowId: number = -1;\n\tprivate _scrollTop: number = 0;\n\tprivate _scrollLeft: number = 0;\n\n\tprivate readonly _focusTracker: FocusTracker;\n\n\tconstructor(\n\t\townerID: string,\n\t\tcontext: ViewContext,\n\t\toverflowGuardContainer: FastDomNode<HTMLElement>,\n\t\tprivate readonly _viewController: ViewController,\n\t\tprivate readonly _visibleRangeProvider: IVisibleRangeProvider,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(context);\n\n\t\tthis.domNode = new FastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName(`native-edit-context`);\n\t\tthis._imeTextArea = new FastDomNode(document.createElement('textarea'));\n\t\tthis._imeTextArea.setClassName(`ime-text-area`);\n\t\tthis._imeTextArea.setAttribute('readonly', 'true');\n\t\tthis._imeTextArea.setAttribute('tabindex', '-1');\n\t\tthis._imeTextArea.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setAttribute('autocorrect', 'off');\n\t\tthis.domNode.setAttribute('autocapitalize', 'off');\n\t\tthis.domNode.setAttribute('autocomplete', 'off');\n\t\tthis.domNode.setAttribute('spellcheck', 'false');\n\n\t\tthis._updateDomAttributes();\n\n\t\toverflowGuardContainer.appendChild(this.domNode);\n\t\toverflowGuardContainer.appendChild(this._imeTextArea);\n\t\tthis._parent = overflowGuardContainer.domNode;\n\n\t\tthis._focusTracker = this._register(new FocusTracker(logService, this.domNode.domNode, (newFocusValue: boolean) => {\n\t\t\tlogService.trace('NativeEditContext#handleFocusChange : ', newFocusValue);\n\t\t\tthis._screenReaderSupport.handleFocusChange(newFocusValue);\n\t\t\tthis._context.viewModel.setHasFocus(newFocusValue);\n\t\t}));\n\n\t\tconst window = getWindow(this.domNode.domNode);\n\t\tthis._editContext = EditContext.create(window);\n\t\tthis.setEditContextOnDomNode();\n\n\t\tthis._screenReaderSupport = this._register(instantiationService.createInstance(ScreenReaderSupport, this.domNode, context, this._viewController));\n\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'copy', (e) => {\n\t\t\tthis.logService.trace('NativeEditContext#copy');\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t}));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'cut', (e) => {\n\t\t\tthis.logService.trace('NativeEditContext#cut');\n\t\t\t// Pretend here we touched the text area, as the `cut` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._screenReaderSupport.onWillCut();\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t\tthis.logService.trace('NativeEditContext#cut (before viewController.cut)');\n\t\t\tthis._viewController.cut();\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'keyup', (e) => this._onKeyUp(e)));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'keydown', async (e) => this._onKeyDown(e)));\n\t\tthis._register(addDisposableListener(this._imeTextArea.domNode, 'keyup', (e) => this._onKeyUp(e)));\n\t\tthis._register(addDisposableListener(this._imeTextArea.domNode, 'keydown', async (e) => this._onKeyDown(e)));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'beforeinput', async (e) => {\n\t\t\tif (e.inputType === 'insertParagraph' || e.inputType === 'insertLineBreak') {\n\t\t\t\tthis._onType(this._viewController, { text: '\\n', replacePrevCharCnt: 0, replaceNextCharCnt: 0, positionDelta: 0 });\n\t\t\t}\n\t\t}));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'paste', (e) => {\n\t\t\tthis.logService.trace('NativeEditContext#paste');\n\t\t\te.preventDefault();\n\t\t\tif (!e.clipboardData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\t\tthis.logService.trace('NativeEditContext#paste with id : ', metadata?.id, ' with text.length: ', text.length);\n\t\t\tif (!text) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmetadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\t\t\tlet pasteOnNewLine = false;\n\t\t\tlet multicursorText: string[] | null = null;\n\t\t\tlet mode: string | null = null;\n\t\t\tif (metadata) {\n\t\t\t\tconst options = this._context.configuration.options;\n\t\t\t\tconst emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\t\t\tpasteOnNewLine = emptySelectionClipboard && !!metadata.isFromEmptySelection;\n\t\t\t\tmulticursorText = typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null;\n\t\t\t\tmode = metadata.mode;\n\t\t\t}\n\t\t\tthis.logService.trace('NativeEditContext#paste (before viewController.paste)');\n\t\t\tthis._viewController.paste(text, pasteOnNewLine, multicursorText, mode);\n\t\t}));\n\n\t\t// Edit context events\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'textformatupdate', (e) => this._handleTextFormatUpdate(e)));\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'characterboundsupdate', (e) => this._updateCharacterBounds(e)));\n\t\tlet highSurrogateCharacter: string | undefined;\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'textupdate', (e) => {\n\t\t\tconst text = e.text;\n\t\t\tif (text.length === 1) {\n\t\t\t\tconst charCode = text.charCodeAt(0);\n\t\t\t\tif (isHighSurrogate(charCode)) {\n\t\t\t\t\thighSurrogateCharacter = text;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isLowSurrogate(charCode) && highSurrogateCharacter) {\n\t\t\t\t\tconst textUpdateEvent: ITextUpdateEvent = {\n\t\t\t\t\t\ttext: highSurrogateCharacter + text,\n\t\t\t\t\t\tselectionEnd: e.selectionEnd,\n\t\t\t\t\t\tselectionStart: e.selectionStart,\n\t\t\t\t\t\tupdateRangeStart: e.updateRangeStart - 1,\n\t\t\t\t\t\tupdateRangeEnd: e.updateRangeEnd - 1\n\t\t\t\t\t};\n\t\t\t\t\thighSurrogateCharacter = undefined;\n\t\t\t\t\tthis._emitTypeEvent(this._viewController, textUpdateEvent);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._emitTypeEvent(this._viewController, e);\n\t\t}));\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'compositionstart', (e) => {\n\t\t\tthis._updateEditContext();\n\t\t\t// Utlimately fires onDidCompositionStart() on the editor to notify for example suggest model of composition state\n\t\t\t// Updates the composition state of the cursor controller which determines behavior of typing with interceptors\n\t\t\tthis._viewController.compositionStart();\n\t\t\t// Emits ViewCompositionStartEvent which can be depended on by ViewEventHandlers\n\t\t\tthis._context.viewModel.onCompositionStart();\n\t\t}));\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'compositionend', (e) => {\n\t\t\tthis._updateEditContext();\n\t\t\t// Utlimately fires compositionEnd() on the editor to notify for example suggest model of composition state\n\t\t\t// Updates the composition state of the cursor controller which determines behavior of typing with interceptors\n\t\t\tthis._viewController.compositionEnd();\n\t\t\t// Emits ViewCompositionEndEvent which can be depended on by ViewEventHandlers\n\t\t\tthis._context.viewModel.onCompositionEnd();\n\t\t}));\n\t\tlet reenableTracking: boolean = false;\n\t\tthis._register(IME.onDidChange(() => {\n\t\t\tif (IME.enabled && reenableTracking) {\n\t\t\t\tthis._focusTracker.resume();\n\t\t\t\tthis.domNode.focus();\n\t\t\t\treenableTracking = false;\n\t\t\t}\n\t\t\tif (!IME.enabled && this.isFocused()) {\n\t\t\t\tthis._focusTracker.pause();\n\t\t\t\tthis._imeTextArea.focus();\n\t\t\t\treenableTracking = true;\n\t\t\t}\n\t\t}));\n\t\tthis._register(NativeEditContextRegistry.register(ownerID, this));\n\t}\n\n\t// --- Public methods ---\n\n\tpublic override dispose(): void {\n\t\t// Force blue the dom node so can write in pane with no native edit context after disposal\n\t\tthis.domNode.domNode.editContext = undefined;\n\t\tthis.domNode.domNode.blur();\n\t\tthis.domNode.domNode.remove();\n\t\tthis._imeTextArea.domNode.remove();\n\t\tsuper.dispose();\n\t}\n\n\tpublic setAriaOptions(options: IEditorAriaOptions): void {\n\t\tthis._screenReaderSupport.setAriaOptions(options);\n\t}\n\n\t/* Last rendered data needed for correct hit-testing and determining the mouse position.\n\t * Without this, the selection will blink as incorrect mouse position is calculated */\n\tpublic getLastRenderData(): Position | null {\n\t\treturn this._primarySelection.getPosition();\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._screenReaderSupport.prepareRender(ctx);\n\t\tthis._updateSelectionAndControlBounds(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._screenReaderSupport.render(ctx);\n\t}\n\n\tpublic override onCursorStateChanged(e: ViewCursorStateChangedEvent): boolean {\n\t\tthis._primarySelection = e.modelSelections[0] ?? new Selection(1, 1, 1, 1);\n\t\tthis._screenReaderSupport.onCursorStateChanged(e);\n\t\tthis._updateEditContext();\n\t\treturn true;\n\t}\n\n\tpublic override onConfigurationChanged(e: ViewConfigurationChangedEvent): boolean {\n\t\tthis._screenReaderSupport.onConfigurationChanged(e);\n\t\tthis._updateDomAttributes();\n\t\treturn true;\n\t}\n\n\tpublic override onDecorationsChanged(e: ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\n\tpublic override onFlushed(e: ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onLinesChanged(e: ViewLinesChangedEvent): boolean {\n\t\tthis._updateEditContextOnLineChange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n\t\treturn true;\n\t}\n\n\tpublic override onLinesDeleted(e: ViewLinesDeletedEvent): boolean {\n\t\tthis._updateEditContextOnLineChange(e.fromLineNumber, e.toLineNumber);\n\t\treturn true;\n\t}\n\n\tpublic override onLinesInserted(e: ViewLinesInsertedEvent): boolean {\n\t\tthis._updateEditContextOnLineChange(e.fromLineNumber, e.toLineNumber);\n\t\treturn true;\n\t}\n\n\tprivate _updateEditContextOnLineChange(fromLineNumber: number, toLineNumber: number): void {\n\t\tif (this._editContextPrimarySelection.endLineNumber < fromLineNumber || this._editContextPrimarySelection.startLineNumber > toLineNumber) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updateEditContext();\n\t}\n\n\tpublic override onScrollChanged(e: ViewScrollChangedEvent): boolean {\n\t\tthis._scrollLeft = e.scrollLeft;\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn true;\n\t}\n\n\tpublic override onZonesChanged(e: ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis.logService.trace('NativeEditContext#onWillPaste');\n\t\tthis._onWillPaste();\n\t}\n\n\tprivate _onWillPaste(): void {\n\t\tthis._screenReaderSupport.onWillPaste();\n\t}\n\n\tpublic onWillCopy(): void {\n\t\tthis.logService.trace('NativeEditContext#onWillCopy');\n\t\tthis.logService.trace('NativeEditContext#isFocused : ', this.domNode.domNode === getActiveElement());\n\t}\n\n\tpublic writeScreenReaderContent(): void {\n\t\tthis._screenReaderSupport.writeScreenReaderContent();\n\t}\n\n\tpublic isFocused(): boolean {\n\t\treturn this._focusTracker.isFocused;\n\t}\n\n\tpublic focus(): void {\n\t\tthis._focusTracker.focus();\n\n\t\t// If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tthis._focusTracker.refreshFocusState();\n\t}\n\n\t// TODO: added as a workaround fix for https://github.com/microsoft/vscode/issues/229825\n\t// When this issue will be fixed the following should be removed.\n\tpublic setEditContextOnDomNode(): void {\n\t\tconst targetWindow = getWindow(this.domNode.domNode);\n\t\tconst targetWindowId = getWindowId(targetWindow);\n\t\tif (this._targetWindowId !== targetWindowId) {\n\t\t\tthis.domNode.domNode.editContext = this._editContext;\n\t\t\tthis._targetWindowId = targetWindowId;\n\t\t}\n\t}\n\n\t// --- Private methods ---\n\n\tprivate _onKeyUp(e: KeyboardEvent) {\n\t\tthis._viewController.emitKeyUp(new StandardKeyboardEvent(e));\n\t}\n\n\tprivate _onKeyDown(e: KeyboardEvent) {\n\t\tconst standardKeyboardEvent = new StandardKeyboardEvent(e);\n\t\t// When the IME is visible, the keys, like arrow-left and arrow-right, should be used to navigate in the IME, and should not be propagated further\n\t\tif (standardKeyboardEvent.keyCode === KeyCode.KEY_IN_COMPOSITION) {\n\t\t\tstandardKeyboardEvent.stopPropagation();\n\t\t}\n\t\tthis._viewController.emitKeyDown(standardKeyboardEvent);\n\t}\n\n\tprivate _updateDomAttributes(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis.domNode.domNode.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\t}\n\n\tprivate _updateEditContext(): void {\n\t\tconst editContextState = this._getNewEditContextState();\n\t\tif (!editContextState) {\n\t\t\treturn;\n\t\t}\n\t\tthis._editContext.updateText(0, Number.MAX_SAFE_INTEGER, editContextState.text ?? ' ');\n\t\tthis._editContext.updateSelection(editContextState.selectionStartOffset, editContextState.selectionEndOffset);\n\t\tthis._editContextPrimarySelection = editContextState.editContextPrimarySelection;\n\t\tthis._previousEditContextSelection = new OffsetRange(editContextState.selectionStartOffset, editContextState.selectionEndOffset);\n\t}\n\n\tprivate _emitTypeEvent(viewController: ViewController, e: ITextUpdateEvent): void {\n\t\tif (!this._editContext) {\n\t\t\treturn;\n\t\t}\n\t\tconst selectionEndOffset = this._previousEditContextSelection.endExclusive;\n\t\tconst selectionStartOffset = this._previousEditContextSelection.start;\n\t\tthis._previousEditContextSelection = new OffsetRange(e.selectionStart, e.selectionEnd);\n\n\t\tlet replaceNextCharCnt = 0;\n\t\tlet replacePrevCharCnt = 0;\n\t\tif (e.updateRangeEnd > selectionEndOffset) {\n\t\t\treplaceNextCharCnt = e.updateRangeEnd - selectionEndOffset;\n\t\t}\n\t\tif (e.updateRangeStart < selectionStartOffset) {\n\t\t\treplacePrevCharCnt = selectionStartOffset - e.updateRangeStart;\n\t\t}\n\t\tlet text = '';\n\t\tif (selectionStartOffset < e.updateRangeStart) {\n\t\t\ttext += this._editContext.text.substring(selectionStartOffset, e.updateRangeStart);\n\t\t}\n\t\ttext += e.text;\n\t\tif (selectionEndOffset > e.updateRangeEnd) {\n\t\t\ttext += this._editContext.text.substring(e.updateRangeEnd, selectionEndOffset);\n\t\t}\n\t\tlet positionDelta = 0;\n\t\tif (e.selectionStart === e.selectionEnd && selectionStartOffset === selectionEndOffset) {\n\t\t\tpositionDelta = e.selectionStart - (e.updateRangeStart + e.text.length);\n\t\t}\n\t\tconst typeInput: ITypeData = {\n\t\t\ttext,\n\t\t\treplacePrevCharCnt,\n\t\t\treplaceNextCharCnt,\n\t\t\tpositionDelta\n\t\t};\n\t\tthis._onType(viewController, typeInput);\n\t}\n\n\tprivate _onType(viewController: ViewController, typeInput: ITypeData): void {\n\t\tif (typeInput.replacePrevCharCnt || typeInput.replaceNextCharCnt || typeInput.positionDelta) {\n\t\t\tviewController.compositionType(typeInput.text, typeInput.replacePrevCharCnt, typeInput.replaceNextCharCnt, typeInput.positionDelta);\n\t\t} else {\n\t\t\tviewController.type(typeInput.text);\n\t\t}\n\t}\n\n\tprivate _getNewEditContextState(): { text: string; selectionStartOffset: number; selectionEndOffset: number; editContextPrimarySelection: Selection } | undefined {\n\t\tconst editContextPrimarySelection = this._primarySelection;\n\t\tconst model = this._context.viewModel.model;\n\t\tif (!model.isValidRange(editContextPrimarySelection)) {\n\t\t\treturn;\n\t\t}\n\t\tconst primarySelectionStartLine = editContextPrimarySelection.startLineNumber;\n\t\tconst primarySelectionEndLine = editContextPrimarySelection.endLineNumber;\n\t\tconst endColumnOfEndLineNumber = model.getLineMaxColumn(primarySelectionEndLine);\n\t\tconst rangeOfText = new Range(primarySelectionStartLine, 1, primarySelectionEndLine, endColumnOfEndLineNumber);\n\t\tconst text = model.getValueInRange(rangeOfText, EndOfLinePreference.TextDefined);\n\t\tconst selectionStartOffset = editContextPrimarySelection.startColumn - 1;\n\t\tconst selectionEndOffset = text.length + editContextPrimarySelection.endColumn - endColumnOfEndLineNumber;\n\t\treturn {\n\t\t\ttext,\n\t\t\tselectionStartOffset,\n\t\t\tselectionEndOffset,\n\t\t\teditContextPrimarySelection\n\t\t};\n\t}\n\n\tprivate _editContextStartPosition(): Position {\n\t\treturn new Position(this._editContextPrimarySelection.startLineNumber, 1);\n\t}\n\n\tprivate _handleTextFormatUpdate(e: TextFormatUpdateEvent): void {\n\t\tif (!this._editContext) {\n\t\t\treturn;\n\t\t}\n\t\tconst formats = e.getTextFormats();\n\t\tconst editContextStartPosition = this._editContextStartPosition();\n\t\tconst decorations: IModelDeltaDecoration[] = [];\n\t\tformats.forEach(f => {\n\t\t\tconst textModel = this._context.viewModel.model;\n\t\t\tconst offsetOfEditContextText = textModel.getOffsetAt(editContextStartPosition);\n\t\t\tconst startPositionOfDecoration = textModel.getPositionAt(offsetOfEditContextText + f.rangeStart);\n\t\t\tconst endPositionOfDecoration = textModel.getPositionAt(offsetOfEditContextText + f.rangeEnd);\n\t\t\tconst decorationRange = Range.fromPositions(startPositionOfDecoration, endPositionOfDecoration);\n\t\t\tconst thickness = f.underlineThickness.toLowerCase();\n\t\t\tlet decorationClassName: string = CompositionClassName.NONE;\n\t\t\tswitch (thickness) {\n\t\t\t\tcase 'thin':\n\t\t\t\t\tdecorationClassName = CompositionClassName.SECONDARY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'thick':\n\t\t\t\t\tdecorationClassName = CompositionClassName.PRIMARY;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdecorations.push({\n\t\t\t\trange: decorationRange,\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: 'textFormatDecoration',\n\t\t\t\t\tinlineClassName: decorationClassName,\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis._decorations = this._context.viewModel.model.deltaDecorations(this._decorations, decorations);\n\t}\n\n\tprivate _updateSelectionAndControlBounds(ctx: RenderingContext) {\n\t\tif (!this._parent) {\n\t\t\treturn;\n\t\t}\n\t\tconst options = this._context.configuration.options;\n\t\tconst contentLeft = options.get(EditorOption.layoutInfo).contentLeft;\n\t\tconst parentBounds = this._parent.getBoundingClientRect();\n\t\tconst viewSelection = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(this._primarySelection);\n\t\tconst verticalOffsetStart = this._context.viewLayout.getVerticalOffsetForLineNumber(viewSelection.startLineNumber);\n\n\t\tconst top = parentBounds.top + verticalOffsetStart - this._scrollTop;\n\t\tconst verticalOffsetEnd = this._context.viewLayout.getVerticalOffsetAfterLineNumber(viewSelection.endLineNumber);\n\t\tconst height = verticalOffsetEnd - verticalOffsetStart;\n\t\tlet left = parentBounds.left + contentLeft - this._scrollLeft;\n\t\tlet width: number;\n\n\t\tif (this._primarySelection.isEmpty()) {\n\t\t\tconst linesVisibleRanges = ctx.visibleRangeForPosition(viewSelection.getStartPosition());\n\t\t\tif (linesVisibleRanges) {\n\t\t\t\tleft += linesVisibleRanges.left;\n\t\t\t}\n\t\t\twidth = 0;\n\t\t} else {\n\t\t\twidth = parentBounds.width - contentLeft;\n\t\t}\n\n\t\tconst selectionBounds = new DOMRect(left, top, width, height);\n\t\tthis._editContext.updateSelectionBounds(selectionBounds);\n\t\tthis._editContext.updateControlBounds(selectionBounds);\n\t}\n\n\tprivate _updateCharacterBounds(e: CharacterBoundsUpdateEvent): void {\n\t\tif (!this._parent) {\n\t\t\treturn;\n\t\t}\n\t\tconst options = this._context.configuration.options;\n\t\tconst typicalHalfWidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tconst contentLeft = options.get(EditorOption.layoutInfo).contentLeft;\n\t\tconst parentBounds = this._parent.getBoundingClientRect();\n\n\t\tconst characterBounds: DOMRect[] = [];\n\t\tconst offsetTransformer = new PositionOffsetTransformer(this._editContext.text);\n\t\tfor (let offset = e.rangeStart; offset < e.rangeEnd; offset++) {\n\t\t\tconst editContextStartPosition = offsetTransformer.getPosition(offset);\n\t\t\tconst textStartLineOffsetWithinEditor = this._editContextPrimarySelection.startLineNumber - 1;\n\t\t\tconst characterStartPosition = new Position(textStartLineOffsetWithinEditor + editContextStartPosition.lineNumber, editContextStartPosition.column);\n\t\t\tconst characterEndPosition = characterStartPosition.delta(0, 1);\n\t\t\tconst characterModelRange = Range.fromPositions(characterStartPosition, characterEndPosition);\n\t\t\tconst characterViewRange = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(characterModelRange);\n\t\t\tconst characterLinesVisibleRanges = this._visibleRangeProvider.linesVisibleRangesForRange(characterViewRange, true) ?? [];\n\t\t\tconst lineNumber = characterViewRange.startLineNumber;\n\t\t\tconst characterVerticalOffset = this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n\t\t\tconst top = parentBounds.top + characterVerticalOffset - this._scrollTop;\n\n\t\t\tlet left = 0;\n\t\t\tlet width = typicalHalfWidthCharacterWidth;\n\t\t\tif (characterLinesVisibleRanges.length > 0) {\n\t\t\t\tfor (const visibleRange of characterLinesVisibleRanges[0].ranges) {\n\t\t\t\t\tleft = visibleRange.left;\n\t\t\t\t\twidth = visibleRange.width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(lineNumber);\n\t\t\tcharacterBounds.push(new DOMRect(parentBounds.left + contentLeft + left - this._scrollLeft, top, width, lineHeight));\n\t\t}\n\t\tthis._editContext.updateCharacterBounds(e.rangeStart, characterBounds);\n\t}\n\n\tprivate _ensureClipboardGetsEditorSelection(e: ClipboardEvent): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tconst copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\t\tconst selections = this._context.viewModel.getCursorStates().map(cursorState => cursorState.modelState.selection);\n\t\tconst dataToCopy = getDataToCopy(this._context.viewModel, selections, emptySelectionClipboard, copyWithSyntaxHighlighting);\n\t\tlet id = undefined;\n\t\tif (this.logService.getLevel() === LogLevel.Trace) {\n\t\t\tid = generateUuid();\n\t\t}\n\t\tconst storedMetadata: ClipboardStoredMetadata = {\n\t\t\tversion: 1,\n\t\t\tid,\n\t\t\tisFromEmptySelection: dataToCopy.isFromEmptySelection,\n\t\t\tmulticursorText: dataToCopy.multicursorText,\n\t\t\tmode: dataToCopy.mode\n\t\t};\n\t\tInMemoryClipboardMetadataManager.INSTANCE.set(\n\t\t\t// When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n\t\t\t// Firefox pastes \"LINE\\n\", so let's work around this quirk\n\t\t\t(isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text),\n\t\t\tstoredMetadata\n\t\t);\n\t\te.preventDefault();\n\t\tif (e.clipboardData) {\n\t\t\tClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n\t\t}\n\t\tthis.logService.trace('NativeEditContext#_ensureClipboardGetsEditorSelectios with id : ', id, ' with text.length: ', dataToCopy.text.length);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport './nativeEditContext.css';\nimport { isFirefox } from '../../../../../base/browser/browser.js';\nimport { addDisposableListener, getActiveElement, getWindow, getWindowId } from '../../../../../base/browser/dom.js';\nimport { FastDomNode } from '../../../../../base/browser/fastDomNode.js';\nimport { StandardKeyboardEvent } from '../../../../../base/browser/keyboardEvent.js';\nimport { KeyCode } from '../../../../../base/common/keyCodes.js';\nimport { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';\nimport { EditorOption } from '../../../../common/config/editorOptions.js';\nimport { EndOfLinePreference, IModelDeltaDecoration } from '../../../../common/model.js';\nimport { ViewConfigurationChangedEvent, ViewCursorStateChangedEvent, ViewDecorationsChangedEvent, ViewFlushedEvent, ViewLinesChangedEvent, ViewLinesDeletedEvent, ViewLinesInsertedEvent, ViewScrollChangedEvent, ViewZonesChangedEvent } from '../../../../common/viewEvents.js';\nimport { ViewContext } from '../../../../common/viewModel/viewContext.js';\nimport { RestrictedRenderingContext, RenderingContext } from '../../../view/renderingContext.js';\nimport { ViewController } from '../../../view/viewController.js';\nimport { ClipboardEventUtils, ClipboardStoredMetadata, getDataToCopy, InMemoryClipboardMetadataManager } from '../clipboardUtils.js';\nimport { AbstractEditContext } from '../editContext.js';\nimport { editContextAddDisposableListener, FocusTracker, ITypeData } from './nativeEditContextUtils.js';\nimport { ScreenReaderSupport } from './screenReaderSupport.js';\nimport { Range } from '../../../../common/core/range.js';\nimport { Selection } from '../../../../common/core/selection.js';\nimport { Position } from '../../../../common/core/position.js';\nimport { IVisibleRangeProvider } from '../textArea/textAreaEditContext.js';\nimport { PositionOffsetTransformer } from '../../../../common/core/text/positionToOffset.js';\nimport { EditContext } from './editContextFactory.js';\nimport { NativeEditContextRegistry } from './nativeEditContextRegistry.js';\nimport { IEditorAriaOptions } from '../../../editorBrowser.js';\nimport { isHighSurrogate, isLowSurrogate } from '../../../../../base/common/strings.js';\nimport { IME } from '../../../../../base/common/ime.js';\nimport { OffsetRange } from '../../../../common/core/ranges/offsetRange.js';\nimport { ILogService, LogLevel } from '../../../../../platform/log/common/log.js';\nimport { generateUuid } from '../../../../../base/common/uuid.js';\n\n// Corresponds to classes in nativeEditContext.css\nenum CompositionClassName {\n\tNONE = 'edit-context-composition-none',\n\tSECONDARY = 'edit-context-composition-secondary',\n\tPRIMARY = 'edit-context-composition-primary',\n}\n\ninterface ITextUpdateEvent {\n\ttext: string;\n\tselectionStart: number;\n\tselectionEnd: number;\n\tupdateRangeStart: number;\n\tupdateRangeEnd: number;\n}\n\nexport class NativeEditContext extends AbstractEditContext {\n\n\t// Text area used to handle paste events\n\tpublic readonly domNode: FastDomNode<HTMLDivElement>;\n\tprivate readonly _imeTextArea: FastDomNode<HTMLTextAreaElement>;\n\tprivate readonly _editContext: EditContext;\n\tprivate readonly _screenReaderSupport: ScreenReaderSupport;\n\tprivate _previousEditContextSelection: OffsetRange = new OffsetRange(0, 0);\n\tprivate _editContextPrimarySelection: Selection = new Selection(1, 1, 1, 1);\n\n\t// Overflow guard container\n\tprivate _parent: HTMLElement | undefined;\n\tprivate _decorations: string[] = [];\n\tprivate _primarySelection: Selection = new Selection(1, 1, 1, 1);\n\n\n\tprivate _targetWindowId: number = -1;\n\tprivate _scrollTop: number = 0;\n\tprivate _scrollLeft: number = 0;\n\n\tprivate readonly _focusTracker: FocusTracker;\n\n\tconstructor(\n\t\townerID: string,\n\t\tcontext: ViewContext,\n\t\toverflowGuardContainer: FastDomNode<HTMLElement>,\n\t\tprivate readonly _viewController: ViewController,\n\t\tprivate readonly _visibleRangeProvider: IVisibleRangeProvider,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper(context);\n\n\t\tthis.domNode = new FastDomNode(document.createElement('div'));\n\t\tthis.domNode.setClassName(`native-edit-context`);\n\t\tthis._imeTextArea = new FastDomNode(document.createElement('textarea'));\n\t\tthis._imeTextArea.setClassName(`ime-text-area`);\n\t\tthis._imeTextArea.setAttribute('readonly', 'true');\n\t\tthis._imeTextArea.setAttribute('tabindex', '-1');\n\t\tthis._imeTextArea.setAttribute('aria-hidden', 'true');\n\t\tthis.domNode.setAttribute('autocorrect', 'off');\n\t\tthis.domNode.setAttribute('autocapitalize', 'off');\n\t\tthis.domNode.setAttribute('autocomplete', 'off');\n\t\tthis.domNode.setAttribute('spellcheck', 'false');\n\n\t\tthis._updateDomAttributes();\n\n\t\toverflowGuardContainer.appendChild(this.domNode);\n\t\toverflowGuardContainer.appendChild(this._imeTextArea);\n\t\tthis._parent = overflowGuardContainer.domNode;\n\n\t\tthis._focusTracker = this._register(new FocusTracker(logService, this.domNode.domNode, (newFocusValue: boolean) => {\n\t\t\tlogService.trace('NativeEditContext#handleFocusChange : ', newFocusValue);\n\t\t\tthis._screenReaderSupport.handleFocusChange(newFocusValue);\n\t\t\tthis._context.viewModel.setHasFocus(newFocusValue);\n\t\t}));\n\n\t\tconst window = getWindow(this.domNode.domNode);\n\t\tthis._editContext = EditContext.create(window);\n\t\tthis.setEditContextOnDomNode();\n\n\t\tthis._screenReaderSupport = this._register(instantiationService.createInstance(ScreenReaderSupport, this.domNode, context, this._viewController));\n\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'copy', (e) => {\n\t\t\tthis.logService.trace('NativeEditContext#copy');\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t}));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'cut', (e) => {\n\t\t\tthis.logService.trace('NativeEditContext#cut');\n\t\t\t// Pretend here we touched the text area, as the `cut` event will most likely\n\t\t\t// result in a `selectionchange` event which we want to ignore\n\t\t\tthis._screenReaderSupport.onWillCut();\n\t\t\tthis._ensureClipboardGetsEditorSelection(e);\n\t\t\tthis.logService.trace('NativeEditContext#cut (before viewController.cut)');\n\t\t\tthis._viewController.cut();\n\t\t}));\n\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'keyup', (e) => this._onKeyUp(e)));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'keydown', async (e) => this._onKeyDown(e)));\n\t\tthis._register(addDisposableListener(this._imeTextArea.domNode, 'keyup', (e) => this._onKeyUp(e)));\n\t\tthis._register(addDisposableListener(this._imeTextArea.domNode, 'keydown', async (e) => this._onKeyDown(e)));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'beforeinput', async (e) => {\n\t\t\tif (e.inputType === 'insertParagraph' || e.inputType === 'insertLineBreak') {\n\t\t\t\tthis._onType(this._viewController, { text: '\\n', replacePrevCharCnt: 0, replaceNextCharCnt: 0, positionDelta: 0 });\n\t\t\t}\n\t\t}));\n\t\tthis._register(addDisposableListener(this.domNode.domNode, 'paste', (e) => {\n\t\t\tthis.logService.trace('NativeEditContext#paste');\n\t\t\te.preventDefault();\n\t\t\tif (!e.clipboardData) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\t\tthis.logService.trace('NativeEditContext#paste with id : ', metadata?.id, ' with text.length: ', text.length);\n\t\t\tif (!text) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tmetadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\t\t\tlet pasteOnNewLine = false;\n\t\t\tlet multicursorText: string[] | null = null;\n\t\t\tlet mode: string | null = null;\n\t\t\tif (metadata) {\n\t\t\t\tconst options = this._context.configuration.options;\n\t\t\t\tconst emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\t\t\tpasteOnNewLine = emptySelectionClipboard && !!metadata.isFromEmptySelection;\n\t\t\t\tmulticursorText = typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null;\n\t\t\t\tmode = metadata.mode;\n\t\t\t}\n\t\t\tthis.logService.trace('NativeEditContext#paste (before viewController.paste)');\n\t\t\tthis._viewController.paste(text, pasteOnNewLine, multicursorText, mode);\n\t\t}));\n\n\t\t// Edit context events\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'textformatupdate', (e) => this._handleTextFormatUpdate(e)));\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'characterboundsupdate', (e) => this._updateCharacterBounds(e)));\n\t\tlet highSurrogateCharacter: string | undefined;\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'textupdate', (e) => {\n\t\t\tconst text = e.text;\n\t\t\tif (text.length === 1) {\n\t\t\t\tconst charCode = text.charCodeAt(0);\n\t\t\t\tif (isHighSurrogate(charCode)) {\n\t\t\t\t\thighSurrogateCharacter = text;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (isLowSurrogate(charCode) && highSurrogateCharacter) {\n\t\t\t\t\tconst textUpdateEvent: ITextUpdateEvent = {\n\t\t\t\t\t\ttext: highSurrogateCharacter + text,\n\t\t\t\t\t\tselectionEnd: e.selectionEnd,\n\t\t\t\t\t\tselectionStart: e.selectionStart,\n\t\t\t\t\t\tupdateRangeStart: e.updateRangeStart - 1,\n\t\t\t\t\t\tupdateRangeEnd: e.updateRangeEnd - 1\n\t\t\t\t\t};\n\t\t\t\t\thighSurrogateCharacter = undefined;\n\t\t\t\t\tthis._emitTypeEvent(this._viewController, textUpdateEvent);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._emitTypeEvent(this._viewController, e);\n\t\t}));\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'compositionstart', (e) => {\n\t\t\tthis._updateEditContext();\n\t\t\t// Utlimately fires onDidCompositionStart() on the editor to notify for example suggest model of composition state\n\t\t\t// Updates the composition state of the cursor controller which determines behavior of typing with interceptors\n\t\t\tthis._viewController.compositionStart();\n\t\t\t// Emits ViewCompositionStartEvent which can be depended on by ViewEventHandlers\n\t\t\tthis._context.viewModel.onCompositionStart();\n\t\t}));\n\t\tthis._register(editContextAddDisposableListener(this._editContext, 'compositionend', (e) => {\n\t\t\tthis._updateEditContext();\n\t\t\t// Utlimately fires compositionEnd() on the editor to notify for example suggest model of composition state\n\t\t\t// Updates the composition state of the cursor controller which determines behavior of typing with interceptors\n\t\t\tthis._viewController.compositionEnd();\n\t\t\t// Emits ViewCompositionEndEvent which can be depended on by ViewEventHandlers\n\t\t\tthis._context.viewModel.onCompositionEnd();\n\t\t}));\n\t\tlet reenableTracking: boolean = false;\n\t\tthis._register(IME.onDidChange(() => {\n\t\t\tif (IME.enabled && reenableTracking) {\n\t\t\t\tthis._focusTracker.resume();\n\t\t\t\tthis.domNode.focus();\n\t\t\t\treenableTracking = false;\n\t\t\t}\n\t\t\tif (!IME.enabled && this.isFocused()) {\n\t\t\t\tthis._focusTracker.pause();\n\t\t\t\tthis._imeTextArea.focus();\n\t\t\t\treenableTracking = true;\n\t\t\t}\n\t\t}));\n\t\tthis._register(NativeEditContextRegistry.register(ownerID, this));\n\t}\n\n\t// --- Public methods ---\n\n\tpublic override dispose(): void {\n\t\t// Force blue the dom node so can write in pane with no native edit context after disposal\n\t\tthis.domNode.domNode.editContext = undefined;\n\t\tthis.domNode.domNode.blur();\n\t\tthis.domNode.domNode.remove();\n\t\tthis._imeTextArea.domNode.remove();\n\t\tsuper.dispose();\n\t}\n\n\tpublic setAriaOptions(options: IEditorAriaOptions): void {\n\t\tthis._screenReaderSupport.setAriaOptions(options);\n\t}\n\n\t/* Last rendered data needed for correct hit-testing and determining the mouse position.\n\t * Without this, the selection will blink as incorrect mouse position is calculated */\n\tpublic getLastRenderData(): Position | null {\n\t\treturn this._primarySelection.getPosition();\n\t}\n\n\tpublic prepareRender(ctx: RenderingContext): void {\n\t\tthis._screenReaderSupport.prepareRender(ctx);\n\t\tthis._updateSelectionAndControlBounds(ctx);\n\t}\n\n\tpublic render(ctx: RestrictedRenderingContext): void {\n\t\tthis._screenReaderSupport.render(ctx);\n\t}\n\n\tpublic override onCursorStateChanged(e: ViewCursorStateChangedEvent): boolean {\n\t\tthis._primarySelection = e.modelSelections[0] ?? new Selection(1, 1, 1, 1);\n\t\tthis._screenReaderSupport.onCursorStateChanged(e);\n\t\tthis._updateEditContext();\n\t\treturn true;\n\t}\n\n\tpublic override onConfigurationChanged(e: ViewConfigurationChangedEvent): boolean {\n\t\tthis._screenReaderSupport.onConfigurationChanged(e);\n\t\tthis._updateDomAttributes();\n\t\treturn true;\n\t}\n\n\tpublic override onDecorationsChanged(e: ViewDecorationsChangedEvent): boolean {\n\t\t// true for inline decorations that can end up relayouting text\n\t\treturn true;\n\t}\n\n\tpublic override onFlushed(e: ViewFlushedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic override onLinesChanged(e: ViewLinesChangedEvent): boolean {\n\t\tthis._updateEditContextOnLineChange(e.fromLineNumber, e.fromLineNumber + e.count - 1);\n\t\treturn true;\n\t}\n\n\tpublic override onLinesDeleted(e: ViewLinesDeletedEvent): boolean {\n\t\tthis._updateEditContextOnLineChange(e.fromLineNumber, e.toLineNumber);\n\t\treturn true;\n\t}\n\n\tpublic override onLinesInserted(e: ViewLinesInsertedEvent): boolean {\n\t\tthis._updateEditContextOnLineChange(e.fromLineNumber, e.toLineNumber);\n\t\treturn true;\n\t}\n\n\tprivate _updateEditContextOnLineChange(fromLineNumber: number, toLineNumber: number): void {\n\t\tif (this._editContextPrimarySelection.endLineNumber < fromLineNumber || this._editContextPrimarySelection.startLineNumber > toLineNumber) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updateEditContext();\n\t}\n\n\tpublic override onScrollChanged(e: ViewScrollChangedEvent): boolean {\n\t\tthis._scrollLeft = e.scrollLeft;\n\t\tthis._scrollTop = e.scrollTop;\n\t\treturn true;\n\t}\n\n\tpublic override onZonesChanged(e: ViewZonesChangedEvent): boolean {\n\t\treturn true;\n\t}\n\n\tpublic onWillPaste(): void {\n\t\tthis.logService.trace('NativeEditContext#onWillPaste');\n\t\tthis._onWillPaste();\n\t}\n\n\tprivate _onWillPaste(): void {\n\t\tthis._screenReaderSupport.onWillPaste();\n\t}\n\n\tpublic onWillCopy(): void {\n\t\tthis.logService.trace('NativeEditContext#onWillCopy');\n\t\tthis.logService.trace('NativeEditContext#isFocused : ', this.domNode.domNode === getActiveElement());\n\t}\n\n\tpublic writeScreenReaderContent(): void {\n\t\tthis._screenReaderSupport.writeScreenReaderContent();\n\t}\n\n\tpublic isFocused(): boolean {\n\t\treturn this._focusTracker.isFocused;\n\t}\n\n\tpublic focus(): void {\n\t\tthis._focusTracker.focus();\n\n\t\t// If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n\t\tthis.refreshFocusState();\n\t}\n\n\tpublic refreshFocusState(): void {\n\t\tthis._focusTracker.refreshFocusState();\n\t}\n\n\t// TODO: added as a workaround fix for https://github.com/microsoft/vscode/issues/229825\n\t// When this issue will be fixed the following should be removed.\n\tpublic setEditContextOnDomNode(): void {\n\t\tconst targetWindow = getWindow(this.domNode.domNode);\n\t\tconst targetWindowId = getWindowId(targetWindow);\n\t\tif (this._targetWindowId !== targetWindowId) {\n\t\t\tthis.domNode.domNode.editContext = this._editContext;\n\t\t\tthis._targetWindowId = targetWindowId;\n\t\t}\n\t}\n\n\t// --- Private methods ---\n\n\tprivate _onKeyUp(e: KeyboardEvent) {\n\t\tthis._viewController.emitKeyUp(new StandardKeyboardEvent(e));\n\t}\n\n\tprivate _onKeyDown(e: KeyboardEvent) {\n\t\tconst standardKeyboardEvent = new StandardKeyboardEvent(e);\n\t\t// When the IME is visible, the keys, like arrow-left and arrow-right, should be used to navigate in the IME, and should not be propagated further\n\t\tif (standardKeyboardEvent.keyCode === KeyCode.KEY_IN_COMPOSITION) {\n\t\t\tstandardKeyboardEvent.stopPropagation();\n\t\t}\n\t\tthis._viewController.emitKeyDown(standardKeyboardEvent);\n\t}\n\n\tprivate _updateDomAttributes(): void {\n\t\tconst options = this._context.configuration.options;\n\t\tthis.domNode.domNode.setAttribute('tabindex', String(options.get(EditorOption.tabIndex)));\n\t}\n\n\tprivate _updateEditContext(): void {\n\t\tconst editContextState = this._getNewEditContextState();\n\t\tif (!editContextState) {\n\t\t\treturn;\n\t\t}\n\t\tthis._editContext.updateText(0, Number.MAX_SAFE_INTEGER, editContextState.text ?? ' ');\n\t\tthis._editContext.updateSelection(editContextState.selectionStartOffset, editContextState.selectionEndOffset);\n\t\tthis._editContextPrimarySelection = editContextState.editContextPrimarySelection;\n\t\tthis._previousEditContextSelection = new OffsetRange(editContextState.selectionStartOffset, editContextState.selectionEndOffset);\n\t}\n\n\tprivate _emitTypeEvent(viewController: ViewController, e: ITextUpdateEvent): void {\n\t\tif (!this._editContext) {\n\t\t\treturn;\n\t\t}\n\t\tconst selectionEndOffset = this._previousEditContextSelection.endExclusive;\n\t\tconst selectionStartOffset = this._previousEditContextSelection.start;\n\t\tthis._previousEditContextSelection = new OffsetRange(e.selectionStart, e.selectionEnd);\n\n\t\tlet replaceNextCharCnt = 0;\n\t\tlet replacePrevCharCnt = 0;\n\t\tif (e.updateRangeEnd > selectionEndOffset) {\n\t\t\treplaceNextCharCnt = e.updateRangeEnd - selectionEndOffset;\n\t\t}\n\t\tif (e.updateRangeStart < selectionStartOffset) {\n\t\t\treplacePrevCharCnt = selectionStartOffset - e.updateRangeStart;\n\t\t}\n\t\tlet text = '';\n\t\tif (selectionStartOffset < e.updateRangeStart) {\n\t\t\ttext += this._editContext.text.substring(selectionStartOffset, e.updateRangeStart);\n\t\t}\n\t\ttext += e.text;\n\t\tif (selectionEndOffset > e.updateRangeEnd) {\n\t\t\ttext += this._editContext.text.substring(e.updateRangeEnd, selectionEndOffset);\n\t\t}\n\t\tlet positionDelta = 0;\n\t\tif (e.selectionStart === e.selectionEnd && selectionStartOffset === selectionEndOffset) {\n\t\t\tpositionDelta = e.selectionStart - (e.updateRangeStart + e.text.length);\n\t\t}\n\t\tconst typeInput: ITypeData = {\n\t\t\ttext,\n\t\t\treplacePrevCharCnt,\n\t\t\treplaceNextCharCnt,\n\t\t\tpositionDelta\n\t\t};\n\t\tthis._onType(viewController, typeInput);\n\t}\n\n\tprivate _onType(viewController: ViewController, typeInput: ITypeData): void {\n\t\tif (typeInput.replacePrevCharCnt || typeInput.replaceNextCharCnt || typeInput.positionDelta) {\n\t\t\tviewController.compositionType(typeInput.text, typeInput.replacePrevCharCnt, typeInput.replaceNextCharCnt, typeInput.positionDelta);\n\t\t} else {\n\t\t\tviewController.type(typeInput.text);\n\t\t}\n\t}\n\n\tprivate _getNewEditContextState(): { text: string; selectionStartOffset: number; selectionEndOffset: number; editContextPrimarySelection: Selection } | undefined {\n\t\tconst editContextPrimarySelection = this._primarySelection;\n\t\tconst model = this._context.viewModel.model;\n\t\tif (!model.isValidRange(editContextPrimarySelection)) {\n\t\t\treturn;\n\t\t}\n\t\tconst primarySelectionStartLine = editContextPrimarySelection.startLineNumber;\n\t\tconst primarySelectionEndLine = editContextPrimarySelection.endLineNumber;\n\t\tconst endColumnOfEndLineNumber = model.getLineMaxColumn(primarySelectionEndLine);\n\t\tconst rangeOfText = new Range(primarySelectionStartLine, 1, primarySelectionEndLine, endColumnOfEndLineNumber);\n\t\tconst text = model.getValueInRange(rangeOfText, EndOfLinePreference.TextDefined);\n\t\tconst selectionStartOffset = editContextPrimarySelection.startColumn - 1;\n\t\tconst selectionEndOffset = text.length + editContextPrimarySelection.endColumn - endColumnOfEndLineNumber;\n\t\treturn {\n\t\t\ttext,\n\t\t\tselectionStartOffset,\n\t\t\tselectionEndOffset,\n\t\t\teditContextPrimarySelection\n\t\t};\n\t}\n\n\tprivate _editContextStartPosition(): Position {\n\t\treturn new Position(this._editContextPrimarySelection.startLineNumber, 1);\n\t}\n\n\tprivate _handleTextFormatUpdate(e: TextFormatUpdateEvent): void {\n\t\tif (!this._editContext) {\n\t\t\treturn;\n\t\t}\n\t\tconst formats = e.getTextFormats();\n\t\tconst editContextStartPosition = this._editContextStartPosition();\n\t\tconst decorations: IModelDeltaDecoration[] = [];\n\t\tformats.forEach(f => {\n\t\t\tconst textModel = this._context.viewModel.model;\n\t\t\tconst offsetOfEditContextText = textModel.getOffsetAt(editContextStartPosition);\n\t\t\tconst startPositionOfDecoration = textModel.getPositionAt(offsetOfEditContextText + f.rangeStart);\n\t\t\tconst endPositionOfDecoration = textModel.getPositionAt(offsetOfEditContextText + f.rangeEnd);\n\t\t\tconst decorationRange = Range.fromPositions(startPositionOfDecoration, endPositionOfDecoration);\n\t\t\tconst thickness = f.underlineThickness.toLowerCase();\n\t\t\tlet decorationClassName: string = CompositionClassName.NONE;\n\t\t\tswitch (thickness) {\n\t\t\t\tcase 'thin':\n\t\t\t\t\tdecorationClassName = CompositionClassName.SECONDARY;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'thick':\n\t\t\t\t\tdecorationClassName = CompositionClassName.PRIMARY;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdecorations.push({\n\t\t\t\trange: decorationRange,\n\t\t\t\toptions: {\n\t\t\t\t\tdescription: 'textFormatDecoration',\n\t\t\t\t\tinlineClassName: decorationClassName,\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tthis._decorations = this._context.viewModel.model.deltaDecorations(this._decorations, decorations);\n\t}\n\n\tprivate _updateSelectionAndControlBounds(ctx: RenderingContext) {\n\t\tif (!this._parent) {\n\t\t\treturn;\n\t\t}\n\t\tconst options = this._context.configuration.options;\n\t\tconst contentLeft = options.get(EditorOption.layoutInfo).contentLeft;\n\t\tconst parentBounds = this._parent.getBoundingClientRect();\n\t\tconst viewSelection = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(this._primarySelection);\n\t\tconst verticalOffsetStart = this._context.viewLayout.getVerticalOffsetForLineNumber(viewSelection.startLineNumber);\n\n\t\tconst top = parentBounds.top + verticalOffsetStart - this._scrollTop;\n\t\tconst verticalOffsetEnd = this._context.viewLayout.getVerticalOffsetAfterLineNumber(viewSelection.endLineNumber);\n\t\tconst height = verticalOffsetEnd - verticalOffsetStart;\n\t\tlet left = parentBounds.left + contentLeft - this._scrollLeft;\n\t\tlet width: number;\n\n\t\tif (this._primarySelection.isEmpty()) {\n\t\t\tconst linesVisibleRanges = ctx.visibleRangeForPosition(viewSelection.getStartPosition());\n\t\t\tif (linesVisibleRanges) {\n\t\t\t\tleft += linesVisibleRanges.left;\n\t\t\t}\n\t\t\twidth = 0;\n\t\t} else {\n\t\t\twidth = parentBounds.width - contentLeft;\n\t\t}\n\n\t\tconst selectionBounds = new DOMRect(left, top, width, height);\n\t\tthis._editContext.updateSelectionBounds(selectionBounds);\n\t\tthis._editContext.updateControlBounds(selectionBounds);\n\t}\n\n\tprivate _updateCharacterBounds(e: CharacterBoundsUpdateEvent): void {\n\t\tif (!this._parent) {\n\t\t\treturn;\n\t\t}\n\t\tconst options = this._context.configuration.options;\n\t\tconst typicalHalfWidthCharacterWidth = options.get(EditorOption.fontInfo).typicalHalfwidthCharacterWidth;\n\t\tconst contentLeft = options.get(EditorOption.layoutInfo).contentLeft;\n\t\tconst parentBounds = this._parent.getBoundingClientRect();\n\n\t\tconst characterBounds: DOMRect[] = [];\n\t\tconst offsetTransformer = new PositionOffsetTransformer(this._editContext.text);\n\t\tfor (let offset = e.rangeStart; offset < e.rangeEnd; offset++) {\n\t\t\tconst editContextStartPosition = offsetTransformer.getPosition(offset);\n\t\t\tconst textStartLineOffsetWithinEditor = this._editContextPrimarySelection.startLineNumber - 1;\n\t\t\tconst characterStartPosition = new Position(textStartLineOffsetWithinEditor + editContextStartPosition.lineNumber, editContextStartPosition.column);\n\t\t\tconst characterEndPosition = characterStartPosition.delta(0, 1);\n\t\t\tconst characterModelRange = Range.fromPositions(characterStartPosition, characterEndPosition);\n\t\t\tconst characterViewRange = this._context.viewModel.coordinatesConverter.convertModelRangeToViewRange(characterModelRange);\n\t\t\tconst characterLinesVisibleRanges = this._visibleRangeProvider.linesVisibleRangesForRange(characterViewRange, true) ?? [];\n\t\t\tconst lineNumber = characterViewRange.startLineNumber;\n\t\t\tconst characterVerticalOffset = this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n\t\t\tconst top = parentBounds.top + characterVerticalOffset - this._scrollTop;\n\n\t\t\tlet left = 0;\n\t\t\tlet width = typicalHalfWidthCharacterWidth;\n\t\t\tif (characterLinesVisibleRanges.length > 0) {\n\t\t\t\tfor (const visibleRange of characterLinesVisibleRanges[0].ranges) {\n\t\t\t\t\tleft = visibleRange.left;\n\t\t\t\t\twidth = visibleRange.width;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst lineHeight = this._context.viewLayout.getLineHeightForLineNumber(lineNumber);\n\t\t\tcharacterBounds.push(new DOMRect(parentBounds.left + contentLeft + left - this._scrollLeft, top, width, lineHeight));\n\t\t}\n\t\tthis._editContext.updateCharacterBounds(e.rangeStart, characterBounds);\n\t}\n\n\tprivate _ensureClipboardGetsEditorSelection(e: ClipboardEvent): void {\n\t\tconst options = this._context.configuration.options;\n\t\tconst emptySelectionClipboard = options.get(EditorOption.emptySelectionClipboard);\n\t\tconst copyWithSyntaxHighlighting = options.get(EditorOption.copyWithSyntaxHighlighting);\n\t\tconst selections = this._context.viewModel.getCursorStates().map(cursorState => cursorState.modelState.selection);\n\t\tconst dataToCopy = getDataToCopy(this._context.viewModel, selections, emptySelectionClipboard, copyWithSyntaxHighlighting);\n\t\tlet id = undefined;\n\t\tif (this.logService.getLevel() === LogLevel.Trace) {\n\t\t\tid = generateUuid();\n\t\t}\n\t\tconst storedMetadata: ClipboardStoredMetadata = {\n\t\t\tversion: 1,\n\t\t\tid,\n\t\t\tisFromEmptySelection: dataToCopy.isFromEmptySelection,\n\t\t\tmulticursorText: dataToCopy.multicursorText,\n\t\t\tmode: dataToCopy.mode\n\t\t};\n\t\tInMemoryClipboardMetadataManager.INSTANCE.set(\n\t\t\t// When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n\t\t\t// Firefox pastes \"LINE\\n\", so let's work around this quirk\n\t\t\t(isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text),\n\t\t\tstoredMetadata\n\t\t);\n\t\te.preventDefault();\n\t\tif (e.clipboardData) {\n\t\t\tClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n\t\t}\n\t\tthis.logService.trace('NativeEditContext#_ensureClipboardGetsEditorSelectios with id : ', id, ' with text.length: ', dataToCopy.text.length);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}