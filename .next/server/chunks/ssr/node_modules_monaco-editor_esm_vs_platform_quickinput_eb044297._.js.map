{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickInput.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/common/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/common/quickInput.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/common/vs/platform/quickinput/common/quickInput.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IQuickAccessController } from './quickAccess.js';\nimport { IMatch } from '../../../base/common/filters.js';\nimport { IItemAccessor } from '../../../base/common/fuzzyScorer.js';\nimport { ResolvedKeybinding } from '../../../base/common/keybindings.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\n\nexport interface IQuickItemHighlights {\n\tlabel?: IMatch[];\n\tdescription?: IMatch[];\n}\n\nexport interface IQuickPickItemHighlights extends IQuickItemHighlights {\n\tdetail?: IMatch[];\n}\n\nexport type QuickPickItem = IQuickPickSeparator | IQuickPickItem;\n\n/**\n * Base properties for a quick pick and quick tree item.\n */\nexport interface IQuickItem {\n\tid?: string;\n\tlabel: string;\n\tariaLabel?: string;\n\tdescription?: string;\n\t/**\n\t * Whether the item is displayed in italics.\n\t */\n\titalic?: boolean;\n\t/**\n\t * Whether the item is displayed with a strikethrough.\n\t */\n\tstrikethrough?: boolean;\n\ticonClasses?: readonly string[];\n\ticonPath?: { dark: URI; light?: URI };\n\ticonClass?: string;\n\tbuttons?: readonly IQuickInputButton[];\n\t/**\n\t * Used when we're in multi-select mode. Renders a disabled checkbox.\n\t */\n\tdisabled?: boolean;\n}\n\n/**\n * Represents a quick pick item used in the quick pick UI.\n */\nexport interface IQuickPickItem extends IQuickItem {\n\t/**\n\t * The type of the quick pick item. Used to distinguish between 'item' and 'separator'\n\t */\n\ttype?: 'item';\n\t/**\n\t * The detail text of the quick pick item. Shown as the second line.\n\t */\n\tdetail?: string;\n\t/**\n\t * The tooltip for the quick pick item.\n\t */\n\ttooltip?: string | IMarkdownString;\n\thighlights?: IQuickPickItemHighlights;\n\t/**\n\t * Allows to show a keybinding next to the item to indicate\n\t * how the item can be triggered outside of the picker using\n\t * keyboard shortcut.\n\t */\n\tkeybinding?: ResolvedKeybinding;\n\t/**\n\t * Whether the item is picked by default when the Quick Pick is shown.\n\t */\n\tpicked?: boolean;\n\t/**\n\t * Whether the item is always shown in the Quick Pick regardless of filtering.\n\t */\n\talwaysShow?: boolean;\n\t/**\n\t * Defaults to true with `IQuickPick.canSelectMany`, can be false to disable picks for a single item\n\t */\n\tpickable?: boolean;\n}\n\nexport interface IQuickPickSeparator {\n\t/**\n\t * The type of the quick pick item. Used to distinguish between 'item' and 'separator'\n\t */\n\ttype: 'separator';\n\tid?: string;\n\tlabel?: string;\n\tdescription?: string;\n\tariaLabel?: string;\n\tbuttons?: readonly IQuickInputButton[];\n\ttooltip?: string | IMarkdownString;\n}\n\nexport interface IKeyMods {\n\treadonly ctrlCmd: boolean;\n\treadonly alt: boolean;\n}\n\nexport const NO_KEY_MODS: IKeyMods = { ctrlCmd: false, alt: false };\n\nexport interface IQuickNavigateConfiguration {\n\tkeybindings: readonly ResolvedKeybinding[];\n}\n\nexport interface IPickOptions<T extends IQuickPickItem> {\n\n\t/**\n\t * an optional string to show as the title of the quick input\n\t */\n\ttitle?: string;\n\n\t/**\n\t * the value to prefill in the input box\n\t */\n\tvalue?: string;\n\n\t/**\n\t * an optional string to show as placeholder in the input box to guide the user what she picks on\n\t */\n\tplaceHolder?: string;\n\n\t/**\n\t * an optional flag to include the description when filtering the picks\n\t */\n\tmatchOnDescription?: boolean;\n\n\t/**\n\t * an optional flag to include the detail when filtering the picks\n\t */\n\tmatchOnDetail?: boolean;\n\n\t/**\n\t * an optional flag to filter the picks based on label. Defaults to true.\n\t */\n\tmatchOnLabel?: boolean;\n\n\t/**\n\t * an optional flag to sort the picks based by the label.\n\t */\n\tsortByLabel?: boolean;\n\n\t/**\n\t * an optional flag to not close the picker on focus lost\n\t */\n\tignoreFocusLost?: boolean;\n\n\t/**\n\t * an optional flag to make this picker multi-select\n\t */\n\tcanPickMany?: boolean;\n\n\t/**\n\t * enables quick navigate in the picker to open an element without typing\n\t */\n\tquickNavigate?: IQuickNavigateConfiguration;\n\n\t/**\n\t * Hides the input box from the picker UI. This is typically used\n\t * in combination with quick-navigation where no search UI should\n\t * be presented.\n\t */\n\thideInput?: boolean;\n\n\t/**\n\t * a context key to set when this picker is active\n\t */\n\tcontextKey?: string;\n\n\t/**\n\t * an optional property for the item to focus initially.\n\t */\n\tactiveItem?: Promise<T> | T;\n\n\tonKeyMods?: (keyMods: IKeyMods) => void;\n\tonDidFocus?: (entry: T) => void;\n\tonDidTriggerItemButton?: (context: IQuickPickItemButtonContext<T>) => void;\n\tonDidTriggerSeparatorButton?: (context: IQuickPickSeparatorButtonEvent) => void;\n}\n\nexport interface IInputOptions {\n\n\t/**\n\t * an optional string to show as the title of the quick input\n\t */\n\ttitle?: string;\n\n\t/**\n\t * the value to prefill in the input box\n\t */\n\tvalue?: string;\n\n\t/**\n\t * the selection of value, default to the whole prefilled value\n\t */\n\tvalueSelection?: readonly [number, number];\n\n\t/**\n\t * the text to display underneath the input box\n\t */\n\tprompt?: string;\n\n\t/**\n\t * an optional string to show as placeholder in the input box to guide the user what to type\n\t */\n\tplaceHolder?: string;\n\n\t/**\n\t * Controls if a password input is shown. Password input hides the typed text.\n\t */\n\tpassword?: boolean;\n\n\t/**\n\t * an optional flag to not close the input on focus lost\n\t */\n\tignoreFocusLost?: boolean;\n\n\t/**\n\t * an optional function that is used to validate user input.\n\t */\n\tvalidateInput?: (input: string) => Promise<string | null | undefined | { content: string; severity: Severity }>;\n}\n\nexport enum QuickInputHideReason {\n\n\t/**\n\t * Focus moved away from the quick input.\n\t */\n\tBlur = 1,\n\n\t/**\n\t * An explicit user gesture, e.g. pressing Escape key.\n\t */\n\tGesture,\n\n\t/**\n\t * Anything else.\n\t */\n\tOther\n}\n\nexport interface IQuickInputHideEvent {\n\treason: QuickInputHideReason;\n}\n\n/**\n * A collection of the different types of QuickInput\n */\nexport const enum QuickInputType {\n\tQuickPick = 'quickPick',\n\tInputBox = 'inputBox',\n\tQuickWidget = 'quickWidget',\n\tQuickTree = 'quickTree'\n}\n\n/**\n * Represents a quick input control that allows users to make selections or provide input quickly.\n */\nexport interface IQuickInput extends IDisposable {\n\n\t/**\n\t * The type of the quick input.\n\t */\n\treadonly type: QuickInputType;\n\n\t/**\n\t * An event that is fired when the quick input is hidden.\n\t */\n\treadonly onDidHide: Event<IQuickInputHideEvent>;\n\n\t/**\n\t * The title of the quick input.\n\t */\n\ttitle: string | undefined;\n\n\t/**\n\t * The context key associated with the quick input.\n\t */\n\tcontextKey: string | undefined;\n\n\t/**\n\t * Indicates whether the quick input is busy. Renders a progress bar if true.\n\t */\n\tbusy: boolean;\n\n\t/**\n\t * Indicates whether the quick input should be hidden when it loses focus.\n\t */\n\tignoreFocusOut: boolean;\n\n\t/**\n\t * Shows the quick input.\n\t */\n\tshow(): void;\n\n\t/**\n\t * Hides the quick input.\n\t */\n\thide(): void;\n\n\t/**\n\t * Notifies that the quick input has been hidden.\n\t * @param reason The reason why the quick input was hidden.\n\t */\n\tdidHide(reason?: QuickInputHideReason): void;\n\n\t/**\n\t * Notifies that the quick input will be hidden.\n\t * @param reason The reason why the quick input will be hidden.\n\t */\n\twillHide(reason?: QuickInputHideReason): void;\n}\n\nexport interface IQuickPickWillAcceptEvent {\n\n\t/**\n\t * Allows to disable the default accept handling\n\t * of the picker. If `veto` is called, the picker\n\t * will not trigger the `onDidAccept` event.\n\t */\n\tveto(): void;\n}\n\nexport interface IQuickPickDidAcceptEvent {\n\n\t/**\n\t * Signals if the picker item is to be accepted\n\t * in the background while keeping the picker open.\n\t */\n\tinBackground: boolean;\n}\n\n/**\n * Represents the activation behavior for items in a quick input. This means which item will be\n * \"active\" (aka focused).\n */\nexport enum ItemActivation {\n\t/**\n\t * No item will be active.\n\t */\n\tNONE,\n\t/**\n\t * First item will be active.\n\t */\n\tFIRST,\n\t/**\n\t * Second item will be active.\n\t */\n\tSECOND,\n\t/**\n\t * Last item will be active.\n\t */\n\tLAST\n}\n\n/**\n * Represents the focus options for a quick pick.\n */\nexport enum QuickPickFocus {\n\t/**\n\t * Focus the first item in the list.\n\t */\n\tFirst = 1,\n\t/**\n\t * Focus the second item in the list.\n\t */\n\tSecond,\n\t/**\n\t * Focus the last item in the list.\n\t */\n\tLast,\n\t/**\n\t * Focus the next item in the list.\n\t */\n\tNext,\n\t/**\n\t * Focus the previous item in the list.\n\t */\n\tPrevious,\n\t/**\n\t * Focus the next page in the list.\n\t */\n\tNextPage,\n\t/**\n\t * Focus the previous page in the list.\n\t */\n\tPreviousPage,\n\t/**\n\t * Focus the first item under the next separator.\n\t */\n\tNextSeparator,\n\t/**\n\t * Focus the first item under the current separator.\n\t */\n\tPreviousSeparator\n}\n\n/**\n * Represents a quick pick control that allows the user to select an item from a list of options.\n */\nexport interface IQuickPick<T extends IQuickPickItem, O extends { useSeparators: boolean } = { useSeparators: false }> extends IQuickInput {\n\n\t/**\n\t * The current value of the quick pick input.\n\t */\n\tvalue: string;\n\n\t/**\n\t * A method that allows to massage the value used for filtering, e.g, to remove certain parts.\n\t * @param value The value to be filtered.\n\t * @returns The filtered value.\n\t */\n\tfilterValue: (value: string) => string;\n\n\t/**\n\t * The ARIA label for the quick pick input.\n\t */\n\tariaLabel: string | undefined;\n\n\t/**\n\t * The placeholder text for the quick pick input.\n\t */\n\tplaceholder: string | undefined;\n\n\t/**\n\t * An event that is fired when the value of the quick pick input changes.\n\t */\n\treadonly onDidChangeValue: Event<string>;\n\n\t/**\n\t * An event that is fired when the quick pick is about to accept the selected item.\n\t */\n\treadonly onWillAccept: Event<IQuickPickWillAcceptEvent>;\n\n\t/**\n\t * An event that is fired when the quick pick has accepted the selected item.\n\t */\n\treadonly onDidAccept: Event<IQuickPickDidAcceptEvent>;\n\n\t/**\n\t * If enabled, the `onDidAccept` event will be fired when pressing the arrow-right key to accept the selected item without closing the picker.\n\t */\n\tcanAcceptInBackground: boolean;\n\n\t/**\n\t * An event that is fired when an item button is triggered.\n\t */\n\treadonly onDidTriggerItemButton: Event<IQuickPickItemButtonEvent<T>>;\n\n\t/**\n\t * An event that is fired when a separator button is triggered.\n\t */\n\treadonly onDidTriggerSeparatorButton: Event<IQuickPickSeparatorButtonEvent>;\n\n\t/**\n\t * The items to be displayed in the quick pick.\n\t */\n\titems: O extends { useSeparators: true } ? ReadonlyArray<T | IQuickPickSeparator> : ReadonlyArray<T>;\n\n\t/**\n\t * Whether multiple items can be selected. If so, checkboxes will be rendered.\n\t */\n\tcanSelectMany: boolean;\n\n\t/**\n\t * Whether to match on the description of the items.\n\t */\n\tmatchOnDescription: boolean;\n\n\t/**\n\t * Whether to match on the detail of the items.\n\t */\n\tmatchOnDetail: boolean;\n\n\t/**\n\t * Whether to match on the label of the items.\n\t */\n\tmatchOnLabel: boolean;\n\n\t/**\n\t * Whether to sort the items by label.\n\t */\n\tsortByLabel: boolean;\n\n\t/**\n\t * Whether to keep the scroll position when the quick pick input is updated.\n\t */\n\tkeepScrollPosition: boolean;\n\n\t/**\n\t * The configuration for quick navigation.\n\t */\n\tquickNavigate: IQuickNavigateConfiguration | undefined;\n\n\t/**\n\t * The currently active items.\n\t */\n\tactiveItems: ReadonlyArray<T>;\n\n\t/**\n\t * An event that is fired when the active items change.\n\t */\n\treadonly onDidChangeActive: Event<T[]>;\n\n\t/**\n\t * The item activation behavior for the next time `items` is set. Item activation means which\n\t * item is \"active\" (aka focused) when the quick pick is opened or when `items` is set.\n\t */\n\titemActivation: ItemActivation;\n\n\t/**\n\t * The currently selected items.\n\t */\n\tselectedItems: ReadonlyArray<T>;\n\n\t/**\n\t * An event that is fired when the selected items change.\n\t */\n\treadonly onDidChangeSelection: Event<T[]>;\n\n\t/**\n\t * The key modifiers.\n\t */\n\treadonly keyMods: IKeyMods;\n\n\t/**\n\t * The selection range for the value in the input.\n\t */\n\tvalueSelection: Readonly<[number, number]> | undefined;\n\n\t/**\n\t * Hides the input box from the picker UI. This is typically used in combination with quick-navigation where no search UI should be presented.\n\t */\n\thideInput: boolean;\n\n\t/**\n\t * Focus a particular item in the list. Used internally for keyboard navigation.\n\t * @param focus The focus behavior.\n\t */\n\tfocus(focus: QuickPickFocus): void;\n\n\t/**\n\t * Programmatically accepts an item. Used internally for keyboard navigation.\n\t * @param inBackground Whether you are accepting an item in the background and keeping the picker open.\n\t */\n\taccept(inBackground?: boolean): void;\n}\n\n/**\n * Represents a toggle for quick input.\n */\nexport interface IQuickInputToggle {\n}\n\n/**\n * Represents an input box in a quick input dialog.\n */\nexport interface IInputBox extends IQuickInput {\n\n\t/**\n\t * Value shown in the input box.\n\t */\n\tvalue: string;\n\n\t/**\n\t * Provide start and end values to be selected in the input box.\n\t */\n\tvalueSelection: Readonly<[number, number]> | undefined;\n\n\t/**\n\t * Value shown as example for input.\n\t */\n\tplaceholder: string | undefined;\n\n\t/**\n\t * Determines if the input value should be hidden while typing.\n\t */\n\tpassword: boolean;\n\n\t/**\n\t * Event called when the input value changes.\n\t */\n\treadonly onDidChangeValue: Event<string>;\n\n\t/**\n\t * Event called when the user submits the input.\n\t */\n\treadonly onDidAccept: Event<void>;\n\n\t/**\n\t * Text show below the input box.\n\t */\n\tprompt: string | undefined;\n\n\t/**\n\t * An optional validation message indicating a problem with the current input value.\n\t * Returning undefined clears the validation message.\n\t */\n\tvalidationMessage: string | undefined;\n\n\t/**\n\t * Severity of the input validation message.\n\t */\n\tseverity: Severity;\n}\n\nexport enum QuickInputButtonLocation {\n\t/**\n\t * In the title bar.\n\t */\n\tTitle = 1,\n\n\t/**\n\t * To the right of the input box.\n\t */\n\tInline = 2\n}\n\n/**\n * Represents a button in the quick input UI.\n */\nexport interface IQuickInputButton {\n\t/**\n\t * The path to the icon for the button.\n\t * Either `iconPath` or `iconClass` is required.\n\t */\n\ticonPath?: { dark: URI; light?: URI };\n\t/**\n\t * The CSS class for the icon of the button.\n\t * Either `iconPath` or `iconClass` is required.\n\t */\n\ticonClass?: string;\n\t/**\n\t * The tooltip text for the button.\n\t */\n\ttooltip?: string;\n\t/**\n\t * Whether to always show the button.\n\t * By default, buttons are only visible when hovering over them with the mouse.\n\t */\n\talwaysVisible?: boolean;\n\t/**\n\t * Where the button should be rendered. The default is {@link QuickInputButtonLocation.Title}.\n\t * @note This property is ignored if the button was added to a QuickPickItem.\n\t */\n\tlocation?: QuickInputButtonLocation;\n}\n\n/**\n * Represents an event that occurs when a button associated with a quick pick item is clicked.\n * @template T - The type of the quick pick item.\n */\nexport interface IQuickPickItemButtonEvent<T extends IQuickPickItem> {\n\t/**\n\t * The button that was clicked.\n\t */\n\tbutton: IQuickInputButton;\n\t/**\n\t * The quick pick item associated with the button.\n\t */\n\titem: T;\n}\n\n/**\n * Represents an event that occurs when a separator button is clicked in a quick pick.\n */\nexport interface IQuickPickSeparatorButtonEvent {\n\t/**\n\t * The button that was clicked.\n\t */\n\tbutton: IQuickInputButton;\n\t/**\n\t * The separator associated with the button.\n\t */\n\tseparator: IQuickPickSeparator;\n}\n\n/**\n * Represents a context for a button associated with a quick pick item.\n * @template T - The type of the quick pick item.\n */\nexport interface IQuickPickItemButtonContext<T extends IQuickPickItem> extends IQuickPickItemButtonEvent<T> {\n\t/**\n\t * Removes the associated item from the quick pick.\n\t */\n\tremoveItem(): void;\n}\n\nexport type QuickPickInput<T = IQuickPickItem> = T | IQuickPickSeparator;\n\n\n//#region Fuzzy Scorer Support\n\nexport type IQuickPickItemWithResource = IQuickPickItem & { resource?: URI };\n\nexport class QuickPickItemScorerAccessor implements IItemAccessor<IQuickPickItemWithResource> {\n\n\tconstructor(private options?: { skipDescription?: boolean; skipPath?: boolean }) { }\n}\n\nexport const quickPickItemScorerAccessor = new QuickPickItemScorerAccessor();\n\n//#endregion\n\nexport const IQuickInputService = createDecorator<IQuickInputService>('quickInputService');\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface IQuickInputService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Provides access to the quick access providers.\n\t */\n\treadonly quickAccess: IQuickAccessController;\n\n\t/**\n\t * Opens the quick input box for selecting items and returns a promise\n\t * with the user selected item(s) if any.\n\t */\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: true }, token?: CancellationToken): Promise<T[] | undefined>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: false }, token?: CancellationToken): Promise<T | undefined>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: Omit<IPickOptions<T>, 'canPickMany'>, token?: CancellationToken): Promise<T | undefined>;\n\n\t/**\n\t * Opens the quick input box for text input and returns a promise with the user typed value if any.\n\t */\n\tinput(options?: IInputOptions, token?: CancellationToken): Promise<string | undefined>;\n\n\t/**\n\t * Provides raw access to the quick pick controller.\n\t */\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\n\t/**\n\t * Provides raw access to the input box controller.\n\t */\n\tcreateInputBox(): IInputBox;\n\n\t/**\n\t * Toggles hover for the current quick input item\n\t */\n\ttoggleHover(): void;\n\n\t/**\n\t * The current quick pick that is visible. Undefined if none is open.\n\t */\n\tcurrentQuickInput: IQuickInput | undefined;\n}\n\n//#region Quick Tree\n\n/**\n * Represents a quick tree control that displays hierarchical data with checkboxes.\n */\nexport interface IQuickTree<T extends IQuickTreeItem> extends IQuickInput {\n\n\t/**\n\t * Focus a particular item in the list. Used internally for keyboard navigation.\n\t * @param focus The focus behavior.\n\t */\n\tfocus(focus: QuickPickFocus): void;\n}\n\n/**\n * Represents a tree item in the quick tree.\n */\nexport interface IQuickTreeItem extends IQuickItem {\n\t/**\n\t * The checked state of the item. Can be true, false, or 'partial' for tri-state.\n\t * When canSelectMany is false, this is ignored and the item is treated as a single selection.\n\t * When canSelectMany is true, this indicates the checkbox state of the item.\n\t * If undefined, the item is unchecked by default.\n\t */\n\tchecked?: boolean | 'partial';\n\n\t/**\n\t * The children of this tree item.\n\t */\n\tchildren?: readonly IQuickTreeItem[];\n}\n\n/**\n * Represents an event that occurs when the checkbox state of a tree item changes.\n * @template T - The type of the tree item.\n */\nexport interface IQuickTreeCheckboxEvent<T extends IQuickTreeItem> {\n\t/**\n\t * The tree item whose checkbox state changed.\n\t */\n\titem: T;\n\n\t/**\n\t * The new checked state.\n\t */\n\tchecked: boolean | 'partial';\n}\n\n/**\n * Represents an event that occurs when a button associated with a quick tree item is clicked.\n * @template T - The type of the quick tree item.\n */\nexport interface IQuickTreeItemButtonEvent<T extends IQuickTreeItem> {\n\t/**\n\t * The button that was clicked.\n\t */\n\tbutton: IQuickInputButton;\n\t/**\n\t * The quick tree item associated with the button.\n\t */\n\titem: T;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { IQuickAccessController } from './quickAccess.js';\nimport { IMatch } from '../../../base/common/filters.js';\nimport { IItemAccessor } from '../../../base/common/fuzzyScorer.js';\nimport { ResolvedKeybinding } from '../../../base/common/keybindings.js';\nimport { IDisposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\n\nexport interface IQuickItemHighlights {\n\tlabel?: IMatch[];\n\tdescription?: IMatch[];\n}\n\nexport interface IQuickPickItemHighlights extends IQuickItemHighlights {\n\tdetail?: IMatch[];\n}\n\nexport type QuickPickItem = IQuickPickSeparator | IQuickPickItem;\n\n/**\n * Base properties for a quick pick and quick tree item.\n */\nexport interface IQuickItem {\n\tid?: string;\n\tlabel: string;\n\tariaLabel?: string;\n\tdescription?: string;\n\t/**\n\t * Whether the item is displayed in italics.\n\t */\n\titalic?: boolean;\n\t/**\n\t * Whether the item is displayed with a strikethrough.\n\t */\n\tstrikethrough?: boolean;\n\ticonClasses?: readonly string[];\n\ticonPath?: { dark: URI; light?: URI };\n\ticonClass?: string;\n\tbuttons?: readonly IQuickInputButton[];\n\t/**\n\t * Used when we're in multi-select mode. Renders a disabled checkbox.\n\t */\n\tdisabled?: boolean;\n}\n\n/**\n * Represents a quick pick item used in the quick pick UI.\n */\nexport interface IQuickPickItem extends IQuickItem {\n\t/**\n\t * The type of the quick pick item. Used to distinguish between 'item' and 'separator'\n\t */\n\ttype?: 'item';\n\t/**\n\t * The detail text of the quick pick item. Shown as the second line.\n\t */\n\tdetail?: string;\n\t/**\n\t * The tooltip for the quick pick item.\n\t */\n\ttooltip?: string | IMarkdownString;\n\thighlights?: IQuickPickItemHighlights;\n\t/**\n\t * Allows to show a keybinding next to the item to indicate\n\t * how the item can be triggered outside of the picker using\n\t * keyboard shortcut.\n\t */\n\tkeybinding?: ResolvedKeybinding;\n\t/**\n\t * Whether the item is picked by default when the Quick Pick is shown.\n\t */\n\tpicked?: boolean;\n\t/**\n\t * Whether the item is always shown in the Quick Pick regardless of filtering.\n\t */\n\talwaysShow?: boolean;\n\t/**\n\t * Defaults to true with `IQuickPick.canSelectMany`, can be false to disable picks for a single item\n\t */\n\tpickable?: boolean;\n}\n\nexport interface IQuickPickSeparator {\n\t/**\n\t * The type of the quick pick item. Used to distinguish between 'item' and 'separator'\n\t */\n\ttype: 'separator';\n\tid?: string;\n\tlabel?: string;\n\tdescription?: string;\n\tariaLabel?: string;\n\tbuttons?: readonly IQuickInputButton[];\n\ttooltip?: string | IMarkdownString;\n}\n\nexport interface IKeyMods {\n\treadonly ctrlCmd: boolean;\n\treadonly alt: boolean;\n}\n\nexport const NO_KEY_MODS: IKeyMods = { ctrlCmd: false, alt: false };\n\nexport interface IQuickNavigateConfiguration {\n\tkeybindings: readonly ResolvedKeybinding[];\n}\n\nexport interface IPickOptions<T extends IQuickPickItem> {\n\n\t/**\n\t * an optional string to show as the title of the quick input\n\t */\n\ttitle?: string;\n\n\t/**\n\t * the value to prefill in the input box\n\t */\n\tvalue?: string;\n\n\t/**\n\t * an optional string to show as placeholder in the input box to guide the user what she picks on\n\t */\n\tplaceHolder?: string;\n\n\t/**\n\t * an optional flag to include the description when filtering the picks\n\t */\n\tmatchOnDescription?: boolean;\n\n\t/**\n\t * an optional flag to include the detail when filtering the picks\n\t */\n\tmatchOnDetail?: boolean;\n\n\t/**\n\t * an optional flag to filter the picks based on label. Defaults to true.\n\t */\n\tmatchOnLabel?: boolean;\n\n\t/**\n\t * an optional flag to sort the picks based by the label.\n\t */\n\tsortByLabel?: boolean;\n\n\t/**\n\t * an optional flag to not close the picker on focus lost\n\t */\n\tignoreFocusLost?: boolean;\n\n\t/**\n\t * an optional flag to make this picker multi-select\n\t */\n\tcanPickMany?: boolean;\n\n\t/**\n\t * enables quick navigate in the picker to open an element without typing\n\t */\n\tquickNavigate?: IQuickNavigateConfiguration;\n\n\t/**\n\t * Hides the input box from the picker UI. This is typically used\n\t * in combination with quick-navigation where no search UI should\n\t * be presented.\n\t */\n\thideInput?: boolean;\n\n\t/**\n\t * a context key to set when this picker is active\n\t */\n\tcontextKey?: string;\n\n\t/**\n\t * an optional property for the item to focus initially.\n\t */\n\tactiveItem?: Promise<T> | T;\n\n\tonKeyMods?: (keyMods: IKeyMods) => void;\n\tonDidFocus?: (entry: T) => void;\n\tonDidTriggerItemButton?: (context: IQuickPickItemButtonContext<T>) => void;\n\tonDidTriggerSeparatorButton?: (context: IQuickPickSeparatorButtonEvent) => void;\n}\n\nexport interface IInputOptions {\n\n\t/**\n\t * an optional string to show as the title of the quick input\n\t */\n\ttitle?: string;\n\n\t/**\n\t * the value to prefill in the input box\n\t */\n\tvalue?: string;\n\n\t/**\n\t * the selection of value, default to the whole prefilled value\n\t */\n\tvalueSelection?: readonly [number, number];\n\n\t/**\n\t * the text to display underneath the input box\n\t */\n\tprompt?: string;\n\n\t/**\n\t * an optional string to show as placeholder in the input box to guide the user what to type\n\t */\n\tplaceHolder?: string;\n\n\t/**\n\t * Controls if a password input is shown. Password input hides the typed text.\n\t */\n\tpassword?: boolean;\n\n\t/**\n\t * an optional flag to not close the input on focus lost\n\t */\n\tignoreFocusLost?: boolean;\n\n\t/**\n\t * an optional function that is used to validate user input.\n\t */\n\tvalidateInput?: (input: string) => Promise<string | null | undefined | { content: string; severity: Severity }>;\n}\n\nexport enum QuickInputHideReason {\n\n\t/**\n\t * Focus moved away from the quick input.\n\t */\n\tBlur = 1,\n\n\t/**\n\t * An explicit user gesture, e.g. pressing Escape key.\n\t */\n\tGesture,\n\n\t/**\n\t * Anything else.\n\t */\n\tOther\n}\n\nexport interface IQuickInputHideEvent {\n\treason: QuickInputHideReason;\n}\n\n/**\n * A collection of the different types of QuickInput\n */\nexport const enum QuickInputType {\n\tQuickPick = 'quickPick',\n\tInputBox = 'inputBox',\n\tQuickWidget = 'quickWidget',\n\tQuickTree = 'quickTree'\n}\n\n/**\n * Represents a quick input control that allows users to make selections or provide input quickly.\n */\nexport interface IQuickInput extends IDisposable {\n\n\t/**\n\t * The type of the quick input.\n\t */\n\treadonly type: QuickInputType;\n\n\t/**\n\t * An event that is fired when the quick input is hidden.\n\t */\n\treadonly onDidHide: Event<IQuickInputHideEvent>;\n\n\t/**\n\t * The title of the quick input.\n\t */\n\ttitle: string | undefined;\n\n\t/**\n\t * The context key associated with the quick input.\n\t */\n\tcontextKey: string | undefined;\n\n\t/**\n\t * Indicates whether the quick input is busy. Renders a progress bar if true.\n\t */\n\tbusy: boolean;\n\n\t/**\n\t * Indicates whether the quick input should be hidden when it loses focus.\n\t */\n\tignoreFocusOut: boolean;\n\n\t/**\n\t * Shows the quick input.\n\t */\n\tshow(): void;\n\n\t/**\n\t * Hides the quick input.\n\t */\n\thide(): void;\n\n\t/**\n\t * Notifies that the quick input has been hidden.\n\t * @param reason The reason why the quick input was hidden.\n\t */\n\tdidHide(reason?: QuickInputHideReason): void;\n\n\t/**\n\t * Notifies that the quick input will be hidden.\n\t * @param reason The reason why the quick input will be hidden.\n\t */\n\twillHide(reason?: QuickInputHideReason): void;\n}\n\nexport interface IQuickPickWillAcceptEvent {\n\n\t/**\n\t * Allows to disable the default accept handling\n\t * of the picker. If `veto` is called, the picker\n\t * will not trigger the `onDidAccept` event.\n\t */\n\tveto(): void;\n}\n\nexport interface IQuickPickDidAcceptEvent {\n\n\t/**\n\t * Signals if the picker item is to be accepted\n\t * in the background while keeping the picker open.\n\t */\n\tinBackground: boolean;\n}\n\n/**\n * Represents the activation behavior for items in a quick input. This means which item will be\n * \"active\" (aka focused).\n */\nexport enum ItemActivation {\n\t/**\n\t * No item will be active.\n\t */\n\tNONE,\n\t/**\n\t * First item will be active.\n\t */\n\tFIRST,\n\t/**\n\t * Second item will be active.\n\t */\n\tSECOND,\n\t/**\n\t * Last item will be active.\n\t */\n\tLAST\n}\n\n/**\n * Represents the focus options for a quick pick.\n */\nexport enum QuickPickFocus {\n\t/**\n\t * Focus the first item in the list.\n\t */\n\tFirst = 1,\n\t/**\n\t * Focus the second item in the list.\n\t */\n\tSecond,\n\t/**\n\t * Focus the last item in the list.\n\t */\n\tLast,\n\t/**\n\t * Focus the next item in the list.\n\t */\n\tNext,\n\t/**\n\t * Focus the previous item in the list.\n\t */\n\tPrevious,\n\t/**\n\t * Focus the next page in the list.\n\t */\n\tNextPage,\n\t/**\n\t * Focus the previous page in the list.\n\t */\n\tPreviousPage,\n\t/**\n\t * Focus the first item under the next separator.\n\t */\n\tNextSeparator,\n\t/**\n\t * Focus the first item under the current separator.\n\t */\n\tPreviousSeparator\n}\n\n/**\n * Represents a quick pick control that allows the user to select an item from a list of options.\n */\nexport interface IQuickPick<T extends IQuickPickItem, O extends { useSeparators: boolean } = { useSeparators: false }> extends IQuickInput {\n\n\t/**\n\t * The current value of the quick pick input.\n\t */\n\tvalue: string;\n\n\t/**\n\t * A method that allows to massage the value used for filtering, e.g, to remove certain parts.\n\t * @param value The value to be filtered.\n\t * @returns The filtered value.\n\t */\n\tfilterValue: (value: string) => string;\n\n\t/**\n\t * The ARIA label for the quick pick input.\n\t */\n\tariaLabel: string | undefined;\n\n\t/**\n\t * The placeholder text for the quick pick input.\n\t */\n\tplaceholder: string | undefined;\n\n\t/**\n\t * An event that is fired when the value of the quick pick input changes.\n\t */\n\treadonly onDidChangeValue: Event<string>;\n\n\t/**\n\t * An event that is fired when the quick pick is about to accept the selected item.\n\t */\n\treadonly onWillAccept: Event<IQuickPickWillAcceptEvent>;\n\n\t/**\n\t * An event that is fired when the quick pick has accepted the selected item.\n\t */\n\treadonly onDidAccept: Event<IQuickPickDidAcceptEvent>;\n\n\t/**\n\t * If enabled, the `onDidAccept` event will be fired when pressing the arrow-right key to accept the selected item without closing the picker.\n\t */\n\tcanAcceptInBackground: boolean;\n\n\t/**\n\t * An event that is fired when an item button is triggered.\n\t */\n\treadonly onDidTriggerItemButton: Event<IQuickPickItemButtonEvent<T>>;\n\n\t/**\n\t * An event that is fired when a separator button is triggered.\n\t */\n\treadonly onDidTriggerSeparatorButton: Event<IQuickPickSeparatorButtonEvent>;\n\n\t/**\n\t * The items to be displayed in the quick pick.\n\t */\n\titems: O extends { useSeparators: true } ? ReadonlyArray<T | IQuickPickSeparator> : ReadonlyArray<T>;\n\n\t/**\n\t * Whether multiple items can be selected. If so, checkboxes will be rendered.\n\t */\n\tcanSelectMany: boolean;\n\n\t/**\n\t * Whether to match on the description of the items.\n\t */\n\tmatchOnDescription: boolean;\n\n\t/**\n\t * Whether to match on the detail of the items.\n\t */\n\tmatchOnDetail: boolean;\n\n\t/**\n\t * Whether to match on the label of the items.\n\t */\n\tmatchOnLabel: boolean;\n\n\t/**\n\t * Whether to sort the items by label.\n\t */\n\tsortByLabel: boolean;\n\n\t/**\n\t * Whether to keep the scroll position when the quick pick input is updated.\n\t */\n\tkeepScrollPosition: boolean;\n\n\t/**\n\t * The configuration for quick navigation.\n\t */\n\tquickNavigate: IQuickNavigateConfiguration | undefined;\n\n\t/**\n\t * The currently active items.\n\t */\n\tactiveItems: ReadonlyArray<T>;\n\n\t/**\n\t * An event that is fired when the active items change.\n\t */\n\treadonly onDidChangeActive: Event<T[]>;\n\n\t/**\n\t * The item activation behavior for the next time `items` is set. Item activation means which\n\t * item is \"active\" (aka focused) when the quick pick is opened or when `items` is set.\n\t */\n\titemActivation: ItemActivation;\n\n\t/**\n\t * The currently selected items.\n\t */\n\tselectedItems: ReadonlyArray<T>;\n\n\t/**\n\t * An event that is fired when the selected items change.\n\t */\n\treadonly onDidChangeSelection: Event<T[]>;\n\n\t/**\n\t * The key modifiers.\n\t */\n\treadonly keyMods: IKeyMods;\n\n\t/**\n\t * The selection range for the value in the input.\n\t */\n\tvalueSelection: Readonly<[number, number]> | undefined;\n\n\t/**\n\t * Hides the input box from the picker UI. This is typically used in combination with quick-navigation where no search UI should be presented.\n\t */\n\thideInput: boolean;\n\n\t/**\n\t * Focus a particular item in the list. Used internally for keyboard navigation.\n\t * @param focus The focus behavior.\n\t */\n\tfocus(focus: QuickPickFocus): void;\n\n\t/**\n\t * Programmatically accepts an item. Used internally for keyboard navigation.\n\t * @param inBackground Whether you are accepting an item in the background and keeping the picker open.\n\t */\n\taccept(inBackground?: boolean): void;\n}\n\n/**\n * Represents a toggle for quick input.\n */\nexport interface IQuickInputToggle {\n}\n\n/**\n * Represents an input box in a quick input dialog.\n */\nexport interface IInputBox extends IQuickInput {\n\n\t/**\n\t * Value shown in the input box.\n\t */\n\tvalue: string;\n\n\t/**\n\t * Provide start and end values to be selected in the input box.\n\t */\n\tvalueSelection: Readonly<[number, number]> | undefined;\n\n\t/**\n\t * Value shown as example for input.\n\t */\n\tplaceholder: string | undefined;\n\n\t/**\n\t * Determines if the input value should be hidden while typing.\n\t */\n\tpassword: boolean;\n\n\t/**\n\t * Event called when the input value changes.\n\t */\n\treadonly onDidChangeValue: Event<string>;\n\n\t/**\n\t * Event called when the user submits the input.\n\t */\n\treadonly onDidAccept: Event<void>;\n\n\t/**\n\t * Text show below the input box.\n\t */\n\tprompt: string | undefined;\n\n\t/**\n\t * An optional validation message indicating a problem with the current input value.\n\t * Returning undefined clears the validation message.\n\t */\n\tvalidationMessage: string | undefined;\n\n\t/**\n\t * Severity of the input validation message.\n\t */\n\tseverity: Severity;\n}\n\nexport enum QuickInputButtonLocation {\n\t/**\n\t * In the title bar.\n\t */\n\tTitle = 1,\n\n\t/**\n\t * To the right of the input box.\n\t */\n\tInline = 2\n}\n\n/**\n * Represents a button in the quick input UI.\n */\nexport interface IQuickInputButton {\n\t/**\n\t * The path to the icon for the button.\n\t * Either `iconPath` or `iconClass` is required.\n\t */\n\ticonPath?: { dark: URI; light?: URI };\n\t/**\n\t * The CSS class for the icon of the button.\n\t * Either `iconPath` or `iconClass` is required.\n\t */\n\ticonClass?: string;\n\t/**\n\t * The tooltip text for the button.\n\t */\n\ttooltip?: string;\n\t/**\n\t * Whether to always show the button.\n\t * By default, buttons are only visible when hovering over them with the mouse.\n\t */\n\talwaysVisible?: boolean;\n\t/**\n\t * Where the button should be rendered. The default is {@link QuickInputButtonLocation.Title}.\n\t * @note This property is ignored if the button was added to a QuickPickItem.\n\t */\n\tlocation?: QuickInputButtonLocation;\n}\n\n/**\n * Represents an event that occurs when a button associated with a quick pick item is clicked.\n * @template T - The type of the quick pick item.\n */\nexport interface IQuickPickItemButtonEvent<T extends IQuickPickItem> {\n\t/**\n\t * The button that was clicked.\n\t */\n\tbutton: IQuickInputButton;\n\t/**\n\t * The quick pick item associated with the button.\n\t */\n\titem: T;\n}\n\n/**\n * Represents an event that occurs when a separator button is clicked in a quick pick.\n */\nexport interface IQuickPickSeparatorButtonEvent {\n\t/**\n\t * The button that was clicked.\n\t */\n\tbutton: IQuickInputButton;\n\t/**\n\t * The separator associated with the button.\n\t */\n\tseparator: IQuickPickSeparator;\n}\n\n/**\n * Represents a context for a button associated with a quick pick item.\n * @template T - The type of the quick pick item.\n */\nexport interface IQuickPickItemButtonContext<T extends IQuickPickItem> extends IQuickPickItemButtonEvent<T> {\n\t/**\n\t * Removes the associated item from the quick pick.\n\t */\n\tremoveItem(): void;\n}\n\nexport type QuickPickInput<T = IQuickPickItem> = T | IQuickPickSeparator;\n\n\n//#region Fuzzy Scorer Support\n\nexport type IQuickPickItemWithResource = IQuickPickItem & { resource?: URI };\n\nexport class QuickPickItemScorerAccessor implements IItemAccessor<IQuickPickItemWithResource> {\n\n\tconstructor(private options?: { skipDescription?: boolean; skipPath?: boolean }) { }\n}\n\nexport const quickPickItemScorerAccessor = new QuickPickItemScorerAccessor();\n\n//#endregion\n\nexport const IQuickInputService = createDecorator<IQuickInputService>('quickInputService');\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport interface IQuickInputService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Provides access to the quick access providers.\n\t */\n\treadonly quickAccess: IQuickAccessController;\n\n\t/**\n\t * Opens the quick input box for selecting items and returns a promise\n\t * with the user selected item(s) if any.\n\t */\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: true }, token?: CancellationToken): Promise<T[] | undefined>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: IPickOptions<T> & { canPickMany: false }, token?: CancellationToken): Promise<T | undefined>;\n\tpick<T extends IQuickPickItem>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: Omit<IPickOptions<T>, 'canPickMany'>, token?: CancellationToken): Promise<T | undefined>;\n\n\t/**\n\t * Opens the quick input box for text input and returns a promise with the user typed value if any.\n\t */\n\tinput(options?: IInputOptions, token?: CancellationToken): Promise<string | undefined>;\n\n\t/**\n\t * Provides raw access to the quick pick controller.\n\t */\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\n\t/**\n\t * Provides raw access to the input box controller.\n\t */\n\tcreateInputBox(): IInputBox;\n\n\t/**\n\t * Toggles hover for the current quick input item\n\t */\n\ttoggleHover(): void;\n\n\t/**\n\t * The current quick pick that is visible. Undefined if none is open.\n\t */\n\tcurrentQuickInput: IQuickInput | undefined;\n}\n\n//#region Quick Tree\n\n/**\n * Represents a quick tree control that displays hierarchical data with checkboxes.\n */\nexport interface IQuickTree<T extends IQuickTreeItem> extends IQuickInput {\n\n\t/**\n\t * Focus a particular item in the list. Used internally for keyboard navigation.\n\t * @param focus The focus behavior.\n\t */\n\tfocus(focus: QuickPickFocus): void;\n}\n\n/**\n * Represents a tree item in the quick tree.\n */\nexport interface IQuickTreeItem extends IQuickItem {\n\t/**\n\t * The checked state of the item. Can be true, false, or 'partial' for tri-state.\n\t * When canSelectMany is false, this is ignored and the item is treated as a single selection.\n\t * When canSelectMany is true, this indicates the checkbox state of the item.\n\t * If undefined, the item is unchecked by default.\n\t */\n\tchecked?: boolean | 'partial';\n\n\t/**\n\t * The children of this tree item.\n\t */\n\tchildren?: readonly IQuickTreeItem[];\n}\n\n/**\n * Represents an event that occurs when the checkbox state of a tree item changes.\n * @template T - The type of the tree item.\n */\nexport interface IQuickTreeCheckboxEvent<T extends IQuickTreeItem> {\n\t/**\n\t * The tree item whose checkbox state changed.\n\t */\n\titem: T;\n\n\t/**\n\t * The new checked state.\n\t */\n\tchecked: boolean | 'partial';\n}\n\n/**\n * Represents an event that occurs when a button associated with a quick tree item is clicked.\n * @template T - The type of the quick tree item.\n */\nexport interface IQuickTreeItemButtonEvent<T extends IQuickTreeItem> {\n\t/**\n\t * The button that was clicked.\n\t */\n\tbutton: IQuickInputButton;\n\t/**\n\t * The quick tree item associated with the button.\n\t */\n\titem: T;\n}\n\n//#endregion\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;;;;AAIhG,OAAO,EAAE,eAAe,EAAE,MAAM,6CAA6C,CAAC;;AAsGvE,MAAM,WAAW,GAAa;IAAE,OAAO,EAAE,KAAK;IAAE,GAAG,EAAE,KAAK;AAAA,CAAE,CAAC;AA4HpE,IAAY,oBAgBX;AAhBD,CAAA,SAAY,oBAAoB;IAE/B;;OAEG,CACH,oBAAA,CAAA,oBAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAQ,CAAA;IAER;;OAEG,CACH,oBAAA,CAAA,oBAAA,CAAA,UAAA,GAAA,EAAA,GAAA,SAAO,CAAA;IAEP;;OAEG,CACH,oBAAA,CAAA,oBAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAK,CAAA;AACN,CAAC,EAhBW,oBAAoB,IAAA,CAApB,oBAAoB,GAAA,CAAA,CAAA,GAgB/B;AAiGD,IAAY,cAiBX;AAjBD,CAAA,SAAY,cAAc;IACzB;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAI,CAAA;IACJ;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAK,CAAA;IACL;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAM,CAAA;IACN;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAI,CAAA;AACL,CAAC,EAjBW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAiBzB;AAKD,IAAY,cAqCX;AArCD,CAAA,SAAY,cAAc;IACzB;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAS,CAAA;IACT;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAM,CAAA;IACN;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAI,CAAA;IACJ;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAI,CAAA;IACJ;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,WAAA,GAAA,EAAA,GAAA,UAAQ,CAAA;IACR;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,WAAA,GAAA,EAAA,GAAA,UAAQ,CAAA;IACR;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,eAAA,GAAA,EAAA,GAAA,cAAY,CAAA;IACZ;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,gBAAA,GAAA,EAAA,GAAA,eAAa,CAAA;IACb;;OAEG,CACH,cAAA,CAAA,cAAA,CAAA,oBAAA,GAAA,EAAA,GAAA,mBAAiB,CAAA;AAClB,CAAC,EArCW,cAAc,IAAA,CAAd,cAAc,GAAA,CAAA,CAAA,GAqCzB;AAmND,IAAY,wBAUX;AAVD,CAAA,SAAY,wBAAwB;IACnC;;OAEG,CACH,wBAAA,CAAA,wBAAA,CAAA,QAAA,GAAA,EAAA,GAAA,OAAS,CAAA;IAET;;OAEG,CACH,wBAAA,CAAA,wBAAA,CAAA,SAAA,GAAA,EAAA,GAAA,QAAU,CAAA;AACX,CAAC,EAVW,wBAAwB,IAAA,CAAxB,wBAAwB,GAAA,CAAA,CAAA,GAUnC;AA+EK,MAAO,2BAA2B;IAEvC,YAAoB,OAA2D,CAAA;QAA3D,IAAA,CAAA,OAAO,GAAP,OAAO,CAAoD;IAAI,CAAC;CACpF;AAEM,MAAM,2BAA2B,GAAG,IAAI,2BAA2B,EAAE,CAAC;AAItE,MAAM,kBAAkB,OAAG,wNAAe,EAAqB,mBAAmB,CAAC,CAAC,CA+G3F,YAAY","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/common/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/common/quickAccess.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/common/vs/platform/quickinput/common/quickAccess.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ItemActivation, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem } from './quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\n\n/**\n * Provider specific options for this particular showing of the\n * quick access.\n */\nexport interface IQuickAccessProviderRunOptions {\n\treadonly from?: string;\n\t/**\n\t * A handler to invoke when an item is accepted for\n\t * this particular showing of the quick access.\n\t * @param item The item that was accepted.\n\t */\n\treadonly handleAccept?: (item: IQuickPickItem, isBackgroundAccept: boolean) => void;\n}\n\nexport interface IQuickAccessOptions {\n\n\t/**\n\t * Allows to enable quick navigate support in quick input.\n\t */\n\treadonly quickNavigateConfiguration?: IQuickNavigateConfiguration;\n\n\t/**\n\t * Allows to configure a different item activation strategy.\n\t * By default the first item in the list will get activated.\n\t */\n\treadonly itemActivation?: ItemActivation;\n\n\t/**\n\t * Whether to take the input value as is and not restore it\n\t * from any existing value if quick access is visible.\n\t */\n\treadonly preserveValue?: boolean;\n\n\t/**\n\t * Provider specific options for this particular showing of the\n\t * quick access.\n\t */\n\treadonly providerOptions?: IQuickAccessProviderRunOptions;\n\n\t/**\n\t * An array of provider prefixes to enable for this\n\t * particular showing of the quick access.\n\t */\n\treadonly enabledProviderPrefixes?: string[];\n\n\t/**\n\t * A placeholder to use for this particular showing of the quick access.\n\t*/\n\treadonly placeholder?: string;\n}\n\nexport interface IQuickAccessController {\n\n\t/**\n\t * Open the quick access picker with the optional value prefilled.\n\t */\n\tshow(value?: string, options?: IQuickAccessOptions): void;\n}\n\nexport enum DefaultQuickAccessFilterValue {\n\n\t/**\n\t * Keep the value as it is given to quick access.\n\t */\n\tPRESERVE = 0,\n\n\t/**\n\t * Use the value that was used last time something was accepted from the picker.\n\t */\n\tLAST = 1\n}\n\nexport interface IQuickAccessProvider {\n\n\t/**\n\t * Allows to set a default filter value when the provider opens. This can be:\n\t * - `undefined` to not specify any default value\n\t * - `DefaultFilterValues.PRESERVE` to use the value that was last typed\n\t * - `string` for the actual value to use\n\t *\n\t * Note: the default filter will only be used if quick access was opened with\n\t * the exact prefix of the provider. Otherwise the filter value is preserved.\n\t */\n\treadonly defaultFilterValue?: string | DefaultQuickAccessFilterValue;\n\n\t/**\n\t * Called whenever a prefix was typed into quick pick that matches the provider.\n\t *\n\t * @param picker the picker to use for showing provider results. The picker is\n\t * automatically shown after the method returns, no need to call `show()`.\n\t * @param token providers have to check the cancellation token everytime after\n\t * a long running operation or from event handlers because it could be that the\n\t * picker has been closed or changed meanwhile. The token can be used to find out\n\t * that the picker was closed without picking an entry (e.g. was canceled by the user).\n\t * @param options additional configuration specific for this provider that will\n\t * influence what picks will be shown.\n\t * @return a disposable that will automatically be disposed when the picker\n\t * closes or is replaced by another picker.\n\t */\n\tprovide(picker: IQuickPick<IQuickPickItem, { useSeparators: true }>, token: CancellationToken, options?: IQuickAccessProviderRunOptions): IDisposable;\n}\n\nexport interface IQuickAccessProviderHelp {\n\n\t/**\n\t * The prefix to show for the help entry. If not provided,\n\t * the prefix used for registration will be taken.\n\t */\n\treadonly prefix?: string;\n\n\t/**\n\t * A description text to help understand the intent of the provider.\n\t */\n\treadonly description: string;\n\n\t/**\n\t * The command to bring up this quick access provider.\n\t */\n\treadonly commandId?: string;\n}\n\nexport interface IQuickAccessProviderDescriptor {\n\n\t/**\n\t * The actual provider that will be instantiated as needed.\n\t */\n\treadonly ctor: { new(...services: any /* TS BrandedService but no clue how to type this properly */[]): IQuickAccessProvider };\n\n\t/**\n\t * The prefix for quick access picker to use the provider for.\n\t */\n\treadonly prefix: string;\n\n\t/**\n\t * A placeholder to use for the input field when the provider is active.\n\t * This will also be read out by screen readers and thus helps for\n\t * accessibility.\n\t */\n\treadonly placeholder?: string;\n\n\t/**\n\t * Documentation for the provider in the quick access help.\n\t */\n\treadonly helpEntries: IQuickAccessProviderHelp[];\n\n\t/**\n\t * A context key that will be set automatically when the\n\t * picker for the provider is showing.\n\t */\n\treadonly contextKey?: string;\n}\n\nexport const Extensions = {\n\tQuickaccess: 'workbench.contributions.quickaccess'\n};\n\nexport interface IQuickAccessRegistry {\n\n\t/**\n\t * Registers a quick access provider to the platform.\n\t */\n\tregisterQuickAccessProvider(provider: IQuickAccessProviderDescriptor): IDisposable;\n\n\t/**\n\t * Get all registered quick access providers.\n\t */\n\tgetQuickAccessProviders(): IQuickAccessProviderDescriptor[];\n\n\t/**\n\t * Get a specific quick access provider for a given prefix.\n\t */\n\tgetQuickAccessProvider(prefix: string): IQuickAccessProviderDescriptor | undefined;\n}\n\nexport class QuickAccessRegistry implements IQuickAccessRegistry {\n\n\tprivate providers: IQuickAccessProviderDescriptor[] = [];\n\tprivate defaultProvider: IQuickAccessProviderDescriptor | undefined = undefined;\n\n\tregisterQuickAccessProvider(provider: IQuickAccessProviderDescriptor): IDisposable {\n\n\t\t// Extract the default provider when no prefix is present\n\t\tif (provider.prefix.length === 0) {\n\t\t\tthis.defaultProvider = provider;\n\t\t} else {\n\t\t\tthis.providers.push(provider);\n\t\t}\n\n\t\t// sort the providers by decreasing prefix length, such that longer\n\t\t// prefixes take priority: 'ext' vs 'ext install' - the latter should win\n\t\tthis.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.providers.splice(this.providers.indexOf(provider), 1);\n\n\t\t\tif (this.defaultProvider === provider) {\n\t\t\t\tthis.defaultProvider = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tgetQuickAccessProviders(): IQuickAccessProviderDescriptor[] {\n\t\treturn coalesce([this.defaultProvider, ...this.providers]);\n\t}\n\n\tgetQuickAccessProvider(prefix: string): IQuickAccessProviderDescriptor | undefined {\n\t\tconst result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\n\n\t\treturn result || this.defaultProvider;\n\t}\n}\n\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { IDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ItemActivation, IQuickNavigateConfiguration, IQuickPick, IQuickPickItem } from './quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\n\n/**\n * Provider specific options for this particular showing of the\n * quick access.\n */\nexport interface IQuickAccessProviderRunOptions {\n\treadonly from?: string;\n\t/**\n\t * A handler to invoke when an item is accepted for\n\t * this particular showing of the quick access.\n\t * @param item The item that was accepted.\n\t */\n\treadonly handleAccept?: (item: IQuickPickItem, isBackgroundAccept: boolean) => void;\n}\n\nexport interface IQuickAccessOptions {\n\n\t/**\n\t * Allows to enable quick navigate support in quick input.\n\t */\n\treadonly quickNavigateConfiguration?: IQuickNavigateConfiguration;\n\n\t/**\n\t * Allows to configure a different item activation strategy.\n\t * By default the first item in the list will get activated.\n\t */\n\treadonly itemActivation?: ItemActivation;\n\n\t/**\n\t * Whether to take the input value as is and not restore it\n\t * from any existing value if quick access is visible.\n\t */\n\treadonly preserveValue?: boolean;\n\n\t/**\n\t * Provider specific options for this particular showing of the\n\t * quick access.\n\t */\n\treadonly providerOptions?: IQuickAccessProviderRunOptions;\n\n\t/**\n\t * An array of provider prefixes to enable for this\n\t * particular showing of the quick access.\n\t */\n\treadonly enabledProviderPrefixes?: string[];\n\n\t/**\n\t * A placeholder to use for this particular showing of the quick access.\n\t*/\n\treadonly placeholder?: string;\n}\n\nexport interface IQuickAccessController {\n\n\t/**\n\t * Open the quick access picker with the optional value prefilled.\n\t */\n\tshow(value?: string, options?: IQuickAccessOptions): void;\n}\n\nexport enum DefaultQuickAccessFilterValue {\n\n\t/**\n\t * Keep the value as it is given to quick access.\n\t */\n\tPRESERVE = 0,\n\n\t/**\n\t * Use the value that was used last time something was accepted from the picker.\n\t */\n\tLAST = 1\n}\n\nexport interface IQuickAccessProvider {\n\n\t/**\n\t * Allows to set a default filter value when the provider opens. This can be:\n\t * - `undefined` to not specify any default value\n\t * - `DefaultFilterValues.PRESERVE` to use the value that was last typed\n\t * - `string` for the actual value to use\n\t *\n\t * Note: the default filter will only be used if quick access was opened with\n\t * the exact prefix of the provider. Otherwise the filter value is preserved.\n\t */\n\treadonly defaultFilterValue?: string | DefaultQuickAccessFilterValue;\n\n\t/**\n\t * Called whenever a prefix was typed into quick pick that matches the provider.\n\t *\n\t * @param picker the picker to use for showing provider results. The picker is\n\t * automatically shown after the method returns, no need to call `show()`.\n\t * @param token providers have to check the cancellation token everytime after\n\t * a long running operation or from event handlers because it could be that the\n\t * picker has been closed or changed meanwhile. The token can be used to find out\n\t * that the picker was closed without picking an entry (e.g. was canceled by the user).\n\t * @param options additional configuration specific for this provider that will\n\t * influence what picks will be shown.\n\t * @return a disposable that will automatically be disposed when the picker\n\t * closes or is replaced by another picker.\n\t */\n\tprovide(picker: IQuickPick<IQuickPickItem, { useSeparators: true }>, token: CancellationToken, options?: IQuickAccessProviderRunOptions): IDisposable;\n}\n\nexport interface IQuickAccessProviderHelp {\n\n\t/**\n\t * The prefix to show for the help entry. If not provided,\n\t * the prefix used for registration will be taken.\n\t */\n\treadonly prefix?: string;\n\n\t/**\n\t * A description text to help understand the intent of the provider.\n\t */\n\treadonly description: string;\n\n\t/**\n\t * The command to bring up this quick access provider.\n\t */\n\treadonly commandId?: string;\n}\n\nexport interface IQuickAccessProviderDescriptor {\n\n\t/**\n\t * The actual provider that will be instantiated as needed.\n\t */\n\treadonly ctor: { new(...services: any /* TS BrandedService but no clue how to type this properly */[]): IQuickAccessProvider };\n\n\t/**\n\t * The prefix for quick access picker to use the provider for.\n\t */\n\treadonly prefix: string;\n\n\t/**\n\t * A placeholder to use for the input field when the provider is active.\n\t * This will also be read out by screen readers and thus helps for\n\t * accessibility.\n\t */\n\treadonly placeholder?: string;\n\n\t/**\n\t * Documentation for the provider in the quick access help.\n\t */\n\treadonly helpEntries: IQuickAccessProviderHelp[];\n\n\t/**\n\t * A context key that will be set automatically when the\n\t * picker for the provider is showing.\n\t */\n\treadonly contextKey?: string;\n}\n\nexport const Extensions = {\n\tQuickaccess: 'workbench.contributions.quickaccess'\n};\n\nexport interface IQuickAccessRegistry {\n\n\t/**\n\t * Registers a quick access provider to the platform.\n\t */\n\tregisterQuickAccessProvider(provider: IQuickAccessProviderDescriptor): IDisposable;\n\n\t/**\n\t * Get all registered quick access providers.\n\t */\n\tgetQuickAccessProviders(): IQuickAccessProviderDescriptor[];\n\n\t/**\n\t * Get a specific quick access provider for a given prefix.\n\t */\n\tgetQuickAccessProvider(prefix: string): IQuickAccessProviderDescriptor | undefined;\n}\n\nexport class QuickAccessRegistry implements IQuickAccessRegistry {\n\n\tprivate providers: IQuickAccessProviderDescriptor[] = [];\n\tprivate defaultProvider: IQuickAccessProviderDescriptor | undefined = undefined;\n\n\tregisterQuickAccessProvider(provider: IQuickAccessProviderDescriptor): IDisposable {\n\n\t\t// Extract the default provider when no prefix is present\n\t\tif (provider.prefix.length === 0) {\n\t\t\tthis.defaultProvider = provider;\n\t\t} else {\n\t\t\tthis.providers.push(provider);\n\t\t}\n\n\t\t// sort the providers by decreasing prefix length, such that longer\n\t\t// prefixes take priority: 'ext' vs 'ext install' - the latter should win\n\t\tthis.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\n\n\t\treturn toDisposable(() => {\n\t\t\tthis.providers.splice(this.providers.indexOf(provider), 1);\n\n\t\t\tif (this.defaultProvider === provider) {\n\t\t\t\tthis.defaultProvider = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tgetQuickAccessProviders(): IQuickAccessProviderDescriptor[] {\n\t\treturn coalesce([this.defaultProvider, ...this.providers]);\n\t}\n\n\tgetQuickAccessProvider(prefix: string): IQuickAccessProviderDescriptor | undefined {\n\t\tconst result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\n\n\t\treturn result || this.defaultProvider;\n\t}\n}\n\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;AAEhG,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAE1D,OAAO,EAAe,YAAY,EAAE,MAAM,mCAAmC,CAAC;AAE9E,OAAO,EAAE,QAAQ,EAAE,MAAM,mCAAmC,CAAC;;;;AA6D7D,IAAY,6BAWX;AAXD,CAAA,SAAY,6BAA6B;IAExC;;OAEG,CACH,6BAAA,CAAA,6BAAA,CAAA,WAAA,GAAA,EAAA,GAAA,UAAY,CAAA;IAEZ;;OAEG,CACH,6BAAA,CAAA,6BAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAQ,CAAA;AACT,CAAC,EAXW,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAWxC;AAkFM,MAAM,UAAU,GAAG;IACzB,WAAW,EAAE,qCAAqC;CAClD,CAAC;AAoBI,MAAO,mBAAmB;IAAhC,aAAA;QAES,IAAA,CAAA,SAAS,GAAqC,EAAE,CAAC;QACjD,IAAA,CAAA,eAAe,GAA+C,SAAS,CAAC;IAiCjF,CAAC;IA/BA,2BAA2B,CAAC,QAAwC,EAAA;QAEnE,yDAAyD;QACzD,IAAI,QAAQ,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;QACjC,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,CAAC;QAED,mEAAmE;QACnE,yEAAyE;QACzE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,CAAG,CAAD,QAAU,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEjG,WAAO,4LAAY,EAAC,GAAG,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YAE3D,IAAI,IAAI,CAAC,eAAe,KAAK,QAAQ,EAAE,CAAC;gBACvC,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;YAClC,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,uBAAuB,GAAA;QACtB,WAAO,qLAAQ,EAAC;YAAC,IAAI,CAAC,eAAe,EAAE;eAAG,IAAI,CAAC,SAAS;SAAC,CAAC,CAAC;IAC5D,CAAC;IAED,sBAAsB,CAAC,MAAc,EAAA;QACpC,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,AAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAC,QAAQ,CAAC,EAAE,AAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,AAAC,SAAS,CAAC;QAEvH,OAAO,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC;IACvC,CAAC;CACD;AAED,uMAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,mBAAmB,EAAE,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/helpQuickAccess.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from '../../../nls.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Extensions, IQuickAccessProvider, IQuickAccessProviderDescriptor, IQuickAccessRegistry } from '../common/quickAccess.js';\nimport { IQuickInputService, IQuickPick, IQuickPickItem } from '../common/quickInput.js';\n\ninterface IHelpQuickAccessPickItem extends IQuickPickItem {\n\treadonly prefix: string;\n}\n\nexport class HelpQuickAccessProvider implements IQuickAccessProvider {\n\n\tstatic PREFIX = '?';\n\n\tprivate readonly registry = Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n\n\tconstructor(\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IKeybindingService private readonly keybindingService: IKeybindingService\n\t) { }\n\n\tprovide(picker: IQuickPick<IHelpQuickAccessPickItem, { useSeparators: true }>): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Open a picker with the selected value if picked\n\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (item) {\n\t\t\t\tthis.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\n\t\t\t}\n\t\t}));\n\n\t\t// Also open a picker when we detect the user typed the exact\n\t\t// name of a provider (e.g. `?term` for terminals)\n\t\tdisposables.add(picker.onDidChangeValue(value => {\n\t\t\tconst providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n\t\t\tif (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n\t\t\t\tthis.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\n\t\t\t}\n\t\t}));\n\n\t\t// Fill in all providers\n\t\tpicker.items = this.getQuickAccessProviders().filter(p => p.prefix !== HelpQuickAccessProvider.PREFIX);\n\n\t\treturn disposables;\n\t}\n\n\tgetQuickAccessProviders(): IHelpQuickAccessPickItem[] {\n\t\tconst providers: IHelpQuickAccessPickItem[] = this.registry\n\t\t\t.getQuickAccessProviders()\n\t\t\t.sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))\n\t\t\t.flatMap(provider => this.createPicks(provider));\n\n\t\treturn providers;\n\t}\n\n\tprivate createPicks(provider: IQuickAccessProviderDescriptor): IHelpQuickAccessPickItem[] {\n\t\treturn provider.helpEntries.map(helpEntry => {\n\t\t\tconst prefix = helpEntry.prefix || provider.prefix;\n\t\t\tconst label = prefix || '\\u2026' /* ... */;\n\n\t\t\treturn {\n\t\t\t\tprefix,\n\t\t\t\tlabel,\n\t\t\t\tkeybinding: helpEntry.commandId ? this.keybindingService.lookupKeybinding(helpEntry.commandId) : undefined,\n\t\t\t\tariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n\t\t\t\tdescription: helpEntry.description\n\t\t\t};\n\t\t});\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/pickerQuickAccess.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/pickerQuickAccess.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { IKeyMods, IQuickPickDidAcceptEvent, IQuickPickSeparator, IQuickPick, IQuickPickItem, IQuickInputButton } from '../common/quickInput.js';\nimport { IQuickAccessProvider, IQuickAccessProviderRunOptions } from '../common/quickAccess.js';\nimport { isFunction } from '../../../base/common/types.js';\n\nexport enum TriggerAction {\n\n\t/**\n\t * Do nothing after the button was clicked.\n\t */\n\tNO_ACTION,\n\n\t/**\n\t * Close the picker.\n\t */\n\tCLOSE_PICKER,\n\n\t/**\n\t * Update the results of the picker.\n\t */\n\tREFRESH_PICKER,\n\n\t/**\n\t * Remove the item from the picker.\n\t */\n\tREMOVE_ITEM\n}\n\nexport interface IPickerQuickAccessItem extends IQuickPickItem {\n\n\t/**\n\t* A method that will be executed when the pick item is accepted from\n\t* the picker. The picker will close automatically before running this.\n\t*\n\t* @param keyMods the state of modifier keys when the item was accepted.\n\t* @param event the underlying event that caused the accept to trigger.\n\t*/\n\taccept?(keyMods: IKeyMods, event: IQuickPickDidAcceptEvent): void;\n\n\t/**\n\t * A method that will be executed when a button of the pick item was\n\t * clicked on.\n\t *\n\t * @param buttonIndex index of the button of the item that\n\t * was clicked.\n\t *\n\t * @param the state of modifier keys when the button was triggered.\n\t *\n\t * @returns a value that indicates what should happen after the trigger\n\t * which can be a `Promise` for long running operations.\n\t */\n\ttrigger?(buttonIndex: number, keyMods: IKeyMods): TriggerAction | Promise<TriggerAction>;\n}\n\nexport interface IPickerQuickAccessSeparator extends IQuickPickSeparator {\n\t/**\n\t * A method that will be executed when a button of the pick item was\n\t * clicked on.\n\t *\n\t * @param buttonIndex index of the button of the item that\n\t * was clicked.\n\t *\n\t * @param the state of modifier keys when the button was triggered.\n\t *\n\t * @returns a value that indicates what should happen after the trigger\n\t * which can be a `Promise` for long running operations.\n\t */\n\ttrigger?(buttonIndex: number, keyMods: IKeyMods): TriggerAction | Promise<TriggerAction>;\n}\n\nexport interface IPickerQuickAccessProviderOptions<T extends IPickerQuickAccessItem> {\n\n\t/**\n\t * Enables support for opening picks in the background via gesture.\n\t */\n\treadonly canAcceptInBackground?: boolean;\n\n\t/**\n\t * Enables to show a pick entry when no results are returned from a search.\n\t */\n\treadonly noResultsPick?: T | ((filter: string) => T);\n\n\t/** Whether to skip trimming the pick filter string */\n\treadonly shouldSkipTrimPickFilter?: boolean;\n}\n\nexport type Pick<T> = T | IQuickPickSeparator;\nexport type PicksWithActive<T> = { items: readonly Pick<T>[]; active?: T };\nexport type Picks<T> = readonly Pick<T>[] | PicksWithActive<T>;\nexport type FastAndSlowPicks<T> = {\n\n\t/**\n\t * Picks that will show instantly or after a short delay\n\t * based on the `mergeDelay` property to reduce flicker.\n\t */\n\treadonly picks: Picks<T>;\n\n\t/**\n\t * Picks that will show after they have been resolved.\n\t */\n\treadonly additionalPicks: Promise<Picks<T>>;\n\n\t/**\n\t * A delay in milliseconds to wait before showing the\n\t * `picks` to give a chance to merge with `additionalPicks`\n\t * for reduced flicker.\n\t */\n\treadonly mergeDelay?: number;\n};\n\nfunction isPicksWithActive<T>(obj: unknown): obj is PicksWithActive<T> {\n\tconst candidate = obj as PicksWithActive<T>;\n\n\treturn Array.isArray(candidate.items);\n}\n\nfunction isFastAndSlowPicks<T>(obj: unknown): obj is FastAndSlowPicks<T> {\n\tconst candidate = obj as FastAndSlowPicks<T>;\n\n\treturn !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\n\nexport abstract class PickerQuickAccessProvider<T extends IPickerQuickAccessItem> extends Disposable implements IQuickAccessProvider {\n\n\tconstructor(private prefix: string, protected options?: IPickerQuickAccessProviderOptions<T>) {\n\t\tsuper();\n\t}\n\n\tprovide(picker: IQuickPick<T, { useSeparators: true }>, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Apply options if any\n\t\tpicker.canAcceptInBackground = !!this.options?.canAcceptInBackground;\n\n\t\t// Disable filtering & sorting, we control the results\n\t\tpicker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n\n\t\t// Set initial picks and update on type\n\t\tlet picksCts: CancellationTokenSource | undefined = undefined;\n\t\tconst picksDisposable = disposables.add(new MutableDisposable());\n\t\tconst updatePickerItems = async () => {\n\t\t\t// Cancel any previous ask for picks and busy\n\t\t\tpicksCts?.dispose(true);\n\t\t\tpicker.busy = false;\n\n\t\t\t// Setting the .value will call dispose() on the previous value, so we need to do this AFTER cancelling with dispose(true).\n\t\t\tconst picksDisposables = picksDisposable.value = new DisposableStore();\n\n\t\t\t// Create new cancellation source for this run\n\t\t\tpicksCts = picksDisposables.add(new CancellationTokenSource(token));\n\n\t\t\t// Collect picks and support both long running and short or combined\n\t\t\tconst picksToken = picksCts.token;\n\t\t\tlet picksFilter = picker.value.substring(this.prefix.length);\n\n\t\t\tif (!this.options?.shouldSkipTrimPickFilter) {\n\t\t\t\tpicksFilter = picksFilter.trim();\n\t\t\t}\n\n\t\t\tconst providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken, runOptions);\n\n\t\t\tconst applyPicks = (picks: Picks<T>, skipEmpty?: boolean): boolean => {\n\t\t\t\tlet items: readonly Pick<T>[];\n\t\t\t\tlet activeItem: T | undefined = undefined;\n\n\t\t\t\tif (isPicksWithActive(picks)) {\n\t\t\t\t\titems = picks.items;\n\t\t\t\t\tactiveItem = picks.active;\n\t\t\t\t} else {\n\t\t\t\t\titems = picks;\n\t\t\t\t}\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\tif (skipEmpty) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// We show the no results pick if we have no input to prevent completely empty pickers #172613\n\t\t\t\t\tif ((picksFilter.length > 0 || picker.hideInput) && this.options?.noResultsPick) {\n\t\t\t\t\t\tif (isFunction(this.options.noResultsPick)) {\n\t\t\t\t\t\t\titems = [this.options.noResultsPick(picksFilter)];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titems = [this.options.noResultsPick];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpicker.items = items;\n\t\t\t\tif (activeItem) {\n\t\t\t\t\tpicker.activeItems = [activeItem];\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\tconst applyFastAndSlowPicks = async (fastAndSlowPicks: FastAndSlowPicks<T>): Promise<void> => {\n\t\t\t\tlet fastPicksApplied = false;\n\t\t\t\tlet slowPicksApplied = false;\n\n\t\t\t\tawait Promise.all([\n\n\t\t\t\t\t// Fast Picks: if `mergeDelay` is configured, in order to reduce\n\t\t\t\t\t// amount of flicker, we race against the slow picks over some delay\n\t\t\t\t\t// and then set the fast picks.\n\t\t\t\t\t// If the slow picks are faster, we reduce the flicker by only\n\t\t\t\t\t// setting the items once.\n\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\tif (typeof fastAndSlowPicks.mergeDelay === 'number') {\n\t\t\t\t\t\t\tawait timeout(fastAndSlowPicks.mergeDelay);\n\t\t\t\t\t\t\tif (picksToken.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!slowPicksApplied) {\n\t\t\t\t\t\t\tfastPicksApplied = applyPicks(fastAndSlowPicks.picks, true /* skip over empty to reduce flicker */);\n\t\t\t\t\t\t}\n\t\t\t\t\t})(),\n\n\t\t\t\t\t// Slow Picks: we await the slow picks and then set them at\n\t\t\t\t\t// once together with the fast picks, but only if we actually\n\t\t\t\t\t// have additional results.\n\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\tpicker.busy = true;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst awaitedAdditionalPicks = await fastAndSlowPicks.additionalPicks;\n\t\t\t\t\t\t\tif (picksToken.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet picks: readonly Pick<T>[];\n\t\t\t\t\t\t\tlet activePick: Pick<T> | undefined = undefined;\n\t\t\t\t\t\t\tif (isPicksWithActive(fastAndSlowPicks.picks)) {\n\t\t\t\t\t\t\t\tpicks = fastAndSlowPicks.picks.items;\n\t\t\t\t\t\t\t\tactivePick = fastAndSlowPicks.picks.active;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpicks = fastAndSlowPicks.picks;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet additionalPicks: readonly Pick<T>[];\n\t\t\t\t\t\t\tlet additionalActivePick: Pick<T> | undefined = undefined;\n\t\t\t\t\t\t\tif (isPicksWithActive(awaitedAdditionalPicks)) {\n\t\t\t\t\t\t\t\tadditionalPicks = awaitedAdditionalPicks.items;\n\t\t\t\t\t\t\t\tadditionalActivePick = awaitedAdditionalPicks.active;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tadditionalPicks = awaitedAdditionalPicks;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalPicks.length > 0 || !fastPicksApplied) {\n\t\t\t\t\t\t\t\t// If we do not have any activePick or additionalActivePick\n\t\t\t\t\t\t\t\t// we try to preserve the currently active pick from the\n\t\t\t\t\t\t\t\t// fast results. This fixes an issue where the user might\n\t\t\t\t\t\t\t\t// have made a pick active before the additional results\n\t\t\t\t\t\t\t\t// kick in.\n\t\t\t\t\t\t\t\t// See https://github.com/microsoft/vscode/issues/102480\n\t\t\t\t\t\t\t\tlet fallbackActivePick: Pick<T> | undefined = undefined;\n\t\t\t\t\t\t\t\tif (!activePick && !additionalActivePick) {\n\t\t\t\t\t\t\t\t\tconst fallbackActivePickCandidate = picker.activeItems[0];\n\t\t\t\t\t\t\t\t\tif (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n\t\t\t\t\t\t\t\t\t\tfallbackActivePick = fallbackActivePickCandidate;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tapplyPicks({\n\t\t\t\t\t\t\t\t\titems: [...picks, ...additionalPicks],\n\t\t\t\t\t\t\t\t\tactive: activePick || additionalActivePick || fallbackActivePick\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (!picksToken.isCancellationRequested) {\n\t\t\t\t\t\t\t\tpicker.busy = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tslowPicksApplied = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t]);\n\t\t\t};\n\n\t\t\t// No Picks\n\t\t\tif (providedPicks === null) {\n\t\t\t\t// Ignore\n\t\t\t}\n\n\t\t\t// Fast and Slow Picks\n\t\t\telse if (isFastAndSlowPicks(providedPicks)) {\n\t\t\t\tawait applyFastAndSlowPicks(providedPicks);\n\t\t\t}\n\n\t\t\t// Fast Picks\n\t\t\telse if (!(providedPicks instanceof Promise)) {\n\t\t\t\tapplyPicks(providedPicks);\n\t\t\t}\n\n\t\t\t// Slow Picks\n\t\t\telse {\n\t\t\t\tpicker.busy = true;\n\t\t\t\ttry {\n\t\t\t\t\tconst awaitedPicks = await providedPicks;\n\t\t\t\t\tif (picksToken.isCancellationRequested) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isFastAndSlowPicks(awaitedPicks)) {\n\t\t\t\t\t\tawait applyFastAndSlowPicks(awaitedPicks);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapplyPicks(awaitedPicks);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (!picksToken.isCancellationRequested) {\n\t\t\t\t\t\tpicker.busy = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tdisposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n\t\tupdatePickerItems();\n\n\t\t// Accept the pick on accept and hide picker\n\t\tdisposables.add(picker.onDidAccept(event => {\n\t\t\tif (runOptions?.handleAccept) {\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide(); // hide picker unless we accept in background\n\t\t\t\t}\n\t\t\t\trunOptions.handleAccept?.(picker.activeItems[0], event.inBackground);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (typeof item?.accept === 'function') {\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide(); // hide picker unless we accept in background\n\t\t\t\t}\n\n\t\t\t\titem.accept(picker.keyMods, event);\n\t\t\t}\n\t\t}));\n\n\t\tconst buttonTrigger = async (button: IQuickInputButton, item: T | IPickerQuickAccessSeparator) => {\n\t\t\tif (typeof item.trigger !== 'function') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst buttonIndex = item.buttons?.indexOf(button) ?? -1;\n\t\t\tif (buttonIndex >= 0) {\n\t\t\t\tconst result = item.trigger(buttonIndex, picker.keyMods);\n\t\t\t\tconst action = (typeof result === 'number') ? result : await result;\n\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase TriggerAction.NO_ACTION:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TriggerAction.CLOSE_PICKER:\n\t\t\t\t\t\tpicker.hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TriggerAction.REFRESH_PICKER:\n\t\t\t\t\t\tupdatePickerItems();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TriggerAction.REMOVE_ITEM: {\n\t\t\t\t\t\tconst index = picker.items.indexOf(item);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\tconst items = picker.items.slice();\n\t\t\t\t\t\t\tconst removed = items.splice(index, 1);\n\t\t\t\t\t\t\tconst activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n\t\t\t\t\t\t\tconst keepScrollPositionBefore = picker.keepScrollPosition;\n\t\t\t\t\t\t\tpicker.keepScrollPosition = true;\n\t\t\t\t\t\t\tpicker.items = items;\n\t\t\t\t\t\t\tif (activeItems) {\n\t\t\t\t\t\t\t\tpicker.activeItems = activeItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpicker.keepScrollPosition = keepScrollPositionBefore;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Trigger the pick with button index if button triggered\n\t\tdisposables.add(picker.onDidTriggerItemButton(({ button, item }) => buttonTrigger(button, item)));\n\t\tdisposables.add(picker.onDidTriggerSeparatorButton(({ button, separator }) => buttonTrigger(button, separator)));\n\n\t\treturn disposables;\n\t}\n\n\t/**\n\t * Returns an array of picks and separators as needed. If the picks are resolved\n\t * long running, the provided cancellation token should be used to cancel the\n\t * operation when the token signals this.\n\t *\n\t * The implementor is responsible for filtering and sorting the picks given the\n\t * provided `filter`.\n\t *\n\t * @param filter a filter to apply to the picks.\n\t * @param disposables can be used to register disposables that should be cleaned\n\t * up when the picker closes.\n\t * @param token for long running tasks, implementors need to check on cancellation\n\t * through this token.\n\t * @returns the picks either directly, as promise or combined fast and slow results.\n\t * Pickers can return `null` to signal that no change in picks is needed.\n\t */\n\tprotected abstract _getPicks(filter: string, disposables: DisposableStore, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): Picks<T> | Promise<Picks<T> | FastAndSlowPicks<T>> | FastAndSlowPicks<T> | null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { IKeyMods, IQuickPickDidAcceptEvent, IQuickPickSeparator, IQuickPick, IQuickPickItem, IQuickInputButton } from '../common/quickInput.js';\nimport { IQuickAccessProvider, IQuickAccessProviderRunOptions } from '../common/quickAccess.js';\nimport { isFunction } from '../../../base/common/types.js';\n\nexport enum TriggerAction {\n\n\t/**\n\t * Do nothing after the button was clicked.\n\t */\n\tNO_ACTION,\n\n\t/**\n\t * Close the picker.\n\t */\n\tCLOSE_PICKER,\n\n\t/**\n\t * Update the results of the picker.\n\t */\n\tREFRESH_PICKER,\n\n\t/**\n\t * Remove the item from the picker.\n\t */\n\tREMOVE_ITEM\n}\n\nexport interface IPickerQuickAccessItem extends IQuickPickItem {\n\n\t/**\n\t* A method that will be executed when the pick item is accepted from\n\t* the picker. The picker will close automatically before running this.\n\t*\n\t* @param keyMods the state of modifier keys when the item was accepted.\n\t* @param event the underlying event that caused the accept to trigger.\n\t*/\n\taccept?(keyMods: IKeyMods, event: IQuickPickDidAcceptEvent): void;\n\n\t/**\n\t * A method that will be executed when a button of the pick item was\n\t * clicked on.\n\t *\n\t * @param buttonIndex index of the button of the item that\n\t * was clicked.\n\t *\n\t * @param the state of modifier keys when the button was triggered.\n\t *\n\t * @returns a value that indicates what should happen after the trigger\n\t * which can be a `Promise` for long running operations.\n\t */\n\ttrigger?(buttonIndex: number, keyMods: IKeyMods): TriggerAction | Promise<TriggerAction>;\n}\n\nexport interface IPickerQuickAccessSeparator extends IQuickPickSeparator {\n\t/**\n\t * A method that will be executed when a button of the pick item was\n\t * clicked on.\n\t *\n\t * @param buttonIndex index of the button of the item that\n\t * was clicked.\n\t *\n\t * @param the state of modifier keys when the button was triggered.\n\t *\n\t * @returns a value that indicates what should happen after the trigger\n\t * which can be a `Promise` for long running operations.\n\t */\n\ttrigger?(buttonIndex: number, keyMods: IKeyMods): TriggerAction | Promise<TriggerAction>;\n}\n\nexport interface IPickerQuickAccessProviderOptions<T extends IPickerQuickAccessItem> {\n\n\t/**\n\t * Enables support for opening picks in the background via gesture.\n\t */\n\treadonly canAcceptInBackground?: boolean;\n\n\t/**\n\t * Enables to show a pick entry when no results are returned from a search.\n\t */\n\treadonly noResultsPick?: T | ((filter: string) => T);\n\n\t/** Whether to skip trimming the pick filter string */\n\treadonly shouldSkipTrimPickFilter?: boolean;\n}\n\nexport type Pick<T> = T | IQuickPickSeparator;\nexport type PicksWithActive<T> = { items: readonly Pick<T>[]; active?: T };\nexport type Picks<T> = readonly Pick<T>[] | PicksWithActive<T>;\nexport type FastAndSlowPicks<T> = {\n\n\t/**\n\t * Picks that will show instantly or after a short delay\n\t * based on the `mergeDelay` property to reduce flicker.\n\t */\n\treadonly picks: Picks<T>;\n\n\t/**\n\t * Picks that will show after they have been resolved.\n\t */\n\treadonly additionalPicks: Promise<Picks<T>>;\n\n\t/**\n\t * A delay in milliseconds to wait before showing the\n\t * `picks` to give a chance to merge with `additionalPicks`\n\t * for reduced flicker.\n\t */\n\treadonly mergeDelay?: number;\n};\n\nfunction isPicksWithActive<T>(obj: unknown): obj is PicksWithActive<T> {\n\tconst candidate = obj as PicksWithActive<T>;\n\n\treturn Array.isArray(candidate.items);\n}\n\nfunction isFastAndSlowPicks<T>(obj: unknown): obj is FastAndSlowPicks<T> {\n\tconst candidate = obj as FastAndSlowPicks<T>;\n\n\treturn !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\n\nexport abstract class PickerQuickAccessProvider<T extends IPickerQuickAccessItem> extends Disposable implements IQuickAccessProvider {\n\n\tconstructor(private prefix: string, protected options?: IPickerQuickAccessProviderOptions<T>) {\n\t\tsuper();\n\t}\n\n\tprovide(picker: IQuickPick<T, { useSeparators: true }>, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Apply options if any\n\t\tpicker.canAcceptInBackground = !!this.options?.canAcceptInBackground;\n\n\t\t// Disable filtering & sorting, we control the results\n\t\tpicker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n\n\t\t// Set initial picks and update on type\n\t\tlet picksCts: CancellationTokenSource | undefined = undefined;\n\t\tconst picksDisposable = disposables.add(new MutableDisposable());\n\t\tconst updatePickerItems = async () => {\n\t\t\t// Cancel any previous ask for picks and busy\n\t\t\tpicksCts?.dispose(true);\n\t\t\tpicker.busy = false;\n\n\t\t\t// Setting the .value will call dispose() on the previous value, so we need to do this AFTER cancelling with dispose(true).\n\t\t\tconst picksDisposables = picksDisposable.value = new DisposableStore();\n\n\t\t\t// Create new cancellation source for this run\n\t\t\tpicksCts = picksDisposables.add(new CancellationTokenSource(token));\n\n\t\t\t// Collect picks and support both long running and short or combined\n\t\t\tconst picksToken = picksCts.token;\n\t\t\tlet picksFilter = picker.value.substring(this.prefix.length);\n\n\t\t\tif (!this.options?.shouldSkipTrimPickFilter) {\n\t\t\t\tpicksFilter = picksFilter.trim();\n\t\t\t}\n\n\t\t\tconst providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken, runOptions);\n\n\t\t\tconst applyPicks = (picks: Picks<T>, skipEmpty?: boolean): boolean => {\n\t\t\t\tlet items: readonly Pick<T>[];\n\t\t\t\tlet activeItem: T | undefined = undefined;\n\n\t\t\t\tif (isPicksWithActive(picks)) {\n\t\t\t\t\titems = picks.items;\n\t\t\t\t\tactiveItem = picks.active;\n\t\t\t\t} else {\n\t\t\t\t\titems = picks;\n\t\t\t\t}\n\n\t\t\t\tif (items.length === 0) {\n\t\t\t\t\tif (skipEmpty) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// We show the no results pick if we have no input to prevent completely empty pickers #172613\n\t\t\t\t\tif ((picksFilter.length > 0 || picker.hideInput) && this.options?.noResultsPick) {\n\t\t\t\t\t\tif (isFunction(this.options.noResultsPick)) {\n\t\t\t\t\t\t\titems = [this.options.noResultsPick(picksFilter)];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titems = [this.options.noResultsPick];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpicker.items = items;\n\t\t\t\tif (activeItem) {\n\t\t\t\t\tpicker.activeItems = [activeItem];\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\tconst applyFastAndSlowPicks = async (fastAndSlowPicks: FastAndSlowPicks<T>): Promise<void> => {\n\t\t\t\tlet fastPicksApplied = false;\n\t\t\t\tlet slowPicksApplied = false;\n\n\t\t\t\tawait Promise.all([\n\n\t\t\t\t\t// Fast Picks: if `mergeDelay` is configured, in order to reduce\n\t\t\t\t\t// amount of flicker, we race against the slow picks over some delay\n\t\t\t\t\t// and then set the fast picks.\n\t\t\t\t\t// If the slow picks are faster, we reduce the flicker by only\n\t\t\t\t\t// setting the items once.\n\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\tif (typeof fastAndSlowPicks.mergeDelay === 'number') {\n\t\t\t\t\t\t\tawait timeout(fastAndSlowPicks.mergeDelay);\n\t\t\t\t\t\t\tif (picksToken.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!slowPicksApplied) {\n\t\t\t\t\t\t\tfastPicksApplied = applyPicks(fastAndSlowPicks.picks, true /* skip over empty to reduce flicker */);\n\t\t\t\t\t\t}\n\t\t\t\t\t})(),\n\n\t\t\t\t\t// Slow Picks: we await the slow picks and then set them at\n\t\t\t\t\t// once together with the fast picks, but only if we actually\n\t\t\t\t\t// have additional results.\n\n\t\t\t\t\t(async () => {\n\t\t\t\t\t\tpicker.busy = true;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst awaitedAdditionalPicks = await fastAndSlowPicks.additionalPicks;\n\t\t\t\t\t\t\tif (picksToken.isCancellationRequested) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet picks: readonly Pick<T>[];\n\t\t\t\t\t\t\tlet activePick: Pick<T> | undefined = undefined;\n\t\t\t\t\t\t\tif (isPicksWithActive(fastAndSlowPicks.picks)) {\n\t\t\t\t\t\t\t\tpicks = fastAndSlowPicks.picks.items;\n\t\t\t\t\t\t\t\tactivePick = fastAndSlowPicks.picks.active;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpicks = fastAndSlowPicks.picks;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet additionalPicks: readonly Pick<T>[];\n\t\t\t\t\t\t\tlet additionalActivePick: Pick<T> | undefined = undefined;\n\t\t\t\t\t\t\tif (isPicksWithActive(awaitedAdditionalPicks)) {\n\t\t\t\t\t\t\t\tadditionalPicks = awaitedAdditionalPicks.items;\n\t\t\t\t\t\t\t\tadditionalActivePick = awaitedAdditionalPicks.active;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tadditionalPicks = awaitedAdditionalPicks;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (additionalPicks.length > 0 || !fastPicksApplied) {\n\t\t\t\t\t\t\t\t// If we do not have any activePick or additionalActivePick\n\t\t\t\t\t\t\t\t// we try to preserve the currently active pick from the\n\t\t\t\t\t\t\t\t// fast results. This fixes an issue where the user might\n\t\t\t\t\t\t\t\t// have made a pick active before the additional results\n\t\t\t\t\t\t\t\t// kick in.\n\t\t\t\t\t\t\t\t// See https://github.com/microsoft/vscode/issues/102480\n\t\t\t\t\t\t\t\tlet fallbackActivePick: Pick<T> | undefined = undefined;\n\t\t\t\t\t\t\t\tif (!activePick && !additionalActivePick) {\n\t\t\t\t\t\t\t\t\tconst fallbackActivePickCandidate = picker.activeItems[0];\n\t\t\t\t\t\t\t\t\tif (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n\t\t\t\t\t\t\t\t\t\tfallbackActivePick = fallbackActivePickCandidate;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tapplyPicks({\n\t\t\t\t\t\t\t\t\titems: [...picks, ...additionalPicks],\n\t\t\t\t\t\t\t\t\tactive: activePick || additionalActivePick || fallbackActivePick\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tif (!picksToken.isCancellationRequested) {\n\t\t\t\t\t\t\t\tpicker.busy = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tslowPicksApplied = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t})()\n\t\t\t\t]);\n\t\t\t};\n\n\t\t\t// No Picks\n\t\t\tif (providedPicks === null) {\n\t\t\t\t// Ignore\n\t\t\t}\n\n\t\t\t// Fast and Slow Picks\n\t\t\telse if (isFastAndSlowPicks(providedPicks)) {\n\t\t\t\tawait applyFastAndSlowPicks(providedPicks);\n\t\t\t}\n\n\t\t\t// Fast Picks\n\t\t\telse if (!(providedPicks instanceof Promise)) {\n\t\t\t\tapplyPicks(providedPicks);\n\t\t\t}\n\n\t\t\t// Slow Picks\n\t\t\telse {\n\t\t\t\tpicker.busy = true;\n\t\t\t\ttry {\n\t\t\t\t\tconst awaitedPicks = await providedPicks;\n\t\t\t\t\tif (picksToken.isCancellationRequested) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isFastAndSlowPicks(awaitedPicks)) {\n\t\t\t\t\t\tawait applyFastAndSlowPicks(awaitedPicks);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tapplyPicks(awaitedPicks);\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tif (!picksToken.isCancellationRequested) {\n\t\t\t\t\t\tpicker.busy = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tdisposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n\t\tupdatePickerItems();\n\n\t\t// Accept the pick on accept and hide picker\n\t\tdisposables.add(picker.onDidAccept(event => {\n\t\t\tif (runOptions?.handleAccept) {\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide(); // hide picker unless we accept in background\n\t\t\t\t}\n\t\t\t\trunOptions.handleAccept?.(picker.activeItems[0], event.inBackground);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [item] = picker.selectedItems;\n\t\t\tif (typeof item?.accept === 'function') {\n\t\t\t\tif (!event.inBackground) {\n\t\t\t\t\tpicker.hide(); // hide picker unless we accept in background\n\t\t\t\t}\n\n\t\t\t\titem.accept(picker.keyMods, event);\n\t\t\t}\n\t\t}));\n\n\t\tconst buttonTrigger = async (button: IQuickInputButton, item: T | IPickerQuickAccessSeparator) => {\n\t\t\tif (typeof item.trigger !== 'function') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst buttonIndex = item.buttons?.indexOf(button) ?? -1;\n\t\t\tif (buttonIndex >= 0) {\n\t\t\t\tconst result = item.trigger(buttonIndex, picker.keyMods);\n\t\t\t\tconst action = (typeof result === 'number') ? result : await result;\n\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase TriggerAction.NO_ACTION:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TriggerAction.CLOSE_PICKER:\n\t\t\t\t\t\tpicker.hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TriggerAction.REFRESH_PICKER:\n\t\t\t\t\t\tupdatePickerItems();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase TriggerAction.REMOVE_ITEM: {\n\t\t\t\t\t\tconst index = picker.items.indexOf(item);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\tconst items = picker.items.slice();\n\t\t\t\t\t\t\tconst removed = items.splice(index, 1);\n\t\t\t\t\t\t\tconst activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n\t\t\t\t\t\t\tconst keepScrollPositionBefore = picker.keepScrollPosition;\n\t\t\t\t\t\t\tpicker.keepScrollPosition = true;\n\t\t\t\t\t\t\tpicker.items = items;\n\t\t\t\t\t\t\tif (activeItems) {\n\t\t\t\t\t\t\t\tpicker.activeItems = activeItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpicker.keepScrollPosition = keepScrollPositionBefore;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Trigger the pick with button index if button triggered\n\t\tdisposables.add(picker.onDidTriggerItemButton(({ button, item }) => buttonTrigger(button, item)));\n\t\tdisposables.add(picker.onDidTriggerSeparatorButton(({ button, separator }) => buttonTrigger(button, separator)));\n\n\t\treturn disposables;\n\t}\n\n\t/**\n\t * Returns an array of picks and separators as needed. If the picks are resolved\n\t * long running, the provided cancellation token should be used to cancel the\n\t * operation when the token signals this.\n\t *\n\t * The implementor is responsible for filtering and sorting the picks given the\n\t * provided `filter`.\n\t *\n\t * @param filter a filter to apply to the picks.\n\t * @param disposables can be used to register disposables that should be cleaned\n\t * up when the picker closes.\n\t * @param token for long running tasks, implementors need to check on cancellation\n\t * through this token.\n\t * @returns the picks either directly, as promise or combined fast and slow results.\n\t * Pickers can return `null` to signal that no change in picks is needed.\n\t */\n\tprotected abstract _getPicks(filter: string, disposables: DisposableStore, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): Picks<T> | Promise<Picks<T> | FastAndSlowPicks<T>> | FastAndSlowPicks<T> | null;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/commandsQuickAccess.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from '../../../base/common/actions.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { matchesContiguousSubString, matchesPrefix, matchesWords, or } from '../../../base/common/filters.js';\nimport { createSingleCallFunction } from '../../../base/common/functional.js';\nimport { Disposable, DisposableStore, IDisposable } from '../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { TfIdfCalculator, normalizeTfIdfScores } from '../../../base/common/tfIdf.js';\nimport { localize } from '../../../nls.js';\nimport { ILocalizedString } from '../../action/common/action.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IConfigurationChangeEvent, IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ILogService } from '../../log/common/log.js';\nimport { FastAndSlowPicks, IPickerQuickAccessItem, IPickerQuickAccessProviderOptions, PickerQuickAccessProvider, Picks } from './pickerQuickAccess.js';\nimport { IQuickAccessProviderRunOptions } from '../common/quickAccess.js';\nimport { IQuickPickSeparator } from '../common/quickInput.js';\nimport { IStorageService, StorageScope, StorageTarget, WillSaveStateReason } from '../../storage/common/storage.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n\nexport interface ICommandQuickPick extends IPickerQuickAccessItem {\n\treadonly commandId: string;\n\treadonly commandAlias?: string;\n\treadonly commandDescription?: ILocalizedString;\n\ttfIdfScore?: number;\n\treadonly args?: any[];\n}\n\nexport interface ICommandsQuickAccessOptions extends IPickerQuickAccessProviderOptions<ICommandQuickPick> {\n\treadonly showAlias: boolean;\n\tsuggestedCommandIds?: Set<string>;\n}\n\nexport abstract class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider<ICommandQuickPick> implements IDisposable {\n\n\tstatic PREFIX = '>';\n\n\tprivate static readonly TFIDF_THRESHOLD = 0.5;\n\tprivate static readonly TFIDF_MAX_RESULTS = 5;\n\n\tprivate static WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString);\n\n\tprivate readonly commandsHistory: CommandsHistory;\n\n\tprotected override readonly options: ICommandsQuickAccessOptions;\n\n\tconstructor(\n\t\toptions: ICommandsQuickAccessOptions,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IKeybindingService protected readonly keybindingService: IKeybindingService,\n\t\t@ICommandService private readonly commandService: ICommandService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IDialogService private readonly dialogService: IDialogService\n\t) {\n\t\tsuper(AbstractCommandsQuickAccessProvider.PREFIX, options);\n\n\t\tthis.commandsHistory = this._register(instantiationService.createInstance(CommandsHistory));\n\n\t\tthis.options = options;\n\t}\n\n\tprotected async _getPicks(filter: string, _disposables: DisposableStore, token: CancellationToken, runOptions?: IQuickAccessProviderRunOptions): Promise<Picks<ICommandQuickPick> | FastAndSlowPicks<ICommandQuickPick>> {\n\n\t\t// Ask subclass for all command picks\n\t\tconst allCommandPicks = await this.getCommandPicks(token);\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst runTfidf = createSingleCallFunction(() => {\n\t\t\tconst tfidf = new TfIdfCalculator();\n\t\t\ttfidf.updateDocuments(allCommandPicks.map(commandPick => ({\n\t\t\t\tkey: commandPick.commandId,\n\t\t\t\ttextChunks: [this.getTfIdfChunk(commandPick)]\n\t\t\t})));\n\t\t\tconst result = tfidf.calculateScores(filter, token);\n\n\t\t\treturn normalizeTfIdfScores(result)\n\t\t\t\t.filter(score => score.score > AbstractCommandsQuickAccessProvider.TFIDF_THRESHOLD)\n\t\t\t\t.slice(0, AbstractCommandsQuickAccessProvider.TFIDF_MAX_RESULTS);\n\t\t});\n\n\t\t// Filter\n\t\tconst filteredCommandPicks: ICommandQuickPick[] = [];\n\t\tfor (const commandPick of allCommandPicks) {\n\t\t\tconst labelHighlights = AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.label) ?? undefined;\n\t\t\tconst aliasHighlights = commandPick.commandAlias ? AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.commandAlias) ?? undefined : undefined;\n\n\t\t\t// Add if matching in label or alias\n\t\t\tif (labelHighlights || aliasHighlights) {\n\t\t\t\tcommandPick.highlights = {\n\t\t\t\t\tlabel: labelHighlights,\n\t\t\t\t\tdetail: this.options.showAlias ? aliasHighlights : undefined\n\t\t\t\t};\n\n\t\t\t\tfilteredCommandPicks.push(commandPick);\n\t\t\t}\n\n\t\t\t// Also add if we have a 100% command ID match\n\t\t\telse if (filter === commandPick.commandId) {\n\t\t\t\tfilteredCommandPicks.push(commandPick);\n\t\t\t}\n\n\t\t\t// Handle tf-idf scoring for the rest if there's a filter\n\t\t\telse if (filter.length >= 3) {\n\t\t\t\tconst tfidf = runTfidf();\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\t// Add if we have a tf-idf score\n\t\t\t\tconst tfidfScore = tfidf.find(score => score.key === commandPick.commandId);\n\t\t\t\tif (tfidfScore) {\n\t\t\t\t\tcommandPick.tfIdfScore = tfidfScore.score;\n\t\t\t\t\tfilteredCommandPicks.push(commandPick);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add description to commands that have duplicate labels\n\t\tconst mapLabelToCommand = new Map<string, ICommandQuickPick>();\n\t\tfor (const commandPick of filteredCommandPicks) {\n\t\t\tconst existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\n\t\t\tif (existingCommandForLabel) {\n\t\t\t\tcommandPick.description = commandPick.commandId;\n\t\t\t\texistingCommandForLabel.description = existingCommandForLabel.commandId;\n\t\t\t} else {\n\t\t\t\tmapLabelToCommand.set(commandPick.label, commandPick);\n\t\t\t}\n\t\t}\n\n\t\t// Sort by MRU order and fallback to name otherwise\n\t\tfilteredCommandPicks.sort((commandPickA, commandPickB) => {\n\t\t\t// If a result came from tf-idf, we want to put that towards the bottom\n\t\t\tif (commandPickA.tfIdfScore && commandPickB.tfIdfScore) {\n\t\t\t\tif (commandPickA.tfIdfScore === commandPickB.tfIdfScore) {\n\t\t\t\t\treturn commandPickA.label.localeCompare(commandPickB.label); // prefer lexicographically smaller command\n\t\t\t\t}\n\t\t\t\treturn commandPickB.tfIdfScore - commandPickA.tfIdfScore; // prefer higher tf-idf score\n\t\t\t} else if (commandPickA.tfIdfScore) {\n\t\t\t\treturn 1; // first command has a score but other doesn't so other wins\n\t\t\t} else if (commandPickB.tfIdfScore) {\n\t\t\t\treturn -1; // other command has a score but first doesn't so first wins\n\t\t\t}\n\n\t\t\tconst commandACounter = this.commandsHistory.peek(commandPickA.commandId);\n\t\t\tconst commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\n\n\t\t\tif (commandACounter && commandBCounter) {\n\t\t\t\treturn commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\n\t\t\t}\n\n\t\t\tif (commandACounter) {\n\t\t\t\treturn -1; // first command was used, so it wins over the non used one\n\t\t\t}\n\n\t\t\tif (commandBCounter) {\n\t\t\t\treturn 1; // other command was used so it wins over the command\n\t\t\t}\n\n\t\t\tif (this.options.suggestedCommandIds) {\n\t\t\t\tconst commandASuggestion = this.options.suggestedCommandIds.has(commandPickA.commandId);\n\t\t\t\tconst commandBSuggestion = this.options.suggestedCommandIds.has(commandPickB.commandId);\n\t\t\t\tif (commandASuggestion && commandBSuggestion) {\n\t\t\t\t\treturn 0; // honor the order of the array\n\t\t\t\t}\n\n\t\t\t\tif (commandASuggestion) {\n\t\t\t\t\treturn -1; // first command was suggested, so it wins over the non suggested one\n\t\t\t\t}\n\n\t\t\t\tif (commandBSuggestion) {\n\t\t\t\t\treturn 1; // other command was suggested so it wins over the command\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// both commands were never used, so we sort by name\n\t\t\treturn commandPickA.label.localeCompare(commandPickB.label);\n\t\t});\n\n\t\tconst commandPicks: Array<ICommandQuickPick | IQuickPickSeparator> = [];\n\n\t\tlet addOtherSeparator = false;\n\t\tlet addSuggestedSeparator = true;\n\t\tlet addCommonlyUsedSeparator = !!this.options.suggestedCommandIds;\n\t\tfor (let i = 0; i < filteredCommandPicks.length; i++) {\n\t\t\tconst commandPick = filteredCommandPicks[i];\n\n\t\t\t// Separator: recently used\n\t\t\tif (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\n\t\t\t\tcommandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\n\t\t\t\taddOtherSeparator = true;\n\t\t\t}\n\n\t\t\tif (addSuggestedSeparator && commandPick.tfIdfScore !== undefined) {\n\t\t\t\tcommandPicks.push({ type: 'separator', label: localize('suggested', \"similar commands\") });\n\t\t\t\taddSuggestedSeparator = false;\n\t\t\t}\n\n\t\t\t// Separator: commonly used\n\t\t\tif (addCommonlyUsedSeparator && commandPick.tfIdfScore === undefined && !this.commandsHistory.peek(commandPick.commandId) && this.options.suggestedCommandIds?.has(commandPick.commandId)) {\n\t\t\t\tcommandPicks.push({ type: 'separator', label: localize('commonlyUsed', \"commonly used\") });\n\t\t\t\taddOtherSeparator = true;\n\t\t\t\taddCommonlyUsedSeparator = false;\n\t\t\t}\n\n\t\t\t// Separator: other commands\n\t\t\tif (addOtherSeparator && commandPick.tfIdfScore === undefined && !this.commandsHistory.peek(commandPick.commandId) && !this.options.suggestedCommandIds?.has(commandPick.commandId)) {\n\t\t\t\tcommandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\n\t\t\t\taddOtherSeparator = false;\n\t\t\t}\n\n\t\t\t// Command\n\t\t\tcommandPicks.push(this.toCommandPick(commandPick, runOptions));\n\t\t}\n\n\t\tif (!this.hasAdditionalCommandPicks(filter, token)) {\n\t\t\treturn commandPicks;\n\t\t}\n\n\t\treturn {\n\t\t\tpicks: commandPicks,\n\t\t\tadditionalPicks: (async (): Promise<Picks<ICommandQuickPick>> => {\n\t\t\t\tconst additionalCommandPicks = await this.getAdditionalCommandPicks(allCommandPicks, filteredCommandPicks, filter, token);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst commandPicks: Array<ICommandQuickPick | IQuickPickSeparator> = additionalCommandPicks.map(commandPick => this.toCommandPick(commandPick, runOptions));\n\t\t\t\t// Basically, if we haven't already added a separator, we add one before the additional picks so long\n\t\t\t\t// as one hasn't been added to the start of the array.\n\t\t\t\tif (addSuggestedSeparator && commandPicks[0]?.type !== 'separator') {\n\t\t\t\t\tcommandPicks.unshift({ type: 'separator', label: localize('suggested', \"similar commands\") });\n\t\t\t\t}\n\t\t\t\treturn commandPicks;\n\t\t\t})()\n\t\t};\n\t}\n\n\tprivate toCommandPick(commandPick: ICommandQuickPick | IQuickPickSeparator, runOptions?: IQuickAccessProviderRunOptions): ICommandQuickPick | IQuickPickSeparator {\n\t\tif (commandPick.type === 'separator') {\n\t\t\treturn commandPick;\n\t\t}\n\n\t\tconst keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\n\t\tconst ariaLabel = keybinding ?\n\t\t\tlocalize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\n\t\t\tcommandPick.label;\n\n\t\treturn {\n\t\t\t...commandPick,\n\t\t\tariaLabel,\n\t\t\tdetail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined,\n\t\t\tkeybinding,\n\t\t\taccept: async () => {\n\n\t\t\t\t// Add to history\n\t\t\t\tthis.commandsHistory.push(commandPick.commandId);\n\n\t\t\t\t// Telementry\n\t\t\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', {\n\t\t\t\t\tid: commandPick.commandId,\n\t\t\t\t\tfrom: runOptions?.from ?? 'quick open'\n\t\t\t\t});\n\n\t\t\t\t// Run\n\t\t\t\ttry {\n\t\t\t\t\tcommandPick.args?.length\n\t\t\t\t\t\t? await this.commandService.executeCommand(commandPick.commandId, ...commandPick.args)\n\t\t\t\t\t\t: await this.commandService.executeCommand(commandPick.commandId);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isCancellationError(error)) {\n\t\t\t\t\t\tthis.dialogService.error(localize('canNotRun', \"Command '{0}' resulted in an error\", commandPick.label), toErrorMessage(error));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// TF-IDF string to be indexed\n\tprivate getTfIdfChunk({ label, commandAlias, commandDescription }: ICommandQuickPick) {\n\t\tlet chunk = label;\n\t\tif (commandAlias && commandAlias !== label) {\n\t\t\tchunk += ` - ${commandAlias}`;\n\t\t}\n\t\tif (commandDescription && commandDescription.value !== label) {\n\t\t\t// If the original is the same as the value, don't add it\n\t\t\tchunk += ` - ${commandDescription.value === commandDescription.original ? commandDescription.value : `${commandDescription.value} (${commandDescription.original})`}`;\n\t\t}\n\t\treturn chunk;\n\t}\n\n\tprotected abstract getCommandPicks(token: CancellationToken): Promise<Array<ICommandQuickPick>>;\n\n\tprotected abstract hasAdditionalCommandPicks(filter: string, token: CancellationToken): boolean;\n\tprotected abstract getAdditionalCommandPicks(allPicks: ICommandQuickPick[], picksSoFar: ICommandQuickPick[], filter: string, token: CancellationToken): Promise<Array<ICommandQuickPick | IQuickPickSeparator>>;\n}\n\ninterface ISerializedCommandHistory {\n\treadonly usesLRU?: boolean;\n\treadonly entries: { key: string; value: number }[];\n}\n\ninterface ICommandsQuickAccessConfiguration {\n\treadonly workbench: {\n\t\treadonly commandPalette: {\n\t\t\treadonly history: number;\n\t\t\treadonly preserveInput: boolean;\n\t\t};\n\t};\n}\n\nexport class CommandsHistory extends Disposable {\n\n\tstatic readonly DEFAULT_COMMANDS_HISTORY_LENGTH = 50;\n\n\tprivate static readonly PREF_KEY_CACHE = 'commandPalette.mru.cache';\n\tprivate static readonly PREF_KEY_COUNTER = 'commandPalette.mru.counter';\n\n\tprivate static cache: LRUCache<string, number> | undefined;\n\tprivate static counter = 1;\n\tprivate static hasChanges = false;\n\n\tprivate configuredCommandsHistoryLength = 0;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateConfiguration();\n\t\tthis.load();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => this.updateConfiguration(e)));\n\t\tthis._register(this.storageService.onWillSaveState(e => {\n\t\t\tif (e.reason === WillSaveStateReason.SHUTDOWN) {\n\t\t\t\t// Commands history is very dynamic and so we limit impact\n\t\t\t\t// on storage to only save on shutdown. This helps reduce\n\t\t\t\t// the overhead of syncing this data across machines.\n\t\t\t\tthis.saveState();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateConfiguration(e?: IConfigurationChangeEvent): void {\n\t\tif (e && !e.affectsConfiguration('workbench.commandPalette.history')) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.configuredCommandsHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(this.configurationService);\n\n\t\tif (CommandsHistory.cache && CommandsHistory.cache.limit !== this.configuredCommandsHistoryLength) {\n\t\t\tCommandsHistory.cache.limit = this.configuredCommandsHistoryLength;\n\t\t\tCommandsHistory.hasChanges = true;\n\t\t}\n\t}\n\n\tprivate load(): void {\n\t\tconst raw = this.storageService.get(CommandsHistory.PREF_KEY_CACHE, StorageScope.PROFILE);\n\t\tlet serializedCache: ISerializedCommandHistory | undefined;\n\t\tif (raw) {\n\t\t\ttry {\n\t\t\t\tserializedCache = JSON.parse(raw);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(`[CommandsHistory] invalid data: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\tconst cache = CommandsHistory.cache = new LRUCache<string, number>(this.configuredCommandsHistoryLength, 1);\n\t\tif (serializedCache) {\n\t\t\tlet entries: { key: string; value: number }[];\n\t\t\tif (serializedCache.usesLRU) {\n\t\t\t\tentries = serializedCache.entries;\n\t\t\t} else {\n\t\t\t\tentries = serializedCache.entries.sort((a, b) => a.value - b.value);\n\t\t\t}\n\t\t\tentries.forEach(entry => cache.set(entry.key, entry.value));\n\t\t}\n\n\t\tCommandsHistory.counter = this.storageService.getNumber(CommandsHistory.PREF_KEY_COUNTER, StorageScope.PROFILE, CommandsHistory.counter);\n\t}\n\n\tpush(commandId: string): void {\n\t\tif (!CommandsHistory.cache) {\n\t\t\treturn;\n\t\t}\n\n\t\tCommandsHistory.cache.set(commandId, CommandsHistory.counter++); // set counter to command\n\t\tCommandsHistory.hasChanges = true;\n\t}\n\n\tpeek(commandId: string): number | undefined {\n\t\treturn CommandsHistory.cache?.peek(commandId);\n\t}\n\n\tprivate saveState(): void {\n\t\tif (!CommandsHistory.cache) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!CommandsHistory.hasChanges) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst serializedCache: ISerializedCommandHistory = { usesLRU: true, entries: [] };\n\t\tCommandsHistory.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\n\n\t\tthis.storageService.store(CommandsHistory.PREF_KEY_CACHE, JSON.stringify(serializedCache), StorageScope.PROFILE, StorageTarget.USER);\n\t\tthis.storageService.store(CommandsHistory.PREF_KEY_COUNTER, CommandsHistory.counter, StorageScope.PROFILE, StorageTarget.USER);\n\t\tCommandsHistory.hasChanges = false;\n\t}\n\n\tstatic getConfiguredCommandHistoryLength(configurationService: IConfigurationService): number {\n\t\tconst config = <ICommandsQuickAccessConfiguration>configurationService.getValue();\n\n\t\tconst configuredCommandHistoryLength = config.workbench?.commandPalette?.history;\n\t\tif (typeof configuredCommandHistoryLength === 'number') {\n\t\t\treturn configuredCommandHistoryLength;\n\t\t}\n\n\t\treturn CommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/quickAccess.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickAccess.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, isDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { DefaultQuickAccessFilterValue, Extensions, IQuickAccessController, IQuickAccessOptions, IQuickAccessProvider, IQuickAccessProviderDescriptor, IQuickAccessRegistry } from '../common/quickAccess.js';\nimport { IQuickInputService, IQuickPick, IQuickPickItem, ItemActivation } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\n\nexport class QuickAccessController extends Disposable implements IQuickAccessController {\n\n\tprivate readonly registry = Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n\tprivate readonly mapProviderToDescriptor = new Map<IQuickAccessProviderDescriptor, IQuickAccessProvider>();\n\n\tprivate readonly lastAcceptedPickerValues = new Map<IQuickAccessProviderDescriptor, string>();\n\n\tprivate visibleQuickAccess: {\n\t\treadonly picker: IQuickPick<IQuickPickItem, { useSeparators: true }>;\n\t\treadonly descriptor: IQuickAccessProviderDescriptor | undefined;\n\t\treadonly value: string;\n\t} | undefined = undefined;\n\n\tconstructor(\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tfor (const provider of this.mapProviderToDescriptor.values()) {\n\t\t\t\tif (isDisposable(provider)) {\n\t\t\t\t\tprovider.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.visibleQuickAccess?.picker.dispose();\n\t\t}));\n\t}\n\n\tshow(value = '', options?: IQuickAccessOptions): void {\n\t\tthis.doShowOrPick(value, false, options);\n\t}\n\n\tprivate doShowOrPick(value: string, pick: true, options?: IQuickAccessOptions): Promise<IQuickPickItem[] | undefined>;\n\tprivate doShowOrPick(value: string, pick: false, options?: IQuickAccessOptions): void;\n\tprivate doShowOrPick(value: string, pick: boolean, options?: IQuickAccessOptions): Promise<IQuickPickItem[] | undefined> | void {\n\n\t\t// Find provider for the value to show\n\t\tconst [provider, descriptor] = this.getOrInstantiateProvider(value, options?.enabledProviderPrefixes);\n\n\t\t// Return early if quick access is already showing on that same prefix\n\t\tconst visibleQuickAccess = this.visibleQuickAccess;\n\t\tconst visibleDescriptor = visibleQuickAccess?.descriptor;\n\t\tif (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n\n\t\t\t// Apply value only if it is more specific than the prefix\n\t\t\t// from the provider and we are not instructed to preserve\n\t\t\tif (value !== descriptor.prefix && !options?.preserveValue) {\n\t\t\t\tvisibleQuickAccess.picker.value = value;\n\t\t\t}\n\n\t\t\t// Always adjust selection\n\t\t\tthis.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Rewrite the filter value based on certain rules unless disabled\n\t\tif (descriptor && !options?.preserveValue) {\n\t\t\tlet newValue: string | undefined = undefined;\n\n\t\t\t// If we have a visible provider with a value, take it's filter value but\n\t\t\t// rewrite to new provider prefix in case they differ\n\t\t\tif (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n\t\t\t\tconst newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n\t\t\t\tif (newValueCandidateWithoutPrefix) {\n\t\t\t\t\tnewValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise, take a default value as instructed\n\t\t\tif (!newValue) {\n\t\t\t\tconst defaultFilterValue = provider?.defaultFilterValue;\n\t\t\t\tif (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n\t\t\t\t\tnewValue = this.lastAcceptedPickerValues.get(descriptor);\n\t\t\t\t} else if (typeof defaultFilterValue === 'string') {\n\t\t\t\t\tnewValue = `${descriptor.prefix}${defaultFilterValue}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof newValue === 'string') {\n\t\t\t\tvalue = newValue;\n\t\t\t}\n\t\t}\n\n\t\t// Store the existing selection if there was one.\n\t\tconst visibleSelection = visibleQuickAccess?.picker?.valueSelection;\n\t\tconst visibleValue = visibleQuickAccess?.picker?.value;\n\n\t\t// Create a picker for the provider to use with the initial value\n\t\t// and adjust the filtering to exclude the prefix from filtering\n\t\tconst disposables = new DisposableStore();\n\t\tconst picker = disposables.add(this.quickInputService.createQuickPick({ useSeparators: true }));\n\t\tpicker.value = value;\n\t\tthis.adjustValueSelection(picker, descriptor, options);\n\t\tpicker.placeholder = options?.placeholder ?? descriptor?.placeholder;\n\t\tpicker.quickNavigate = options?.quickNavigateConfiguration;\n\t\tpicker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n\t\tif (typeof options?.itemActivation === 'number' || options?.quickNavigateConfiguration) {\n\t\t\tpicker.itemActivation = options?.itemActivation ?? ItemActivation.SECOND /* quick nav is always second */;\n\t\t}\n\t\tpicker.contextKey = descriptor?.contextKey;\n\t\tpicker.filterValue = (value: string) => value.substring(descriptor ? descriptor.prefix.length : 0);\n\n\t\t// Pick mode: setup a promise that can be resolved\n\t\t// with the selected items and prevent execution\n\t\tlet pickPromise: DeferredPromise<IQuickPickItem[]> | undefined = undefined;\n\t\tif (pick) {\n\t\t\tpickPromise = new DeferredPromise<IQuickPickItem[]>();\n\t\t\tdisposables.add(Event.once(picker.onWillAccept)(e => {\n\t\t\t\te.veto();\n\t\t\t\tpicker.hide();\n\t\t\t}));\n\t\t}\n\n\t\t// Register listeners\n\t\tdisposables.add(this.registerPickerListeners(picker, provider, descriptor, value, options));\n\n\t\t// Ask provider to fill the picker as needed if we have one\n\t\t// and pass over a cancellation token that will indicate when\n\t\t// the picker is hiding without a pick being made.\n\t\tconst cts = disposables.add(new CancellationTokenSource());\n\t\tif (provider) {\n\t\t\tdisposables.add(provider.provide(picker, cts.token, options?.providerOptions));\n\t\t}\n\n\t\t// Finally, trigger disposal and cancellation when the picker\n\t\t// hides depending on items selected or not.\n\t\tEvent.once(picker.onDidHide)(() => {\n\t\t\tif (picker.selectedItems.length === 0) {\n\t\t\t\tcts.cancel();\n\t\t\t}\n\n\t\t\t// Start to dispose once picker hides\n\t\t\tdisposables.dispose();\n\n\t\t\t// Resolve pick promise with selected items\n\t\t\tpickPromise?.complete(picker.selectedItems.slice(0));\n\t\t});\n\n\t\t// Finally, show the picker. This is important because a provider\n\t\t// may not call this and then our disposables would leak that rely\n\t\t// on the onDidHide event.\n\t\tpicker.show();\n\n\t\t// If the previous picker had a selection and the value is unchanged, we should set that in the new picker.\n\t\tif (visibleSelection && visibleValue === value) {\n\t\t\tpicker.valueSelection = visibleSelection;\n\t\t}\n\n\t\t// Pick mode: return with promise\n\t\tif (pick) {\n\t\t\treturn pickPromise?.p;\n\t\t}\n\t}\n\n\tprivate adjustValueSelection(picker: IQuickPick<IQuickPickItem, { useSeparators: true }>, descriptor?: IQuickAccessProviderDescriptor, options?: IQuickAccessOptions): void {\n\t\tlet valueSelection: [number, number];\n\n\t\t// Preserve: just always put the cursor at the end\n\t\tif (options?.preserveValue) {\n\t\t\tvalueSelection = [picker.value.length, picker.value.length];\n\t\t}\n\n\t\t// Otherwise: select the value up until the prefix\n\t\telse {\n\t\t\tvalueSelection = [descriptor?.prefix.length ?? 0, picker.value.length];\n\t\t}\n\n\t\tpicker.valueSelection = valueSelection;\n\t}\n\n\tprivate registerPickerListeners(\n\t\tpicker: IQuickPick<IQuickPickItem, { useSeparators: true }>,\n\t\tprovider: IQuickAccessProvider | undefined,\n\t\tdescriptor: IQuickAccessProviderDescriptor | undefined,\n\t\tvalue: string,\n\t\toptions?: IQuickAccessOptions\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Remember as last visible picker and clean up once picker get's disposed\n\t\tconst visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tif (visibleQuickAccess === this.visibleQuickAccess) {\n\t\t\t\tthis.visibleQuickAccess = undefined;\n\t\t\t}\n\t\t}));\n\n\t\t// Whenever the value changes, check if the provider has\n\t\t// changed and if so - re-create the picker from the beginning\n\t\tdisposables.add(picker.onDidChangeValue(value => {\n\t\t\tconst [providerForValue] = this.getOrInstantiateProvider(value, options?.enabledProviderPrefixes);\n\t\t\tif (providerForValue !== provider) {\n\t\t\t\tthis.show(value, {\n\t\t\t\t\tenabledProviderPrefixes: options?.enabledProviderPrefixes,\n\t\t\t\t\t// do not rewrite value from user typing!\n\t\t\t\t\tpreserveValue: true,\n\t\t\t\t\t// persist the value of the providerOptions from the original showing\n\t\t\t\t\tproviderOptions: options?.providerOptions\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvisibleQuickAccess.value = value; // remember the value in our visible one\n\t\t\t}\n\t\t}));\n\n\t\t// Remember picker input for future use when accepting\n\t\tif (descriptor) {\n\t\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\t\tthis.lastAcceptedPickerValues.set(descriptor, picker.value);\n\t\t\t}));\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate getOrInstantiateProvider(value: string, enabledProviderPrefixes?: string[]): [IQuickAccessProvider | undefined, IQuickAccessProviderDescriptor | undefined] {\n\t\tconst providerDescriptor = this.registry.getQuickAccessProvider(value);\n\t\tif (!providerDescriptor || enabledProviderPrefixes && !enabledProviderPrefixes?.includes(providerDescriptor.prefix)) {\n\t\t\treturn [undefined, undefined];\n\t\t}\n\n\t\tlet provider = this.mapProviderToDescriptor.get(providerDescriptor);\n\t\tif (!provider) {\n\t\t\tprovider = this.instantiationService.createInstance(providerDescriptor.ctor);\n\t\t\tthis.mapProviderToDescriptor.set(providerDescriptor, provider);\n\t\t}\n\n\t\treturn [provider, providerDescriptor];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable, DisposableStore, IDisposable, isDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { DefaultQuickAccessFilterValue, Extensions, IQuickAccessController, IQuickAccessOptions, IQuickAccessProvider, IQuickAccessProviderDescriptor, IQuickAccessRegistry } from '../common/quickAccess.js';\nimport { IQuickInputService, IQuickPick, IQuickPickItem, ItemActivation } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\n\nexport class QuickAccessController extends Disposable implements IQuickAccessController {\n\n\tprivate readonly registry = Registry.as<IQuickAccessRegistry>(Extensions.Quickaccess);\n\tprivate readonly mapProviderToDescriptor = new Map<IQuickAccessProviderDescriptor, IQuickAccessProvider>();\n\n\tprivate readonly lastAcceptedPickerValues = new Map<IQuickAccessProviderDescriptor, string>();\n\n\tprivate visibleQuickAccess: {\n\t\treadonly picker: IQuickPick<IQuickPickItem, { useSeparators: true }>;\n\t\treadonly descriptor: IQuickAccessProviderDescriptor | undefined;\n\t\treadonly value: string;\n\t} | undefined = undefined;\n\n\tconstructor(\n\t\t@IQuickInputService private readonly quickInputService: IQuickInputService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tfor (const provider of this.mapProviderToDescriptor.values()) {\n\t\t\t\tif (isDisposable(provider)) {\n\t\t\t\t\tprovider.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.visibleQuickAccess?.picker.dispose();\n\t\t}));\n\t}\n\n\tshow(value = '', options?: IQuickAccessOptions): void {\n\t\tthis.doShowOrPick(value, false, options);\n\t}\n\n\tprivate doShowOrPick(value: string, pick: true, options?: IQuickAccessOptions): Promise<IQuickPickItem[] | undefined>;\n\tprivate doShowOrPick(value: string, pick: false, options?: IQuickAccessOptions): void;\n\tprivate doShowOrPick(value: string, pick: boolean, options?: IQuickAccessOptions): Promise<IQuickPickItem[] | undefined> | void {\n\n\t\t// Find provider for the value to show\n\t\tconst [provider, descriptor] = this.getOrInstantiateProvider(value, options?.enabledProviderPrefixes);\n\n\t\t// Return early if quick access is already showing on that same prefix\n\t\tconst visibleQuickAccess = this.visibleQuickAccess;\n\t\tconst visibleDescriptor = visibleQuickAccess?.descriptor;\n\t\tif (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n\n\t\t\t// Apply value only if it is more specific than the prefix\n\t\t\t// from the provider and we are not instructed to preserve\n\t\t\tif (value !== descriptor.prefix && !options?.preserveValue) {\n\t\t\t\tvisibleQuickAccess.picker.value = value;\n\t\t\t}\n\n\t\t\t// Always adjust selection\n\t\t\tthis.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Rewrite the filter value based on certain rules unless disabled\n\t\tif (descriptor && !options?.preserveValue) {\n\t\t\tlet newValue: string | undefined = undefined;\n\n\t\t\t// If we have a visible provider with a value, take it's filter value but\n\t\t\t// rewrite to new provider prefix in case they differ\n\t\t\tif (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n\t\t\t\tconst newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n\t\t\t\tif (newValueCandidateWithoutPrefix) {\n\t\t\t\t\tnewValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise, take a default value as instructed\n\t\t\tif (!newValue) {\n\t\t\t\tconst defaultFilterValue = provider?.defaultFilterValue;\n\t\t\t\tif (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n\t\t\t\t\tnewValue = this.lastAcceptedPickerValues.get(descriptor);\n\t\t\t\t} else if (typeof defaultFilterValue === 'string') {\n\t\t\t\t\tnewValue = `${descriptor.prefix}${defaultFilterValue}`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof newValue === 'string') {\n\t\t\t\tvalue = newValue;\n\t\t\t}\n\t\t}\n\n\t\t// Store the existing selection if there was one.\n\t\tconst visibleSelection = visibleQuickAccess?.picker?.valueSelection;\n\t\tconst visibleValue = visibleQuickAccess?.picker?.value;\n\n\t\t// Create a picker for the provider to use with the initial value\n\t\t// and adjust the filtering to exclude the prefix from filtering\n\t\tconst disposables = new DisposableStore();\n\t\tconst picker = disposables.add(this.quickInputService.createQuickPick({ useSeparators: true }));\n\t\tpicker.value = value;\n\t\tthis.adjustValueSelection(picker, descriptor, options);\n\t\tpicker.placeholder = options?.placeholder ?? descriptor?.placeholder;\n\t\tpicker.quickNavigate = options?.quickNavigateConfiguration;\n\t\tpicker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n\t\tif (typeof options?.itemActivation === 'number' || options?.quickNavigateConfiguration) {\n\t\t\tpicker.itemActivation = options?.itemActivation ?? ItemActivation.SECOND /* quick nav is always second */;\n\t\t}\n\t\tpicker.contextKey = descriptor?.contextKey;\n\t\tpicker.filterValue = (value: string) => value.substring(descriptor ? descriptor.prefix.length : 0);\n\n\t\t// Pick mode: setup a promise that can be resolved\n\t\t// with the selected items and prevent execution\n\t\tlet pickPromise: DeferredPromise<IQuickPickItem[]> | undefined = undefined;\n\t\tif (pick) {\n\t\t\tpickPromise = new DeferredPromise<IQuickPickItem[]>();\n\t\t\tdisposables.add(Event.once(picker.onWillAccept)(e => {\n\t\t\t\te.veto();\n\t\t\t\tpicker.hide();\n\t\t\t}));\n\t\t}\n\n\t\t// Register listeners\n\t\tdisposables.add(this.registerPickerListeners(picker, provider, descriptor, value, options));\n\n\t\t// Ask provider to fill the picker as needed if we have one\n\t\t// and pass over a cancellation token that will indicate when\n\t\t// the picker is hiding without a pick being made.\n\t\tconst cts = disposables.add(new CancellationTokenSource());\n\t\tif (provider) {\n\t\t\tdisposables.add(provider.provide(picker, cts.token, options?.providerOptions));\n\t\t}\n\n\t\t// Finally, trigger disposal and cancellation when the picker\n\t\t// hides depending on items selected or not.\n\t\tEvent.once(picker.onDidHide)(() => {\n\t\t\tif (picker.selectedItems.length === 0) {\n\t\t\t\tcts.cancel();\n\t\t\t}\n\n\t\t\t// Start to dispose once picker hides\n\t\t\tdisposables.dispose();\n\n\t\t\t// Resolve pick promise with selected items\n\t\t\tpickPromise?.complete(picker.selectedItems.slice(0));\n\t\t});\n\n\t\t// Finally, show the picker. This is important because a provider\n\t\t// may not call this and then our disposables would leak that rely\n\t\t// on the onDidHide event.\n\t\tpicker.show();\n\n\t\t// If the previous picker had a selection and the value is unchanged, we should set that in the new picker.\n\t\tif (visibleSelection && visibleValue === value) {\n\t\t\tpicker.valueSelection = visibleSelection;\n\t\t}\n\n\t\t// Pick mode: return with promise\n\t\tif (pick) {\n\t\t\treturn pickPromise?.p;\n\t\t}\n\t}\n\n\tprivate adjustValueSelection(picker: IQuickPick<IQuickPickItem, { useSeparators: true }>, descriptor?: IQuickAccessProviderDescriptor, options?: IQuickAccessOptions): void {\n\t\tlet valueSelection: [number, number];\n\n\t\t// Preserve: just always put the cursor at the end\n\t\tif (options?.preserveValue) {\n\t\t\tvalueSelection = [picker.value.length, picker.value.length];\n\t\t}\n\n\t\t// Otherwise: select the value up until the prefix\n\t\telse {\n\t\t\tvalueSelection = [descriptor?.prefix.length ?? 0, picker.value.length];\n\t\t}\n\n\t\tpicker.valueSelection = valueSelection;\n\t}\n\n\tprivate registerPickerListeners(\n\t\tpicker: IQuickPick<IQuickPickItem, { useSeparators: true }>,\n\t\tprovider: IQuickAccessProvider | undefined,\n\t\tdescriptor: IQuickAccessProviderDescriptor | undefined,\n\t\tvalue: string,\n\t\toptions?: IQuickAccessOptions\n\t): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Remember as last visible picker and clean up once picker get's disposed\n\t\tconst visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\n\t\tdisposables.add(toDisposable(() => {\n\t\t\tif (visibleQuickAccess === this.visibleQuickAccess) {\n\t\t\t\tthis.visibleQuickAccess = undefined;\n\t\t\t}\n\t\t}));\n\n\t\t// Whenever the value changes, check if the provider has\n\t\t// changed and if so - re-create the picker from the beginning\n\t\tdisposables.add(picker.onDidChangeValue(value => {\n\t\t\tconst [providerForValue] = this.getOrInstantiateProvider(value, options?.enabledProviderPrefixes);\n\t\t\tif (providerForValue !== provider) {\n\t\t\t\tthis.show(value, {\n\t\t\t\t\tenabledProviderPrefixes: options?.enabledProviderPrefixes,\n\t\t\t\t\t// do not rewrite value from user typing!\n\t\t\t\t\tpreserveValue: true,\n\t\t\t\t\t// persist the value of the providerOptions from the original showing\n\t\t\t\t\tproviderOptions: options?.providerOptions\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvisibleQuickAccess.value = value; // remember the value in our visible one\n\t\t\t}\n\t\t}));\n\n\t\t// Remember picker input for future use when accepting\n\t\tif (descriptor) {\n\t\t\tdisposables.add(picker.onDidAccept(() => {\n\t\t\t\tthis.lastAcceptedPickerValues.set(descriptor, picker.value);\n\t\t\t}));\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate getOrInstantiateProvider(value: string, enabledProviderPrefixes?: string[]): [IQuickAccessProvider | undefined, IQuickAccessProviderDescriptor | undefined] {\n\t\tconst providerDescriptor = this.registry.getQuickAccessProvider(value);\n\t\tif (!providerDescriptor || enabledProviderPrefixes && !enabledProviderPrefixes?.includes(providerDescriptor.prefix)) {\n\t\t\treturn [undefined, undefined];\n\t\t}\n\n\t\tlet provider = this.mapProviderToDescriptor.get(providerDescriptor);\n\t\tif (!provider) {\n\t\t\tprovider = this.instantiationService.createInstance(providerDescriptor.ctor);\n\t\t\tthis.mapProviderToDescriptor.set(providerDescriptor, provider);\n\t\t}\n\n\t\treturn [provider, providerDescriptor];\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1198, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputUtils.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInputUtils.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport * as domStylesheetsJs from '../../../base/browser/domStylesheets.js';\nimport * as cssJs from '../../../base/browser/cssValue.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { Event } from '../../../base/common/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Gesture, EventType as GestureEventType } from '../../../base/browser/touch.js';\nimport { renderLabelWithIcons } from '../../../base/browser/ui/iconLabel/iconLabels.js';\nimport { IdGenerator } from '../../../base/common/idGenerator.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { parseLinkedText } from '../../../base/common/linkedText.js';\nimport { URI } from '../../../base/common/uri.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IQuickInputButton } from '../common/quickInput.js';\nimport { IAction } from '../../../base/common/actions.js';\n\nconst iconPathToClass: Record<string, string> = {};\nconst iconClassGenerator = new IdGenerator('quick-input-button-icon-');\n\nfunction getIconClass(iconPath: { dark: URI; light?: URI } | undefined): string | undefined {\n\tif (!iconPath) {\n\t\treturn undefined;\n\t}\n\tlet iconClass: string;\n\n\tconst key = iconPath.dark.toString();\n\tif (iconPathToClass[key]) {\n\t\ticonClass = iconPathToClass[key];\n\t} else {\n\t\ticonClass = iconClassGenerator.nextId();\n\t\tdomStylesheetsJs.createCSSRule(`.${iconClass}, .hc-light .${iconClass}`, `background-image: ${cssJs.asCSSUrl(iconPath.light || iconPath.dark)}`);\n\t\tdomStylesheetsJs.createCSSRule(`.vs-dark .${iconClass}, .hc-black .${iconClass}`, `background-image: ${cssJs.asCSSUrl(iconPath.dark)}`);\n\t\ticonPathToClass[key] = iconClass;\n\t}\n\n\treturn iconClass;\n}\n\nexport function quickInputButtonToAction(button: IQuickInputButton, id: string, run: () => unknown): IAction {\n\tlet cssClasses = button.iconClass || getIconClass(button.iconPath);\n\tif (button.alwaysVisible) {\n\t\tcssClasses = cssClasses ? `${cssClasses} always-visible` : 'always-visible';\n\t}\n\n\treturn {\n\t\tid,\n\t\tlabel: '',\n\t\ttooltip: button.tooltip || '',\n\t\tclass: cssClasses,\n\t\tenabled: true,\n\t\trun\n\t};\n}\n\nexport function renderQuickInputDescription(description: string, container: HTMLElement, actionHandler: { callback: (content: string) => void; disposables: DisposableStore }) {\n\tdom.reset(container);\n\tconst parsed = parseLinkedText(description);\n\tlet tabIndex = 0;\n\tfor (const node of parsed.nodes) {\n\t\tif (typeof node === 'string') {\n\t\t\tcontainer.append(...renderLabelWithIcons(node));\n\t\t} else {\n\t\t\tlet title = node.title;\n\n\t\t\tif (!title && node.href.startsWith('command:')) {\n\t\t\t\ttitle = localize('executeCommand', \"Click to execute command '{0}'\", node.href.substring('command:'.length));\n\t\t\t} else if (!title) {\n\t\t\t\ttitle = node.href;\n\t\t\t}\n\n\t\t\tconst anchor = dom.$('a', { href: node.href, title, tabIndex: tabIndex++ }, node.label);\n\t\t\tanchor.style.textDecoration = 'underline';\n\t\t\tconst handleOpen = (e: unknown) => {\n\t\t\t\tif (dom.isEventLike(e)) {\n\t\t\t\t\tdom.EventHelper.stop(e, true);\n\t\t\t\t}\n\n\t\t\t\tactionHandler.callback(node.href);\n\t\t\t};\n\n\t\t\tconst onClick = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.CLICK)).event;\n\t\t\tconst onKeydown = actionHandler.disposables.add(new DomEmitter(anchor, dom.EventType.KEY_DOWN)).event;\n\t\t\tconst onSpaceOrEnter = Event.chain(onKeydown, $ => $.filter(e => {\n\t\t\t\tconst event = new StandardKeyboardEvent(e);\n\n\t\t\t\treturn event.equals(KeyCode.Space) || event.equals(KeyCode.Enter);\n\t\t\t}));\n\n\t\t\tactionHandler.disposables.add(Gesture.addTarget(anchor));\n\t\t\tconst onTap = actionHandler.disposables.add(new DomEmitter(anchor, GestureEventType.Tap)).event;\n\n\t\t\tEvent.any(onClick, onTap, onSpaceOrEnter)(handleOpen, null, actionHandler.disposables);\n\t\t\tcontainer.appendChild(anchor);\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1305, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInput.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInput.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Button, IButtonStyles } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge, ICountBadgeStyles } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { IHoverDelegate, IHoverDelegateOptions } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IInputBoxStyles } from '../../../base/browser/ui/inputbox/inputBox.js';\nimport { IKeybindingLabelStyles } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { IListStyles } from '../../../base/browser/ui/list/listWidget.js';\nimport { IProgressBarStyles, ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { IToggleStyles, Toggle, TriStateCheckbox } from '../../../base/browser/ui/toggle/toggle.js';\nimport { equals } from '../../../base/common/arrays.js';\nimport { TimeoutTimer } from '../../../base/common/async.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Emitter, Event, EventBufferer } from '../../../base/common/event.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIOS } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './media/quickInput.css';\nimport { localize } from '../../../nls.js';\nimport { IInputBox, IKeyMods, IQuickInput, IQuickInputButton, IQuickInputHideEvent, IQuickInputToggle, IQuickNavigateConfiguration, IQuickPick, IQuickPickDidAcceptEvent, IQuickPickItem, IQuickPickItemButtonEvent, IQuickPickSeparator, IQuickPickSeparatorButtonEvent, IQuickPickWillAcceptEvent, ItemActivation, NO_KEY_MODS, QuickInputButtonLocation, QuickInputHideReason, QuickInputType, QuickPickFocus } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { quickInputButtonToAction, renderQuickInputDescription } from './quickInputUtils.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../hover/browser/hover.js';\nimport { QuickInputList } from './quickInputList.js';\nimport { IHoverOptions } from '../../../base/browser/ui/hover/hover.js';\nimport { ContextKeyExpr, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { QuickInputTreeController } from './tree/quickInputTreeController.js';\nimport { observableValue } from '../../../base/common/observable.js';\n\nexport const inQuickInputContextKeyValue = 'inQuickInput';\nexport const InQuickInputContextKey = new RawContextKey<boolean>(inQuickInputContextKeyValue, false, localize('inQuickInput', \"Whether keyboard focus is inside the quick input control\"));\nexport const inQuickInputContext = ContextKeyExpr.has(inQuickInputContextKeyValue);\n\nexport const quickInputAlignmentContextKeyValue = 'quickInputAlignment';\nexport const QuickInputAlignmentContextKey = new RawContextKey<'top' | 'center' | undefined>(quickInputAlignmentContextKeyValue, 'top', localize('quickInputAlignment', \"The alignment of the quick input\"));\n\nexport const quickInputTypeContextKeyValue = 'quickInputType';\nexport const QuickInputTypeContextKey = new RawContextKey<QuickInputType>(quickInputTypeContextKeyValue, undefined, localize('quickInputType', \"The type of the currently visible quick input\"));\n\nexport const endOfQuickInputBoxContextKeyValue = 'cursorAtEndOfQuickInputBox';\nexport const EndOfQuickInputBoxContextKey = new RawContextKey<boolean>(endOfQuickInputBoxContextKeyValue, false, localize('cursorAtEndOfQuickInputBox', \"Whether the cursor in the quick input is at the end of the input box\"));\nexport const endOfQuickInputBoxContext = ContextKeyExpr.has(endOfQuickInputBoxContextKeyValue);\n\nexport interface IQuickInputOptions {\n\tidPrefix: string;\n\tcontainer: HTMLElement;\n\tignoreFocusOut(): boolean;\n\tbackKeybindingLabel(): string | undefined;\n\tsetContextKey(id?: string): void;\n\tlinkOpenerDelegate(content: string): void;\n\treturnFocus(): void;\n\t/**\n\t * @todo With IHover in vs/editor, can we depend on the service directly\n\t * instead of passing it through a hover delegate?\n\t */\n\thoverDelegate: IHoverDelegate;\n\tstyles: IQuickInputStyles;\n}\n\nexport interface IQuickInputStyles {\n\treadonly widget: IQuickInputWidgetStyles;\n\treadonly inputBox: IInputBoxStyles;\n\treadonly toggle: IToggleStyles;\n\treadonly countBadge: ICountBadgeStyles;\n\treadonly button: IButtonStyles;\n\treadonly progressBar: IProgressBarStyles;\n\treadonly keybindingLabel: IKeybindingLabelStyles;\n\treadonly list: IListStyles;\n\treadonly pickerGroup: { pickerGroupBorder: string | undefined; pickerGroupForeground: string | undefined };\n}\n\nexport interface IQuickInputWidgetStyles {\n\treadonly quickInputBackground: string | undefined;\n\treadonly quickInputForeground: string | undefined;\n\treadonly quickInputTitleBackground: string | undefined;\n\treadonly widgetBorder: string | undefined;\n\treadonly widgetShadow: string | undefined;\n}\n\nexport type Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nexport const backButton = {\n\ticonClass: ThemeIcon.asClassName(Codicon.quickInputBack),\n\ttooltip: localize('quickInput.back', \"Back\"),\n\thandle: -1 // TODO\n};\n\nexport interface QuickInputUI {\n\tcontainer: HTMLElement;\n\tstyleSheet: HTMLStyleElement;\n\tleftActionBar: ActionBar;\n\ttitleBar: HTMLElement;\n\ttitle: HTMLElement;\n\tdescription1: HTMLElement;\n\tdescription2: HTMLElement;\n\twidget: HTMLElement;\n\trightActionBar: ActionBar;\n\tinlineActionBar: ActionBar;\n\tcheckAll: TriStateCheckbox;\n\tinputContainer: HTMLElement;\n\tfilterContainer: HTMLElement;\n\tinputBox: QuickInputBox;\n\tvisibleCountContainer: HTMLElement;\n\tvisibleCount: CountBadge;\n\tcountContainer: HTMLElement;\n\tcount: CountBadge;\n\tokContainer: HTMLElement;\n\tok: Button;\n\tmessage: HTMLElement;\n\tcustomButtonContainer: HTMLElement;\n\tcustomButton: Button;\n\tprogressBar: ProgressBar;\n\tlist: QuickInputList;\n\ttree: QuickInputTreeController;\n\tonDidAccept: Event<void>;\n\tonDidCustom: Event<void>;\n\tonDidTriggerButton: Event<IQuickInputButton>;\n\tignoreFocusOut: boolean;\n\tkeyMods: Writeable<IKeyMods>;\n\tshow(controller: QuickInput): void;\n\tsetVisibilities(visibilities: Visibilities): void;\n\tsetEnabled(enabled: boolean): void;\n\tsetContextKey(contextKey?: string): void;\n\tlinkOpenerDelegate(content: string): void;\n\thide(): void;\n}\n\nexport type Visibilities = {\n\ttitle?: boolean;\n\tdescription?: boolean;\n\tcheckAll?: boolean;\n\tinputBox?: boolean;\n\tcheckBox?: boolean;\n\tvisibleCount?: boolean;\n\tcount?: boolean;\n\tmessage?: boolean;\n\tlist?: boolean;\n\ttree?: boolean;\n\tok?: boolean;\n\tcustomButton?: boolean;\n\tprogressBar?: boolean;\n};\n\nexport abstract class QuickInput extends Disposable implements IQuickInput {\n\tprotected static readonly noPromptMessage = localize('inputModeEntry', \"Press 'Enter' to confirm your input or 'Escape' to cancel\");\n\n\tprotected _visible = observableValue('visible', false);\n\tprivate _title: string | undefined;\n\tprivate _description: string | undefined;\n\tprivate _widget: HTMLElement | undefined;\n\tprivate _widgetUpdated = false;\n\tprivate _steps: number | undefined;\n\tprivate _totalSteps: number | undefined;\n\tprivate _enabled = true;\n\tprivate _contextKey: string | undefined;\n\tprivate _busy = false;\n\tprivate _ignoreFocusOut = false;\n\tprivate _leftButtons: IQuickInputButton[] = [];\n\tprivate _rightButtons: IQuickInputButton[] = [];\n\tprivate _inlineButtons: IQuickInputButton[] = [];\n\tprivate buttonsUpdated = false;\n\tprivate _toggles: IQuickInputToggle[] = [];\n\tprivate togglesUpdated = false;\n\tprotected noValidationMessage = QuickInput.noPromptMessage;\n\tprivate _validationMessage: string | undefined;\n\tprivate _lastValidationMessage: string | undefined;\n\tprivate _severity: Severity = Severity.Ignore;\n\tprivate _lastSeverity: Severity | undefined;\n\tprivate readonly onDidTriggerButtonEmitter = this._register(new Emitter<IQuickInputButton>());\n\tprivate readonly onDidHideEmitter = this._register(new Emitter<IQuickInputHideEvent>());\n\tprivate readonly onWillHideEmitter = this._register(new Emitter<IQuickInputHideEvent>());\n\tprivate readonly onDisposeEmitter = this._register(new Emitter<void>());\n\n\tprotected readonly visibleDisposables = this._register(new DisposableStore());\n\n\tprivate busyDelay: TimeoutTimer | undefined;\n\n\tabstract type: QuickInputType;\n\n\tconstructor(\n\t\tprotected ui: QuickInputUI\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected get visible(): boolean {\n\t\treturn this._visible.get();\n\t}\n\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\tset title(title: string | undefined) {\n\t\tthis._title = title;\n\t\tthis.update();\n\t}\n\n\tget description() {\n\t\treturn this._description;\n\t}\n\n\tset description(description: string | undefined) {\n\t\tthis._description = description;\n\t\tthis.update();\n\t}\n\n\tget step() {\n\t\treturn this._steps;\n\t}\n\n\tset step(step: number | undefined) {\n\t\tthis._steps = step;\n\t\tthis.update();\n\t}\n\n\tget totalSteps() {\n\t\treturn this._totalSteps;\n\t}\n\n\tset totalSteps(totalSteps: number | undefined) {\n\t\tthis._totalSteps = totalSteps;\n\t\tthis.update();\n\t}\n\n\tget enabled() {\n\t\treturn this._enabled;\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\tthis._enabled = enabled;\n\t\tthis.update();\n\t}\n\n\tget contextKey() {\n\t\treturn this._contextKey;\n\t}\n\n\tset contextKey(contextKey: string | undefined) {\n\t\tthis._contextKey = contextKey;\n\t\tthis.update();\n\t}\n\n\tget busy() {\n\t\treturn this._busy;\n\t}\n\n\tset busy(busy: boolean) {\n\t\tthis._busy = busy;\n\t\tthis.update();\n\t}\n\n\tget ignoreFocusOut() {\n\t\treturn this._ignoreFocusOut;\n\t}\n\n\tset ignoreFocusOut(ignoreFocusOut: boolean) {\n\t\tconst shouldUpdate = this._ignoreFocusOut !== ignoreFocusOut && !isIOS;\n\t\tthis._ignoreFocusOut = ignoreFocusOut && !isIOS;\n\t\tif (shouldUpdate) {\n\t\t\tthis.update();\n\t\t}\n\t}\n\n\tprotected get titleButtons() {\n\t\treturn this._leftButtons.length\n\t\t\t? [...this._leftButtons, this._rightButtons]\n\t\t\t: this._rightButtons;\n\t}\n\n\tget buttons() {\n\t\treturn [\n\t\t\t...this._leftButtons,\n\t\t\t...this._rightButtons,\n\t\t\t...this._inlineButtons\n\t\t];\n\t}\n\n\tset buttons(buttons: IQuickInputButton[]) {\n\t\tthis._leftButtons = buttons.filter(b => b === backButton);\n\t\tthis._rightButtons = buttons.filter(b => b !== backButton && b.location !== QuickInputButtonLocation.Inline);\n\t\tthis._inlineButtons = buttons.filter(b => b.location === QuickInputButtonLocation.Inline);\n\t\tthis.buttonsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget toggles() {\n\t\treturn this._toggles;\n\t}\n\n\tset toggles(toggles: IQuickInputToggle[]) {\n\t\tthis._toggles = toggles ?? [];\n\t\tthis.togglesUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget validationMessage() {\n\t\treturn this._validationMessage;\n\t}\n\n\tset validationMessage(validationMessage: string | undefined) {\n\t\tthis._validationMessage = validationMessage;\n\t\tthis.update();\n\t}\n\n\tget severity() {\n\t\treturn this._severity;\n\t}\n\n\tset severity(severity: Severity) {\n\t\tthis._severity = severity;\n\t\tthis.update();\n\t}\n\n\tshow(): void {\n\t\tif (this.visible) {\n\t\t\treturn;\n\t\t}\n\t\tthis.visibleDisposables.add(\n\t\t\tthis.ui.onDidTriggerButton(button => {\n\t\t\t\tif (this.buttons.indexOf(button) !== -1) {\n\t\t\t\t\tthis.onDidTriggerButtonEmitter.fire(button);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t\tthis.ui.show(this);\n\n\t\t// update properties in the controller that get reset in the ui.show() call\n\t\tthis._visible.set(true, undefined);\n\t\t// This ensures the message/prompt gets rendered\n\t\tthis._lastValidationMessage = undefined;\n\t\t// This ensures the input box has the right severity applied\n\t\tthis._lastSeverity = undefined;\n\t\tif (this.buttons.length) {\n\t\t\t// if there are buttons, the ui.show() clears them out of the UI so we should\n\t\t\t// rerender them.\n\t\t\tthis.buttonsUpdated = true;\n\t\t}\n\t\tif (this.toggles.length) {\n\t\t\t// if there are toggles, the ui.show() clears them out of the UI so we should\n\t\t\t// rerender them.\n\t\t\tthis.togglesUpdated = true;\n\t\t}\n\n\t\tthis.update();\n\t}\n\n\thide(): void {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\t\tthis.ui.hide();\n\t}\n\n\tdidHide(reason = QuickInputHideReason.Other): void {\n\t\tthis._visible.set(false, undefined);\n\t\tthis.visibleDisposables.clear();\n\t\tthis.onDidHideEmitter.fire({ reason });\n\t}\n\n\treadonly onDidHide = this.onDidHideEmitter.event;\n\n\twillHide(reason = QuickInputHideReason.Other): void {\n\t\tthis.onWillHideEmitter.fire({ reason });\n\t}\n\n\tprotected update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\t\tconst title = this.getTitle();\n\t\tif (title && this.ui.title.textContent !== title) {\n\t\t\tthis.ui.title.textContent = title;\n\t\t} else if (!title && this.ui.title.innerHTML !== '&nbsp;') {\n\t\t\tthis.ui.title.innerText = '\\u00a0';\n\t\t}\n\t\tconst description = this.getDescription();\n\t\tif (this.ui.description1.textContent !== description) {\n\t\t\tthis.ui.description1.textContent = description;\n\t\t}\n\t\tif (this.ui.description2.textContent !== description) {\n\t\t\tthis.ui.description2.textContent = description;\n\t\t}\n\t\tif (this._widgetUpdated) {\n\t\t\tthis._widgetUpdated = false;\n\t\t\tif (this._widget) {\n\t\t\t\tdom.reset(this.ui.widget, this._widget);\n\t\t\t} else {\n\t\t\t\tdom.reset(this.ui.widget);\n\t\t\t}\n\t\t}\n\t\tif (this.busy && !this.busyDelay) {\n\t\t\tthis.busyDelay = new TimeoutTimer();\n\t\t\tthis.busyDelay.setIfNotSet(() => {\n\t\t\t\tif (this.visible) {\n\t\t\t\t\tthis.ui.progressBar.infinite();\n\t\t\t\t}\n\t\t\t}, 800);\n\t\t}\n\t\tif (!this.busy && this.busyDelay) {\n\t\t\tthis.ui.progressBar.stop();\n\t\t\tthis.busyDelay.cancel();\n\t\t\tthis.busyDelay = undefined;\n\t\t}\n\t\tif (this.buttonsUpdated) {\n\t\t\tthis.buttonsUpdated = false;\n\t\t\tthis.ui.leftActionBar.clear();\n\t\t\tconst leftButtons = this._leftButtons\n\t\t\t\t.map((button, index) => quickInputButtonToAction(\n\t\t\t\t\tbutton,\n\t\t\t\t\t`id-${index}`,\n\t\t\t\t\tasync () => this.onDidTriggerButtonEmitter.fire(button)\n\t\t\t\t));\n\t\t\tthis.ui.leftActionBar.push(leftButtons, { icon: true, label: false });\n\t\t\tthis.ui.rightActionBar.clear();\n\t\t\tconst rightButtons = this._rightButtons\n\t\t\t\t.map((button, index) => quickInputButtonToAction(\n\t\t\t\t\tbutton,\n\t\t\t\t\t`id-${index}`,\n\t\t\t\t\tasync () => this.onDidTriggerButtonEmitter.fire(button)\n\t\t\t\t));\n\t\t\tthis.ui.rightActionBar.push(rightButtons, { icon: true, label: false });\n\t\t\tthis.ui.inlineActionBar.clear();\n\t\t\tconst inlineButtons = this._inlineButtons\n\t\t\t\t.map((button, index) => quickInputButtonToAction(\n\t\t\t\t\tbutton,\n\t\t\t\t\t`id-${index}`,\n\t\t\t\t\tasync () => this.onDidTriggerButtonEmitter.fire(button)\n\t\t\t\t));\n\t\t\tthis.ui.inlineActionBar.push(inlineButtons, { icon: true, label: false });\n\t\t}\n\t\tif (this.togglesUpdated) {\n\t\t\tthis.togglesUpdated = false;\n\t\t\t// HACK: Filter out toggles here that are not concrete Toggle objects. This is to workaround\n\t\t\t// a layering issue as quick input's interface is in common but Toggle is in browser and\n\t\t\t// it requires a HTMLElement on its interface\n\t\t\tconst concreteToggles = this.toggles?.filter(opts => opts instanceof Toggle) as Toggle[] ?? [];\n\t\t\tthis.ui.inputBox.toggles = concreteToggles;\n\t\t}\n\t\tthis.ui.ignoreFocusOut = this.ignoreFocusOut;\n\t\tthis.ui.setEnabled(this.enabled);\n\t\tthis.ui.setContextKey(this.contextKey);\n\n\t\tconst validationMessage = this.validationMessage || this.noValidationMessage;\n\t\tif (this._lastValidationMessage !== validationMessage) {\n\t\t\tthis._lastValidationMessage = validationMessage;\n\t\t\tdom.reset(this.ui.message);\n\t\t\trenderQuickInputDescription(validationMessage, this.ui.message, {\n\t\t\t\tcallback: (content) => {\n\t\t\t\t\tthis.ui.linkOpenerDelegate(content);\n\t\t\t\t},\n\t\t\t\tdisposables: this.visibleDisposables,\n\t\t\t});\n\t\t}\n\t\tif (this._lastSeverity !== this.severity) {\n\t\t\tthis._lastSeverity = this.severity;\n\t\t\tthis.showMessageDecoration(this.severity);\n\t\t}\n\t}\n\n\tprivate getTitle() {\n\t\tif (this.title && this.step) {\n\t\t\treturn `${this.title} (${this.getSteps()})`;\n\t\t}\n\t\tif (this.title) {\n\t\t\treturn this.title;\n\t\t}\n\t\tif (this.step) {\n\t\t\treturn this.getSteps();\n\t\t}\n\t\treturn '';\n\t}\n\n\tprivate getDescription() {\n\t\treturn this.description || '';\n\t}\n\n\tprivate getSteps() {\n\t\tif (this.step && this.totalSteps) {\n\t\t\treturn localize('quickInput.steps', \"{0}/{1}\", this.step, this.totalSteps);\n\t\t}\n\t\tif (this.step) {\n\t\t\treturn String(this.step);\n\t\t}\n\t\treturn '';\n\t}\n\n\tprotected showMessageDecoration(severity: Severity) {\n\t\tthis.ui.inputBox.showDecoration(severity);\n\t\tif (severity !== Severity.Ignore) {\n\t\t\tconst styles = this.ui.inputBox.stylesForType(severity);\n\t\t\tthis.ui.message.style.color = styles.foreground ? `${styles.foreground}` : '';\n\t\t\tthis.ui.message.style.backgroundColor = styles.background ? `${styles.background}` : '';\n\t\t\tthis.ui.message.style.border = styles.border ? `1px solid ${styles.border}` : '';\n\t\t\tthis.ui.message.style.marginBottom = '-2px';\n\t\t} else {\n\t\t\tthis.ui.message.style.color = '';\n\t\t\tthis.ui.message.style.backgroundColor = '';\n\t\t\tthis.ui.message.style.border = '';\n\t\t\tthis.ui.message.style.marginBottom = '';\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.hide();\n\t\tthis.onDisposeEmitter.fire();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class QuickPick<T extends IQuickPickItem, O extends { useSeparators: boolean } = { useSeparators: false }> extends QuickInput implements IQuickPick<T, O> {\n\n\tprivate static readonly DEFAULT_ARIA_LABEL = localize('quickInputBox.ariaLabel', \"Type to narrow down results.\");\n\n\tprivate _value = '';\n\tprivate _ariaLabel: string | undefined;\n\tprivate _placeholder: string | undefined;\n\tprivate readonly onDidChangeValueEmitter = this._register(new Emitter<string>());\n\tprivate readonly onWillAcceptEmitter = this._register(new Emitter<IQuickPickWillAcceptEvent>());\n\tprivate readonly onDidAcceptEmitter = this._register(new Emitter<IQuickPickDidAcceptEvent>());\n\tprivate readonly onDidCustomEmitter = this._register(new Emitter<void>());\n\tprivate _items: O extends { useSeparators: true } ? Array<T | IQuickPickSeparator> : Array<T> = [];\n\tprivate itemsUpdated = false;\n\tprivate _canSelectMany = false;\n\tprivate _canAcceptInBackground = false;\n\tprivate _matchOnDescription = false;\n\tprivate _matchOnDetail = false;\n\tprivate _matchOnLabel = true;\n\tprivate _matchOnLabelMode: 'fuzzy' | 'contiguous' = 'fuzzy';\n\tprivate _sortByLabel = true;\n\tprivate _keepScrollPosition = false;\n\tprivate _itemActivation = ItemActivation.FIRST;\n\tprivate _activeItems: T[] = [];\n\tprivate activeItemsUpdated = false;\n\tprivate activeItemsToConfirm: T[] | null = [];\n\tprivate readonly onDidChangeActiveEmitter = this._register(new Emitter<T[]>());\n\tprivate _selectedItems: T[] = [];\n\tprivate selectedItemsUpdated = false;\n\tprivate selectedItemsToConfirm: T[] | null = [];\n\tprivate readonly onDidChangeSelectionEmitter = this._register(new Emitter<T[]>());\n\tprivate readonly onDidTriggerItemButtonEmitter = this._register(new Emitter<IQuickPickItemButtonEvent<T>>());\n\tprivate readonly onDidTriggerSeparatorButtonEmitter = this._register(new Emitter<IQuickPickSeparatorButtonEvent>());\n\tprivate _valueSelection: Readonly<[number, number]> | undefined;\n\tprivate valueSelectionUpdated = true;\n\tprivate _ok: boolean | 'default' = 'default';\n\tprivate _okLabel: string | undefined;\n\tprivate _customButton = false;\n\tprivate _customButtonLabel: string | undefined;\n\tprivate _customButtonHover: string | undefined;\n\tprivate _quickNavigate: IQuickNavigateConfiguration | undefined;\n\tprivate _hideInput: boolean | undefined;\n\tprivate _hideCountBadge: boolean | undefined;\n\tprivate _hideCheckAll: boolean | undefined;\n\tprivate _focusEventBufferer = new EventBufferer();\n\n\treadonly type = QuickInputType.QuickPick;\n\n\tget quickNavigate() {\n\t\treturn this._quickNavigate;\n\t}\n\n\tset quickNavigate(quickNavigate: IQuickNavigateConfiguration | undefined) {\n\t\tthis._quickNavigate = quickNavigate;\n\t\tthis.update();\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis.doSetValue(value);\n\t}\n\n\tprivate doSetValue(value: string, skipUpdate?: boolean): void {\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tif (!skipUpdate) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t\tif (this.visible) {\n\t\t\t\tconst didFilter = this.ui.list.filter(this.filterValue(this._value));\n\t\t\t\tif (didFilter) {\n\t\t\t\t\tthis.trySelectFirst();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.onDidChangeValueEmitter.fire(this._value);\n\t\t}\n\t}\n\n\tfilterValue = (value: string) => value;\n\n\tset ariaLabel(ariaLabel: string | undefined) {\n\t\tthis._ariaLabel = ariaLabel;\n\t\tthis.update();\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._ariaLabel;\n\t}\n\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string | undefined) {\n\t\tthis._placeholder = placeholder;\n\t\tthis.update();\n\t}\n\n\tonDidChangeValue = this.onDidChangeValueEmitter.event;\n\n\tonWillAccept = this.onWillAcceptEmitter.event;\n\tonDidAccept = this.onDidAcceptEmitter.event;\n\n\tget items() {\n\t\treturn this._items;\n\t}\n\n\tget scrollTop() {\n\t\treturn this.ui.list.scrollTop;\n\t}\n\n\tprivate set scrollTop(scrollTop: number) {\n\t\tthis.ui.list.scrollTop = scrollTop;\n\t}\n\n\tset items(items: O extends { useSeparators: true } ? Array<T | IQuickPickSeparator> : Array<T>) {\n\t\tthis._items = items;\n\t\tthis.itemsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget canSelectMany() {\n\t\treturn this._canSelectMany;\n\t}\n\n\tset canSelectMany(canSelectMany: boolean) {\n\t\tthis._canSelectMany = canSelectMany;\n\t\tthis.update();\n\t}\n\n\tget canAcceptInBackground() {\n\t\treturn this._canAcceptInBackground;\n\t}\n\n\tset canAcceptInBackground(canAcceptInBackground: boolean) {\n\t\tthis._canAcceptInBackground = canAcceptInBackground;\n\t}\n\n\tget matchOnDescription() {\n\t\treturn this._matchOnDescription;\n\t}\n\n\tset matchOnDescription(matchOnDescription: boolean) {\n\t\tthis._matchOnDescription = matchOnDescription;\n\t\tthis.update();\n\t}\n\n\tget matchOnDetail() {\n\t\treturn this._matchOnDetail;\n\t}\n\n\tset matchOnDetail(matchOnDetail: boolean) {\n\t\tthis._matchOnDetail = matchOnDetail;\n\t\tthis.update();\n\t}\n\n\tget matchOnLabel() {\n\t\treturn this._matchOnLabel;\n\t}\n\n\tset matchOnLabel(matchOnLabel: boolean) {\n\t\tthis._matchOnLabel = matchOnLabel;\n\t\tthis.update();\n\t}\n\n\tget matchOnLabelMode() {\n\t\treturn this._matchOnLabelMode;\n\t}\n\n\tset matchOnLabelMode(matchOnLabelMode: 'fuzzy' | 'contiguous') {\n\t\tthis._matchOnLabelMode = matchOnLabelMode;\n\t\tthis.update();\n\t}\n\n\tget sortByLabel() {\n\t\treturn this._sortByLabel;\n\t}\n\n\tset sortByLabel(sortByLabel: boolean) {\n\t\tthis._sortByLabel = sortByLabel;\n\t\tthis.update();\n\t}\n\n\tget keepScrollPosition() {\n\t\treturn this._keepScrollPosition;\n\t}\n\n\tset keepScrollPosition(keepScrollPosition: boolean) {\n\t\tthis._keepScrollPosition = keepScrollPosition;\n\t}\n\n\tget itemActivation() {\n\t\treturn this._itemActivation;\n\t}\n\n\tset itemActivation(itemActivation: ItemActivation) {\n\t\tthis._itemActivation = itemActivation;\n\t}\n\n\tget activeItems() {\n\t\treturn this._activeItems;\n\t}\n\n\tset activeItems(activeItems: T[]) {\n\t\tthis._activeItems = activeItems;\n\t\tthis.activeItemsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tonDidChangeActive = this.onDidChangeActiveEmitter.event;\n\n\tget selectedItems() {\n\t\treturn this._selectedItems;\n\t}\n\n\tset selectedItems(selectedItems: T[]) {\n\t\tthis._selectedItems = selectedItems;\n\t\tthis.selectedItemsUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget keyMods() {\n\t\tif (this._quickNavigate) {\n\t\t\t// Disable keyMods when quick navigate is enabled\n\t\t\t// because in this model the interaction is purely\n\t\t\t// keyboard driven and Ctrl/Alt are typically\n\t\t\t// pressed and hold during this interaction.\n\t\t\treturn NO_KEY_MODS;\n\t\t}\n\t\treturn this.ui.keyMods;\n\t}\n\n\tget valueSelection() {\n\t\tconst selection = this.ui.inputBox.getSelection();\n\t\tif (!selection) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn [selection.start, selection.end];\n\t}\n\n\tset valueSelection(valueSelection: Readonly<[number, number]> | undefined) {\n\t\tthis._valueSelection = valueSelection;\n\t\tthis.valueSelectionUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget customButton() {\n\t\treturn this._customButton;\n\t}\n\n\tset customButton(showCustomButton: boolean) {\n\t\tthis._customButton = showCustomButton;\n\t\tthis.update();\n\t}\n\n\tget customLabel() {\n\t\treturn this._customButtonLabel;\n\t}\n\n\tset customLabel(label: string | undefined) {\n\t\tthis._customButtonLabel = label;\n\t\tthis.update();\n\t}\n\n\tget customHover() {\n\t\treturn this._customButtonHover;\n\t}\n\n\tset customHover(hover: string | undefined) {\n\t\tthis._customButtonHover = hover;\n\t\tthis.update();\n\t}\n\n\tget ok() {\n\t\treturn this._ok;\n\t}\n\n\tset ok(showOkButton: boolean | 'default') {\n\t\tthis._ok = showOkButton;\n\t\tthis.update();\n\t}\n\n\tget okLabel() {\n\t\treturn this._okLabel ?? localize('ok', \"OK\");\n\t}\n\n\tset okLabel(okLabel: string | undefined) {\n\t\tthis._okLabel = okLabel;\n\t\tthis.update();\n\t}\n\n\tget hideInput() {\n\t\treturn !!this._hideInput;\n\t}\n\n\tset hideInput(hideInput: boolean) {\n\t\tthis._hideInput = hideInput;\n\t\tthis.update();\n\t}\n\n\tonDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n\n\tonDidTriggerItemButton = this.onDidTriggerItemButtonEmitter.event;\n\n\tonDidTriggerSeparatorButton = this.onDidTriggerSeparatorButtonEmitter.event;\n\n\tprivate trySelectFirst() {\n\t\tif (!this.canSelectMany) {\n\t\t\tthis.ui.list.focus(QuickPickFocus.First);\n\t\t}\n\t}\n\n\toverride show() {\n\t\tif (!this.visible) {\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.inputBox.onDidChange(value => {\n\t\t\t\t\tthis.doSetValue(value, true /* skip update since this originates from the UI */);\n\t\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this.ui.onDidAccept(() => {\n\t\t\t\tif (this.canSelectMany) {\n\t\t\t\t\t// if there are no checked elements, it means that an onDidChangeSelection never fired to overwrite\n\t\t\t\t\t// `_selectedItems`. In that case, we should emit one with an empty array to ensure that\n\t\t\t\t\t// `.selectedItems` is up to date.\n\t\t\t\t\tif (!this.ui.list.getCheckedElements().length) {\n\t\t\t\t\t\tthis._selectedItems = [];\n\t\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(this.selectedItems);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.activeItems[0]) {\n\t\t\t\t\t// For single-select, we set `selectedItems` to the item that was accepted.\n\t\t\t\t\tthis._selectedItems = [this.activeItems[0]];\n\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(this.selectedItems);\n\t\t\t\t}\n\t\t\t\tthis.handleAccept(false);\n\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this.ui.onDidCustom(() => {\n\t\t\t\tthis.onDidCustomEmitter.fire();\n\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this._focusEventBufferer.wrapEvent(\n\t\t\t\tthis.ui.list.onDidChangeFocus,\n\t\t\t\t// Only fire the last event\n\t\t\t\t(_, e) => e\n\t\t\t)(focusedItems => {\n\t\t\t\tif (this.activeItemsUpdated) {\n\t\t\t\t\treturn; // Expect another event.\n\t\t\t\t}\n\t\t\t\tif (this.activeItemsToConfirm !== this._activeItems && equals(focusedItems, this._activeItems, (a, b) => a === b)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._activeItems = focusedItems as T[];\n\t\t\t\tthis.onDidChangeActiveEmitter.fire(focusedItems as T[]);\n\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this.ui.list.onDidChangeSelection(({ items: selectedItems, event }) => {\n\t\t\t\tif (this.canSelectMany && !selectedItems.some(i => i.pickable === false)) {\n\t\t\t\t\tif (selectedItems.length) {\n\t\t\t\t\t\tthis.ui.list.setSelectedElements([]);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.selectedItemsToConfirm !== this._selectedItems && equals(selectedItems, this._selectedItems, (a, b) => a === b)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._selectedItems = selectedItems as T[];\n\t\t\t\tthis.onDidChangeSelectionEmitter.fire(selectedItems as T[]);\n\t\t\t\tif (selectedItems.length) {\n\t\t\t\t\tthis.handleAccept(dom.isMouseEvent(event) && event.button === 1 /* mouse middle click */);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this.ui.list.onChangedCheckedElements(checkedItems => {\n\t\t\t\tif (!this.canSelectMany || !this.visible) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.selectedItemsToConfirm !== this._selectedItems && equals(checkedItems, this._selectedItems, (a, b) => a === b)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._selectedItems = checkedItems as T[];\n\t\t\t\tthis.onDidChangeSelectionEmitter.fire(checkedItems as T[]);\n\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this.ui.list.onButtonTriggered(event => this.onDidTriggerItemButtonEmitter.fire(event as IQuickPickItemButtonEvent<T>)));\n\t\t\tthis.visibleDisposables.add(this.ui.list.onSeparatorButtonTriggered(event => this.onDidTriggerSeparatorButtonEmitter.fire(event)));\n\t\t\tthis.visibleDisposables.add(this.registerQuickNavigation());\n\t\t\tthis.valueSelectionUpdated = true;\n\t\t}\n\t\tsuper.show(); // TODO: Why have show() bubble up while update() trickles down?\n\t}\n\n\tprivate handleAccept(inBackground: boolean): void {\n\n\t\t// Figure out veto via `onWillAccept` event\n\t\tlet veto = false;\n\t\tthis.onWillAcceptEmitter.fire({ veto: () => veto = true });\n\n\t\t// Continue with `onDidAccept` if no veto\n\t\tif (!veto) {\n\t\t\tthis.onDidAcceptEmitter.fire({ inBackground });\n\t\t}\n\t}\n\n\tprivate registerQuickNavigation() {\n\t\treturn dom.addDisposableListener(this.ui.container, dom.EventType.KEY_UP, e => {\n\t\t\tif (this.canSelectMany || !this._quickNavigate) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst keyboardEvent: StandardKeyboardEvent = new StandardKeyboardEvent(e);\n\t\t\tconst keyCode = keyboardEvent.keyCode;\n\n\t\t\t// Select element when keys are pressed that signal it\n\t\t\tconst quickNavKeys = this._quickNavigate.keybindings;\n\t\t\tconst wasTriggerKeyPressed = quickNavKeys.some(k => {\n\t\t\t\tconst chords = k.getChords();\n\t\t\t\tif (chords.length > 1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif (chords[0].shiftKey && keyCode === KeyCode.Shift) {\n\t\t\t\t\tif (keyboardEvent.ctrlKey || keyboardEvent.altKey || keyboardEvent.metaKey) {\n\t\t\t\t\t\treturn false; // this is an optimistic check for the shift key being used to navigate back in quick input\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (chords[0].altKey && keyCode === KeyCode.Alt) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (chords[0].ctrlKey && keyCode === KeyCode.Ctrl) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (chords[0].metaKey && keyCode === KeyCode.Meta) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tif (wasTriggerKeyPressed) {\n\t\t\t\tif (this.activeItems[0]) {\n\t\t\t\t\tthis._selectedItems = [this.activeItems[0]];\n\t\t\t\t\tthis.onDidChangeSelectionEmitter.fire(this.selectedItems);\n\t\t\t\t\tthis.handleAccept(false);\n\t\t\t\t}\n\t\t\t\t// Unset quick navigate after press. It is only valid once\n\t\t\t\t// and should not result in any behaviour change afterwards\n\t\t\t\t// if the picker remains open because there was no active item\n\t\t\t\tthis._quickNavigate = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected override update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\t\t// store the scrollTop before it is reset\n\t\tconst scrollTopBefore = this.keepScrollPosition ? this.scrollTop : 0;\n\t\tconst hasDescription = !!this.description;\n\t\tconst visibilities: Visibilities = {\n\t\t\ttitle: !!this.title || !!this.step || !!this.titleButtons.length,\n\t\t\tdescription: hasDescription,\n\t\t\tcheckAll: this.canSelectMany && !this._hideCheckAll,\n\t\t\tcheckBox: this.canSelectMany,\n\t\t\tinputBox: !this._hideInput,\n\t\t\tprogressBar: !this._hideInput || hasDescription,\n\t\t\tvisibleCount: true,\n\t\t\tcount: this.canSelectMany && !this._hideCountBadge,\n\t\t\tok: this.ok === 'default' ? this.canSelectMany : this.ok,\n\t\t\tlist: true,\n\t\t\tmessage: !!this.validationMessage,\n\t\t\tcustomButton: this.customButton\n\t\t};\n\t\tthis.ui.setVisibilities(visibilities);\n\t\tsuper.update();\n\t\tif (this.ui.inputBox.value !== this.value) {\n\t\t\tthis.ui.inputBox.value = this.value;\n\t\t}\n\t\tif (this.valueSelectionUpdated) {\n\t\t\tthis.valueSelectionUpdated = false;\n\t\t\tthis.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n\t\t}\n\t\tif (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n\t\t\tthis.ui.inputBox.placeholder = (this.placeholder || '');\n\t\t}\n\n\t\tlet ariaLabel = this.ariaLabel;\n\t\t// Only set aria label to the input box placeholder if we actually have an input box.\n\t\tif (!ariaLabel && visibilities.inputBox) {\n\t\t\tariaLabel = this.placeholder || QuickPick.DEFAULT_ARIA_LABEL;\n\t\t\t// If we have a title, include it in the aria label.\n\t\t\tif (this.title) {\n\t\t\t\tariaLabel += ` - ${this.title}`;\n\t\t\t}\n\t\t}\n\t\tif (this.ui.list.ariaLabel !== ariaLabel) {\n\t\t\tthis.ui.list.ariaLabel = ariaLabel ?? null;\n\t\t}\n\t\tif (this.ui.inputBox.ariaLabel !== ariaLabel) {\n\t\t\tthis.ui.inputBox.ariaLabel = ariaLabel ?? 'input';\n\t\t}\n\t\tthis.ui.list.matchOnDescription = this.matchOnDescription;\n\t\tthis.ui.list.matchOnDetail = this.matchOnDetail;\n\t\tthis.ui.list.matchOnLabel = this.matchOnLabel;\n\t\tthis.ui.list.matchOnLabelMode = this.matchOnLabelMode;\n\t\tthis.ui.list.sortByLabel = this.sortByLabel;\n\t\tif (this.itemsUpdated) {\n\t\t\tthis.itemsUpdated = false;\n\t\t\tthis._focusEventBufferer.bufferEvents(() => {\n\t\t\t\tthis.ui.list.setElements(this.items);\n\t\t\t\t// We want focus to exist in the list if there are items so that space can be used to toggle\n\t\t\t\tthis.ui.list.shouldLoop = !this.canSelectMany;\n\t\t\t\tthis.ui.list.filter(this.filterValue(this.ui.inputBox.value));\n\t\t\t\tswitch (this._itemActivation) {\n\t\t\t\t\tcase ItemActivation.NONE:\n\t\t\t\t\t\tthis._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemActivation.SECOND:\n\t\t\t\t\t\tthis.ui.list.focus(QuickPickFocus.Second);\n\t\t\t\t\t\tthis._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ItemActivation.LAST:\n\t\t\t\t\t\tthis.ui.list.focus(QuickPickFocus.Last);\n\t\t\t\t\t\tthis._itemActivation = ItemActivation.FIRST; // only valid once, then unset\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthis.trySelectFirst();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (this.ui.container.classList.contains('show-checkboxes') !== !!this.canSelectMany) {\n\t\t\tif (this.canSelectMany) {\n\t\t\t\tthis.ui.list.clearFocus();\n\t\t\t} else {\n\t\t\t\tthis.trySelectFirst();\n\t\t\t}\n\t\t}\n\t\tif (this.activeItemsUpdated) {\n\t\t\tthis.activeItemsUpdated = false;\n\t\t\tthis.activeItemsToConfirm = this._activeItems;\n\t\t\tthis.ui.list.setFocusedElements(this.activeItems);\n\t\t\tif (this.activeItemsToConfirm === this._activeItems) {\n\t\t\t\tthis.activeItemsToConfirm = null;\n\t\t\t}\n\t\t}\n\t\tif (this.selectedItemsUpdated) {\n\t\t\tthis.selectedItemsUpdated = false;\n\t\t\tthis.selectedItemsToConfirm = this._selectedItems;\n\t\t\tif (this.canSelectMany) {\n\t\t\t\tthis.ui.list.setCheckedElements(this.selectedItems);\n\t\t\t} else {\n\t\t\t\tthis.ui.list.setSelectedElements(this.selectedItems);\n\t\t\t}\n\t\t\tif (this.selectedItemsToConfirm === this._selectedItems) {\n\t\t\t\tthis.selectedItemsToConfirm = null;\n\t\t\t}\n\t\t}\n\t\tthis.ui.ok.label = this.okLabel || '';\n\t\tthis.ui.customButton.label = this.customLabel || '';\n\t\tthis.ui.customButton.element.title = this.customHover || '';\n\t\tif (!visibilities.inputBox) {\n\t\t\t// we need to move focus into the tree to detect keybindings\n\t\t\t// properly when the input box is not visible (quick nav)\n\t\t\tthis.ui.list.domFocus();\n\n\t\t\t// Focus the first element in the list if multiselect is enabled\n\t\t\tif (this.canSelectMany) {\n\t\t\t\tthis.ui.list.focus(QuickPickFocus.First);\n\t\t\t}\n\t\t}\n\n\t\t// Set the scroll position to what it was before updating the items\n\t\tif (this.keepScrollPosition) {\n\t\t\tthis.scrollTop = scrollTopBefore;\n\t\t}\n\t}\n\n\tfocus(focus: QuickPickFocus): void {\n\t\tthis.ui.list.focus(focus);\n\t\t// To allow things like space to check/uncheck items\n\t\tif (this.canSelectMany) {\n\t\t\tthis.ui.list.domFocus();\n\t\t}\n\t}\n\n\taccept(inBackground?: boolean | undefined): void {\n\t\tif (inBackground && !this._canAcceptInBackground) {\n\t\t\treturn; // needs to be enabled\n\t\t}\n\n\t\tif (this.activeItems[0]) {\n\t\t\tthis._selectedItems = [this.activeItems[0]];\n\t\t\tthis.onDidChangeSelectionEmitter.fire(this.selectedItems);\n\t\t\tthis.handleAccept(inBackground ?? false);\n\t\t}\n\t}\n}\n\nexport class InputBox extends QuickInput implements IInputBox {\n\tprivate _value = '';\n\tprivate _valueSelection: Readonly<[number, number]> | undefined;\n\tprivate valueSelectionUpdated = true;\n\tprivate _placeholder: string | undefined;\n\tprivate _ariaLabel: string | undefined;\n\tprivate _password = false;\n\tprivate _prompt: string | undefined;\n\tprivate readonly onDidValueChangeEmitter = this._register(new Emitter<string>());\n\tprivate readonly onDidAcceptEmitter = this._register(new Emitter<void>());\n\n\treadonly type = QuickInputType.InputBox;\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: string) {\n\t\tthis._value = value || '';\n\t\tthis.update();\n\t}\n\n\tget valueSelection() {\n\t\tconst selection = this.ui.inputBox.getSelection();\n\t\tif (!selection) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn [selection.start, selection.end];\n\t}\n\n\tset valueSelection(valueSelection: Readonly<[number, number]> | undefined) {\n\t\tthis._valueSelection = valueSelection;\n\t\tthis.valueSelectionUpdated = true;\n\t\tthis.update();\n\t}\n\n\tget placeholder() {\n\t\treturn this._placeholder;\n\t}\n\n\tset placeholder(placeholder: string | undefined) {\n\t\tthis._placeholder = placeholder;\n\t\tthis.update();\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._ariaLabel;\n\t}\n\n\tset ariaLabel(ariaLabel: string | undefined) {\n\t\tthis._ariaLabel = ariaLabel;\n\t\tthis.update();\n\t}\n\n\tget password() {\n\t\treturn this._password;\n\t}\n\n\tset password(password: boolean) {\n\t\tthis._password = password;\n\t\tthis.update();\n\t}\n\n\tget prompt() {\n\t\treturn this._prompt;\n\t}\n\n\tset prompt(prompt: string | undefined) {\n\t\tthis._prompt = prompt;\n\t\tthis.noValidationMessage = prompt\n\t\t\t? localize('inputModeEntryDescription', \"{0} (Press 'Enter' to confirm or 'Escape' to cancel)\", prompt)\n\t\t\t: QuickInput.noPromptMessage;\n\t\tthis.update();\n\t}\n\n\treadonly onDidChangeValue = this.onDidValueChangeEmitter.event;\n\n\treadonly onDidAccept = this.onDidAcceptEmitter.event;\n\n\toverride show() {\n\t\tif (!this.visible) {\n\t\t\tthis.visibleDisposables.add(\n\t\t\t\tthis.ui.inputBox.onDidChange(value => {\n\t\t\t\t\tif (value === this.value) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._value = value;\n\t\t\t\t\tthis.onDidValueChangeEmitter.fire(value);\n\t\t\t\t}));\n\t\t\tthis.visibleDisposables.add(this.ui.onDidAccept(() => this.onDidAcceptEmitter.fire()));\n\t\t\tthis.valueSelectionUpdated = true;\n\t\t}\n\t\tsuper.show();\n\t}\n\n\tprotected override update() {\n\t\tif (!this.visible) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.ui.container.classList.remove('hidden-input');\n\t\tconst visibilities: Visibilities = {\n\t\t\ttitle: !!this.title || !!this.step || !!this.titleButtons.length,\n\t\t\tdescription: !!this.description || !!this.step,\n\t\t\tinputBox: true,\n\t\t\tmessage: true,\n\t\t\tprogressBar: true\n\t\t};\n\n\t\tthis.ui.setVisibilities(visibilities);\n\t\tsuper.update();\n\t\tif (this.ui.inputBox.value !== this.value) {\n\t\t\tthis.ui.inputBox.value = this.value;\n\t\t}\n\t\tif (this.valueSelectionUpdated) {\n\t\t\tthis.valueSelectionUpdated = false;\n\t\t\tthis.ui.inputBox.select(this._valueSelection && { start: this._valueSelection[0], end: this._valueSelection[1] });\n\t\t}\n\t\tif (this.ui.inputBox.placeholder !== (this.placeholder || '')) {\n\t\t\tthis.ui.inputBox.placeholder = (this.placeholder || '');\n\t\t}\n\t\tif (this.ui.inputBox.password !== this.password) {\n\t\t\tthis.ui.inputBox.password = this.password;\n\t\t}\n\t\tlet ariaLabel = this.ariaLabel;\n\t\t// Only set aria label to the input box placeholder if we actually have an input box.\n\t\tif (!ariaLabel && visibilities.inputBox) {\n\t\t\tariaLabel = this.placeholder\n\t\t\t\t? this.title\n\t\t\t\t\t? `${this.placeholder} - ${this.title}`\n\t\t\t\t\t: this.placeholder\n\t\t\t\t: this.title\n\t\t\t\t\t? this.title\n\t\t\t\t\t: 'input';\n\t\t}\n\t\tif (this.ui.inputBox.ariaLabel !== ariaLabel) {\n\t\t\tthis.ui.inputBox.ariaLabel = ariaLabel || 'input';\n\t\t}\n\t}\n}\n\nexport class QuickInputHoverDelegate extends WorkbenchHoverDelegate {\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IHoverService hoverService: IHoverService\n\t) {\n\t\tsuper('element', undefined, (options) => this.getOverrideOptions(options), configurationService, hoverService);\n\t}\n\n\tprivate getOverrideOptions(options: IHoverDelegateOptions): Partial<IHoverOptions> {\n\t\t// Only show the hover hint if the content is of a decent size\n\t\tconst showHoverHint = (\n\t\t\tdom.isHTMLElement(options.content)\n\t\t\t\t? options.content.textContent ?? ''\n\t\t\t\t: typeof options.content === 'string'\n\t\t\t\t\t? options.content\n\t\t\t\t\t: options.content.value\n\t\t).includes('\\n');\n\n\t\treturn {\n\t\t\tpersistence: {\n\t\t\t\thideOnKeyDown: false,\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tshowHoverHint,\n\t\t\t\tskipFadeInAnimation: true,\n\t\t\t},\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2381, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputBox.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/quickInputBox.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInputBox.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { IInputBoxStyles, IRange, MessageType } from '../../../base/browser/ui/inputbox/inputBox.js';\nimport { IToggleStyles, Toggle } from '../../../base/browser/ui/toggle/toggle.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport './media/quickInput.css';\n\nconst $ = dom.$;\n\nexport class QuickInputBox extends Disposable {\n\n\tprivate container: HTMLElement;\n\tprivate findInput: FindInput;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tinputBoxStyles: IInputBoxStyles,\n\t\ttoggleStyles: IToggleStyles\n\t) {\n\t\tsuper();\n\t\tthis.container = dom.append(this.parent, $('.quick-input-box'));\n\t\tthis.findInput = this._register(new FindInput(this.container, undefined, { label: '', inputBoxStyles, toggleStyles }));\n\t\tconst input = this.findInput.inputBox.inputElement;\n\t\tinput.role = 'textbox';\n\t\tinput.ariaHasPopup = 'menu';\n\t\tinput.ariaAutoComplete = 'list';\n\t}\n\n\tget onKeyDown() {\n\t\treturn this.findInput.onKeyDown;\n\t}\n\n\tonDidChange = (handler: (event: string) => void): IDisposable => {\n\t\treturn this.findInput.onDidChange(handler);\n\t};\n\n\tget value() {\n\t\treturn this.findInput.getValue();\n\t}\n\n\tset value(value: string) {\n\t\tthis.findInput.setValue(value);\n\t}\n\n\tselect(range: IRange | null = null): void {\n\t\tthis.findInput.inputBox.select(range);\n\t}\n\n\tgetSelection(): IRange | null {\n\t\treturn this.findInput.inputBox.getSelection();\n\t}\n\n\tisSelectionAtEnd(): boolean {\n\t\treturn this.findInput.inputBox.isSelectionAtEnd();\n\t}\n\n\tget placeholder() {\n\t\treturn this.findInput.inputBox.inputElement.getAttribute('placeholder') || '';\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis.findInput.inputBox.setPlaceHolder(placeholder);\n\t}\n\n\tget password() {\n\t\treturn this.findInput.inputBox.inputElement.type === 'password';\n\t}\n\n\tset password(password: boolean) {\n\t\tthis.findInput.inputBox.inputElement.type = password ? 'password' : 'text';\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\t// We can't disable the input box because it is still used for\n\t\t// navigating the list. Instead, we disable the list and the OK\n\t\t// so that nothing can be selected.\n\t\t// TODO: should this be what we do for all find inputs? Or maybe some _other_ API\n\t\t// on findInput to change it to readonly?\n\t\tthis.findInput.inputBox.inputElement.toggleAttribute('readonly', !enabled);\n\t\t// TODO: styles of the quick pick need to be moved to the CSS instead of being in line\n\t\t// so things like this can be done in CSS\n\t\t// this.findInput.inputBox.inputElement.classList.toggle('disabled', !enabled);\n\t}\n\n\tset toggles(toggles: Toggle[] | undefined) {\n\t\tthis.findInput.setAdditionalToggles(toggles);\n\t}\n\n\tget ariaLabel(): string {\n\t\treturn this.findInput.inputBox.inputElement.getAttribute('aria-label') || '';\n\t}\n\n\tset ariaLabel(ariaLabel: string) {\n\t\tthis.findInput.inputBox.inputElement.setAttribute('aria-label', ariaLabel);\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.findInput.inputBox.hasFocus();\n\t}\n\n\tsetAttribute(name: string, value: string): void {\n\t\tthis.findInput.inputBox.inputElement.setAttribute(name, value);\n\t}\n\n\tremoveAttribute(name: string): void {\n\t\tthis.findInput.inputBox.inputElement.removeAttribute(name);\n\t}\n\n\tshowDecoration(decoration: Severity): void {\n\t\tif (decoration === Severity.Ignore) {\n\t\t\tthis.findInput.clearMessage();\n\t\t} else {\n\t\t\tthis.findInput.showMessage({ type: decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR, content: '' });\n\t\t}\n\t}\n\n\tstylesForType(decoration: Severity) {\n\t\treturn this.findInput.inputBox.stylesForType(decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR);\n\t}\n\n\tsetFocus(): void {\n\t\tthis.findInput.focus();\n\t}\n\n\tlayout(): void {\n\t\tthis.findInput.inputBox.layout();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { IInputBoxStyles, IRange, MessageType } from '../../../base/browser/ui/inputbox/inputBox.js';\nimport { IToggleStyles, Toggle } from '../../../base/browser/ui/toggle/toggle.js';\nimport { Disposable, IDisposable } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport './media/quickInput.css';\n\nconst $ = dom.$;\n\nexport class QuickInputBox extends Disposable {\n\n\tprivate container: HTMLElement;\n\tprivate findInput: FindInput;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tinputBoxStyles: IInputBoxStyles,\n\t\ttoggleStyles: IToggleStyles\n\t) {\n\t\tsuper();\n\t\tthis.container = dom.append(this.parent, $('.quick-input-box'));\n\t\tthis.findInput = this._register(new FindInput(this.container, undefined, { label: '', inputBoxStyles, toggleStyles }));\n\t\tconst input = this.findInput.inputBox.inputElement;\n\t\tinput.role = 'textbox';\n\t\tinput.ariaHasPopup = 'menu';\n\t\tinput.ariaAutoComplete = 'list';\n\t}\n\n\tget onKeyDown() {\n\t\treturn this.findInput.onKeyDown;\n\t}\n\n\tonDidChange = (handler: (event: string) => void): IDisposable => {\n\t\treturn this.findInput.onDidChange(handler);\n\t};\n\n\tget value() {\n\t\treturn this.findInput.getValue();\n\t}\n\n\tset value(value: string) {\n\t\tthis.findInput.setValue(value);\n\t}\n\n\tselect(range: IRange | null = null): void {\n\t\tthis.findInput.inputBox.select(range);\n\t}\n\n\tgetSelection(): IRange | null {\n\t\treturn this.findInput.inputBox.getSelection();\n\t}\n\n\tisSelectionAtEnd(): boolean {\n\t\treturn this.findInput.inputBox.isSelectionAtEnd();\n\t}\n\n\tget placeholder() {\n\t\treturn this.findInput.inputBox.inputElement.getAttribute('placeholder') || '';\n\t}\n\n\tset placeholder(placeholder: string) {\n\t\tthis.findInput.inputBox.setPlaceHolder(placeholder);\n\t}\n\n\tget password() {\n\t\treturn this.findInput.inputBox.inputElement.type === 'password';\n\t}\n\n\tset password(password: boolean) {\n\t\tthis.findInput.inputBox.inputElement.type = password ? 'password' : 'text';\n\t}\n\n\tset enabled(enabled: boolean) {\n\t\t// We can't disable the input box because it is still used for\n\t\t// navigating the list. Instead, we disable the list and the OK\n\t\t// so that nothing can be selected.\n\t\t// TODO: should this be what we do for all find inputs? Or maybe some _other_ API\n\t\t// on findInput to change it to readonly?\n\t\tthis.findInput.inputBox.inputElement.toggleAttribute('readonly', !enabled);\n\t\t// TODO: styles of the quick pick need to be moved to the CSS instead of being in line\n\t\t// so things like this can be done in CSS\n\t\t// this.findInput.inputBox.inputElement.classList.toggle('disabled', !enabled);\n\t}\n\n\tset toggles(toggles: Toggle[] | undefined) {\n\t\tthis.findInput.setAdditionalToggles(toggles);\n\t}\n\n\tget ariaLabel(): string {\n\t\treturn this.findInput.inputBox.inputElement.getAttribute('aria-label') || '';\n\t}\n\n\tset ariaLabel(ariaLabel: string) {\n\t\tthis.findInput.inputBox.inputElement.setAttribute('aria-label', ariaLabel);\n\t}\n\n\thasFocus(): boolean {\n\t\treturn this.findInput.inputBox.hasFocus();\n\t}\n\n\tsetAttribute(name: string, value: string): void {\n\t\tthis.findInput.inputBox.inputElement.setAttribute(name, value);\n\t}\n\n\tremoveAttribute(name: string): void {\n\t\tthis.findInput.inputBox.inputElement.removeAttribute(name);\n\t}\n\n\tshowDecoration(decoration: Severity): void {\n\t\tif (decoration === Severity.Ignore) {\n\t\t\tthis.findInput.clearMessage();\n\t\t} else {\n\t\t\tthis.findInput.showMessage({ type: decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR, content: '' });\n\t\t}\n\t}\n\n\tstylesForType(decoration: Severity) {\n\t\treturn this.findInput.inputBox.stylesForType(decoration === Severity.Info ? MessageType.INFO : decoration === Severity.Warning ? MessageType.WARNING : MessageType.ERROR);\n\t}\n\n\tsetFocus(): void {\n\t\tthis.findInput.focus();\n\t}\n\n\tlayout(): void {\n\t\tthis.findInput.inputBox.layout();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2499, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputList.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInputList.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cssJs from '../../../base/browser/cssValue.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { AriaRole } from '../../../base/browser/ui/aria/aria.js';\nimport { IHoverWidget, IManagedHoverTooltipMarkdownString } from '../../../base/browser/ui/hover/hover.js';\nimport { IHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegate.js';\nimport { HoverPosition } from '../../../base/browser/ui/hover/hoverWidget.js';\nimport { IIconLabelValueOptions, IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { IListVirtualDelegate } from '../../../base/browser/ui/list/list.js';\nimport { IListAccessibilityProvider, IListStyles } from '../../../base/browser/ui/list/listWidget.js';\nimport { Checkbox } from '../../../base/browser/ui/toggle/toggle.js';\nimport { RenderIndentGuides } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { IObjectTreeElement, ITreeNode, ITreeRenderer, TreeVisibility } from '../../../base/browser/ui/tree/tree.js';\nimport { equals } from '../../../base/common/arrays.js';\nimport { ThrottledDelayer } from '../../../base/common/async.js';\nimport { compareAnything } from '../../../base/common/comparers.js';\nimport { memoize } from '../../../base/common/decorators.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { Emitter, Event, EventBufferer, IValueWithChangeEvent } from '../../../base/common/event.js';\nimport { IMatch } from '../../../base/common/filters.js';\nimport { IMarkdownString } from '../../../base/common/htmlContent.js';\nimport { IParsedLabelWithIcons, getCodiconAriaLabel, matchesFuzzyIconAware, parseLabelWithIcons } from '../../../base/common/iconLabels.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { observableValue, observableValueOpts, transaction } from '../../../base/common/observable.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { escape, ltrim } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../list/browser/listService.js';\nimport { defaultCheckboxStyles } from '../../theme/browser/defaultStyles.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { IQuickPickItem, IQuickPickItemButtonEvent, IQuickPickSeparator, IQuickPickSeparatorButtonEvent, QuickPickFocus, QuickPickItem } from '../common/quickInput.js';\nimport { quickInputButtonToAction } from './quickInputUtils.js';\n\nconst $ = dom.$;\n\ninterface IQuickInputItemLazyParts {\n\treadonly saneLabel: string;\n\treadonly saneSortLabel: string;\n\treadonly saneAriaLabel: string;\n}\n\ninterface IQuickPickElement extends IQuickInputItemLazyParts {\n\treadonly hasCheckbox: boolean;\n\treadonly saneDetail?: string;\n\treadonly saneTooltip?: string | IMarkdownString | HTMLElement;\n\thidden: boolean;\n\telement?: HTMLElement;\n\tlabelHighlights?: IMatch[];\n\tseparator?: IQuickPickSeparator;\n}\n\ninterface IQuickInputItemTemplateData {\n\tentry: HTMLDivElement;\n\tcheckbox: MutableDisposable<Checkbox>;\n\ticon: HTMLDivElement;\n\touterLabel: HTMLElement;\n\tlabel: IconLabel;\n\tkeybinding: KeybindingLabel;\n\tdetail: IconLabel;\n\tseparator: HTMLDivElement;\n\tactionBar: ActionBar;\n\telement: IQuickPickElement;\n\ttoDisposeElement: DisposableStore;\n\ttoDisposeTemplate: DisposableStore;\n}\n\nclass BaseQuickPickItemElement implements IQuickPickElement {\n\tprivate readonly _init: Lazy<IQuickInputItemLazyParts>;\n\n\tconstructor(\n\t\treadonly index: number,\n\t\treadonly hasCheckbox: boolean,\n\t\tmainItem: QuickPickItem\n\t) {\n\t\tthis._init = new Lazy(() => {\n\t\t\tconst saneLabel = mainItem.label ?? '';\n\t\t\tconst saneSortLabel = parseLabelWithIcons(saneLabel).text.trim();\n\n\t\t\tconst saneAriaLabel = mainItem.ariaLabel || [saneLabel, this.saneDescription, this.saneDetail]\n\t\t\t\t.map(s => getCodiconAriaLabel(s))\n\t\t\t\t.filter(s => !!s)\n\t\t\t\t.join(', ');\n\n\t\t\treturn {\n\t\t\t\tsaneLabel,\n\t\t\t\tsaneSortLabel,\n\t\t\t\tsaneAriaLabel\n\t\t\t};\n\t\t});\n\t\tthis._saneDescription = mainItem.description;\n\t\tthis._saneTooltip = mainItem.tooltip;\n\t}\n\n\t// #region Lazy Getters\n\n\tget saneLabel() {\n\t\treturn this._init.value.saneLabel;\n\t}\n\tget saneSortLabel() {\n\t\treturn this._init.value.saneSortLabel;\n\t}\n\tget saneAriaLabel() {\n\t\treturn this._init.value.saneAriaLabel;\n\t}\n\n\t// #endregion\n\n\t// #region Getters and Setters\n\n\tprivate _element?: HTMLElement;\n\tget element() {\n\t\treturn this._element;\n\t}\n\tset element(value: HTMLElement | undefined) {\n\t\tthis._element = value;\n\t}\n\n\tprivate _hidden = false;\n\tget hidden() {\n\t\treturn this._hidden;\n\t}\n\tset hidden(value: boolean) {\n\t\tthis._hidden = value;\n\t}\n\n\tprivate _saneDescription?: string;\n\tget saneDescription() {\n\t\treturn this._saneDescription;\n\t}\n\tset saneDescription(value: string | undefined) {\n\t\tthis._saneDescription = value;\n\t}\n\n\tprotected _saneDetail?: string;\n\tget saneDetail() {\n\t\treturn this._saneDetail;\n\t}\n\tset saneDetail(value: string | undefined) {\n\t\tthis._saneDetail = value;\n\t}\n\n\tprivate _saneTooltip?: string | IMarkdownString | HTMLElement;\n\tget saneTooltip() {\n\t\treturn this._saneTooltip;\n\t}\n\tset saneTooltip(value: string | IMarkdownString | HTMLElement | undefined) {\n\t\tthis._saneTooltip = value;\n\t}\n\n\tprotected _labelHighlights?: IMatch[];\n\tget labelHighlights() {\n\t\treturn this._labelHighlights;\n\t}\n\tset labelHighlights(value: IMatch[] | undefined) {\n\t\tthis._labelHighlights = value;\n\t}\n\n\tprotected _descriptionHighlights?: IMatch[];\n\tget descriptionHighlights() {\n\t\treturn this._descriptionHighlights;\n\t}\n\tset descriptionHighlights(value: IMatch[] | undefined) {\n\t\tthis._descriptionHighlights = value;\n\t}\n\n\tprotected _detailHighlights?: IMatch[];\n\tget detailHighlights() {\n\t\treturn this._detailHighlights;\n\t}\n\tset detailHighlights(value: IMatch[] | undefined) {\n\t\tthis._detailHighlights = value;\n\t}\n}\n\nclass QuickPickItemElement extends BaseQuickPickItemElement {\n\treadonly onChecked: Event<boolean>;\n\n\tconstructor(\n\t\tindex: number,\n\t\treadonly childIndex: number,\n\t\thasCheckbox: boolean,\n\t\treadonly fireButtonTriggered: (event: IQuickPickItemButtonEvent<IQuickPickItem>) => void,\n\t\tprivate _onChecked: Emitter<{ element: IQuickPickElement; checked: boolean }>,\n\t\treadonly item: IQuickPickItem,\n\t\tprivate _separator: IQuickPickSeparator | undefined,\n\t) {\n\t\tsuper(index, hasCheckbox, item);\n\n\t\tthis.onChecked = hasCheckbox\n\t\t\t? Event.map(Event.filter<{ element: IQuickPickElement; checked: boolean }>(this._onChecked.event, e => e.element === this), e => e.checked)\n\t\t\t: Event.None;\n\n\t\tthis._saneDetail = item.detail;\n\t\tthis._labelHighlights = item.highlights?.label;\n\t\tthis._descriptionHighlights = item.highlights?.description;\n\t\tthis._detailHighlights = item.highlights?.detail;\n\t}\n\n\tget separator() {\n\t\treturn this._separator;\n\t}\n\tset separator(value: IQuickPickSeparator | undefined) {\n\t\tthis._separator = value;\n\t}\n\n\tprivate _checked = false;\n\tget checked() {\n\t\treturn this._checked;\n\t}\n\tset checked(value: boolean) {\n\t\tif (value !== this._checked) {\n\t\t\tthis._checked = value;\n\t\t\tthis._onChecked.fire({ element: this, checked: value });\n\t\t}\n\t}\n\n\tget checkboxDisabled() {\n\t\treturn !!this.item.disabled;\n\t}\n}\n\nenum QuickPickSeparatorFocusReason {\n\t/**\n\t * No item is hovered or active\n\t */\n\tNONE = 0,\n\t/**\n\t * Some item within this section is hovered\n\t */\n\tMOUSE_HOVER = 1,\n\t/**\n\t * Some item within this section is active\n\t */\n\tACTIVE_ITEM = 2\n}\n\nclass QuickPickSeparatorElement extends BaseQuickPickItemElement {\n\tchildren = new Array<QuickPickItemElement>();\n\t/**\n\t * If this item is >0, it means that there is some item in the list that is either:\n\t * * hovered over\n\t * * active\n\t */\n\tfocusInsideSeparator = QuickPickSeparatorFocusReason.NONE;\n\n\tconstructor(\n\t\tindex: number,\n\t\treadonly fireSeparatorButtonTriggered: (event: IQuickPickSeparatorButtonEvent) => void,\n\t\treadonly separator: IQuickPickSeparator,\n\t) {\n\t\tsuper(index, false, separator);\n\t}\n}\n\nclass QuickInputItemDelegate implements IListVirtualDelegate<IQuickPickElement> {\n\tgetHeight(element: IQuickPickElement): number {\n\n\t\tif (element instanceof QuickPickSeparatorElement) {\n\t\t\treturn 30;\n\t\t}\n\t\treturn element.saneDetail ? 44 : 22;\n\t}\n\n\tgetTemplateId(element: IQuickPickElement): string {\n\t\tif (element instanceof QuickPickItemElement) {\n\t\t\treturn QuickPickItemElementRenderer.ID;\n\t\t} else {\n\t\t\treturn QuickPickSeparatorElementRenderer.ID;\n\t\t}\n\t}\n}\n\nclass QuickInputAccessibilityProvider implements IListAccessibilityProvider<IQuickPickElement> {\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('quickInput', \"Quick Input\");\n\t}\n\n\tgetAriaLabel(element: IQuickPickElement): string | null {\n\t\treturn element.separator?.label\n\t\t\t? `${element.saneAriaLabel}, ${element.separator.label}`\n\t\t\t: element.saneAriaLabel;\n\t}\n\n\tgetWidgetRole(): AriaRole {\n\t\treturn 'listbox';\n\t}\n\n\tgetRole(element: IQuickPickElement) {\n\t\treturn element.hasCheckbox ? 'checkbox' : 'option';\n\t}\n\n\tisChecked(element: IQuickPickElement): IValueWithChangeEvent<boolean> | undefined {\n\t\tif (!element.hasCheckbox || !(element instanceof QuickPickItemElement)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tget value() { return element.checked; },\n\t\t\tonDidChange: e => element.onChecked(() => e()),\n\t\t};\n\t}\n}\n\nabstract class BaseQuickInputListRenderer<T extends IQuickPickElement> implements ITreeRenderer<T, void, IQuickInputItemTemplateData> {\n\tabstract templateId: string;\n\n\tconstructor(\n\t\tprivate readonly hoverDelegate: IHoverDelegate | undefined,\n\t) { }\n\n\t// TODO: only do the common stuff here and have a subclass handle their specific stuff\n\trenderTemplate(container: HTMLElement): IQuickInputItemTemplateData {\n\t\tconst data: IQuickInputItemTemplateData = Object.create(null);\n\t\tdata.toDisposeElement = new DisposableStore();\n\t\tdata.toDisposeTemplate = new DisposableStore();\n\t\tdata.entry = dom.append(container, $('.quick-input-list-entry'));\n\n\t\t// Checkbox\n\t\tconst label = dom.append(data.entry, $('label.quick-input-list-label'));\n\t\tdata.outerLabel = label;\n\t\tdata.checkbox = data.toDisposeTemplate.add(new MutableDisposable());\n\t\tdata.toDisposeTemplate.add(dom.addStandardDisposableListener(label, dom.EventType.CLICK, e => {\n\t\t\t// `label` elements with role=checkboxes don't automatically toggle them like normal <checkbox> elements\n\t\t\tif (data.checkbox.value && !e.defaultPrevented && data.checkbox.value.enabled) {\n\t\t\t\tconst checked = !data.checkbox.value.checked;\n\t\t\t\tdata.checkbox.value.checked = checked;\n\t\t\t\t(data.element as QuickPickItemElement).checked = checked;\n\t\t\t}\n\t\t}));\n\n\t\t// Rows\n\t\tconst rows = dom.append(label, $('.quick-input-list-rows'));\n\t\tconst row1 = dom.append(rows, $('.quick-input-list-row'));\n\t\tconst row2 = dom.append(rows, $('.quick-input-list-row'));\n\n\t\t// Label\n\t\tdata.label = new IconLabel(row1, { supportHighlights: true, supportDescriptionHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n\t\tdata.toDisposeTemplate.add(data.label);\n\t\tdata.icon = <HTMLInputElement>dom.prepend(data.label.element, $('.quick-input-list-icon'));\n\n\t\t// Keybinding\n\t\tconst keybindingContainer = dom.append(row1, $('.quick-input-list-entry-keybinding'));\n\t\tdata.keybinding = new KeybindingLabel(keybindingContainer, OS);\n\t\tdata.toDisposeTemplate.add(data.keybinding);\n\n\t\t// Detail\n\t\tconst detailContainer = dom.append(row2, $('.quick-input-list-label-meta'));\n\t\tdata.detail = new IconLabel(detailContainer, { supportHighlights: true, supportIcons: true, hoverDelegate: this.hoverDelegate });\n\t\tdata.toDisposeTemplate.add(data.detail);\n\n\t\t// Separator\n\t\tdata.separator = dom.append(data.entry, $('.quick-input-list-separator'));\n\n\t\t// Actions\n\t\tdata.actionBar = new ActionBar(data.entry, this.hoverDelegate ? { hoverDelegate: this.hoverDelegate } : undefined);\n\t\tdata.actionBar.domNode.classList.add('quick-input-list-entry-action-bar');\n\t\tdata.toDisposeTemplate.add(data.actionBar);\n\n\t\treturn data;\n\t}\n\n\tdisposeTemplate(data: IQuickInputItemTemplateData): void {\n\t\tdata.toDisposeElement.dispose();\n\t\tdata.toDisposeTemplate.dispose();\n\t}\n\n\tdisposeElement(_element: ITreeNode<IQuickPickElement, void>, _index: number, data: IQuickInputItemTemplateData): void {\n\t\tdata.toDisposeElement.clear();\n\t\tdata.actionBar.clear();\n\t}\n\n\t// TODO: only do the common stuff here and have a subclass handle their specific stuff\n\tabstract renderElement(node: ITreeNode<IQuickPickElement, void>, index: number, data: IQuickInputItemTemplateData): void;\n}\n\nclass QuickPickItemElementRenderer extends BaseQuickInputListRenderer<QuickPickItemElement> {\n\tstatic readonly ID = 'quickpickitem';\n\n\t// Follow what we do in the separator renderer\n\tprivate readonly _itemsWithSeparatorsFrequency = new Map<QuickPickItemElement, number>();\n\n\tconstructor(\n\t\thoverDelegate: IHoverDelegate | undefined,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t) {\n\t\tsuper(hoverDelegate);\n\t}\n\n\tget templateId() {\n\t\treturn QuickPickItemElementRenderer.ID;\n\t}\n\n\tprivate ensureCheckbox(element: QuickPickItemElement, data: IQuickInputItemTemplateData) {\n\t\tif (!element.hasCheckbox) {\n\t\t\tdata.checkbox.value?.domNode.remove();\n\t\t\tdata.checkbox.clear();\n\t\t\treturn;\n\t\t}\n\n\t\tlet checkbox = data.checkbox.value;\n\t\tif (!checkbox) {\n\t\t\tcheckbox = new Checkbox(element.saneLabel, element.checked, { ...defaultCheckboxStyles, size: 15 });\n\t\t\tdata.checkbox.value = checkbox;\n\t\t\tdata.outerLabel.prepend(checkbox.domNode);\n\t\t} else {\n\t\t\tcheckbox.setTitle(element.saneLabel);\n\t\t}\n\n\t\tif (element.checkboxDisabled) {\n\t\t\tcheckbox.disable();\n\t\t} else {\n\t\t\tcheckbox.enable();\n\t\t}\n\n\t\tcheckbox.checked = element.checked;\n\t\tdata.toDisposeElement.add(element.onChecked(checked => checkbox.checked = checked));\n\t\tdata.toDisposeElement.add(checkbox.onChange(() => element.checked = checkbox.checked));\n\t}\n\n\trenderElement(node: ITreeNode<QuickPickItemElement, void>, index: number, data: IQuickInputItemTemplateData): void {\n\t\tconst element = node.element;\n\t\tdata.element = element;\n\t\telement.element = data.entry ?? undefined;\n\t\tconst mainItem: IQuickPickItem = element.item;\n\n\t\telement.element.classList.toggle('not-pickable', element.item.pickable === false);\n\n\t\tthis.ensureCheckbox(element, data);\n\n\t\tconst { labelHighlights, descriptionHighlights, detailHighlights } = element;\n\n\t\t// Icon\n\t\tif (mainItem.iconPath) {\n\t\t\tconst icon = isDark(this.themeService.getColorTheme().type) ? mainItem.iconPath.dark : (mainItem.iconPath.light ?? mainItem.iconPath.dark);\n\t\t\tconst iconUrl = URI.revive(icon);\n\t\t\tdata.icon.className = 'quick-input-list-icon';\n\t\t\tdata.icon.style.backgroundImage = cssJs.asCSSUrl(iconUrl);\n\t\t} else {\n\t\t\tdata.icon.style.backgroundImage = '';\n\t\t\tdata.icon.className = mainItem.iconClass ? `quick-input-list-icon ${mainItem.iconClass}` : '';\n\t\t}\n\n\t\t// Label\n\t\tlet descriptionTitle: IManagedHoverTooltipMarkdownString | undefined;\n\t\t// if we have a tooltip, that will be the hover,\n\t\t// with the saneDescription as fallback if it\n\t\t// is defined\n\t\tif (!element.saneTooltip && element.saneDescription) {\n\t\t\tdescriptionTitle = {\n\t\t\t\tmarkdown: {\n\t\t\t\t\tvalue: escape(element.saneDescription),\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t},\n\t\t\t\tmarkdownNotSupportedFallback: element.saneDescription\n\t\t\t};\n\t\t}\n\t\tconst options: IIconLabelValueOptions = {\n\t\t\tmatches: labelHighlights || [],\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tdescriptionTitle,\n\t\t\tdescriptionMatches: descriptionHighlights || [],\n\t\t\tlabelEscapeNewLines: true\n\t\t};\n\t\toptions.extraClasses = mainItem.iconClasses;\n\t\toptions.italic = mainItem.italic;\n\t\toptions.strikethrough = mainItem.strikethrough;\n\t\tdata.entry.classList.remove('quick-input-list-separator-as-item');\n\t\tdata.label.setLabel(element.saneLabel, element.saneDescription, options);\n\n\t\t// Keybinding\n\t\tdata.keybinding.set(mainItem.keybinding);\n\n\t\t// Detail\n\t\tif (element.saneDetail) {\n\t\t\tlet title: IManagedHoverTooltipMarkdownString | undefined;\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tif (!element.saneTooltip) {\n\t\t\t\ttitle = {\n\t\t\t\t\tmarkdown: {\n\t\t\t\t\t\tvalue: escape(element.saneDetail),\n\t\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t\t},\n\t\t\t\t\tmarkdownNotSupportedFallback: element.saneDetail\n\t\t\t\t};\n\t\t\t}\n\t\t\tdata.detail.element.style.display = '';\n\t\t\tdata.detail.setLabel(element.saneDetail, undefined, {\n\t\t\t\tmatches: detailHighlights,\n\t\t\t\ttitle,\n\t\t\t\tlabelEscapeNewLines: true\n\t\t\t});\n\t\t} else {\n\t\t\tdata.detail.element.style.display = 'none';\n\t\t}\n\n\t\t// Separator\n\t\tif (element.separator?.label) {\n\t\t\tdata.separator.textContent = element.separator.label;\n\t\t\tdata.separator.style.display = '';\n\t\t\tthis.addItemWithSeparator(element);\n\t\t} else {\n\t\t\tdata.separator.style.display = 'none';\n\t\t}\n\t\tdata.entry.classList.toggle('quick-input-list-separator-border', !!element.separator && element.childIndex !== 0);\n\n\t\t// Actions\n\t\tconst buttons = mainItem.buttons;\n\t\tif (buttons && buttons.length) {\n\t\t\tdata.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(\n\t\t\t\tbutton,\n\t\t\t\t`id-${index}`,\n\t\t\t\t() => element.fireButtonTriggered({ button, item: element.item })\n\t\t\t)), { icon: true, label: false });\n\t\t\tdata.entry.classList.add('has-actions');\n\t\t} else {\n\t\t\tdata.entry.classList.remove('has-actions');\n\t\t}\n\t}\n\n\toverride disposeElement(element: ITreeNode<QuickPickItemElement, void>, _index: number, data: IQuickInputItemTemplateData): void {\n\t\tthis.removeItemWithSeparator(element.element);\n\t\tsuper.disposeElement(element, _index, data);\n\t}\n\n\tisItemWithSeparatorVisible(item: QuickPickItemElement): boolean {\n\t\treturn this._itemsWithSeparatorsFrequency.has(item);\n\t}\n\n\tprivate addItemWithSeparator(item: QuickPickItemElement): void {\n\t\tthis._itemsWithSeparatorsFrequency.set(item, (this._itemsWithSeparatorsFrequency.get(item) || 0) + 1);\n\t}\n\n\tprivate removeItemWithSeparator(item: QuickPickItemElement): void {\n\t\tconst frequency = this._itemsWithSeparatorsFrequency.get(item) || 0;\n\t\tif (frequency > 1) {\n\t\t\tthis._itemsWithSeparatorsFrequency.set(item, frequency - 1);\n\t\t} else {\n\t\t\tthis._itemsWithSeparatorsFrequency.delete(item);\n\t\t}\n\t}\n}\n\nclass QuickPickSeparatorElementRenderer extends BaseQuickInputListRenderer<QuickPickSeparatorElement> {\n\tstatic readonly ID = 'quickpickseparator';\n\n\t// This is a frequency map because sticky scroll re-uses the same renderer to render a second\n\t// instance of the same separator.\n\tprivate readonly _visibleSeparatorsFrequency = new Map<QuickPickSeparatorElement, number>();\n\n\tget templateId() {\n\t\treturn QuickPickSeparatorElementRenderer.ID;\n\t}\n\n\tget visibleSeparators(): QuickPickSeparatorElement[] {\n\t\treturn [...this._visibleSeparatorsFrequency.keys()];\n\t}\n\n\tisSeparatorVisible(separator: QuickPickSeparatorElement): boolean {\n\t\treturn this._visibleSeparatorsFrequency.has(separator);\n\t}\n\n\toverride renderElement(node: ITreeNode<QuickPickSeparatorElement, void>, index: number, data: IQuickInputItemTemplateData): void {\n\t\tconst element = node.element;\n\t\tdata.element = element;\n\t\telement.element = data.entry ?? undefined;\n\t\telement.element.classList.toggle('focus-inside', !!element.focusInsideSeparator);\n\t\tconst mainItem: IQuickPickSeparator = element.separator;\n\n\t\tconst { labelHighlights, descriptionHighlights } = element;\n\n\t\t// Icon\n\t\tdata.icon.style.backgroundImage = '';\n\t\tdata.icon.className = '';\n\n\t\t// Label\n\t\tlet descriptionTitle: IManagedHoverTooltipMarkdownString | undefined;\n\t\t// if we have a tooltip, that will be the hover,\n\t\t// with the saneDescription as fallback if it\n\t\t// is defined\n\t\tif (!element.saneTooltip && element.saneDescription) {\n\t\t\tdescriptionTitle = {\n\t\t\t\tmarkdown: {\n\t\t\t\t\tvalue: escape(element.saneDescription),\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t},\n\t\t\t\tmarkdownNotSupportedFallback: element.saneDescription\n\t\t\t};\n\t\t}\n\t\tconst options: IIconLabelValueOptions = {\n\t\t\tmatches: labelHighlights || [],\n\t\t\t// If we have a tooltip, we want that to be shown and not any other hover\n\t\t\tdescriptionTitle,\n\t\t\tdescriptionMatches: descriptionHighlights || [],\n\t\t\tlabelEscapeNewLines: true\n\t\t};\n\t\tdata.entry.classList.add('quick-input-list-separator-as-item');\n\t\tdata.label.setLabel(element.saneLabel, element.saneDescription, options);\n\n\t\t// Separator\n\t\tdata.separator.style.display = 'none';\n\t\tdata.entry.classList.add('quick-input-list-separator-border');\n\n\t\t// Actions\n\t\tconst buttons = mainItem.buttons;\n\t\tif (buttons && buttons.length) {\n\t\t\tdata.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(\n\t\t\t\tbutton,\n\t\t\t\t`id-${index}`,\n\t\t\t\t() => element.fireSeparatorButtonTriggered({ button, separator: element.separator })\n\t\t\t)), { icon: true, label: false });\n\t\t\tdata.entry.classList.add('has-actions');\n\t\t} else {\n\t\t\tdata.entry.classList.remove('has-actions');\n\t\t}\n\n\t\tthis.addSeparator(element);\n\t}\n\n\toverride disposeElement(element: ITreeNode<QuickPickSeparatorElement, void>, _index: number, data: IQuickInputItemTemplateData): void {\n\t\tthis.removeSeparator(element.element);\n\t\tif (!this.isSeparatorVisible(element.element)) {\n\t\t\telement.element.element?.classList.remove('focus-inside');\n\t\t}\n\t\tsuper.disposeElement(element, _index, data);\n\t}\n\n\tprivate addSeparator(separator: QuickPickSeparatorElement): void {\n\t\tthis._visibleSeparatorsFrequency.set(separator, (this._visibleSeparatorsFrequency.get(separator) || 0) + 1);\n\t}\n\n\tprivate removeSeparator(separator: QuickPickSeparatorElement): void {\n\t\tconst frequency = this._visibleSeparatorsFrequency.get(separator) || 0;\n\t\tif (frequency > 1) {\n\t\t\tthis._visibleSeparatorsFrequency.set(separator, frequency - 1);\n\t\t} else {\n\t\t\tthis._visibleSeparatorsFrequency.delete(separator);\n\t\t}\n\t}\n}\n\nexport class QuickInputList extends Disposable {\n\n\t//#region QuickInputList Events\n\n\tprivate readonly _onKeyDown = new Emitter<StandardKeyboardEvent>();\n\n\tprivate readonly _onLeave = new Emitter<void>();\n\t/**\n\t * Event that is fired when the tree would no longer have focus.\n\t*/\n\treadonly onLeave: Event<void> = this._onLeave.event;\n\n\tprivate readonly _visibleCountObservable = observableValue('VisibleCount', 0);\n\tonChangedVisibleCount: Event<number> = Event.fromObservable(this._visibleCountObservable, this._store);\n\n\tprivate readonly _allVisibleCheckedObservable = observableValue('AllVisibleChecked', false);\n\tonChangedAllVisibleChecked: Event<boolean> = Event.fromObservable(this._allVisibleCheckedObservable, this._store);\n\n\tprivate readonly _checkedCountObservable = observableValue('CheckedCount', 0);\n\tonChangedCheckedCount: Event<number> = Event.fromObservable(this._checkedCountObservable, this._store);\n\n\tprivate readonly _checkedElementsObservable = observableValueOpts({ equalsFn: equals }, new Array<IQuickPickItem>());\n\tonChangedCheckedElements: Event<IQuickPickItem[]> = Event.fromObservable(this._checkedElementsObservable, this._store);\n\n\tprivate readonly _onButtonTriggered = new Emitter<IQuickPickItemButtonEvent<IQuickPickItem>>();\n\tonButtonTriggered = this._onButtonTriggered.event;\n\n\tprivate readonly _onSeparatorButtonTriggered = new Emitter<IQuickPickSeparatorButtonEvent>();\n\tonSeparatorButtonTriggered = this._onSeparatorButtonTriggered.event;\n\n\tprivate readonly _elementChecked = new Emitter<{ element: IQuickPickElement; checked: boolean }>();\n\tprivate readonly _elementCheckedEventBufferer = new EventBufferer();\n\n\t//#endregion\n\n\tprivate _hasCheckboxes = false;\n\n\tprivate readonly _container: HTMLElement;\n\tprivate readonly _tree: WorkbenchObjectTree<IQuickPickElement, void>;\n\tprivate readonly _separatorRenderer: QuickPickSeparatorElementRenderer;\n\tprivate readonly _itemRenderer: QuickPickItemElementRenderer;\n\tprivate _inputElements = new Array<QuickPickItem>();\n\tprivate _elementTree = new Array<IQuickPickElement>();\n\tprivate _itemElements = new Array<QuickPickItemElement>();\n\t// Elements that apply to the current set of elements\n\tprivate readonly _elementDisposable = this._register(new DisposableStore());\n\tprivate _lastHover: IHoverWidget | undefined;\n\tprivate _lastQueryString: string | undefined;\n\n\tconstructor(\n\t\tprivate parent: HTMLElement,\n\t\tprivate hoverDelegate: IHoverDelegate,\n\t\tprivate linkOpenerDelegate: (content: string) => void,\n\t\tid: string,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IAccessibilityService private readonly accessibilityService: IAccessibilityService\n\t) {\n\t\tsuper();\n\t\tthis._container = dom.append(this.parent, $('.quick-input-list'));\n\t\tthis._separatorRenderer = new QuickPickSeparatorElementRenderer(hoverDelegate);\n\t\tthis._itemRenderer = instantiationService.createInstance(QuickPickItemElementRenderer, hoverDelegate);\n\t\tthis._tree = this._register(instantiationService.createInstance(\n\t\t\tWorkbenchObjectTree<IQuickPickElement, void>,\n\t\t\t'QuickInput',\n\t\t\tthis._container,\n\t\t\tnew QuickInputItemDelegate(),\n\t\t\t[this._itemRenderer, this._separatorRenderer],\n\t\t\t{\n\t\t\t\tfilter: {\n\t\t\t\t\tfilter(element) {\n\t\t\t\t\t\treturn element.hidden\n\t\t\t\t\t\t\t? TreeVisibility.Hidden\n\t\t\t\t\t\t\t: element instanceof QuickPickSeparatorElement\n\t\t\t\t\t\t\t\t? TreeVisibility.Recurse\n\t\t\t\t\t\t\t\t: TreeVisibility.Visible;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsorter: {\n\t\t\t\t\tcompare: (element, otherElement) => {\n\t\t\t\t\t\tif (!this.sortByLabel || !this._lastQueryString) {\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst normalizedSearchValue = this._lastQueryString.toLowerCase();\n\t\t\t\t\t\treturn compareEntries(element, otherElement, normalizedSearchValue);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\taccessibilityProvider: new QuickInputAccessibilityProvider(),\n\t\t\t\tsetRowLineHeight: false,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\tfindWidgetEnabled: false,\n\t\t\t\tindent: 0,\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tallowNonCollapsibleParents: true,\n\t\t\t\talwaysConsumeMouseWheel: true\n\t\t\t}\n\t\t));\n\t\tthis._tree.getHTMLElement().id = id;\n\t\tthis._registerListeners();\n\t}\n\n\t//#region public getters/setters\n\n\t@memoize\n\tget onDidChangeFocus() {\n\t\treturn Event.map(\n\t\t\tthis._tree.onDidChangeFocus,\n\t\t\te => e.elements.filter((e): e is QuickPickItemElement => e instanceof QuickPickItemElement).map(e => e.item),\n\t\t\tthis._store\n\t\t);\n\t}\n\n\t@memoize\n\tget onDidChangeSelection() {\n\t\treturn Event.map(\n\t\t\tthis._tree.onDidChangeSelection,\n\t\t\te => ({\n\t\t\t\titems: e.elements.filter((e): e is QuickPickItemElement => e instanceof QuickPickItemElement).map(e => e.item),\n\t\t\t\tevent: e.browserEvent\n\t\t\t}),\n\t\t\tthis._store\n\t\t);\n\t}\n\n\tget displayed() {\n\t\treturn this._container.style.display !== 'none';\n\t}\n\n\tset displayed(value: boolean) {\n\t\tthis._container.style.display = value ? '' : 'none';\n\t}\n\n\tget scrollTop() {\n\t\treturn this._tree.scrollTop;\n\t}\n\n\tset scrollTop(scrollTop: number) {\n\t\tthis._tree.scrollTop = scrollTop;\n\t}\n\n\tget ariaLabel() {\n\t\treturn this._tree.ariaLabel;\n\t}\n\n\tset ariaLabel(label: string | null) {\n\t\tthis._tree.ariaLabel = label ?? '';\n\t}\n\n\tset enabled(value: boolean) {\n\t\tthis._tree.getHTMLElement().style.pointerEvents = value ? '' : 'none';\n\t}\n\n\tprivate _matchOnDescription = false;\n\tget matchOnDescription() {\n\t\treturn this._matchOnDescription;\n\t}\n\tset matchOnDescription(value: boolean) {\n\t\tthis._matchOnDescription = value;\n\t}\n\n\tprivate _matchOnDetail = false;\n\tget matchOnDetail() {\n\t\treturn this._matchOnDetail;\n\t}\n\tset matchOnDetail(value: boolean) {\n\t\tthis._matchOnDetail = value;\n\t}\n\n\tprivate _matchOnLabel = true;\n\tget matchOnLabel() {\n\t\treturn this._matchOnLabel;\n\t}\n\tset matchOnLabel(value: boolean) {\n\t\tthis._matchOnLabel = value;\n\t}\n\n\tprivate _matchOnLabelMode: 'fuzzy' | 'contiguous' = 'fuzzy';\n\tget matchOnLabelMode() {\n\t\treturn this._matchOnLabelMode;\n\t}\n\tset matchOnLabelMode(value: 'fuzzy' | 'contiguous') {\n\t\tthis._matchOnLabelMode = value;\n\t}\n\n\tprivate _sortByLabel = true;\n\tget sortByLabel() {\n\t\treturn this._sortByLabel;\n\t}\n\tset sortByLabel(value: boolean) {\n\t\tthis._sortByLabel = value;\n\t}\n\n\tprivate _shouldLoop = true;\n\tget shouldLoop() {\n\t\treturn this._shouldLoop;\n\t}\n\tset shouldLoop(value: boolean) {\n\t\tthis._shouldLoop = value;\n\t}\n\n\t//#endregion\n\n\t//#region register listeners\n\n\tprivate _registerListeners() {\n\t\tthis._registerOnKeyDown();\n\t\tthis._registerOnContainerClick();\n\t\tthis._registerOnMouseMiddleClick();\n\t\tthis._registerOnTreeModelChanged();\n\t\tthis._registerOnElementChecked();\n\t\tthis._registerOnContextMenu();\n\t\tthis._registerHoverListeners();\n\t\tthis._registerSelectionChangeListener();\n\t\tthis._registerSeparatorActionShowingListeners();\n\t}\n\n\tprivate _registerOnKeyDown() {\n\t\t// TODO: Should this be added at a higher level?\n\t\tthis._register(this._tree.onKeyDown(e => {\n\t\t\tconst event = new StandardKeyboardEvent(e);\n\t\t\tswitch (event.keyCode) {\n\t\t\t\tcase KeyCode.Space:\n\t\t\t\t\tthis.toggleCheckbox();\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._onKeyDown.fire(event);\n\t\t}));\n\t}\n\n\tprivate _registerOnContainerClick() {\n\t\tthis._register(dom.addDisposableListener(this._container, dom.EventType.CLICK, e => {\n\t\t\tif (e.x || e.y) { // Avoid 'click' triggered by 'space' on checkbox.\n\t\t\t\tthis._onLeave.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerOnMouseMiddleClick() {\n\t\tthis._register(dom.addDisposableListener(this._container, dom.EventType.AUXCLICK, e => {\n\t\t\tif (e.button === 1) {\n\t\t\t\tthis._onLeave.fire();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerOnTreeModelChanged() {\n\t\tthis._register(this._tree.onDidChangeModel(() => {\n\t\t\tconst visibleCount = this._itemElements.filter(e => !e.hidden).length;\n\t\t\tthis._visibleCountObservable.set(visibleCount, undefined);\n\t\t\tif (this._hasCheckboxes) {\n\t\t\t\tthis._updateCheckedObservables();\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerOnElementChecked() {\n\t\t// Only fire the last event when buffered\n\t\tthis._register(this._elementCheckedEventBufferer.wrapEvent(this._elementChecked.event, (_, e) => e)(_ => this._updateCheckedObservables()));\n\t}\n\n\tprivate _registerOnContextMenu() {\n\t\tthis._register(this._tree.onContextMenu(e => {\n\t\t\tif (e.element) {\n\t\t\t\te.browserEvent.preventDefault();\n\n\t\t\t\t// we want to treat a context menu event as\n\t\t\t\t// a gesture to open the item at the index\n\t\t\t\t// since we do not have any context menu\n\t\t\t\t// this enables for example macOS to Ctrl-\n\t\t\t\t// click on an item to open it.\n\t\t\t\tthis._tree.setSelection([e.element]);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerHoverListeners() {\n\t\tconst delayer = this._register(new ThrottledDelayer(typeof this.hoverDelegate.delay === 'function' ? this.hoverDelegate.delay() : this.hoverDelegate.delay));\n\t\tthis._register(this._tree.onMouseOver(async e => {\n\t\t\t// If we hover over an anchor element, we don't want to show the hover because\n\t\t\t// the anchor may have a tooltip that we want to show instead.\n\t\t\tif (dom.isHTMLAnchorElement(e.browserEvent.target)) {\n\t\t\t\tdelayer.cancel();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (\n\t\t\t\t// anchors are an exception as called out above so we skip them here\n\t\t\t\t!(dom.isHTMLAnchorElement(e.browserEvent.relatedTarget)) &&\n\t\t\t\t// check if the mouse is still over the same element\n\t\t\t\tdom.isAncestor(e.browserEvent.relatedTarget as Node, e.element?.element as Node)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tawait delayer.trigger(async () => {\n\t\t\t\t\tif (e.element instanceof QuickPickItemElement) {\n\t\t\t\t\t\tthis.showHover(e.element);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\t// Ignore cancellation errors due to mouse out\n\t\t\t\tif (!isCancellationError(e)) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._tree.onMouseOut(e => {\n\t\t\t// onMouseOut triggers every time a new element has been moused over\n\t\t\t// even if it's on the same list item. We only want one event, so we\n\t\t\t// check if the mouse is still over the same element.\n\t\t\tif (dom.isAncestor(e.browserEvent.relatedTarget as Node, e.element?.element as Node)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tdelayer.cancel();\n\t\t}));\n\t}\n\n\t/**\n\t * Register's focus change and mouse events so that we can track when items inside of a\n\t * separator's section are focused or hovered so that we can display the separator's actions\n\t */\n\tprivate _registerSeparatorActionShowingListeners() {\n\t\tthis._register(this._tree.onDidChangeFocus(e => {\n\t\t\tconst parent = e.elements[0]\n\t\t\t\t? this._tree.getParentElement(e.elements[0]) as QuickPickSeparatorElement\n\t\t\t\t// treat null as focus lost and when we have no separators\n\t\t\t\t: null;\n\t\t\tfor (const separator of this._separatorRenderer.visibleSeparators) {\n\t\t\t\tconst value = separator === parent;\n\t\t\t\t// get bitness of ACTIVE_ITEM and check if it changed\n\t\t\t\tconst currentActive = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.ACTIVE_ITEM);\n\t\t\t\tif (currentActive !== value) {\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tseparator.focusInsideSeparator |= QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseparator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.ACTIVE_ITEM;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._tree.rerender(separator);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._tree.onMouseOver(e => {\n\t\t\tconst parent = e.element\n\t\t\t\t? this._tree.getParentElement(e.element) as QuickPickSeparatorElement\n\t\t\t\t: null;\n\t\t\tfor (const separator of this._separatorRenderer.visibleSeparators) {\n\t\t\t\tif (separator !== parent) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n\t\t\t\tif (!currentMouse) {\n\t\t\t\t\tseparator.focusInsideSeparator |= QuickPickSeparatorFocusReason.MOUSE_HOVER;\n\t\t\t\t\tthis._tree.rerender(separator);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tthis._register(this._tree.onMouseOut(e => {\n\t\t\tconst parent = e.element\n\t\t\t\t? this._tree.getParentElement(e.element) as QuickPickSeparatorElement\n\t\t\t\t: null;\n\t\t\tfor (const separator of this._separatorRenderer.visibleSeparators) {\n\t\t\t\tif (separator !== parent) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst currentMouse = !!(separator.focusInsideSeparator & QuickPickSeparatorFocusReason.MOUSE_HOVER);\n\t\t\t\tif (currentMouse) {\n\t\t\t\t\tseparator.focusInsideSeparator &= ~QuickPickSeparatorFocusReason.MOUSE_HOVER;\n\t\t\t\t\tthis._tree.rerender(separator);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate _registerSelectionChangeListener() {\n\t\t// When the user selects a separator, the separator will move to the top and focus will be\n\t\t// set to the first element after the separator.\n\t\tthis._register(this._tree.onDidChangeSelection(e => {\n\t\t\tconst elementsWithoutSeparators = e.elements.filter((e): e is QuickPickItemElement => e instanceof QuickPickItemElement);\n\t\t\tif (elementsWithoutSeparators.length !== e.elements.length) {\n\t\t\t\tif (e.elements.length === 1 && e.elements[0] instanceof QuickPickSeparatorElement) {\n\t\t\t\t\tthis._tree.setFocus([e.elements[0].children[0]]);\n\t\t\t\t\tthis._tree.reveal(e.elements[0], 0);\n\t\t\t\t}\n\t\t\t\tthis._tree.setSelection(elementsWithoutSeparators);\n\t\t\t}\n\t\t}));\n\t}\n\n\t//#endregion\n\n\t//#region public methods\n\n\tsetAllVisibleChecked(checked: boolean) {\n\t\tthis._elementCheckedEventBufferer.bufferEvents(() => {\n\t\t\tthis._itemElements.forEach(element => {\n\t\t\t\tif (!element.hidden && !element.checkboxDisabled && element.item.pickable !== false) {\n\t\t\t\t\t// Would fire an event if we didn't beffer the events\n\t\t\t\t\telement.checked = checked;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tsetElements(inputElements: QuickPickItem[]): void {\n\t\tthis._elementDisposable.clear();\n\t\tthis._lastQueryString = undefined;\n\t\tthis._inputElements = inputElements;\n\t\tthis._hasCheckboxes = this.parent.classList.contains('show-checkboxes');\n\t\tlet currentSeparatorElement: QuickPickSeparatorElement | undefined;\n\t\tthis._itemElements = new Array<QuickPickItemElement>();\n\t\tthis._elementTree = inputElements.reduce((result, item, index) => {\n\t\t\tlet element: IQuickPickElement;\n\t\t\tif (item.type === 'separator') {\n\t\t\t\tif (!item.buttons) {\n\t\t\t\t\t// This separator will be rendered as a part of the list item\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tcurrentSeparatorElement = new QuickPickSeparatorElement(\n\t\t\t\t\tindex,\n\t\t\t\t\te => this._onSeparatorButtonTriggered.fire(e),\n\t\t\t\t\titem\n\t\t\t\t);\n\t\t\t\telement = currentSeparatorElement;\n\t\t\t} else {\n\t\t\t\tconst previous = index > 0 ? inputElements[index - 1] : undefined;\n\t\t\t\tlet separator: IQuickPickSeparator | undefined;\n\t\t\t\tif (previous && previous.type === 'separator' && !previous.buttons) {\n\t\t\t\t\tseparator = previous;\n\t\t\t\t}\n\t\t\t\tconst qpi = new QuickPickItemElement(\n\t\t\t\t\tindex,\n\t\t\t\t\tcurrentSeparatorElement?.children\n\t\t\t\t\t\t? currentSeparatorElement.children.length\n\t\t\t\t\t\t: index,\n\t\t\t\t\tthis._hasCheckboxes && item.pickable !== false,\n\t\t\t\t\te => this._onButtonTriggered.fire(e),\n\t\t\t\t\tthis._elementChecked,\n\t\t\t\t\titem,\n\t\t\t\t\tseparator,\n\t\t\t\t);\n\t\t\t\tthis._itemElements.push(qpi);\n\n\t\t\t\tif (currentSeparatorElement) {\n\t\t\t\t\tcurrentSeparatorElement.children.push(qpi);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\telement = qpi;\n\t\t\t}\n\n\t\t\tresult.push(element);\n\t\t\treturn result;\n\t\t}, new Array<IQuickPickElement>());\n\n\t\tthis._setElementsToTree(this._elementTree);\n\n\t\t// Accessibility hack, unfortunately on next tick\n\t\t// https://github.com/microsoft/vscode/issues/211976\n\t\tif (this.accessibilityService.isScreenReaderOptimized()) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst focusedElement = this._tree.getHTMLElement().querySelector(`.monaco-list-row.focused`);\n\t\t\t\tconst parent = focusedElement?.parentNode;\n\t\t\t\tif (focusedElement && parent) {\n\t\t\t\t\tconst nextSibling = focusedElement.nextSibling;\n\t\t\t\t\tfocusedElement.remove();\n\t\t\t\t\tparent.insertBefore(focusedElement, nextSibling);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n\n\tsetFocusedElements(items: IQuickPickItem[]) {\n\t\tconst elements = items.map(item => this._itemElements.find(e => e.item === item))\n\t\t\t.filter((e): e is QuickPickItemElement => !!e)\n\t\t\t.filter(e => !e.hidden);\n\t\tthis._tree.setFocus(elements);\n\t\tif (items.length > 0) {\n\t\t\tconst focused = this._tree.getFocus()[0];\n\t\t\tif (focused) {\n\t\t\t\tthis._tree.reveal(focused);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetActiveDescendant() {\n\t\treturn this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n\t}\n\n\tsetSelectedElements(items: IQuickPickItem[]) {\n\t\tconst elements = items.map(item => this._itemElements.find(e => e.item === item))\n\t\t\t.filter((e): e is QuickPickItemElement => !!e);\n\t\tthis._tree.setSelection(elements);\n\t}\n\n\tgetCheckedElements() {\n\t\treturn this._itemElements.filter(e => e.checked)\n\t\t\t.map(e => e.item);\n\t}\n\n\tsetCheckedElements(items: IQuickPickItem[]) {\n\t\tthis._elementCheckedEventBufferer.bufferEvents(() => {\n\t\t\tconst checked = new Set();\n\t\t\tfor (const item of items) {\n\t\t\t\tchecked.add(item);\n\t\t\t}\n\t\t\tfor (const element of this._itemElements) {\n\t\t\t\t// Would fire an event if we didn't beffer the events\n\t\t\t\telement.checked = checked.has(element.item);\n\t\t\t}\n\t\t});\n\t}\n\n\tfocus(what: QuickPickFocus): void {\n\t\tif (!this._itemElements.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (what === QuickPickFocus.Second && this._itemElements.length < 2) {\n\t\t\twhat = QuickPickFocus.First;\n\t\t}\n\n\t\tswitch (what) {\n\t\t\tcase QuickPickFocus.First:\n\t\t\t\tthis._tree.scrollTop = 0;\n\t\t\t\tthis._tree.focusFirst(undefined, (e) => e.element instanceof QuickPickItemElement);\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.Second: {\n\t\t\t\tthis._tree.scrollTop = 0;\n\t\t\t\tlet isSecondItem = false;\n\t\t\t\tthis._tree.focusFirst(undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (isSecondItem) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tisSecondItem = !isSecondItem;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.Last:\n\t\t\t\tthis._tree.scrollTop = this._tree.scrollHeight;\n\t\t\t\tthis._tree.focusLast(undefined, (e) => e.element instanceof QuickPickItemElement);\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.Next: {\n\t\t\t\tconst prevFocus = this._tree.getFocus();\n\t\t\t\tthis._tree.focusNext(undefined, this._shouldLoop, undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tconst currentFocus = this._tree.getFocus();\n\t\t\t\tif (prevFocus.length && prevFocus[0] === currentFocus[0]) {\n\t\t\t\t\tthis._onLeave.fire();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.Previous: {\n\t\t\t\tconst prevFocus = this._tree.getFocus();\n\t\t\t\tthis._tree.focusPrevious(undefined, this._shouldLoop, undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst parent = this._tree.getParentElement(e.element);\n\t\t\t\t\tif (parent === null || (parent as QuickPickSeparatorElement).children[0] !== e.element) {\n\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Only if we are the first child of a separator do we reveal the separator\n\t\t\t\t\t\tthis._tree.reveal(parent);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tconst currentFocus = this._tree.getFocus();\n\t\t\t\tif (prevFocus.length && prevFocus[0] === currentFocus[0]) {\n\t\t\t\t\tthis._onLeave.fire();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.NextPage:\n\t\t\t\tthis._tree.focusNextPage(undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.PreviousPage:\n\t\t\t\tthis._tree.focusPreviousPage(undefined, (e) => {\n\t\t\t\t\tif (!(e.element instanceof QuickPickItemElement)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tconst parent = this._tree.getParentElement(e.element);\n\t\t\t\t\tif (parent === null || (parent as QuickPickSeparatorElement).children[0] !== e.element) {\n\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._tree.reveal(parent);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase QuickPickFocus.NextSeparator: {\n\t\t\t\tlet foundSeparatorAsItem = false;\n\t\t\t\tconst before = this._tree.getFocus()[0];\n\t\t\t\tthis._tree.focusNext(undefined, true, undefined, (e) => {\n\t\t\t\t\tif (foundSeparatorAsItem) {\n\t\t\t\t\t\t// This should be the index right after the separator so it\n\t\t\t\t\t\t// is the item we want to focus.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (e.element instanceof QuickPickSeparatorElement) {\n\t\t\t\t\t\tfoundSeparatorAsItem = true;\n\t\t\t\t\t\t// If the separator is visible, then we should just reveal its first child so it's not as jarring.\n\t\t\t\t\t\tif (this._separatorRenderer.isSeparatorVisible(e.element)) {\n\t\t\t\t\t\t\tthis._tree.reveal(e.element.children[0]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// If the separator is not visible, then we should\n\t\t\t\t\t\t\t// push it up to the top of the list.\n\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.element instanceof QuickPickItemElement) {\n\t\t\t\t\t\tif (e.element.separator) {\n\t\t\t\t\t\t\tif (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n\t\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else if (e.element === this._elementTree[0]) {\n\t\t\t\t\t\t\t// We should stop at the first item in the list if it's a regular item.\n\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tconst after = this._tree.getFocus()[0];\n\t\t\t\tif (before === after) {\n\t\t\t\t\t// If we didn't move, then we should just move to the end\n\t\t\t\t\t// of the list.\n\t\t\t\t\tthis._tree.scrollTop = this._tree.scrollHeight;\n\t\t\t\t\tthis._tree.focusLast(undefined, (e) => e.element instanceof QuickPickItemElement);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase QuickPickFocus.PreviousSeparator: {\n\t\t\t\tlet focusElement: IQuickPickElement | undefined;\n\t\t\t\t// If we are already sitting on an inline separator, then we\n\t\t\t\t// have already found the _current_ separator and need to\n\t\t\t\t// move to the previous one.\n\t\t\t\tlet foundSeparator = !!this._tree.getFocus()[0]?.separator;\n\t\t\t\tthis._tree.focusPrevious(undefined, true, undefined, (e) => {\n\t\t\t\t\tif (e.element instanceof QuickPickSeparatorElement) {\n\t\t\t\t\t\tif (foundSeparator) {\n\t\t\t\t\t\t\tif (!focusElement) {\n\t\t\t\t\t\t\t\tif (this._separatorRenderer.isSeparatorVisible(e.element)) {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfocusElement = e.element.children[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfoundSeparator = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (e.element instanceof QuickPickItemElement) {\n\t\t\t\t\t\tif (!focusElement) {\n\t\t\t\t\t\t\tif (e.element.separator) {\n\t\t\t\t\t\t\t\tif (this._itemRenderer.isItemWithSeparatorVisible(e.element)) {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfocusElement = e.element;\n\t\t\t\t\t\t\t} else if (e.element === this._elementTree[0]) {\n\t\t\t\t\t\t\t\t// We should stop at the first item in the list if it's a regular item.\n\t\t\t\t\t\t\t\tthis._tree.reveal(e.element, 0);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\tif (focusElement) {\n\t\t\t\t\tthis._tree.setFocus([focusElement]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tclearFocus() {\n\t\tthis._tree.setFocus([]);\n\t}\n\n\tdomFocus() {\n\t\tthis._tree.domFocus();\n\t}\n\n\tlayout(maxHeight?: number): void {\n\t\tthis._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n\t\t\t// Make sure height aligns with list item heights\n\t\t\tMath.floor(maxHeight / 44) * 44\n\t\t\t// Add some extra height so that it's clear there's more to scroll\n\t\t\t+ 6\n\t\t\t}px` : '';\n\t\tthis._tree.layout();\n\t}\n\n\tfilter(query: string): boolean {\n\t\tthis._lastQueryString = query;\n\t\tif (!(this._sortByLabel || this._matchOnLabel || this._matchOnDescription || this._matchOnDetail)) {\n\t\t\tthis._tree.layout();\n\t\t\treturn false;\n\t\t}\n\n\t\tconst queryWithWhitespace = query;\n\t\tquery = query.trim();\n\n\t\t// Reset filtering\n\t\tif (!query || !(this.matchOnLabel || this.matchOnDescription || this.matchOnDetail)) {\n\t\t\tthis._itemElements.forEach(element => {\n\t\t\t\telement.labelHighlights = undefined;\n\t\t\t\telement.descriptionHighlights = undefined;\n\t\t\t\telement.detailHighlights = undefined;\n\t\t\t\telement.hidden = false;\n\t\t\t\tconst previous = element.index && this._inputElements[element.index - 1];\n\t\t\t\tif (element.item) {\n\t\t\t\t\telement.separator = previous && previous.type === 'separator' && !previous.buttons ? previous : undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Filter by value (since we support icons in labels, use $(..) aware fuzzy matching)\n\t\telse {\n\t\t\tlet currentSeparator: IQuickPickSeparator | undefined;\n\t\t\tthis._itemElements.forEach(element => {\n\t\t\t\tlet labelHighlights: IMatch[] | undefined;\n\t\t\t\tif (this.matchOnLabelMode === 'fuzzy') {\n\t\t\t\t\tlabelHighlights = this.matchOnLabel ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n\t\t\t\t} else {\n\t\t\t\t\tlabelHighlights = this.matchOnLabel ? matchesContiguousIconAware(queryWithWhitespace, parseLabelWithIcons(element.saneLabel)) ?? undefined : undefined;\n\t\t\t\t}\n\t\t\t\tconst descriptionHighlights = this.matchOnDescription ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDescription || '')) ?? undefined : undefined;\n\t\t\t\tconst detailHighlights = this.matchOnDetail ? matchesFuzzyIconAware(query, parseLabelWithIcons(element.saneDetail || '')) ?? undefined : undefined;\n\n\t\t\t\tif (labelHighlights || descriptionHighlights || detailHighlights) {\n\t\t\t\t\telement.labelHighlights = labelHighlights;\n\t\t\t\t\telement.descriptionHighlights = descriptionHighlights;\n\t\t\t\t\telement.detailHighlights = detailHighlights;\n\t\t\t\t\telement.hidden = false;\n\t\t\t\t} else {\n\t\t\t\t\telement.labelHighlights = undefined;\n\t\t\t\t\telement.descriptionHighlights = undefined;\n\t\t\t\t\telement.detailHighlights = undefined;\n\t\t\t\t\telement.hidden = element.item ? !element.item.alwaysShow : true;\n\t\t\t\t}\n\n\t\t\t\t// Ensure separators are filtered out first before deciding if we need to bring them back\n\t\t\t\tif (element.item) {\n\t\t\t\t\telement.separator = undefined;\n\t\t\t\t} else if (element.separator) {\n\t\t\t\t\telement.hidden = true;\n\t\t\t\t}\n\n\t\t\t\t// we can show the separator unless the list gets sorted by match\n\t\t\t\tif (!this.sortByLabel) {\n\t\t\t\t\tconst previous = element.index && this._inputElements[element.index - 1] || undefined;\n\t\t\t\t\tif (previous?.type === 'separator' && !previous.buttons) {\n\t\t\t\t\t\tcurrentSeparator = previous;\n\t\t\t\t\t}\n\t\t\t\t\tif (currentSeparator && !element.hidden) {\n\t\t\t\t\t\telement.separator = currentSeparator;\n\t\t\t\t\t\tcurrentSeparator = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._setElementsToTree(this._sortByLabel && query\n\t\t\t// We don't render any separators if we're sorting so just render the elements\n\t\t\t? this._itemElements\n\t\t\t// Render the full tree\n\t\t\t: this._elementTree\n\t\t);\n\t\tthis._tree.layout();\n\t\treturn true;\n\t}\n\n\ttoggleCheckbox() {\n\t\tthis._elementCheckedEventBufferer.bufferEvents(() => {\n\t\t\tconst elements = this._tree.getFocus().filter((e): e is QuickPickItemElement => e instanceof QuickPickItemElement);\n\t\t\tconst allChecked = this._allVisibleChecked(elements);\n\t\t\tfor (const element of elements) {\n\t\t\t\tif (!element.checkboxDisabled) {\n\t\t\t\t\t// Would fire an event if we didn't have the flag set\n\t\t\t\t\telement.checked = !allChecked;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tstyle(styles: IListStyles) {\n\t\tthis._tree.style(styles);\n\t}\n\n\ttoggleHover() {\n\t\tconst focused: IQuickPickElement | null = this._tree.getFocus()[0];\n\t\tif (!focused?.saneTooltip || !(focused instanceof QuickPickItemElement)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if there's a hover already, hide it (toggle off)\n\t\tif (this._lastHover && !this._lastHover.isDisposed) {\n\t\t\tthis._lastHover.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is no hover, show it (toggle on)\n\t\tthis.showHover(focused);\n\t\tconst store = new DisposableStore();\n\t\tstore.add(this._tree.onDidChangeFocus(e => {\n\t\t\tif (e.elements[0] instanceof QuickPickItemElement) {\n\t\t\t\tthis.showHover(e.elements[0]);\n\t\t\t}\n\t\t}));\n\t\tif (this._lastHover) {\n\t\t\tstore.add(this._lastHover);\n\t\t}\n\t\tthis._elementDisposable.add(store);\n\t}\n\n\t//#endregion\n\n\t//#region private methods\n\n\tprivate _setElementsToTree(elements: IQuickPickElement[]) {\n\t\tconst treeElements = new Array<IObjectTreeElement<IQuickPickElement>>();\n\t\tfor (const element of elements) {\n\t\t\tif (element instanceof QuickPickSeparatorElement) {\n\t\t\t\ttreeElements.push({\n\t\t\t\t\telement,\n\t\t\t\t\tcollapsible: false,\n\t\t\t\t\tcollapsed: false,\n\t\t\t\t\tchildren: element.children.map(e => ({\n\t\t\t\t\t\telement: e,\n\t\t\t\t\t\tcollapsible: false,\n\t\t\t\t\t\tcollapsed: false,\n\t\t\t\t\t})),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttreeElements.push({\n\t\t\t\t\telement,\n\t\t\t\t\tcollapsible: false,\n\t\t\t\t\tcollapsed: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis._tree.setChildren(null, treeElements);\n\t}\n\n\tprivate _allVisibleChecked(elements: QuickPickItemElement[], whenNoneVisible = true) {\n\t\tfor (let i = 0, n = elements.length; i < n; i++) {\n\t\t\tconst element = elements[i];\n\t\t\tif (!element.hidden && element.item.pickable !== false) {\n\t\t\t\tif (!element.checked) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\twhenNoneVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn whenNoneVisible;\n\t}\n\n\tprivate _updateCheckedObservables() {\n\t\ttransaction((tx) => {\n\t\t\tthis._allVisibleCheckedObservable.set(this._allVisibleChecked(this._itemElements, false), tx);\n\t\t\tconst checkedCount = this._itemElements.filter(element => element.checked).length;\n\t\t\tthis._checkedCountObservable.set(checkedCount, tx);\n\t\t\tthis._checkedElementsObservable.set(this.getCheckedElements(), tx);\n\t\t});\n\t}\n\n\t/**\n\t * Disposes of the hover and shows a new one for the given index if it has a tooltip.\n\t * @param element The element to show the hover for\n\t */\n\tprivate showHover(element: QuickPickItemElement): void {\n\t\tif (this._lastHover && !this._lastHover.isDisposed) {\n\t\t\tthis.hoverDelegate.onDidHideHover?.();\n\t\t\tthis._lastHover?.dispose();\n\t\t}\n\n\t\tif (!element.element || !element.saneTooltip) {\n\t\t\treturn;\n\t\t}\n\t\tthis._lastHover = this.hoverDelegate.showHover({\n\t\t\tcontent: element.saneTooltip,\n\t\t\ttarget: element.element,\n\t\t\tlinkHandler: (url) => {\n\t\t\t\tthis.linkOpenerDelegate(url);\n\t\t\t},\n\t\t\tappearance: {\n\t\t\t\tshowPointer: true,\n\t\t\t},\n\t\t\tcontainer: this._container,\n\t\t\tposition: {\n\t\t\t\thoverPosition: HoverPosition.RIGHT\n\t\t\t}\n\t\t}, false);\n\t}\n}\n\nfunction matchesContiguousIconAware(query: string, target: IParsedLabelWithIcons): IMatch[] | null {\n\n\tconst { text, iconOffsets } = target;\n\n\t// Return early if there are no icon markers in the word to match against\n\tif (!iconOffsets || iconOffsets.length === 0) {\n\t\treturn matchesContiguous(query, text);\n\t}\n\n\t// Trim the word to match against because it could have leading\n\t// whitespace now if the word started with an icon\n\tconst wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n\tconst leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n\n\t// match on value without icon\n\tconst matches = matchesContiguous(query, wordToMatchAgainstWithoutIconsTrimmed);\n\n\t// Map matches back to offsets with icon and trimming\n\tif (matches) {\n\t\tfor (const match of matches) {\n\t\t\tconst iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n\t\t\tmatch.start += iconOffset;\n\t\t\tmatch.end += iconOffset;\n\t\t}\n\t}\n\n\treturn matches;\n}\n\nfunction matchesContiguous(word: string, wordToMatchAgainst: string): IMatch[] | null {\n\tconst matchIndex = wordToMatchAgainst.toLowerCase().indexOf(word.toLowerCase());\n\tif (matchIndex !== -1) {\n\t\treturn [{ start: matchIndex, end: matchIndex + word.length }];\n\t}\n\treturn null;\n}\n\nfunction compareEntries(elementA: IQuickPickElement, elementB: IQuickPickElement, lookFor: string): number {\n\n\tconst labelHighlightsA = elementA.labelHighlights || [];\n\tconst labelHighlightsB = elementB.labelHighlights || [];\n\tif (labelHighlightsA.length && !labelHighlightsB.length) {\n\t\treturn -1;\n\t}\n\n\tif (!labelHighlightsA.length && labelHighlightsB.length) {\n\t\treturn 1;\n\t}\n\n\tif (labelHighlightsA.length === 0 && labelHighlightsB.length === 0) {\n\t\treturn 0;\n\t}\n\n\treturn compareAnything(elementA.saneSortLabel, elementB.saneSortLabel, lookFor);\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,KAAK,KAAK,MAAM,mCAAmC,CAAC;AAC3D,OAAO,KAAK,GAAG,MAAM,8BAA8B,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,iDAAiD,CAAC;AAK5E,OAAO,EAA0B,SAAS,EAAE,MAAM,iDAAiD,CAAC;AACpG,OAAO,EAAE,eAAe,EAAE,MAAM,6DAA6D,CAAC;AAG9F,OAAO,EAAE,QAAQ,EAAE,MAAM,2CAA2C,CAAC;AACrE,OAAO,EAAE,kBAAkB,EAAE,MAAM,+CAA+C,CAAC;AAEnF,OAAO,EAAE,MAAM,EAAE,MAAM,gCAAgC,CAAC;AACxD,OAAO,EAAE,gBAAgB,EAAE,MAAM,+BAA+B,CAAC;AACjE,OAAO,EAAE,eAAe,EAAE,MAAM,mCAAmC,CAAC;AACpE,OAAO,EAAE,OAAO,EAAE,MAAM,oCAAoC,CAAC;AAC7D,OAAO,EAAE,mBAAmB,EAAE,MAAM,gCAAgC,CAAC;AACrE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAyB,MAAM,+BAA+B,CAAC;AAGrG,OAAO,EAAyB,mBAAmB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AAE5I,OAAO,EAAE,IAAI,EAAE,MAAM,8BAA8B,CAAC;AACpD,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACnG,OAAO,EAAE,eAAe,EAAE,mBAAmB,EAAE,WAAW,EAAE,MAAM,oCAAoC,CAAC;;AACvG,OAAO,EAAE,EAAE,EAAE,MAAM,kCAAkC,CAAC;AACtD,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,iCAAiC,CAAC;AAChE,OAAO,EAAE,GAAG,EAAE,MAAM,6BAA6B,CAAC;AAClD,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAC;AACpF,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAC;AACpF,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AACxE,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,EAAE,MAAM,EAAE,MAAM,6BAA6B,CAAC;AACrD,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AACnE,OAAO,EAAkG,cAAc,EAAiB,MAAM,yBAAyB,CAAC;AACxK,OAAO,EAAE,wBAAwB,EAAE,MAAM,sBAAsB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhE,MAAM,CAAC,GAAG,GAAG,CAAC,wKAAC,CAAC;AAiChB,MAAM,wBAAwB;IAG7B,YACU,KAAa,EACb,WAAoB,EAC7B,QAAuB,CAAA;QAFd,IAAA,CAAA,KAAK,GAAL,KAAK,CAAQ;QACb,IAAA,CAAA,WAAW,GAAX,WAAW,CAAS;QA8CtB,IAAA,CAAA,OAAO,GAAG,KAAK,CAAC;QA3CvB,IAAI,CAAC,KAAK,GAAG,IAAI,+KAAI,CAAC,GAAG,EAAE;YAC1B,MAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,IAAI,EAAE,CAAC;YACvC,MAAM,aAAa,OAAG,oMAAmB,EAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAEjE,MAAM,aAAa,GAAG,QAAQ,CAAC,SAAS,IAAI;gBAAC,SAAS;gBAAE,IAAI,CAAC,eAAe;gBAAE,IAAI,CAAC,UAAU;aAAC,CAC5F,GAAG,EAAC,CAAC,CAAC,EAAE,IAAC,oMAAmB,EAAC,CAAC,CAAC,CAAC,CAChC,MAAM,EAAC,CAAC,CAAC,EAAG,AAAD,CAAE,CAAC,CAAC,CAAC,CAChB,IAAI,CAAC,IAAI,CAAC,CAAC;YAEb,OAAO;gBACN,SAAS;gBACT,aAAa;gBACb,aAAa;aACb,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;IACtC,CAAC;IAED,uBAAuB;IAEvB,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC;IACnC,CAAC;IACD,IAAI,aAAa,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC;IACvC,CAAC;IACD,IAAI,aAAa,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC;IACvC,CAAC;IAOD,IAAI,OAAO,GAAA;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IACD,IAAI,OAAO,CAAC,KAA8B,EAAA;QACzC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACvB,CAAC;IAGD,IAAI,MAAM,GAAA;QACT,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IACD,IAAI,MAAM,CAAC,KAAc,EAAA;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACtB,CAAC;IAGD,IAAI,eAAe,GAAA;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC9B,CAAC;IACD,IAAI,eAAe,CAAC,KAAyB,EAAA;QAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAC/B,CAAC;IAGD,IAAI,UAAU,GAAA;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IACD,IAAI,UAAU,CAAC,KAAyB,EAAA;QACvC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC1B,CAAC;IAGD,IAAI,WAAW,GAAA;QACd,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IACD,IAAI,WAAW,CAAC,KAAyD,EAAA;QACxE,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC3B,CAAC;IAGD,IAAI,eAAe,GAAA;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC9B,CAAC;IACD,IAAI,eAAe,CAAC,KAA2B,EAAA;QAC9C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAC/B,CAAC;IAGD,IAAI,qBAAqB,GAAA;QACxB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACpC,CAAC;IACD,IAAI,qBAAqB,CAAC,KAA2B,EAAA;QACpD,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC;IACrC,CAAC;IAGD,IAAI,gBAAgB,GAAA;QACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IACD,IAAI,gBAAgB,CAAC,KAA2B,EAAA;QAC/C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,CAAC;CACD;AAED,MAAM,oBAAqB,SAAQ,wBAAwB;IAG1D,YACC,KAAa,EACJ,UAAkB,EAC3B,WAAoB,EACX,mBAA+E,EAChF,UAAqE,EACpE,IAAoB,EACrB,UAA2C,CAAA;QAEnD,KAAK,CAAC,KAAK,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAPvB,IAAA,CAAA,UAAU,GAAV,UAAU,CAAQ;QAElB,IAAA,CAAA,mBAAmB,GAAnB,mBAAmB,CAA4D;QAChF,IAAA,CAAA,UAAU,GAAV,UAAU,CAA2D;QACpE,IAAA,CAAA,IAAI,GAAJ,IAAI,CAAgB;QACrB,IAAA,CAAA,UAAU,GAAV,UAAU,CAAiC;QAqB5C,IAAA,CAAA,QAAQ,GAAG,KAAK,CAAC;QAjBxB,IAAI,CAAC,SAAS,GAAG,WAAW,GACzB,iLAAK,CAAC,GAAG,CAAC,iLAAK,CAAC,MAAM,CAAmD,IAAI,CAAC,UAAU,CAAC,KAAK,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,OAAO,CAAC,GACzI,iLAAK,CAAC,IAAI,CAAC;QAEd,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC;QAC/C,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,EAAE,WAAW,CAAC;QAC3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC;IAClD,CAAC;IAED,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;IACxB,CAAC;IACD,IAAI,SAAS,CAAC,KAAsC,EAAA;QACnD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACzB,CAAC;IAGD,IAAI,OAAO,GAAA;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IACD,IAAI,OAAO,CAAC,KAAc,EAAA;QACzB,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;gBAAE,OAAO,EAAE,IAAI;gBAAE,OAAO,EAAE,KAAK;YAAA,CAAE,CAAC,CAAC;QACzD,CAAC;IACF,CAAC;IAED,IAAI,gBAAgB,GAAA;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC7B,CAAC;CACD;AAED,IAAK,6BAaJ;AAbD,CAAA,SAAK,6BAA6B;IACjC;;OAEG,CACH,6BAAA,CAAA,6BAAA,CAAA,OAAA,GAAA,EAAA,GAAA,MAAQ,CAAA;IACR;;OAEG,CACH,6BAAA,CAAA,6BAAA,CAAA,cAAA,GAAA,EAAA,GAAA,aAAe,CAAA;IACf;;OAEG,CACH,6BAAA,CAAA,6BAAA,CAAA,cAAA,GAAA,EAAA,GAAA,aAAe,CAAA;AAChB,CAAC,EAbI,6BAA6B,IAAA,CAA7B,6BAA6B,GAAA,CAAA,CAAA,GAajC;AAED,MAAM,yBAA0B,SAAQ,wBAAwB;IAS/D,YACC,KAAa,EACJ,4BAA6E,EAC7E,SAA8B,CAAA;QAEvC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;QAHtB,IAAA,CAAA,4BAA4B,GAA5B,4BAA4B,CAAiD;QAC7E,IAAA,CAAA,SAAS,GAAT,SAAS,CAAqB;QAXxC,IAAA,CAAA,QAAQ,GAAG,IAAI,KAAK,EAAwB,CAAC;QAC7C;;;;WAIG,CACH,IAAA,CAAA,oBAAoB,GAAG,6BAA6B,CAAC,IAAI,CAAC;IAQ1D,CAAC;CACD;AAED,MAAM,sBAAsB;IAC3B,SAAS,CAAC,OAA0B,EAAA;QAEnC,IAAI,OAAO,YAAY,yBAAyB,EAAE,CAAC;YAClD,OAAO,EAAE,CAAC;QACX,CAAC;QACD,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;IACrC,CAAC;IAED,aAAa,CAAC,OAA0B,EAAA;QACvC,IAAI,OAAO,YAAY,oBAAoB,EAAE,CAAC;YAC7C,OAAO,4BAA4B,CAAC,EAAE,CAAC;QACxC,CAAC,MAAM,CAAC;YACP,OAAO,iCAAiC,CAAC,EAAE,CAAC;QAC7C,CAAC;IACF,CAAC;CACD;AAED,MAAM,+BAA+B;IAEpC,kBAAkB,GAAA;QACjB,WAAO,gLAAQ,EAAC,IAAY,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;IAED,YAAY,CAAC,OAA0B,EAAA;QACtC,OAAO,OAAO,CAAC,SAAS,EAAE,KAAK,GAC5B,GAAG,OAAO,CAAC,aAAa,CAAA,EAAA,EAAK,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,GACtD,OAAO,CAAC,aAAa,CAAC;IAC1B,CAAC;IAED,aAAa,GAAA;QACZ,OAAO,SAAS,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,OAA0B,EAAA;QACjC,OAAO,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC;IACpD,CAAC;IAED,SAAS,CAAC,OAA0B,EAAA;QACnC,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;YACxE,OAAO,SAAS,CAAC;QAClB,CAAC;QAED,OAAO;YACN,IAAI,KAAK,IAAA;gBAAK,OAAO,OAAO,CAAC,OAAO,CAAC;YAAC,CAAC;YACvC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAG,CAAD,AAAE,EAAE,CAAC;SAC9C,CAAC;IACH,CAAC;CACD;AAED,MAAe,0BAA0B;IAGxC,YACkB,aAAyC,CAAA;QAAzC,IAAA,CAAA,aAAa,GAAb,aAAa,CAA4B;IACvD,CAAC;IAEL,sFAAsF;IACtF,cAAc,CAAC,SAAsB,EAAA;QACpC,MAAM,IAAI,GAAgC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9D,IAAI,CAAC,gBAAgB,GAAG,IAAI,+LAAe,EAAE,CAAC;QAC9C,IAAI,CAAC,iBAAiB,GAAG,IAAI,+LAAe,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,6KAAM,CAAC,SAAS,EAAE,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;QAEjE,WAAW;QACX,MAAM,KAAK,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,iMAAiB,EAAE,CAAC,CAAC;QACpE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAG,CAAC,oMAA6B,CAAC,KAAK,EAAE,GAAG,CAAC,gLAAS,CAAC,KAAK,GAAE,CAAC,CAAC,EAAE;YAC5F,wGAAwG;YACxG,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,gBAAgB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAC/E,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;gBAC7C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBACrC,IAAI,CAAC,OAAgC,CAAC,OAAO,GAAG,OAAO,CAAC;YAC1D,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO;QACP,MAAM,IAAI,GAAG,GAAG,CAAC,6KAAM,CAAC,KAAK,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAC5D,MAAM,IAAI,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,EAAE,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC1D,MAAM,IAAI,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,EAAE,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAE1D,QAAQ;QACR,IAAI,CAAC,KAAK,GAAG,IAAI,6MAAS,CAAC,IAAI,EAAE;YAAE,iBAAiB,EAAE,IAAI;YAAE,4BAA4B,EAAE,IAAI;YAAE,YAAY,EAAE,IAAI;YAAE,aAAa,EAAE,IAAI,CAAC,aAAa;QAAA,CAAE,CAAC,CAAC;QACzJ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAqB,GAAG,CAAC,8KAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAE3F,aAAa;QACb,MAAM,mBAAmB,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,EAAE,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACtF,IAAI,CAAC,UAAU,GAAG,IAAI,+NAAe,CAAC,mBAAmB,EAAE,iLAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE5C,SAAS;QACT,MAAM,eAAe,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,EAAE,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,MAAM,GAAG,IAAI,6MAAS,CAAC,eAAe,EAAE;YAAE,iBAAiB,EAAE,IAAI;YAAE,YAAY,EAAE,IAAI;YAAE,aAAa,EAAE,IAAI,CAAC,aAAa;QAAA,CAAE,CAAC,CAAC;QACjI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExC,YAAY;QACZ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;QAE1E,UAAU;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,6MAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAAE,aAAa,EAAE,IAAI,CAAC,aAAa;QAAA,CAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QACnH,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAC1E,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE3C,OAAO,IAAI,CAAC;IACb,CAAC;IAED,eAAe,CAAC,IAAiC,EAAA;QAChD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IAED,cAAc,CAAC,QAA4C,EAAE,MAAc,EAAE,IAAiC,EAAA;QAC7G,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;CAID;AAED,IAAM,4BAA4B,GAAlC,MAAM,4BAA6B,SAAQ,0BAAgD;;;;;QAC1E,IAAA,CAAA,EAAE,GAAG,eAAH,AAAkB,CAAC;IAAA,CAAA;IAKrC,YACC,aAAyC,EAC1B,YAA4C,CAAA;QAE3D,KAAK,CAAC,aAAa,CAAC,CAAC;QAFW,IAAA,CAAA,YAAY,GAAZ,YAAY,CAAe;QAL5D,8CAA8C;QAC7B,IAAA,CAAA,6BAA6B,GAAG,IAAI,GAAG,EAAgC,CAAC;IAOzF,CAAC;IAED,IAAI,UAAU,GAAA;QACb,OAAO,8BAA4B,CAAC,EAAE,CAAC;IACxC,CAAC;IAEO,cAAc,CAAC,OAA6B,EAAE,IAAiC,EAAA;QACtF,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACtB,OAAO;QACR,CAAC;QAED,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACf,QAAQ,GAAG,IAAI,sMAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,EAAE;gBAAE,GAAG,uNAAqB;gBAAE,IAAI,EAAE,EAAE;YAAA,CAAE,CAAC,CAAC;YACpG,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC,MAAM,CAAC;YACP,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACtC,CAAC;QAED,IAAI,OAAO,CAAC,gBAAgB,EAAE,CAAC;YAC9B,QAAQ,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,MAAM,CAAC;YACP,QAAQ,CAAC,MAAM,EAAE,CAAC;QACnB,CAAC;QAED,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,EAAC,OAAO,CAAC,EAAE,AAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAG,CAAD,MAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,aAAa,CAAC,IAA2C,EAAE,KAAa,EAAE,IAAiC,EAAA;QAC1G,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;QAC1C,MAAM,QAAQ,GAAmB,OAAO,CAAC,IAAI,CAAC;QAE9C,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC;QAElF,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAEnC,MAAM,EAAE,eAAe,EAAE,qBAAqB,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;QAE7E,OAAO;QACP,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACvB,MAAM,IAAI,OAAG,+LAAM,EAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3I,MAAM,OAAO,GAAG,6KAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,kLAAQ,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA,sBAAA,EAAyB,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/F,CAAC;QAED,QAAQ;QACR,IAAI,gBAAgE,CAAC;QACrE,gDAAgD;QAChD,6CAA6C;QAC7C,aAAa;QACb,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,eAAe,EAAE,CAAC;YACrD,gBAAgB,GAAG;gBAClB,QAAQ,EAAE;oBACT,KAAK,MAAE,oLAAM,EAAC,OAAO,CAAC,eAAe,CAAC;oBACtC,iBAAiB,EAAE,IAAI;iBACvB;gBACD,4BAA4B,EAAE,OAAO,CAAC,eAAe;aACrD,CAAC;QACH,CAAC;QACD,MAAM,OAAO,GAA2B;YACvC,OAAO,EAAE,eAAe,IAAI,EAAE;YAC9B,yEAAyE;YACzE,gBAAgB;YAChB,kBAAkB,EAAE,qBAAqB,IAAI,EAAE;YAC/C,mBAAmB,EAAE,IAAI;SACzB,CAAC;QACF,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC,WAAW,CAAC;QAC5C,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACjC,OAAO,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,oCAAoC,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAEzE,aAAa;QACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAEzC,SAAS;QACT,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;YACxB,IAAI,KAAqD,CAAC;YAC1D,yEAAyE;YACzE,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gBAC1B,KAAK,GAAG;oBACP,QAAQ,EAAE;wBACT,KAAK,MAAE,oLAAM,EAAC,OAAO,CAAC,UAAU,CAAC;wBACjC,iBAAiB,EAAE,IAAI;qBACvB;oBACD,4BAA4B,EAAE,OAAO,CAAC,UAAU;iBAChD,CAAC;YACH,CAAC;YACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE;gBACnD,OAAO,EAAE,gBAAgB;gBACzB,KAAK;gBACL,mBAAmB,EAAE,IAAI;aACzB,CAAC,CAAC;QACJ,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QAC5C,CAAC;QAED,YAAY;QACZ,IAAI,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,mCAAmC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,UAAU,KAAK,CAAC,CAAC,CAAC;QAElH,UAAU;QACV,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QACjC,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,GAAC,iOAAwB,EAC1E,MAAM,EACN,CAAA,GAAA,EAAM,KAAK,EAAE,EACb,GAAG,CAAG,CAAD,MAAQ,CAAC,mBAAmB,CAAC;wBAAE,MAAM;wBAAE,IAAI,EAAE,OAAO,CAAC,IAAI;oBAAA,CAAE,CAAC,CACjE,CAAC,EAAE;gBAAE,IAAI,EAAE,IAAI;gBAAE,KAAK,EAAE,KAAK;YAAA,CAAE,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACzC,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC5C,CAAC;IACF,CAAC;IAEQ,cAAc,CAAC,OAA8C,EAAE,MAAc,EAAE,IAAiC,EAAA;QACxH,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9C,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAED,0BAA0B,CAAC,IAA0B,EAAA;QACpD,OAAO,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAEO,oBAAoB,CAAC,IAA0B,EAAA;QACtD,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACvG,CAAC;IAEO,uBAAuB,CAAC,IAA0B,EAAA;QACzD,MAAM,SAAS,GAAG,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpE,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;YACnB,IAAI,CAAC,6BAA6B,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;QAC7D,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,6BAA6B,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,CAAC;IACF,CAAC;;AApKI,4BAA4B,GAAA,iCAAA,WAAA;IAQ/B,QAAA,GAAA,6MAAa,CAAA;GARV,4BAA4B,CAqKjC;AAED,MAAM,iCAAkC,SAAQ,0BAAqD;IAArG,aAAA;;QAGC,6FAA6F;QAC7F,kCAAkC;QACjB,IAAA,CAAA,2BAA2B,GAAG,IAAI,GAAG,EAAqC,CAAC;IA2F7F,CAAC;;QA/FgB,IAAA,CAAA,EAAE,GAAG,oBAAH,AAAuB,CAAC;IAAA,CAAA;IAM1C,IAAI,UAAU,GAAA;QACb,OAAO,iCAAiC,CAAC,EAAE,CAAC;IAC7C,CAAC;IAED,IAAI,iBAAiB,GAAA;QACpB,OAAO,CAAC;eAAG,IAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE;SAAC,CAAC;IACrD,CAAC;IAED,kBAAkB,CAAC,SAAoC,EAAA;QACtD,OAAO,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACxD,CAAC;IAEQ,aAAa,CAAC,IAAgD,EAAE,KAAa,EAAE,IAAiC,EAAA;QACxH,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,SAAS,CAAC;QAC1C,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QACjF,MAAM,QAAQ,GAAwB,OAAO,CAAC,SAAS,CAAC;QAExD,MAAM,EAAE,eAAe,EAAE,qBAAqB,EAAE,GAAG,OAAO,CAAC;QAE3D,OAAO;QACP,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEzB,QAAQ;QACR,IAAI,gBAAgE,CAAC;QACrE,gDAAgD;QAChD,6CAA6C;QAC7C,aAAa;QACb,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,eAAe,EAAE,CAAC;YACrD,gBAAgB,GAAG;gBAClB,QAAQ,EAAE;oBACT,KAAK,MAAE,oLAAM,EAAC,OAAO,CAAC,eAAe,CAAC;oBACtC,iBAAiB,EAAE,IAAI;iBACvB;gBACD,4BAA4B,EAAE,OAAO,CAAC,eAAe;aACrD,CAAC;QACH,CAAC;QACD,MAAM,OAAO,GAA2B;YACvC,OAAO,EAAE,eAAe,IAAI,EAAE;YAC9B,yEAAyE;YACzE,gBAAgB;YAChB,kBAAkB,EAAE,qBAAqB,IAAI,EAAE;YAC/C,mBAAmB,EAAE,IAAI;SACzB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAC/D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAEzE,YAAY;QACZ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAE9D,UAAU;QACV,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QACjC,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,GAAC,iOAAwB,EAC1E,MAAM,EACN,CAAA,GAAA,EAAM,KAAK,EAAE,EACb,GAAG,CAAG,CAAD,MAAQ,CAAC,4BAA4B,CAAC;wBAAE,MAAM;wBAAE,SAAS,EAAE,OAAO,CAAC,SAAS;oBAAA,CAAE,CAAC,CACpF,CAAC,EAAE;gBAAE,IAAI,EAAE,IAAI;gBAAE,KAAK,EAAE,KAAK;YAAA,CAAE,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACzC,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAEQ,cAAc,CAAC,OAAmD,EAAE,MAAc,EAAE,IAAiC,EAAA;QAC7H,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YAC/C,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAC3D,CAAC;QACD,KAAK,CAAC,cAAc,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IAEO,YAAY,CAAC,SAAoC,EAAA;QACxD,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7G,CAAC;IAEO,eAAe,CAAC,SAAoC,EAAA;QAC3D,MAAM,SAAS,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACvE,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;YACnB,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,GAAG,CAAC,CAAC,CAAC;QAChE,CAAC,MAAM,CAAC;YACP,IAAI,CAAC,2BAA2B,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC;IACF,CAAC;;AAGK,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,0LAAU;IAiD7C,YACS,MAAmB,EACnB,aAA6B,EAC7B,kBAA6C,EACrD,EAAU,EACa,oBAA2C,EAC3C,oBAA4D,CAAA;QAEnF,KAAK,EAAE,CAAC;QAPA,IAAA,CAAA,MAAM,GAAN,MAAM,CAAa;QACnB,IAAA,CAAA,aAAa,GAAb,aAAa,CAAgB;QAC7B,IAAA,CAAA,kBAAkB,GAAlB,kBAAkB,CAA2B;QAGb,IAAA,CAAA,oBAAoB,GAApB,oBAAoB,CAAuB;QArDpF,+BAA+B;QAEd,IAAA,CAAA,UAAU,GAAG,IAAI,mLAAO,EAAyB,CAAC;QAElD,IAAA,CAAA,QAAQ,GAAG,IAAI,mLAAO,EAAQ,CAAC;QAChD;;UAEE,CACO,IAAA,CAAA,OAAO,GAAgB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEnC,IAAA,CAAA,uBAAuB,OAAG,iNAAe,EAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAC9E,IAAA,CAAA,qBAAqB,GAAkB,iLAAK,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtF,IAAA,CAAA,4BAA4B,OAAG,iNAAe,EAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;QAC5F,IAAA,CAAA,0BAA0B,GAAmB,iLAAK,CAAC,cAAc,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjG,IAAA,CAAA,uBAAuB,OAAG,iNAAe,EAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QAC9E,IAAA,CAAA,qBAAqB,GAAkB,iLAAK,CAAC,cAAc,CAAC,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtF,IAAA,CAAA,0BAA0B,OAAG,qNAAmB,EAAC;YAAE,QAAQ,EAAE,mLAAM;QAAA,CAAE,EAAE,IAAI,KAAK,EAAkB,CAAC,CAAC;QACrH,IAAA,CAAA,wBAAwB,GAA4B,iLAAK,CAAC,cAAc,CAAC,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEtG,IAAA,CAAA,kBAAkB,GAAG,IAAI,mLAAO,EAA6C,CAAC;QAC/F,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAEjC,IAAA,CAAA,2BAA2B,GAAG,IAAI,mLAAO,EAAkC,CAAC;QAC7F,IAAA,CAAA,0BAA0B,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;QAEnD,IAAA,CAAA,eAAe,GAAG,IAAI,mLAAO,EAAoD,CAAC;QAClF,IAAA,CAAA,4BAA4B,GAAG,IAAI,yLAAa,EAAE,CAAC;QAEpE,YAAY;QAEJ,IAAA,CAAA,cAAc,GAAG,KAAK,CAAC;QAMvB,IAAA,CAAA,cAAc,GAAG,IAAI,KAAK,EAAiB,CAAC;QAC5C,IAAA,CAAA,YAAY,GAAG,IAAI,KAAK,EAAqB,CAAC;QAC9C,IAAA,CAAA,aAAa,GAAG,IAAI,KAAK,EAAwB,CAAC;QAC1D,qDAAqD;QACpC,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,+LAAe,EAAE,CAAC,CAAC;QA4GpE,IAAA,CAAA,mBAAmB,GAAG,KAAK,CAAC;QAQ5B,IAAA,CAAA,cAAc,GAAG,KAAK,CAAC;QAQvB,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC;QAQrB,IAAA,CAAA,iBAAiB,GAA2B,OAAO,CAAC;QAQpD,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC;QAQpB,IAAA,CAAA,WAAW,GAAG,IAAI,CAAC;QAvI1B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,6KAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAClE,IAAI,CAAC,kBAAkB,GAAG,IAAI,iCAAiC,CAAC,aAAa,CAAC,CAAC;QAC/E,IAAI,CAAC,aAAa,GAAG,oBAAoB,CAAC,cAAc,CAAC,4BAA4B,EAAE,aAAa,CAAC,CAAC;QACtG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAC9D,kNAA4C,CAAA,CAC5C,YAAY,EACZ,IAAI,CAAC,UAAU,EACf,IAAI,sBAAsB,EAAE,EAC5B;YAAC,IAAI,CAAC,aAAa;YAAE,IAAI,CAAC,kBAAkB;SAAC,EAC7C;YACC,MAAM,EAAE;gBACP,MAAM,EAAC,OAAO;oBACb,OAAO,OAAO,CAAC,MAAM,GACnB,EAAA,yBAAA,MACC,OAAO,YAAY,yBAAyB,GAC5C,EAAA,0BAAA,MACA,EAAA,0BAAA,EAAuB,CAAC;gBAC5B,CAAC;aACD;YACD,MAAM,EAAE;gBACP,OAAO,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE;oBAClC,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACjD,OAAO,CAAC,CAAC;oBACV,CAAC;oBACD,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;oBAClE,OAAO,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,qBAAqB,CAAC,CAAC;gBACrE,CAAC;aACD;YACD,qBAAqB,EAAE,IAAI,+BAA+B,EAAE;YAC5D,gBAAgB,EAAE,KAAK;YACvB,wBAAwB,EAAE,KAAK;YAC/B,+BAA+B,EAAE,IAAI;YACrC,kBAAkB,EAAE,oNAAkB,CAAC,IAAI;YAC3C,iBAAiB,EAAE,KAAK;YACxB,MAAM,EAAE,CAAC;YACT,mBAAmB,EAAE,KAAK;YAC1B,0BAA0B,EAAE,IAAI;YAChC,uBAAuB,EAAE,IAAI;SAC7B,CACD,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,gCAAgC;IAGhC,IAAI,gBAAgB,GAAA;QACnB,OAAO,iLAAK,CAAC,GAAG,CACf,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAC3B,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAA6B,CAAG,CAAD,AAAE,YAAY,oBAAoB,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,CAAC,EAC5G,IAAI,CAAC,MAAM,CACX,CAAC;IACH,CAAC;IAGD,IAAI,oBAAoB,GAAA;QACvB,OAAO,iLAAK,CAAC,GAAG,CACf,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAC/B,CAAC,CAAC,EAAE,AAAC,CAAC;gBACL,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAA6B,CAAG,CAAD,AAAE,YAAY,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC9G,KAAK,EAAE,CAAC,CAAC,YAAY;aACrB,CAAC,EACF,IAAI,CAAC,MAAM,CACX,CAAC;IACH,CAAC;IAED,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC;IACjD,CAAC;IAED,IAAI,SAAS,CAAC,KAAc,EAAA;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;IACrD,CAAC;IAED,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS,CAAC,SAAiB,EAAA;QAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IAClC,CAAC;IAED,IAAI,SAAS,GAAA;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS,CAAC,KAAoB,EAAA;QACjC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,IAAI,EAAE,CAAC;IACpC,CAAC;IAED,IAAI,OAAO,CAAC,KAAc,EAAA;QACzB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;IACvE,CAAC;IAGD,IAAI,kBAAkB,GAAA;QACrB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACjC,CAAC;IACD,IAAI,kBAAkB,CAAC,KAAc,EAAA;QACpC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;IAClC,CAAC;IAGD,IAAI,aAAa,GAAA;QAChB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B,CAAC;IACD,IAAI,aAAa,CAAC,KAAc,EAAA;QAC/B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAC7B,CAAC;IAGD,IAAI,YAAY,GAAA;QACf,OAAO,IAAI,CAAC,aAAa,CAAC;IAC3B,CAAC;IACD,IAAI,YAAY,CAAC,KAAc,EAAA;QAC9B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5B,CAAC;IAGD,IAAI,gBAAgB,GAAA;QACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAC/B,CAAC;IACD,IAAI,gBAAgB,CAAC,KAA6B,EAAA;QACjD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IAChC,CAAC;IAGD,IAAI,WAAW,GAAA;QACd,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IACD,IAAI,WAAW,CAAC,KAAc,EAAA;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC3B,CAAC;IAGD,IAAI,UAAU,GAAA;QACb,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IACD,IAAI,UAAU,CAAC,KAAc,EAAA;QAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,YAAY;IAEZ,4BAA4B;IAEpB,kBAAkB,GAAA;QACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,gCAAgC,EAAE,CAAC;QACxC,IAAI,CAAC,wCAAwC,EAAE,CAAC;IACjD,CAAC;IAEO,kBAAkB,GAAA;QACzB,gDAAgD;QAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACvC,MAAM,KAAK,GAAG,IAAI,0MAAqB,CAAC,CAAC,CAAC,CAAC;YAC3C,OAAQ,KAAK,CAAC,OAAO,EAAE,CAAC;gBACvB,KAAA,GAAA,iBAAA;oBACC,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,MAAM;YACR,CAAC;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,yBAAyB,GAAA;QAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4LAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,gLAAS,CAAC,KAAK,GAAE,CAAC,CAAC,EAAE;YAClF,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,kDAAkD;gBACnE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,2BAA2B,GAAA;QAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,4LAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,gLAAS,CAAC,QAAQ,GAAE,CAAC,CAAC,EAAE;YACrF,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,2BAA2B,GAAA;QAClC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE;YAC/C,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;YACtE,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YAC1D,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;gBACzB,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAClC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,yBAAyB,GAAA;QAChC,yCAAyC;QACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC;IAC7I,CAAC;IAEO,sBAAsB,GAAA;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAC,CAAC,CAAC,EAAE;YAC3C,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;gBACf,CAAC,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;gBAEhC,2CAA2C;gBAC3C,0CAA0C;gBAC1C,wCAAwC;gBACxC,0CAA0C;gBAC1C,+BAA+B;gBAC/B,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;oBAAC,CAAC,CAAC,OAAO;iBAAC,CAAC,CAAC;YACtC,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,uBAAuB,GAAA;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,4LAAgB,CAAC,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QAC7J,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAC,CAAC,EAAC,EAAE;YAC/C,8EAA8E;YAC9E,8DAA8D;YAC9D,IAAI,GAAG,CAAC,0LAAmB,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC;gBACpD,OAAO,CAAC,MAAM,EAAE,CAAC;gBACjB,OAAO;YACR,CAAC;YACD,IACC,oEAAoE;YACpE,CAAC,AAAC,GAAG,CAAC,0LAAmB,CAAC,CAAC,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,GACxD,oDAAoD;YACpD,GAAG,CAAC,iLAAU,CAAC,CAAC,CAAC,YAAY,CAAC,aAAqB,EAAE,CAAC,CAAC,OAAO,EAAE,OAAe,CAAC,EAC/E,CAAC;gBACF,OAAO;YACR,CAAC;YACD,IAAI,CAAC;gBACJ,MAAM,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;oBAChC,IAAI,CAAC,CAAC,OAAO,YAAY,oBAAoB,EAAE,CAAC;wBAC/C,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBAC3B,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;gBACZ,8CAA8C;gBAC9C,IAAI,KAAC,gMAAmB,EAAC,CAAC,CAAC,EAAE,CAAC;oBAC7B,MAAM,CAAC,CAAC;gBACT,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC,EAAE;YACxC,oEAAoE;YACpE,oEAAoE;YACpE,qDAAqD;YACrD,IAAI,GAAG,CAAC,iLAAU,CAAC,CAAC,CAAC,YAAY,CAAC,aAAqB,EAAE,CAAC,CAAC,OAAO,EAAE,OAAe,CAAC,EAAE,CAAC;gBACtF,OAAO;YACR,CAAC;YACD,OAAO,CAAC,MAAM,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG,CACK,wCAAwC,GAAA;QAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAC,CAAC,CAAC,EAAE;YAC9C,MAAM,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GACzB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAA8B,GAEvE,IAAI,CAAC;YACR,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAE,CAAC;gBACnE,MAAM,KAAK,GAAG,SAAS,KAAK,MAAM,CAAC;gBACnC,qDAAqD;gBACrD,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,oBAAoB,GAAG,6BAA6B,CAAC,WAAW,CAAC,CAAC;gBACrG,IAAI,aAAa,KAAK,KAAK,EAAE,CAAC;oBAC7B,IAAI,KAAK,EAAE,CAAC;wBACX,SAAS,CAAC,oBAAoB,IAAI,6BAA6B,CAAC,WAAW,CAAC;oBAC7E,CAAC,MAAM,CAAC;wBACP,SAAS,CAAC,oBAAoB,IAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC;oBAC9E,CAAC;oBAED,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAChC,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAC,CAAC,CAAC,EAAE;YACzC,MAAM,MAAM,GAAG,CAAC,CAAC,OAAO,GACrB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAA8B,GACnE,IAAI,CAAC;YACR,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAE,CAAC;gBACnE,IAAI,SAAS,KAAK,MAAM,EAAE,CAAC;oBAC1B,SAAS;gBACV,CAAC;gBACD,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,oBAAoB,GAAG,6BAA6B,CAAC,WAAW,CAAC,CAAC;gBACpG,IAAI,CAAC,YAAY,EAAE,CAAC;oBACnB,SAAS,CAAC,oBAAoB,IAAI,6BAA6B,CAAC,WAAW,CAAC;oBAC5E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAChC,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC,EAAE;YACxC,MAAM,MAAM,GAAG,CAAC,CAAC,OAAO,GACrB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAA8B,GACnE,IAAI,CAAC;YACR,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAE,CAAC;gBACnE,IAAI,SAAS,KAAK,MAAM,EAAE,CAAC;oBAC1B,SAAS;gBACV,CAAC;gBACD,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,oBAAoB,GAAG,6BAA6B,CAAC,WAAW,CAAC,CAAC;gBACpG,IAAI,YAAY,EAAE,CAAC;oBAClB,SAAS,CAAC,oBAAoB,IAAI,CAAC,6BAA6B,CAAC,WAAW,CAAC;oBAC7E,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBAChC,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gCAAgC,GAAA;QACvC,0FAA0F;QAC1F,gDAAgD;QAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,EAAC,CAAC,CAAC,EAAE;YAClD,MAAM,yBAAyB,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAA6B,CAAG,CAAD,AAAE,YAAY,oBAAoB,CAAC,CAAC;YACzH,IAAI,yBAAyB,CAAC,MAAM,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBAC5D,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,yBAAyB,EAAE,CAAC;oBACnF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;wBAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;qBAAC,CAAC,CAAC;oBACjD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrC,CAAC;gBACD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,yBAAyB,CAAC,CAAC;YACpD,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;IAEZ,wBAAwB;IAExB,oBAAoB,CAAC,OAAgB,EAAA;QACpC,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,GAAG,EAAE;YACnD,IAAI,CAAC,aAAa,CAAC,OAAO,EAAC,OAAO,CAAC,EAAE;gBACpC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE,CAAC;oBACrF,qDAAqD;oBACrD,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC3B,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,WAAW,CAAC,aAA8B,EAAA;QACzC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACxE,IAAI,uBAA8D,CAAC;QACnE,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAwB,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;YAChE,IAAI,OAA0B,CAAC;YAC/B,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;gBAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;oBACnB,6DAA6D;oBAC7D,OAAO,MAAM,CAAC;gBACf,CAAC;gBACD,uBAAuB,GAAG,IAAI,yBAAyB,CACtD,KAAK,GACL,CAAC,CAAC,EAAE,AAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC,EAC7C,IAAI,CACJ,CAAC;gBACF,OAAO,GAAG,uBAAuB,CAAC;YACnC,CAAC,MAAM,CAAC;gBACP,MAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;gBAClE,IAAI,SAA0C,CAAC;gBAC/C,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;oBACpE,SAAS,GAAG,QAAQ,CAAC;gBACtB,CAAC;gBACD,MAAM,GAAG,GAAG,IAAI,oBAAoB,CACnC,KAAK,EACL,uBAAuB,EAAE,QAAQ,GAC9B,uBAAuB,CAAC,QAAQ,CAAC,MAAM,GACvC,KAAK,EACR,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,GAC9C,CAAC,CAAC,EAAE,AAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EACpC,IAAI,CAAC,eAAe,EACpB,IAAI,EACJ,SAAS,CACT,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAE7B,IAAI,uBAAuB,EAAE,CAAC;oBAC7B,uBAAuB,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC3C,OAAO,MAAM,CAAC;gBACf,CAAC;gBACD,OAAO,GAAG,GAAG,CAAC;YACf,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,MAAM,CAAC;QACf,CAAC,EAAE,IAAI,KAAK,EAAqB,CAAC,CAAC;QAEnC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE3C,iDAAiD;QACjD,oDAAoD;QACpD,IAAI,IAAI,CAAC,oBAAoB,CAAC,uBAAuB,EAAE,EAAE,CAAC;YACzD,UAAU,CAAC,GAAG,EAAE;gBACf,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,aAAa,CAAC,CAAA,wBAAA,CAA0B,CAAC,CAAC;gBAC7F,MAAM,MAAM,GAAG,cAAc,EAAE,UAAU,CAAC;gBAC1C,IAAI,cAAc,IAAI,MAAM,EAAE,CAAC;oBAC9B,MAAM,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;oBAC/C,cAAc,CAAC,MAAM,EAAE,CAAC;oBACxB,MAAM,CAAC,YAAY,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;gBAClD,CAAC;YACF,CAAC,EAAE,CAAC,CAAC,CAAC;QACP,CAAC;IACF,CAAC;IAED,kBAAkB,CAAC,KAAuB,EAAA;QACzC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAC/E,MAAM,CAAC,CAAC,CAAC,EAA6B,CAAG,CAAD,AAAE,CAAC,CAAC,CAAC,CAC7C,MAAM,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC9B,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACtB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,OAAO,EAAE,CAAC;gBACb,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC;QACF,CAAC;IACF,CAAC;IAED,mBAAmB,GAAA;QAClB,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC;IAC1E,CAAC;IAED,mBAAmB,CAAC,KAAuB,EAAA;QAC1C,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAC/E,MAAM,CAAC,CAAC,CAAC,EAA6B,CAAG,CAAC,AAAF,CAAG,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,kBAAkB,GAAA;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,OAAO,CAAC,CAC9C,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,kBAAkB,CAAC,KAAuB,EAAA;QACzC,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,GAAG,EAAE;YACnD,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;YAC1B,KAAK,MAAM,IAAI,IAAI,KAAK,CAAE,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnB,CAAC;YACD,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,aAAa,CAAE,CAAC;gBAC1C,qDAAqD;gBACrD,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7C,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,IAAoB,EAAA;QACzB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;YAChC,OAAO;QACR,CAAC;QAED,IAAI,IAAI,KAAK,iNAAc,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACrE,IAAI,GAAG,iNAAc,CAAC,KAAK,CAAC;QAC7B,CAAC;QAED,OAAQ,IAAI,EAAE,CAAC;YACd,KAAK,iNAAc,CAAC,KAAK;gBACxB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;gBACzB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,OAAO,YAAY,oBAAoB,CAAC,CAAC;gBACnF,MAAM;YACP,KAAK,iNAAc,CAAC,MAAM,CAAC;gBAAC,CAAC;oBAC5B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;oBACzB,IAAI,YAAY,GAAG,KAAK,CAAC;oBACzB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;wBACtC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;4BAClD,OAAO,KAAK,CAAC;wBACd,CAAC;wBACD,IAAI,YAAY,EAAE,CAAC;4BAClB,OAAO,IAAI,CAAC;wBACb,CAAC;wBACD,YAAY,GAAG,CAAC,YAAY,CAAC;wBAC7B,OAAO,KAAK,CAAC;oBACd,CAAC,CAAC,CAAC;oBACH,MAAM;gBACP,CAAC;YACD,KAAK,iNAAc,CAAC,IAAI;gBACvB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;gBAC/C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,OAAO,YAAY,oBAAoB,CAAC,CAAC;gBAClF,MAAM;YACP,KAAK,iNAAc,CAAC,IAAI,CAAC;gBAAC,CAAC;oBAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACxC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;wBAClE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;4BAClD,OAAO,KAAK,CAAC;wBACd,CAAC;wBACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBAC7B,OAAO,IAAI,CAAC;oBACb,CAAC,CAAC,CAAC;oBACH,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAC3C,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;wBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACtB,CAAC;oBACD,MAAM;gBACP,CAAC;YACD,KAAK,iNAAc,CAAC,QAAQ,CAAC;gBAAC,CAAC;oBAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBACxC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;wBACtE,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;4BAClD,OAAO,KAAK,CAAC;wBACd,CAAC;wBACD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBACtD,IAAI,MAAM,KAAK,IAAI,IAAK,MAAoC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;4BACxF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;wBAC9B,CAAC,MAAM,CAAC;4BACP,2EAA2E;4BAC3E,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBAC3B,CAAC;wBACD,OAAO,IAAI,CAAC;oBACb,CAAC,CAAC,CAAC;oBACH,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;oBAC3C,IAAI,SAAS,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;wBAC1D,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACtB,CAAC;oBACD,MAAM;gBACP,CAAC;YACD,KAAK,iNAAc,CAAC,QAAQ;gBAC3B,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;oBACzC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;wBAClD,OAAO,KAAK,CAAC;oBACd,CAAC;oBACD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBAC7B,OAAO,IAAI,CAAC;gBACb,CAAC,CAAC,CAAC;gBACH,MAAM;YACP,KAAK,iNAAc,CAAC,YAAY;gBAC/B,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;oBAC7C,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;wBAClD,OAAO,KAAK,CAAC;oBACd,CAAC;oBACD,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBACtD,IAAI,MAAM,KAAK,IAAI,IAAK,MAAoC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;wBACxF,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oBAC9B,CAAC,MAAM,CAAC;wBACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC3B,CAAC;oBACD,OAAO,IAAI,CAAC;gBACb,CAAC,CAAC,CAAC;gBACH,MAAM;YACP,KAAK,iNAAc,CAAC,aAAa,CAAC;gBAAC,CAAC;oBACnC,IAAI,oBAAoB,GAAG,KAAK,CAAC;oBACjC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;wBACtD,IAAI,oBAAoB,EAAE,CAAC;4BAC1B,2DAA2D;4BAC3D,gCAAgC;4BAChC,OAAO,IAAI,CAAC;wBACb,CAAC;wBAED,IAAI,CAAC,CAAC,OAAO,YAAY,yBAAyB,EAAE,CAAC;4BACpD,oBAAoB,GAAG,IAAI,CAAC;4BAC5B,kGAAkG;4BAClG,IAAI,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;gCAC3D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1C,CAAC,MAAM,CAAC;gCACP,kDAAkD;gCAClD,qCAAqC;gCACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;4BACjC,CAAC;wBACF,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,YAAY,oBAAoB,EAAE,CAAC;4BACtD,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gCACzB,IAAI,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;oCAC9D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gCAC9B,CAAC,MAAM,CAAC;oCACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gCACjC,CAAC;gCACD,OAAO,IAAI,CAAC;4BACb,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;gCAC/C,uEAAuE;gCACvE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gCAChC,OAAO,IAAI,CAAC;4BACb,CAAC;wBACF,CAAC;wBACD,OAAO,KAAK,CAAC;oBACd,CAAC,CAAC,CAAC;oBACH,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;oBACvC,IAAI,MAAM,KAAK,KAAK,EAAE,CAAC;wBACtB,yDAAyD;wBACzD,eAAe;wBACf,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;wBAC/C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAG,CAAC,AAAF,CAAG,OAAO,YAAY,oBAAoB,CAAC,CAAC;oBACnF,CAAC;oBACD,MAAM;gBACP,CAAC;YACD,KAAK,iNAAc,CAAC,iBAAiB,CAAC;gBAAC,CAAC;oBACvC,IAAI,YAA2C,CAAC;oBAChD,4DAA4D;oBAC5D,yDAAyD;oBACzD,4BAA4B;oBAC5B,IAAI,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC;oBAC3D,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE;wBAC1D,IAAI,CAAC,CAAC,OAAO,YAAY,yBAAyB,EAAE,CAAC;4BACpD,IAAI,cAAc,EAAE,CAAC;gCACpB,IAAI,CAAC,YAAY,EAAE,CAAC;oCACnB,IAAI,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;wCAC3D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oCAC9B,CAAC,MAAM,CAAC;wCACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oCACjC,CAAC;oCACD,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gCACtC,CAAC;4BACF,CAAC,MAAM,CAAC;gCACP,cAAc,GAAG,IAAI,CAAC;4BACvB,CAAC;wBACF,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,YAAY,oBAAoB,EAAE,CAAC;4BACtD,IAAI,CAAC,YAAY,EAAE,CAAC;gCACnB,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;oCACzB,IAAI,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;wCAC9D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;oCAC9B,CAAC,MAAM,CAAC;wCACP,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oCACjC,CAAC;oCAED,YAAY,GAAG,CAAC,CAAC,OAAO,CAAC;gCAC1B,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC;oCAC/C,uEAAuE;oCACvE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oCAChC,OAAO,IAAI,CAAC;gCACb,CAAC;4BACF,CAAC;wBACF,CAAC;wBACD,OAAO,KAAK,CAAC;oBACd,CAAC,CAAC,CAAC;oBACH,IAAI,YAAY,EAAE,CAAC;wBAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;4BAAC,YAAY;yBAAC,CAAC,CAAC;oBACrC,CAAC;oBACD,MAAM;gBACP,CAAC;QACF,CAAC;IACF,CAAC;IAED,UAAU,GAAA;QACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;IAED,QAAQ,GAAA;QACP,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,SAAkB,EAAA;QACxB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,AAC5D,iDAAiD;QACjD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE,GAE7B,CACF,CAAA,EAAA,CAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QACX,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,KAAa,EAAA;QACnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;YACnG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACpB,OAAO,KAAK,CAAC;QACd,CAAC;QAED,MAAM,mBAAmB,GAAG,KAAK,CAAC;QAClC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAErB,kBAAkB;QAClB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC;YACrF,IAAI,CAAC,aAAa,CAAC,OAAO,EAAC,OAAO,CAAC,EAAE;gBACpC,OAAO,CAAC,eAAe,GAAG,SAAS,CAAC;gBACpC,OAAO,CAAC,qBAAqB,GAAG,SAAS,CAAC;gBAC1C,OAAO,CAAC,gBAAgB,GAAG,SAAS,CAAC;gBACrC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;gBACvB,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzE,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;oBAClB,OAAO,CAAC,SAAS,GAAG,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC3G,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,MAGI,CAAC;YACL,IAAI,gBAAiD,CAAC;YACtD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACpC,IAAI,eAAqC,CAAC;gBAC1C,IAAI,IAAI,CAAC,gBAAgB,KAAK,OAAO,EAAE,CAAC;oBACvC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,KAAC,sMAAqB,EAAC,KAAK,MAAE,oMAAmB,EAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;gBACrI,CAAC,MAAM,CAAC;oBACP,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,0BAA0B,CAAC,mBAAmB,MAAE,oMAAmB,EAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;gBACxJ,CAAC;gBACD,MAAM,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAC,sMAAqB,EAAC,KAAK,MAAE,oMAAmB,EAAC,OAAO,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;gBAClK,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,KAAC,sMAAqB,EAAC,KAAK,MAAE,oMAAmB,EAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;gBAEnJ,IAAI,eAAe,IAAI,qBAAqB,IAAI,gBAAgB,EAAE,CAAC;oBAClE,OAAO,CAAC,eAAe,GAAG,eAAe,CAAC;oBAC1C,OAAO,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;oBACtD,OAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;oBAC5C,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;gBACxB,CAAC,MAAM,CAAC;oBACP,OAAO,CAAC,eAAe,GAAG,SAAS,CAAC;oBACpC,OAAO,CAAC,qBAAqB,GAAG,SAAS,CAAC;oBAC1C,OAAO,CAAC,gBAAgB,GAAG,SAAS,CAAC;oBACrC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;gBACjE,CAAC;gBAED,yFAAyF;gBACzF,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;oBAClB,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC/B,CAAC,MAAM,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC;oBAC9B,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;gBACvB,CAAC;gBAED,iEAAiE;gBACjE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACvB,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC;oBACtF,IAAI,QAAQ,EAAE,IAAI,KAAK,WAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;wBACzD,gBAAgB,GAAG,QAAQ,CAAC;oBAC7B,CAAC;oBACD,IAAI,gBAAgB,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;wBACzC,OAAO,CAAC,SAAS,GAAG,gBAAgB,CAAC;wBACrC,gBAAgB,GAAG,SAAS,CAAC;oBAC9B,CAAC;gBACF,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,IAAI,KAAK,GAE/C,IAAI,CAAC,aAAa,GAElB,IAAI,CAAC,YAAY,CACnB,CAAC;QACF,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;QACpB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,cAAc,GAAA;QACb,IAAI,CAAC,4BAA4B,CAAC,YAAY,CAAC,GAAG,EAAE;YACnD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAA6B,CAAG,CAAD,AAAE,YAAY,oBAAoB,CAAC,CAAC;YACnH,MAAM,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YACrD,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE,CAAC;gBAChC,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;oBAC/B,qDAAqD;oBACrD,OAAO,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC;gBAC/B,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,MAAmB,EAAA;QACxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,WAAW,GAAA;QACV,MAAM,OAAO,GAA6B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,EAAE,WAAW,IAAI,CAAC,CAAC,OAAO,YAAY,oBAAoB,CAAC,EAAE,CAAC;YACzE,OAAO;QACR,CAAC;QAED,mDAAmD;QACnD,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;YACpD,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;YAC1B,OAAO;QACR,CAAC;QAED,4CAA4C;QAC5C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACxB,MAAM,KAAK,GAAG,IAAI,+LAAe,EAAE,CAAC;QACpC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAC,CAAC,CAAC,EAAE;YACzC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,YAAY,oBAAoB,EAAE,CAAC;gBACnD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACrB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,YAAY;IAEZ,yBAAyB;IAEjB,kBAAkB,CAAC,QAA6B,EAAA;QACvD,MAAM,YAAY,GAAG,IAAI,KAAK,EAAyC,CAAC;QACxE,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE,CAAC;YAChC,IAAI,OAAO,YAAY,yBAAyB,EAAE,CAAC;gBAClD,YAAY,CAAC,IAAI,CAAC;oBACjB,OAAO;oBACP,WAAW,EAAE,KAAK;oBAClB,SAAS,EAAE,KAAK;oBAChB,QAAQ,EAAE,OAAO,CAAC,QAAQ,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC;4BACpC,OAAO,EAAE,CAAC;4BACV,WAAW,EAAE,KAAK;4BAClB,SAAS,EAAE,KAAK;yBAChB,CAAC,CAAC;iBACH,CAAC,CAAC;YACJ,CAAC,MAAM,CAAC;gBACP,YAAY,CAAC,IAAI,CAAC;oBACjB,OAAO;oBACP,WAAW,EAAE,KAAK;oBAClB,SAAS,EAAE,KAAK;iBAChB,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC5C,CAAC;IAEO,kBAAkB,CAAC,QAAgC,EAAE,eAAe,GAAG,IAAI,EAAA;QAClF,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;YACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE,CAAC;gBACxD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;oBACtB,OAAO,KAAK,CAAC;gBACd,CAAC,MAAM,CAAC;oBACP,eAAe,GAAG,IAAI,CAAC;gBACxB,CAAC;YACF,CAAC;QACF,CAAC;QACD,OAAO,eAAe,CAAC;IACxB,CAAC;IAEO,yBAAyB,GAAA;QAChC,iNAAW,EAAC,CAAC,EAAE,EAAE,EAAE;YAClB,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;YAC9F,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;YAClF,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG,CACK,SAAS,CAAC,OAA6B,EAAA;QAC9C,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;YACpD,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,CAAC;YACtC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;YAC9C,OAAO;QACR,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAC9C,OAAO,EAAE,OAAO,CAAC,WAAW;YAC5B,MAAM,EAAE,OAAO,CAAC,OAAO;YACvB,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;gBACpB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC9B,CAAC;YACD,UAAU,EAAE;gBACX,WAAW,EAAE,IAAI;aACjB;YACD,SAAS,EAAE,IAAI,CAAC,UAAU;YAC1B,QAAQ,EAAE;gBACT,aAAa,EAAA,EAAA,uBAAA,EAAqB;aAClC;SACD,EAAE,KAAK,CAAC,CAAC;IACX,CAAC;CACD,CAAA;AA7yBA,WAAA;IADC,wLAAO;sDAOP;AAGD,WAAA;IADC,wLAAO;0DAUP;AA3HW,cAAc,GAAA,WAAA;IAsDxB,QAAA,GAAA,8NAAqB,CAAA;IACrB,QAAA,GAAA,8NAAqB,CAAA;GAvDX,cAAc,CAs5B1B;;AAED,SAAS,0BAA0B,CAAC,KAAa,EAAE,MAA6B;IAE/E,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;IAErC,yEAAyE;IACzE,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC9C,OAAO,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,+DAA+D;IAC/D,kDAAkD;IAClD,MAAM,qCAAqC,OAAG,mLAAK,EAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/D,MAAM,uBAAuB,GAAG,IAAI,CAAC,MAAM,GAAG,qCAAqC,CAAC,MAAM,CAAC;IAE3F,8BAA8B;IAC9B,MAAM,OAAO,GAAG,iBAAiB,CAAC,KAAK,EAAE,qCAAqC,CAAC,CAAC;IAEhF,qDAAqD;IACrD,IAAI,OAAO,EAAE,CAAC;QACb,KAAK,MAAM,KAAK,IAAI,OAAO,CAAE,CAAC;YAC7B,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,uBAAuB,CAAC,CAAC,EAA8B,uBAAuB,CAAC,CAA3B,oCAA2B,EAAuC,CAAC;YACpK,KAAK,CAAC,KAAK,IAAI,UAAU,CAAC;YAC1B,KAAK,CAAC,GAAG,IAAI,UAAU,CAAC;QACzB,CAAC;IACF,CAAC;IAED,OAAO,OAAO,CAAC;AAChB,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAY,EAAE,kBAA0B;IAClE,MAAM,UAAU,GAAG,kBAAkB,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAChF,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE,CAAC;QACvB,OAAO;YAAC;gBAAE,KAAK,EAAE,UAAU;gBAAE,GAAG,EAAE,UAAU,GAAG,IAAI,CAAC,MAAM;YAAA,CAAE;SAAC,CAAC;IAC/D,CAAC;IACD,OAAO,IAAI,CAAC;AACb,CAAC;AAED,SAAS,cAAc,CAAC,QAA2B,EAAE,QAA2B,EAAE,OAAe;IAEhG,MAAM,gBAAgB,GAAG,QAAQ,CAAC,eAAe,IAAI,EAAE,CAAC;IACxD,MAAM,gBAAgB,GAAG,QAAQ,CAAC,eAAe,IAAI,EAAE,CAAC;IACxD,IAAI,gBAAgB,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;QACzD,OAAO,CAAC,CAAC,CAAC;IACX,CAAC;IAED,IAAI,CAAC,gBAAgB,CAAC,MAAM,IAAI,gBAAgB,CAAC,MAAM,EAAE,CAAC;QACzD,OAAO,CAAC,CAAC;IACV,CAAC;IAED,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACpE,OAAO,CAAC,CAAC;IACV,CAAC;IAED,WAAO,+LAAe,EAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AACjF,CAAC","debugId":null}},
    {"offset": {"line": 3917, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputActions.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInputActions.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../base/common/keyCodes.js';\nimport { isMacintosh } from '../../../base/common/platform.js';\nimport { PartialExcept } from '../../../base/common/types.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandHandler } from '../../commands/common/commands.js';\nimport { ContextKeyExpr } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContext } from '../../contextkey/common/contextkeys.js';\nimport { ICommandAndKeybindingRule, KeybindingWeight, KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nimport { endOfQuickInputBoxContext, inQuickInputContext, quickInputTypeContextKeyValue } from './quickInput.js';\nimport { IQuickInputService, IQuickPick, IQuickTree, QuickInputType, QuickPickFocus } from '../common/quickInput.js';\n\nconst defaultCommandAndKeybindingRule = {\n\tweight: KeybindingWeight.WorkbenchContrib,\n\twhen: ContextKeyExpr.and(\n\t\tContextKeyExpr.or(\n\t\t\tContextKeyExpr.equals(quickInputTypeContextKeyValue, QuickInputType.QuickPick),\n\t\t\tContextKeyExpr.equals(quickInputTypeContextKeyValue, QuickInputType.QuickTree),\n\t\t),\n\t\tinQuickInputContext\n\t),\n\tmetadata: { description: localize('quickPick', \"Used while in the context of the quick pick. If you change one keybinding for this command, you should change all of the other keybindings (modifier variants) of this command as well.\") }\n};\nfunction registerQuickPickCommandAndKeybindingRule(rule: PartialExcept<ICommandAndKeybindingRule, 'id' | 'handler'>, options: { withAltMod?: boolean; withCtrlMod?: boolean; withCmdMod?: boolean } = {}) {\n\tKeybindingsRegistry.registerCommandAndKeybindingRule({\n\t\t...defaultCommandAndKeybindingRule,\n\t\t...rule,\n\t\tsecondary: getSecondary(rule.primary!, rule.secondary ?? [], options)\n\t});\n}\n\nconst ctrlKeyMod = isMacintosh ? KeyMod.WinCtrl : KeyMod.CtrlCmd;\n\n// This function will generate all the combinations of keybindings for the given primary keybinding\nfunction getSecondary(primary: number, secondary: number[], options: { withAltMod?: boolean; withCtrlMod?: boolean; withCmdMod?: boolean } = {}): number[] {\n\tif (options.withAltMod) {\n\t\tsecondary.push(KeyMod.Alt + primary);\n\t}\n\tif (options.withCtrlMod) {\n\t\tsecondary.push(ctrlKeyMod + primary);\n\t\tif (options.withAltMod) {\n\t\t\tsecondary.push(KeyMod.Alt + ctrlKeyMod + primary);\n\t\t}\n\t}\n\n\tif (options.withCmdMod && isMacintosh) {\n\t\tsecondary.push(KeyMod.CtrlCmd + primary);\n\t\tif (options.withCtrlMod) {\n\t\t\tsecondary.push(KeyMod.CtrlCmd + KeyMod.WinCtrl + primary);\n\t\t}\n\t\tif (options.withAltMod) {\n\t\t\tsecondary.push(KeyMod.CtrlCmd + KeyMod.Alt + primary);\n\t\t\tif (options.withCtrlMod) {\n\t\t\t\tsecondary.push(KeyMod.CtrlCmd + KeyMod.Alt + KeyMod.WinCtrl + primary);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn secondary;\n}\n\n//#region Navigation\n\nfunction focusHandler(focus: QuickPickFocus, focusOnQuickNatigate?: QuickPickFocus): ICommandHandler {\n\treturn accessor => {\n\t\t// Assuming this is a quick pick due to above when clause\n\t\tconst currentQuickPick = accessor.get(IQuickInputService).currentQuickInput as IQuickPick<any> | IQuickTree<any> | undefined;\n\t\tif (!currentQuickPick) {\n\t\t\treturn;\n\t\t}\n\t\tif (focusOnQuickNatigate && (currentQuickPick as IQuickPick<any>).quickNavigate) {\n\t\t\treturn currentQuickPick.focus(focusOnQuickNatigate);\n\t\t}\n\t\treturn currentQuickPick.focus(focus);\n\t};\n}\n\nregisterQuickPickCommandAndKeybindingRule(\n\t{ id: 'quickInput.pageNext', primary: KeyCode.PageDown, handler: focusHandler(QuickPickFocus.NextPage) },\n\t{ withAltMod: true, withCtrlMod: true, withCmdMod: true }\n);\nregisterQuickPickCommandAndKeybindingRule(\n\t{ id: 'quickInput.pagePrevious', primary: KeyCode.PageUp, handler: focusHandler(QuickPickFocus.PreviousPage) },\n\t{ withAltMod: true, withCtrlMod: true, withCmdMod: true }\n);\nregisterQuickPickCommandAndKeybindingRule(\n\t{ id: 'quickInput.first', primary: ctrlKeyMod + KeyCode.Home, handler: focusHandler(QuickPickFocus.First) },\n\t{ withAltMod: true, withCmdMod: true }\n);\nregisterQuickPickCommandAndKeybindingRule(\n\t{ id: 'quickInput.last', primary: ctrlKeyMod + KeyCode.End, handler: focusHandler(QuickPickFocus.Last) },\n\t{ withAltMod: true, withCmdMod: true }\n);\nregisterQuickPickCommandAndKeybindingRule(\n\t{ id: 'quickInput.next', primary: KeyCode.DownArrow, handler: focusHandler(QuickPickFocus.Next) },\n\t{ withCtrlMod: true }\n);\nregisterQuickPickCommandAndKeybindingRule(\n\t{ id: 'quickInput.previous', primary: KeyCode.UpArrow, handler: focusHandler(QuickPickFocus.Previous) },\n\t{ withCtrlMod: true }\n);\n\n// The next & previous separator commands are interesting because if we are in quick access mode, we are already holding a modifier key down.\n// In this case, we want that modifier key+up/down to navigate to the next/previous item, not the next/previous separator.\n// To handle this, we have a separate command for navigating to the next/previous separator when we are not in quick access mode.\n// If, however, we are in quick access mode, and you hold down an additional modifier key, we will navigate to the next/previous separator.\n\nconst nextSeparatorFallbackDesc = localize('quickInput.nextSeparatorWithQuickAccessFallback', \"If we're in quick access mode, this will navigate to the next item. If we are not in quick access mode, this will navigate to the next separator.\");\nconst prevSeparatorFallbackDesc = localize('quickInput.previousSeparatorWithQuickAccessFallback', \"If we're in quick access mode, this will navigate to the previous item. If we are not in quick access mode, this will navigate to the previous separator.\");\nif (isMacintosh) {\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.nextSeparatorWithQuickAccessFallback',\n\t\t\tprimary: KeyMod.CtrlCmd + KeyCode.DownArrow,\n\t\t\thandler: focusHandler(QuickPickFocus.NextSeparator, QuickPickFocus.Next),\n\t\t\tmetadata: { description: nextSeparatorFallbackDesc }\n\t\t},\n\t);\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.nextSeparator',\n\t\t\tprimary: KeyMod.CtrlCmd + KeyMod.Alt + KeyCode.DownArrow,\n\t\t\t// Since macOS has the cmd key as the primary modifier, we need to add this additional\n\t\t\t// keybinding to capture cmd+ctrl+upArrow\n\t\t\tsecondary: [KeyMod.CtrlCmd + KeyMod.WinCtrl + KeyCode.DownArrow],\n\t\t\thandler: focusHandler(QuickPickFocus.NextSeparator)\n\t\t},\n\t\t{ withCtrlMod: true }\n\t);\n\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.previousSeparatorWithQuickAccessFallback',\n\t\t\tprimary: KeyMod.CtrlCmd + KeyCode.UpArrow,\n\t\t\thandler: focusHandler(QuickPickFocus.PreviousSeparator, QuickPickFocus.Previous),\n\t\t\tmetadata: { description: prevSeparatorFallbackDesc }\n\t\t},\n\t);\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.previousSeparator',\n\t\t\tprimary: KeyMod.CtrlCmd + KeyMod.Alt + KeyCode.UpArrow,\n\t\t\t// Since macOS has the cmd key as the primary modifier, we need to add this additional\n\t\t\t// keybinding to capture cmd+ctrl+upArrow\n\t\t\tsecondary: [KeyMod.CtrlCmd + KeyMod.WinCtrl + KeyCode.UpArrow],\n\t\t\thandler: focusHandler(QuickPickFocus.PreviousSeparator)\n\t\t},\n\t\t{ withCtrlMod: true }\n\t);\n} else {\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.nextSeparatorWithQuickAccessFallback',\n\t\t\tprimary: KeyMod.Alt + KeyCode.DownArrow,\n\t\t\thandler: focusHandler(QuickPickFocus.NextSeparator, QuickPickFocus.Next),\n\t\t\tmetadata: { description: nextSeparatorFallbackDesc }\n\t\t},\n\t);\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.nextSeparator',\n\t\t\tprimary: KeyMod.CtrlCmd + KeyMod.Alt + KeyCode.DownArrow,\n\t\t\thandler: focusHandler(QuickPickFocus.NextSeparator)\n\t\t},\n\t);\n\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.previousSeparatorWithQuickAccessFallback',\n\t\t\tprimary: KeyMod.Alt + KeyCode.UpArrow,\n\t\t\thandler: focusHandler(QuickPickFocus.PreviousSeparator, QuickPickFocus.Previous),\n\t\t\tmetadata: { description: prevSeparatorFallbackDesc }\n\t\t},\n\t);\n\tregisterQuickPickCommandAndKeybindingRule(\n\t\t{\n\t\t\tid: 'quickInput.previousSeparator',\n\t\t\tprimary: KeyMod.CtrlCmd + KeyMod.Alt + KeyCode.UpArrow,\n\t\t\thandler: focusHandler(QuickPickFocus.PreviousSeparator)\n\t\t},\n\t);\n}\n\n//#endregion\n\n//#region Accept\n\nregisterQuickPickCommandAndKeybindingRule(\n\t{\n\t\tid: 'quickInput.acceptInBackground',\n\t\t// If we are in the quick pick but the input box is not focused or our cursor is at the end of the input box\n\t\twhen: ContextKeyExpr.and(\n\t\t\tinQuickInputContext,\n\t\t\tContextKeyExpr.equals(quickInputTypeContextKeyValue, QuickInputType.QuickPick),\n\t\t\tContextKeyExpr.or(InputFocusedContext.negate(), endOfQuickInputBoxContext)\n\t\t),\n\t\tprimary: KeyCode.RightArrow,\n\t\t// Need a little extra weight to ensure this keybinding is preferred over the default cmd+alt+right arrow keybinding\n\t\t// https://github.com/microsoft/vscode/blob/1451e4fbbbf074a4355cc537c35b547b80ce1c52/src/vs/workbench/browser/parts/editor/editorActions.ts#L1178-L1195\n\t\tweight: KeybindingWeight.WorkbenchContrib + 50,\n\t\thandler: (accessor) => {\n\t\t\tconst currentQuickPick = accessor.get(IQuickInputService).currentQuickInput as IQuickPick<any>;\n\t\t\tcurrentQuickPick?.accept(true);\n\t\t},\n\t},\n\t{ withAltMod: true, withCtrlMod: true, withCmdMod: true }\n);\n\n//#region Toggle Hover\n\nregisterQuickPickCommandAndKeybindingRule(\n\t{\n\t\tid: 'quickInput.toggleHover',\n\t\tprimary: ctrlKeyMod | KeyCode.Space,\n\t\thandler: accessor => {\n\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\tquickInputService.toggleHover();\n\t\t}\n\t}\n);\n\n//#endregion\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4145, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/quickInputTreeRenderer.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/tree/quickInputTreeRenderer.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/vs/platform/quickinput/browser/tree/quickInputTreeRenderer.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cssJs from '../../../../base/browser/cssValue.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IManagedHoverTooltipMarkdownString } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { TriStateCheckbox } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { ITreeElementRenderDetails, ITreeNode, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { defaultCheckboxStyles } from '../../../theme/browser/defaultStyles.js';\nimport { isDark } from '../../../theme/common/theme.js';\nimport { escape } from '../../../../base/common/strings.js';\nimport { IThemeService } from '../../../theme/common/themeService.js';\nimport { IQuickTreeCheckboxEvent, IQuickTreeItem, IQuickTreeItemButtonEvent } from '../../common/quickInput.js';\nimport { quickInputButtonToAction } from '../quickInputUtils.js';\nimport { IQuickTreeFilterData } from './quickInputTree.js';\n\nconst $ = dom.$;\n\nexport interface IQuickTreeTemplateData {\n\tentry: HTMLElement;\n\tcheckbox: TriStateCheckbox;\n\ticon: HTMLElement;\n\tlabel: IconLabel;\n\tactionBar: ActionBar;\n\ttoDisposeElement: DisposableStore;\n\ttoDisposeTemplate: DisposableStore;\n}\n\nexport class QuickInputTreeRenderer<T extends IQuickTreeItem> extends Disposable implements ITreeRenderer<T, IQuickTreeFilterData, IQuickTreeTemplateData> {\n\tstatic readonly ID = 'quickInputTreeElement';\n\ttemplateId = QuickInputTreeRenderer.ID;\n\n\tconstructor(\n\t\tprivate readonly _hoverDelegate: IHoverDelegate | undefined,\n\t\tprivate readonly _buttonTriggeredEmitter: Emitter<IQuickTreeItemButtonEvent<T>>,\n\t\tprivate readonly onCheckedEvent: Event<IQuickTreeCheckboxEvent<T>>,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(container: HTMLElement): IQuickTreeTemplateData {\n\t\tconst store = new DisposableStore();\n\n\t\t// Main entry container\n\t\tconst entry = dom.append(container, $('.quick-input-tree-entry'));\n\n\t\tconst checkbox = store.add(new TriStateCheckbox('', false, { ...defaultCheckboxStyles, size: 15 }));\n\t\tentry.appendChild(checkbox.domNode);\n\n\t\tconst checkboxLabel = dom.append(entry, $('label.quick-input-tree-label'));\n\t\tconst rows = dom.append(checkboxLabel, $('.quick-input-tree-rows'));\n\t\tconst row1 = dom.append(rows, $('.quick-input-tree-row'));\n\t\tconst icon = dom.prepend(row1, $('.quick-input-tree-icon'));\n\t\tconst label = store.add(new IconLabel(row1, {\n\t\t\tsupportHighlights: true,\n\t\t\tsupportDescriptionHighlights: true,\n\t\t\tsupportIcons: true,\n\t\t\thoverDelegate: this._hoverDelegate\n\t\t}));\n\t\tconst actionBar = store.add(new ActionBar(entry, this._hoverDelegate ? { hoverDelegate: this._hoverDelegate } : undefined));\n\t\tactionBar.domNode.classList.add('quick-input-tree-entry-action-bar');\n\t\treturn {\n\t\t\ttoDisposeTemplate: store,\n\t\t\tentry,\n\t\t\tcheckbox,\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tactionBar,\n\t\t\ttoDisposeElement: new DisposableStore(),\n\t\t};\n\t}\n\trenderElement(node: ITreeNode<T, IQuickTreeFilterData>, index: number, templateData: IQuickTreeTemplateData, _details?: ITreeElementRenderDetails): void {\n\t\tconst store = templateData.toDisposeElement;\n\t\tconst quickTreeItem = node.element;\n\n\t\t// Checkbox\n\t\ttemplateData.checkbox.domNode.style.display = '';\n\t\ttemplateData.checkbox.checked = quickTreeItem.checked ?? false;\n\t\tstore.add(Event.filter(this.onCheckedEvent, e => e.item === quickTreeItem)(e => templateData.checkbox.checked = e.checked));\n\t\tif (quickTreeItem.disabled) {\n\t\t\ttemplateData.checkbox.disable();\n\t\t}\n\n\t\t// Icon\n\t\tif (quickTreeItem.iconPath) {\n\t\t\tconst icon = isDark(this._themeService.getColorTheme().type) ? quickTreeItem.iconPath.dark : (quickTreeItem.iconPath.light ?? quickTreeItem.iconPath.dark);\n\t\t\tconst iconUrl = URI.revive(icon);\n\t\t\ttemplateData.icon.className = 'quick-input-tree-icon';\n\t\t\ttemplateData.icon.style.backgroundImage = cssJs.asCSSUrl(iconUrl);\n\t\t} else {\n\t\t\ttemplateData.icon.style.backgroundImage = '';\n\t\t\ttemplateData.icon.className = quickTreeItem.iconClass ? `quick-input-tree-icon ${quickTreeItem.iconClass}` : '';\n\t\t}\n\n\t\tconst { labelHighlights: matches, descriptionHighlights: descriptionMatches } = node.filterData || {};\n\n\t\t// Label and Description\n\t\tlet descriptionTitle: IManagedHoverTooltipMarkdownString | undefined;\n\t\t// NOTE: If we bring back quick tool tips, we need to check that here like we do in the QuickInputListRenderer\n\t\tif (quickTreeItem.description) {\n\t\t\tdescriptionTitle = {\n\t\t\t\tmarkdown: {\n\t\t\t\t\tvalue: escape(quickTreeItem.description),\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t},\n\t\t\t\tmarkdownNotSupportedFallback: quickTreeItem.description\n\t\t\t};\n\t\t}\n\t\ttemplateData.label.setLabel(\n\t\t\tquickTreeItem.label,\n\t\t\tquickTreeItem.description,\n\t\t\t{\n\t\t\t\tmatches,\n\t\t\t\tdescriptionMatches,\n\t\t\t\textraClasses: quickTreeItem.iconClasses,\n\t\t\t\titalic: quickTreeItem.italic,\n\t\t\t\tstrikethrough: quickTreeItem.strikethrough,\n\t\t\t\tlabelEscapeNewLines: true,\n\t\t\t\tdescriptionTitle\n\t\t\t}\n\t\t);\n\n\t\t// Action Bar\n\t\tconst buttons = quickTreeItem.buttons;\n\t\tif (buttons && buttons.length) {\n\t\t\ttemplateData.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(\n\t\t\t\tbutton,\n\t\t\t\t`tree-${index}`,\n\t\t\t\t() => this._buttonTriggeredEmitter.fire({ item: quickTreeItem, button })\n\t\t\t)), { icon: true, label: false });\n\t\t\ttemplateData.entry.classList.add('has-actions');\n\t\t} else {\n\t\t\ttemplateData.entry.classList.remove('has-actions');\n\t\t}\n\t}\n\tdisposeElement(_element: ITreeNode<T, IQuickTreeFilterData>, _index: number, templateData: IQuickTreeTemplateData, _details?: ITreeElementRenderDetails): void {\n\t\ttemplateData.toDisposeElement.clear();\n\t\ttemplateData.actionBar.clear();\n\t}\n\tdisposeTemplate(templateData: IQuickTreeTemplateData): void {\n\t\ttemplateData.toDisposeElement.dispose();\n\t\ttemplateData.toDisposeTemplate.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cssJs from '../../../../base/browser/cssValue.js';\nimport * as dom from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { IManagedHoverTooltipMarkdownString } from '../../../../base/browser/ui/hover/hover.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\nimport { TriStateCheckbox } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { ITreeElementRenderDetails, ITreeNode, ITreeRenderer } from '../../../../base/browser/ui/tree/tree.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { defaultCheckboxStyles } from '../../../theme/browser/defaultStyles.js';\nimport { isDark } from '../../../theme/common/theme.js';\nimport { escape } from '../../../../base/common/strings.js';\nimport { IThemeService } from '../../../theme/common/themeService.js';\nimport { IQuickTreeCheckboxEvent, IQuickTreeItem, IQuickTreeItemButtonEvent } from '../../common/quickInput.js';\nimport { quickInputButtonToAction } from '../quickInputUtils.js';\nimport { IQuickTreeFilterData } from './quickInputTree.js';\n\nconst $ = dom.$;\n\nexport interface IQuickTreeTemplateData {\n\tentry: HTMLElement;\n\tcheckbox: TriStateCheckbox;\n\ticon: HTMLElement;\n\tlabel: IconLabel;\n\tactionBar: ActionBar;\n\ttoDisposeElement: DisposableStore;\n\ttoDisposeTemplate: DisposableStore;\n}\n\nexport class QuickInputTreeRenderer<T extends IQuickTreeItem> extends Disposable implements ITreeRenderer<T, IQuickTreeFilterData, IQuickTreeTemplateData> {\n\tstatic readonly ID = 'quickInputTreeElement';\n\ttemplateId = QuickInputTreeRenderer.ID;\n\n\tconstructor(\n\t\tprivate readonly _hoverDelegate: IHoverDelegate | undefined,\n\t\tprivate readonly _buttonTriggeredEmitter: Emitter<IQuickTreeItemButtonEvent<T>>,\n\t\tprivate readonly onCheckedEvent: Event<IQuickTreeCheckboxEvent<T>>,\n\t\t@IThemeService private readonly _themeService: IThemeService,\n\t) {\n\t\tsuper();\n\t}\n\n\trenderTemplate(container: HTMLElement): IQuickTreeTemplateData {\n\t\tconst store = new DisposableStore();\n\n\t\t// Main entry container\n\t\tconst entry = dom.append(container, $('.quick-input-tree-entry'));\n\n\t\tconst checkbox = store.add(new TriStateCheckbox('', false, { ...defaultCheckboxStyles, size: 15 }));\n\t\tentry.appendChild(checkbox.domNode);\n\n\t\tconst checkboxLabel = dom.append(entry, $('label.quick-input-tree-label'));\n\t\tconst rows = dom.append(checkboxLabel, $('.quick-input-tree-rows'));\n\t\tconst row1 = dom.append(rows, $('.quick-input-tree-row'));\n\t\tconst icon = dom.prepend(row1, $('.quick-input-tree-icon'));\n\t\tconst label = store.add(new IconLabel(row1, {\n\t\t\tsupportHighlights: true,\n\t\t\tsupportDescriptionHighlights: true,\n\t\t\tsupportIcons: true,\n\t\t\thoverDelegate: this._hoverDelegate\n\t\t}));\n\t\tconst actionBar = store.add(new ActionBar(entry, this._hoverDelegate ? { hoverDelegate: this._hoverDelegate } : undefined));\n\t\tactionBar.domNode.classList.add('quick-input-tree-entry-action-bar');\n\t\treturn {\n\t\t\ttoDisposeTemplate: store,\n\t\t\tentry,\n\t\t\tcheckbox,\n\t\t\ticon,\n\t\t\tlabel,\n\t\t\tactionBar,\n\t\t\ttoDisposeElement: new DisposableStore(),\n\t\t};\n\t}\n\trenderElement(node: ITreeNode<T, IQuickTreeFilterData>, index: number, templateData: IQuickTreeTemplateData, _details?: ITreeElementRenderDetails): void {\n\t\tconst store = templateData.toDisposeElement;\n\t\tconst quickTreeItem = node.element;\n\n\t\t// Checkbox\n\t\ttemplateData.checkbox.domNode.style.display = '';\n\t\ttemplateData.checkbox.checked = quickTreeItem.checked ?? false;\n\t\tstore.add(Event.filter(this.onCheckedEvent, e => e.item === quickTreeItem)(e => templateData.checkbox.checked = e.checked));\n\t\tif (quickTreeItem.disabled) {\n\t\t\ttemplateData.checkbox.disable();\n\t\t}\n\n\t\t// Icon\n\t\tif (quickTreeItem.iconPath) {\n\t\t\tconst icon = isDark(this._themeService.getColorTheme().type) ? quickTreeItem.iconPath.dark : (quickTreeItem.iconPath.light ?? quickTreeItem.iconPath.dark);\n\t\t\tconst iconUrl = URI.revive(icon);\n\t\t\ttemplateData.icon.className = 'quick-input-tree-icon';\n\t\t\ttemplateData.icon.style.backgroundImage = cssJs.asCSSUrl(iconUrl);\n\t\t} else {\n\t\t\ttemplateData.icon.style.backgroundImage = '';\n\t\t\ttemplateData.icon.className = quickTreeItem.iconClass ? `quick-input-tree-icon ${quickTreeItem.iconClass}` : '';\n\t\t}\n\n\t\tconst { labelHighlights: matches, descriptionHighlights: descriptionMatches } = node.filterData || {};\n\n\t\t// Label and Description\n\t\tlet descriptionTitle: IManagedHoverTooltipMarkdownString | undefined;\n\t\t// NOTE: If we bring back quick tool tips, we need to check that here like we do in the QuickInputListRenderer\n\t\tif (quickTreeItem.description) {\n\t\t\tdescriptionTitle = {\n\t\t\t\tmarkdown: {\n\t\t\t\t\tvalue: escape(quickTreeItem.description),\n\t\t\t\t\tsupportThemeIcons: true\n\t\t\t\t},\n\t\t\t\tmarkdownNotSupportedFallback: quickTreeItem.description\n\t\t\t};\n\t\t}\n\t\ttemplateData.label.setLabel(\n\t\t\tquickTreeItem.label,\n\t\t\tquickTreeItem.description,\n\t\t\t{\n\t\t\t\tmatches,\n\t\t\t\tdescriptionMatches,\n\t\t\t\textraClasses: quickTreeItem.iconClasses,\n\t\t\t\titalic: quickTreeItem.italic,\n\t\t\t\tstrikethrough: quickTreeItem.strikethrough,\n\t\t\t\tlabelEscapeNewLines: true,\n\t\t\t\tdescriptionTitle\n\t\t\t}\n\t\t);\n\n\t\t// Action Bar\n\t\tconst buttons = quickTreeItem.buttons;\n\t\tif (buttons && buttons.length) {\n\t\t\ttemplateData.actionBar.push(buttons.map((button, index) => quickInputButtonToAction(\n\t\t\t\tbutton,\n\t\t\t\t`tree-${index}`,\n\t\t\t\t() => this._buttonTriggeredEmitter.fire({ item: quickTreeItem, button })\n\t\t\t)), { icon: true, label: false });\n\t\t\ttemplateData.entry.classList.add('has-actions');\n\t\t} else {\n\t\t\ttemplateData.entry.classList.remove('has-actions');\n\t\t}\n\t}\n\tdisposeElement(_element: ITreeNode<T, IQuickTreeFilterData>, _index: number, templateData: IQuickTreeTemplateData, _details?: ITreeElementRenderDetails): void {\n\t\ttemplateData.toDisposeElement.clear();\n\t\ttemplateData.actionBar.clear();\n\t}\n\tdisposeTemplate(templateData: IQuickTreeTemplateData): void {\n\t\ttemplateData.toDisposeElement.dispose();\n\t\ttemplateData.toDisposeTemplate.dispose();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4314, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/quickInputDelegate.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/tree/quickInputDelegate.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/vs/platform/quickinput/browser/tree/quickInputDelegate.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IQuickTreeItem } from '../../common/quickInput.js';\nimport { QuickInputTreeRenderer } from './quickInputTreeRenderer.js';\n\n/**\n * Delegate for QuickInputTree that provides height and template information.\n */\nexport class QuickInputTreeDelegate<T extends IQuickTreeItem> implements IListVirtualDelegate<T> {\n\tgetHeight(_element: T): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(_element: T): string {\n\t\treturn QuickInputTreeRenderer.ID;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IListVirtualDelegate } from '../../../../base/browser/ui/list/list.js';\nimport { IQuickTreeItem } from '../../common/quickInput.js';\nimport { QuickInputTreeRenderer } from './quickInputTreeRenderer.js';\n\n/**\n * Delegate for QuickInputTree that provides height and template information.\n */\nexport class QuickInputTreeDelegate<T extends IQuickTreeItem> implements IListVirtualDelegate<T> {\n\tgetHeight(_element: T): number {\n\t\treturn 22;\n\t}\n\n\tgetTemplateId(_element: T): string {\n\t\treturn QuickInputTreeRenderer.ID;\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAIhG,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;;AAK/D,MAAO,sBAAsB;IAClC,SAAS,CAAC,QAAW,EAAA;QACpB,OAAO,EAAE,CAAC;IACX,CAAC;IAED,aAAa,CAAC,QAAW,EAAA;QACxB,OAAO,8OAAsB,CAAC,EAAE,CAAC;IAClC,CAAC;CACD","debugId":null}},
    {"offset": {"line": 4335, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/quickInputTree.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/tree/quickInputTree.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/vs/platform/quickinput/browser/tree/quickInputTree.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMatch } from '../../../../base/common/filters.js';\nimport { IQuickTreeItem } from '../../common/quickInput.js';\nimport { IObjectTreeElement, ITreeNode } from '../../../../base/browser/ui/tree/tree.js';\n\nexport interface IQuickTreeFilterData {\n\treadonly labelHighlights?: IMatch[];\n\treadonly descriptionHighlights?: IMatch[];\n}\n\nexport function getParentNodeState(parentChildren: ITreeNode<IQuickTreeItem | null, IQuickTreeFilterData>[] | IObjectTreeElement<IQuickTreeItem>[]): boolean | 'partial' {\n\tlet containsChecks = false;\n\tlet containsUnchecks = false;\n\tlet containsPartial = false;\n\n\tfor (const element of parentChildren) {\n\t\tswitch (element.element?.checked) {\n\t\t\tcase 'partial':\n\t\t\t\tcontainsPartial = true;\n\t\t\t\tbreak;\n\t\t\tcase true:\n\t\t\t\tcontainsChecks = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontainsUnchecks = true;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (containsChecks && containsUnchecks && containsPartial) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst newState = containsUnchecks\n\t\t? containsPartial\n\t\t\t? 'partial'\n\t\t\t: containsChecks\n\t\t\t\t? 'partial'\n\t\t\t\t: false\n\t\t: containsPartial\n\t\t\t? 'partial'\n\t\t\t: containsChecks;\n\treturn newState;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMatch } from '../../../../base/common/filters.js';\nimport { IQuickTreeItem } from '../../common/quickInput.js';\nimport { IObjectTreeElement, ITreeNode } from '../../../../base/browser/ui/tree/tree.js';\n\nexport interface IQuickTreeFilterData {\n\treadonly labelHighlights?: IMatch[];\n\treadonly descriptionHighlights?: IMatch[];\n}\n\nexport function getParentNodeState(parentChildren: ITreeNode<IQuickTreeItem | null, IQuickTreeFilterData>[] | IObjectTreeElement<IQuickTreeItem>[]): boolean | 'partial' {\n\tlet containsChecks = false;\n\tlet containsUnchecks = false;\n\tlet containsPartial = false;\n\n\tfor (const element of parentChildren) {\n\t\tswitch (element.element?.checked) {\n\t\t\tcase 'partial':\n\t\t\t\tcontainsPartial = true;\n\t\t\t\tbreak;\n\t\t\tcase true:\n\t\t\t\tcontainsChecks = true;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontainsUnchecks = true;\n\t\t\t\tbreak;\n\t\t}\n\t\tif (containsChecks && containsUnchecks && containsPartial) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tconst newState = containsUnchecks\n\t\t? containsPartial\n\t\t\t? 'partial'\n\t\t\t: containsChecks\n\t\t\t\t? 'partial'\n\t\t\t\t: false\n\t\t: containsPartial\n\t\t\t? 'partial'\n\t\t\t: containsChecks;\n\treturn newState;\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAW1F,SAAU,kBAAkB,CAAC,cAA+G;IACjJ,IAAI,cAAc,GAAG,KAAK,CAAC;IAC3B,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,eAAe,GAAG,KAAK,CAAC;IAE5B,KAAK,MAAM,OAAO,IAAI,cAAc,CAAE,CAAC;QACtC,OAAQ,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC;YAClC,KAAK,SAAS;gBACb,eAAe,GAAG,IAAI,CAAC;gBACvB,MAAM;YACP,KAAK,IAAI;gBACR,cAAc,GAAG,IAAI,CAAC;gBACtB,MAAM;YACP;gBACC,gBAAgB,GAAG,IAAI,CAAC;gBACxB,MAAM;QACR,CAAC;QACD,IAAI,cAAc,IAAI,gBAAgB,IAAI,eAAe,EAAE,CAAC;YAC3D,MAAM;QACP,CAAC;IACF,CAAC;IACD,MAAM,QAAQ,GAAG,gBAAgB,GAC9B,eAAe,GACd,SAAS,GACT,cAAc,GACb,SAAS,GACT,KAAK,GACP,eAAe,GACd,SAAS,GACT,cAAc,CAAC;IACnB,OAAO,QAAQ,CAAC;AACjB,CAAC","debugId":null}},
    {"offset": {"line": 4369, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/quickInputTreeAccessibilityProvider.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/vs/platform/quickinput/browser/tree/quickInputTreeAccessibilityProvider.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AriaRole } from '../../../../base/browser/ui/aria/aria.js';\nimport { IListAccessibilityProvider } from '../../../../base/browser/ui/list/listWidget.js';\nimport { Event, IValueWithChangeEvent } from '../../../../base/common/event.js';\nimport { getCodiconAriaLabel } from '../../../../base/common/iconLabels.js';\nimport { localize } from '../../../../nls.js';\nimport { IQuickTreeCheckboxEvent, IQuickTreeItem } from '../../common/quickInput.js';\n/**\n * Accessibility provider for QuickTree.\n */\nexport class QuickTreeAccessibilityProvider<T extends IQuickTreeItem> implements IListAccessibilityProvider<T> {\n\tconstructor(private readonly onCheckedEvent: Event<IQuickTreeCheckboxEvent<T>>) { }\n\n\tgetWidgetAriaLabel(): string {\n\t\treturn localize('quickTree', \"Quick Tree\");\n\t}\n\n\tgetAriaLabel(element: T): string {\n\t\treturn element.ariaLabel || [element.label, element.description]\n\t\t\t.map(s => getCodiconAriaLabel(s))\n\t\t\t.filter(s => !!s)\n\t\t\t.join(', ');\n\t}\n\n\tgetWidgetRole(): AriaRole {\n\t\treturn 'tree';\n\t}\n\n\tgetRole(_element: T): AriaRole {\n\t\treturn 'checkbox';\n\t}\n\n\tisChecked(element: T): IValueWithChangeEvent<boolean> | undefined {\n\t\treturn {\n\t\t\tget value() { return element.checked === true; },\n\t\t\tonDidChange: e => Event.filter(this.onCheckedEvent, e => e.item === element)(_ => e()),\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAIhG,OAAO,EAAE,KAAK,EAAyB,MAAM,kCAAkC,CAAC;AAChF,OAAO,EAAE,mBAAmB,EAAE,MAAM,uCAAuC,CAAC;AAC5E,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;;;;AAKxC,MAAO,8BAA8B;IAC1C,YAA6B,cAAiD,CAAA;QAAjD,IAAA,CAAA,cAAc,GAAd,cAAc,CAAmC;IAAI,CAAC;IAEnF,kBAAkB,GAAA;QACjB,WAAO,gLAAQ,EAAC,IAAW,EAAE,YAAY,CAAC,CAAC;IAC5C,CAAC;IAED,YAAY,CAAC,OAAU,EAAA;QACtB,OAAO,OAAO,CAAC,SAAS,IAAI;YAAC,OAAO,CAAC,KAAK;YAAE,OAAO,CAAC,WAAW;SAAC,CAC9D,GAAG,EAAC,CAAC,CAAC,EAAE,IAAC,oMAAmB,EAAC,CAAC,CAAC,CAAC,CAChC,MAAM,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,CAAC,CAAC,CAChB,IAAI,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;IAED,aAAa,GAAA;QACZ,OAAO,MAAM,CAAC;IACf,CAAC;IAED,OAAO,CAAC,QAAW,EAAA;QAClB,OAAO,UAAU,CAAC;IACnB,CAAC;IAED,SAAS,CAAC,OAAU,EAAA;QACnB,OAAO;YACN,IAAI,KAAK,IAAA;gBAAK,OAAO,OAAO,CAAC,OAAO,KAAK,IAAI,CAAC;YAAC,CAAC;YAChD,WAAW,GAAE,CAAC,CAAC,EAAE,AAAC,iLAAK,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,EAAE,CAAC;SACtF,CAAC;IACH,CAAC;CACD","debugId":null}},
    {"offset": {"line": 4414, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/quickInputTreeFilter.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/tree/quickInputTreeFilter.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/vs/platform/quickinput/browser/tree/quickInputTreeFilter.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITreeFilter, ITreeFilterDataResult, TreeVisibility } from '../../../../base/browser/ui/tree/tree.js';\nimport { matchesFuzzyIconAware, parseLabelWithIcons } from '../../../../base/common/iconLabels.js';\nimport { IQuickTreeItem } from '../../common/quickInput.js';\nimport { IQuickTreeFilterData } from './quickInputTree.js';\n\nexport class QuickInputTreeFilter implements ITreeFilter<IQuickTreeItem, IQuickTreeFilterData> {\n\tfilterValue: string = '';\n\tmatchOnLabel: boolean = true;\n\tmatchOnDescription: boolean = false;\n\n\tfilter(element: IQuickTreeItem, parentVisibility: TreeVisibility): ITreeFilterDataResult<IQuickTreeFilterData> {\n\t\tif (!this.filterValue || !(this.matchOnLabel || this.matchOnDescription)) {\n\t\t\treturn element.children\n\t\t\t\t? { visibility: TreeVisibility.Recurse, data: {} }\n\t\t\t\t: { visibility: TreeVisibility.Visible, data: {} };\n\t\t}\n\n\t\tconst labelHighlights = this.matchOnLabel ? matchesFuzzyIconAware(this.filterValue, parseLabelWithIcons(element.label)) ?? undefined : undefined;\n\t\tconst descriptionHighlights = this.matchOnDescription ? matchesFuzzyIconAware(this.filterValue, parseLabelWithIcons(element.description || '')) ?? undefined : undefined;\n\n\t\tconst visibility = parentVisibility === TreeVisibility.Visible\n\t\t\t// Parent is visible because it had matches, so we show all children\n\t\t\t? TreeVisibility.Visible\n\t\t\t// This would only happen on Parent is recurse so...\n\t\t\t: (labelHighlights || descriptionHighlights)\n\t\t\t\t// If we have any highlights, we are visible\n\t\t\t\t? TreeVisibility.Visible\n\t\t\t\t// Otherwise, we defer to the children or if no children, we are hidden\n\t\t\t\t: element.children\n\t\t\t\t\t? TreeVisibility.Recurse\n\t\t\t\t\t: TreeVisibility.Hidden;\n\n\t\treturn {\n\t\t\tvisibility,\n\t\t\tdata: {\n\t\t\t\tlabelHighlights,\n\t\t\t\tdescriptionHighlights\n\t\t\t}\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ITreeFilter, ITreeFilterDataResult, TreeVisibility } from '../../../../base/browser/ui/tree/tree.js';\nimport { matchesFuzzyIconAware, parseLabelWithIcons } from '../../../../base/common/iconLabels.js';\nimport { IQuickTreeItem } from '../../common/quickInput.js';\nimport { IQuickTreeFilterData } from './quickInputTree.js';\n\nexport class QuickInputTreeFilter implements ITreeFilter<IQuickTreeItem, IQuickTreeFilterData> {\n\tfilterValue: string = '';\n\tmatchOnLabel: boolean = true;\n\tmatchOnDescription: boolean = false;\n\n\tfilter(element: IQuickTreeItem, parentVisibility: TreeVisibility): ITreeFilterDataResult<IQuickTreeFilterData> {\n\t\tif (!this.filterValue || !(this.matchOnLabel || this.matchOnDescription)) {\n\t\t\treturn element.children\n\t\t\t\t? { visibility: TreeVisibility.Recurse, data: {} }\n\t\t\t\t: { visibility: TreeVisibility.Visible, data: {} };\n\t\t}\n\n\t\tconst labelHighlights = this.matchOnLabel ? matchesFuzzyIconAware(this.filterValue, parseLabelWithIcons(element.label)) ?? undefined : undefined;\n\t\tconst descriptionHighlights = this.matchOnDescription ? matchesFuzzyIconAware(this.filterValue, parseLabelWithIcons(element.description || '')) ?? undefined : undefined;\n\n\t\tconst visibility = parentVisibility === TreeVisibility.Visible\n\t\t\t// Parent is visible because it had matches, so we show all children\n\t\t\t? TreeVisibility.Visible\n\t\t\t// This would only happen on Parent is recurse so...\n\t\t\t: (labelHighlights || descriptionHighlights)\n\t\t\t\t// If we have any highlights, we are visible\n\t\t\t\t? TreeVisibility.Visible\n\t\t\t\t// Otherwise, we defer to the children or if no children, we are hidden\n\t\t\t\t: element.children\n\t\t\t\t\t? TreeVisibility.Recurse\n\t\t\t\t\t: TreeVisibility.Hidden;\n\n\t\treturn {\n\t\t\tvisibility,\n\t\t\tdata: {\n\t\t\t\tlabelHighlights,\n\t\t\t\tdescriptionHighlights\n\t\t\t}\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAGhG,OAAO,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,MAAM,uCAAuC,CAAC;;AAI7F,MAAO,oBAAoB;IAAjC,aAAA;QACC,IAAA,CAAA,WAAW,GAAW,EAAE,CAAC;QACzB,IAAA,CAAA,YAAY,GAAY,IAAI,CAAC;QAC7B,IAAA,CAAA,kBAAkB,GAAY,KAAK,CAAC;IAgCrC,CAAC;IA9BA,MAAM,CAAC,OAAuB,EAAE,gBAAgC,EAAA;QAC/D,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;YAC1E,OAAO,OAAO,CAAC,QAAQ,GACpB;gBAAE,UAAU,EAAA,EAAA,0BAAA,EAAwB;gBAAE,IAAI,EAAE,CAAA,CAAE;YAAA,CAAE,GAChD;gBAAE,UAAU,EAAA,EAAA,0BAAA,EAAwB;gBAAE,IAAI,EAAE,CAAA,CAAE;YAAA,CAAE,CAAC;QACrD,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,KAAC,sMAAqB,EAAC,IAAI,CAAC,WAAW,MAAE,oMAAmB,EAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;QACjJ,MAAM,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAC,sMAAqB,EAAC,IAAI,CAAC,WAAW,MAAE,oMAAmB,EAAC,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;QAEzK,MAAM,UAAU,GAAG,gBAAgB,KAAA,EAAA,0BAAA,EAA2B,IAE5D,EAAA,0BAAA,MAEC,AAAC,eAAe,IAAI,qBAAqB,CAAC,EAE1C,EAAA,0BAAA,MAEC,OAAO,CAAC,QAAQ,GAChB,EAAA,0BAAA,MACA,EAAA,yBAAA,EAAsB,CAAC;QAE3B,OAAO;YACN,UAAU;YACV,IAAI,EAAE;gBACL,eAAe;gBACf,qBAAqB;aACrB;SACD,CAAC;IACH,CAAC;CACD","debugId":null}},
    {"offset": {"line": 4455, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/quickInputTreeController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/tree/quickInputTreeController.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/tree/vs/platform/quickinput/browser/tree/quickInputTreeController.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { RenderIndentGuides } from '../../../../base/browser/ui/tree/abstractTree.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../../list/browser/listService.js';\nimport { IQuickTreeCheckboxEvent, IQuickTreeItem, IQuickTreeItemButtonEvent } from '../../common/quickInput.js';\nimport { QuickInputTreeDelegate } from './quickInputDelegate.js';\nimport { getParentNodeState, IQuickTreeFilterData } from './quickInputTree.js';\nimport { QuickTreeAccessibilityProvider } from './quickInputTreeAccessibilityProvider.js';\nimport { QuickInputTreeFilter } from './quickInputTreeFilter.js';\nimport { QuickInputTreeRenderer } from './quickInputTreeRenderer.js';\n\nconst $ = dom.$;\n\nexport class QuickInputTreeController extends Disposable {\n\tprivate readonly _renderer: QuickInputTreeRenderer<IQuickTreeItem>;\n\tprivate readonly _filter: QuickInputTreeFilter;\n\tprivate readonly _tree: WorkbenchObjectTree<IQuickTreeItem, IQuickTreeFilterData>;\n\n\tprivate readonly _onDidTriggerButton = this._register(new Emitter<IQuickTreeItemButtonEvent<IQuickTreeItem>>());\n\n\tprivate readonly _onDidChangeCheckboxState = this._register(new Emitter<IQuickTreeCheckboxEvent<IQuickTreeItem>>());\n\treadonly onDidChangeCheckboxState = this._onDidChangeCheckboxState.event;\n\n\tprivate readonly _onDidCheckedLeafItemsChange = this._register(new Emitter<ReadonlyArray<IQuickTreeItem>>);\n\n\tprivate readonly _onLeave = new Emitter<void>();\n\t/**\n\t * Event that is fired when the tree would no longer have focus.\n\t*/\n\treadonly onLeave: Event<void> = this._onLeave.event;\n\n\tprivate readonly _container: HTMLElement;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\thoverDelegate: IHoverDelegate | undefined,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._container = dom.append(container, $('.quick-input-tree'));\n\t\tthis._renderer = this._register(this.instantiationService.createInstance(QuickInputTreeRenderer, hoverDelegate, this._onDidTriggerButton, this.onDidChangeCheckboxState));\n\t\tthis._filter = this.instantiationService.createInstance(QuickInputTreeFilter);\n\t\tthis._tree = this._register(this.instantiationService.createInstance(\n\t\t\tWorkbenchObjectTree<IQuickTreeItem, IQuickTreeFilterData>,\n\t\t\t'QuickInputTree',\n\t\t\tthis._container,\n\t\t\tnew QuickInputTreeDelegate(),\n\t\t\t[this._renderer],\n\t\t\t{\n\t\t\t\taccessibilityProvider: new QuickTreeAccessibilityProvider(this.onDidChangeCheckboxState),\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tfindWidgetEnabled: false,\n\t\t\t\talwaysConsumeMouseWheel: true,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\texpandOnDoubleClick: true,\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tdisableExpandOnSpacebar: true,\n\t\t\t\tsorter: {\n\t\t\t\t\tcompare: (a: IQuickTreeItem, b: IQuickTreeItem): number => {\n\t\t\t\t\t\tif (a.label < b.label) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t} else if (a.label > b.label) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// use description to break ties\n\t\t\t\t\t\tif (a.description && b.description) {\n\t\t\t\t\t\t\tif (a.description < b.description) {\n\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\t} else if (a.description > b.description) {\n\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (a.description) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t} else if (b.description) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilter: this._filter\n\t\t\t}\n\t\t));\n\t\tthis.registerOnOpenListener();\n\t}\n\n\tget tree(): WorkbenchObjectTree<IQuickTreeItem, IQuickTreeFilterData> {\n\t\treturn this._tree;\n\t}\n\n\tget displayed() {\n\t\treturn this._container.style.display !== 'none';\n\t}\n\n\tset displayed(value: boolean) {\n\t\tthis._container.style.display = value ? '' : 'none';\n\t}\n\n\tgetActiveDescendant() {\n\t\treturn this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n\t}\n\n\tlayout(maxHeight?: number): void {\n\t\tthis._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n\t\t\t// Make sure height aligns with list item heights\n\t\t\tMath.floor(maxHeight / 44) * 44\n\t\t\t// Add some extra height so that it's clear there's more to scroll\n\t\t\t+ 6\n\t\t\t}px` : '';\n\t\tthis._tree.layout();\n\t}\n\n\tregisterOnOpenListener() {\n\t\tthis._register(this._tree.onDidOpen(e => {\n\t\t\tconst item = e.element;\n\t\t\tif (!item) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (item.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newState = item.checked !== true;\n\t\t\tif ((item.checked ?? false) === newState) {\n\t\t\t\treturn; // No change\n\t\t\t}\n\n\t\t\t// Handle checked item\n\t\t\titem.checked = newState;\n\t\t\tthis._tree.rerender(item);\n\n\t\t\t// Handle children of the checked item\n\t\t\tconst updateSet = new Set<IQuickTreeItem>();\n\t\t\tconst toUpdate = [...this._tree.getNode(item).children];\n\t\t\twhile (toUpdate.length) {\n\t\t\t\tconst pop = toUpdate.shift();\n\t\t\t\tif (pop?.element && !updateSet.has(pop.element)) {\n\t\t\t\t\tupdateSet.add(pop.element);\n\t\t\t\t\tif ((pop.element.checked ?? false) !== item.checked) {\n\t\t\t\t\t\tpop.element.checked = item.checked;\n\t\t\t\t\t\tthis._tree.rerender(pop.element);\n\t\t\t\t\t}\n\t\t\t\t\ttoUpdate.push(...pop.children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle parents of the checked item\n\t\t\tlet parent = this._tree.getParentElement(item);\n\t\t\twhile (parent) {\n\t\t\t\tconst parentChildren = [...this._tree.getNode(parent).children];\n\t\t\t\tconst newState = getParentNodeState(parentChildren);\n\n\t\t\t\tif ((parent.checked ?? false) !== newState) {\n\t\t\t\t\tparent.checked = newState;\n\t\t\t\t\tthis._tree.rerender(parent);\n\t\t\t\t}\n\t\t\t\tparent = this._tree.getParentElement(parent);\n\t\t\t}\n\n\t\t\tthis._onDidChangeCheckboxState.fire({\n\t\t\t\titem,\n\t\t\t\tchecked: item.checked ?? false\n\t\t\t});\n\t\t\tthis._onDidCheckedLeafItemsChange.fire(this.getCheckedLeafItems());\n\t\t}));\n\t}\n\n\tgetCheckedLeafItems() {\n\t\tconst lookedAt = new Set<IQuickTreeItem>();\n\t\tconst toLookAt = [...this._tree.getNode().children];\n\t\tconst checkedItems = new Array<IQuickTreeItem>();\n\t\twhile (toLookAt.length) {\n\t\t\tconst lookAt = toLookAt.shift();\n\t\t\tif (!lookAt?.element || lookedAt.has(lookAt.element)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (lookAt.element.checked) {\n\t\t\t\tlookedAt.add(lookAt.element);\n\t\t\t\ttoLookAt.push(...lookAt.children);\n\t\t\t\tif (!lookAt.element.children) {\n\t\t\t\t\tcheckedItems.push(lookAt.element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn checkedItems;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { RenderIndentGuides } from '../../../../base/browser/ui/tree/abstractTree.js';\nimport { IHoverDelegate } from '../../../../base/browser/ui/hover/hoverDelegate.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../../instantiation/common/instantiation.js';\nimport { WorkbenchObjectTree } from '../../../list/browser/listService.js';\nimport { IQuickTreeCheckboxEvent, IQuickTreeItem, IQuickTreeItemButtonEvent } from '../../common/quickInput.js';\nimport { QuickInputTreeDelegate } from './quickInputDelegate.js';\nimport { getParentNodeState, IQuickTreeFilterData } from './quickInputTree.js';\nimport { QuickTreeAccessibilityProvider } from './quickInputTreeAccessibilityProvider.js';\nimport { QuickInputTreeFilter } from './quickInputTreeFilter.js';\nimport { QuickInputTreeRenderer } from './quickInputTreeRenderer.js';\n\nconst $ = dom.$;\n\nexport class QuickInputTreeController extends Disposable {\n\tprivate readonly _renderer: QuickInputTreeRenderer<IQuickTreeItem>;\n\tprivate readonly _filter: QuickInputTreeFilter;\n\tprivate readonly _tree: WorkbenchObjectTree<IQuickTreeItem, IQuickTreeFilterData>;\n\n\tprivate readonly _onDidTriggerButton = this._register(new Emitter<IQuickTreeItemButtonEvent<IQuickTreeItem>>());\n\n\tprivate readonly _onDidChangeCheckboxState = this._register(new Emitter<IQuickTreeCheckboxEvent<IQuickTreeItem>>());\n\treadonly onDidChangeCheckboxState = this._onDidChangeCheckboxState.event;\n\n\tprivate readonly _onDidCheckedLeafItemsChange = this._register(new Emitter<ReadonlyArray<IQuickTreeItem>>);\n\n\tprivate readonly _onLeave = new Emitter<void>();\n\t/**\n\t * Event that is fired when the tree would no longer have focus.\n\t*/\n\treadonly onLeave: Event<void> = this._onLeave.event;\n\n\tprivate readonly _container: HTMLElement;\n\n\tconstructor(\n\t\tcontainer: HTMLElement,\n\t\thoverDelegate: IHoverDelegate | undefined,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\t\tthis._container = dom.append(container, $('.quick-input-tree'));\n\t\tthis._renderer = this._register(this.instantiationService.createInstance(QuickInputTreeRenderer, hoverDelegate, this._onDidTriggerButton, this.onDidChangeCheckboxState));\n\t\tthis._filter = this.instantiationService.createInstance(QuickInputTreeFilter);\n\t\tthis._tree = this._register(this.instantiationService.createInstance(\n\t\t\tWorkbenchObjectTree<IQuickTreeItem, IQuickTreeFilterData>,\n\t\t\t'QuickInputTree',\n\t\t\tthis._container,\n\t\t\tnew QuickInputTreeDelegate(),\n\t\t\t[this._renderer],\n\t\t\t{\n\t\t\t\taccessibilityProvider: new QuickTreeAccessibilityProvider(this.onDidChangeCheckboxState),\n\t\t\t\thorizontalScrolling: false,\n\t\t\t\tmultipleSelectionSupport: false,\n\t\t\t\tfindWidgetEnabled: false,\n\t\t\t\talwaysConsumeMouseWheel: true,\n\t\t\t\thideTwistiesOfChildlessElements: true,\n\t\t\t\trenderIndentGuides: RenderIndentGuides.None,\n\t\t\t\texpandOnDoubleClick: true,\n\t\t\t\texpandOnlyOnTwistieClick: true,\n\t\t\t\tdisableExpandOnSpacebar: true,\n\t\t\t\tsorter: {\n\t\t\t\t\tcompare: (a: IQuickTreeItem, b: IQuickTreeItem): number => {\n\t\t\t\t\t\tif (a.label < b.label) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t} else if (a.label > b.label) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// use description to break ties\n\t\t\t\t\t\tif (a.description && b.description) {\n\t\t\t\t\t\t\tif (a.description < b.description) {\n\t\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t\t} else if (a.description > b.description) {\n\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (a.description) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t} else if (b.description) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfilter: this._filter\n\t\t\t}\n\t\t));\n\t\tthis.registerOnOpenListener();\n\t}\n\n\tget tree(): WorkbenchObjectTree<IQuickTreeItem, IQuickTreeFilterData> {\n\t\treturn this._tree;\n\t}\n\n\tget displayed() {\n\t\treturn this._container.style.display !== 'none';\n\t}\n\n\tset displayed(value: boolean) {\n\t\tthis._container.style.display = value ? '' : 'none';\n\t}\n\n\tgetActiveDescendant() {\n\t\treturn this._tree.getHTMLElement().getAttribute('aria-activedescendant');\n\t}\n\n\tlayout(maxHeight?: number): void {\n\t\tthis._tree.getHTMLElement().style.maxHeight = maxHeight ? `${\n\t\t\t// Make sure height aligns with list item heights\n\t\t\tMath.floor(maxHeight / 44) * 44\n\t\t\t// Add some extra height so that it's clear there's more to scroll\n\t\t\t+ 6\n\t\t\t}px` : '';\n\t\tthis._tree.layout();\n\t}\n\n\tregisterOnOpenListener() {\n\t\tthis._register(this._tree.onDidOpen(e => {\n\t\t\tconst item = e.element;\n\t\t\tif (!item) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (item.disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newState = item.checked !== true;\n\t\t\tif ((item.checked ?? false) === newState) {\n\t\t\t\treturn; // No change\n\t\t\t}\n\n\t\t\t// Handle checked item\n\t\t\titem.checked = newState;\n\t\t\tthis._tree.rerender(item);\n\n\t\t\t// Handle children of the checked item\n\t\t\tconst updateSet = new Set<IQuickTreeItem>();\n\t\t\tconst toUpdate = [...this._tree.getNode(item).children];\n\t\t\twhile (toUpdate.length) {\n\t\t\t\tconst pop = toUpdate.shift();\n\t\t\t\tif (pop?.element && !updateSet.has(pop.element)) {\n\t\t\t\t\tupdateSet.add(pop.element);\n\t\t\t\t\tif ((pop.element.checked ?? false) !== item.checked) {\n\t\t\t\t\t\tpop.element.checked = item.checked;\n\t\t\t\t\t\tthis._tree.rerender(pop.element);\n\t\t\t\t\t}\n\t\t\t\t\ttoUpdate.push(...pop.children);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Handle parents of the checked item\n\t\t\tlet parent = this._tree.getParentElement(item);\n\t\t\twhile (parent) {\n\t\t\t\tconst parentChildren = [...this._tree.getNode(parent).children];\n\t\t\t\tconst newState = getParentNodeState(parentChildren);\n\n\t\t\t\tif ((parent.checked ?? false) !== newState) {\n\t\t\t\t\tparent.checked = newState;\n\t\t\t\t\tthis._tree.rerender(parent);\n\t\t\t\t}\n\t\t\t\tparent = this._tree.getParentElement(parent);\n\t\t\t}\n\n\t\t\tthis._onDidChangeCheckboxState.fire({\n\t\t\t\titem,\n\t\t\t\tchecked: item.checked ?? false\n\t\t\t});\n\t\t\tthis._onDidCheckedLeafItemsChange.fire(this.getCheckedLeafItems());\n\t\t}));\n\t}\n\n\tgetCheckedLeafItems() {\n\t\tconst lookedAt = new Set<IQuickTreeItem>();\n\t\tconst toLookAt = [...this._tree.getNode().children];\n\t\tconst checkedItems = new Array<IQuickTreeItem>();\n\t\twhile (toLookAt.length) {\n\t\t\tconst lookAt = toLookAt.shift();\n\t\t\tif (!lookAt?.element || lookedAt.has(lookAt.element)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (lookAt.element.checked) {\n\t\t\t\tlookedAt.add(lookAt.element);\n\t\t\t\ttoLookAt.push(...lookAt.children);\n\t\t\t\tif (!lookAt.element.children) {\n\t\t\t\t\tcheckedItems.push(lookAt.element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn checkedItems;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4650, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInputController.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../base/browser/dom.js';\nimport * as domStylesheetsJs from '../../../base/browser/domStylesheets.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { Button } from '../../../base/browser/ui/button/button.js';\nimport { CountBadge } from '../../../base/browser/ui/countBadge/countBadge.js';\nimport { ProgressBar } from '../../../base/browser/ui/progressbar/progressbar.js';\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { KeyCode } from '../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore, dispose } from '../../../base/common/lifecycle.js';\nimport Severity from '../../../base/common/severity.js';\nimport { isString } from '../../../base/common/types.js';\nimport { localize } from '../../../nls.js';\nimport { IInputBox, IInputOptions, IKeyMods, IPickOptions, IQuickInput, IQuickInputButton, IQuickPick, IQuickPickItem, QuickInputHideReason, QuickPickInput, QuickInputType } from '../common/quickInput.js';\nimport { QuickInputBox } from './quickInputBox.js';\nimport { QuickInputUI, Writeable, IQuickInputStyles, IQuickInputOptions, QuickPick, backButton, InputBox, Visibilities, InQuickInputContextKey, QuickInputTypeContextKey, EndOfQuickInputBoxContextKey, QuickInputAlignmentContextKey } from './quickInput.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { QuickInputList } from './quickInputList.js';\nimport { IContextKey, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport './quickInputActions.js';\nimport { autorun, observableValue } from '../../../base/common/observable.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { IStorageService, StorageScope, StorageTarget } from '../../storage/common/storage.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Platform, platform } from '../../../base/common/platform.js';\nimport { getWindowControlsStyle, WindowControlsStyle } from '../../window/common/window.js';\nimport { getZoomFactor } from '../../../base/browser/browser.js';\nimport { TriStateCheckbox } from '../../../base/browser/ui/toggle/toggle.js';\nimport { defaultCheckboxStyles } from '../../theme/browser/defaultStyles.js';\nimport { QuickInputTreeController } from './tree/quickInputTreeController.js';\n\nconst $ = dom.$;\n\nconst VIEWSTATE_STORAGE_KEY = 'workbench.quickInput.viewState';\n\ntype QuickInputViewState = {\n\treadonly top?: number;\n\treadonly left?: number;\n};\n\nexport class QuickInputController extends Disposable {\n\tprivate static readonly MAX_WIDTH = 600; // Max total width of quick input widget\n\n\tprivate idPrefix: string;\n\tprivate ui: QuickInputUI | undefined;\n\tprivate dimension?: dom.IDimension;\n\tprivate titleBarOffset?: number;\n\tprivate enabled = true;\n\tprivate readonly onDidAcceptEmitter = this._register(new Emitter<void>());\n\tprivate readonly onDidCustomEmitter = this._register(new Emitter<void>());\n\tprivate readonly onDidTriggerButtonEmitter = this._register(new Emitter<IQuickInputButton>());\n\tprivate keyMods: Writeable<IKeyMods> = { ctrlCmd: false, alt: false };\n\n\tprivate controller: IQuickInput | null = null;\n\tget currentQuickInput() { return this.controller ?? undefined; }\n\n\tprivate _container: HTMLElement;\n\tget container() { return this._container; }\n\n\tprivate styles: IQuickInputStyles;\n\n\tprivate onShowEmitter = this._register(new Emitter<void>());\n\treadonly onShow = this.onShowEmitter.event;\n\n\tprivate onHideEmitter = this._register(new Emitter<void>());\n\treadonly onHide = this.onHideEmitter.event;\n\n\tprivate previousFocusElement?: HTMLElement;\n\n\tprivate viewState: QuickInputViewState | undefined;\n\tprivate dndController: QuickInputDragAndDropController | undefined;\n\n\tprivate readonly inQuickInputContext: IContextKey<boolean>;\n\tprivate readonly quickInputTypeContext: IContextKey<QuickInputType>;\n\tprivate readonly endOfQuickInputBoxContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate options: IQuickInputOptions,\n\t\t@ILayoutService private readonly layoutService: ILayoutService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IStorageService private readonly storageService: IStorageService\n\t) {\n\t\tsuper();\n\n\t\tthis.inQuickInputContext = InQuickInputContextKey.bindTo(contextKeyService);\n\t\tthis.quickInputTypeContext = QuickInputTypeContextKey.bindTo(contextKeyService);\n\t\tthis.endOfQuickInputBoxContext = EndOfQuickInputBoxContextKey.bindTo(contextKeyService);\n\n\t\tthis.idPrefix = options.idPrefix;\n\t\tthis._container = options.container;\n\t\tthis.styles = options.styles;\n\t\tthis._register(Event.runAndSubscribe(dom.onDidRegisterWindow, ({ window, disposables }) => this.registerKeyModsListeners(window, disposables), { window: mainWindow, disposables: this._store }));\n\t\tthis._register(dom.onWillUnregisterWindow(window => {\n\t\t\tif (this.ui && dom.getWindow(this.ui.container) === window) {\n\t\t\t\t// The window this quick input is contained in is about to\n\t\t\t\t// close, so we have to make sure to reparent it back to an\n\t\t\t\t// existing parent to not loose functionality.\n\t\t\t\t// (https://github.com/microsoft/vscode/issues/195870)\n\t\t\t\tthis.reparentUI(this.layoutService.mainContainer);\n\t\t\t\tthis.layout(this.layoutService.mainContainerDimension, this.layoutService.mainContainerOffset.quickPickTop);\n\t\t\t}\n\t\t}));\n\t\tthis.viewState = this.loadViewState();\n\t}\n\n\tprivate registerKeyModsListeners(window: Window, disposables: DisposableStore): void {\n\t\tconst listener = (e: KeyboardEvent | MouseEvent) => {\n\t\t\tthis.keyMods.ctrlCmd = e.ctrlKey || e.metaKey;\n\t\t\tthis.keyMods.alt = e.altKey;\n\t\t};\n\n\t\tfor (const event of [dom.EventType.KEY_DOWN, dom.EventType.KEY_UP, dom.EventType.MOUSE_DOWN]) {\n\t\t\tdisposables.add(dom.addDisposableListener(window, event, listener, true));\n\t\t}\n\t}\n\n\tprivate getUI(showInActiveContainer?: boolean): QuickInputUI {\n\t\tif (this.ui) {\n\t\t\t// In order to support aux windows, re-parent the controller\n\t\t\t// if the original event is from a different document\n\t\t\tif (showInActiveContainer) {\n\t\t\t\tif (dom.getWindow(this._container) !== dom.getWindow(this.layoutService.activeContainer)) {\n\t\t\t\t\tthis.reparentUI(this.layoutService.activeContainer);\n\t\t\t\t\tthis.layout(this.layoutService.activeContainerDimension, this.layoutService.activeContainerOffset.quickPickTop);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.ui;\n\t\t}\n\n\t\tconst container = dom.append(this._container, $('.quick-input-widget.show-file-icons'));\n\t\tcontainer.tabIndex = -1;\n\t\tcontainer.style.display = 'none';\n\n\t\tconst styleSheet = domStylesheetsJs.createStyleSheet(container);\n\n\t\tconst titleBar = dom.append(container, $('.quick-input-titlebar'));\n\n\t\tconst leftActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n\t\tleftActionBar.domNode.classList.add('quick-input-left-action-bar');\n\n\t\tconst title = dom.append(titleBar, $('.quick-input-title'));\n\n\t\tconst rightActionBar = this._register(new ActionBar(titleBar, { hoverDelegate: this.options.hoverDelegate }));\n\t\trightActionBar.domNode.classList.add('quick-input-right-action-bar');\n\n\t\tconst headerContainer = dom.append(container, $('.quick-input-header'));\n\n\t\tconst checkAll = this._register(new TriStateCheckbox(localize('quickInput.checkAll', \"Toggle all checkboxes\"), false, { ...defaultCheckboxStyles, size: 15 }));\n\t\tdom.append(headerContainer, checkAll.domNode);\n\t\tthis._register(checkAll.onChange(() => {\n\t\t\tconst checked = checkAll.checked;\n\t\t\tlist.setAllVisibleChecked(checked === true);\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(checkAll.domNode, dom.EventType.CLICK, e => {\n\t\t\tif (e.x || e.y) { // Avoid 'click' triggered by 'space'...\n\t\t\t\tinputBox.setFocus();\n\t\t\t}\n\t\t}));\n\n\t\tconst description2 = dom.append(headerContainer, $('.quick-input-description'));\n\t\tconst inputContainer = dom.append(headerContainer, $('.quick-input-and-message'));\n\t\tconst filterContainer = dom.append(inputContainer, $('.quick-input-filter'));\n\n\t\tconst inputBox = this._register(new QuickInputBox(filterContainer, this.styles.inputBox, this.styles.toggle));\n\t\tinputBox.setAttribute('aria-describedby', `${this.idPrefix}message`);\n\n\t\tconst visibleCountContainer = dom.append(filterContainer, $('.quick-input-visible-count'));\n\t\tvisibleCountContainer.setAttribute('aria-live', 'polite');\n\t\tvisibleCountContainer.setAttribute('aria-atomic', 'true');\n\t\tconst visibleCount = this._register(new CountBadge(visibleCountContainer, { countFormat: localize({ key: 'quickInput.visibleCount', comment: ['This tells the user how many items are shown in a list of items to select from. The items can be anything. Currently not visible, but read by screen readers.'] }, \"{0} Results\") }, this.styles.countBadge));\n\n\t\tconst countContainer = dom.append(filterContainer, $('.quick-input-count'));\n\t\tcountContainer.setAttribute('aria-live', 'polite');\n\t\tconst count = this._register(new CountBadge(countContainer, { countFormat: localize({ key: 'quickInput.countSelected', comment: ['This tells the user how many items are selected in a list of items to select from. The items can be anything.'] }, \"{0} Selected\") }, this.styles.countBadge));\n\n\t\tconst inlineActionBar = this._register(new ActionBar(headerContainer, { hoverDelegate: this.options.hoverDelegate }));\n\t\tinlineActionBar.domNode.classList.add('quick-input-inline-action-bar');\n\n\t\tconst okContainer = dom.append(headerContainer, $('.quick-input-action'));\n\t\tconst ok = this._register(new Button(okContainer, this.styles.button));\n\t\tok.label = localize('ok', \"OK\");\n\t\tthis._register(ok.onDidClick(e => {\n\t\t\tthis.onDidAcceptEmitter.fire();\n\t\t}));\n\n\t\tconst customButtonContainer = dom.append(headerContainer, $('.quick-input-action'));\n\t\tconst customButton = this._register(new Button(customButtonContainer, { ...this.styles.button, supportIcons: true }));\n\t\tcustomButton.label = localize('custom', \"Custom\");\n\t\tthis._register(customButton.onDidClick(e => {\n\t\t\tthis.onDidCustomEmitter.fire();\n\t\t}));\n\n\t\tconst message = dom.append(inputContainer, $(`#${this.idPrefix}message.quick-input-message`));\n\n\t\tconst progressBar = this._register(new ProgressBar(container, this.styles.progressBar));\n\t\tprogressBar.getContainer().classList.add('quick-input-progress');\n\n\t\tconst widget = dom.append(container, $('.quick-input-html-widget'));\n\t\twidget.tabIndex = -1;\n\n\t\tconst description1 = dom.append(container, $('.quick-input-description'));\n\n\t\t// List\n\t\tconst listId = this.idPrefix + 'list';\n\t\tconst list = this._register(this.instantiationService.createInstance(QuickInputList, container, this.options.hoverDelegate, this.options.linkOpenerDelegate, listId));\n\t\tinputBox.setAttribute('aria-controls', listId);\n\t\tthis._register(list.onDidChangeFocus(() => {\n\t\t\tif (inputBox.hasFocus()) {\n\t\t\t\tinputBox.setAttribute('aria-activedescendant', list.getActiveDescendant() ?? '');\n\t\t\t}\n\t\t}));\n\t\tthis._register(list.onChangedAllVisibleChecked(checked => {\n\t\t\t// TODO: Support tri-state checkbox when we remove the .indent property that is faking tree structure.\n\t\t\tcheckAll.checked = checked;\n\t\t}));\n\t\tthis._register(list.onChangedVisibleCount(c => {\n\t\t\tvisibleCount.setCount(c);\n\t\t}));\n\t\tthis._register(list.onChangedCheckedCount(c => {\n\t\t\tcount.setCount(c);\n\t\t}));\n\t\tthis._register(list.onLeave(() => {\n\t\t\t// Defer to avoid the input field reacting to the triggering key.\n\t\t\t// TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.controller) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinputBox.setFocus();\n\t\t\t\tif (this.controller instanceof QuickPick && this.controller.canSelectMany) {\n\t\t\t\t\tlist.clearFocus();\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}));\n\n\t\t// Tree\n\t\tconst tree = this._register(this.instantiationService.createInstance(\n\t\t\tQuickInputTreeController,\n\t\t\tcontainer,\n\t\t\tthis.options.hoverDelegate\n\t\t));\n\t\tthis._register(tree.tree.onDidChangeFocus(() => {\n\t\t\tif (inputBox.hasFocus()) {\n\t\t\t\tinputBox.setAttribute('aria-activedescendant', tree.getActiveDescendant() ?? '');\n\t\t\t}\n\t\t}));\n\t\tthis._register(tree.onLeave(() => {\n\t\t\t// Defer to avoid the input field reacting to the triggering key.\n\t\t\t// TODO@TylerLeonhardt https://github.com/microsoft/vscode/issues/203675\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.controller) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinputBox.setFocus();\n\t\t\t\ttree.tree.setFocus([]);\n\t\t\t}, 0);\n\t\t}));\n\t\tthis._register(tree.tree.onDidChangeContentHeight(() => this.updateLayout()));\n\n\t\tconst focusTracker = dom.trackFocus(container);\n\t\tthis._register(focusTracker);\n\t\tthis._register(dom.addDisposableListener(container, dom.EventType.FOCUS, e => {\n\t\t\tconst ui = this.getUI();\n\t\t\tif (dom.isAncestor(e.relatedTarget as HTMLElement, ui.inputContainer)) {\n\t\t\t\tconst value = ui.inputBox.isSelectionAtEnd();\n\t\t\t\tif (this.endOfQuickInputBoxContext.get() !== value) {\n\t\t\t\t\tthis.endOfQuickInputBoxContext.set(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Ignore focus events within container\n\t\t\tif (dom.isAncestor(e.relatedTarget as HTMLElement, ui.container)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.inQuickInputContext.set(true);\n\t\t\tthis.previousFocusElement = dom.isHTMLElement(e.relatedTarget) ? e.relatedTarget : undefined;\n\t\t}, true));\n\t\tthis._register(focusTracker.onDidBlur(() => {\n\t\t\tif (!this.getUI().ignoreFocusOut && !this.options.ignoreFocusOut()) {\n\t\t\t\tthis.hide(QuickInputHideReason.Blur);\n\t\t\t}\n\t\t\tthis.inQuickInputContext.set(false);\n\t\t\tthis.endOfQuickInputBoxContext.set(false);\n\t\t\tthis.previousFocusElement = undefined;\n\t\t}));\n\t\tthis._register(inputBox.onKeyDown(_ => {\n\t\t\tconst value = this.getUI().inputBox.isSelectionAtEnd();\n\t\t\tif (this.endOfQuickInputBoxContext.get() !== value) {\n\t\t\t\tthis.endOfQuickInputBoxContext.set(value);\n\t\t\t}\n\t\t\t// Allow screenreaders to read what's in the input\n\t\t\t// Note: this works for arrow keys and selection changes,\n\t\t\t// but not for deletions since that often triggers a\n\t\t\t// change in the list.\n\t\t\tinputBox.removeAttribute('aria-activedescendant');\n\t\t}));\n\t\tthis._register(dom.addDisposableListener(container, dom.EventType.FOCUS, (e: FocusEvent) => {\n\t\t\tinputBox.setFocus();\n\t\t}));\n\t\t// TODO: Turn into commands instead of handling KEY_DOWN\n\t\t// Keybindings for the quickinput widget as a whole\n\t\tthis._register(dom.addStandardDisposableListener(container, dom.EventType.KEY_DOWN, (event) => {\n\t\t\tif (dom.isAncestor(event.target, widget)) {\n\t\t\t\treturn; // Ignore event if target is inside widget to allow the widget to handle the event.\n\t\t\t}\n\t\t\tswitch (event.keyCode) {\n\t\t\t\tcase KeyCode.Enter:\n\t\t\t\t\tdom.EventHelper.stop(event, true);\n\t\t\t\t\tif (this.enabled) {\n\t\t\t\t\t\tthis.onDidAcceptEmitter.fire();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase KeyCode.Escape:\n\t\t\t\t\tdom.EventHelper.stop(event, true);\n\t\t\t\t\tthis.hide(QuickInputHideReason.Gesture);\n\t\t\t\t\tbreak;\n\t\t\t\tcase KeyCode.Tab:\n\t\t\t\t\tif (!event.altKey && !event.ctrlKey && !event.metaKey) {\n\t\t\t\t\t\t// detect only visible actions\n\t\t\t\t\t\tconst selectors = [\n\t\t\t\t\t\t\t'.quick-input-list .monaco-action-bar .always-visible',\n\t\t\t\t\t\t\t'.quick-input-list-entry:hover .monaco-action-bar',\n\t\t\t\t\t\t\t'.monaco-list-row.focused .monaco-action-bar'\n\t\t\t\t\t\t];\n\n\t\t\t\t\t\tif (container.classList.contains('show-checkboxes')) {\n\t\t\t\t\t\t\tselectors.push('input');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectors.push('input[type=text]');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.getUI().list.displayed) {\n\t\t\t\t\t\t\tselectors.push('.monaco-list');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// focus links if there are any\n\t\t\t\t\t\tif (this.getUI().message) {\n\t\t\t\t\t\t\tselectors.push('.quick-input-message a');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.getUI().widget) {\n\t\t\t\t\t\t\tif (dom.isAncestor(event.target, this.getUI().widget)) {\n\t\t\t\t\t\t\t\t// let the widget control tab\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tselectors.push('.quick-input-html-widget');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst stops = container.querySelectorAll<HTMLElement>(selectors.join(', '));\n\t\t\t\t\t\tif (!event.shiftKey && dom.isAncestor(event.target, stops[stops.length - 1])) {\n\t\t\t\t\t\t\tdom.EventHelper.stop(event, true);\n\t\t\t\t\t\t\tstops[0].focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (event.shiftKey && dom.isAncestor(event.target, stops[0])) {\n\t\t\t\t\t\t\tdom.EventHelper.stop(event, true);\n\t\t\t\t\t\t\tstops[stops.length - 1].focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}));\n\n\t\t// Drag and Drop support\n\t\tthis.dndController = this._register(this.instantiationService.createInstance(\n\t\t\tQuickInputDragAndDropController,\n\t\t\tthis._container,\n\t\t\tcontainer,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tnode: titleBar,\n\t\t\t\t\tincludeChildren: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnode: headerContainer,\n\t\t\t\t\tincludeChildren: false\n\t\t\t\t}\n\t\t\t],\n\t\t\tthis.viewState\n\t\t));\n\n\t\t// DnD update layout\n\t\tthis._register(autorun(reader => {\n\t\t\tconst dndViewState = this.dndController?.dndViewState.read(reader);\n\t\t\tif (!dndViewState) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (dndViewState.top !== undefined && dndViewState.left !== undefined) {\n\t\t\t\tthis.viewState = {\n\t\t\t\t\t...this.viewState,\n\t\t\t\t\ttop: dndViewState.top,\n\t\t\t\t\tleft: dndViewState.left\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// Reset position/size\n\t\t\t\tthis.viewState = undefined;\n\t\t\t}\n\n\t\t\tthis.updateLayout();\n\n\t\t\t// Save position\n\t\t\tif (dndViewState.done) {\n\t\t\t\tthis.saveViewState(this.viewState);\n\t\t\t}\n\t\t}));\n\n\t\tthis.ui = {\n\t\t\tcontainer,\n\t\t\tstyleSheet,\n\t\t\tleftActionBar,\n\t\t\ttitleBar,\n\t\t\ttitle,\n\t\t\tdescription1,\n\t\t\tdescription2,\n\t\t\twidget,\n\t\t\trightActionBar,\n\t\t\tinlineActionBar,\n\t\t\tcheckAll,\n\t\t\tinputContainer,\n\t\t\tfilterContainer,\n\t\t\tinputBox,\n\t\t\tvisibleCountContainer,\n\t\t\tvisibleCount,\n\t\t\tcountContainer,\n\t\t\tcount,\n\t\t\tokContainer,\n\t\t\tok,\n\t\t\tmessage,\n\t\t\tcustomButtonContainer,\n\t\t\tcustomButton,\n\t\t\tlist,\n\t\t\ttree,\n\t\t\tprogressBar,\n\t\t\tonDidAccept: this.onDidAcceptEmitter.event,\n\t\t\tonDidCustom: this.onDidCustomEmitter.event,\n\t\t\tonDidTriggerButton: this.onDidTriggerButtonEmitter.event,\n\t\t\tignoreFocusOut: false,\n\t\t\tkeyMods: this.keyMods,\n\t\t\tshow: controller => this.show(controller),\n\t\t\thide: () => this.hide(),\n\t\t\tsetVisibilities: visibilities => this.setVisibilities(visibilities),\n\t\t\tsetEnabled: enabled => this.setEnabled(enabled),\n\t\t\tsetContextKey: contextKey => this.options.setContextKey(contextKey),\n\t\t\tlinkOpenerDelegate: content => this.options.linkOpenerDelegate(content)\n\t\t};\n\t\tthis.updateStyles();\n\t\treturn this.ui;\n\t}\n\n\tprivate reparentUI(container: HTMLElement): void {\n\t\tif (this.ui) {\n\t\t\tthis._container = container;\n\t\t\tdom.append(this._container, this.ui.container);\n\t\t\tthis.dndController?.reparentUI(this._container);\n\t\t}\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options: IPickOptions<T> = {}, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\ttype R = (O extends { canPickMany: true } ? T[] : T) | undefined;\n\t\treturn new Promise<R>((doResolve, reject) => {\n\t\t\tlet resolve = (result: R) => {\n\t\t\t\tresolve = doResolve;\n\t\t\t\toptions.onKeyMods?.(input.keyMods);\n\t\t\t\tdoResolve(result);\n\t\t\t};\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst input = this.createQuickPick<T>({ useSeparators: true });\n\t\t\tlet activeItem: T | undefined;\n\t\t\tconst disposables = [\n\t\t\t\tinput,\n\t\t\t\tinput.onDidAccept(() => {\n\t\t\t\t\tif (input.canSelectMany) {\n\t\t\t\t\t\tresolve(<R>input.selectedItems.slice());\n\t\t\t\t\t\tinput.hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst result = input.activeItems[0];\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tresolve(<R>result);\n\t\t\t\t\t\t\tinput.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tinput.onDidChangeActive(items => {\n\t\t\t\t\tconst focused = items[0];\n\t\t\t\t\tif (focused && options.onDidFocus) {\n\t\t\t\t\t\toptions.onDidFocus(focused);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tinput.onDidChangeSelection(items => {\n\t\t\t\t\tif (!input.canSelectMany) {\n\t\t\t\t\t\tconst result = items[0];\n\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\tresolve(<R>result);\n\t\t\t\t\t\t\tinput.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tinput.onDidTriggerItemButton(event => options.onDidTriggerItemButton && options.onDidTriggerItemButton({\n\t\t\t\t\t...event,\n\t\t\t\t\tremoveItem: () => {\n\t\t\t\t\t\tconst index = input.items.indexOf(event.item);\n\t\t\t\t\t\tif (index !== -1) {\n\t\t\t\t\t\t\tconst items = input.items.slice();\n\t\t\t\t\t\t\tconst removed = items.splice(index, 1);\n\t\t\t\t\t\t\tconst activeItems = input.activeItems.filter(activeItem => activeItem !== removed[0]);\n\t\t\t\t\t\t\tconst keepScrollPositionBefore = input.keepScrollPosition;\n\t\t\t\t\t\t\tinput.keepScrollPosition = true;\n\t\t\t\t\t\t\tinput.items = items;\n\t\t\t\t\t\t\tif (activeItems) {\n\t\t\t\t\t\t\t\tinput.activeItems = activeItems;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tinput.keepScrollPosition = keepScrollPositionBefore;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})),\n\t\t\t\tinput.onDidTriggerSeparatorButton(event => options.onDidTriggerSeparatorButton?.(event)),\n\t\t\t\tinput.onDidChangeValue(value => {\n\t\t\t\t\tif (activeItem && !value && (input.activeItems.length !== 1 || input.activeItems[0] !== activeItem)) {\n\t\t\t\t\t\tinput.activeItems = [activeItem];\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\t\tinput.hide();\n\t\t\t\t}),\n\t\t\t\tinput.onDidHide(() => {\n\t\t\t\t\tdispose(disposables);\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}),\n\t\t\t];\n\t\t\tinput.title = options.title;\n\t\t\tif (options.value) {\n\t\t\t\tinput.value = options.value;\n\t\t\t}\n\t\t\tinput.canSelectMany = !!options.canPickMany;\n\t\t\tinput.placeholder = options.placeHolder;\n\t\t\tinput.ignoreFocusOut = !!options.ignoreFocusLost;\n\t\t\tinput.matchOnDescription = !!options.matchOnDescription;\n\t\t\tinput.matchOnDetail = !!options.matchOnDetail;\n\t\t\tif (options.sortByLabel !== undefined) {\n\t\t\t\tinput.sortByLabel = options.sortByLabel;\n\t\t\t}\n\t\t\tinput.matchOnLabel = (options.matchOnLabel === undefined) || options.matchOnLabel; // default to true\n\t\t\tinput.quickNavigate = options.quickNavigate;\n\t\t\tinput.hideInput = !!options.hideInput;\n\t\t\tinput.contextKey = options.contextKey;\n\t\t\tinput.busy = true;\n\t\t\tPromise.all([picks, options.activeItem])\n\t\t\t\t.then(([items, _activeItem]) => {\n\t\t\t\t\tactiveItem = _activeItem;\n\t\t\t\t\tinput.busy = false;\n\t\t\t\t\tinput.items = items;\n\t\t\t\t\tif (input.canSelectMany) {\n\t\t\t\t\t\tinput.selectedItems = items.filter(item => item.type !== 'separator' && item.picked) as T[];\n\t\t\t\t\t}\n\t\t\t\t\tif (activeItem) {\n\t\t\t\t\t\tinput.activeItems = [activeItem];\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\tinput.show();\n\t\t\tPromise.resolve(picks).then(undefined, err => {\n\t\t\t\treject(err);\n\t\t\t\tinput.hide();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate setValidationOnInput(input: IInputBox, validationResult: string | {\n\t\tcontent: string;\n\t\tseverity: Severity;\n\t} | null | undefined) {\n\t\tif (validationResult && isString(validationResult)) {\n\t\t\tinput.severity = Severity.Error;\n\t\t\tinput.validationMessage = validationResult;\n\t\t} else if (validationResult && !isString(validationResult)) {\n\t\t\tinput.severity = validationResult.severity;\n\t\t\tinput.validationMessage = validationResult.content;\n\t\t} else {\n\t\t\tinput.severity = Severity.Ignore;\n\t\t\tinput.validationMessage = undefined;\n\t\t}\n\t}\n\n\tinput(options: IInputOptions = {}, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\t\treturn new Promise<string | undefined>((resolve) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst input = this.createInputBox();\n\t\t\tconst validateInput = options.validateInput || (() => <Promise<undefined>>Promise.resolve(undefined));\n\t\t\tconst onDidValueChange = Event.debounce(input.onDidChangeValue, (last, cur) => cur, 100);\n\t\t\tlet validationValue = options.value || '';\n\t\t\tlet validation = Promise.resolve(validateInput(validationValue));\n\t\t\tconst disposables = [\n\t\t\t\tinput,\n\t\t\t\tonDidValueChange(value => {\n\t\t\t\t\tif (value !== validationValue) {\n\t\t\t\t\t\tvalidation = Promise.resolve(validateInput(value));\n\t\t\t\t\t\tvalidationValue = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalidation.then(result => {\n\t\t\t\t\t\tif (value === validationValue) {\n\t\t\t\t\t\t\tthis.setValidationOnInput(input, result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\tinput.onDidAccept(() => {\n\t\t\t\t\tconst value = input.value;\n\t\t\t\t\tif (value !== validationValue) {\n\t\t\t\t\t\tvalidation = Promise.resolve(validateInput(value));\n\t\t\t\t\t\tvalidationValue = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalidation.then(result => {\n\t\t\t\t\t\tif (!result || (!isString(result) && result.severity !== Severity.Error)) {\n\t\t\t\t\t\t\tresolve(value);\n\t\t\t\t\t\t\tinput.hide();\n\t\t\t\t\t\t} else if (value === validationValue) {\n\t\t\t\t\t\t\tthis.setValidationOnInput(input, result);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\t\tinput.hide();\n\t\t\t\t}),\n\t\t\t\tinput.onDidHide(() => {\n\t\t\t\t\tdispose(disposables);\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}),\n\t\t\t];\n\n\t\t\tinput.title = options.title;\n\t\t\tinput.value = options.value || '';\n\t\t\tinput.valueSelection = options.valueSelection;\n\t\t\tinput.prompt = options.prompt;\n\t\t\tinput.placeholder = options.placeHolder;\n\t\t\tinput.password = !!options.password;\n\t\t\tinput.ignoreFocusOut = !!options.ignoreFocusLost;\n\t\t\tinput.show();\n\t\t});\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: boolean } = { useSeparators: false }): IQuickPick<T, { useSeparators: boolean }> {\n\t\tconst ui = this.getUI(true);\n\t\treturn new QuickPick<T, typeof options>(ui);\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\tconst ui = this.getUI(true);\n\t\treturn new InputBox(ui);\n\t}\n\n\tprivate show(controller: IQuickInput) {\n\t\tconst ui = this.getUI(true);\n\t\tthis.onShowEmitter.fire();\n\t\tconst oldController = this.controller;\n\t\tthis.controller = controller;\n\t\toldController?.didHide();\n\n\t\tthis.setEnabled(true);\n\t\tui.leftActionBar.clear();\n\t\tui.title.textContent = '';\n\t\tui.description1.textContent = '';\n\t\tui.description2.textContent = '';\n\t\tdom.reset(ui.widget);\n\t\tui.rightActionBar.clear();\n\t\tui.inlineActionBar.clear();\n\t\tui.checkAll.checked = false;\n\t\t// ui.inputBox.value = ''; Avoid triggering an event.\n\t\tui.inputBox.placeholder = '';\n\t\tui.inputBox.password = false;\n\t\tui.inputBox.showDecoration(Severity.Ignore);\n\t\tui.visibleCount.setCount(0);\n\t\tui.count.setCount(0);\n\t\tdom.reset(ui.message);\n\t\tui.progressBar.stop();\n\t\tui.list.setElements([]);\n\t\tui.list.matchOnDescription = false;\n\t\tui.list.matchOnDetail = false;\n\t\tui.list.matchOnLabel = true;\n\t\tui.list.sortByLabel = true;\n\t\tui.ignoreFocusOut = false;\n\t\tui.inputBox.toggles = undefined;\n\n\t\tconst backKeybindingLabel = this.options.backKeybindingLabel();\n\t\tbackButton.tooltip = backKeybindingLabel ? localize('quickInput.backWithKeybinding', \"Back ({0})\", backKeybindingLabel) : localize('quickInput.back', \"Back\");\n\n\t\tui.container.style.display = '';\n\t\tthis.updateLayout();\n\t\tthis.dndController?.layoutContainer();\n\t\tui.inputBox.setFocus();\n\t\tthis.quickInputTypeContext.set(controller.type);\n\t}\n\n\tisVisible(): boolean {\n\t\treturn !!this.ui && this.ui.container.style.display !== 'none';\n\t}\n\n\tprivate setVisibilities(visibilities: Visibilities) {\n\t\tconst ui = this.getUI();\n\t\tui.title.style.display = visibilities.title ? '' : 'none';\n\t\tui.description1.style.display = visibilities.description && (visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n\t\tui.description2.style.display = visibilities.description && !(visibilities.inputBox || visibilities.checkAll) ? '' : 'none';\n\t\tui.checkAll.domNode.style.display = visibilities.checkAll ? '' : 'none';\n\t\tui.inputContainer.style.display = visibilities.inputBox ? '' : 'none';\n\t\tui.filterContainer.style.display = visibilities.inputBox ? '' : 'none';\n\t\tui.visibleCountContainer.style.display = visibilities.visibleCount ? '' : 'none';\n\t\tui.countContainer.style.display = visibilities.count ? '' : 'none';\n\t\tui.okContainer.style.display = visibilities.ok ? '' : 'none';\n\t\tui.customButtonContainer.style.display = visibilities.customButton ? '' : 'none';\n\t\tui.message.style.display = visibilities.message ? '' : 'none';\n\t\tui.progressBar.getContainer().style.display = visibilities.progressBar ? '' : 'none';\n\t\tui.list.displayed = !!visibilities.list;\n\t\tui.tree.displayed = !!visibilities.tree;\n\t\tui.container.classList.toggle('show-checkboxes', !!visibilities.checkBox);\n\t\tui.container.classList.toggle('hidden-input', !visibilities.inputBox && !visibilities.description);\n\t\tthis.updateLayout(); // TODO\n\t}\n\n\tprivate setEnabled(enabled: boolean) {\n\t\tif (enabled !== this.enabled) {\n\t\t\tthis.enabled = enabled;\n\t\t\tconst ui = this.getUI();\n\t\t\tfor (const item of ui.leftActionBar.viewItems) {\n\t\t\t\t(item as ActionViewItem).action.enabled = enabled;\n\t\t\t}\n\t\t\tfor (const item of ui.rightActionBar.viewItems) {\n\t\t\t\t(item as ActionViewItem).action.enabled = enabled;\n\t\t\t}\n\t\t\tif (enabled) {\n\t\t\t\tui.checkAll.enable();\n\t\t\t} else {\n\t\t\t\tui.checkAll.disable();\n\t\t\t}\n\t\t\tui.inputBox.enabled = enabled;\n\t\t\tui.ok.enabled = enabled;\n\t\t\tui.list.enabled = enabled;\n\t\t}\n\t}\n\n\thide(reason?: QuickInputHideReason) {\n\t\tconst controller = this.controller;\n\t\tif (!controller) {\n\t\t\treturn;\n\t\t}\n\t\tcontroller.willHide(reason);\n\n\t\tconst container = this.ui?.container;\n\t\tconst focusChanged = container && !dom.isAncestorOfActiveElement(container);\n\t\tthis.controller = null;\n\t\tthis.onHideEmitter.fire();\n\t\tif (container) {\n\t\t\tcontainer.style.display = 'none';\n\t\t}\n\t\tif (!focusChanged) {\n\t\t\tlet currentElement = this.previousFocusElement;\n\t\t\twhile (currentElement && !currentElement.offsetParent) {\n\t\t\t\tcurrentElement = currentElement.parentElement ?? undefined;\n\t\t\t}\n\t\t\tif (currentElement?.offsetParent) {\n\t\t\t\tcurrentElement.focus();\n\t\t\t\tthis.previousFocusElement = undefined;\n\t\t\t} else {\n\t\t\t\tthis.options.returnFocus();\n\t\t\t}\n\t\t}\n\t\tcontroller.didHide(reason);\n\t}\n\n\ttoggleHover() {\n\t\tif (this.isVisible() && this.controller instanceof QuickPick) {\n\t\t\tthis.getUI().list.toggleHover();\n\t\t}\n\t}\n\n\tlayout(dimension: dom.IDimension, titleBarOffset: number): void {\n\t\tthis.dimension = dimension;\n\t\tthis.titleBarOffset = titleBarOffset;\n\t\tthis.updateLayout();\n\t}\n\n\tprivate updateLayout() {\n\t\tif (this.ui && this.isVisible()) {\n\t\t\tconst style = this.ui.container.style;\n\t\t\tconst width = Math.min(this.dimension!.width * 0.62 /* golden cut */, QuickInputController.MAX_WIDTH);\n\t\t\tstyle.width = width + 'px';\n\n\t\t\t// Position\n\t\t\tstyle.top = `${this.viewState?.top ? Math.round(this.dimension!.height * this.viewState.top) : this.titleBarOffset}px`;\n\t\t\tstyle.left = `${Math.round((this.dimension!.width * (this.viewState?.left ?? 0.5 /* center */)) - (width / 2))}px`;\n\n\t\t\tthis.ui.inputBox.layout();\n\t\t\tthis.ui.list.layout(this.dimension && this.dimension.height * 0.4);\n\t\t\tthis.ui.tree.layout(this.dimension && this.dimension.height * 0.4);\n\t\t}\n\t}\n\n\tapplyStyles(styles: IQuickInputStyles) {\n\t\tthis.styles = styles;\n\t\tthis.updateStyles();\n\t}\n\n\tprivate updateStyles() {\n\t\tif (this.ui) {\n\t\t\tconst {\n\t\t\t\tquickInputTitleBackground, quickInputBackground, quickInputForeground, widgetBorder, widgetShadow,\n\t\t\t} = this.styles.widget;\n\t\t\tthis.ui.titleBar.style.backgroundColor = quickInputTitleBackground ?? '';\n\t\t\tthis.ui.container.style.backgroundColor = quickInputBackground ?? '';\n\t\t\tthis.ui.container.style.color = quickInputForeground ?? '';\n\t\t\tthis.ui.container.style.border = widgetBorder ? `1px solid ${widgetBorder}` : '';\n\t\t\tthis.ui.container.style.boxShadow = widgetShadow ? `0 0 8px 2px ${widgetShadow}` : '';\n\t\t\tthis.ui.list.style(this.styles.list);\n\t\t\tthis.ui.tree.tree.style(this.styles.list);\n\n\t\t\tconst content: string[] = [];\n\t\t\tif (this.styles.pickerGroup.pickerGroupBorder) {\n\t\t\t\tcontent.push(`.quick-input-list .quick-input-list-entry { border-top-color:  ${this.styles.pickerGroup.pickerGroupBorder}; }`);\n\t\t\t}\n\t\t\tif (this.styles.pickerGroup.pickerGroupForeground) {\n\t\t\t\tcontent.push(`.quick-input-list .quick-input-list-separator { color:  ${this.styles.pickerGroup.pickerGroupForeground}; }`);\n\t\t\t}\n\t\t\tif (this.styles.pickerGroup.pickerGroupForeground) {\n\t\t\t\tcontent.push(`.quick-input-list .quick-input-list-separator-as-item { color: var(--vscode-descriptionForeground); }`);\n\t\t\t}\n\n\t\t\tif (this.styles.keybindingLabel.keybindingLabelBackground ||\n\t\t\t\tthis.styles.keybindingLabel.keybindingLabelBorder ||\n\t\t\t\tthis.styles.keybindingLabel.keybindingLabelBottomBorder ||\n\t\t\t\tthis.styles.keybindingLabel.keybindingLabelShadow ||\n\t\t\t\tthis.styles.keybindingLabel.keybindingLabelForeground) {\n\t\t\t\tcontent.push('.quick-input-list .monaco-keybinding > .monaco-keybinding-key {');\n\t\t\t\tif (this.styles.keybindingLabel.keybindingLabelBackground) {\n\t\t\t\t\tcontent.push(`background-color: ${this.styles.keybindingLabel.keybindingLabelBackground};`);\n\t\t\t\t}\n\t\t\t\tif (this.styles.keybindingLabel.keybindingLabelBorder) {\n\t\t\t\t\t// Order matters here. `border-color` must come before `border-bottom-color`.\n\t\t\t\t\tcontent.push(`border-color: ${this.styles.keybindingLabel.keybindingLabelBorder};`);\n\t\t\t\t}\n\t\t\t\tif (this.styles.keybindingLabel.keybindingLabelBottomBorder) {\n\t\t\t\t\tcontent.push(`border-bottom-color: ${this.styles.keybindingLabel.keybindingLabelBottomBorder};`);\n\t\t\t\t}\n\t\t\t\tif (this.styles.keybindingLabel.keybindingLabelShadow) {\n\t\t\t\t\tcontent.push(`box-shadow: inset 0 -1px 0 ${this.styles.keybindingLabel.keybindingLabelShadow};`);\n\t\t\t\t}\n\t\t\t\tif (this.styles.keybindingLabel.keybindingLabelForeground) {\n\t\t\t\t\tcontent.push(`color: ${this.styles.keybindingLabel.keybindingLabelForeground};`);\n\t\t\t\t}\n\t\t\t\tcontent.push('}');\n\t\t\t}\n\n\t\t\tconst newStyles = content.join('\\n');\n\t\t\tif (newStyles !== this.ui.styleSheet.textContent) {\n\t\t\t\tthis.ui.styleSheet.textContent = newStyles;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate loadViewState(): QuickInputViewState | undefined {\n\t\ttry {\n\t\t\tconst data = JSON.parse(this.storageService.get(VIEWSTATE_STORAGE_KEY, StorageScope.APPLICATION, '{}'));\n\t\t\tif (data.top !== undefined || data.left !== undefined) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t} catch { }\n\n\t\treturn undefined;\n\t}\n\n\tprivate saveViewState(viewState: QuickInputViewState | undefined): void {\n\t\tconst isMainWindow = this.layoutService.activeContainer === this.layoutService.mainContainer;\n\t\tif (!isMainWindow) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (viewState !== undefined) {\n\t\t\tthis.storageService.store(VIEWSTATE_STORAGE_KEY, JSON.stringify(viewState), StorageScope.APPLICATION, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(VIEWSTATE_STORAGE_KEY, StorageScope.APPLICATION);\n\t\t}\n\t}\n}\n\nexport interface IQuickInputControllerHost extends ILayoutService { }\n\nclass QuickInputDragAndDropController extends Disposable {\n\treadonly dndViewState = observableValue<{ top?: number; left?: number; done: boolean } | undefined>(this, undefined);\n\n\tprivate readonly _snapThreshold = 20;\n\tprivate readonly _snapLineHorizontalRatio = 0.25;\n\n\tprivate readonly _controlsOnLeft: boolean;\n\tprivate readonly _controlsOnRight: boolean;\n\n\tprivate _quickInputAlignmentContext: IContextKey<'center' | 'top' | undefined>;\n\n\tconstructor(\n\t\tprivate _container: HTMLElement,\n\t\tprivate readonly _quickInputContainer: HTMLElement,\n\t\tprivate _quickInputDragAreas: { node: HTMLElement; includeChildren: boolean }[],\n\t\tinitialViewState: QuickInputViewState | undefined,\n\t\t@ILayoutService private readonly _layoutService: ILayoutService,\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\t\tthis._quickInputAlignmentContext = QuickInputAlignmentContextKey.bindTo(contextKeyService);\n\t\tconst customWindowControls = getWindowControlsStyle(this.configurationService) === WindowControlsStyle.CUSTOM;\n\n\t\t// Do not allow the widget to overflow or underflow window controls.\n\t\t// Use CSS calculations to avoid having to force layout with `.clientWidth`\n\t\tthis._controlsOnLeft = customWindowControls && platform === Platform.Mac;\n\t\tthis._controlsOnRight = customWindowControls && (platform === Platform.Windows || platform === Platform.Linux);\n\t\tthis._registerLayoutListener();\n\t\tthis.registerMouseListeners();\n\t\tthis.dndViewState.set({ ...initialViewState, done: true }, undefined);\n\t}\n\n\treparentUI(container: HTMLElement): void {\n\t\tthis._container = container;\n\t}\n\n\tlayoutContainer(dimension = this._layoutService.activeContainerDimension): void {\n\t\tconst state = this.dndViewState.get();\n\t\tconst dragAreaRect = this._quickInputContainer.getBoundingClientRect();\n\t\tif (state?.top && state?.left) {\n\t\t\tconst a = Math.round(state.left * 1e2) / 1e2;\n\t\t\tconst b = dimension.width;\n\t\t\tconst c = dragAreaRect.width;\n\t\t\tconst d = a * b - c / 2;\n\t\t\tthis._layout(state.top * dimension.height, d);\n\t\t}\n\t}\n\n\tprivate _registerLayoutListener() {\n\t\tthis._register(Event.filter(this._layoutService.onDidLayoutContainer, e => e.container === this._container)((e) => this.layoutContainer(e.dimension)));\n\t}\n\n\tprivate registerMouseListeners(): void {\n\t\tconst dragArea = this._quickInputContainer;\n\n\t\t// Double click\n\t\tthis._register(dom.addDisposableGenericMouseUpListener(dragArea, (event: MouseEvent) => {\n\t\t\tconst originEvent = new StandardMouseEvent(dom.getWindow(dragArea), event);\n\t\t\tif (originEvent.detail !== 2) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore event if the target is not the drag area\n\t\t\tif (!this._quickInputDragAreas.some(({ node, includeChildren }) => includeChildren ? dom.isAncestor(originEvent.target as HTMLElement, node) : originEvent.target === node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.dndViewState.set({ top: undefined, left: undefined, done: true }, undefined);\n\t\t}));\n\n\t\t// Mouse down\n\t\tthis._register(dom.addDisposableGenericMouseDownListener(dragArea, (e: MouseEvent) => {\n\t\t\tconst activeWindow = dom.getWindow(this._layoutService.activeContainer);\n\t\t\tconst originEvent = new StandardMouseEvent(activeWindow, e);\n\n\t\t\t// Ignore event if the target is not the drag area\n\t\t\tif (!this._quickInputDragAreas.some(({ node, includeChildren }) => includeChildren ? dom.isAncestor(originEvent.target as HTMLElement, node) : originEvent.target === node)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Mouse position offset relative to dragArea\n\t\t\tconst dragAreaRect = this._quickInputContainer.getBoundingClientRect();\n\t\t\tconst dragOffsetX = originEvent.browserEvent.clientX - dragAreaRect.left;\n\t\t\tconst dragOffsetY = originEvent.browserEvent.clientY - dragAreaRect.top;\n\n\t\t\tlet isMovingQuickInput = false;\n\t\t\tconst mouseMoveListener = dom.addDisposableGenericMouseMoveListener(activeWindow, (e: MouseEvent) => {\n\t\t\t\tconst mouseMoveEvent = new StandardMouseEvent(activeWindow, e);\n\t\t\t\tmouseMoveEvent.preventDefault();\n\n\t\t\t\tif (!isMovingQuickInput) {\n\t\t\t\t\tisMovingQuickInput = true;\n\t\t\t\t}\n\n\t\t\t\tthis._layout(e.clientY - dragOffsetY, e.clientX - dragOffsetX);\n\t\t\t});\n\t\t\tconst mouseUpListener = dom.addDisposableGenericMouseUpListener(activeWindow, (e: MouseEvent) => {\n\t\t\t\tif (isMovingQuickInput) {\n\t\t\t\t\t// Save position\n\t\t\t\t\tconst state = this.dndViewState.get();\n\t\t\t\t\tthis.dndViewState.set({ top: state?.top, left: state?.left, done: true }, undefined);\n\t\t\t\t}\n\n\t\t\t\t// Dispose listeners\n\t\t\t\tmouseMoveListener.dispose();\n\t\t\t\tmouseUpListener.dispose();\n\t\t\t});\n\t\t}));\n\t}\n\n\tprivate _layout(topCoordinate: number, leftCoordinate: number) {\n\t\tconst snapCoordinateYTop = this._getTopSnapValue();\n\t\tconst snapCoordinateY = this._getCenterYSnapValue();\n\t\tconst snapCoordinateX = this._getCenterXSnapValue();\n\t\t// Make sure the quick input is not moved outside the container\n\t\ttopCoordinate = Math.max(0, Math.min(topCoordinate, this._container.clientHeight - this._quickInputContainer.clientHeight));\n\n\t\tif (topCoordinate < this._layoutService.activeContainerOffset.top) {\n\t\t\tif (this._controlsOnLeft) {\n\t\t\t\tleftCoordinate = Math.max(leftCoordinate, 80 / getZoomFactor(dom.getActiveWindow()));\n\t\t\t} else if (this._controlsOnRight) {\n\t\t\t\tleftCoordinate = Math.min(leftCoordinate, this._container.clientWidth - this._quickInputContainer.clientWidth - (140 / getZoomFactor(dom.getActiveWindow())));\n\t\t\t}\n\t\t}\n\n\t\tconst snappingToTop = Math.abs(topCoordinate - snapCoordinateYTop) < this._snapThreshold;\n\t\ttopCoordinate = snappingToTop ? snapCoordinateYTop : topCoordinate;\n\t\tconst snappingToCenter = Math.abs(topCoordinate - snapCoordinateY) < this._snapThreshold;\n\t\ttopCoordinate = snappingToCenter ? snapCoordinateY : topCoordinate;\n\t\tconst top = topCoordinate / this._container.clientHeight;\n\n\t\t// Make sure the quick input is not moved outside the container\n\t\tleftCoordinate = Math.max(0, Math.min(leftCoordinate, this._container.clientWidth - this._quickInputContainer.clientWidth));\n\t\tconst snappingToCenterX = Math.abs(leftCoordinate - snapCoordinateX) < this._snapThreshold;\n\t\tleftCoordinate = snappingToCenterX ? snapCoordinateX : leftCoordinate;\n\n\t\tconst b = this._container.clientWidth;\n\t\tconst c = this._quickInputContainer.clientWidth;\n\t\tconst d = leftCoordinate;\n\t\tconst left = (d + c / 2) / b;\n\n\t\tthis.dndViewState.set({ top, left, done: false }, undefined);\n\t\tif (snappingToCenterX) {\n\t\t\tif (snappingToTop) {\n\t\t\t\tthis._quickInputAlignmentContext.set('top');\n\t\t\t\treturn;\n\t\t\t} else if (snappingToCenter) {\n\t\t\t\tthis._quickInputAlignmentContext.set('center');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._quickInputAlignmentContext.set(undefined);\n\t}\n\n\tprivate _getTopSnapValue() {\n\t\treturn this._layoutService.activeContainerOffset.quickPickTop;\n\t}\n\n\tprivate _getCenterYSnapValue() {\n\t\treturn Math.round(this._container.clientHeight * this._snapLineHorizontalRatio);\n\t}\n\n\tprivate _getCenterXSnapValue() {\n\t\treturn Math.round(this._container.clientWidth / 2) - Math.round(this._quickInputContainer.clientWidth / 2);\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5674, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInputService.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/platform/quickinput/browser/quickInputService.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/platform/quickinput/browser/vs/platform/quickinput/browser/quickInputService.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { IOpenerService } from '../../opener/common/opener.js';\nimport { QuickAccessController } from './quickAccess.js';\nimport { IQuickAccessController } from '../common/quickAccess.js';\nimport { IInputBox, IInputOptions, IPickOptions, IQuickInputService, IQuickPick, IQuickPickItem, QuickPickInput } from '../common/quickInput.js';\nimport { defaultButtonStyles, defaultCountBadgeStyles, defaultInputBoxStyles, defaultKeybindingLabelStyles, defaultProgressBarStyles, defaultToggleStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nimport { activeContrastBorder, asCssVariable, pickerGroupBorder, pickerGroupForeground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetBorder, widgetShadow } from '../../theme/common/colorRegistry.js';\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\nimport { IQuickInputOptions, IQuickInputStyles, QuickInputHoverDelegate } from './quickInput.js';\nimport { QuickInputController, IQuickInputControllerHost } from './quickInputController.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { getWindow } from '../../../base/browser/dom.js';\n\nexport class QuickInputService extends Themable implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onShow = this._register(new Emitter<void>());\n\n\tprivate readonly _onHide = this._register(new Emitter<void>());\n\n\tprivate _controller: QuickInputController | undefined;\n\tprivate get controller(): QuickInputController {\n\t\tif (!this._controller) {\n\t\t\tthis._controller = this._register(this.createController());\n\t\t}\n\n\t\treturn this._controller;\n\t}\n\n\tprivate get hasController() { return !!this._controller; }\n\tget currentQuickInput() { return this.controller.currentQuickInput; }\n\n\tprivate _quickAccess: IQuickAccessController | undefined;\n\tget quickAccess(): IQuickAccessController {\n\t\tif (!this._quickAccess) {\n\t\t\tthis._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n\t\t}\n\n\t\treturn this._quickAccess;\n\t}\n\n\tprivate readonly contexts = new Map<string, IContextKey<boolean>>();\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILayoutService protected readonly layoutService: ILayoutService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper(themeService);\n\t}\n\n\tprotected createController(host: IQuickInputControllerHost = this.layoutService, options?: Partial<IQuickInputOptions>): QuickInputController {\n\t\tconst defaultOptions: IQuickInputOptions = {\n\t\t\tidPrefix: 'quickInput_',\n\t\t\tcontainer: host.activeContainer,\n\t\t\tignoreFocusOut: () => false,\n\t\t\tbackKeybindingLabel: () => undefined,\n\t\t\tsetContextKey: (id?: string) => this.setContextKey(id),\n\t\t\tlinkOpenerDelegate: (content) => {\n\t\t\t\t// HACK: https://github.com/microsoft/vscode/issues/173691\n\t\t\t\tthis.instantiationService.invokeFunction(accessor => {\n\t\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\t\topenerService.open(content, { allowCommands: true, fromUserGesture: true });\n\t\t\t\t});\n\t\t\t},\n\t\t\treturnFocus: () => host.focus(),\n\t\t\tstyles: this.computeStyles(),\n\t\t\thoverDelegate: this._register(this.instantiationService.createInstance(QuickInputHoverDelegate))\n\t\t};\n\n\t\tconst controller = this._register(this.instantiationService.createInstance(\n\t\t\tQuickInputController,\n\t\t\t{\n\t\t\t\t...defaultOptions,\n\t\t\t\t...options\n\t\t\t}\n\t\t));\n\n\t\tcontroller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n\n\t\t// Layout changes\n\t\tthis._register(host.onDidLayoutActiveContainer(dimension => {\n\t\t\tif (getWindow(host.activeContainer) === getWindow(controller.container)) {\n\t\t\t\tcontroller.layout(dimension, host.activeContainerOffset.quickPickTop);\n\t\t\t}\n\t\t}));\n\t\tthis._register(host.onDidChangeActiveContainer(() => {\n\t\t\tif (controller.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n\t\t}));\n\n\t\t// Context keys\n\t\tthis._register(controller.onShow(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onShow.fire();\n\t\t}));\n\t\tthis._register(controller.onHide(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onHide.fire();\n\t\t}));\n\n\t\treturn controller;\n\t}\n\n\tprivate setContextKey(id?: string) {\n\t\tlet key: IContextKey<boolean> | undefined;\n\t\tif (id) {\n\t\t\tkey = this.contexts.get(id);\n\t\t\tif (!key) {\n\t\t\t\tkey = new RawContextKey<boolean>(id, false)\n\t\t\t\t\t.bindTo(this.contextKeyService);\n\t\t\t\tthis.contexts.set(id, key);\n\t\t\t}\n\t\t}\n\n\t\tif (key && key.get()) {\n\t\t\treturn; // already active context\n\t\t}\n\n\t\tthis.resetContextKeys();\n\n\t\tkey?.set(true);\n\t}\n\n\tprivate resetContextKeys() {\n\t\tthis.contexts.forEach(context => {\n\t\t\tif (context.get()) {\n\t\t\t\tcontext.reset();\n\t\t\t}\n\t\t});\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: O, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn this.controller.pick(picks, options, token);\n\t}\n\n\tinput(options: IInputOptions = {}, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\t\treturn this.controller.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: boolean } = { useSeparators: false }): IQuickPick<T, { useSeparators: boolean }> {\n\t\treturn this.controller.createQuickPick(options);\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.controller.createInputBox();\n\t}\n\n\ttoggleHover(): void {\n\t\tif (this.hasController) {\n\t\t\tthis.controller.toggleHover();\n\t\t}\n\t}\n\n\toverride updateStyles() {\n\t\tif (this.hasController) {\n\t\t\tthis.controller.applyStyles(this.computeStyles());\n\t\t}\n\t}\n\n\tprivate computeStyles(): IQuickInputStyles {\n\t\treturn {\n\t\t\twidget: {\n\t\t\t\tquickInputBackground: asCssVariable(quickInputBackground),\n\t\t\t\tquickInputForeground: asCssVariable(quickInputForeground),\n\t\t\t\tquickInputTitleBackground: asCssVariable(quickInputTitleBackground),\n\t\t\t\twidgetBorder: asCssVariable(widgetBorder),\n\t\t\t\twidgetShadow: asCssVariable(widgetShadow),\n\t\t\t},\n\t\t\tinputBox: defaultInputBoxStyles,\n\t\t\ttoggle: defaultToggleStyles,\n\t\t\tcountBadge: defaultCountBadgeStyles,\n\t\t\tbutton: defaultButtonStyles,\n\t\t\tprogressBar: defaultProgressBarStyles,\n\t\t\tkeybindingLabel: defaultKeybindingLabelStyles,\n\t\t\tlist: getListStyles({\n\t\t\t\tlistBackground: quickInputBackground,\n\t\t\t\tlistFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusForeground: quickInputListFocusForeground,\n\t\t\t\t// Look like focused when inactive.\n\t\t\t\tlistInactiveFocusForeground: quickInputListFocusForeground,\n\t\t\t\tlistInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n\t\t\t\tlistInactiveFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusOutline: activeContrastBorder,\n\t\t\t\tlistInactiveFocusOutline: activeContrastBorder,\n\t\t\t\ttreeStickyScrollBackground: quickInputBackground,\n\t\t\t}),\n\t\t\tpickerGroup: {\n\t\t\t\tpickerGroupBorder: asCssVariable(pickerGroupBorder),\n\t\t\t\tpickerGroupForeground: asCssVariable(pickerGroupForeground),\n\t\t\t}\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { IOpenerService } from '../../opener/common/opener.js';\nimport { QuickAccessController } from './quickAccess.js';\nimport { IQuickAccessController } from '../common/quickAccess.js';\nimport { IInputBox, IInputOptions, IPickOptions, IQuickInputService, IQuickPick, IQuickPickItem, QuickPickInput } from '../common/quickInput.js';\nimport { defaultButtonStyles, defaultCountBadgeStyles, defaultInputBoxStyles, defaultKeybindingLabelStyles, defaultProgressBarStyles, defaultToggleStyles, getListStyles } from '../../theme/browser/defaultStyles.js';\nimport { activeContrastBorder, asCssVariable, pickerGroupBorder, pickerGroupForeground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetBorder, widgetShadow } from '../../theme/common/colorRegistry.js';\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\nimport { IQuickInputOptions, IQuickInputStyles, QuickInputHoverDelegate } from './quickInput.js';\nimport { QuickInputController, IQuickInputControllerHost } from './quickInputController.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { getWindow } from '../../../base/browser/dom.js';\n\nexport class QuickInputService extends Themable implements IQuickInputService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onShow = this._register(new Emitter<void>());\n\n\tprivate readonly _onHide = this._register(new Emitter<void>());\n\n\tprivate _controller: QuickInputController | undefined;\n\tprivate get controller(): QuickInputController {\n\t\tif (!this._controller) {\n\t\t\tthis._controller = this._register(this.createController());\n\t\t}\n\n\t\treturn this._controller;\n\t}\n\n\tprivate get hasController() { return !!this._controller; }\n\tget currentQuickInput() { return this.controller.currentQuickInput; }\n\n\tprivate _quickAccess: IQuickAccessController | undefined;\n\tget quickAccess(): IQuickAccessController {\n\t\tif (!this._quickAccess) {\n\t\t\tthis._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n\t\t}\n\n\t\treturn this._quickAccess;\n\t}\n\n\tprivate readonly contexts = new Map<string, IContextKey<boolean>>();\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IContextKeyService protected readonly contextKeyService: IContextKeyService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ILayoutService protected readonly layoutService: ILayoutService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper(themeService);\n\t}\n\n\tprotected createController(host: IQuickInputControllerHost = this.layoutService, options?: Partial<IQuickInputOptions>): QuickInputController {\n\t\tconst defaultOptions: IQuickInputOptions = {\n\t\t\tidPrefix: 'quickInput_',\n\t\t\tcontainer: host.activeContainer,\n\t\t\tignoreFocusOut: () => false,\n\t\t\tbackKeybindingLabel: () => undefined,\n\t\t\tsetContextKey: (id?: string) => this.setContextKey(id),\n\t\t\tlinkOpenerDelegate: (content) => {\n\t\t\t\t// HACK: https://github.com/microsoft/vscode/issues/173691\n\t\t\t\tthis.instantiationService.invokeFunction(accessor => {\n\t\t\t\t\tconst openerService = accessor.get(IOpenerService);\n\t\t\t\t\topenerService.open(content, { allowCommands: true, fromUserGesture: true });\n\t\t\t\t});\n\t\t\t},\n\t\t\treturnFocus: () => host.focus(),\n\t\t\tstyles: this.computeStyles(),\n\t\t\thoverDelegate: this._register(this.instantiationService.createInstance(QuickInputHoverDelegate))\n\t\t};\n\n\t\tconst controller = this._register(this.instantiationService.createInstance(\n\t\t\tQuickInputController,\n\t\t\t{\n\t\t\t\t...defaultOptions,\n\t\t\t\t...options\n\t\t\t}\n\t\t));\n\n\t\tcontroller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n\n\t\t// Layout changes\n\t\tthis._register(host.onDidLayoutActiveContainer(dimension => {\n\t\t\tif (getWindow(host.activeContainer) === getWindow(controller.container)) {\n\t\t\t\tcontroller.layout(dimension, host.activeContainerOffset.quickPickTop);\n\t\t\t}\n\t\t}));\n\t\tthis._register(host.onDidChangeActiveContainer(() => {\n\t\t\tif (controller.isVisible()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcontroller.layout(host.activeContainerDimension, host.activeContainerOffset.quickPickTop);\n\t\t}));\n\n\t\t// Context keys\n\t\tthis._register(controller.onShow(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onShow.fire();\n\t\t}));\n\t\tthis._register(controller.onHide(() => {\n\t\t\tthis.resetContextKeys();\n\t\t\tthis._onHide.fire();\n\t\t}));\n\n\t\treturn controller;\n\t}\n\n\tprivate setContextKey(id?: string) {\n\t\tlet key: IContextKey<boolean> | undefined;\n\t\tif (id) {\n\t\t\tkey = this.contexts.get(id);\n\t\t\tif (!key) {\n\t\t\t\tkey = new RawContextKey<boolean>(id, false)\n\t\t\t\t\t.bindTo(this.contextKeyService);\n\t\t\t\tthis.contexts.set(id, key);\n\t\t\t}\n\t\t}\n\n\t\tif (key && key.get()) {\n\t\t\treturn; // already active context\n\t\t}\n\n\t\tthis.resetContextKeys();\n\n\t\tkey?.set(true);\n\t}\n\n\tprivate resetContextKeys() {\n\t\tthis.contexts.forEach(context => {\n\t\t\tif (context.get()) {\n\t\t\t\tcontext.reset();\n\t\t\t}\n\t\t});\n\t}\n\n\tpick<T extends IQuickPickItem, O extends IPickOptions<T>>(picks: Promise<QuickPickInput<T>[]> | QuickPickInput<T>[], options?: O, token: CancellationToken = CancellationToken.None): Promise<(O extends { canPickMany: true } ? T[] : T) | undefined> {\n\t\treturn this.controller.pick(picks, options, token);\n\t}\n\n\tinput(options: IInputOptions = {}, token: CancellationToken = CancellationToken.None): Promise<string | undefined> {\n\t\treturn this.controller.input(options, token);\n\t}\n\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: true }): IQuickPick<T, { useSeparators: true }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options?: { useSeparators: boolean }): IQuickPick<T, { useSeparators: false }>;\n\tcreateQuickPick<T extends IQuickPickItem>(options: { useSeparators: boolean } = { useSeparators: false }): IQuickPick<T, { useSeparators: boolean }> {\n\t\treturn this.controller.createQuickPick(options);\n\t}\n\n\tcreateInputBox(): IInputBox {\n\t\treturn this.controller.createInputBox();\n\t}\n\n\ttoggleHover(): void {\n\t\tif (this.hasController) {\n\t\t\tthis.controller.toggleHover();\n\t\t}\n\t}\n\n\toverride updateStyles() {\n\t\tif (this.hasController) {\n\t\t\tthis.controller.applyStyles(this.computeStyles());\n\t\t}\n\t}\n\n\tprivate computeStyles(): IQuickInputStyles {\n\t\treturn {\n\t\t\twidget: {\n\t\t\t\tquickInputBackground: asCssVariable(quickInputBackground),\n\t\t\t\tquickInputForeground: asCssVariable(quickInputForeground),\n\t\t\t\tquickInputTitleBackground: asCssVariable(quickInputTitleBackground),\n\t\t\t\twidgetBorder: asCssVariable(widgetBorder),\n\t\t\t\twidgetShadow: asCssVariable(widgetShadow),\n\t\t\t},\n\t\t\tinputBox: defaultInputBoxStyles,\n\t\t\ttoggle: defaultToggleStyles,\n\t\t\tcountBadge: defaultCountBadgeStyles,\n\t\t\tbutton: defaultButtonStyles,\n\t\t\tprogressBar: defaultProgressBarStyles,\n\t\t\tkeybindingLabel: defaultKeybindingLabelStyles,\n\t\t\tlist: getListStyles({\n\t\t\t\tlistBackground: quickInputBackground,\n\t\t\t\tlistFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusForeground: quickInputListFocusForeground,\n\t\t\t\t// Look like focused when inactive.\n\t\t\t\tlistInactiveFocusForeground: quickInputListFocusForeground,\n\t\t\t\tlistInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n\t\t\t\tlistInactiveFocusBackground: quickInputListFocusBackground,\n\t\t\t\tlistFocusOutline: activeContrastBorder,\n\t\t\t\tlistInactiveFocusOutline: activeContrastBorder,\n\t\t\t\ttreeStickyScrollBackground: quickInputBackground,\n\t\t\t}),\n\t\t\tpickerGroup: {\n\t\t\t\tpickerGroupBorder: asCssVariable(pickerGroupBorder),\n\t\t\t\tpickerGroupForeground: asCssVariable(pickerGroupForeground),\n\t\t\t}\n\t\t};\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;AAEhG,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AACzE,OAAO,EAAE,OAAO,EAAE,MAAM,+BAA+B,CAAC;AACxD,OAAO,EAAe,kBAAkB,EAAE,aAAa,EAAE,MAAM,uCAAuC,CAAC;AACvG,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAC;AACpF,OAAO,EAAE,cAAc,EAAE,MAAM,uCAAuC,CAAC;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAC/D,OAAO,EAAE,qBAAqB,EAAE,MAAM,kBAAkB,CAAC;AAGzD,OAAO,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,4BAA4B,EAAE,wBAAwB,EAAE,mBAAmB,EAAE,aAAa,EAAE,MAAM,sCAAsC,CAAC;;;;;AACvN,OAAO,EAAE,oBAAoB,EAAE,aAAa,EAAE,iBAAiB,EAAE,qBAAqB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,6BAA6B,EAAE,6BAA6B,EAAE,iCAAiC,EAAE,yBAAyB,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,qCAAqC,CAAC;AACxU,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;AAC7E,OAAO,EAAyC,uBAAuB,EAAE,MAAM,iBAAiB,CAAC;AACjG,OAAO,EAAE,oBAAoB,EAA6B,MAAM,2BAA2B,CAAC;AAC5F,OAAO,EAAE,qBAAqB,EAAE,MAAM,6CAA6C,CAAC;AACpF,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AAElD,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,wMAAQ;IAS9C,IAAY,UAAU,GAAA;QACrB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;IACzB,CAAC;IAED,IAAY,aAAa,GAAA;QAAK,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAAC,CAAC;IAC1D,IAAI,iBAAiB,GAAA;QAAK,OAAO,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC;IAAC,CAAC;IAGrE,IAAI,WAAW,GAAA;QACd,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,0NAAqB,CAAC,CAAC,CAAC;QACrG,CAAC;QAED,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IAID,YACwB,oBAA4D,EAC/D,iBAAwD,EAC7D,YAA2B,EAC1B,aAAgD,EACzC,oBAA8D,CAAA;QAErF,KAAK,CAAC,YAAY,CAAC,CAAC;QANoB,IAAA,CAAA,oBAAoB,GAApB,oBAAoB,CAAuB;QAC5C,IAAA,CAAA,iBAAiB,GAAjB,iBAAiB,CAAoB;QAEzC,IAAA,CAAA,aAAa,GAAb,aAAa,CAAgB;QACtB,IAAA,CAAA,oBAAoB,GAApB,oBAAoB,CAAuB;QAhCrE,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,mLAAO,EAAQ,CAAC,CAAC;QAE9C,IAAA,CAAA,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,mLAAO,EAAQ,CAAC,CAAC;QAuB9C,IAAA,CAAA,QAAQ,GAAG,IAAI,GAAG,EAAgC,CAAC;IAUpE,CAAC;IAES,gBAAgB,CAAC,OAAkC,IAAI,CAAC,aAAa,EAAE,OAAqC,EAAA;QACrH,MAAM,cAAc,GAAuB;YAC1C,QAAQ,EAAE,aAAa;YACvB,SAAS,EAAE,IAAI,CAAC,eAAe;YAC/B,cAAc,EAAE,GAAG,CAAG,CAAD,IAAM;YAC3B,mBAAmB,EAAE,GAAG,CAAG,CAAD,QAAU;YACpC,aAAa,EAAE,CAAC,EAAW,EAAE,CAAG,CAAD,GAAK,CAAC,aAAa,CAAC,EAAE,CAAC;YACtD,kBAAkB,EAAE,CAAC,OAAO,EAAE,EAAE;gBAC/B,0DAA0D;gBAC1D,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAC,QAAQ,CAAC,EAAE;oBACnD,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,yMAAc,CAAC,CAAC;oBACnD,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE;wBAAE,aAAa,EAAE,IAAI;wBAAE,eAAe,EAAE,IAAI;oBAAA,CAAE,CAAC,CAAC;gBAC7E,CAAC,CAAC,CAAC;YACJ,CAAC;YACD,WAAW,EAAE,GAAG,CAAG,CAAD,GAAK,CAAC,KAAK,EAAE;YAC/B,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE;YAC5B,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,2NAAuB,CAAC,CAAC;SAChG,CAAC;QAEF,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,CACzE,kOAAoB,EACpB;YACC,GAAG,cAAc;YACjB,GAAG,OAAO;SACV,CACD,CAAC,CAAC;QAEH,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAE1F,iBAAiB;QACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,EAAC,SAAS,CAAC,EAAE;YAC1D,QAAI,oLAAS,EAAC,IAAI,CAAC,eAAe,CAAC,KAAK,wLAAS,EAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACzE,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;YACvE,CAAC;QACF,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,EAAE;YACnD,IAAI,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC;gBAC5B,OAAO;YACR,CAAC;YAED,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAC3F,CAAC,CAAC,CAAC,CAAC;QAEJ,eAAe;QACf,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC,CAAC;QAEJ,OAAO,UAAU,CAAC;IACnB,CAAC;IAEO,aAAa,CAAC,EAAW,EAAA;QAChC,IAAI,GAAqC,CAAC;QAC1C,IAAI,EAAE,EAAE,CAAC;YACR,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAC5B,IAAI,CAAC,GAAG,EAAE,CAAC;gBACV,GAAG,GAAG,IAAI,gNAAa,CAAU,EAAE,EAAE,KAAK,CAAC,CACzC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACjC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;YAC5B,CAAC;QACF,CAAC;QAED,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC;YACtB,OAAO,CAAC,yBAAyB;QAClC,CAAC;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IAChB,CAAC;IAEO,gBAAgB,GAAA;QACvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC/B,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;gBACnB,OAAO,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,IAAI,CAAsD,KAAyD,EAAE,OAAW,EAAE,QAA2B,oMAAiB,CAAC,IAAI,EAAA;QAClL,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;IAED,KAAK,CAAC,UAAyB,CAAA,CAAE,EAAE,QAA2B,oMAAiB,CAAC,IAAI,EAAA;QACnF,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC9C,CAAC;IAID,eAAe,CAA2B,UAAsC;QAAE,aAAa,EAAE,KAAK;IAAA,CAAE,EAAA;QACvG,OAAO,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,cAAc,GAAA;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAED,WAAW,GAAA;QACV,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QAC/B,CAAC;IACF,CAAC;IAEQ,YAAY,GAAA;QACpB,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QACnD,CAAC;IACF,CAAC;IAEO,aAAa,GAAA;QACpB,OAAO;YACN,MAAM,EAAE;gBACP,oBAAoB,MAAE,2MAAa,EAAC,iOAAoB,CAAC;gBACzD,oBAAoB,MAAE,2MAAa,EAAC,iOAAoB,CAAC;gBACzD,yBAAyB,MAAE,2MAAa,EAAC,sOAAyB,CAAC;gBACnE,YAAY,MAAE,2MAAa,EAAC,sNAAY,CAAC;gBACzC,YAAY,MAAE,2MAAa,EAAC,sNAAY,CAAC;aACzC;YACD,QAAQ,EAAE,uNAAqB;YAC/B,MAAM,EAAE,qNAAmB;YAC3B,UAAU,EAAE,yNAAuB;YACnC,MAAM,EAAE,qNAAmB;YAC3B,WAAW,EAAE,0NAAwB;YACrC,eAAe,EAAE,8NAA4B;YAC7C,IAAI,MAAE,+MAAa,EAAC;gBACnB,cAAc,EAAE,iOAAoB;gBACpC,mBAAmB,EAAE,0OAA6B;gBAClD,mBAAmB,EAAE,0OAA6B;gBAClD,mCAAmC;gBACnC,2BAA2B,EAAE,0OAA6B;gBAC1D,mCAAmC,EAAE,8OAAiC;gBACtE,2BAA2B,EAAE,0OAA6B;gBAC1D,gBAAgB,EAAE,4NAAoB;gBACtC,wBAAwB,EAAE,4NAAoB;gBAC9C,0BAA0B,EAAE,iOAAoB;aAChD,CAAC;YACF,WAAW,EAAE;gBACZ,iBAAiB,MAAE,2MAAa,EAAC,8NAAiB,CAAC;gBACnD,qBAAqB,MAAE,2MAAa,EAAC,kOAAqB,CAAC;aAC3D;SACD,CAAC;IACH,CAAC;CACD,CAAA;AA5LY,iBAAiB,GAAA,WAAA;IAgC3B,QAAA,GAAA,8NAAqB,CAAA;IACrB,QAAA,GAAA,qNAAkB,CAAA;IAClB,QAAA,GAAA,6MAAa,CAAA;IACb,QAAA,GAAA,iNAAc,CAAA;IACd,QAAA,GAAA,8NAAqB,CAAA;GApCX,iBAAiB,CA4L7B","debugId":null}}]
}