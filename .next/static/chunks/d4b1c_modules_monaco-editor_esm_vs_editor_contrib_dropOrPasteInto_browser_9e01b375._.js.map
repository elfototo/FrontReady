{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/defaultProviders.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { IReadonlyVSDataTransfer, UriList } from '../../../../base/common/dataTransfer.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { localize } from '../../../../nls.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { IRange } from '../../../common/core/range.js';\nimport { DocumentDropEditProvider, DocumentDropEditsSession, DocumentPasteContext, DocumentPasteEdit, DocumentPasteEditProvider, DocumentPasteEditsSession, DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { LanguageFilter } from '../../../common/languageSelector.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\n\n\nabstract class SimplePasteAndDropProvider implements DocumentDropEditProvider, DocumentPasteEditProvider {\n\n\treadonly kind: HierarchicalKind;\n\treadonly providedDropEditKinds: HierarchicalKind[];\n\treadonly providedPasteEditKinds: HierarchicalKind[];\n\n\tabstract readonly dropMimeTypes: readonly string[] | undefined;\n\treadonly copyMimeTypes = [];\n\tabstract readonly pasteMimeTypes: readonly string[];\n\n\tconstructor(kind: HierarchicalKind) {\n\t\tthis.kind = kind;\n\t\tthis.providedDropEditKinds = [this.kind];\n\t\tthis.providedPasteEditKinds = [this.kind];\n\t}\n\n\tasync provideDocumentPasteEdits(_model: ITextModel, _ranges: readonly IRange[], dataTransfer: IReadonlyVSDataTransfer, context: DocumentPasteContext, token: CancellationToken): Promise<DocumentPasteEditsSession | undefined> {\n\t\tconst edit = await this.getEdit(dataTransfer, token);\n\t\tif (!edit) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn {\n\t\t\tedits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }],\n\t\t\tdispose() { },\n\t\t};\n\t}\n\n\tasync provideDocumentDropEdits(_model: ITextModel, _position: IPosition, dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentDropEditsSession | undefined> {\n\t\tconst edit = await this.getEdit(dataTransfer, token);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\t\treturn {\n\t\t\tedits: [{ insertText: edit.insertText, title: edit.title, kind: edit.kind, handledMimeType: edit.handledMimeType, yieldTo: edit.yieldTo }],\n\t\t\tdispose() { },\n\t\t};\n\t}\n\n\tprotected abstract getEdit(dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined>;\n}\n\nexport class DefaultTextPasteOrDropEditProvider extends SimplePasteAndDropProvider {\n\n\tstatic readonly id = 'text';\n\n\treadonly id = DefaultTextPasteOrDropEditProvider.id;\n\treadonly dropMimeTypes = [Mimes.text];\n\treadonly pasteMimeTypes = [Mimes.text];\n\n\tconstructor() {\n\t\tsuper(HierarchicalKind.Empty.append('text', 'plain'));\n\t}\n\n\tprotected async getEdit(dataTransfer: IReadonlyVSDataTransfer, _token: CancellationToken): Promise<DocumentPasteEdit | undefined> {\n\t\tconst textEntry = dataTransfer.get(Mimes.text);\n\t\tif (!textEntry) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Suppress if there's also a uriList entry.\n\t\t// Typically the uri-list contains the same text as the text entry so showing both is confusing.\n\t\tif (dataTransfer.has(Mimes.uriList)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst insertText = await textEntry.asString();\n\t\treturn {\n\t\t\thandledMimeType: Mimes.text,\n\t\t\ttitle: localize('text.label', \"Insert Plain Text\"),\n\t\t\tinsertText,\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass PathProvider extends SimplePasteAndDropProvider {\n\n\treadonly dropMimeTypes = [Mimes.uriList];\n\treadonly pasteMimeTypes = [Mimes.uriList];\n\n\tconstructor() {\n\t\tsuper(HierarchicalKind.Empty.append('uri', 'path', 'absolute'));\n\t}\n\n\tprotected async getEdit(dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined> {\n\t\tconst entries = await extractUriList(dataTransfer);\n\t\tif (!entries.length || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet uriCount = 0;\n\t\tconst insertText = entries\n\t\t\t.map(({ uri, originalText }) => {\n\t\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\t\treturn uri.fsPath;\n\t\t\t\t} else {\n\t\t\t\t\turiCount++;\n\t\t\t\t\treturn originalText;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.join(' ');\n\n\t\tlet label: string;\n\t\tif (uriCount > 0) {\n\t\t\t// Dropping at least one generic uri (such as https) so use most generic label\n\t\t\tlabel = entries.length > 1\n\t\t\t\t? localize('defaultDropProvider.uriList.uris', \"Insert Uris\")\n\t\t\t\t: localize('defaultDropProvider.uriList.uri', \"Insert Uri\");\n\t\t} else {\n\t\t\t// All the paths are file paths\n\t\t\tlabel = entries.length > 1\n\t\t\t\t? localize('defaultDropProvider.uriList.paths', \"Insert Paths\")\n\t\t\t\t: localize('defaultDropProvider.uriList.path', \"Insert Path\");\n\t\t}\n\n\t\treturn {\n\t\t\thandledMimeType: Mimes.uriList,\n\t\t\tinsertText,\n\t\t\ttitle: label,\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass RelativePathProvider extends SimplePasteAndDropProvider {\n\n\treadonly dropMimeTypes = [Mimes.uriList];\n\treadonly pasteMimeTypes = [Mimes.uriList];\n\n\tconstructor(\n\t\t@IWorkspaceContextService private readonly _workspaceContextService: IWorkspaceContextService\n\t) {\n\t\tsuper(HierarchicalKind.Empty.append('uri', 'path', 'relative'));\n\t}\n\n\tprotected async getEdit(dataTransfer: IReadonlyVSDataTransfer, token: CancellationToken): Promise<DocumentPasteEdit | undefined> {\n\t\tconst entries = await extractUriList(dataTransfer);\n\t\tif (!entries.length || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst relativeUris = coalesce(entries.map(({ uri }) => {\n\t\t\tconst root = this._workspaceContextService.getWorkspaceFolder(uri);\n\t\t\treturn root ? relativePath(root.uri, uri) : undefined;\n\t\t}));\n\n\t\tif (!relativeUris.length) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\thandledMimeType: Mimes.uriList,\n\t\t\tinsertText: relativeUris.join(' '),\n\t\t\ttitle: entries.length > 1\n\t\t\t\t? localize('defaultDropProvider.uriList.relativePaths', \"Insert Relative Paths\")\n\t\t\t\t: localize('defaultDropProvider.uriList.relativePath', \"Insert Relative Path\"),\n\t\t\tkind: this.kind,\n\t\t};\n\t}\n}\n\nclass PasteHtmlProvider implements DocumentPasteEditProvider {\n\n\tpublic readonly kind = new HierarchicalKind('html');\n\tpublic readonly providedPasteEditKinds = [this.kind];\n\n\tpublic readonly copyMimeTypes = [];\n\tpublic readonly pasteMimeTypes = ['text/html'];\n\n\tprivate readonly _yieldTo = [{ mimeType: Mimes.text }];\n\n\tasync provideDocumentPasteEdits(_model: ITextModel, _ranges: readonly IRange[], dataTransfer: IReadonlyVSDataTransfer, context: DocumentPasteContext, token: CancellationToken): Promise<DocumentPasteEditsSession | undefined> {\n\t\tif (context.triggerKind !== DocumentPasteTriggerKind.PasteAs && !context.only?.contains(this.kind)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst entry = dataTransfer.get('text/html');\n\t\tconst htmlText = await entry?.asString();\n\t\tif (!htmlText || token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tdispose() { },\n\t\t\tedits: [{\n\t\t\t\tinsertText: htmlText,\n\t\t\t\tyieldTo: this._yieldTo,\n\t\t\t\ttitle: localize('pasteHtmlLabel', 'Insert HTML'),\n\t\t\t\tkind: this.kind,\n\t\t\t}],\n\t\t};\n\t}\n}\n\nasync function extractUriList(dataTransfer: IReadonlyVSDataTransfer): Promise<{ readonly uri: URI; readonly originalText: string }[]> {\n\tconst urlListEntry = dataTransfer.get(Mimes.uriList);\n\tif (!urlListEntry) {\n\t\treturn [];\n\t}\n\n\tconst strUriList = await urlListEntry.asString();\n\tconst entries: { readonly uri: URI; readonly originalText: string }[] = [];\n\tfor (const entry of UriList.parse(strUriList)) {\n\t\ttry {\n\t\t\tentries.push({ uri: URI.parse(entry), originalText: entry });\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t}\n\treturn entries;\n}\n\nconst genericLanguageSelector: LanguageFilter = { scheme: '*', hasAccessToAllModels: true };\n\nexport class DefaultDropProvidersFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.documentDropEditProvider.register(genericLanguageSelector, new DefaultTextPasteOrDropEditProvider()));\n\t\tthis._register(languageFeaturesService.documentDropEditProvider.register(genericLanguageSelector, new PathProvider()));\n\t\tthis._register(languageFeaturesService.documentDropEditProvider.register(genericLanguageSelector, new RelativePathProvider(workspaceContextService)));\n\t}\n}\n\nexport class DefaultPasteProvidersFeature extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IWorkspaceContextService workspaceContextService: IWorkspaceContextService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register(genericLanguageSelector, new DefaultTextPasteOrDropEditProvider()));\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register(genericLanguageSelector, new PathProvider()));\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register(genericLanguageSelector, new RelativePathProvider(workspaceContextService)));\n\t\tthis._register(languageFeaturesService.documentPasteEditProvider.register(genericLanguageSelector, new PasteHtmlProvider()));\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/edit.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/dropOrPasteInto/browser/edit.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/edit.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { DocumentDropEdit, DocumentPasteEdit, DropYieldTo, WorkspaceEdit } from '../../../common/languages.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\n\n/**\n * Given a {@link DropOrPasteEdit} and set of ranges, creates a {@link WorkspaceEdit} that applies the insert text from\n * the {@link DropOrPasteEdit} at each range plus any additional edits.\n */\nexport function createCombinedWorkspaceEdit(uri: URI, ranges: readonly Range[], edit: DocumentPasteEdit | DocumentDropEdit): WorkspaceEdit {\n\t// If the edit insert text is empty, skip applying at each range\n\tif (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n\t\treturn {\n\t\t\tedits: edit.additionalEdit?.edits ?? []\n\t\t};\n\t}\n\n\treturn {\n\t\tedits: [\n\t\t\t...ranges.map(range =>\n\t\t\t\tnew ResourceTextEdit(uri,\n\t\t\t\t\t{ range, text: typeof edit.insertText === 'string' ? SnippetParser.escape(edit.insertText) + '$0' : edit.insertText.snippet, insertAsSnippet: true }\n\t\t\t\t)),\n\t\t\t...(edit.additionalEdit?.edits ?? [])\n\t\t]\n\t};\n}\n\nexport function sortEditsByYieldTo<T extends {\n\treadonly kind: HierarchicalKind | undefined;\n\treadonly handledMimeType?: string;\n\treadonly yieldTo?: readonly DropYieldTo[];\n}>(edits: readonly T[]): T[] {\n\tfunction yieldsTo(yTo: DropYieldTo, other: T): boolean {\n\t\tif ('mimeType' in yTo) {\n\t\t\treturn yTo.mimeType === other.handledMimeType;\n\t\t}\n\t\treturn !!other.kind && yTo.kind.contains(other.kind);\n\t}\n\n\t// Build list of nodes each node yields to\n\tconst yieldsToMap = new Map<T, T[]>();\n\tfor (const edit of edits) {\n\t\tfor (const yTo of edit.yieldTo ?? []) {\n\t\t\tfor (const other of edits) {\n\t\t\t\tif (other === edit) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (yieldsTo(yTo, other)) {\n\t\t\t\t\tlet arr = yieldsToMap.get(edit);\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\tarr = [];\n\t\t\t\t\t\tyieldsToMap.set(edit, arr);\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(other);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!yieldsToMap.size) {\n\t\treturn Array.from(edits);\n\t}\n\n\t// Topological sort\n\tconst visited = new Set<T>();\n\tconst tempStack: T[] = [];\n\n\tfunction visit(nodes: T[]): T[] {\n\t\tif (!nodes.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst node = nodes[0];\n\t\tif (tempStack.includes(node)) {\n\t\t\tconsole.warn('Yield to cycle detected', node);\n\t\t\treturn nodes;\n\t\t}\n\n\t\tif (visited.has(node)) {\n\t\t\treturn visit(nodes.slice(1));\n\t\t}\n\n\t\tlet pre: T[] = [];\n\t\tconst yTo = yieldsToMap.get(node);\n\t\tif (yTo) {\n\t\t\ttempStack.push(node);\n\t\t\tpre = visit(yTo);\n\t\t\ttempStack.pop();\n\t\t}\n\n\t\tvisited.add(node);\n\n\t\treturn [...pre, node, ...visit(nodes.slice(1))];\n\t}\n\n\treturn visit(Array.from(edits));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from '../../../../base/common/uri.js';\nimport { ResourceTextEdit } from '../../../browser/services/bulkEditService.js';\nimport { DocumentDropEdit, DocumentPasteEdit, DropYieldTo, WorkspaceEdit } from '../../../common/languages.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\n\n/**\n * Given a {@link DropOrPasteEdit} and set of ranges, creates a {@link WorkspaceEdit} that applies the insert text from\n * the {@link DropOrPasteEdit} at each range plus any additional edits.\n */\nexport function createCombinedWorkspaceEdit(uri: URI, ranges: readonly Range[], edit: DocumentPasteEdit | DocumentDropEdit): WorkspaceEdit {\n\t// If the edit insert text is empty, skip applying at each range\n\tif (typeof edit.insertText === 'string' ? edit.insertText === '' : edit.insertText.snippet === '') {\n\t\treturn {\n\t\t\tedits: edit.additionalEdit?.edits ?? []\n\t\t};\n\t}\n\n\treturn {\n\t\tedits: [\n\t\t\t...ranges.map(range =>\n\t\t\t\tnew ResourceTextEdit(uri,\n\t\t\t\t\t{ range, text: typeof edit.insertText === 'string' ? SnippetParser.escape(edit.insertText) + '$0' : edit.insertText.snippet, insertAsSnippet: true }\n\t\t\t\t)),\n\t\t\t...(edit.additionalEdit?.edits ?? [])\n\t\t]\n\t};\n}\n\nexport function sortEditsByYieldTo<T extends {\n\treadonly kind: HierarchicalKind | undefined;\n\treadonly handledMimeType?: string;\n\treadonly yieldTo?: readonly DropYieldTo[];\n}>(edits: readonly T[]): T[] {\n\tfunction yieldsTo(yTo: DropYieldTo, other: T): boolean {\n\t\tif ('mimeType' in yTo) {\n\t\t\treturn yTo.mimeType === other.handledMimeType;\n\t\t}\n\t\treturn !!other.kind && yTo.kind.contains(other.kind);\n\t}\n\n\t// Build list of nodes each node yields to\n\tconst yieldsToMap = new Map<T, T[]>();\n\tfor (const edit of edits) {\n\t\tfor (const yTo of edit.yieldTo ?? []) {\n\t\t\tfor (const other of edits) {\n\t\t\t\tif (other === edit) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (yieldsTo(yTo, other)) {\n\t\t\t\t\tlet arr = yieldsToMap.get(edit);\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\tarr = [];\n\t\t\t\t\t\tyieldsToMap.set(edit, arr);\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(other);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!yieldsToMap.size) {\n\t\treturn Array.from(edits);\n\t}\n\n\t// Topological sort\n\tconst visited = new Set<T>();\n\tconst tempStack: T[] = [];\n\n\tfunction visit(nodes: T[]): T[] {\n\t\tif (!nodes.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst node = nodes[0];\n\t\tif (tempStack.includes(node)) {\n\t\t\tconsole.warn('Yield to cycle detected', node);\n\t\t\treturn nodes;\n\t\t}\n\n\t\tif (visited.has(node)) {\n\t\t\treturn visit(nodes.slice(1));\n\t\t}\n\n\t\tlet pre: T[] = [];\n\t\tconst yTo = yieldsToMap.get(node);\n\t\tif (yTo) {\n\t\t\ttempStack.push(node);\n\t\t\tpre = visit(yTo);\n\t\t\ttempStack.pop();\n\t\t}\n\n\t\tvisited.add(node);\n\n\t\treturn [...pre, node, ...visit(nodes.slice(1))];\n\t}\n\n\treturn visit(Array.from(edits));\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;AAGhG,OAAO,EAAE,gBAAgB,EAAE,MAAM,8CAA8C,CAAC;AAGhF,OAAO,EAAE,aAAa,EAAE,MAAM,wCAAwC,CAAC;;;AAOjE,SAAU,2BAA2B,CAAC,GAAQ,EAAE,MAAwB,EAAE,IAA0C;QAcnH,IAAI;IAbV,gEAAgE;IAChE,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,KAAK,EAAE,EAAE,CAAC;;;QACnG,OAAO;YACN,KAAK,8DAAO,cAAc,gFAAE,KAAK,sDAA1B,IAAI,yBAA0B,EAAE;SACvC,CAAC;IACH,CAAC;;IAED,OAAO;QACN,KAAK,EAAE;eACH,MAAM,CAAC,GAAG,EAAC,KAAK,CAAC,EACnB,AADqB,IACjB,wNAAgB,CAAC,GAAG,EACvB;oBAAE,KAAK;oBAAE,IAAI,EAAE,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,6NAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO;oBAAE,eAAe,EAAE,IAAI;gBAAA,CAAE,CACpJ,CAAC;2EACM,cAAc,8EAAE,KAAK,qFAAI,EAAE,CAAC;SACrC;KACD,CAAC;AACH,CAAC;AAEK,SAAU,kBAAkB,CAI/B,KAAmB;IACrB,SAAS,QAAQ,CAAC,GAAgB,EAAE,KAAQ;QAC3C,IAAI,UAAU,IAAI,GAAG,EAAE,CAAC;YACvB,OAAO,GAAG,CAAC,QAAQ,KAAK,KAAK,CAAC,eAAe,CAAC;QAC/C,CAAC;QACD,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,0CAA0C;IAC1C,MAAM,WAAW,GAAG,IAAI,GAAG,EAAU,CAAC;IACtC,KAAK,MAAM,IAAI,IAAI,KAAK,CAAE,CAAC;;QAC1B,KAAK,MAAM,GAAG,IAAI,IAAI,kBAAC,OAAO,yDAAI,EAAE,CAAE,CAAC;YACtC,KAAK,MAAM,KAAK,IAAI,KAAK,CAAE,CAAC;gBAC3B,IAAI,KAAK,KAAK,IAAI,EAAE,CAAC;oBACpB,SAAS;gBACV,CAAC;gBAED,IAAI,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,CAAC;oBAC1B,IAAI,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBAChC,IAAI,CAAC,GAAG,EAAE,CAAC;wBACV,GAAG,GAAG,EAAE,CAAC;wBACT,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;oBAC5B,CAAC;oBACD,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACjB,CAAC;YACF,CAAC;QACF,CAAC;IACF,CAAC;IAED,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QACvB,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IAED,mBAAmB;IACnB,MAAM,OAAO,GAAG,IAAI,GAAG,EAAK,CAAC;IAC7B,MAAM,SAAS,GAAQ,EAAE,CAAC;IAE1B,SAAS,KAAK,CAAC,KAAU;QACxB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;YACnB,OAAO,EAAE,CAAC;QACX,CAAC;QAED,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACtB,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9B,OAAO,CAAC,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,CAAC;YAC9C,OAAO,KAAK,CAAC;QACd,CAAC;QAED,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;QAED,IAAI,GAAG,GAAQ,EAAE,CAAC;QAClB,MAAM,GAAG,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,IAAI,GAAG,EAAE,CAAC;YACT,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YACjB,SAAS,CAAC,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,OAAO,CAAC;eAAG,GAAG;YAAE,IAAI,EAAE;eAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAAC,CAAC;IACjD,CAAC;IAED,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACjC,CAAC","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/postEditWidget.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Button } from '../../../../base/browser/ui/button/button.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { raceCancellationError } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { toErrorMessage } from '../../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport { localize } from '../../../../nls.js';\nimport { ActionListItemKind, IActionListItem } from '../../../../platform/actionWidget/browser/actionList.js';\nimport { IActionWidgetService } from '../../../../platform/actionWidget/browser/actionWidget.js';\nimport { IContextKey, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { ContentWidgetPositionPreference, ICodeEditor, IContentWidget, IContentWidgetPosition } from '../../../browser/editorBrowser.js';\nimport { IBulkEditResult, IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DocumentDropEdit, DocumentPasteEdit } from '../../../common/languages.js';\nimport { TrackedRangeStickiness } from '../../../common/model.js';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { createCombinedWorkspaceEdit } from './edit.js';\nimport './postEditWidget.css';\n\n\ninterface EditSet<Edit extends DocumentPasteEdit | DocumentDropEdit> {\n\treadonly activeEditIndex: number;\n\treadonly allEdits: ReadonlyArray<Edit>;\n}\n\ninterface ShowCommand {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nclass PostEditWidget<T extends DocumentPasteEdit | DocumentDropEdit> extends Disposable implements IContentWidget {\n\tprivate static readonly baseId = 'editor.widget.postEditWidget';\n\n\treadonly allowEditorOverflow = true;\n\treadonly suppressMouseDown = true;\n\n\tprivate domNode!: HTMLElement;\n\tprivate button!: Button;\n\n\tprivate readonly visibleContext: IContextKey<boolean>;\n\n\tconstructor(\n\t\tprivate readonly typeId: string,\n\t\tprivate readonly editor: ICodeEditor,\n\t\tvisibleContext: RawContextKey<boolean>,\n\t\tprivate readonly showCommand: ShowCommand,\n\t\tprivate readonly range: Range,\n\t\tprivate readonly edits: EditSet<T>,\n\t\tprivate readonly onSelectNewEdit: (editIndex: number) => void,\n\t\tprivate readonly additionalActions: readonly IAction[],\n\t\t@IContextKeyService contextKeyService: IContextKeyService,\n\t\t@IKeybindingService private readonly _keybindingService: IKeybindingService,\n\t\t@IActionWidgetService private readonly _actionWidgetService: IActionWidgetService,\n\t) {\n\t\tsuper();\n\n\t\tthis.create();\n\n\t\tthis.visibleContext = visibleContext.bindTo(contextKeyService);\n\t\tthis.visibleContext.set(true);\n\t\tthis._register(toDisposable(() => this.visibleContext.reset()));\n\n\t\tthis.editor.addContentWidget(this);\n\t\tthis.editor.layoutContentWidget(this);\n\n\t\tthis._register(toDisposable((() => this.editor.removeContentWidget(this))));\n\n\t\tthis._register(this.editor.onDidChangeCursorPosition(e => {\n\t\t\tthis.dispose();\n\t\t}));\n\n\t\tthis._register(Event.runAndSubscribe(_keybindingService.onDidUpdateKeybindings, () => {\n\t\t\tthis._updateButtonTitle();\n\t\t}));\n\t}\n\n\tprivate _updateButtonTitle() {\n\t\tconst binding = this._keybindingService.lookupKeybinding(this.showCommand.id)?.getLabel();\n\t\tthis.button.element.title = this.showCommand.label + (binding ? ` (${binding})` : '');\n\t}\n\n\tprivate create(): void {\n\t\tthis.domNode = dom.$('.post-edit-widget');\n\n\t\tthis.button = this._register(new Button(this.domNode, {\n\t\t\tsupportIcons: true,\n\t\t}));\n\t\tthis.button.label = '$(insert)';\n\n\t\tthis._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, () => this.showSelector()));\n\t}\n\n\tgetId(): string {\n\t\treturn PostEditWidget.baseId + '.' + this.typeId;\n\t}\n\n\tgetDomNode(): HTMLElement {\n\t\treturn this.domNode;\n\t}\n\n\tgetPosition(): IContentWidgetPosition | null {\n\t\treturn {\n\t\t\tposition: this.range.getEndPosition(),\n\t\t\tpreference: [ContentWidgetPositionPreference.BELOW]\n\t\t};\n\t}\n\n\tshowSelector() {\n\t\tconst pos = dom.getDomNodePagePosition(this.button.element);\n\t\tconst anchor = { x: pos.left + pos.width, y: pos.top + pos.height };\n\n\t\tthis._actionWidgetService.show('postEditWidget', false,\n\t\t\tthis.edits.allEdits.map((edit, i): IActionListItem<T> => {\n\t\t\t\treturn {\n\t\t\t\t\tkind: ActionListItemKind.Action,\n\t\t\t\t\titem: edit,\n\t\t\t\t\tlabel: edit.title,\n\t\t\t\t\tdisabled: false,\n\t\t\t\t\tcanPreview: false,\n\t\t\t\t\tgroup: { title: '', icon: ThemeIcon.fromId(i === this.edits.activeEditIndex ? Codicon.check.id : Codicon.blank.id) },\n\t\t\t\t};\n\t\t\t}), {\n\t\t\tonHide: () => {\n\t\t\t\tthis.editor.focus();\n\t\t\t},\n\t\t\tonSelect: (item) => {\n\t\t\t\tthis._actionWidgetService.hide(false);\n\n\t\t\t\tconst i = this.edits.allEdits.findIndex(edit => edit === item);\n\t\t\t\tif (i !== this.edits.activeEditIndex) {\n\t\t\t\t\treturn this.onSelectNewEdit(i);\n\t\t\t\t}\n\t\t\t},\n\t\t}, anchor, this.editor.getDomNode() ?? undefined, this.additionalActions);\n\t}\n}\n\nexport class PostEditWidgetManager<T extends DocumentPasteEdit | DocumentDropEdit> extends Disposable {\n\n\tprivate readonly _currentWidget = this._register(new MutableDisposable<PostEditWidget<T>>());\n\n\tconstructor(\n\t\tprivate readonly _id: string,\n\t\tprivate readonly _editor: ICodeEditor,\n\t\tprivate readonly _visibleContext: RawContextKey<boolean>,\n\t\tprivate readonly _showCommand: ShowCommand,\n\t\tprivate readonly _getAdditionalActions: () => readonly IAction[],\n\t\t@IInstantiationService private readonly _instantiationService: IInstantiationService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@INotificationService private readonly _notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(Event.any(\n\t\t\t_editor.onDidChangeModel,\n\t\t\t_editor.onDidChangeModelContent,\n\t\t)(() => this.clear()));\n\t}\n\n\tpublic async applyEditAndShowIfNeeded(ranges: readonly Range[], edits: EditSet<T>, canShowWidget: boolean, resolve: (edit: T, token: CancellationToken) => Promise<T>, token: CancellationToken) {\n\t\tif (!ranges.length || !this._editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst edit = edits.allEdits.at(edits.activeEditIndex);\n\t\tif (!edit) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst onDidSelectEdit = async (newEditIndex: number) => {\n\t\t\tconst model = this._editor.getModel();\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait model.undo();\n\t\t\tthis.applyEditAndShowIfNeeded(ranges, { activeEditIndex: newEditIndex, allEdits: edits.allEdits }, canShowWidget, resolve, token);\n\t\t};\n\n\t\tconst handleError = (e: Error, message: string) => {\n\t\t\tif (isCancellationError(e)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._notificationService.error(message);\n\t\t\tif (canShowWidget) {\n\t\t\t\tthis.show(ranges[0], edits, onDidSelectEdit);\n\t\t\t}\n\t\t};\n\n\t\tconst editorStateCts = new EditorStateCancellationTokenSource(this._editor, CodeEditorStateFlag.Value | CodeEditorStateFlag.Selection, undefined, token);\n\t\tlet resolvedEdit: T;\n\t\ttry {\n\t\t\tresolvedEdit = await raceCancellationError(resolve(edit, editorStateCts.token), editorStateCts.token);\n\t\t} catch (e) {\n\t\t\treturn handleError(e, localize('resolveError', \"Error resolving edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n\t\t} finally {\n\t\t\teditorStateCts.dispose();\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, ranges, resolvedEdit);\n\n\t\t// Use a decoration to track edits around the trigger range\n\t\tconst primaryRange = ranges[0];\n\t\tconst editTrackingDecoration = model.deltaDecorations([], [{\n\t\t\trange: primaryRange,\n\t\t\toptions: { description: 'paste-line-suffix', stickiness: TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges }\n\t\t}]);\n\n\t\tthis._editor.focus();\n\t\tlet editResult: IBulkEditResult;\n\t\tlet editRange: Range | null;\n\t\ttry {\n\t\t\teditResult = await this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor, token });\n\t\t\teditRange = model.getDecorationRange(editTrackingDecoration[0]);\n\t\t} catch (e) {\n\t\t\treturn handleError(e, localize('applyError', \"Error applying edit '{0}':\\n{1}\", edit.title, toErrorMessage(e)));\n\t\t} finally {\n\t\t\tmodel.deltaDecorations(editTrackingDecoration, []);\n\t\t}\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (canShowWidget && editResult.isApplied && edits.allEdits.length > 1) {\n\t\t\tthis.show(editRange ?? primaryRange, edits, onDidSelectEdit);\n\t\t}\n\t}\n\n\tpublic show(range: Range, edits: EditSet<T>, onDidSelectEdit: (newIndex: number) => void) {\n\t\tthis.clear();\n\n\t\tif (this._editor.hasModel()) {\n\t\t\tthis._currentWidget.value = this._instantiationService.createInstance(PostEditWidget<T>, this._id, this._editor, this._visibleContext, this._showCommand, range, edits, onDidSelectEdit, this._getAdditionalActions());\n\t\t}\n\t}\n\n\tpublic clear() {\n\t\tthis._currentWidget.clear();\n\t}\n\n\tpublic tryShowSelector() {\n\t\tthis._currentWidget.value?.showSelector();\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/copyPasteController.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableListener } from '../../../../base/browser/dom.js';\nimport { IAction } from '../../../../base/common/actions.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancelablePromise, createCancelablePromise, DeferredPromise, raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { createStringDataTransferItem, IReadonlyVSDataTransfer, matchesMimeType, UriList, VSDataTransfer } from '../../../../base/common/dataTransfer.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { upcast } from '../../../../base/common/types.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { localize } from '../../../../nls.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { IProgressService, ProgressLocation } from '../../../../platform/progress/common/progress.js';\nimport { IQuickInputService, IQuickPickItem, IQuickPickSeparator } from '../../../../platform/quickinput/common/quickInput.js';\nimport { ClipboardEventUtils, InMemoryClipboardMetadataManager } from '../../../browser/controller/editContext/clipboardUtils.js';\nimport { toExternalVSDataTransfer, toVSDataTransfer } from '../../../browser/dataTransfer.js';\nimport { ICodeEditor, PastePayload } from '../../../browser/editorBrowser.js';\nimport { IBulkEditService } from '../../../browser/services/bulkEditService.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IRange, Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { Handler, IEditorContribution } from '../../../common/editorCommon.js';\nimport { DocumentPasteContext, DocumentPasteEdit, DocumentPasteEditProvider, DocumentPasteTriggerKind } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport { PreferredPasteConfiguration } from './copyPasteContribution.js';\nimport { DefaultTextPasteOrDropEditProvider } from './defaultProviders.js';\nimport { createCombinedWorkspaceEdit, sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\n\nexport const changePasteTypeCommandId = 'editor.changePasteType';\n\nexport const pasteAsPreferenceConfig = 'editor.pasteAs.preferences';\n\nexport const pasteWidgetVisibleCtx = new RawContextKey<boolean>('pasteWidgetVisible', false, localize('pasteWidgetVisible', \"Whether the paste widget is showing\"));\n\nconst vscodeClipboardMime = 'application/vnd.code.copymetadata';\n\ninterface CopyMetadata {\n\treadonly id?: string;\n\treadonly providerCopyMimeTypes?: readonly string[];\n\n\treadonly defaultPastePayload: Omit<PastePayload, 'text'>;\n}\n\ntype PasteEditWithProvider = DocumentPasteEdit & {\n\tprovider: DocumentPasteEditProvider;\n};\n\n\ninterface DocumentPasteWithProviderEditsSession {\n\tedits: readonly PasteEditWithProvider[];\n\tdispose(): void;\n}\n\nexport type PastePreference =\n\t| { readonly only: HierarchicalKind }\n\t| { readonly preferences: readonly HierarchicalKind[] }\n\t| { readonly providerId: string } // Only used internally\n\t;\n\ninterface CopyOperation {\n\treadonly providerMimeTypes: readonly string[];\n\treadonly operation: CancelablePromise<IReadonlyVSDataTransfer | undefined>;\n}\n\nexport class CopyPasteController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.copyPasteActionController';\n\n\tpublic static get(editor: ICodeEditor): CopyPasteController | null {\n\t\treturn editor.getContribution<CopyPasteController>(CopyPasteController.ID);\n\t}\n\n\tprivate static _configureDefaultAction?: IAction;\n\n\t/**\n\t * Global tracking the last copy operation.\n\t *\n\t * This is shared across all editors so that you can copy and paste between groups.\n\t *\n\t * TODO: figure out how to make this work with multiple windows\n\t */\n\tprivate static _currentCopyOperation?: {\n\t\treadonly handle: string;\n\t\treadonly operations: ReadonlyArray<CopyOperation>;\n\t};\n\n\tprivate readonly _editor: ICodeEditor;\n\n\tprivate _currentPasteOperation?: CancelablePromise<void>;\n\tprivate _pasteAsActionContext?: { readonly preferred?: PastePreference };\n\n\tprivate readonly _pasteProgressManager: InlineProgressManager;\n\tprivate readonly _postPasteWidgetManager: PostEditWidgetManager<PasteEditWithProvider>;\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IBulkEditService private readonly _bulkEditService: IBulkEditService,\n\t\t@IClipboardService private readonly _clipboardService: IClipboardService,\n\t\t@ICommandService private readonly _commandService: ICommandService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@IQuickInputService private readonly _quickInputService: IQuickInputService,\n\t\t@IProgressService private readonly _progressService: IProgressService,\n\t) {\n\t\tsuper();\n\n\t\tthis._editor = editor;\n\n\t\tconst container = editor.getContainerDomNode();\n\t\tthis._register(addDisposableListener(container, 'copy', e => this.handleCopy(e)));\n\t\tthis._register(addDisposableListener(container, 'cut', e => this.handleCopy(e)));\n\t\tthis._register(addDisposableListener(container, 'paste', e => this.handlePaste(e), true));\n\n\t\tthis._pasteProgressManager = this._register(new InlineProgressManager('pasteIntoEditor', editor, instantiationService));\n\n\t\tthis._postPasteWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'pasteIntoEditor', editor, pasteWidgetVisibleCtx,\n\t\t\t{ id: changePasteTypeCommandId, label: localize('postPasteWidgetTitle', \"Show paste options...\") },\n\t\t\t() => CopyPasteController._configureDefaultAction ? [CopyPasteController._configureDefaultAction] : []\n\t\t));\n\t}\n\n\tpublic changePasteType() {\n\t\tthis._postPasteWidgetManager.tryShowSelector();\n\t}\n\n\tpublic async pasteAs(preferred?: PastePreference) {\n\t\tthis._logService.trace('CopyPasteController.pasteAs');\n\t\tthis._editor.focus();\n\t\ttry {\n\t\t\tthis._logService.trace('Before calling editor.action.clipboardPasteAction');\n\t\t\tthis._pasteAsActionContext = { preferred };\n\t\t\tawait this._commandService.executeCommand('editor.action.clipboardPasteAction');\n\t\t} finally {\n\t\t\tthis._pasteAsActionContext = undefined;\n\t\t}\n\t}\n\n\tpublic clearWidgets() {\n\t\tthis._postPasteWidgetManager.clear();\n\t}\n\n\tprivate isPasteAsEnabled(): boolean {\n\t\treturn this._editor.getOption(EditorOption.pasteAs).enabled;\n\t}\n\n\tpublic async finishedPaste(): Promise<void> {\n\t\tawait this._currentPasteOperation;\n\t}\n\n\tprivate handleCopy(e: ClipboardEvent) {\n\t\tlet id: string | null = null;\n\t\tif (e.clipboardData) {\n\t\t\tconst [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\t\tconst storedMetadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\t\t\tid = storedMetadata?.id || null;\n\t\t\tthis._logService.trace('CopyPasteController#handleCopy for id : ', id, ' with text.length : ', text.length);\n\t\t} else {\n\t\t\tthis._logService.trace('CopyPasteController#handleCopy');\n\t\t}\n\t\tif (!this._editor.hasTextFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Explicitly clear the clipboard internal state.\n\t\t// This is needed because on web, the browser clipboard is faked out using an in-memory store.\n\t\t// This means the resources clipboard is not properly updated when copying from the editor.\n\t\tthis._clipboardService.clearInternalState?.();\n\n\t\tif (!e.clipboardData || !this.isPasteAsEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this._editor.getModel();\n\t\tconst selections = this._editor.getSelections();\n\t\tif (!model || !selections?.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst enableEmptySelectionClipboard = this._editor.getOption(EditorOption.emptySelectionClipboard);\n\n\t\tlet ranges: readonly IRange[] = selections;\n\t\tconst wasFromEmptySelection = selections.length === 1 && selections[0].isEmpty();\n\t\tif (wasFromEmptySelection) {\n\t\t\tif (!enableEmptySelectionClipboard) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tranges = [new Range(ranges[0].startLineNumber, 1, ranges[0].startLineNumber, 1 + model.getLineLength(ranges[0].startLineNumber))];\n\t\t}\n\n\t\tconst toCopy = this._editor._getViewModel()?.getPlainTextToCopy(selections, enableEmptySelectionClipboard, platform.isWindows);\n\t\tconst multicursorText = Array.isArray(toCopy) ? toCopy : null;\n\n\t\tconst defaultPastePayload = {\n\t\t\tmulticursorText,\n\t\t\tpasteOnNewLine: wasFromEmptySelection,\n\t\t\tmode: null\n\t\t};\n\n\t\tconst providers = this._languageFeaturesService.documentPasteEditProvider\n\t\t\t.ordered(model)\n\t\t\t.filter(x => !!x.prepareDocumentPaste);\n\t\tif (!providers.length) {\n\t\t\tthis.setCopyMetadata(e.clipboardData, { defaultPastePayload });\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataTransfer = toVSDataTransfer(e.clipboardData);\n\t\tconst providerCopyMimeTypes = providers.flatMap(x => x.copyMimeTypes ?? []);\n\n\t\t// Save off a handle pointing to data that VS Code maintains.\n\t\tconst handle = id ?? generateUuid();\n\t\tthis.setCopyMetadata(e.clipboardData, {\n\t\t\tid: handle,\n\t\t\tproviderCopyMimeTypes,\n\t\t\tdefaultPastePayload\n\t\t});\n\n\t\tconst operations = providers.map((provider): CopyOperation => {\n\t\t\treturn {\n\t\t\t\tproviderMimeTypes: provider.copyMimeTypes,\n\t\t\t\toperation: createCancelablePromise(token =>\n\t\t\t\t\tprovider.prepareDocumentPaste!(model, ranges, dataTransfer, token)\n\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}))\n\t\t\t};\n\t\t});\n\n\t\tCopyPasteController._currentCopyOperation?.operations.forEach(entry => entry.operation.cancel());\n\t\tCopyPasteController._currentCopyOperation = { handle, operations };\n\t}\n\n\tprivate async handlePaste(e: ClipboardEvent) {\n\t\tif (e.clipboardData) {\n\t\t\tconst [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\t\tconst metadataComputed = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n\t\t\tthis._logService.trace('CopyPasteController#handlePaste for id : ', metadataComputed?.id);\n\t\t} else {\n\t\t\tthis._logService.trace('CopyPasteController#handlePaste');\n\t\t}\n\t\tif (!e.clipboardData || !this._editor.hasTextFocus()) {\n\t\t\treturn;\n\t\t}\n\n\t\tMessageController.get(this._editor)?.closeMessage();\n\t\tthis._currentPasteOperation?.cancel();\n\t\tthis._currentPasteOperation = undefined;\n\n\t\tconst model = this._editor.getModel();\n\t\tconst selections = this._editor.getSelections();\n\t\tif (!selections?.length || !model) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tthis._editor.getOption(EditorOption.readOnly) // Never enabled if editor is readonly.\n\t\t\t|| (!this.isPasteAsEnabled() && !this._pasteAsActionContext) // Or feature disabled (but still enable if paste was explicitly requested)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst metadata = this.fetchCopyMetadata(e);\n\t\tthis._logService.trace('CopyPasteController#handlePaste with metadata : ', metadata?.id, ' and text.length : ', e.clipboardData.getData('text/plain').length);\n\t\tconst dataTransfer = toExternalVSDataTransfer(e.clipboardData);\n\t\tdataTransfer.delete(vscodeClipboardMime);\n\n\t\tconst fileTypes = Array.from(e.clipboardData.files).map(file => file.type);\n\n\t\tconst allPotentialMimeTypes = [\n\t\t\t...e.clipboardData.types,\n\t\t\t...fileTypes,\n\t\t\t...metadata?.providerCopyMimeTypes ?? [],\n\t\t\t// TODO: always adds `uri-list` because this get set if there are resources in the system clipboard.\n\t\t\t// However we can only check the system clipboard async. For this early check, just add it in.\n\t\t\t// We filter providers again once we have the final dataTransfer we will use.\n\t\t\tMimes.uriList,\n\t\t];\n\n\t\tconst allProviders = this._languageFeaturesService.documentPasteEditProvider\n\t\t\t.ordered(model)\n\t\t\t.filter(provider => {\n\t\t\t\t// Filter out providers that don't match the requested paste types\n\t\t\t\tconst preference = this._pasteAsActionContext?.preferred;\n\t\t\t\tif (preference) {\n\t\t\t\t\tif (!this.providerMatchesPreference(provider, preference)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// And providers that don't handle any of mime types in the clipboard\n\t\t\t\treturn provider.pasteMimeTypes?.some(type => matchesMimeType(type, allPotentialMimeTypes));\n\t\t\t});\n\t\tif (!allProviders.length) {\n\t\t\tif (this._pasteAsActionContext?.preferred) {\n\t\t\t\tthis.showPasteAsNoEditMessage(selections, this._pasteAsActionContext.preferred);\n\n\t\t\t\t// Also prevent default paste from applying\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopImmediatePropagation();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent the editor's default paste handler from running.\n\t\t// Note that after this point, we are fully responsible for handling paste.\n\t\t// If we can't provider a paste for any reason, we need to explicitly delegate pasting back to the editor.\n\t\te.preventDefault();\n\t\te.stopImmediatePropagation();\n\n\t\tif (this._pasteAsActionContext) {\n\t\t\tthis.showPasteAsPick(this._pasteAsActionContext.preferred, allProviders, selections, dataTransfer, metadata);\n\t\t} else {\n\t\t\tthis.doPasteInline(allProviders, selections, dataTransfer, metadata, e);\n\t\t}\n\t}\n\n\tprivate showPasteAsNoEditMessage(selections: readonly Selection[], preference: PastePreference) {\n\t\tconst kindLabel = 'only' in preference\n\t\t\t? preference.only.value\n\t\t\t: 'preferences' in preference\n\t\t\t\t? (preference.preferences.length ? preference.preferences.map(preference => preference.value).join(', ') : localize('noPreferences', \"empty\"))\n\t\t\t\t: preference.providerId;\n\n\t\tMessageController.get(this._editor)?.showMessage(localize('pasteAsError', \"No paste edits for '{0}' found\", kindLabel), selections[0].getStartPosition());\n\t}\n\n\tprivate doPasteInline(allProviders: readonly DocumentPasteEditProvider[], selections: readonly Selection[], dataTransfer: VSDataTransfer, metadata: CopyMetadata | undefined, clipboardEvent: ClipboardEvent): void {\n\t\tthis._logService.trace('CopyPasteController#doPasteInline');\n\t\tconst editor = this._editor;\n\t\tif (!editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editorStateCts = new EditorStateCancellationTokenSource(editor, CodeEditorStateFlag.Value | CodeEditorStateFlag.Selection, undefined);\n\n\t\tconst p = createCancelablePromise(async (pToken) => {\n\t\t\tconst editor = this._editor;\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = editor.getModel();\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst cts = disposables.add(new CancellationTokenSource(pToken));\n\t\t\tdisposables.add(editorStateCts.token.onCancellationRequested(() => cts.cancel()));\n\n\t\t\tconst token = cts.token;\n\t\t\ttry {\n\t\t\t\tawait this.mergeInDataFromCopy(allProviders, dataTransfer, metadata, token);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst supportedProviders = allProviders.filter(provider => this.isSupportedPasteProvider(provider, dataTransfer));\n\t\t\t\tif (!supportedProviders.length\n\t\t\t\t\t|| (supportedProviders.length === 1 && supportedProviders[0] instanceof DefaultTextPasteOrDropEditProvider) // Only our default text provider is active\n\t\t\t\t) {\n\t\t\t\t\treturn this.applyDefaultPasteHandler(dataTransfer, metadata, token, clipboardEvent);\n\t\t\t\t}\n\n\t\t\t\tconst context: DocumentPasteContext = {\n\t\t\t\t\ttriggerKind: DocumentPasteTriggerKind.Automatic,\n\t\t\t\t};\n\n\t\t\t\tconst editSession = await this.getPasteEdits(supportedProviders, dataTransfer, model, selections, context, token);\n\t\t\t\tdisposables.add(editSession);\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If the only edit returned is our default text edit, use the default paste handler\n\t\t\t\tif (editSession.edits.length === 1 && editSession.edits[0].provider instanceof DefaultTextPasteOrDropEditProvider) {\n\t\t\t\t\treturn this.applyDefaultPasteHandler(dataTransfer, metadata, token, clipboardEvent);\n\t\t\t\t}\n\n\t\t\t\tif (editSession.edits.length) {\n\t\t\t\t\tconst canShowWidget = editor.getOption(EditorOption.pasteAs).showPasteSelector === 'afterPaste';\n\t\t\t\t\treturn this._postPasteWidgetManager.applyEditAndShowIfNeeded(selections, { activeEditIndex: this.getInitialActiveEditIndex(model, editSession.edits), allEdits: editSession.edits }, canShowWidget, async (edit, resolveToken) => {\n\t\t\t\t\t\tif (!edit.provider.resolveDocumentPasteEdit) {\n\t\t\t\t\t\t\treturn edit;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst resolveP = edit.provider.resolveDocumentPasteEdit(edit, resolveToken);\n\t\t\t\t\t\tconst showP = new DeferredPromise<void>();\n\t\t\t\t\t\tconst resolved = await this._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('resolveProcess', \"Resolving paste edit for '{0}'. Click to cancel\", edit.title), raceCancellation(Promise.race([showP.p, resolveP]), resolveToken), {\n\t\t\t\t\t\t\tcancel: () => showP.cancel()\n\t\t\t\t\t\t}, 0);\n\n\t\t\t\t\t\tif (resolved) {\n\t\t\t\t\t\t\tedit.insertText = resolved.insertText;\n\t\t\t\t\t\t\tedit.additionalEdit = resolved.additionalEdit;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn edit;\n\t\t\t\t\t}, token);\n\t\t\t\t}\n\n\t\t\t\tawait this.applyDefaultPasteHandler(dataTransfer, metadata, token, clipboardEvent);\n\t\t\t} finally {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tif (this._currentPasteOperation === p) {\n\t\t\t\t\tthis._currentPasteOperation = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._pasteProgressManager.showWhile(selections[0].getEndPosition(), localize('pasteIntoEditorProgress', \"Running paste handlers. Click to cancel and do basic paste\"), p, {\n\t\t\tcancel: async () => {\n\t\t\t\tp.cancel();\n\t\t\t\tif (editorStateCts.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait this.applyDefaultPasteHandler(dataTransfer, metadata, editorStateCts.token, clipboardEvent);\n\t\t\t}\n\t\t}).finally(() => {\n\t\t\teditorStateCts.dispose();\n\t\t});\n\t\tthis._currentPasteOperation = p;\n\t}\n\n\tprivate showPasteAsPick(preference: PastePreference | undefined, allProviders: readonly DocumentPasteEditProvider[], selections: readonly Selection[], dataTransfer: VSDataTransfer, metadata: CopyMetadata | undefined): void {\n\t\tthis._logService.trace('CopyPasteController#showPasteAsPick');\n\t\tconst p = createCancelablePromise(async (token) => {\n\t\t\tconst editor = this._editor;\n\t\t\tif (!editor.hasModel()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst model = editor.getModel();\n\n\t\t\tconst disposables = new DisposableStore();\n\t\t\tconst tokenSource = disposables.add(new EditorStateCancellationTokenSource(editor, CodeEditorStateFlag.Value | CodeEditorStateFlag.Selection, undefined, token));\n\t\t\ttry {\n\t\t\t\tawait this.mergeInDataFromCopy(allProviders, dataTransfer, metadata, tokenSource.token);\n\t\t\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Filter out any providers the don't match the full data transfer we will send them.\n\t\t\t\tlet supportedProviders = allProviders.filter(provider => this.isSupportedPasteProvider(provider, dataTransfer, preference));\n\t\t\t\tif (preference) {\n\t\t\t\t\t// We are looking for a specific edit\n\t\t\t\t\tsupportedProviders = supportedProviders.filter(provider => this.providerMatchesPreference(provider, preference));\n\t\t\t\t}\n\n\t\t\t\tconst context: DocumentPasteContext = {\n\t\t\t\t\ttriggerKind: DocumentPasteTriggerKind.PasteAs,\n\t\t\t\t\tonly: preference && 'only' in preference ? preference.only : undefined,\n\t\t\t\t};\n\t\t\t\tlet editSession = disposables.add(await this.getPasteEdits(supportedProviders, dataTransfer, model, selections, context, tokenSource.token));\n\t\t\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Filter out any edits that don't match the requested kind\n\t\t\t\tif (preference) {\n\t\t\t\t\teditSession = {\n\t\t\t\t\t\tedits: editSession.edits.filter(edit => {\n\t\t\t\t\t\t\tif ('only' in preference) {\n\t\t\t\t\t\t\t\treturn preference.only.contains(edit.kind);\n\t\t\t\t\t\t\t} else if ('preferences' in preference) {\n\t\t\t\t\t\t\t\treturn preference.preferences.some(preference => preference.contains(edit.kind));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn preference.providerId === edit.provider.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tdispose: editSession.dispose\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (!editSession.edits.length) {\n\t\t\t\t\tif (preference) {\n\t\t\t\t\t\tthis.showPasteAsNoEditMessage(selections, preference);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet pickedEdit: DocumentPasteEdit | undefined;\n\t\t\t\tif (preference) {\n\t\t\t\t\tpickedEdit = editSession.edits.at(0);\n\t\t\t\t} else {\n\t\t\t\t\ttype ItemWithEdit = IQuickPickItem & { edit?: DocumentPasteEdit };\n\t\t\t\t\tconst configureDefaultItem: ItemWithEdit = {\n\t\t\t\t\t\tid: 'editor.pasteAs.default',\n\t\t\t\t\t\tlabel: localize('pasteAsDefault', \"Configure default paste action\"),\n\t\t\t\t\t\tedit: undefined,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst selected = await this._quickInputService.pick<ItemWithEdit>(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t...editSession.edits.map((edit): ItemWithEdit => ({\n\t\t\t\t\t\t\t\tlabel: edit.title,\n\t\t\t\t\t\t\t\tdescription: edit.kind?.value,\n\t\t\t\t\t\t\t\tedit,\n\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t...(CopyPasteController._configureDefaultAction ? [\n\t\t\t\t\t\t\t\tupcast<IQuickPickSeparator>({ type: 'separator' }),\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: CopyPasteController._configureDefaultAction.label,\n\t\t\t\t\t\t\t\t\tedit: undefined,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t] : [])\n\t\t\t\t\t\t], {\n\t\t\t\t\t\tplaceHolder: localize('pasteAsPickerPlaceholder', \"Select Paste Action\"),\n\t\t\t\t\t});\n\n\t\t\t\t\tif (selected === configureDefaultItem) {\n\t\t\t\t\t\tCopyPasteController._configureDefaultAction?.run();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tpickedEdit = selected?.edit;\n\t\t\t\t}\n\n\t\t\t\tif (!pickedEdit) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst combinedWorkspaceEdit = createCombinedWorkspaceEdit(model.uri, selections, pickedEdit);\n\t\t\t\tawait this._bulkEditService.apply(combinedWorkspaceEdit, { editor: this._editor });\n\t\t\t} finally {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tif (this._currentPasteOperation === p) {\n\t\t\t\t\tthis._currentPasteOperation = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._progressService.withProgress({\n\t\t\tlocation: ProgressLocation.Window,\n\t\t\ttitle: localize('pasteAsProgress', \"Running paste handlers\"),\n\t\t}, () => p);\n\t}\n\n\tprivate setCopyMetadata(dataTransfer: DataTransfer, metadata: CopyMetadata) {\n\t\tthis._logService.trace('CopyPasteController#setCopyMetadata new id : ', metadata.id);\n\t\tdataTransfer.setData(vscodeClipboardMime, JSON.stringify(metadata));\n\t}\n\n\tprivate fetchCopyMetadata(e: ClipboardEvent): CopyMetadata | undefined {\n\t\tthis._logService.trace('CopyPasteController#fetchCopyMetadata');\n\t\tif (!e.clipboardData) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prefer using the clipboard data we saved off\n\t\tconst rawMetadata = e.clipboardData.getData(vscodeClipboardMime);\n\t\tif (rawMetadata) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(rawMetadata);\n\t\t\t} catch {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise try to extract the generic text editor metadata\n\t\tconst [_, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n\t\tif (metadata) {\n\t\t\treturn {\n\t\t\t\tdefaultPastePayload: {\n\t\t\t\t\tmode: metadata.mode,\n\t\t\t\t\tmulticursorText: metadata.multicursorText ?? null,\n\t\t\t\t\tpasteOnNewLine: !!metadata.isFromEmptySelection,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate async mergeInDataFromCopy(allProviders: readonly DocumentPasteEditProvider[], dataTransfer: VSDataTransfer, metadata: CopyMetadata | undefined, token: CancellationToken): Promise<void> {\n\t\tthis._logService.trace('CopyPasteController#mergeInDataFromCopy with metadata : ', metadata?.id);\n\t\tif (metadata?.id && CopyPasteController._currentCopyOperation?.handle === metadata.id) {\n\t\t\t// Only resolve providers that have data we may care about\n\t\t\tconst toResolve = CopyPasteController._currentCopyOperation.operations\n\t\t\t\t.filter(op => allProviders.some(provider => provider.pasteMimeTypes.some(type => matchesMimeType(type, op.providerMimeTypes))))\n\t\t\t\t.map(op => op.operation);\n\n\t\t\tconst toMergeResults = await Promise.all(toResolve);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Values from higher priority providers should overwrite values from lower priority ones.\n\t\t\t// Reverse the array to so that the calls to `DataTransfer.replace` later will do this\n\t\t\tfor (const toMergeData of toMergeResults.reverse()) {\n\t\t\t\tif (toMergeData) {\n\t\t\t\t\tfor (const [key, value] of toMergeData) {\n\t\t\t\t\t\tdataTransfer.replace(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!dataTransfer.has(Mimes.uriList)) {\n\t\t\tconst resources = await this._clipboardService.readResources();\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (resources.length) {\n\t\t\t\tdataTransfer.append(Mimes.uriList, createStringDataTransferItem(UriList.create(resources)));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getPasteEdits(providers: readonly DocumentPasteEditProvider[], dataTransfer: VSDataTransfer, model: ITextModel, selections: readonly Selection[], context: DocumentPasteContext, token: CancellationToken): Promise<DocumentPasteWithProviderEditsSession> {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst results = await raceCancellation(\n\t\t\tPromise.all(providers.map(async provider => {\n\t\t\t\ttry {\n\t\t\t\t\tconst edits = await provider.provideDocumentPasteEdits?.(model, selections, dataTransfer, context, token);\n\t\t\t\t\tif (edits) {\n\t\t\t\t\t\tdisposables.add(edits);\n\t\t\t\t\t}\n\t\t\t\t\treturn edits?.edits?.map(edit => ({ ...edit, provider }));\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!isCancellationError(err)) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t})),\n\t\t\ttoken);\n\t\tconst edits = coalesce(results ?? []).flat().filter(edit => {\n\t\t\treturn !context.only || context.only.contains(edit.kind);\n\t\t});\n\t\treturn {\n\t\t\tedits: sortEditsByYieldTo(edits),\n\t\t\tdispose: () => disposables.dispose()\n\t\t};\n\t}\n\n\tprivate async applyDefaultPasteHandler(dataTransfer: VSDataTransfer, metadata: CopyMetadata | undefined, token: CancellationToken, clipboardEvent: ClipboardEvent) {\n\t\tconst textDataTransfer = dataTransfer.get(Mimes.text) ?? dataTransfer.get('text');\n\t\tconst text = (await textDataTransfer?.asString()) ?? '';\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst payload: PastePayload = {\n\t\t\tclipboardEvent,\n\t\t\ttext,\n\t\t\tpasteOnNewLine: metadata?.defaultPastePayload.pasteOnNewLine ?? false,\n\t\t\tmulticursorText: metadata?.defaultPastePayload.multicursorText ?? null,\n\t\t\tmode: null,\n\t\t};\n\t\tthis._logService.trace('CopyPasteController#applyDefaultPasteHandler for id : ', metadata?.id);\n\t\tthis._editor.trigger('keyboard', Handler.Paste, payload);\n\t}\n\n\t/**\n\t * Filter out providers if they:\n\t * - Don't handle any of the data transfer types we have\n\t * - Don't match the preferred paste kind\n\t */\n\tprivate isSupportedPasteProvider(provider: DocumentPasteEditProvider, dataTransfer: VSDataTransfer, preference?: PastePreference): boolean {\n\t\tif (!provider.pasteMimeTypes?.some(type => dataTransfer.matches(type))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !preference || this.providerMatchesPreference(provider, preference);\n\t}\n\n\tprivate providerMatchesPreference(provider: DocumentPasteEditProvider, preference: PastePreference): boolean {\n\t\tif ('only' in preference) {\n\t\t\treturn provider.providedPasteEditKinds.some(providedKind => preference.only.contains(providedKind));\n\t\t} else if ('preferences' in preference) {\n\t\t\treturn preference.preferences.some(providedKind => preference.preferences.some(preferredKind => preferredKind.contains(providedKind)));\n\t\t} else {\n\t\t\treturn provider.id === preference.providerId;\n\t\t}\n\t}\n\n\tprivate getInitialActiveEditIndex(model: ITextModel, edits: readonly DocumentPasteEdit[]): number {\n\t\tconst preferredProviders = this._configService.getValue<PreferredPasteConfiguration[]>(pasteAsPreferenceConfig, { resource: model.uri });\n\t\tfor (const config of Array.isArray(preferredProviders) ? preferredProviders : []) {\n\t\t\tconst desiredKind = new HierarchicalKind(config);\n\t\t\tconst editIndex = edits.findIndex(edit => desiredKind.contains(edit.kind));\n\t\t\tif (editIndex >= 0) {\n\t\t\t\treturn editIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/copyPasteContribution.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { IJSONSchema, SchemaToType } from '../../../../base/common/jsonSchema.js';\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport * as nls from '../../../../nls.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorAction, EditorCommand, EditorContributionInstantiation, ServicesAccessor, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { CopyPasteController, PastePreference, changePasteTypeCommandId, pasteWidgetVisibleCtx } from './copyPasteController.js';\nimport { DefaultPasteProvidersFeature, DefaultTextPasteOrDropEditProvider } from './defaultProviders.js';\n\nexport const pasteAsCommandId = 'editor.action.pasteAs';\n\nregisterEditorContribution(CopyPasteController.ID, CopyPasteController, EditorContributionInstantiation.Eager); // eager because it listens to events on the container dom node of the editor\nregisterEditorFeature(DefaultPasteProvidersFeature);\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: changePasteTypeCommandId,\n\t\t\tprecondition: pasteWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\treturn CopyPasteController.get(editor)?.changePasteType();\n\t}\n});\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.hidePasteWidget',\n\t\t\tprecondition: pasteWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\tCopyPasteController.get(editor)?.clearWidgets();\n\t}\n});\n\nregisterEditorAction(class PasteAsAction extends EditorAction {\n\tprivate static readonly argsSchema = {\n\t\toneOf: [\n\t\t\t{\n\t\t\t\ttype: 'object',\n\t\t\t\trequired: ['kind'],\n\t\t\t\tproperties: {\n\t\t\t\t\tkind: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tdescription: nls.localize('pasteAs.kind', \"The kind of the paste edit to try pasting with.\\nIf there are multiple edits for this kind, the editor will show a picker. If there are no edits of this kind, the editor will show an error message.\"),\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'object',\n\t\t\t\trequired: ['preferences'],\n\t\t\t\tproperties: {\n\t\t\t\t\tpreferences: {\n\t\t\t\t\t\ttype: 'array',\n\t\t\t\t\t\tdescription: nls.localize('pasteAs.preferences', \"List of preferred paste edit kind to try applying.\\nThe first edit matching the preferences will be applied.\"),\n\t\t\t\t\t\titems: { type: 'string' }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}\n\t\t]\n\t} as const satisfies IJSONSchema;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: pasteAsCommandId,\n\t\t\tlabel: nls.localize2('pasteAs', \"Paste As...\"),\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t\tmetadata: {\n\t\t\t\tdescription: 'Paste as',\n\t\t\t\targs: [{\n\t\t\t\t\tname: 'args',\n\t\t\t\t\tschema: PasteAsAction.argsSchema\n\t\t\t\t}]\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override run(_accessor: ServicesAccessor, editor: ICodeEditor, args?: SchemaToType<typeof PasteAsAction.argsSchema>) {\n\t\tlet preference: PastePreference | undefined;\n\t\tif (args) {\n\t\t\tif ('kind' in args) {\n\t\t\t\tpreference = { only: new HierarchicalKind(args.kind) };\n\t\t\t} else if ('preferences' in args) {\n\t\t\t\tpreference = { preferences: args.preferences.map(kind => new HierarchicalKind(kind)) };\n\t\t\t}\n\t\t}\n\t\treturn CopyPasteController.get(editor)?.pasteAs(preference);\n\t}\n});\n\nregisterEditorAction(class extends EditorAction {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.action.pasteAsText',\n\t\t\tlabel: nls.localize2('pasteAsText', \"Paste as Text\"),\n\t\t\tprecondition: EditorContextKeys.writable,\n\t\t});\n\t}\n\n\tpublic override run(_accessor: ServicesAccessor, editor: ICodeEditor) {\n\t\treturn CopyPasteController.get(editor)?.pasteAs({ providerId: DefaultTextPasteOrDropEditProvider.id });\n\t}\n});\n\nexport type PreferredPasteConfiguration = string;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1456, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorController.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from '../../../../base/common/actions.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancelablePromise, createCancelablePromise, raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { VSDataTransfer } from '../../../../base/common/dataTransfer.js';\nimport { isCancellationError } from '../../../../base/common/errors.js';\nimport { HierarchicalKind } from '../../../../base/common/hierarchicalKind.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { LocalSelectionTransfer } from '../../../../platform/dnd/browser/dnd.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { toExternalVSDataTransfer } from '../../../browser/dataTransfer.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorOption } from '../../../common/config/editorOptions.js';\nimport { IPosition } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IEditorContribution } from '../../../common/editorCommon.js';\nimport { DocumentDropEdit, DocumentDropEditProvider } from '../../../common/languages.js';\nimport { ITextModel } from '../../../common/model.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { DraggedTreeItemsIdentifier } from '../../../common/services/treeViewsDnd.js';\nimport { ITreeViewsDnDService } from '../../../common/services/treeViewsDndService.js';\nimport { CodeEditorStateFlag, EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { InlineProgressManager } from '../../inlineProgress/browser/inlineProgress.js';\nimport { PreferredDropConfiguration } from './dropIntoEditorContribution.js';\nimport { sortEditsByYieldTo } from './edit.js';\nimport { PostEditWidgetManager } from './postEditWidget.js';\n\nexport const dropAsPreferenceConfig = 'editor.dropIntoEditor.preferences';\n\nexport const changeDropTypeCommandId = 'editor.changeDropType';\n\nexport const dropWidgetVisibleCtx = new RawContextKey<boolean>('dropWidgetVisible', false, localize('dropWidgetVisible', \"Whether the drop widget is showing\"));\n\nexport class DropIntoEditorController extends Disposable implements IEditorContribution {\n\n\tpublic static readonly ID = 'editor.contrib.dropIntoEditorController';\n\n\tpublic static get(editor: ICodeEditor): DropIntoEditorController | null {\n\t\treturn editor.getContribution<DropIntoEditorController>(DropIntoEditorController.ID);\n\t}\n\n\tprivate static _configureDefaultAction?: IAction;\n\n\t/**\n\t * Global tracking the current drop operation.\n\t *\n\t * TODO: figure out how to make this work with multiple windows\n\t */\n\tprivate static _currentDropOperation?: CancelablePromise<void>;\n\n\tprivate readonly _dropProgressManager: InlineProgressManager;\n\tprivate readonly _postDropWidgetManager: PostEditWidgetManager<DocumentDropEdit>;\n\n\tprivate readonly treeItemsTransfer = LocalSelectionTransfer.getInstance<DraggedTreeItemsIdentifier>();\n\n\tconstructor(\n\t\teditor: ICodeEditor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly _configService: IConfigurationService,\n\t\t@ILanguageFeaturesService private readonly _languageFeaturesService: ILanguageFeaturesService,\n\t\t@ITreeViewsDnDService private readonly _treeViewsDragAndDropService: ITreeViewsDnDService\n\t) {\n\t\tsuper();\n\n\t\tthis._dropProgressManager = this._register(instantiationService.createInstance(InlineProgressManager, 'dropIntoEditor', editor));\n\t\tthis._postDropWidgetManager = this._register(instantiationService.createInstance(PostEditWidgetManager, 'dropIntoEditor', editor, dropWidgetVisibleCtx,\n\t\t\t{ id: changeDropTypeCommandId, label: localize('postDropWidgetTitle', \"Show drop options...\") },\n\t\t\t() => DropIntoEditorController._configureDefaultAction ? [DropIntoEditorController._configureDefaultAction] : []));\n\n\t\tthis._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n\t}\n\n\tpublic clearWidgets() {\n\t\tthis._postDropWidgetManager.clear();\n\t}\n\n\tpublic changeDropType() {\n\t\tthis._postDropWidgetManager.tryShowSelector();\n\t}\n\n\tprivate async onDropIntoEditor(editor: ICodeEditor, position: IPosition, dragEvent: DragEvent) {\n\t\tif (!dragEvent.dataTransfer || !editor.hasModel()) {\n\t\t\treturn;\n\t\t}\n\n\t\tDropIntoEditorController._currentDropOperation?.cancel();\n\n\t\teditor.focus();\n\t\teditor.setPosition(position);\n\n\t\tconst p = createCancelablePromise(async (token) => {\n\t\t\tconst disposables = new DisposableStore();\n\n\t\t\tconst tokenSource = disposables.add(new EditorStateCancellationTokenSource(editor, CodeEditorStateFlag.Value, undefined, token));\n\t\t\ttry {\n\t\t\t\tconst ourDataTransfer = await this.extractDataTransferData(dragEvent);\n\t\t\t\tif (ourDataTransfer.size === 0 || tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst model = editor.getModel();\n\t\t\t\tif (!model) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst providers = this._languageFeaturesService.documentDropEditProvider\n\t\t\t\t\t.ordered(model)\n\t\t\t\t\t.filter(provider => {\n\t\t\t\t\t\tif (!provider.dropMimeTypes) {\n\t\t\t\t\t\t\t// Keep all providers that don't specify mime types\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn provider.dropMimeTypes.some(mime => ourDataTransfer.matches(mime));\n\t\t\t\t\t});\n\n\t\t\t\tconst editSession = disposables.add(await this.getDropEdits(providers, model, position, ourDataTransfer, tokenSource.token));\n\t\t\t\tif (tokenSource.token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (editSession.edits.length) {\n\t\t\t\t\tconst activeEditIndex = this.getInitialActiveEditIndex(model, editSession.edits);\n\t\t\t\t\tconst canShowWidget = editor.getOption(EditorOption.dropIntoEditor).showDropSelector === 'afterDrop';\n\t\t\t\t\t// Pass in the parent token here as it tracks cancelling the entire drop operation\n\t\t\t\t\tawait this._postDropWidgetManager.applyEditAndShowIfNeeded([Range.fromPositions(position)], { activeEditIndex, allEdits: editSession.edits }, canShowWidget, async edit => edit, token);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tdisposables.dispose();\n\t\t\t\tif (DropIntoEditorController._currentDropOperation === p) {\n\t\t\t\t\tDropIntoEditorController._currentDropOperation = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._dropProgressManager.showWhile(position, localize('dropIntoEditorProgress', \"Running drop handlers. Click to cancel\"), p, { cancel: () => p.cancel() });\n\t\tDropIntoEditorController._currentDropOperation = p;\n\t}\n\n\tprivate async getDropEdits(providers: readonly DocumentDropEditProvider[], model: ITextModel, position: IPosition, dataTransfer: VSDataTransfer, token: CancellationToken) {\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst results = await raceCancellation(Promise.all(providers.map(async provider => {\n\t\t\ttry {\n\t\t\t\tconst edits = await provider.provideDocumentDropEdits(model, position, dataTransfer, token);\n\t\t\t\tif (edits) {\n\t\t\t\t\tdisposables.add(edits);\n\t\t\t\t}\n\t\t\t\treturn edits?.edits.map(edit => ({ ...edit, providerId: provider.id }));\n\t\t\t} catch (err) {\n\t\t\t\tif (!isCancellationError(err)) {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t}\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})), token);\n\n\t\tconst edits = coalesce(results ?? []).flat();\n\t\treturn {\n\t\t\tedits: sortEditsByYieldTo(edits),\n\t\t\tdispose: () => disposables.dispose()\n\t\t};\n\t}\n\n\tprivate getInitialActiveEditIndex(model: ITextModel, edits: ReadonlyArray<DocumentDropEdit>): number {\n\t\tconst preferredProviders = this._configService.getValue<PreferredDropConfiguration[]>(dropAsPreferenceConfig, { resource: model.uri });\n\t\tfor (const config of Array.isArray(preferredProviders) ? preferredProviders : []) {\n\t\t\tconst desiredKind = new HierarchicalKind(config);\n\t\t\tconst editIndex = edits.findIndex(edit => edit.kind && desiredKind.contains(edit.kind));\n\t\t\tif (editIndex >= 0) {\n\t\t\t\treturn editIndex;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate async extractDataTransferData(dragEvent: DragEvent): Promise<VSDataTransfer> {\n\t\tif (!dragEvent.dataTransfer) {\n\t\t\treturn new VSDataTransfer();\n\t\t}\n\n\t\tconst dataTransfer = toExternalVSDataTransfer(dragEvent.dataTransfer);\n\n\t\tif (this.treeItemsTransfer.hasData(DraggedTreeItemsIdentifier.prototype)) {\n\t\t\tconst data = this.treeItemsTransfer.getData(DraggedTreeItemsIdentifier.prototype);\n\t\t\tif (Array.isArray(data)) {\n\t\t\t\tfor (const id of data) {\n\t\t\t\t\tconst treeDataTransfer = await this._treeViewsDragAndDropService.removeDragOperationTransfer(id.identifier);\n\t\t\t\t\tif (treeDataTransfer) {\n\t\t\t\t\t\tfor (const [type, value] of treeDataTransfer) {\n\t\t\t\t\t\t\tdataTransfer.replace(type, value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dataTransfer;\n\t}\n}\n"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;AAGhG,OAAO,EAAE,QAAQ,EAAE,MAAM,mCAAmC,CAAC;AAC7D,OAAO,EAAqB,uBAAuB,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AAEhH,OAAO,EAAE,cAAc,EAAE,MAAM,yCAAyC,CAAC;AACzE,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AACxE,OAAO,EAAE,gBAAgB,EAAE,MAAM,6CAA6C,CAAC;AAC/E,OAAO,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAC;AACnF,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAC9C,OAAO,EAAE,qBAAqB,EAAE,MAAM,4DAA4D,CAAC;AACnG,OAAO,EAAE,aAAa,EAAE,MAAM,sDAAsD,CAAC;AACrF,OAAO,EAAE,sBAAsB,EAAE,MAAM,yCAAyC,CAAC;AACjF,OAAO,EAAE,qBAAqB,EAAE,MAAM,4DAA4D,CAAC;AACnG,OAAO,EAAE,wBAAwB,EAAE,MAAM,kCAAkC,CAAC;AAI5E,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AAItD,OAAO,EAAE,wBAAwB,EAAE,MAAM,8CAA8C,CAAC;AACxF,OAAO,EAAE,0BAA0B,EAAE,MAAM,0CAA0C,CAAC;AACtF,OAAO,EAAE,oBAAoB,EAAE,MAAM,iDAAiD,CAAC;AACvF,OAAO,EAAuB,kCAAkC,EAAE,MAAM,0CAA0C,CAAC;AACnH,OAAO,EAAE,qBAAqB,EAAE,MAAM,gDAAgD,CAAC;AAEvF,OAAO,EAAE,kBAAkB,EAAE,MAAM,WAAW,CAAC;AAC/C,OAAO,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErD,MAAM,sBAAsB,GAAG,mCAAmC,CAAC;AAEnE,MAAM,uBAAuB,GAAG,uBAAuB,CAAC;AAExD,MAAM,oBAAoB,GAAG,IAAI,mNAAa,CAAU,mBAAmB,EAAE,KAAK,MAAE,mLAAQ,EAAC,GAAmB,EAAE,oCAAoC,CAAC,CAAC,CAAC;AAEzJ,IAAM,wBAAwB,gCAA9B,MAAM,wBAAyB,SAAQ,6LAAU;IAIhD,MAAM,CAAC,GAAG,CAAC,MAAmB,EAAA;QACpC,OAAO,MAAM,CAAC,eAAe,CAA2B,0BAAwB,CAAC,EAAE,CAAC,CAAC;IACtF,CAAC;IAiCM,YAAY,GAAA;QAClB,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;IACrC,CAAC;IAEM,cAAc,GAAA;QACpB,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAEO,KAAK,CAAC,gBAAgB,CAAC,MAAmB,EAAE,QAAmB,EAAE,SAAoB,EAAA;YAK5F,0BAAwB;QAJxB,IAAI,CAAC,SAAS,CAAC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;YACnD,OAAO;QACR,CAAC;wFAEwB,qBAAqB,wIAAE,MAAM,EAAE,CAAC;QAEzD,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAE7B,MAAM,CAAC,OAAG,sMAAuB,EAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YACjD,MAAM,WAAW,GAAG,IAAI,kMAAe,EAAE,CAAC;YAE1C,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,IAAI,oPAAkC,CAAC,MAAM,EAAA,EAAA,6BAAA,KAA6B,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;YACjI,IAAI,CAAC;gBACJ,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;gBACtE,IAAI,eAAe,CAAC,IAAI,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;oBAC7E,OAAO;gBACR,CAAC;gBAED,MAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAChC,IAAI,CAAC,KAAK,EAAE,CAAC;oBACZ,OAAO;gBACR,CAAC;gBAED,MAAM,SAAS,GAAG,IAAI,CAAC,wBAAwB,CAAC,wBAAwB,CACtE,OAAO,CAAC,KAAK,CAAC,CACd,MAAM,EAAC,QAAQ,CAAC,EAAE;oBAClB,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;wBAC7B,mDAAmD;wBACnD,OAAO,IAAI,CAAC;oBACb,CAAC;oBACD,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAC,IAAI,CAAC,EAAE,AAAC,eAAe,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3E,CAAC,CAAC,CAAC;gBAEJ,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7H,IAAI,WAAW,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC;oBAC/C,OAAO;gBACR,CAAC;gBAED,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;oBAC9B,MAAM,eAAe,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;oBACjF,MAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAA,GAAA,+BAAA,GAA6B,EAAC,gBAAgB,KAAK,WAAW,CAAC;oBACrG,kFAAkF;oBAClF,MAAM,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC;wBAAC,8LAAK,CAAC,aAAa,CAAC,QAAQ,CAAC;qBAAC,EAAE;wBAAE,eAAe;wBAAE,QAAQ,EAAE,WAAW,CAAC,KAAK;oBAAA,CAAE,EAAE,aAAa,EAAE,KAAK,EAAC,IAAI,EAAC,CAAG,CAAD,GAAK,EAAE,KAAK,CAAC,CAAC;gBACzL,CAAC;YACF,CAAC,QAAS,CAAC;gBACV,WAAW,CAAC,OAAO,EAAE,CAAC;gBACtB,IAAI,0BAAwB,CAAC,qBAAqB,KAAK,CAAC,EAAE,CAAC;oBAC1D,0BAAwB,CAAC,qBAAqB,GAAG,SAAS,CAAC;gBAC5D,CAAC;YACF,CAAC;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,QAAQ,MAAE,mLAAQ,EAAC,GAAwB,EAAE,wCAAwC,CAAC,EAAE,CAAC,EAAE;YAAE,MAAM,EAAE,GAAG,CAAG,CAAD,AAAE,CAAC,MAAM,EAAE;QAAA,CAAE,CAAC,CAAC;QAC7J,0BAAwB,CAAC,qBAAqB,GAAG,CAAC,CAAC;IACpD,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,SAA8C,EAAE,KAAiB,EAAE,QAAmB,EAAE,YAA4B,EAAE,KAAwB,EAAA;QACxK,MAAM,WAAW,GAAG,IAAI,kMAAe,EAAE,CAAC;QAE1C,MAAM,OAAO,GAAG,UAAM,+LAAgB,EAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAC,QAAQ,EAAC,EAAE;YACjF,IAAI,CAAC;gBACJ,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,wBAAwB,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;gBAC5F,IAAI,KAAK,EAAE,CAAC;oBACX,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACxB,CAAC;gBACD,qDAAO,KAAK,CAAE,KAAK,CAAC,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,CAAC;wBAAE,GAAG,IAAI;wBAAE,UAAU,EAAE,QAAQ,CAAC,EAAE;oBAAA,CAAE,CAAC,CAAC,CAAC;YACzE,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;gBACd,IAAI,KAAC,mMAAmB,EAAC,GAAG,CAAC,EAAE,CAAC;oBAC/B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpB,CAAC;gBACD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACpB,CAAC;YACD,OAAO,SAAS,CAAC;QAClB,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAEZ,MAAM,KAAK,OAAG,wLAAQ,2CAAC,OAAO,GAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC7C,OAAO;YACN,KAAK,MAAE,iOAAkB,EAAC,KAAK,CAAC;YAChC,OAAO,EAAE,GAAG,CAAG,CAAD,UAAY,CAAC,OAAO,EAAE;SACpC,CAAC;IACH,CAAC;IAEO,yBAAyB,CAAC,KAAiB,EAAE,KAAsC,EAAA;QAC1F,MAAM,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAA+B,sBAAsB,EAAE;YAAE,QAAQ,EAAE,KAAK,CAAC,GAAG;QAAA,CAAE,CAAC,CAAC;QACvI,KAAK,MAAM,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC;YAClF,MAAM,WAAW,GAAG,IAAI,0MAAgB,CAAC,MAAM,CAAC,CAAC;YACjD,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,EAAC,IAAI,CAAC,EAAG,AAAD,IAAK,CAAC,IAAI,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACxF,IAAI,SAAS,IAAI,CAAC,EAAE,CAAC;gBACpB,OAAO,SAAS,CAAC;YAClB,CAAC;QACF,CAAC;QACD,OAAO,CAAC,CAAC;IACV,CAAC;IAEO,KAAK,CAAC,uBAAuB,CAAC,SAAoB,EAAA;QACzD,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;YAC7B,OAAO,IAAI,oMAAc,EAAE,CAAC;QAC7B,CAAC;QAED,MAAM,YAAY,OAAG,iNAAwB,EAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QAEtE,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,8NAA0B,CAAC,SAAS,CAAC,EAAE,CAAC;YAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,8NAA0B,CAAC,SAAS,CAAC,CAAC;YAClF,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;gBACzB,KAAK,MAAM,EAAE,IAAI,IAAI,CAAE,CAAC;oBACvB,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;oBAC5G,IAAI,gBAAgB,EAAE,CAAC;wBACtB,KAAK,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,gBAAgB,CAAE,CAAC;4BAC9C,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBACnC,CAAC;oBACF,CAAC;gBACF,CAAC;YACF,CAAC;QACF,CAAC;QAED,OAAO,YAAY,CAAC;IACrB,CAAC;IA/ID,YACC,MAAmB,EACI,oBAA2C,EAC3C,cAAsD,EACnD,wBAAmE,EACvE,4BAAmE,CAAA;QAEzF,KAAK,EAAE,CAAC;QAJgC,IAAA,CAAA,cAAc,GAAd,cAAc,CAAuB;QAClC,IAAA,CAAA,wBAAwB,GAAxB,wBAAwB,CAA0B;QACtD,IAAA,CAAA,4BAA4B,GAA5B,4BAA4B,CAAsB;QAPzE,IAAA,CAAA,iBAAiB,GAAG,+MAAsB,CAAC,WAAW,EAA8B,CAAC;QAWrG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAAC,6OAAqB,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC,CAAC;QACjI,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,cAAc,CAAC,8OAAqB,EAAE,gBAAgB,EAAE,MAAM,EAAE,oBAAoB,EACrJ;YAAE,EAAE,EAAE,uBAAuB;YAAE,KAAK,MAAE,mLAAQ,EAAC,GAAqB,EAAE,sBAAsB,CAAC;QAAA,CAAE,EAC/F,GAAG,CAAG,CAAD,yBAAyB,CAAC,uBAAuB,CAAC,CAAC,CAAC;gBAAC,0BAAwB,CAAC,uBAAuB;aAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,gBAAgB,EAAC,CAAC,CAAC,EAAE,AAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClG,CAAC;2DAnCsB,0BAAA,EAAE,GAAG,yCAAH,AAA4C,CAAC;AAF1D,wBAAwB,GAAA,6BAAA,WAAA;IAwBlC,QAAA,GAAA,iOAAqB,CAAA;IACrB,QAAA,GAAA,iOAAqB,CAAA;IACrB,QAAA,GAAA,gOAAwB,CAAA;IACxB,QAAA,GAAA,+NAAoB,CAAA;GA3BV,wBAAwB,CAsKpC","debugId":null}},
    {"offset": {"line": 1676, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.js","sourceRoot":"file:///mnt/vss/_work/1/s/dependencies/vscode/out-editor-src","sources":["file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/file%3A/mnt/vss/_work/1/s/dependencies/vscode/out-editor-src/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.ts","file:///Users/liza/Desktop/FrontReady/node_modules/monaco-editor/esm/vs/editor/contrib/dropOrPasteInto/browser/vs/editor/contrib/dropOrPasteInto/browser/dropIntoEditorContribution.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorCommand, EditorContributionInstantiation, ServicesAccessor, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\n\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorFeature(DefaultDropProvidersFeature);\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: changeDropTypeCommandId,\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.changeDropType();\n\t}\n});\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.hideDropWidget',\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.clearWidgets();\n\t}\n});\n\nexport type PreferredDropConfiguration = string;\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyMod } from '../../../../base/common/keyCodes.js';\nimport { KeybindingWeight } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ICodeEditor } from '../../../browser/editorBrowser.js';\nimport { EditorCommand, EditorContributionInstantiation, ServicesAccessor, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { registerEditorFeature } from '../../../common/editorFeatures.js';\nimport { DefaultDropProvidersFeature } from './defaultProviders.js';\nimport { DropIntoEditorController, changeDropTypeCommandId, dropWidgetVisibleCtx } from './dropIntoEditorController.js';\n\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController, EditorContributionInstantiation.BeforeFirstInteraction);\nregisterEditorFeature(DefaultDropProvidersFeature);\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: changeDropTypeCommandId,\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.Period,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.changeDropType();\n\t}\n});\n\nregisterEditorCommand(new class extends EditorCommand {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'editor.hideDropWidget',\n\t\t\tprecondition: dropWidgetVisibleCtx,\n\t\t\tkbOpts: {\n\t\t\t\tweight: KeybindingWeight.EditorContrib,\n\t\t\t\tprimary: KeyCode.Escape,\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic override runEditorCommand(_accessor: ServicesAccessor, editor: ICodeEditor, _args: any) {\n\t\tDropIntoEditorController.get(editor)?.clearWidgets();\n\t}\n});\n\nexport type PreferredDropConfiguration = string;\n\n"],"names":[],"mappings":"AAAA;;;gGAGgG;AAKhG,OAAO,EAAE,aAAa,EAAqD,qBAAqB,EAAE,0BAA0B,EAAE,MAAM,sCAAsC,CAAC;AAC3K,OAAO,EAAE,qBAAqB,EAAE,MAAM,mCAAmC,CAAC;AAC1E,OAAO,EAAE,2BAA2B,EAAE,MAAM,uBAAuB,CAAC;AACpE,OAAO,EAAE,wBAAwB,EAAE,uBAAuB,EAAE,oBAAoB,EAAE,MAAM,+BAA+B,CAAC;;;;;IAExH,uNAA0B,EAAC,2PAAwB,CAAC,EAAE,EAAE,2PAAwB,EAAA,EAAA,0DAAA,GAAyD,CAAC;IAC1I,+MAAqB,EAAC,sPAA2B,CAAC,CAAC;IAEnD,kNAAqB,EAAC,IAAI,KAAM,SAAQ,0MAAa;IAYpC,gBAAgB,CAAC,SAA2B,EAAE,MAAmB,EAAE,KAAU,EAAA;;yCAC5F,2PAAwB,CAAC,GAAG,CAAC,MAAM,CAAC,gGAAE,cAAc,EAAE,CAAC;IACxD,CAAC;IAbD,aAAA;QACC,KAAK,CAAC;YACL,EAAE,EAAE,0PAAuB;YAC3B,YAAY,EAAE,uPAAoB;YAClC,MAAM,EAAE;gBACP,MAAM,EAAA,IAAA,kCAAA,EAAgC;gBACtC,OAAO,EAAE,KAAA,kBAAA,MAAA,GAAA,kBAAA,EAA+B;aACxC;SACD,CAAC,CAAC;IACJ,CAAC;CAKD,CAAC,CAAC;AAEH,sNAAqB,EAAC,IAAI,KAAM,SAAQ,0MAAa;IAYpC,gBAAgB,CAAC,SAA2B,EAAE,MAAmB,EAAE,KAAU,EAAA;;oSACpE,CAAC,GAAG,CAAC,MAAM,CAAC,cAApC,kFAAsC,YAAY,EAAE,CAAC;IACtD,CAAC;IAbD,aAAA;QACC,KAAK,CAAC;YACL,EAAE,EAAE,uBAAuB;YAC3B,YAAY,EAAE,uPAAoB;YAClC,MAAM,EAAE;gBACP,MAAM,EAAA,IAAA,kCAAA,EAAgC;gBACtC,OAAO,EAAA,EAAA,kBAAA,EAAgB;aACvB;SACD,CAAC,CAAC;IACJ,CAAC;CAKD,CAAC,CAAC","debugId":null}}]
}